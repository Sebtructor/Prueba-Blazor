!(function (e, t) {
  "object" == typeof module && "object" == typeof module.exports
    ? (module.exports = e.document
        ? t(e, !0)
        : function (e) {
            if (!e.document)
              throw new Error("jQuery requires a window with a document");
            return t(e);
          })
    : t(e);
})("undefined" != typeof window ? window : this, function (e, t) {
  var i = [],
    n = e.document,
    r = i.slice,
    a = i.concat,
    s = i.push,
    o = i.indexOf,
    l = {},
    c = l.toString,
    h = l.hasOwnProperty,
    u = {},
    d = "1.12.4",
    f = function (e, t) {
      return new f.fn.init(e, t);
    },
    p = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,
    g = /^-ms-/,
    m = /-([\da-z])/gi,
    v = function (e, t) {
      return t.toUpperCase();
    };
  (f.fn = f.prototype =
    {
      jquery: d,
      constructor: f,
      selector: "",
      length: 0,
      toArray: function () {
        return r.call(this);
      },
      get: function (e) {
        return null != e
          ? 0 > e
            ? this[e + this.length]
            : this[e]
          : r.call(this);
      },
      pushStack: function (e) {
        var t = f.merge(this.constructor(), e);
        return (t.prevObject = this), (t.context = this.context), t;
      },
      each: function (e) {
        return f.each(this, e);
      },
      map: function (e) {
        return this.pushStack(
          f.map(this, function (t, i) {
            return e.call(t, i, t);
          })
        );
      },
      slice: function () {
        return this.pushStack(r.apply(this, arguments));
      },
      first: function () {
        return this.eq(0);
      },
      last: function () {
        return this.eq(-1);
      },
      eq: function (e) {
        var t = this.length,
          i = +e + (0 > e ? t : 0);
        return this.pushStack(i >= 0 && t > i ? [this[i]] : []);
      },
      end: function () {
        return this.prevObject || this.constructor();
      },
      push: s,
      sort: i.sort,
      splice: i.splice,
    }),
    (f.extend = f.fn.extend =
      function () {
        var e,
          t,
          i,
          n,
          r,
          a,
          s = arguments[0] || {},
          o = 1,
          l = arguments.length,
          c = !1;
        for (
          "boolean" == typeof s && ((c = s), (s = arguments[o] || {}), o++),
            "object" == typeof s || f.isFunction(s) || (s = {}),
            o === l && ((s = this), o--);
          l > o;
          o++
        )
          if (null != (r = arguments[o]))
            for (n in r)
              (e = s[n]),
                s !== (i = r[n]) &&
                  (c && i && (f.isPlainObject(i) || (t = f.isArray(i)))
                    ? (t
                        ? ((t = !1), (a = e && f.isArray(e) ? e : []))
                        : (a = e && f.isPlainObject(e) ? e : {}),
                      (s[n] = f.extend(c, a, i)))
                    : void 0 !== i && (s[n] = i));
        return s;
      }),
    f.extend({
      expando: "jQuery" + (d + Math.random()).replace(/\D/g, ""),
      isReady: !0,
      error: function (e) {
        throw new Error(e);
      },
      noop: function () {},
      isFunction: function (e) {
        return "function" === f.type(e);
      },
      isArray:
        Array.isArray ||
        function (e) {
          return "array" === f.type(e);
        },
      isWindow: function (e) {
        return null != e && e == e.window;
      },
      isNumeric: function (e) {
        var t = e && e.toString();
        return !f.isArray(e) && t - parseFloat(t) + 1 >= 0;
      },
      isEmptyObject: function (e) {
        var t;
        for (t in e) return !1;
        return !0;
      },
      isPlainObject: function (e) {
        var t;
        if (!e || "object" !== f.type(e) || e.nodeType || f.isWindow(e))
          return !1;
        try {
          if (
            e.constructor &&
            !h.call(e, "constructor") &&
            !h.call(e.constructor.prototype, "isPrototypeOf")
          )
            return !1;
        } catch (e) {
          return !1;
        }
        if (!u.ownFirst) for (t in e) return h.call(e, t);
        for (t in e);
        return void 0 === t || h.call(e, t);
      },
      type: function (e) {
        return null == e
          ? e + ""
          : "object" == typeof e || "function" == typeof e
          ? l[c.call(e)] || "object"
          : typeof e;
      },
      globalEval: function (t) {
        t &&
          f.trim(t) &&
          (
            e.execScript ||
            function (t) {
              e.eval.call(e, t);
            }
          )(t);
      },
      camelCase: function (e) {
        return e.replace(g, "ms-").replace(m, v);
      },
      nodeName: function (e, t) {
        return e.nodeName && e.nodeName.toLowerCase() === t.toLowerCase();
      },
      each: function (e, t) {
        var i,
          n = 0;
        if (b(e))
          for (i = e.length; i > n && !1 !== t.call(e[n], n, e[n]); n++);
        else for (n in e) if (!1 === t.call(e[n], n, e[n])) break;
        return e;
      },
      trim: function (e) {
        return null == e ? "" : (e + "").replace(p, "");
      },
      makeArray: function (e, t) {
        var i = t || [];
        return (
          null != e &&
            (b(Object(e))
              ? f.merge(i, "string" == typeof e ? [e] : e)
              : s.call(i, e)),
          i
        );
      },
      inArray: function (e, t, i) {
        var n;
        if (t) {
          if (o) return o.call(t, e, i);
          for (
            n = t.length, i = i ? (0 > i ? Math.max(0, n + i) : i) : 0;
            n > i;
            i++
          )
            if (i in t && t[i] === e) return i;
        }
        return -1;
      },
      merge: function (e, t) {
        for (var i = +t.length, n = 0, r = e.length; i > n; ) e[r++] = t[n++];
        if (i != i) for (; void 0 !== t[n]; ) e[r++] = t[n++];
        return (e.length = r), e;
      },
      grep: function (e, t, i) {
        for (var n = [], r = 0, a = e.length, s = !i; a > r; r++)
          !t(e[r], r) !== s && n.push(e[r]);
        return n;
      },
      map: function (e, t, i) {
        var n,
          r,
          s = 0,
          o = [];
        if (b(e))
          for (n = e.length; n > s; s++)
            null != (r = t(e[s], s, i)) && o.push(r);
        else for (s in e) null != (r = t(e[s], s, i)) && o.push(r);
        return a.apply([], o);
      },
      guid: 1,
      proxy: function (e, t) {
        var i, n, a;
        return (
          "string" == typeof t && ((a = e[t]), (t = e), (e = a)),
          f.isFunction(e)
            ? ((i = r.call(arguments, 2)),
              ((n = function () {
                return e.apply(t || this, i.concat(r.call(arguments)));
              }).guid = e.guid =
                e.guid || f.guid++),
              n)
            : void 0
        );
      },
      now: function () {
        return +new Date();
      },
      support: u,
    }),
    "function" == typeof Symbol && (f.fn[Symbol.iterator] = i[Symbol.iterator]),
    f.each(
      "Boolean Number String Function Array Date RegExp Object Error Symbol".split(
        " "
      ),
      function (e, t) {
        l["[object " + t + "]"] = t.toLowerCase();
      }
    );
  function b(e) {
    var t = !!e && "length" in e && e.length,
      i = f.type(e);
    return "function" === i || f.isWindow(e)
      ? !1
      : "array" === i ||
          0 === t ||
          ("number" == typeof t && t > 0 && t - 1 in e);
  }
  var y = (function (e) {
    var t,
      i,
      n,
      r,
      a,
      s,
      o,
      l,
      c,
      h,
      u,
      d,
      f,
      p,
      g,
      m,
      v,
      b,
      y,
      w = "sizzle" + 1 * new Date(),
      x = e.document,
      k = 0,
      C = 0,
      S = ae(),
      _ = ae(),
      A = ae(),
      F = function (e, t) {
        return e === t && (u = !0), 0;
      },
      T = 1 << 31,
      P = {}.hasOwnProperty,
      E = [],
      I = E.pop,
      D = E.push,
      O = E.push,
      R = E.slice,
      N = function (e, t) {
        for (var i = 0, n = e.length; n > i; i++) if (e[i] === t) return i;
        return -1;
      },
      M =
        "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",
      B = "[\\x20\\t\\r\\n\\f]",
      L = "(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",
      U =
        "\\[" +
        B +
        "*(" +
        L +
        ")(?:" +
        B +
        "*([*^$|!~]?=)" +
        B +
        "*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" +
        L +
        "))|)" +
        B +
        "*\\]",
      z =
        ":(" +
        L +
        ")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|" +
        U +
        ")*)|.*)\\)|)",
      j = new RegExp(B + "+", "g"),
      q = new RegExp("^" + B + "+|((?:^|[^\\\\])(?:\\\\.)*)" + B + "+$", "g"),
      H = new RegExp("^" + B + "*," + B + "*"),
      W = new RegExp("^" + B + "*([>+~]|" + B + ")" + B + "*"),
      G = new RegExp("=" + B + "*([^\\]'\"]*?)" + B + "*\\]", "g"),
      V = new RegExp(z),
      X = new RegExp("^" + L + "$"),
      K = {
        ID: new RegExp("^#(" + L + ")"),
        CLASS: new RegExp("^\\.(" + L + ")"),
        TAG: new RegExp("^(" + L + "|[*])"),
        ATTR: new RegExp("^" + U),
        PSEUDO: new RegExp("^" + z),
        CHILD: new RegExp(
          "^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" +
            B +
            "*(even|odd|(([+-]|)(\\d*)n|)" +
            B +
            "*(?:([+-]|)" +
            B +
            "*(\\d+)|))" +
            B +
            "*\\)|)",
          "i"
        ),
        bool: new RegExp("^(?:" + M + ")$", "i"),
        needsContext: new RegExp(
          "^" +
            B +
            "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" +
            B +
            "*((?:-\\d)?\\d*)" +
            B +
            "*\\)|)(?=[^-]|$)",
          "i"
        ),
      },
      Y = /^(?:input|select|textarea|button)$/i,
      Z = /^h\d$/i,
      J = /^[^{]+\{\s*\[native \w/,
      $ = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,
      Q = /[+~]/,
      ee = /'|\\/g,
      te = new RegExp("\\\\([\\da-f]{1,6}" + B + "?|(" + B + ")|.)", "ig"),
      ie = function (e, t, i) {
        var n = "0x" + t - 65536;
        return n != n || i
          ? t
          : 0 > n
          ? String.fromCharCode(n + 65536)
          : String.fromCharCode((n >> 10) | 55296, (1023 & n) | 56320);
      },
      ne = function () {
        d();
      };
    try {
      O.apply((E = R.call(x.childNodes)), x.childNodes),
        E[x.childNodes.length].nodeType;
    } catch (e) {
      O = {
        apply: E.length
          ? function (e, t) {
              D.apply(e, R.call(t));
            }
          : function (e, t) {
              for (var i = e.length, n = 0; (e[i++] = t[n++]); );
              e.length = i - 1;
            },
      };
    }
    function re(e, t, n, r) {
      var a,
        o,
        c,
        h,
        u,
        p,
        v,
        b,
        k = t && t.ownerDocument,
        C = t ? t.nodeType : 9;
      if (
        ((n = n || []),
        "string" != typeof e || !e || (1 !== C && 9 !== C && 11 !== C))
      )
        return n;
      if (
        !r &&
        ((t ? t.ownerDocument || t : x) !== f && d(t), (t = t || f), g)
      ) {
        if (11 !== C && (p = $.exec(e)))
          if ((a = p[1])) {
            if (9 === C) {
              if (!(c = t.getElementById(a))) return n;
              if (c.id === a) return n.push(c), n;
            } else if (k && (c = k.getElementById(a)) && y(t, c) && c.id === a)
              return n.push(c), n;
          } else {
            if (p[2]) return O.apply(n, t.getElementsByTagName(e)), n;
            if (
              (a = p[3]) &&
              i.getElementsByClassName &&
              t.getElementsByClassName
            )
              return O.apply(n, t.getElementsByClassName(a)), n;
          }
        if (i.qsa && !A[e + " "] && (!m || !m.test(e))) {
          if (1 !== C) (k = t), (b = e);
          else if ("object" !== t.nodeName.toLowerCase()) {
            (h = t.getAttribute("id"))
              ? (h = h.replace(ee, "\\$&"))
              : t.setAttribute("id", (h = w)),
              (o = (v = s(e)).length),
              (u = X.test(h) ? "#" + h : "[id='" + h + "']");
            for (; o--; ) v[o] = u + " " + ge(v[o]);
            (b = v.join(",")), (k = (Q.test(e) && fe(t.parentNode)) || t);
          }
          if (b)
            try {
              return O.apply(n, k.querySelectorAll(b)), n;
            } catch (e) {
            } finally {
              h === w && t.removeAttribute("id");
            }
        }
      }
      return l(e.replace(q, "$1"), t, n, r);
    }
    function ae() {
      var e = [];
      return function t(i, r) {
        return (
          e.push(i + " ") > n.cacheLength && delete t[e.shift()],
          (t[i + " "] = r)
        );
      };
    }
    function se(e) {
      return (e[w] = !0), e;
    }
    function oe(e) {
      var t = f.createElement("div");
      try {
        return !!e(t);
      } catch (e) {
        return !1;
      } finally {
        t.parentNode && t.parentNode.removeChild(t), (t = null);
      }
    }
    function le(e, t) {
      for (var i = e.split("|"), r = i.length; r--; ) n.attrHandle[i[r]] = t;
    }
    function ce(e, t) {
      var i = t && e,
        n =
          i &&
          1 === e.nodeType &&
          1 === t.nodeType &&
          (~t.sourceIndex || T) - (~e.sourceIndex || T);
      if (n) return n;
      if (i) for (; (i = i.nextSibling); ) if (i === t) return -1;
      return e ? 1 : -1;
    }
    function he(e) {
      return function (t) {
        return "input" === t.nodeName.toLowerCase() && t.type === e;
      };
    }
    function ue(e) {
      return function (t) {
        var i = t.nodeName.toLowerCase();
        return ("input" === i || "button" === i) && t.type === e;
      };
    }
    function de(e) {
      return se(function (t) {
        return (
          (t = +t),
          se(function (i, n) {
            for (var r, a = e([], i.length, t), s = a.length; s--; )
              i[(r = a[s])] && (i[r] = !(n[r] = i[r]));
          })
        );
      });
    }
    function fe(e) {
      return e && void 0 !== e.getElementsByTagName && e;
    }
    (i = re.support = {}),
      (a = re.isXML =
        function (e) {
          var t = e && (e.ownerDocument || e).documentElement;
          return t ? "HTML" !== t.nodeName : !1;
        }),
      (d = re.setDocument =
        function (e) {
          var t,
            r,
            s = e ? e.ownerDocument || e : x;
          return s !== f && 9 === s.nodeType && s.documentElement
            ? ((p = (f = s).documentElement),
              (g = !a(f)),
              (r = f.defaultView) &&
                r.top !== r &&
                (r.addEventListener
                  ? r.addEventListener("unload", ne, !1)
                  : r.attachEvent && r.attachEvent("onunload", ne)),
              (i.attributes = oe(function (e) {
                return (e.className = "i"), !e.getAttribute("className");
              })),
              (i.getElementsByTagName = oe(function (e) {
                return (
                  e.appendChild(f.createComment("")),
                  !e.getElementsByTagName("*").length
                );
              })),
              (i.getElementsByClassName = J.test(f.getElementsByClassName)),
              (i.getById = oe(function (e) {
                return (
                  (p.appendChild(e).id = w),
                  !f.getElementsByName || !f.getElementsByName(w).length
                );
              })),
              i.getById
                ? ((n.find.ID = function (e, t) {
                    if (void 0 !== t.getElementById && g) {
                      var i = t.getElementById(e);
                      return i ? [i] : [];
                    }
                  }),
                  (n.filter.ID = function (e) {
                    var t = e.replace(te, ie);
                    return function (e) {
                      return e.getAttribute("id") === t;
                    };
                  }))
                : (delete n.find.ID,
                  (n.filter.ID = function (e) {
                    var t = e.replace(te, ie);
                    return function (e) {
                      var i =
                        void 0 !== e.getAttributeNode &&
                        e.getAttributeNode("id");
                      return i && i.value === t;
                    };
                  })),
              (n.find.TAG = i.getElementsByTagName
                ? function (e, t) {
                    return void 0 !== t.getElementsByTagName
                      ? t.getElementsByTagName(e)
                      : i.qsa
                      ? t.querySelectorAll(e)
                      : void 0;
                  }
                : function (e, t) {
                    var i,
                      n = [],
                      r = 0,
                      a = t.getElementsByTagName(e);
                    if ("*" === e) {
                      for (; (i = a[r++]); ) 1 === i.nodeType && n.push(i);
                      return n;
                    }
                    return a;
                  }),
              (n.find.CLASS =
                i.getElementsByClassName &&
                function (e, t) {
                  return void 0 !== t.getElementsByClassName && g
                    ? t.getElementsByClassName(e)
                    : void 0;
                }),
              (v = []),
              (m = []),
              (i.qsa = J.test(f.querySelectorAll)) &&
                (oe(function (e) {
                  (p.appendChild(e).innerHTML =
                    "<a id='" +
                    w +
                    "'></a><select id='" +
                    w +
                    "-\r\\' msallowcapture=''><option selected=''></option></select>"),
                    e.querySelectorAll("[msallowcapture^='']").length &&
                      m.push("[*^$]=" + B + "*(?:''|\"\")"),
                    e.querySelectorAll("[selected]").length ||
                      m.push("\\[" + B + "*(?:value|" + M + ")"),
                    e.querySelectorAll("[id~=" + w + "-]").length ||
                      m.push("~="),
                    e.querySelectorAll(":checked").length || m.push(":checked"),
                    e.querySelectorAll("a#" + w + "+*").length ||
                      m.push(".#.+[+~]");
                }),
                oe(function (e) {
                  var t = f.createElement("input");
                  t.setAttribute("type", "hidden"),
                    e.appendChild(t).setAttribute("name", "D"),
                    e.querySelectorAll("[name=d]").length &&
                      m.push("name" + B + "*[*^$|!~]?="),
                    e.querySelectorAll(":enabled").length ||
                      m.push(":enabled", ":disabled"),
                    e.querySelectorAll("*,:x"),
                    m.push(",.*:");
                })),
              (i.matchesSelector = J.test(
                (b =
                  p.matches ||
                  p.webkitMatchesSelector ||
                  p.mozMatchesSelector ||
                  p.oMatchesSelector ||
                  p.msMatchesSelector)
              )) &&
                oe(function (e) {
                  (i.disconnectedMatch = b.call(e, "div")),
                    b.call(e, "[s!='']:x"),
                    v.push("!=", z);
                }),
              (m = m.length && new RegExp(m.join("|"))),
              (v = v.length && new RegExp(v.join("|"))),
              (t = J.test(p.compareDocumentPosition)),
              (y =
                t || J.test(p.contains)
                  ? function (e, t) {
                      var i = 9 === e.nodeType ? e.documentElement : e,
                        n = t && t.parentNode;
                      return (
                        e === n ||
                        !(
                          !n ||
                          1 !== n.nodeType ||
                          !(i.contains
                            ? i.contains(n)
                            : e.compareDocumentPosition &&
                              16 & e.compareDocumentPosition(n))
                        )
                      );
                    }
                  : function (e, t) {
                      if (t)
                        for (; (t = t.parentNode); ) if (t === e) return !0;
                      return !1;
                    }),
              (F = t
                ? function (e, t) {
                    if (e === t) return (u = !0), 0;
                    var n =
                      !e.compareDocumentPosition - !t.compareDocumentPosition;
                    return n
                      ? n
                      : 1 &
                          (n =
                            (e.ownerDocument || e) === (t.ownerDocument || t)
                              ? e.compareDocumentPosition(t)
                              : 1) ||
                        (!i.sortDetached && t.compareDocumentPosition(e) === n)
                      ? e === f || (e.ownerDocument === x && y(x, e))
                        ? -1
                        : t === f || (t.ownerDocument === x && y(x, t))
                        ? 1
                        : h
                        ? N(h, e) - N(h, t)
                        : 0
                      : 4 & n
                      ? -1
                      : 1;
                  }
                : function (e, t) {
                    if (e === t) return (u = !0), 0;
                    var i,
                      n = 0,
                      r = e.parentNode,
                      a = t.parentNode,
                      s = [e],
                      o = [t];
                    if (!r || !a)
                      return e === f
                        ? -1
                        : t === f
                        ? 1
                        : r
                        ? -1
                        : a
                        ? 1
                        : h
                        ? N(h, e) - N(h, t)
                        : 0;
                    if (r === a) return ce(e, t);
                    i = e;
                    for (; (i = i.parentNode); ) s.unshift(i);
                    i = t;
                    for (; (i = i.parentNode); ) o.unshift(i);
                    for (; s[n] === o[n]; ) n++;
                    return n
                      ? ce(s[n], o[n])
                      : s[n] === x
                      ? -1
                      : o[n] === x
                      ? 1
                      : 0;
                  }),
              f)
            : f;
        }),
      (re.matches = function (e, t) {
        return re(e, null, null, t);
      }),
      (re.matchesSelector = function (e, t) {
        if (
          ((e.ownerDocument || e) !== f && d(e),
          (t = t.replace(G, "='$1']")),
          i.matchesSelector &&
            g &&
            !A[t + " "] &&
            (!v || !v.test(t)) &&
            (!m || !m.test(t)))
        )
          try {
            var n = b.call(e, t);
            if (
              n ||
              i.disconnectedMatch ||
              (e.document && 11 !== e.document.nodeType)
            )
              return n;
          } catch (e) {}
        return re(t, f, null, [e]).length > 0;
      }),
      (re.contains = function (e, t) {
        return (e.ownerDocument || e) !== f && d(e), y(e, t);
      }),
      (re.attr = function (e, t) {
        (e.ownerDocument || e) !== f && d(e);
        var r = n.attrHandle[t.toLowerCase()],
          a = r && P.call(n.attrHandle, t.toLowerCase()) ? r(e, t, !g) : void 0;
        return void 0 !== a
          ? a
          : i.attributes || !g
          ? e.getAttribute(t)
          : (a = e.getAttributeNode(t)) && a.specified
          ? a.value
          : null;
      }),
      (re.error = function (e) {
        throw new Error("Syntax error, unrecognized expression: " + e);
      }),
      (re.uniqueSort = function (e) {
        var t,
          n = [],
          r = 0,
          a = 0;
        if (
          ((u = !i.detectDuplicates),
          (h = !i.sortStable && e.slice(0)),
          e.sort(F),
          u)
        ) {
          for (; (t = e[a++]); ) t === e[a] && (r = n.push(a));
          for (; r--; ) e.splice(n[r], 1);
        }
        return (h = null), e;
      }),
      (r = re.getText =
        function (e) {
          var t,
            i = "",
            n = 0,
            a = e.nodeType;
          if (a) {
            if (1 === a || 9 === a || 11 === a) {
              if ("string" == typeof e.textContent) return e.textContent;
              for (e = e.firstChild; e; e = e.nextSibling) i += r(e);
            } else if (3 === a || 4 === a) return e.nodeValue;
          } else for (; (t = e[n++]); ) i += r(t);
          return i;
        }),
      ((n = re.selectors =
        {
          cacheLength: 50,
          createPseudo: se,
          match: K,
          attrHandle: {},
          find: {},
          relative: {
            ">": { dir: "parentNode", first: !0 },
            " ": { dir: "parentNode" },
            "+": { dir: "previousSibling", first: !0 },
            "~": { dir: "previousSibling" },
          },
          preFilter: {
            ATTR: function (e) {
              return (
                (e[1] = e[1].replace(te, ie)),
                (e[3] = (e[3] || e[4] || e[5] || "").replace(te, ie)),
                "~=" === e[2] && (e[3] = " " + e[3] + " "),
                e.slice(0, 4)
              );
            },
            CHILD: function (e) {
              return (
                (e[1] = e[1].toLowerCase()),
                "nth" === e[1].slice(0, 3)
                  ? (e[3] || re.error(e[0]),
                    (e[4] = +(e[4]
                      ? e[5] + (e[6] || 1)
                      : 2 * ("even" === e[3] || "odd" === e[3]))),
                    (e[5] = +(e[7] + e[8] || "odd" === e[3])))
                  : e[3] && re.error(e[0]),
                e
              );
            },
            PSEUDO: function (e) {
              var t,
                i = !e[6] && e[2];
              return K.CHILD.test(e[0])
                ? null
                : (e[3]
                    ? (e[2] = e[4] || e[5] || "")
                    : i &&
                      V.test(i) &&
                      (t = s(i, !0)) &&
                      (t = i.indexOf(")", i.length - t) - i.length) &&
                      ((e[0] = e[0].slice(0, t)), (e[2] = i.slice(0, t))),
                  e.slice(0, 3));
            },
          },
          filter: {
            TAG: function (e) {
              var t = e.replace(te, ie).toLowerCase();
              return "*" === e
                ? function () {
                    return !0;
                  }
                : function (e) {
                    return e.nodeName && e.nodeName.toLowerCase() === t;
                  };
            },
            CLASS: function (e) {
              var t = S[e + " "];
              return (
                t ||
                ((t = new RegExp("(^|" + B + ")" + e + "(" + B + "|$)")) &&
                  S(e, function (e) {
                    return t.test(
                      ("string" == typeof e.className && e.className) ||
                        (void 0 !== e.getAttribute &&
                          e.getAttribute("class")) ||
                        ""
                    );
                  }))
              );
            },
            ATTR: function (e, t, i) {
              return function (n) {
                var r = re.attr(n, e);
                return null == r
                  ? "!=" === t
                  : t
                  ? ((r += ""),
                    "=" === t
                      ? r === i
                      : "!=" === t
                      ? r !== i
                      : "^=" === t
                      ? i && 0 === r.indexOf(i)
                      : "*=" === t
                      ? i && r.indexOf(i) > -1
                      : "$=" === t
                      ? i && r.slice(-i.length) === i
                      : "~=" === t
                      ? (" " + r.replace(j, " ") + " ").indexOf(i) > -1
                      : "|=" === t
                      ? r === i || r.slice(0, i.length + 1) === i + "-"
                      : !1)
                  : !0;
              };
            },
            CHILD: function (e, t, i, n, r) {
              var a = "nth" !== e.slice(0, 3),
                s = "last" !== e.slice(-4),
                o = "of-type" === t;
              return 1 === n && 0 === r
                ? function (e) {
                    return !!e.parentNode;
                  }
                : function (t, i, l) {
                    var c,
                      h,
                      u,
                      d,
                      f,
                      p,
                      g = a !== s ? "nextSibling" : "previousSibling",
                      m = t.parentNode,
                      v = o && t.nodeName.toLowerCase(),
                      b = !l && !o,
                      y = !1;
                    if (m) {
                      if (a) {
                        for (; g; ) {
                          d = t;
                          for (; (d = d[g]); )
                            if (
                              o
                                ? d.nodeName.toLowerCase() === v
                                : 1 === d.nodeType
                            )
                              return !1;
                          p = g = "only" === e && !p && "nextSibling";
                        }
                        return !0;
                      }
                      if (((p = [s ? m.firstChild : m.lastChild]), s && b)) {
                        (y =
                          (f =
                            (c =
                              (h =
                                (u = (d = m)[w] || (d[w] = {}))[d.uniqueID] ||
                                (u[d.uniqueID] = {}))[e] || [])[0] === k &&
                            c[1]) && c[2]),
                          (d = f && m.childNodes[f]);
                        for (
                          ;
                          (d = (++f && d && d[g]) || (y = f = 0) || p.pop());

                        )
                          if (1 === d.nodeType && ++y && d === t) {
                            h[e] = [k, f, y];
                            break;
                          }
                      } else if (
                        (b &&
                          (y = f =
                            (c =
                              (h =
                                (u = (d = t)[w] || (d[w] = {}))[d.uniqueID] ||
                                (u[d.uniqueID] = {}))[e] || [])[0] === k &&
                            c[1]),
                        !1 === y)
                      )
                        for (
                          ;
                          (d = (++f && d && d[g]) || (y = f = 0) || p.pop()) &&
                          ((o
                            ? d.nodeName.toLowerCase() !== v
                            : 1 !== d.nodeType) ||
                            !++y ||
                            (b &&
                              ((h =
                                (u = d[w] || (d[w] = {}))[d.uniqueID] ||
                                (u[d.uniqueID] = {}))[e] = [k, y]),
                            d !== t));

                        );
                      return (y -= r) === n || (y % n == 0 && y / n >= 0);
                    }
                  };
            },
            PSEUDO: function (e, t) {
              var i,
                r =
                  n.pseudos[e] ||
                  n.setFilters[e.toLowerCase()] ||
                  re.error("unsupported pseudo: " + e);
              return r[w]
                ? r(t)
                : r.length > 1
                ? ((i = [e, e, "", t]),
                  n.setFilters.hasOwnProperty(e.toLowerCase())
                    ? se(function (e, i) {
                        for (var n, a = r(e, t), s = a.length; s--; )
                          e[(n = N(e, a[s]))] = !(i[n] = a[s]);
                      })
                    : function (e) {
                        return r(e, 0, i);
                      })
                : r;
            },
          },
          pseudos: {
            not: se(function (e) {
              var t = [],
                i = [],
                n = o(e.replace(q, "$1"));
              return n[w]
                ? se(function (e, t, i, r) {
                    for (var a, s = n(e, null, r, []), o = e.length; o--; )
                      (a = s[o]) && (e[o] = !(t[o] = a));
                  })
                : function (e, r, a) {
                    return (
                      (t[0] = e), n(t, null, a, i), (t[0] = null), !i.pop()
                    );
                  };
            }),
            has: se(function (e) {
              return function (t) {
                return re(e, t).length > 0;
              };
            }),
            contains: se(function (e) {
              return (
                (e = e.replace(te, ie)),
                function (t) {
                  return (t.textContent || t.innerText || r(t)).indexOf(e) > -1;
                }
              );
            }),
            lang: se(function (e) {
              return (
                X.test(e || "") || re.error("unsupported lang: " + e),
                (e = e.replace(te, ie).toLowerCase()),
                function (t) {
                  var i;
                  do {
                    if (
                      (i = g
                        ? t.lang
                        : t.getAttribute("xml:lang") || t.getAttribute("lang"))
                    )
                      return (
                        (i = i.toLowerCase()) === e || 0 === i.indexOf(e + "-")
                      );
                  } while ((t = t.parentNode) && 1 === t.nodeType);
                  return !1;
                }
              );
            }),
            target: function (t) {
              var i = e.location && e.location.hash;
              return i && i.slice(1) === t.id;
            },
            root: function (e) {
              return e === p;
            },
            focus: function (e) {
              return (
                e === f.activeElement &&
                (!f.hasFocus || f.hasFocus()) &&
                !!(e.type || e.href || ~e.tabIndex)
              );
            },
            enabled: function (e) {
              return !1 === e.disabled;
            },
            disabled: function (e) {
              return !0 === e.disabled;
            },
            checked: function (e) {
              var t = e.nodeName.toLowerCase();
              return (
                ("input" === t && !!e.checked) ||
                ("option" === t && !!e.selected)
              );
            },
            selected: function (e) {
              return (
                e.parentNode && e.parentNode.selectedIndex, !0 === e.selected
              );
            },
            empty: function (e) {
              for (e = e.firstChild; e; e = e.nextSibling)
                if (e.nodeType < 6) return !1;
              return !0;
            },
            parent: function (e) {
              return !n.pseudos.empty(e);
            },
            header: function (e) {
              return Z.test(e.nodeName);
            },
            input: function (e) {
              return Y.test(e.nodeName);
            },
            button: function (e) {
              var t = e.nodeName.toLowerCase();
              return ("input" === t && "button" === e.type) || "button" === t;
            },
            text: function (e) {
              var t;
              return (
                "input" === e.nodeName.toLowerCase() &&
                "text" === e.type &&
                (null == (t = e.getAttribute("type")) ||
                  "text" === t.toLowerCase())
              );
            },
            first: de(function () {
              return [0];
            }),
            last: de(function (e, t) {
              return [t - 1];
            }),
            eq: de(function (e, t, i) {
              return [0 > i ? i + t : i];
            }),
            even: de(function (e, t) {
              for (var i = 0; t > i; i += 2) e.push(i);
              return e;
            }),
            odd: de(function (e, t) {
              for (var i = 1; t > i; i += 2) e.push(i);
              return e;
            }),
            lt: de(function (e, t, i) {
              for (var n = 0 > i ? i + t : i; --n >= 0; ) e.push(n);
              return e;
            }),
            gt: de(function (e, t, i) {
              for (var n = 0 > i ? i + t : i; ++n < t; ) e.push(n);
              return e;
            }),
          },
        }).pseudos.nth = n.pseudos.eq);
    for (t in { radio: !0, checkbox: !0, file: !0, password: !0, image: !0 })
      n.pseudos[t] = he(t);
    for (t in { submit: !0, reset: !0 }) n.pseudos[t] = ue(t);
    function pe() {}
    (pe.prototype = n.filters = n.pseudos),
      (n.setFilters = new pe()),
      (s = re.tokenize =
        function (e, t) {
          var i,
            r,
            a,
            s,
            o,
            l,
            c,
            h = _[e + " "];
          if (h) return t ? 0 : h.slice(0);
          (o = e), (l = []), (c = n.preFilter);
          for (; o; ) {
            (i && !(r = H.exec(o))) ||
              (r && (o = o.slice(r[0].length) || o), l.push((a = []))),
              (i = !1),
              (r = W.exec(o)) &&
                ((i = r.shift()),
                a.push({ value: i, type: r[0].replace(q, " ") }),
                (o = o.slice(i.length)));
            for (s in n.filter)
              !(r = K[s].exec(o)) ||
                (c[s] && !(r = c[s](r))) ||
                ((i = r.shift()),
                a.push({ value: i, type: s, matches: r }),
                (o = o.slice(i.length)));
            if (!i) break;
          }
          return t ? o.length : o ? re.error(e) : _(e, l).slice(0);
        });
    function ge(e) {
      for (var t = 0, i = e.length, n = ""; i > t; t++) n += e[t].value;
      return n;
    }
    function me(e, t, i) {
      var n = t.dir,
        r = i && "parentNode" === n,
        a = C++;
      return t.first
        ? function (t, i, a) {
            for (; (t = t[n]); ) if (1 === t.nodeType || r) return e(t, i, a);
          }
        : function (t, i, s) {
            var o,
              l,
              c,
              h = [k, a];
            if (s) {
              for (; (t = t[n]); )
                if ((1 === t.nodeType || r) && e(t, i, s)) return !0;
            } else
              for (; (t = t[n]); )
                if (1 === t.nodeType || r) {
                  if (
                    (o = (l =
                      (c = t[w] || (t[w] = {}))[t.uniqueID] ||
                      (c[t.uniqueID] = {}))[n]) &&
                    o[0] === k &&
                    o[1] === a
                  )
                    return (h[2] = o[2]);
                  if (((l[n] = h), (h[2] = e(t, i, s)))) return !0;
                }
          };
    }
    function ve(e) {
      return e.length > 1
        ? function (t, i, n) {
            for (var r = e.length; r--; ) if (!e[r](t, i, n)) return !1;
            return !0;
          }
        : e[0];
    }
    function be(e, t, i, n, r) {
      for (var a, s = [], o = 0, l = e.length, c = null != t; l > o; o++)
        (a = e[o]) && ((i && !i(a, n, r)) || (s.push(a), c && t.push(o)));
      return s;
    }
    function ye(e, t, i, n, r, a) {
      return (
        n && !n[w] && (n = ye(n)),
        r && !r[w] && (r = ye(r, a)),
        se(function (a, s, o, l) {
          var c,
            h,
            u,
            d = [],
            f = [],
            p = s.length,
            g =
              a ||
              (function (e, t, i) {
                for (var n = 0, r = t.length; r > n; n++) re(e, t[n], i);
                return i;
              })(t || "*", o.nodeType ? [o] : o, []),
            m = !e || (!a && t) ? g : be(g, d, e, o, l),
            v = i ? (r || (a ? e : p || n) ? [] : s) : m;
          if ((i && i(m, v, o, l), n)) {
            (c = be(v, f)), n(c, [], o, l), (h = c.length);
            for (; h--; ) (u = c[h]) && (v[f[h]] = !(m[f[h]] = u));
          }
          if (a) {
            if (r || e) {
              if (r) {
                (c = []), (h = v.length);
                for (; h--; ) (u = v[h]) && c.push((m[h] = u));
                r(null, (v = []), c, l);
              }
              h = v.length;
              for (; h--; )
                (u = v[h]) &&
                  (c = r ? N(a, u) : d[h]) > -1 &&
                  (a[c] = !(s[c] = u));
            }
          } else (v = be(v === s ? v.splice(p, v.length) : v)), r ? r(null, s, v, l) : O.apply(s, v);
        })
      );
    }
    function we(e) {
      for (
        var t,
          i,
          r,
          a = e.length,
          s = n.relative[e[0].type],
          o = s || n.relative[" "],
          l = s ? 1 : 0,
          h = me(
            function (e) {
              return e === t;
            },
            o,
            !0
          ),
          u = me(
            function (e) {
              return N(t, e) > -1;
            },
            o,
            !0
          ),
          d = [
            function (e, i, n) {
              var r =
                (!s && (n || i !== c)) ||
                ((t = i).nodeType ? h(e, i, n) : u(e, i, n));
              return (t = null), r;
            },
          ];
        a > l;
        l++
      )
        if ((i = n.relative[e[l].type])) d = [me(ve(d), i)];
        else {
          if ((i = n.filter[e[l].type].apply(null, e[l].matches))[w]) {
            for (r = ++l; a > r && !n.relative[e[r].type]; r++);
            return ye(
              l > 1 && ve(d),
              l > 1 &&
                ge(
                  e
                    .slice(0, l - 1)
                    .concat({ value: " " === e[l - 2].type ? "*" : "" })
                ).replace(q, "$1"),
              i,
              r > l && we(e.slice(l, r)),
              a > r && we((e = e.slice(r))),
              a > r && ge(e)
            );
          }
          d.push(i);
        }
      return ve(d);
    }
    function xe(e, t) {
      var i = t.length > 0,
        r = e.length > 0,
        a = function (a, s, o, l, h) {
          var u,
            p,
            m,
            v = 0,
            b = "0",
            y = a && [],
            w = [],
            x = c,
            C = a || (r && n.find.TAG("*", h)),
            S = (k += null == x ? 1 : Math.random() || 0.1),
            _ = C.length;
          for (
            h && (c = s === f || s || h);
            b !== _ && null != (u = C[b]);
            b++
          ) {
            if (r && u) {
              (p = 0), s || u.ownerDocument === f || (d(u), (o = !g));
              for (; (m = e[p++]); )
                if (m(u, s || f, o)) {
                  l.push(u);
                  break;
                }
              h && (k = S);
            }
            i && ((u = !m && u) && v--, a && y.push(u));
          }
          if (((v += b), i && b !== v)) {
            p = 0;
            for (; (m = t[p++]); ) m(y, w, s, o);
            if (a) {
              if (v > 0) for (; b--; ) y[b] || w[b] || (w[b] = I.call(l));
              w = be(w);
            }
            O.apply(l, w),
              h && !a && w.length > 0 && v + t.length > 1 && re.uniqueSort(l);
          }
          return h && ((k = S), (c = x)), y;
        };
      return i ? se(a) : a;
    }
    return (
      (o = re.compile =
        function (e, t) {
          var i,
            n = [],
            r = [],
            a = A[e + " "];
          if (!a) {
            t || (t = s(e)), (i = t.length);
            for (; i--; ) (a = we(t[i]))[w] ? n.push(a) : r.push(a);
            (a = A(e, xe(r, n))).selector = e;
          }
          return a;
        }),
      (l = re.select =
        function (e, t, r, a) {
          var l,
            c,
            h,
            u,
            d,
            f = "function" == typeof e && e,
            p = !a && s((e = f.selector || e));
          if (((r = r || []), 1 === p.length)) {
            if (
              (c = p[0] = p[0].slice(0)).length > 2 &&
              "ID" === (h = c[0]).type &&
              i.getById &&
              9 === t.nodeType &&
              g &&
              n.relative[c[1].type]
            ) {
              if (!(t = (n.find.ID(h.matches[0].replace(te, ie), t) || [])[0]))
                return r;
              f && (t = t.parentNode), (e = e.slice(c.shift().value.length));
            }
            l = K.needsContext.test(e) ? 0 : c.length;
            for (; l-- && ((h = c[l]), !n.relative[(u = h.type)]); )
              if (
                (d = n.find[u]) &&
                (a = d(
                  h.matches[0].replace(te, ie),
                  (Q.test(c[0].type) && fe(t.parentNode)) || t
                ))
              ) {
                if ((c.splice(l, 1), !(e = a.length && ge(c))))
                  return O.apply(r, a), r;
                break;
              }
          }
          return (
            (f || o(e, p))(
              a,
              t,
              !g,
              r,
              !t || (Q.test(e) && fe(t.parentNode)) || t
            ),
            r
          );
        }),
      (i.sortStable = w.split("").sort(F).join("") === w),
      (i.detectDuplicates = !!u),
      d(),
      (i.sortDetached = oe(function (e) {
        return 1 & e.compareDocumentPosition(f.createElement("div"));
      })),
      oe(function (e) {
        return (
          (e.innerHTML = "<a href='#'></a>"),
          "#" === e.firstChild.getAttribute("href")
        );
      }) ||
        le("type|href|height|width", function (e, t, i) {
          return i
            ? void 0
            : e.getAttribute(t, "type" === t.toLowerCase() ? 1 : 2);
        }),
      (i.attributes &&
        oe(function (e) {
          return (
            (e.innerHTML = "<input/>"),
            e.firstChild.setAttribute("value", ""),
            "" === e.firstChild.getAttribute("value")
          );
        })) ||
        le("value", function (e, t, i) {
          return i || "input" !== e.nodeName.toLowerCase()
            ? void 0
            : e.defaultValue;
        }),
      oe(function (e) {
        return null == e.getAttribute("disabled");
      }) ||
        le(M, function (e, t, i) {
          var n;
          return i
            ? void 0
            : !0 === e[t]
            ? t.toLowerCase()
            : (n = e.getAttributeNode(t)) && n.specified
            ? n.value
            : null;
        }),
      re
    );
  })(e);
  (f.find = y),
    (f.expr = y.selectors),
    (f.expr[":"] = f.expr.pseudos),
    (f.uniqueSort = f.unique = y.uniqueSort),
    (f.text = y.getText),
    (f.isXMLDoc = y.isXML),
    (f.contains = y.contains);
  var w = function (e, t, i) {
      for (var n = [], r = void 0 !== i; (e = e[t]) && 9 !== e.nodeType; )
        if (1 === e.nodeType) {
          if (r && f(e).is(i)) break;
          n.push(e);
        }
      return n;
    },
    x = function (e, t) {
      for (var i = []; e; e = e.nextSibling)
        1 === e.nodeType && e !== t && i.push(e);
      return i;
    },
    k = f.expr.match.needsContext,
    C = /^<([\w-]+)\s*\/?>(?:<\/\1>|)$/,
    S = /^.[^:#\[\.,]*$/;
  function _(e, t, i) {
    if (f.isFunction(t))
      return f.grep(e, function (e, n) {
        return !!t.call(e, n, e) !== i;
      });
    if (t.nodeType)
      return f.grep(e, function (e) {
        return (e === t) !== i;
      });
    if ("string" == typeof t) {
      if (S.test(t)) return f.filter(t, e, i);
      t = f.filter(t, e);
    }
    return f.grep(e, function (e) {
      return f.inArray(e, t) > -1 !== i;
    });
  }
  (f.filter = function (e, t, i) {
    var n = t[0];
    return (
      i && (e = ":not(" + e + ")"),
      1 === t.length && 1 === n.nodeType
        ? f.find.matchesSelector(n, e)
          ? [n]
          : []
        : f.find.matches(
            e,
            f.grep(t, function (e) {
              return 1 === e.nodeType;
            })
          )
    );
  }),
    f.fn.extend({
      find: function (e) {
        var t,
          i = [],
          n = this,
          r = n.length;
        if ("string" != typeof e)
          return this.pushStack(
            f(e).filter(function () {
              for (t = 0; r > t; t++) if (f.contains(n[t], this)) return !0;
            })
          );
        for (t = 0; r > t; t++) f.find(e, n[t], i);
        return (
          ((i = this.pushStack(r > 1 ? f.unique(i) : i)).selector = this
            .selector
            ? this.selector + " " + e
            : e),
          i
        );
      },
      filter: function (e) {
        return this.pushStack(_(this, e || [], !1));
      },
      not: function (e) {
        return this.pushStack(_(this, e || [], !0));
      },
      is: function (e) {
        return !!_(this, "string" == typeof e && k.test(e) ? f(e) : e || [], !1)
          .length;
      },
    });
  var A,
    F = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/;
  ((f.fn.init = function (e, t, i) {
    var r, a;
    if (!e) return this;
    if (((i = i || A), "string" == typeof e)) {
      if (
        !(r =
          "<" === e.charAt(0) && ">" === e.charAt(e.length - 1) && e.length >= 3
            ? [null, e, null]
            : F.exec(e)) ||
        (!r[1] && t)
      )
        return !t || t.jquery ? (t || i).find(e) : this.constructor(t).find(e);
      if (r[1]) {
        if (
          ((t = t instanceof f ? t[0] : t),
          f.merge(
            this,
            f.parseHTML(r[1], t && t.nodeType ? t.ownerDocument || t : n, !0)
          ),
          C.test(r[1]) && f.isPlainObject(t))
        )
          for (r in t)
            f.isFunction(this[r]) ? this[r](t[r]) : this.attr(r, t[r]);
        return this;
      }
      if ((a = n.getElementById(r[2])) && a.parentNode) {
        if (a.id !== r[2]) return A.find(e);
        (this.length = 1), (this[0] = a);
      }
      return (this.context = n), (this.selector = e), this;
    }
    return e.nodeType
      ? ((this.context = this[0] = e), (this.length = 1), this)
      : f.isFunction(e)
      ? void 0 !== i.ready
        ? i.ready(e)
        : e(f)
      : (void 0 !== e.selector &&
          ((this.selector = e.selector), (this.context = e.context)),
        f.makeArray(e, this));
  }).prototype = f.fn),
    (A = f(n));
  var T = /^(?:parents|prev(?:Until|All))/,
    P = { children: !0, contents: !0, next: !0, prev: !0 };
  f.fn.extend({
    has: function (e) {
      var t,
        i = f(e, this),
        n = i.length;
      return this.filter(function () {
        for (t = 0; n > t; t++) if (f.contains(this, i[t])) return !0;
      });
    },
    closest: function (e, t) {
      for (
        var i,
          n = 0,
          r = this.length,
          a = [],
          s = k.test(e) || "string" != typeof e ? f(e, t || this.context) : 0;
        r > n;
        n++
      )
        for (i = this[n]; i && i !== t; i = i.parentNode)
          if (
            i.nodeType < 11 &&
            (s
              ? s.index(i) > -1
              : 1 === i.nodeType && f.find.matchesSelector(i, e))
          ) {
            a.push(i);
            break;
          }
      return this.pushStack(a.length > 1 ? f.uniqueSort(a) : a);
    },
    index: function (e) {
      return e
        ? "string" == typeof e
          ? f.inArray(this[0], f(e))
          : f.inArray(e.jquery ? e[0] : e, this)
        : this[0] && this[0].parentNode
        ? this.first().prevAll().length
        : -1;
    },
    add: function (e, t) {
      return this.pushStack(f.uniqueSort(f.merge(this.get(), f(e, t))));
    },
    addBack: function (e) {
      return this.add(null == e ? this.prevObject : this.prevObject.filter(e));
    },
  });
  function E(e, t) {
    do {
      e = e[t];
    } while (e && 1 !== e.nodeType);
    return e;
  }
  f.each(
    {
      parent: function (e) {
        var t = e.parentNode;
        return t && 11 !== t.nodeType ? t : null;
      },
      parents: function (e) {
        return w(e, "parentNode");
      },
      parentsUntil: function (e, t, i) {
        return w(e, "parentNode", i);
      },
      next: function (e) {
        return E(e, "nextSibling");
      },
      prev: function (e) {
        return E(e, "previousSibling");
      },
      nextAll: function (e) {
        return w(e, "nextSibling");
      },
      prevAll: function (e) {
        return w(e, "previousSibling");
      },
      nextUntil: function (e, t, i) {
        return w(e, "nextSibling", i);
      },
      prevUntil: function (e, t, i) {
        return w(e, "previousSibling", i);
      },
      siblings: function (e) {
        return x((e.parentNode || {}).firstChild, e);
      },
      children: function (e) {
        return x(e.firstChild);
      },
      contents: function (e) {
        return f.nodeName(e, "iframe")
          ? e.contentDocument || e.contentWindow.document
          : f.merge([], e.childNodes);
      },
    },
    function (e, t) {
      f.fn[e] = function (i, n) {
        var r = f.map(this, t, i);
        return (
          "Until" !== e.slice(-5) && (n = i),
          n && "string" == typeof n && (r = f.filter(n, r)),
          this.length > 1 &&
            (P[e] || (r = f.uniqueSort(r)), T.test(e) && (r = r.reverse())),
          this.pushStack(r)
        );
      };
    }
  );
  var I,
    D,
    O = /\S+/g;
  (f.Callbacks = function (e) {
    e =
      "string" == typeof e
        ? (function (e) {
            var t = {};
            return (
              f.each(e.match(O) || [], function (e, i) {
                t[i] = !0;
              }),
              t
            );
          })(e)
        : f.extend({}, e);
    var t,
      i,
      n,
      r,
      a = [],
      s = [],
      o = -1,
      l = function () {
        for (r = e.once, n = t = !0; s.length; o = -1) {
          i = s.shift();
          for (; ++o < a.length; )
            !1 === a[o].apply(i[0], i[1]) &&
              e.stopOnFalse &&
              ((o = a.length), (i = !1));
        }
        e.memory || (i = !1), (t = !1), r && (a = i ? [] : "");
      },
      c = {
        add: function () {
          return (
            a &&
              (i && !t && ((o = a.length - 1), s.push(i)),
              (function t(i) {
                f.each(i, function (i, n) {
                  f.isFunction(n)
                    ? (e.unique && c.has(n)) || a.push(n)
                    : n && n.length && "string" !== f.type(n) && t(n);
                });
              })(arguments),
              i && !t && l()),
            this
          );
        },
        remove: function () {
          return (
            f.each(arguments, function (e, t) {
              for (var i; (i = f.inArray(t, a, i)) > -1; )
                a.splice(i, 1), o >= i && o--;
            }),
            this
          );
        },
        has: function (e) {
          return e ? f.inArray(e, a) > -1 : a.length > 0;
        },
        empty: function () {
          return a && (a = []), this;
        },
        disable: function () {
          return (r = s = []), (a = i = ""), this;
        },
        disabled: function () {
          return !a;
        },
        lock: function () {
          return (r = !0), i || c.disable(), this;
        },
        locked: function () {
          return !!r;
        },
        fireWith: function (e, i) {
          return (
            r ||
              ((i = [e, (i = i || []).slice ? i.slice() : i]),
              s.push(i),
              t || l()),
            this
          );
        },
        fire: function () {
          return c.fireWith(this, arguments), this;
        },
        fired: function () {
          return !!n;
        },
      };
    return c;
  }),
    f.extend({
      Deferred: function (e) {
        var t = [
            ["resolve", "done", f.Callbacks("once memory"), "resolved"],
            ["reject", "fail", f.Callbacks("once memory"), "rejected"],
            ["notify", "progress", f.Callbacks("memory")],
          ],
          i = "pending",
          n = {
            state: function () {
              return i;
            },
            always: function () {
              return r.done(arguments).fail(arguments), this;
            },
            then: function () {
              var e = arguments;
              return f
                .Deferred(function (i) {
                  f.each(t, function (t, a) {
                    var s = f.isFunction(e[t]) && e[t];
                    r[a[1]](function () {
                      var e = s && s.apply(this, arguments);
                      e && f.isFunction(e.promise)
                        ? e
                            .promise()
                            .progress(i.notify)
                            .done(i.resolve)
                            .fail(i.reject)
                        : i[a[0] + "With"](
                            this === n ? i.promise() : this,
                            s ? [e] : arguments
                          );
                    });
                  }),
                    (e = null);
                })
                .promise();
            },
            promise: function (e) {
              return null != e ? f.extend(e, n) : n;
            },
          },
          r = {};
        return (
          (n.pipe = n.then),
          f.each(t, function (e, a) {
            var s = a[2],
              o = a[3];
            (n[a[1]] = s.add),
              o &&
                s.add(
                  function () {
                    i = o;
                  },
                  t[1 ^ e][2].disable,
                  t[2][2].lock
                ),
              (r[a[0]] = function () {
                return r[a[0] + "With"](this === r ? n : this, arguments), this;
              }),
              (r[a[0] + "With"] = s.fireWith);
          }),
          n.promise(r),
          e && e.call(r, r),
          r
        );
      },
      when: function (e) {
        var t,
          i,
          n,
          a = 0,
          s = r.call(arguments),
          o = s.length,
          l = 1 !== o || (e && f.isFunction(e.promise)) ? o : 0,
          c = 1 === l ? e : f.Deferred(),
          h = function (e, i, n) {
            return function (a) {
              (i[e] = this),
                (n[e] = arguments.length > 1 ? r.call(arguments) : a),
                n === t ? c.notifyWith(i, n) : --l || c.resolveWith(i, n);
            };
          };
        if (o > 1)
          for (t = new Array(o), i = new Array(o), n = new Array(o); o > a; a++)
            s[a] && f.isFunction(s[a].promise)
              ? s[a]
                  .promise()
                  .progress(h(a, i, t))
                  .done(h(a, n, s))
                  .fail(c.reject)
              : --l;
        return l || c.resolveWith(n, s), c.promise();
      },
    });
  (f.fn.ready = function (e) {
    return f.ready.promise().done(e), this;
  }),
    f.extend({
      isReady: !1,
      readyWait: 1,
      holdReady: function (e) {
        e ? f.readyWait++ : f.ready(!0);
      },
      ready: function (e) {
        (!0 === e ? --f.readyWait : f.isReady) ||
          ((f.isReady = !0),
          (!0 !== e && --f.readyWait > 0) ||
            (I.resolveWith(n, [f]),
            f.fn.triggerHandler &&
              (f(n).triggerHandler("ready"), f(n).off("ready"))));
      },
    });
  function R() {
    n.addEventListener
      ? (n.removeEventListener("DOMContentLoaded", N),
        e.removeEventListener("load", N))
      : (n.detachEvent("onreadystatechange", N), e.detachEvent("onload", N));
  }
  function N() {
    (n.addEventListener ||
      "load" === e.event.type ||
      "complete" === n.readyState) &&
      (R(), f.ready());
  }
  (f.ready.promise = function (t) {
    if (!I)
      if (
        ((I = f.Deferred()),
        "complete" === n.readyState ||
          ("loading" !== n.readyState && !n.documentElement.doScroll))
      )
        e.setTimeout(f.ready);
      else if (n.addEventListener)
        n.addEventListener("DOMContentLoaded", N),
          e.addEventListener("load", N);
      else {
        n.attachEvent("onreadystatechange", N), e.attachEvent("onload", N);
        var i = !1;
        try {
          i = null == e.frameElement && n.documentElement;
        } catch (e) {}
        i &&
          i.doScroll &&
          (function t() {
            if (!f.isReady) {
              try {
                i.doScroll("left");
              } catch (i) {
                return e.setTimeout(t, 50);
              }
              R(), f.ready();
            }
          })();
      }
    return I.promise(t);
  }),
    f.ready.promise();
  for (D in f(u)) break;
  (u.ownFirst = "0" === D),
    (u.inlineBlockNeedsLayout = !1),
    f(function () {
      var e, t, i, r;
      (i = n.getElementsByTagName("body")[0]) &&
        i.style &&
        ((t = n.createElement("div")),
        ((r = n.createElement("div")).style.cssText =
          "position:absolute;border:0;width:0;height:0;top:0;left:-9999px"),
        i.appendChild(r).appendChild(t),
        void 0 !== t.style.zoom &&
          ((t.style.cssText =
            "display:inline;margin:0;border:0;padding:1px;width:1px;zoom:1"),
          (u.inlineBlockNeedsLayout = e = 3 === t.offsetWidth),
          e && (i.style.zoom = 1)),
        i.removeChild(r));
    }),
    (function () {
      var e = n.createElement("div");
      u.deleteExpando = !0;
      try {
        delete e.test;
      } catch (e) {
        u.deleteExpando = !1;
      }
      e = null;
    })();
  var M = function (e) {
      var t = f.noData[(e.nodeName + " ").toLowerCase()],
        i = +e.nodeType || 1;
      return 1 !== i && 9 !== i
        ? !1
        : !t || (!0 !== t && e.getAttribute("classid") === t);
    },
    B = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
    L = /([A-Z])/g;
  function U(e, t, i) {
    if (void 0 === i && 1 === e.nodeType) {
      var n = "data-" + t.replace(L, "-$1").toLowerCase();
      if ("string" == typeof (i = e.getAttribute(n))) {
        try {
          i =
            "true" === i
              ? !0
              : "false" === i
              ? !1
              : "null" === i
              ? null
              : +i + "" === i
              ? +i
              : B.test(i)
              ? f.parseJSON(i)
              : i;
        } catch (e) {}
        f.data(e, t, i);
      } else i = void 0;
    }
    return i;
  }
  function z(e) {
    var t;
    for (t in e)
      if (("data" !== t || !f.isEmptyObject(e[t])) && "toJSON" !== t) return !1;
    return !0;
  }
  function j(e, t, n, r) {
    if (M(e)) {
      var a,
        s,
        o = f.expando,
        l = e.nodeType,
        c = l ? f.cache : e,
        h = l ? e[o] : e[o] && o;
      if (
        (h && c[h] && (r || c[h].data)) ||
        void 0 !== n ||
        "string" != typeof t
      )
        return (
          h || (h = l ? (e[o] = i.pop() || f.guid++) : o),
          c[h] || (c[h] = l ? {} : { toJSON: f.noop }),
          ("object" != typeof t && "function" != typeof t) ||
            (r
              ? (c[h] = f.extend(c[h], t))
              : (c[h].data = f.extend(c[h].data, t))),
          (s = c[h]),
          r || (s.data || (s.data = {}), (s = s.data)),
          void 0 !== n && (s[f.camelCase(t)] = n),
          "string" == typeof t
            ? null == (a = s[t]) && (a = s[f.camelCase(t)])
            : (a = s),
          a
        );
    }
  }
  function q(e, t, i) {
    if (M(e)) {
      var n,
        r,
        a = e.nodeType,
        s = a ? f.cache : e,
        o = a ? e[f.expando] : f.expando;
      if (s[o]) {
        if (t && (n = i ? s[o] : s[o].data)) {
          f.isArray(t)
            ? (t = t.concat(f.map(t, f.camelCase)))
            : t in n
            ? (t = [t])
            : (t = (t = f.camelCase(t)) in n ? [t] : t.split(" ")),
            (r = t.length);
          for (; r--; ) delete n[t[r]];
          if (i ? !z(n) : !f.isEmptyObject(n)) return;
        }
        (i || (delete s[o].data, z(s[o]))) &&
          (a
            ? f.cleanData([e], !0)
            : u.deleteExpando || s != s.window
            ? delete s[o]
            : (s[o] = void 0));
      }
    }
  }
  f.extend({
    cache: {},
    noData: {
      "applet ": !0,
      "embed ": !0,
      "object ": "clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",
    },
    hasData: function (e) {
      return !!(e = e.nodeType ? f.cache[e[f.expando]] : e[f.expando]) && !z(e);
    },
    data: function (e, t, i) {
      return j(e, t, i);
    },
    removeData: function (e, t) {
      return q(e, t);
    },
    _data: function (e, t, i) {
      return j(e, t, i, !0);
    },
    _removeData: function (e, t) {
      return q(e, t, !0);
    },
  }),
    f.fn.extend({
      data: function (e, t) {
        var i,
          n,
          r,
          a = this[0],
          s = a && a.attributes;
        if (void 0 === e) {
          if (
            this.length &&
            ((r = f.data(a)), 1 === a.nodeType && !f._data(a, "parsedAttrs"))
          ) {
            i = s.length;
            for (; i--; )
              s[i] &&
                0 === (n = s[i].name).indexOf("data-") &&
                U(a, (n = f.camelCase(n.slice(5))), r[n]);
            f._data(a, "parsedAttrs", !0);
          }
          return r;
        }
        return "object" == typeof e
          ? this.each(function () {
              f.data(this, e);
            })
          : arguments.length > 1
          ? this.each(function () {
              f.data(this, e, t);
            })
          : a
          ? U(a, e, f.data(a, e))
          : void 0;
      },
      removeData: function (e) {
        return this.each(function () {
          f.removeData(this, e);
        });
      },
    }),
    f.extend({
      queue: function (e, t, i) {
        var n;
        return e
          ? ((t = (t || "fx") + "queue"),
            (n = f._data(e, t)),
            i &&
              (!n || f.isArray(i)
                ? (n = f._data(e, t, f.makeArray(i)))
                : n.push(i)),
            n || [])
          : void 0;
      },
      dequeue: function (e, t) {
        t = t || "fx";
        var i = f.queue(e, t),
          n = i.length,
          r = i.shift(),
          a = f._queueHooks(e, t);
        "inprogress" === r && ((r = i.shift()), n--),
          r &&
            ("fx" === t && i.unshift("inprogress"),
            delete a.stop,
            r.call(
              e,
              function () {
                f.dequeue(e, t);
              },
              a
            )),
          !n && a && a.empty.fire();
      },
      _queueHooks: function (e, t) {
        var i = t + "queueHooks";
        return (
          f._data(e, i) ||
          f._data(e, i, {
            empty: f.Callbacks("once memory").add(function () {
              f._removeData(e, t + "queue"), f._removeData(e, i);
            }),
          })
        );
      },
    }),
    f.fn.extend({
      queue: function (e, t) {
        var i = 2;
        return (
          "string" != typeof e && ((t = e), (e = "fx"), i--),
          arguments.length < i
            ? f.queue(this[0], e)
            : void 0 === t
            ? this
            : this.each(function () {
                var i = f.queue(this, e, t);
                f._queueHooks(this, e),
                  "fx" === e && "inprogress" !== i[0] && f.dequeue(this, e);
              })
        );
      },
      dequeue: function (e) {
        return this.each(function () {
          f.dequeue(this, e);
        });
      },
      clearQueue: function (e) {
        return this.queue(e || "fx", []);
      },
      promise: function (e, t) {
        var i,
          n = 1,
          r = f.Deferred(),
          a = this,
          s = this.length,
          o = function () {
            --n || r.resolveWith(a, [a]);
          };
        "string" != typeof e && ((t = e), (e = void 0)), (e = e || "fx");
        for (; s--; )
          (i = f._data(a[s], e + "queueHooks")) &&
            i.empty &&
            (n++, i.empty.add(o));
        return o(), r.promise(t);
      },
    }),
    (function () {
      var e;
      u.shrinkWrapBlocks = function () {
        if (null != e) return e;
        e = !1;
        var t, i, r;
        return (i = n.getElementsByTagName("body")[0]) && i.style
          ? ((t = n.createElement("div")),
            ((r = n.createElement("div")).style.cssText =
              "position:absolute;border:0;width:0;height:0;top:0;left:-9999px"),
            i.appendChild(r).appendChild(t),
            void 0 !== t.style.zoom &&
              ((t.style.cssText =
                "-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:1px;width:1px;zoom:1"),
              (t.appendChild(n.createElement("div")).style.width = "5px"),
              (e = 3 !== t.offsetWidth)),
            i.removeChild(r),
            e)
          : void 0;
      };
    })();
  var H = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,
    W = new RegExp("^(?:([+-])=|)(" + H + ")([a-z%]*)$", "i"),
    G = ["Top", "Right", "Bottom", "Left"],
    V = function (e, t) {
      return (
        (e = t || e),
        "none" === f.css(e, "display") || !f.contains(e.ownerDocument, e)
      );
    };
  function X(e, t, i, n) {
    var r,
      a = 1,
      s = 20,
      o = n
        ? function () {
            return n.cur();
          }
        : function () {
            return f.css(e, t, "");
          },
      l = o(),
      c = (i && i[3]) || (f.cssNumber[t] ? "" : "px"),
      h = (f.cssNumber[t] || ("px" !== c && +l)) && W.exec(f.css(e, t));
    if (h && h[3] !== c) {
      (c = c || h[3]), (i = i || []), (h = +l || 1);
      do {
        (h /= a = a || ".5"), f.style(e, t, h + c);
      } while (a !== (a = o() / l) && 1 !== a && --s);
    }
    return (
      i &&
        ((h = +h || +l || 0),
        (r = i[1] ? h + (i[1] + 1) * i[2] : +i[2]),
        n && ((n.unit = c), (n.start = h), (n.end = r))),
      r
    );
  }
  var K = function (e, t, i, n, r, a, s) {
      var o = 0,
        l = e.length,
        c = null == i;
      if ("object" === f.type(i)) {
        r = !0;
        for (o in i) K(e, t, o, i[o], !0, a, s);
      } else if (
        void 0 !== n &&
        ((r = !0),
        f.isFunction(n) || (s = !0),
        c &&
          (s
            ? (t.call(e, n), (t = null))
            : ((c = t),
              (t = function (e, t, i) {
                return c.call(f(e), i);
              }))),
        t)
      )
        for (; l > o; o++) t(e[o], i, s ? n : n.call(e[o], o, t(e[o], i)));
      return r ? e : c ? t.call(e) : l ? t(e[0], i) : a;
    },
    Y = /^(?:checkbox|radio)$/i,
    Z = /<([\w:-]+)/,
    J = /^$|\/(?:java|ecma)script/i,
    $ = /^\s+/,
    Q =
      "abbr|article|aside|audio|bdi|canvas|data|datalist|details|dialog|figcaption|figure|footer|header|hgroup|main|mark|meter|nav|output|picture|progress|section|summary|template|time|video";
  function ee(e) {
    var t = Q.split("|"),
      i = e.createDocumentFragment();
    if (i.createElement) for (; t.length; ) i.createElement(t.pop());
    return i;
  }
  !(function () {
    var e = n.createElement("div"),
      t = n.createDocumentFragment(),
      i = n.createElement("input");
    (e.innerHTML =
      "  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>"),
      (u.leadingWhitespace = 3 === e.firstChild.nodeType),
      (u.tbody = !e.getElementsByTagName("tbody").length),
      (u.htmlSerialize = !!e.getElementsByTagName("link").length),
      (u.html5Clone =
        "<:nav></:nav>" !== n.createElement("nav").cloneNode(!0).outerHTML),
      (i.type = "checkbox"),
      (i.checked = !0),
      t.appendChild(i),
      (u.appendChecked = i.checked),
      (e.innerHTML = "<textarea>x</textarea>"),
      (u.noCloneChecked = !!e.cloneNode(!0).lastChild.defaultValue),
      t.appendChild(e),
      (i = n.createElement("input")).setAttribute("type", "radio"),
      i.setAttribute("checked", "checked"),
      i.setAttribute("name", "t"),
      e.appendChild(i),
      (u.checkClone = e.cloneNode(!0).cloneNode(!0).lastChild.checked),
      (u.noCloneEvent = !!e.addEventListener),
      (e[f.expando] = 1),
      (u.attributes = !e.getAttribute(f.expando));
  })();
  var te = {
    option: [1, "<select multiple='multiple'>", "</select>"],
    legend: [1, "<fieldset>", "</fieldset>"],
    area: [1, "<map>", "</map>"],
    param: [1, "<object>", "</object>"],
    thead: [1, "<table>", "</table>"],
    tr: [2, "<table><tbody>", "</tbody></table>"],
    col: [2, "<table><tbody></tbody><colgroup>", "</colgroup></table>"],
    td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
    _default: u.htmlSerialize ? [0, "", ""] : [1, "X<div>", "</div>"],
  };
  (te.optgroup = te.option),
    (te.tbody = te.tfoot = te.colgroup = te.caption = te.thead),
    (te.th = te.td);
  function ie(e, t) {
    var i,
      n,
      r = 0,
      a =
        void 0 !== e.getElementsByTagName
          ? e.getElementsByTagName(t || "*")
          : void 0 !== e.querySelectorAll
          ? e.querySelectorAll(t || "*")
          : void 0;
    if (!a)
      for (a = [], i = e.childNodes || e; null != (n = i[r]); r++)
        !t || f.nodeName(n, t) ? a.push(n) : f.merge(a, ie(n, t));
    return void 0 === t || (t && f.nodeName(e, t)) ? f.merge([e], a) : a;
  }
  function ne(e, t) {
    for (var i, n = 0; null != (i = e[n]); n++)
      f._data(i, "globalEval", !t || f._data(t[n], "globalEval"));
  }
  var re = /<|&#?\w+;/,
    ae = /<tbody/i;
  function se(e) {
    Y.test(e.type) && (e.defaultChecked = e.checked);
  }
  function oe(e, t, i, n, r) {
    for (
      var a, s, o, l, c, h, d, p = e.length, g = ee(t), m = [], v = 0;
      p > v;
      v++
    )
      if ((s = e[v]) || 0 === s)
        if ("object" === f.type(s)) f.merge(m, s.nodeType ? [s] : s);
        else if (re.test(s)) {
          (l = l || g.appendChild(t.createElement("div"))),
            (c = (Z.exec(s) || ["", ""])[1].toLowerCase()),
            (d = te[c] || te._default),
            (l.innerHTML = d[1] + f.htmlPrefilter(s) + d[2]),
            (a = d[0]);
          for (; a--; ) l = l.lastChild;
          if (
            (!u.leadingWhitespace &&
              $.test(s) &&
              m.push(t.createTextNode($.exec(s)[0])),
            !u.tbody)
          ) {
            a =
              (s =
                "table" !== c || ae.test(s)
                  ? "<table>" !== d[1] || ae.test(s)
                    ? 0
                    : l
                  : l.firstChild) && s.childNodes.length;
            for (; a--; )
              f.nodeName((h = s.childNodes[a]), "tbody") &&
                !h.childNodes.length &&
                s.removeChild(h);
          }
          f.merge(m, l.childNodes), (l.textContent = "");
          for (; l.firstChild; ) l.removeChild(l.firstChild);
          l = g.lastChild;
        } else m.push(t.createTextNode(s));
    l && g.removeChild(l),
      u.appendChecked || f.grep(ie(m, "input"), se),
      (v = 0);
    for (; (s = m[v++]); )
      if (n && f.inArray(s, n) > -1) r && r.push(s);
      else if (
        ((o = f.contains(s.ownerDocument, s)),
        (l = ie(g.appendChild(s), "script")),
        o && ne(l),
        i)
      ) {
        a = 0;
        for (; (s = l[a++]); ) J.test(s.type || "") && i.push(s);
      }
    return (l = null), g;
  }
  !(function () {
    var t,
      i,
      r = n.createElement("div");
    for (t in { submit: !0, change: !0, focusin: !0 })
      (i = "on" + t),
        (u[t] = i in e) ||
          (r.setAttribute(i, "t"), (u[t] = !1 === r.attributes[i].expando));
    r = null;
  })();
  var le = /^(?:input|select|textarea)$/i,
    ce = /^key/,
    he = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,
    ue = /^(?:focusinfocus|focusoutblur)$/,
    de = /^([^.]*)(?:\.(.+)|)/;
  function fe() {
    return !0;
  }
  function pe() {
    return !1;
  }
  function ge() {
    try {
      return n.activeElement;
    } catch (e) {}
  }
  function me(e, t, i, n, r, a) {
    var s, o;
    if ("object" == typeof t) {
      "string" != typeof i && ((n = n || i), (i = void 0));
      for (o in t) me(e, o, i, n, t[o], a);
      return e;
    }
    if (
      (null == n && null == r
        ? ((r = i), (n = i = void 0))
        : null == r &&
          ("string" == typeof i
            ? ((r = n), (n = void 0))
            : ((r = n), (n = i), (i = void 0))),
      !1 === r)
    )
      r = pe;
    else if (!r) return e;
    return (
      1 === a &&
        ((s = r),
        ((r = function (e) {
          return f().off(e), s.apply(this, arguments);
        }).guid = s.guid || (s.guid = f.guid++))),
      e.each(function () {
        f.event.add(this, t, r, n, i);
      })
    );
  }
  (f.event = {
    global: {},
    add: function (e, t, i, n, r) {
      var a,
        s,
        o,
        l,
        c,
        h,
        u,
        d,
        p,
        g,
        m,
        v = f._data(e);
      if (v) {
        i.handler && ((i = (l = i).handler), (r = l.selector)),
          i.guid || (i.guid = f.guid++),
          (s = v.events) || (s = v.events = {}),
          (h = v.handle) ||
            ((h = v.handle =
              function (e) {
                return void 0 === f || (e && f.event.triggered === e.type)
                  ? void 0
                  : f.event.dispatch.apply(h.elem, arguments);
              }).elem = e),
          (o = (t = (t || "").match(O) || [""]).length);
        for (; o--; )
          (p = m = (a = de.exec(t[o]) || [])[1]),
            (g = (a[2] || "").split(".").sort()),
            p &&
              ((c = f.event.special[p] || {}),
              (p = (r ? c.delegateType : c.bindType) || p),
              (c = f.event.special[p] || {}),
              (u = f.extend(
                {
                  type: p,
                  origType: m,
                  data: n,
                  handler: i,
                  guid: i.guid,
                  selector: r,
                  needsContext: r && f.expr.match.needsContext.test(r),
                  namespace: g.join("."),
                },
                l
              )),
              (d = s[p]) ||
                (((d = s[p] = []).delegateCount = 0),
                (c.setup && !1 !== c.setup.call(e, n, g, h)) ||
                  (e.addEventListener
                    ? e.addEventListener(p, h, !1)
                    : e.attachEvent && e.attachEvent("on" + p, h))),
              c.add &&
                (c.add.call(e, u), u.handler.guid || (u.handler.guid = i.guid)),
              r ? d.splice(d.delegateCount++, 0, u) : d.push(u),
              (f.event.global[p] = !0));
        e = null;
      }
    },
    remove: function (e, t, i, n, r) {
      var a,
        s,
        o,
        l,
        c,
        h,
        u,
        d,
        p,
        g,
        m,
        v = f.hasData(e) && f._data(e);
      if (v && (h = v.events)) {
        c = (t = (t || "").match(O) || [""]).length;
        for (; c--; )
          if (
            ((p = m = (o = de.exec(t[c]) || [])[1]),
            (g = (o[2] || "").split(".").sort()),
            p)
          ) {
            (u = f.event.special[p] || {}),
              (d = h[(p = (n ? u.delegateType : u.bindType) || p)] || []),
              (o =
                o[2] &&
                new RegExp("(^|\\.)" + g.join("\\.(?:.*\\.|)") + "(\\.|$)")),
              (l = a = d.length);
            for (; a--; )
              (s = d[a]),
                (!r && m !== s.origType) ||
                  (i && i.guid !== s.guid) ||
                  (o && !o.test(s.namespace)) ||
                  (n && n !== s.selector && ("**" !== n || !s.selector)) ||
                  (d.splice(a, 1),
                  s.selector && d.delegateCount--,
                  u.remove && u.remove.call(e, s));
            l &&
              !d.length &&
              ((u.teardown && !1 !== u.teardown.call(e, g, v.handle)) ||
                f.removeEvent(e, p, v.handle),
              delete h[p]);
          } else for (p in h) f.event.remove(e, p + t[c], i, n, !0);
        f.isEmptyObject(h) && (delete v.handle, f._removeData(e, "events"));
      }
    },
    trigger: function (t, i, r, a) {
      var s,
        o,
        l,
        c,
        u,
        d,
        p,
        g = [r || n],
        m = h.call(t, "type") ? t.type : t,
        v = h.call(t, "namespace") ? t.namespace.split(".") : [];
      if (
        ((l = d = r = r || n),
        3 !== r.nodeType &&
          8 !== r.nodeType &&
          !ue.test(m + f.event.triggered) &&
          (m.indexOf(".") > -1 &&
            ((v = m.split(".")), (m = v.shift()), v.sort()),
          (o = m.indexOf(":") < 0 && "on" + m),
          ((t = t[f.expando]
            ? t
            : new f.Event(m, "object" == typeof t && t)).isTrigger = a ? 2 : 3),
          (t.namespace = v.join(".")),
          (t.rnamespace = t.namespace
            ? new RegExp("(^|\\.)" + v.join("\\.(?:.*\\.|)") + "(\\.|$)")
            : null),
          (t.result = void 0),
          t.target || (t.target = r),
          (i = null == i ? [t] : f.makeArray(i, [t])),
          (u = f.event.special[m] || {}),
          a || !u.trigger || !1 !== u.trigger.apply(r, i)))
      ) {
        if (!a && !u.noBubble && !f.isWindow(r)) {
          for (
            c = u.delegateType || m, ue.test(c + m) || (l = l.parentNode);
            l;
            l = l.parentNode
          )
            g.push(l), (d = l);
          d === (r.ownerDocument || n) &&
            g.push(d.defaultView || d.parentWindow || e);
        }
        p = 0;
        for (; (l = g[p++]) && !t.isPropagationStopped(); )
          (t.type = p > 1 ? c : u.bindType || m),
            (s =
              (f._data(l, "events") || {})[t.type] && f._data(l, "handle")) &&
              s.apply(l, i),
            (s = o && l[o]) &&
              s.apply &&
              M(l) &&
              ((t.result = s.apply(l, i)),
              !1 === t.result && t.preventDefault());
        if (
          ((t.type = m),
          !a &&
            !t.isDefaultPrevented() &&
            (!u._default || !1 === u._default.apply(g.pop(), i)) &&
            M(r) &&
            o &&
            r[m] &&
            !f.isWindow(r))
        ) {
          (d = r[o]) && (r[o] = null), (f.event.triggered = m);
          try {
            r[m]();
          } catch (e) {}
          (f.event.triggered = void 0), d && (r[o] = d);
        }
        return t.result;
      }
    },
    dispatch: function (e) {
      e = f.event.fix(e);
      var t,
        i,
        n,
        a,
        s,
        o = [],
        l = r.call(arguments),
        c = (f._data(this, "events") || {})[e.type] || [],
        h = f.event.special[e.type] || {};
      if (
        ((l[0] = e),
        (e.delegateTarget = this),
        !h.preDispatch || !1 !== h.preDispatch.call(this, e))
      ) {
        (o = f.event.handlers.call(this, e, c)), (t = 0);
        for (; (a = o[t++]) && !e.isPropagationStopped(); ) {
          (e.currentTarget = a.elem), (i = 0);
          for (; (s = a.handlers[i++]) && !e.isImmediatePropagationStopped(); )
            (e.rnamespace && !e.rnamespace.test(s.namespace)) ||
              ((e.handleObj = s),
              (e.data = s.data),
              void 0 !==
                (n = (
                  (f.event.special[s.origType] || {}).handle || s.handler
                ).apply(a.elem, l)) &&
                !1 === (e.result = n) &&
                (e.preventDefault(), e.stopPropagation()));
        }
        return h.postDispatch && h.postDispatch.call(this, e), e.result;
      }
    },
    handlers: function (e, t) {
      var i,
        n,
        r,
        a,
        s = [],
        o = t.delegateCount,
        l = e.target;
      if (
        o &&
        l.nodeType &&
        ("click" !== e.type || isNaN(e.button) || e.button < 1)
      )
        for (; l != this; l = l.parentNode || this)
          if (1 === l.nodeType && (!0 !== l.disabled || "click" !== e.type)) {
            for (n = [], i = 0; o > i; i++)
              void 0 === n[(r = (a = t[i]).selector + " ")] &&
                (n[r] = a.needsContext
                  ? f(r, this).index(l) > -1
                  : f.find(r, this, null, [l]).length),
                n[r] && n.push(a);
            n.length && s.push({ elem: l, handlers: n });
          }
      return o < t.length && s.push({ elem: this, handlers: t.slice(o) }), s;
    },
    fix: function (e) {
      if (e[f.expando]) return e;
      var t,
        i,
        r,
        a = e.type,
        s = e,
        o = this.fixHooks[a];
      o ||
        (this.fixHooks[a] = o =
          he.test(a) ? this.mouseHooks : ce.test(a) ? this.keyHooks : {}),
        (r = o.props ? this.props.concat(o.props) : this.props),
        (e = new f.Event(s)),
        (t = r.length);
      for (; t--; ) e[(i = r[t])] = s[i];
      return (
        e.target || (e.target = s.srcElement || n),
        3 === e.target.nodeType && (e.target = e.target.parentNode),
        (e.metaKey = !!e.metaKey),
        o.filter ? o.filter(e, s) : e
      );
    },
    props:
      "altKey bubbles cancelable ctrlKey currentTarget detail eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(
        " "
      ),
    fixHooks: {},
    keyHooks: {
      props: "char charCode key keyCode".split(" "),
      filter: function (e, t) {
        return (
          null == e.which &&
            (e.which = null != t.charCode ? t.charCode : t.keyCode),
          e
        );
      },
    },
    mouseHooks: {
      props:
        "button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(
          " "
        ),
      filter: function (e, t) {
        var i,
          r,
          a,
          s = t.button,
          o = t.fromElement;
        return (
          null == e.pageX &&
            null != t.clientX &&
            ((a = (r = e.target.ownerDocument || n).documentElement),
            (i = r.body),
            (e.pageX =
              t.clientX +
              ((a && a.scrollLeft) || (i && i.scrollLeft) || 0) -
              ((a && a.clientLeft) || (i && i.clientLeft) || 0)),
            (e.pageY =
              t.clientY +
              ((a && a.scrollTop) || (i && i.scrollTop) || 0) -
              ((a && a.clientTop) || (i && i.clientTop) || 0))),
          !e.relatedTarget &&
            o &&
            (e.relatedTarget = o === e.target ? t.toElement : o),
          e.which ||
            void 0 === s ||
            (e.which = 1 & s ? 1 : 2 & s ? 3 : 4 & s ? 2 : 0),
          e
        );
      },
    },
    special: {
      load: { noBubble: !0 },
      focus: {
        trigger: function () {
          if (this !== ge() && this.focus)
            try {
              return this.focus(), !1;
            } catch (e) {}
        },
        delegateType: "focusin",
      },
      blur: {
        trigger: function () {
          return this === ge() && this.blur ? (this.blur(), !1) : void 0;
        },
        delegateType: "focusout",
      },
      click: {
        trigger: function () {
          return f.nodeName(this, "input") &&
            "checkbox" === this.type &&
            this.click
            ? (this.click(), !1)
            : void 0;
        },
        _default: function (e) {
          return f.nodeName(e.target, "a");
        },
      },
      beforeunload: {
        
      },
    },
    simulate: function (e, t, i) {
      var n = f.extend(new f.Event(), i, { type: e, isSimulated: !0 });
      f.event.trigger(n, null, t), n.isDefaultPrevented() && i.preventDefault();
    },
  }),
    (f.removeEvent = n.removeEventListener
      ? function (e, t, i) {
          e.removeEventListener && e.removeEventListener(t, i);
        }
      : function (e, t, i) {
          var n = "on" + t;
          e.detachEvent &&
            (void 0 === e[n] && (e[n] = null), e.detachEvent(n, i));
        }),
    (f.Event = function (e, t) {
      return this instanceof f.Event
        ? (e && e.type
            ? ((this.originalEvent = e),
              (this.type = e.type),
              (this.isDefaultPrevented =
                e.defaultPrevented ||
                (void 0 === e.defaultPrevented && !1 === e.returnValue)
                  ? fe
                  : pe))
            : (this.type = e),
          t && f.extend(this, t),
          (this.timeStamp = (e && e.timeStamp) || f.now()),
          void (this[f.expando] = !0))
        : new f.Event(e, t);
    }),
    (f.Event.prototype = {
      constructor: f.Event,
      isDefaultPrevented: pe,
      isPropagationStopped: pe,
      isImmediatePropagationStopped: pe,
      preventDefault: function () {
        var e = this.originalEvent;
        (this.isDefaultPrevented = fe),
          e && (e.preventDefault ? e.preventDefault() : (e.returnValue = !1));
      },
      stopPropagation: function () {
        var e = this.originalEvent;
        (this.isPropagationStopped = fe),
          e &&
            !this.isSimulated &&
            (e.stopPropagation && e.stopPropagation(), (e.cancelBubble = !0));
      },
      stopImmediatePropagation: function () {
        var e = this.originalEvent;
        (this.isImmediatePropagationStopped = fe),
          e && e.stopImmediatePropagation && e.stopImmediatePropagation(),
          this.stopPropagation();
      },
    }),
    f.each(
      {
        mouseenter: "mouseover",
        mouseleave: "mouseout",
        pointerenter: "pointerover",
        pointerleave: "pointerout",
      },
      function (e, t) {
        f.event.special[e] = {
          delegateType: t,
          bindType: t,
          handle: function (e) {
            var i,
              n = this,
              r = e.relatedTarget,
              a = e.handleObj;
            return (
              (r && (r === n || f.contains(n, r))) ||
                ((e.type = a.origType),
                (i = a.handler.apply(this, arguments)),
                (e.type = t)),
              i
            );
          },
        };
      }
    ),
    u.submit ||
      (f.event.special.submit = {
        setup: function () {
          return f.nodeName(this, "form")
            ? !1
            : void f.event.add(
                this,
                "click._submit keypress._submit",
                function (e) {
                  var t = e.target,
                    i =
                      f.nodeName(t, "input") || f.nodeName(t, "button")
                        ? f.prop(t, "form")
                        : void 0;
                  i &&
                    !f._data(i, "submit") &&
                    (f.event.add(i, "submit._submit", function (e) {
                      e._submitBubble = !0;
                    }),
                    f._data(i, "submit", !0));
                }
              );
        },
        postDispatch: function (e) {
          e._submitBubble &&
            (delete e._submitBubble,
            this.parentNode &&
              !e.isTrigger &&
              f.event.simulate("submit", this.parentNode, e));
        },
        teardown: function () {
          return f.nodeName(this, "form")
            ? !1
            : void f.event.remove(this, "._submit");
        },
      }),
    u.change ||
      (f.event.special.change = {
        setup: function () {
          return le.test(this.nodeName)
            ? (("checkbox" !== this.type && "radio" !== this.type) ||
                (f.event.add(this, "propertychange._change", function (e) {
                  "checked" === e.originalEvent.propertyName &&
                    (this._justChanged = !0);
                }),
                f.event.add(this, "click._change", function (e) {
                  this._justChanged && !e.isTrigger && (this._justChanged = !1),
                    f.event.simulate("change", this, e);
                })),
              !1)
            : void f.event.add(this, "beforeactivate._change", function (e) {
                var t = e.target;
                le.test(t.nodeName) &&
                  !f._data(t, "change") &&
                  (f.event.add(t, "change._change", function (e) {
                    !this.parentNode ||
                      e.isSimulated ||
                      e.isTrigger ||
                      f.event.simulate("change", this.parentNode, e);
                  }),
                  f._data(t, "change", !0));
              });
        },
        handle: function (e) {
          var t = e.target;
          return this !== t ||
            e.isSimulated ||
            e.isTrigger ||
            ("radio" !== t.type && "checkbox" !== t.type)
            ? e.handleObj.handler.apply(this, arguments)
            : void 0;
        },
        teardown: function () {
          return f.event.remove(this, "._change"), !le.test(this.nodeName);
        },
      }),
    u.focusin ||
      f.each({ focus: "focusin", blur: "focusout" }, function (e, t) {
        var i = function (e) {
          f.event.simulate(t, e.target, f.event.fix(e));
        };
        f.event.special[t] = {
          setup: function () {
            var n = this.ownerDocument || this,
              r = f._data(n, t);
            r || n.addEventListener(e, i, !0), f._data(n, t, (r || 0) + 1);
          },
          teardown: function () {
            var n = this.ownerDocument || this,
              r = f._data(n, t) - 1;
            r
              ? f._data(n, t, r)
              : (n.removeEventListener(e, i, !0), f._removeData(n, t));
          },
        };
      }),
    f.fn.extend({
      on: function (e, t, i, n) {
        return me(this, e, t, i, n);
      },
      one: function (e, t, i, n) {
        return me(this, e, t, i, n, 1);
      },
      off: function (e, t, i) {
        var n, r;
        if (e && e.preventDefault && e.handleObj)
          return (
            (n = e.handleObj),
            f(e.delegateTarget).off(
              n.namespace ? n.origType + "." + n.namespace : n.origType,
              n.selector,
              n.handler
            ),
            this
          );
        if ("object" == typeof e) {
          for (r in e) this.off(r, t, e[r]);
          return this;
        }
        return (
          (!1 !== t && "function" != typeof t) || ((i = t), (t = void 0)),
          !1 === i && (i = pe),
          this.each(function () {
            f.event.remove(this, e, i, t);
          })
        );
      },
      trigger: function (e, t) {
        return this.each(function () {
          f.event.trigger(e, t, this);
        });
      },
      triggerHandler: function (e, t) {
        var i = this[0];
        return i ? f.event.trigger(e, t, i, !0) : void 0;
      },
    });
  var ve = / jQuery\d+="(?:null|\d+)"/g,
    be = new RegExp("<(?:" + Q + ")[\\s/>]", "i"),
    ye =
      /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:-]+)[^>]*)\/>/gi,
    we = /<script|<style|<link/i,
    xe = /checked\s*(?:[^=]|=\s*.checked.)/i,
    ke = /^true\/(.*)/,
    Ce = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,
    Se = ee(n).appendChild(n.createElement("div"));
  function _e(e, t) {
    return f.nodeName(e, "table") &&
      f.nodeName(11 !== t.nodeType ? t : t.firstChild, "tr")
      ? e.getElementsByTagName("tbody")[0] ||
          e.appendChild(e.ownerDocument.createElement("tbody"))
      : e;
  }
  function Ae(e) {
    return (e.type = (null !== f.find.attr(e, "type")) + "/" + e.type), e;
  }
  function Fe(e) {
    var t = ke.exec(e.type);
    return t ? (e.type = t[1]) : e.removeAttribute("type"), e;
  }
  function Te(e, t) {
    if (1 === t.nodeType && f.hasData(e)) {
      var i,
        n,
        r,
        a = f._data(e),
        s = f._data(t, a),
        o = a.events;
      if (o) {
        delete s.handle, (s.events = {});
        for (i in o)
          for (n = 0, r = o[i].length; r > n; n++) f.event.add(t, i, o[i][n]);
      }
      s.data && (s.data = f.extend({}, s.data));
    }
  }
  function Pe(e, t) {
    var i, n, r;
    if (1 === t.nodeType) {
      if (((i = t.nodeName.toLowerCase()), !u.noCloneEvent && t[f.expando])) {
        r = f._data(t);
        for (n in r.events) f.removeEvent(t, n, r.handle);
        t.removeAttribute(f.expando);
      }
      "script" === i && t.text !== e.text
        ? ((Ae(t).text = e.text), Fe(t))
        : "object" === i
        ? (t.parentNode && (t.outerHTML = e.outerHTML),
          u.html5Clone &&
            e.innerHTML &&
            !f.trim(t.innerHTML) &&
            (t.innerHTML = e.innerHTML))
        : "input" === i && Y.test(e.type)
        ? ((t.defaultChecked = t.checked = e.checked),
          t.value !== e.value && (t.value = e.value))
        : "option" === i
        ? (t.defaultSelected = t.selected = e.defaultSelected)
        : ("input" !== i && "textarea" !== i) ||
          (t.defaultValue = e.defaultValue);
    }
  }
  function Ee(e, t, i, n) {
    t = a.apply([], t);
    var r,
      s,
      o,
      l,
      c,
      h,
      d = 0,
      p = e.length,
      g = p - 1,
      m = t[0],
      v = f.isFunction(m);
    if (v || (p > 1 && "string" == typeof m && !u.checkClone && xe.test(m)))
      return e.each(function (r) {
        var a = e.eq(r);
        v && (t[0] = m.call(this, r, a.html())), Ee(a, t, i, n);
      });
    if (
      p &&
      ((r = (h = oe(t, e[0].ownerDocument, !1, e, n)).firstChild),
      1 === h.childNodes.length && (h = r),
      r || n)
    ) {
      for (o = (l = f.map(ie(h, "script"), Ae)).length; p > d; d++)
        (s = h),
          d !== g &&
            ((s = f.clone(s, !0, !0)), o && f.merge(l, ie(s, "script"))),
          i.call(e[d], s, d);
      if (o)
        for (c = l[l.length - 1].ownerDocument, f.map(l, Fe), d = 0; o > d; d++)
          (s = l[d]),
            J.test(s.type || "") &&
              !f._data(s, "globalEval") &&
              f.contains(c, s) &&
              (s.src
                ? f._evalUrl && f._evalUrl(s.src)
                : f.globalEval(
                    (s.text || s.textContent || s.innerHTML || "").replace(
                      Ce,
                      ""
                    )
                  ));
      h = r = null;
    }
    return e;
  }
  function Ie(e, t, i) {
    for (var n, r = t ? f.filter(t, e) : e, a = 0; null != (n = r[a]); a++)
      i || 1 !== n.nodeType || f.cleanData(ie(n)),
        n.parentNode &&
          (i && f.contains(n.ownerDocument, n) && ne(ie(n, "script")),
          n.parentNode.removeChild(n));
    return e;
  }
  f.extend({
    htmlPrefilter: function (e) {
      return e.replace(ye, "<$1></$2>");
    },
    clone: function (e, t, i) {
      var n,
        r,
        a,
        s,
        o,
        l = f.contains(e.ownerDocument, e);
      if (
        (u.html5Clone || f.isXMLDoc(e) || !be.test("<" + e.nodeName + ">")
          ? (a = e.cloneNode(!0))
          : ((Se.innerHTML = e.outerHTML), Se.removeChild((a = Se.firstChild))),
        !(
          (u.noCloneEvent && u.noCloneChecked) ||
          (1 !== e.nodeType && 11 !== e.nodeType) ||
          f.isXMLDoc(e)
        ))
      )
        for (n = ie(a), o = ie(e), s = 0; null != (r = o[s]); ++s)
          n[s] && Pe(r, n[s]);
      if (t)
        if (i)
          for (o = o || ie(e), n = n || ie(a), s = 0; null != (r = o[s]); s++)
            Te(r, n[s]);
        else Te(e, a);
      return (
        (n = ie(a, "script")).length > 0 && ne(n, !l && ie(e, "script")),
        (n = o = r = null),
        a
      );
    },
    cleanData: function (e, t) {
      for (
        var n,
          r,
          a,
          s,
          o = 0,
          l = f.expando,
          c = f.cache,
          h = u.attributes,
          d = f.event.special;
        null != (n = e[o]);
        o++
      )
        if ((t || M(n)) && (s = (a = n[l]) && c[a])) {
          if (s.events)
            for (r in s.events)
              d[r] ? f.event.remove(n, r) : f.removeEvent(n, r, s.handle);
          c[a] &&
            (delete c[a],
            h || void 0 === n.removeAttribute
              ? (n[l] = void 0)
              : n.removeAttribute(l),
            i.push(a));
        }
    },
  }),
    f.fn.extend({
      domManip: Ee,
      detach: function (e) {
        return Ie(this, e, !0);
      },
      remove: function (e) {
        return Ie(this, e);
      },
      text: function (e) {
        return K(
          this,
          function (e) {
            return void 0 === e
              ? f.text(this)
              : this.empty().append(
                  ((this[0] && this[0].ownerDocument) || n).createTextNode(e)
                );
          },
          null,
          e,
          arguments.length
        );
      },
      append: function () {
        return Ee(this, arguments, function (e) {
          if (
            1 === this.nodeType ||
            11 === this.nodeType ||
            9 === this.nodeType
          )
            _e(this, e).appendChild(e);
        });
      },
      prepend: function () {
        return Ee(this, arguments, function (e) {
          if (
            1 === this.nodeType ||
            11 === this.nodeType ||
            9 === this.nodeType
          ) {
            var t = _e(this, e);
            t.insertBefore(e, t.firstChild);
          }
        });
      },
      before: function () {
        return Ee(this, arguments, function (e) {
          this.parentNode && this.parentNode.insertBefore(e, this);
        });
      },
      after: function () {
        return Ee(this, arguments, function (e) {
          this.parentNode && this.parentNode.insertBefore(e, this.nextSibling);
        });
      },
      empty: function () {
        for (var e, t = 0; null != (e = this[t]); t++) {
          1 === e.nodeType && f.cleanData(ie(e, !1));
          for (; e.firstChild; ) e.removeChild(e.firstChild);
          e.options && f.nodeName(e, "select") && (e.options.length = 0);
        }
        return this;
      },
      clone: function (e, t) {
        return (
          (e = null == e ? !1 : e),
          (t = null == t ? e : t),
          this.map(function () {
            return f.clone(this, e, t);
          })
        );
      },
      html: function (e) {
        return K(
          this,
          function (e) {
            var t = this[0] || {},
              i = 0,
              n = this.length;
            if (void 0 === e)
              return 1 === t.nodeType ? t.innerHTML.replace(ve, "") : void 0;
            if (
              "string" == typeof e &&
              !we.test(e) &&
              (u.htmlSerialize || !be.test(e)) &&
              (u.leadingWhitespace || !$.test(e)) &&
              !te[(Z.exec(e) || ["", ""])[1].toLowerCase()]
            ) {
              e = f.htmlPrefilter(e);
              try {
                for (; n > i; i++)
                  1 === (t = this[i] || {}).nodeType &&
                    (f.cleanData(ie(t, !1)), (t.innerHTML = e));
                t = 0;
              } catch (e) {}
            }
            t && this.empty().append(e);
          },
          null,
          e,
          arguments.length
        );
      },
      replaceWith: function () {
        var e = [];
        return Ee(
          this,
          arguments,
          function (t) {
            var i = this.parentNode;
            f.inArray(this, e) < 0 &&
              (f.cleanData(ie(this)), i && i.replaceChild(t, this));
          },
          e
        );
      },
    }),
    f.each(
      {
        appendTo: "append",
        prependTo: "prepend",
        insertBefore: "before",
        insertAfter: "after",
        replaceAll: "replaceWith",
      },
      function (e, t) {
        f.fn[e] = function (e) {
          for (var i, n = 0, r = [], a = f(e), o = a.length - 1; o >= n; n++)
            (i = n === o ? this : this.clone(!0)),
              f(a[n])[t](i),
              s.apply(r, i.get());
          return this.pushStack(r);
        };
      }
    );
  var De,
    Oe = { HTML: "block", BODY: "block" };
  function Re(e, t) {
    var i = f(t.createElement(e)).appendTo(t.body),
      n = f.css(i[0], "display");
    return i.detach(), n;
  }
  function Ne(e) {
    var t = n,
      i = Oe[e];
    return (
      i ||
        (("none" !== (i = Re(e, t)) && i) ||
          ((t = (
            (De = (
              De || f("<iframe frameborder='0' width='0' height='0'/>")
            ).appendTo(t.documentElement))[0].contentWindow ||
            De[0].contentDocument
          ).document).write(),
          t.close(),
          (i = Re(e, t)),
          De.detach()),
        (Oe[e] = i)),
      i
    );
  }
  var Me = /^margin/,
    Be = new RegExp("^(" + H + ")(?!px)[a-z%]+$", "i"),
    Le = function (e, t, i, n) {
      var r,
        a,
        s = {};
      for (a in t) (s[a] = e.style[a]), (e.style[a] = t[a]);
      r = i.apply(e, n || []);
      for (a in t) e.style[a] = s[a];
      return r;
    },
    Ue = n.documentElement;
  !(function () {
    var t,
      i,
      r,
      a,
      s,
      o,
      l = n.createElement("div"),
      c = n.createElement("div");
    if (c.style) {
      (c.style.cssText = "float:left;opacity:.5"),
        (u.opacity = "0.5" === c.style.opacity),
        (u.cssFloat = !!c.style.cssFloat),
        (c.style.backgroundClip = "content-box"),
        (c.cloneNode(!0).style.backgroundClip = ""),
        (u.clearCloneStyle = "content-box" === c.style.backgroundClip),
        ((l = n.createElement("div")).style.cssText =
          "border:0;width:8px;height:0;top:0;left:-9999px;padding:0;margin-top:1px;position:absolute"),
        (c.innerHTML = ""),
        l.appendChild(c),
        (u.boxSizing =
          "" === c.style.boxSizing ||
          "" === c.style.MozBoxSizing ||
          "" === c.style.WebkitBoxSizing),
        f.extend(u, {
          reliableHiddenOffsets: function () {
            return null == t && h(), a;
          },
          boxSizingReliable: function () {
            return null == t && h(), r;
          },
          pixelMarginRight: function () {
            return null == t && h(), i;
          },
          pixelPosition: function () {
            return null == t && h(), t;
          },
          reliableMarginRight: function () {
            return null == t && h(), s;
          },
          reliableMarginLeft: function () {
            return null == t && h(), o;
          },
        });
      function h() {
        var h,
          u,
          d = n.documentElement;
        d.appendChild(l),
          (c.style.cssText =
            "-webkit-box-sizing:border-box;box-sizing:border-box;position:relative;display:block;margin:auto;border:1px;padding:1px;top:1%;width:50%"),
          (t = r = o = !1),
          (i = s = !0),
          e.getComputedStyle &&
            ((u = e.getComputedStyle(c)),
            (t = "1%" !== (u || {}).top),
            (o = "2px" === (u || {}).marginLeft),
            (r = "4px" === (u || { width: "4px" }).width),
            (c.style.marginRight = "50%"),
            (i = "4px" === (u || { marginRight: "4px" }).marginRight),
            ((h = c.appendChild(n.createElement("div"))).style.cssText =
              c.style.cssText =
                "-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0"),
            (h.style.marginRight = h.style.width = "0"),
            (c.style.width = "1px"),
            (s = !parseFloat((e.getComputedStyle(h) || {}).marginRight)),
            c.removeChild(h)),
          (c.style.display = "none"),
          (a = 0 === c.getClientRects().length) &&
            ((c.style.display = ""),
            (c.innerHTML = "<table><tr><td></td><td>t</td></tr></table>"),
            (c.childNodes[0].style.borderCollapse = "separate"),
            ((h = c.getElementsByTagName("td"))[0].style.cssText =
              "margin:0;border:0;padding:0;display:none"),
            (a = 0 === h[0].offsetHeight) &&
              ((h[0].style.display = ""),
              (h[1].style.display = "none"),
              (a = 0 === h[0].offsetHeight))),
          d.removeChild(l);
      }
    }
  })();
  var ze,
    je,
    qe = /^(top|right|bottom|left)$/;
  e.getComputedStyle
    ? ((ze = function (t) {
        var i = t.ownerDocument.defaultView;
        return (i && i.opener) || (i = e), i.getComputedStyle(t);
      }),
      (je = function (e, t, i) {
        var n,
          r,
          a,
          s,
          o = e.style;
        return (
          ("" !==
            (s = (i = i || ze(e)) ? i.getPropertyValue(t) || i[t] : void 0) &&
            void 0 !== s) ||
            f.contains(e.ownerDocument, e) ||
            (s = f.style(e, t)),
          i &&
            !u.pixelMarginRight() &&
            Be.test(s) &&
            Me.test(t) &&
            ((n = o.width),
            (r = o.minWidth),
            (a = o.maxWidth),
            (o.minWidth = o.maxWidth = o.width = s),
            (s = i.width),
            (o.width = n),
            (o.minWidth = r),
            (o.maxWidth = a)),
          void 0 === s ? s : s + ""
        );
      }))
    : Ue.currentStyle &&
      ((ze = function (e) {
        return e.currentStyle;
      }),
      (je = function (e, t, i) {
        var n,
          r,
          a,
          s,
          o = e.style;
        return (
          null == (s = (i = i || ze(e)) ? i[t] : void 0) &&
            o &&
            o[t] &&
            (s = o[t]),
          Be.test(s) &&
            !qe.test(t) &&
            ((n = o.left),
            (a = (r = e.runtimeStyle) && r.left) &&
              (r.left = e.currentStyle.left),
            (o.left = "fontSize" === t ? "1em" : s),
            (s = o.pixelLeft + "px"),
            (o.left = n),
            a && (r.left = a)),
          void 0 === s ? s : s + "" || "auto"
        );
      }));
  function He(e, t) {
    return {
      get: function () {
        return e()
          ? void delete this.get
          : (this.get = t).apply(this, arguments);
      },
    };
  }
  var We = /alpha\([^)]*\)/i,
    Ge = /opacity\s*=\s*([^)]*)/i,
    Ve = /^(none|table(?!-c[ea]).+)/,
    Xe = new RegExp("^(" + H + ")(.*)$", "i"),
    Ke = { position: "absolute", visibility: "hidden", display: "block" },
    Ye = { letterSpacing: "0", fontWeight: "400" },
    Ze = ["Webkit", "O", "Moz", "ms"],
    Je = n.createElement("div").style;
  function $e(e) {
    if (e in Je) return e;
    for (var t = e.charAt(0).toUpperCase() + e.slice(1), i = Ze.length; i--; )
      if ((e = Ze[i] + t) in Je) return e;
  }
  function Qe(e, t) {
    for (var i, n, r, a = [], s = 0, o = e.length; o > s; s++)
      (n = e[s]).style &&
        ((a[s] = f._data(n, "olddisplay")),
        (i = n.style.display),
        t
          ? (a[s] || "none" !== i || (n.style.display = ""),
            "" === n.style.display &&
              V(n) &&
              (a[s] = f._data(n, "olddisplay", Ne(n.nodeName))))
          : ((r = V(n)),
            ((i && "none" !== i) || !r) &&
              f._data(n, "olddisplay", r ? i : f.css(n, "display"))));
    for (s = 0; o > s; s++)
      (n = e[s]).style &&
        ((t && "none" !== n.style.display && "" !== n.style.display) ||
          (n.style.display = t ? a[s] || "" : "none"));
    return e;
  }
  function et(e, t, i) {
    var n = Xe.exec(t);
    return n ? Math.max(0, n[1] - (i || 0)) + (n[2] || "px") : t;
  }
  function tt(e, t, i, n, r) {
    for (
      var a = i === (n ? "border" : "content") ? 4 : "width" === t ? 1 : 0,
        s = 0;
      4 > a;
      a += 2
    )
      "margin" === i && (s += f.css(e, i + G[a], !0, r)),
        n
          ? ("content" === i && (s -= f.css(e, "padding" + G[a], !0, r)),
            "margin" !== i && (s -= f.css(e, "border" + G[a] + "Width", !0, r)))
          : ((s += f.css(e, "padding" + G[a], !0, r)),
            "padding" !== i &&
              (s += f.css(e, "border" + G[a] + "Width", !0, r)));
    return s;
  }
  function it(e, t, i) {
    var n = !0,
      r = "width" === t ? e.offsetWidth : e.offsetHeight,
      a = ze(e),
      s = u.boxSizing && "border-box" === f.css(e, "boxSizing", !1, a);
    if (0 >= r || null == r) {
      if (
        ((0 > (r = je(e, t, a)) || null == r) && (r = e.style[t]), Be.test(r))
      )
        return r;
      (n = s && (u.boxSizingReliable() || r === e.style[t])),
        (r = parseFloat(r) || 0);
    }
    return r + tt(e, t, i || (s ? "border" : "content"), n, a) + "px";
  }
  f.extend({
    cssHooks: {
      opacity: {
        get: function (e, t) {
          if (t) {
            var i = je(e, "opacity");
            return "" === i ? "1" : i;
          }
        },
      },
    },
    cssNumber: {
      animationIterationCount: !0,
      columnCount: !0,
      fillOpacity: !0,
      flexGrow: !0,
      flexShrink: !0,
      fontWeight: !0,
      lineHeight: !0,
      opacity: !0,
      order: !0,
      orphans: !0,
      widows: !0,
      zIndex: !0,
      zoom: !0,
    },
    cssProps: { float: u.cssFloat ? "cssFloat" : "styleFloat" },
    style: function (e, t, i, n) {
      if (e && 3 !== e.nodeType && 8 !== e.nodeType && e.style) {
        var r,
          a,
          s,
          o = f.camelCase(t),
          l = e.style;
        if (
          ((t = f.cssProps[o] || (f.cssProps[o] = $e(o) || o)),
          (s = f.cssHooks[t] || f.cssHooks[o]),
          void 0 === i)
        )
          return s && "get" in s && void 0 !== (r = s.get(e, !1, n)) ? r : l[t];
        if (
          ("string" == (a = typeof i) &&
            (r = W.exec(i)) &&
            r[1] &&
            ((i = X(e, t, r)), (a = "number")),
          null != i &&
            i == i &&
            ("number" === a &&
              (i += (r && r[3]) || (f.cssNumber[o] ? "" : "px")),
            u.clearCloneStyle ||
              "" !== i ||
              0 !== t.indexOf("background") ||
              (l[t] = "inherit"),
            !s || !("set" in s) || void 0 !== (i = s.set(e, i, n))))
        )
          try {
            l[t] = i;
          } catch (e) {}
      }
    },
    css: function (e, t, i, n) {
      var r,
        a,
        s,
        o = f.camelCase(t);
      return (
        (t = f.cssProps[o] || (f.cssProps[o] = $e(o) || o)),
        (s = f.cssHooks[t] || f.cssHooks[o]) &&
          "get" in s &&
          (a = s.get(e, !0, i)),
        void 0 === a && (a = je(e, t, n)),
        "normal" === a && t in Ye && (a = Ye[t]),
        "" === i || i
          ? ((r = parseFloat(a)), !0 === i || isFinite(r) ? r || 0 : a)
          : a
      );
    },
  }),
    f.each(["height", "width"], function (e, t) {
      f.cssHooks[t] = {
        get: function (e, i, n) {
          return i
            ? Ve.test(f.css(e, "display")) && 0 === e.offsetWidth
              ? Le(e, Ke, function () {
                  return it(e, t, n);
                })
              : it(e, t, n)
            : void 0;
        },
        set: function (e, i, n) {
          var r = n && ze(e);
          return et(
            0,
            i,
            n
              ? tt(
                  e,
                  t,
                  n,
                  u.boxSizing && "border-box" === f.css(e, "boxSizing", !1, r),
                  r
                )
              : 0
          );
        },
      };
    }),
    u.opacity ||
      (f.cssHooks.opacity = {
        get: function (e, t) {
          return Ge.test(
            (t && e.currentStyle ? e.currentStyle.filter : e.style.filter) || ""
          )
            ? 0.01 * parseFloat(RegExp.$1) + ""
            : t
            ? "1"
            : "";
        },
        set: function (e, t) {
          var i = e.style,
            n = e.currentStyle,
            r = f.isNumeric(t) ? "alpha(opacity=" + 100 * t + ")" : "",
            a = (n && n.filter) || i.filter || "";
          (i.zoom = 1),
            ((t >= 1 || "" === t) &&
              "" === f.trim(a.replace(We, "")) &&
              i.removeAttribute &&
              (i.removeAttribute("filter"), "" === t || (n && !n.filter))) ||
              (i.filter = We.test(a) ? a.replace(We, r) : a + " " + r);
        },
      }),
    (f.cssHooks.marginRight = He(u.reliableMarginRight, function (e, t) {
      return t
        ? Le(e, { display: "inline-block" }, je, [e, "marginRight"])
        : void 0;
    })),
    (f.cssHooks.marginLeft = He(u.reliableMarginLeft, function (e, t) {
      return t
        ? (parseFloat(je(e, "marginLeft")) ||
            (f.contains(e.ownerDocument, e)
              ? e.getBoundingClientRect().left -
                Le(e, { marginLeft: 0 }, function () {
                  return e.getBoundingClientRect().left;
                })
              : 0)) + "px"
        : void 0;
    })),
    f.each({ margin: "", padding: "", border: "Width" }, function (e, t) {
      (f.cssHooks[e + t] = {
        expand: function (i) {
          for (
            var n = 0, r = {}, a = "string" == typeof i ? i.split(" ") : [i];
            4 > n;
            n++
          )
            r[e + G[n] + t] = a[n] || a[n - 2] || a[0];
          return r;
        },
      }),
        Me.test(e) || (f.cssHooks[e + t].set = et);
    }),
    f.fn.extend({
      css: function (e, t) {
        return K(
          this,
          function (e, t, i) {
            var n,
              r,
              a = {},
              s = 0;
            if (f.isArray(t)) {
              for (n = ze(e), r = t.length; r > s; s++)
                a[t[s]] = f.css(e, t[s], !1, n);
              return a;
            }
            return void 0 !== i ? f.style(e, t, i) : f.css(e, t);
          },
          e,
          t,
          arguments.length > 1
        );
      },
      show: function () {
        return Qe(this, !0);
      },
      hide: function () {
        return Qe(this);
      },
      toggle: function (e) {
        return "boolean" == typeof e
          ? e
            ? this.show()
            : this.hide()
          : this.each(function () {
              V(this) ? f(this).show() : f(this).hide();
            });
      },
    });
  function nt(e, t, i, n, r) {
    return new nt.prototype.init(e, t, i, n, r);
  }
  (f.Tween = nt),
    (nt.prototype = {
      constructor: nt,
      init: function (e, t, i, n, r, a) {
        (this.elem = e),
          (this.prop = i),
          (this.easing = r || f.easing._default),
          (this.options = t),
          (this.start = this.now = this.cur()),
          (this.end = n),
          (this.unit = a || (f.cssNumber[i] ? "" : "px"));
      },
      cur: function () {
        var e = nt.propHooks[this.prop];
        return e && e.get ? e.get(this) : nt.propHooks._default.get(this);
      },
      run: function (e) {
        var t,
          i = nt.propHooks[this.prop];
        return (
          this.options.duration
            ? (this.pos = t =
                f.easing[this.easing](
                  e,
                  this.options.duration * e,
                  0,
                  1,
                  this.options.duration
                ))
            : (this.pos = t = e),
          (this.now = (this.end - this.start) * t + this.start),
          this.options.step &&
            this.options.step.call(this.elem, this.now, this),
          i && i.set ? i.set(this) : nt.propHooks._default.set(this),
          this
        );
      },
    }),
    (nt.prototype.init.prototype = nt.prototype),
    (nt.propHooks = {
      _default: {
        get: function (e) {
          var t;
          return 1 !== e.elem.nodeType ||
            (null != e.elem[e.prop] && null == e.elem.style[e.prop])
            ? e.elem[e.prop]
            : (t = f.css(e.elem, e.prop, "")) && "auto" !== t
            ? t
            : 0;
        },
        set: function (e) {
          f.fx.step[e.prop]
            ? f.fx.step[e.prop](e)
            : 1 !== e.elem.nodeType ||
              (null == e.elem.style[f.cssProps[e.prop]] && !f.cssHooks[e.prop])
            ? (e.elem[e.prop] = e.now)
            : f.style(e.elem, e.prop, e.now + e.unit);
        },
      },
    }),
    (nt.propHooks.scrollTop = nt.propHooks.scrollLeft =
      {
        set: function (e) {
          e.elem.nodeType && e.elem.parentNode && (e.elem[e.prop] = e.now);
        },
      }),
    (f.easing = {
      linear: function (e) {
        return e;
      },
      swing: function (e) {
        return 0.5 - Math.cos(e * Math.PI) / 2;
      },
      _default: "swing",
    }),
    (f.fx = nt.prototype.init),
    (f.fx.step = {});
  var rt,
    at,
    st = /^(?:toggle|show|hide)$/,
    ot = /queueHooks$/;
  function lt() {
    return (
      e.setTimeout(function () {
        rt = void 0;
      }),
      (rt = f.now())
    );
  }
  function ct(e, t) {
    var i,
      n = { height: e },
      r = 0;
    for (t = t ? 1 : 0; 4 > r; r += 2 - t)
      n["margin" + (i = G[r])] = n["padding" + i] = e;
    return t && (n.opacity = n.width = e), n;
  }
  function ht(e, t, i) {
    for (
      var n,
        r = (ut.tweeners[t] || []).concat(ut.tweeners["*"]),
        a = 0,
        s = r.length;
      s > a;
      a++
    )
      if ((n = r[a].call(i, t, e))) return n;
  }
  function ut(e, t, i) {
    var n,
      r,
      a = 0,
      s = ut.prefilters.length,
      o = f.Deferred().always(function () {
        delete l.elem;
      }),
      l = function () {
        if (r) return !1;
        for (
          var t = rt || lt(),
            i = Math.max(0, c.startTime + c.duration - t),
            n = 1 - (i / c.duration || 0),
            a = 0,
            s = c.tweens.length;
          s > a;
          a++
        )
          c.tweens[a].run(n);
        return (
          o.notifyWith(e, [c, n, i]),
          1 > n && s ? i : (o.resolveWith(e, [c]), !1)
        );
      },
      c = o.promise({
        elem: e,
        props: f.extend({}, t),
        opts: f.extend(!0, { specialEasing: {}, easing: f.easing._default }, i),
        originalProperties: t,
        originalOptions: i,
        startTime: rt || lt(),
        duration: i.duration,
        tweens: [],
        createTween: function (t, i) {
          var n = f.Tween(
            e,
            c.opts,
            t,
            i,
            c.opts.specialEasing[t] || c.opts.easing
          );
          return c.tweens.push(n), n;
        },
        stop: function (t) {
          var i = 0,
            n = t ? c.tweens.length : 0;
          if (r) return this;
          for (r = !0; n > i; i++) c.tweens[i].run(1);
          return (
            t
              ? (o.notifyWith(e, [c, 1, 0]), o.resolveWith(e, [c, t]))
              : o.rejectWith(e, [c, t]),
            this
          );
        },
      }),
      h = c.props;
    for (
      (function (e, t) {
        var i, n, r, a, s;
        for (i in e)
          if (
            ((r = t[(n = f.camelCase(i))]),
            (a = e[i]),
            f.isArray(a) && ((r = a[1]), (a = e[i] = a[0])),
            i !== n && ((e[n] = a), delete e[i]),
            (s = f.cssHooks[n]) && ("expand" in s))
          ) {
            (a = s.expand(a)), delete e[n];
            for (i in a) (i in e) || ((e[i] = a[i]), (t[i] = r));
          } else t[n] = r;
      })(h, c.opts.specialEasing);
      s > a;
      a++
    )
      if ((n = ut.prefilters[a].call(c, e, h, c.opts)))
        return (
          f.isFunction(n.stop) &&
            (f._queueHooks(c.elem, c.opts.queue).stop = f.proxy(n.stop, n)),
          n
        );
    return (
      f.map(h, ht, c),
      f.isFunction(c.opts.start) && c.opts.start.call(e, c),
      f.fx.timer(f.extend(l, { elem: e, anim: c, queue: c.opts.queue })),
      c
        .progress(c.opts.progress)
        .done(c.opts.done, c.opts.complete)
        .fail(c.opts.fail)
        .always(c.opts.always)
    );
  }
  (f.Animation = f.extend(ut, {
    tweeners: {
      "*": [
        function (e, t) {
          var i = this.createTween(e, t);
          return X(i.elem, e, W.exec(t), i), i;
        },
      ],
    },
    tweener: function (e, t) {
      f.isFunction(e) ? ((t = e), (e = ["*"])) : (e = e.match(O));
      for (var i, n = 0, r = e.length; r > n; n++)
        (i = e[n]),
          (ut.tweeners[i] = ut.tweeners[i] || []),
          ut.tweeners[i].unshift(t);
    },
    prefilters: [
      function (e, t, i) {
        var n,
          r,
          a,
          s,
          o,
          l,
          c,
          h = this,
          d = {},
          p = e.style,
          g = e.nodeType && V(e),
          m = f._data(e, "fxshow");
        i.queue ||
          (null == (o = f._queueHooks(e, "fx")).unqueued &&
            ((o.unqueued = 0),
            (l = o.empty.fire),
            (o.empty.fire = function () {
              o.unqueued || l();
            })),
          o.unqueued++,
          h.always(function () {
            h.always(function () {
              o.unqueued--, f.queue(e, "fx").length || o.empty.fire();
            });
          })),
          1 === e.nodeType &&
            ("height" in t || "width" in t) &&
            ((i.overflow = [p.overflow, p.overflowX, p.overflowY]),
            "inline" ===
              ("none" === (c = f.css(e, "display"))
                ? f._data(e, "olddisplay") || Ne(e.nodeName)
                : c) &&
              "none" === f.css(e, "float") &&
              (u.inlineBlockNeedsLayout && "inline" !== Ne(e.nodeName)
                ? (p.zoom = 1)
                : (p.display = "inline-block"))),
          i.overflow &&
            ((p.overflow = "hidden"),
            u.shrinkWrapBlocks() ||
              h.always(function () {
                (p.overflow = i.overflow[0]),
                  (p.overflowX = i.overflow[1]),
                  (p.overflowY = i.overflow[2]);
              }));
        for (n in t)
          if (((r = t[n]), st.exec(r))) {
            if (
              (delete t[n],
              (a = a || "toggle" === r),
              r === (g ? "hide" : "show"))
            ) {
              if ("show" !== r || !m || void 0 === m[n]) continue;
              g = !0;
            }
            d[n] = (m && m[n]) || f.style(e, n);
          } else c = void 0;
        if (f.isEmptyObject(d))
          "inline" === ("none" === c ? Ne(e.nodeName) : c) && (p.display = c);
        else {
          m ? "hidden" in m && (g = m.hidden) : (m = f._data(e, "fxshow", {})),
            a && (m.hidden = !g),
            g
              ? f(e).show()
              : h.done(function () {
                  f(e).hide();
                }),
            h.done(function () {
              var t;
              f._removeData(e, "fxshow");
              for (t in d) f.style(e, t, d[t]);
            });
          for (n in d)
            (s = ht(g ? m[n] : 0, n, h)),
              n in m ||
                ((m[n] = s.start),
                g &&
                  ((s.end = s.start),
                  (s.start = "width" === n || "height" === n ? 1 : 0)));
        }
      },
    ],
    prefilter: function (e, t) {
      t ? ut.prefilters.unshift(e) : ut.prefilters.push(e);
    },
  })),
    (f.speed = function (e, t, i) {
      var n =
        e && "object" == typeof e
          ? f.extend({}, e)
          : {
              complete: i || (!i && t) || (f.isFunction(e) && e),
              duration: e,
              easing: (i && t) || (t && !f.isFunction(t) && t),
            };
      return (
        (n.duration = f.fx.off
          ? 0
          : "number" == typeof n.duration
          ? n.duration
          : n.duration in f.fx.speeds
          ? f.fx.speeds[n.duration]
          : f.fx.speeds._default),
        (null != n.queue && !0 !== n.queue) || (n.queue = "fx"),
        (n.old = n.complete),
        (n.complete = function () {
          f.isFunction(n.old) && n.old.call(this),
            n.queue && f.dequeue(this, n.queue);
        }),
        n
      );
    }),
    f.fn.extend({
      fadeTo: function (e, t, i, n) {
        return this.filter(V)
          .css("opacity", 0)
          .show()
          .end()
          .animate({ opacity: t }, e, i, n);
      },
      animate: function (e, t, i, n) {
        var r = f.isEmptyObject(e),
          a = f.speed(t, i, n),
          s = function () {
            var t = ut(this, f.extend({}, e), a);
            (r || f._data(this, "finish")) && t.stop(!0);
          };
        return (
          (s.finish = s),
          r || !1 === a.queue ? this.each(s) : this.queue(a.queue, s)
        );
      },
      stop: function (e, t, i) {
        var n = function (e) {
          var t = e.stop;
          delete e.stop, t(i);
        };
        return (
          "string" != typeof e && ((i = t), (t = e), (e = void 0)),
          t && !1 !== e && this.queue(e || "fx", []),
          this.each(function () {
            var t = !0,
              r = null != e && e + "queueHooks",
              a = f.timers,
              s = f._data(this);
            if (r) s[r] && s[r].stop && n(s[r]);
            else for (r in s) s[r] && s[r].stop && ot.test(r) && n(s[r]);
            for (r = a.length; r--; )
              a[r].elem !== this ||
                (null != e && a[r].queue !== e) ||
                (a[r].anim.stop(i), (t = !1), a.splice(r, 1));
            (!t && i) || f.dequeue(this, e);
          })
        );
      },
      finish: function (e) {
        return (
          !1 !== e && (e = e || "fx"),
          this.each(function () {
            var t,
              i = f._data(this),
              n = i[e + "queue"],
              r = i[e + "queueHooks"],
              a = f.timers,
              s = n ? n.length : 0;
            for (
              i.finish = !0,
                f.queue(this, e, []),
                r && r.stop && r.stop.call(this, !0),
                t = a.length;
              t--;

            )
              a[t].elem === this &&
                a[t].queue === e &&
                (a[t].anim.stop(!0), a.splice(t, 1));
            for (t = 0; s > t; t++)
              n[t] && n[t].finish && n[t].finish.call(this);
            delete i.finish;
          })
        );
      },
    }),
    f.each(["toggle", "show", "hide"], function (e, t) {
      var i = f.fn[t];
      f.fn[t] = function (e, n, r) {
        return null == e || "boolean" == typeof e
          ? i.apply(this, arguments)
          : this.animate(ct(t, !0), e, n, r);
      };
    }),
    f.each(
      {
        slideDown: ct("show"),
        slideUp: ct("hide"),
        slideToggle: ct("toggle"),
        fadeIn: { opacity: "show" },
        fadeOut: { opacity: "hide" },
        fadeToggle: { opacity: "toggle" },
      },
      function (e, t) {
        f.fn[e] = function (e, i, n) {
          return this.animate(t, e, i, n);
        };
      }
    ),
    (f.timers = []),
    (f.fx.tick = function () {
      var e,
        t = f.timers,
        i = 0;
      for (rt = f.now(); i < t.length; i++)
        (e = t[i])() || t[i] !== e || t.splice(i--, 1);
      t.length || f.fx.stop(), (rt = void 0);
    }),
    (f.fx.timer = function (e) {
      f.timers.push(e), e() ? f.fx.start() : f.timers.pop();
    }),
    (f.fx.interval = 13),
    (f.fx.start = function () {
      at || (at = e.setInterval(f.fx.tick, f.fx.interval));
    }),
    (f.fx.stop = function () {
      e.clearInterval(at), (at = null);
    }),
    (f.fx.speeds = { slow: 600, fast: 200, _default: 400 }),
    (f.fn.delay = function (t, i) {
      return (
        (t = f.fx ? f.fx.speeds[t] || t : t),
        (i = i || "fx"),
        this.queue(i, function (i, n) {
          var r = e.setTimeout(i, t);
          n.stop = function () {
            e.clearTimeout(r);
          };
        })
      );
    }),
    (function () {
      var e,
        t = n.createElement("input"),
        i = n.createElement("div"),
        r = n.createElement("select"),
        a = r.appendChild(n.createElement("option"));
      (i = n.createElement("div")).setAttribute("className", "t"),
        (i.innerHTML =
          "  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>"),
        (e = i.getElementsByTagName("a")[0]),
        t.setAttribute("type", "checkbox"),
        i.appendChild(t),
        ((e = i.getElementsByTagName("a")[0]).style.cssText = "top:1px"),
        (u.getSetAttribute = "t" !== i.className),
        (u.style = /top/.test(e.getAttribute("style"))),
        (u.hrefNormalized = "/a" === e.getAttribute("href")),
        (u.checkOn = !!t.value),
        (u.optSelected = a.selected),
        (u.enctype = !!n.createElement("form").enctype),
        (r.disabled = !0),
        (u.optDisabled = !a.disabled),
        (t = n.createElement("input")).setAttribute("value", ""),
        (u.input = "" === t.getAttribute("value")),
        (t.value = "t"),
        t.setAttribute("type", "radio"),
        (u.radioValue = "t" === t.value);
    })();
  var dt = /\r/g,
    ft = /[\x20\t\r\n\f]+/g;
  f.fn.extend({
    val: function (e) {
      var t,
        i,
        n,
        r = this[0];
      if (arguments.length)
        return (
          (n = f.isFunction(e)),
          this.each(function (i) {
            var r;
            1 === this.nodeType &&
              (null == (r = n ? e.call(this, i, f(this).val()) : e)
                ? (r = "")
                : "number" == typeof r
                ? (r += "")
                : f.isArray(r) &&
                  (r = f.map(r, function (e) {
                    return null == e ? "" : e + "";
                  })),
              ((t =
                f.valHooks[this.type] ||
                f.valHooks[this.nodeName.toLowerCase()]) &&
                "set" in t &&
                void 0 !== t.set(this, r, "value")) ||
                (this.value = r));
          })
        );
      if (r)
        return (t =
          f.valHooks[r.type] || f.valHooks[r.nodeName.toLowerCase()]) &&
          "get" in t &&
          void 0 !== (i = t.get(r, "value"))
          ? i
          : "string" == typeof (i = r.value)
          ? i.replace(dt, "")
          : null == i
          ? ""
          : i;
    },
  }),
    f.extend({
      valHooks: {
        option: {
          get: function (e) {
            var t = f.find.attr(e, "value");
            return null != t ? t : f.trim(f.text(e)).replace(ft, " ");
          },
        },
        select: {
          get: function (e) {
            for (
              var t,
                i,
                n = e.options,
                r = e.selectedIndex,
                a = "select-one" === e.type || 0 > r,
                s = a ? null : [],
                o = a ? r + 1 : n.length,
                l = 0 > r ? o : a ? r : 0;
              o > l;
              l++
            )
              if (
                ((i = n[l]).selected || l === r) &&
                (u.optDisabled
                  ? !i.disabled
                  : null === i.getAttribute("disabled")) &&
                (!i.parentNode.disabled ||
                  !f.nodeName(i.parentNode, "optgroup"))
              ) {
                if (((t = f(i).val()), a)) return t;
                s.push(t);
              }
            return s;
          },
          set: function (e, t) {
            for (
              var i, n, r = e.options, a = f.makeArray(t), s = r.length;
              s--;

            )
              if (((n = r[s]), f.inArray(f.valHooks.option.get(n), a) > -1))
                try {
                  n.selected = i = !0;
                } catch (e) {
                  n.scrollHeight;
                }
              else n.selected = !1;
            return i || (e.selectedIndex = -1), r;
          },
        },
      },
    }),
    f.each(["radio", "checkbox"], function () {
      (f.valHooks[this] = {
        set: function (e, t) {
          return f.isArray(t)
            ? (e.checked = f.inArray(f(e).val(), t) > -1)
            : void 0;
        },
      }),
        u.checkOn ||
          (f.valHooks[this].get = function (e) {
            return null === e.getAttribute("value") ? "on" : e.value;
          });
    });
  var pt,
    gt,
    mt = f.expr.attrHandle,
    vt = /^(?:checked|selected)$/i,
    bt = u.getSetAttribute,
    yt = u.input;
  f.fn.extend({
    attr: function (e, t) {
      return K(this, f.attr, e, t, arguments.length > 1);
    },
    removeAttr: function (e) {
      return this.each(function () {
        f.removeAttr(this, e);
      });
    },
  }),
    f.extend({
      attr: function (e, t, i) {
        var n,
          r,
          a = e.nodeType;
        if (3 !== a && 8 !== a && 2 !== a)
          return void 0 === e.getAttribute
            ? f.prop(e, t, i)
            : ((1 === a && f.isXMLDoc(e)) ||
                ((t = t.toLowerCase()),
                (r = f.attrHooks[t] || (f.expr.match.bool.test(t) ? gt : pt))),
              void 0 !== i
                ? null === i
                  ? void f.removeAttr(e, t)
                  : r && "set" in r && void 0 !== (n = r.set(e, i, t))
                  ? n
                  : (e.setAttribute(t, i + ""), i)
                : r && "get" in r && null !== (n = r.get(e, t))
                ? n
                : null == (n = f.find.attr(e, t))
                ? void 0
                : n);
      },
      attrHooks: {
        type: {
          set: function (e, t) {
            if (!u.radioValue && "radio" === t && f.nodeName(e, "input")) {
              var i = e.value;
              return e.setAttribute("type", t), i && (e.value = i), t;
            }
          },
        },
      },
      removeAttr: function (e, t) {
        var i,
          n,
          r = 0,
          a = t && t.match(O);
        if (a && 1 === e.nodeType)
          for (; (i = a[r++]); )
            (n = f.propFix[i] || i),
              f.expr.match.bool.test(i)
                ? (yt && bt) || !vt.test(i)
                  ? (e[n] = !1)
                  : (e[f.camelCase("default-" + i)] = e[n] = !1)
                : f.attr(e, i, ""),
              e.removeAttribute(bt ? i : n);
      },
    }),
    (gt = {
      set: function (e, t, i) {
        return (
          !1 === t
            ? f.removeAttr(e, i)
            : (yt && bt) || !vt.test(i)
            ? e.setAttribute((!bt && f.propFix[i]) || i, i)
            : (e[f.camelCase("default-" + i)] = e[i] = !0),
          i
        );
      },
    }),
    f.each(f.expr.match.bool.source.match(/\w+/g), function (e, t) {
      var i = mt[t] || f.find.attr;
      (yt && bt) || !vt.test(t)
        ? (mt[t] = function (e, t, n) {
            var r, a;
            return (
              n ||
                ((a = mt[t]),
                (mt[t] = r),
                (r = null != i(e, t, n) ? t.toLowerCase() : null),
                (mt[t] = a)),
              r
            );
          })
        : (mt[t] = function (e, t, i) {
            return i
              ? void 0
              : e[f.camelCase("default-" + t)]
              ? t.toLowerCase()
              : null;
          });
    }),
    (yt && bt) ||
      (f.attrHooks.value = {
        set: function (e, t, i) {
          return f.nodeName(e, "input")
            ? void (e.defaultValue = t)
            : pt && pt.set(e, t, i);
        },
      }),
    bt ||
      ((pt = {
        set: function (e, t, i) {
          var n = e.getAttributeNode(i);
          return (
            n || e.setAttributeNode((n = e.ownerDocument.createAttribute(i))),
            (n.value = t += ""),
            "value" === i || t === e.getAttribute(i) ? t : void 0
          );
        },
      }),
      (mt.id =
        mt.name =
        mt.coords =
          function (e, t, i) {
            var n;
            return i
              ? void 0
              : (n = e.getAttributeNode(t)) && "" !== n.value
              ? n.value
              : null;
          }),
      (f.valHooks.button = {
        get: function (e, t) {
          var i = e.getAttributeNode(t);
          return i && i.specified ? i.value : void 0;
        },
        set: pt.set,
      }),
      (f.attrHooks.contenteditable = {
        set: function (e, t, i) {
          pt.set(e, "" === t ? !1 : t, i);
        },
      }),
      f.each(["width", "height"], function (e, t) {
        f.attrHooks[t] = {
          set: function (e, i) {
            return "" === i ? (e.setAttribute(t, "auto"), i) : void 0;
          },
        };
      })),
    u.style ||
      (f.attrHooks.style = {
        get: function (e) {
          return e.style.cssText || void 0;
        },
        set: function (e, t) {
          return (e.style.cssText = t + "");
        },
      });
  var wt = /^(?:input|select|textarea|button|object)$/i,
    xt = /^(?:a|area)$/i;
  f.fn.extend({
    prop: function (e, t) {
      return K(this, f.prop, e, t, arguments.length > 1);
    },
    removeProp: function (e) {
      return (
        (e = f.propFix[e] || e),
        this.each(function () {
          try {
            (this[e] = void 0), delete this[e];
          } catch (e) {}
        })
      );
    },
  }),
    f.extend({
      prop: function (e, t, i) {
        var n,
          r,
          a = e.nodeType;
        if (3 !== a && 8 !== a && 2 !== a)
          return (
            (1 === a && f.isXMLDoc(e)) ||
              ((t = f.propFix[t] || t), (r = f.propHooks[t])),
            void 0 !== i
              ? r && "set" in r && void 0 !== (n = r.set(e, i, t))
                ? n
                : (e[t] = i)
              : r && "get" in r && null !== (n = r.get(e, t))
              ? n
              : e[t]
          );
      },
      propHooks: {
        tabIndex: {
          get: function (e) {
            var t = f.find.attr(e, "tabindex");
            return t
              ? parseInt(t, 10)
              : wt.test(e.nodeName) || (xt.test(e.nodeName) && e.href)
              ? 0
              : -1;
          },
        },
      },
      propFix: { for: "htmlFor", class: "className" },
    }),
    u.hrefNormalized ||
      f.each(["href", "src"], function (e, t) {
        f.propHooks[t] = {
          get: function (e) {
            return e.getAttribute(t, 4);
          },
        };
      }),
    u.optSelected ||
      (f.propHooks.selected = {
        get: function (e) {
          var t = e.parentNode;
          return (
            t && (t.selectedIndex, t.parentNode && t.parentNode.selectedIndex),
            null
          );
        },
        set: function (e) {
          var t = e.parentNode;
          t && (t.selectedIndex, t.parentNode && t.parentNode.selectedIndex);
        },
      }),
    f.each(
      [
        "tabIndex",
        "readOnly",
        "maxLength",
        "cellSpacing",
        "cellPadding",
        "rowSpan",
        "colSpan",
        "useMap",
        "frameBorder",
        "contentEditable",
      ],
      function () {
        f.propFix[this.toLowerCase()] = this;
      }
    ),
    u.enctype || (f.propFix.enctype = "encoding");
  var kt = /[\t\r\n\f]/g;
  function Ct(e) {
    return f.attr(e, "class") || "";
  }
  f.fn.extend({
    addClass: function (e) {
      var t,
        i,
        n,
        r,
        a,
        s,
        o,
        l = 0;
      if (f.isFunction(e))
        return this.each(function (t) {
          f(this).addClass(e.call(this, t, Ct(this)));
        });
      if ("string" == typeof e && e) {
        t = e.match(O) || [];
        for (; (i = this[l++]); )
          if (
            ((r = Ct(i)),
            (n = 1 === i.nodeType && (" " + r + " ").replace(kt, " ")))
          ) {
            s = 0;
            for (; (a = t[s++]); )
              n.indexOf(" " + a + " ") < 0 && (n += a + " ");
            r !== (o = f.trim(n)) && f.attr(i, "class", o);
          }
      }
      return this;
    },
    removeClass: function (e) {
      var t,
        i,
        n,
        r,
        a,
        s,
        o,
        l = 0;
      if (f.isFunction(e))
        return this.each(function (t) {
          f(this).removeClass(e.call(this, t, Ct(this)));
        });
      if (!arguments.length) return this.attr("class", "");
      if ("string" == typeof e && e) {
        t = e.match(O) || [];
        for (; (i = this[l++]); )
          if (
            ((r = Ct(i)),
            (n = 1 === i.nodeType && (" " + r + " ").replace(kt, " ")))
          ) {
            s = 0;
            for (; (a = t[s++]); )
              for (; n.indexOf(" " + a + " ") > -1; )
                n = n.replace(" " + a + " ", " ");
            r !== (o = f.trim(n)) && f.attr(i, "class", o);
          }
      }
      return this;
    },
    toggleClass: function (e, t) {
      var i = typeof e;
      return "boolean" == typeof t && "string" === i
        ? t
          ? this.addClass(e)
          : this.removeClass(e)
        : f.isFunction(e)
        ? this.each(function (i) {
            f(this).toggleClass(e.call(this, i, Ct(this), t), t);
          })
        : this.each(function () {
            var t, n, r, a;
            if ("string" === i) {
              (n = 0), (r = f(this)), (a = e.match(O) || []);
              for (; (t = a[n++]); )
                r.hasClass(t) ? r.removeClass(t) : r.addClass(t);
            } else (void 0 !== e && "boolean" !== i) || ((t = Ct(this)) && f._data(this, "__className__", t), f.attr(this, "class", t || !1 === e ? "" : f._data(this, "__className__") || ""));
          });
    },
    hasClass: function (e) {
      var t,
        i,
        n = 0;
      t = " " + e + " ";
      for (; (i = this[n++]); )
        if (
          1 === i.nodeType &&
          (" " + Ct(i) + " ").replace(kt, " ").indexOf(t) > -1
        )
          return !0;
      return !1;
    },
  }),
    f.each(
      "blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(
        " "
      ),
      function (e, t) {
        f.fn[t] = function (e, i) {
          return arguments.length > 0
            ? this.on(t, null, e, i)
            : this.trigger(t);
        };
      }
    ),
    f.fn.extend({
      hover: function (e, t) {
        return this.mouseenter(e).mouseleave(t || e);
      },
    });
  var St = e.location,
    _t = f.now(),
    At = /\?/,
    Ft =
      /(,)|(\[|{)|(}|])|"(?:[^"\\\r\n]|\\["\\\/bfnrt]|\\u[\da-fA-F]{4})*"\s*:?|true|false|null|-?(?!0\d)\d+(?:\.\d+|)(?:[eE][+-]?\d+|)/g;
  (f.parseJSON = function (t) {
    if (e.JSON && e.JSON.parse) return e.JSON.parse(t + "");
    var i,
      n = null,
      r = f.trim(t + "");
    return r &&
      !f.trim(
        r.replace(Ft, function (e, t, r, a) {
          return (
            i && t && (n = 0), 0 === n ? e : ((i = r || t), (n += !a - !r), "")
          );
        })
      )
      ? Function("return " + r)()
      : f.error("Invalid JSON: " + t);
  }),
    (f.parseXML = function (t) {
      var i;
      if (!t || "string" != typeof t) return null;
      try {
        e.DOMParser
          ? (i = new e.DOMParser().parseFromString(t, "text/xml"))
          : (((i = new e.ActiveXObject("Microsoft.XMLDOM")).async = "false"),
            i.loadXML(t));
      } catch (e) {
        i = void 0;
      }
      return (
        (i &&
          i.documentElement &&
          !i.getElementsByTagName("parsererror").length) ||
          f.error("Invalid XML: " + t),
        i
      );
    });
  var Tt = /#.*$/,
    Pt = /([?&])_=[^&]*/,
    Et = /^(.*?):[ \t]*([^\r\n]*)\r?$/gm,
    It = /^(?:GET|HEAD)$/,
    Dt = /^\/\//,
    Ot = /^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/,
    Rt = {},
    Nt = {},
    Mt = "*/".concat("*"),
    Bt = St.href,
    Lt = Ot.exec(Bt.toLowerCase()) || [];
  function Ut(e) {
    return function (t, i) {
      "string" != typeof t && ((i = t), (t = "*"));
      var n,
        r = 0,
        a = t.toLowerCase().match(O) || [];
      if (f.isFunction(i))
        for (; (n = a[r++]); )
          "+" === n.charAt(0)
            ? ((n = n.slice(1) || "*"), (e[n] = e[n] || []).unshift(i))
            : (e[n] = e[n] || []).push(i);
    };
  }
  function zt(e, t, i, n) {
    var r = {},
      a = e === Nt;
    function s(o) {
      var l;
      return (
        (r[o] = !0),
        f.each(e[o] || [], function (e, o) {
          var c = o(t, i, n);
          return "string" != typeof c || a || r[c]
            ? a
              ? !(l = c)
              : void 0
            : (t.dataTypes.unshift(c), s(c), !1);
        }),
        l
      );
    }
    return s(t.dataTypes[0]) || (!r["*"] && s("*"));
  }
  function jt(e, t) {
    var i,
      n,
      r = f.ajaxSettings.flatOptions || {};
    for (n in t) void 0 !== t[n] && ((r[n] ? e : i || (i = {}))[n] = t[n]);
    return i && f.extend(!0, e, i), e;
  }
  f.extend({
    active: 0,
    lastModified: {},
    etag: {},
    ajaxSettings: {
      url: Bt,
      type: "GET",
      isLocal: /^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(
        Lt[1]
      ),
      global: !0,
      processData: !0,
      async: !0,
      contentType: "application/x-www-form-urlencoded; charset=UTF-8",
      accepts: {
        "*": Mt,
        text: "text/plain",
        html: "text/html",
        xml: "application/xml, text/xml",
        json: "application/json, text/javascript",
      },
      contents: { xml: /\bxml\b/, html: /\bhtml/, json: /\bjson\b/ },
      responseFields: {
        xml: "responseXML",
        text: "responseText",
        json: "responseJSON",
      },
      converters: {
        "* text": String,
        "text html": !0,
        "text json": f.parseJSON,
        "text xml": f.parseXML,
      },
      flatOptions: { url: !0, context: !0 },
    },
    ajaxSetup: function (e, t) {
      return t ? jt(jt(e, f.ajaxSettings), t) : jt(f.ajaxSettings, e);
    },
    ajaxPrefilter: Ut(Rt),
    ajaxTransport: Ut(Nt),
    ajax: function (t, i) {
      "object" == typeof t && ((i = t), (t = void 0)), (i = i || {});
      var n,
        r,
        a,
        s,
        o,
        l,
        c,
        h,
        u = f.ajaxSetup({}, i),
        d = u.context || u,
        p = u.context && (d.nodeType || d.jquery) ? f(d) : f.event,
        g = f.Deferred(),
        m = f.Callbacks("once memory"),
        v = u.statusCode || {},
        b = {},
        y = {},
        w = 0,
        x = "canceled",
        k = {
          readyState: 0,
          getResponseHeader: function (e) {
            var t;
            if (2 === w) {
              if (!h) {
                h = {};
                for (; (t = Et.exec(s)); ) h[t[1].toLowerCase()] = t[2];
              }
              t = h[e.toLowerCase()];
            }
            return null == t ? null : t;
          },
          getAllResponseHeaders: function () {
            return 2 === w ? s : null;
          },
          setRequestHeader: function (e, t) {
            var i = e.toLowerCase();
            return w || ((e = y[i] = y[i] || e), (b[e] = t)), this;
          },
          overrideMimeType: function (e) {
            return w || (u.mimeType = e), this;
          },
          statusCode: function (e) {
            var t;
            if (e)
              if (2 > w) for (t in e) v[t] = [v[t], e[t]];
              else k.always(e[k.status]);
            return this;
          },
          abort: function (e) {
            var t = e || x;
            return c && c.abort(t), C(0, t), this;
          },
        };
      if (
        ((g.promise(k).complete = m.add),
        (k.success = k.done),
        (k.error = k.fail),
        (u.url = ((t || u.url || Bt) + "")
          .replace(Tt, "")
          .replace(Dt, Lt[1] + "//")),
        (u.type = i.method || i.type || u.method || u.type),
        (u.dataTypes = f
          .trim(u.dataType || "*")
          .toLowerCase()
          .match(O) || [""]),
        null == u.crossDomain &&
          ((n = Ot.exec(u.url.toLowerCase())),
          (u.crossDomain = !(
            !n ||
            (n[1] === Lt[1] &&
              n[2] === Lt[2] &&
              (n[3] || ("http:" === n[1] ? "80" : "443")) ===
                (Lt[3] || ("http:" === Lt[1] ? "80" : "443")))
          ))),
        u.data &&
          u.processData &&
          "string" != typeof u.data &&
          (u.data = f.param(u.data, u.traditional)),
        zt(Rt, u, i, k),
        2 === w)
      )
        return k;
      (l = f.event && u.global) &&
        0 == f.active++ &&
        f.event.trigger("ajaxStart"),
        (u.type = u.type.toUpperCase()),
        (u.hasContent = !It.test(u.type)),
        (a = u.url),
        u.hasContent ||
          (u.data &&
            ((a = u.url += (At.test(a) ? "&" : "?") + u.data), delete u.data),
          !1 === u.cache &&
            (u.url = Pt.test(a)
              ? a.replace(Pt, "$1_=" + _t++)
              : a + (At.test(a) ? "&" : "?") + "_=" + _t++)),
        u.ifModified &&
          (f.lastModified[a] &&
            k.setRequestHeader("If-Modified-Since", f.lastModified[a]),
          f.etag[a] && k.setRequestHeader("If-None-Match", f.etag[a])),
        ((u.data && u.hasContent && !1 !== u.contentType) || i.contentType) &&
          k.setRequestHeader("Content-Type", u.contentType),
        k.setRequestHeader(
          "Accept",
          u.dataTypes[0] && u.accepts[u.dataTypes[0]]
            ? u.accepts[u.dataTypes[0]] +
                ("*" !== u.dataTypes[0] ? ", " + Mt + "; q=0.01" : "")
            : u.accepts["*"]
        );
      for (r in u.headers) k.setRequestHeader(r, u.headers[r]);
      if (u.beforeSend && (!1 === u.beforeSend.call(d, k, u) || 2 === w))
        return k.abort();
      x = "abort";
      for (r in { success: 1, error: 1, complete: 1 }) k[r](u[r]);
      if ((c = zt(Nt, u, i, k))) {
        if (((k.readyState = 1), l && p.trigger("ajaxSend", [k, u]), 2 === w))
          return k;
        u.async &&
          u.timeout > 0 &&
          (o = e.setTimeout(function () {
            k.abort("timeout");
          }, u.timeout));
        try {
          (w = 1), c.send(b, C);
        } catch (e) {
          if (!(2 > w)) throw e;
          C(-1, e);
        }
      } else C(-1, "No Transport");
      function C(t, i, n, r) {
        var h,
          b,
          y,
          x,
          C,
          S = i;
        2 !== w &&
          ((w = 2),
          o && e.clearTimeout(o),
          (c = void 0),
          (s = r || ""),
          (k.readyState = t > 0 ? 4 : 0),
          (h = (t >= 200 && 300 > t) || 304 === t),
          n &&
            (x = (function (e, t, i) {
              for (
                var n, r, a, s, o = e.contents, l = e.dataTypes;
                "*" === l[0];

              )
                l.shift(),
                  void 0 === r &&
                    (r = e.mimeType || t.getResponseHeader("Content-Type"));
              if (r)
                for (s in o)
                  if (o[s] && o[s].test(r)) {
                    l.unshift(s);
                    break;
                  }
              if (l[0] in i) a = l[0];
              else {
                for (s in i) {
                  if (!l[0] || e.converters[s + " " + l[0]]) {
                    a = s;
                    break;
                  }
                  n || (n = s);
                }
                a = a || n;
              }
              return a ? (a !== l[0] && l.unshift(a), i[a]) : void 0;
            })(u, k, n)),
          (x = (function (e, t, i, n) {
            var r,
              a,
              s,
              o,
              l,
              c = {},
              h = e.dataTypes.slice();
            if (h[1])
              for (s in e.converters) c[s.toLowerCase()] = e.converters[s];
            a = h.shift();
            for (; a; )
              if (
                (e.responseFields[a] && (i[e.responseFields[a]] = t),
                !l && n && e.dataFilter && (t = e.dataFilter(t, e.dataType)),
                (l = a),
                (a = h.shift()))
              )
                if ("*" === a) a = l;
                else if ("*" !== l && l !== a) {
                  if (!(s = c[l + " " + a] || c["* " + a]))
                    for (r in c)
                      if (
                        (o = r.split(" "))[1] === a &&
                        (s = c[l + " " + o[0]] || c["* " + o[0]])
                      ) {
                        !0 === s
                          ? (s = c[r])
                          : !0 !== c[r] && ((a = o[0]), h.unshift(o[1]));
                        break;
                      }
                  if (!0 !== s)
                    if (s && e.throws) t = s(t);
                    else
                      try {
                        t = s(t);
                      } catch (e) {
                        return {
                          state: "parsererror",
                          error: s ? e : "No conversion from " + l + " to " + a,
                        };
                      }
                }
            return { state: "success", data: t };
          })(u, x, k, h)),
          h
            ? (u.ifModified &&
                ((C = k.getResponseHeader("Last-Modified")) &&
                  (f.lastModified[a] = C),
                (C = k.getResponseHeader("etag")) && (f.etag[a] = C)),
              204 === t || "HEAD" === u.type
                ? (S = "nocontent")
                : 304 === t
                ? (S = "notmodified")
                : ((S = x.state), (b = x.data), (h = !(y = x.error))))
            : ((y = S), (!t && S) || ((S = "error"), 0 > t && (t = 0))),
          (k.status = t),
          (k.statusText = (i || S) + ""),
          h ? g.resolveWith(d, [b, S, k]) : g.rejectWith(d, [k, S, y]),
          k.statusCode(v),
          (v = void 0),
          l && p.trigger(h ? "ajaxSuccess" : "ajaxError", [k, u, h ? b : y]),
          m.fireWith(d, [k, S]),
          l &&
            (p.trigger("ajaxComplete", [k, u]),
            --f.active || f.event.trigger("ajaxStop")));
      }
      return k;
    },
    getJSON: function (e, t, i) {
      return f.get(e, t, i, "json");
    },
    getScript: function (e, t) {
      return f.get(e, void 0, t, "script");
    },
  }),
    f.each(["get", "post"], function (e, t) {
      f[t] = function (e, i, n, r) {
        return (
          f.isFunction(i) && ((r = r || n), (n = i), (i = void 0)),
          f.ajax(
            f.extend(
              { url: e, type: t, dataType: r, data: i, success: n },
              f.isPlainObject(e) && e
            )
          )
        );
      };
    }),
    (f._evalUrl = function (e) {
      return f.ajax({
        url: e,
        type: "GET",
        dataType: "script",
        cache: !0,
        async: !1,
        global: !1,
        throws: !0,
      });
    }),
    f.fn.extend({
      wrapAll: function (e) {
        if (f.isFunction(e))
          return this.each(function (t) {
            f(this).wrapAll(e.call(this, t));
          });
        if (this[0]) {
          var t = f(e, this[0].ownerDocument).eq(0).clone(!0);
          this[0].parentNode && t.insertBefore(this[0]),
            t
              .map(function () {
                for (
                  var e = this;
                  e.firstChild && 1 === e.firstChild.nodeType;

                )
                  e = e.firstChild;
                return e;
              })
              .append(this);
        }
        return this;
      },
      wrapInner: function (e) {
        return f.isFunction(e)
          ? this.each(function (t) {
              f(this).wrapInner(e.call(this, t));
            })
          : this.each(function () {
              var t = f(this),
                i = t.contents();
              i.length ? i.wrapAll(e) : t.append(e);
            });
      },
      wrap: function (e) {
        var t = f.isFunction(e);
        return this.each(function (i) {
          f(this).wrapAll(t ? e.call(this, i) : e);
        });
      },
      unwrap: function () {
        return this.parent()
          .each(function () {
            f.nodeName(this, "body") || f(this).replaceWith(this.childNodes);
          })
          .end();
      },
    });
  function qt(e) {
    return (e.style && e.style.display) || f.css(e, "display");
  }
  (f.expr.filters.hidden = function (e) {
    return u.reliableHiddenOffsets()
      ? e.offsetWidth <= 0 && e.offsetHeight <= 0 && !e.getClientRects().length
      : (function (e) {
          if (!f.contains(e.ownerDocument || n, e)) return !0;
          for (; e && 1 === e.nodeType; ) {
            if ("none" === qt(e) || "hidden" === e.type) return !0;
            e = e.parentNode;
          }
          return !1;
        })(e);
  }),
    (f.expr.filters.visible = function (e) {
      return !f.expr.filters.hidden(e);
    });
  var Ht = /%20/g,
    Wt = /\[\]$/,
    Gt = /\r?\n/g,
    Vt = /^(?:submit|button|image|reset|file)$/i,
    Xt = /^(?:input|select|textarea|keygen)/i;
  function Kt(e, t, i, n) {
    var r;
    if (f.isArray(t))
      f.each(t, function (t, r) {
        i || Wt.test(e)
          ? n(e, r)
          : Kt(
              e + "[" + ("object" == typeof r && null != r ? t : "") + "]",
              r,
              i,
              n
            );
      });
    else if (i || "object" !== f.type(t)) n(e, t);
    else for (r in t) Kt(e + "[" + r + "]", t[r], i, n);
  }
  (f.param = function (e, t) {
    var i,
      n = [],
      r = function (e, t) {
        (t = f.isFunction(t) ? t() : null == t ? "" : t),
          (n[n.length] = encodeURIComponent(e) + "=" + encodeURIComponent(t));
      };
    if (
      (void 0 === t && (t = f.ajaxSettings && f.ajaxSettings.traditional),
      f.isArray(e) || (e.jquery && !f.isPlainObject(e)))
    )
      f.each(e, function () {
        r(this.name, this.value);
      });
    else for (i in e) Kt(i, e[i], t, r);
    return n.join("&").replace(Ht, "+");
  }),
    f.fn.extend({
      serialize: function () {
        return f.param(this.serializeArray());
      },
      serializeArray: function () {
        return this.map(function () {
          var e = f.prop(this, "elements");
          return e ? f.makeArray(e) : this;
        })
          .filter(function () {
            var e = this.type;
            return (
              this.name &&
              !f(this).is(":disabled") &&
              Xt.test(this.nodeName) &&
              !Vt.test(e) &&
              (this.checked || !Y.test(e))
            );
          })
          .map(function (e, t) {
            var i = f(this).val();
            return null == i
              ? null
              : f.isArray(i)
              ? f.map(i, function (e) {
                  return { name: t.name, value: e.replace(Gt, "\r\n") };
                })
              : { name: t.name, value: i.replace(Gt, "\r\n") };
          })
          .get();
      },
    }),
    (f.ajaxSettings.xhr =
      void 0 !== e.ActiveXObject
        ? function () {
            return this.isLocal
              ? Qt()
              : n.documentMode > 8
              ? $t()
              : (/^(get|post|head|put|delete|options)$/i.test(this.type) &&
                  $t()) ||
                Qt();
          }
        : $t);
  var Yt = 0,
    Zt = {},
    Jt = f.ajaxSettings.xhr();
  e.attachEvent &&
    e.attachEvent("onunload", function () {
      for (var e in Zt) Zt[e](void 0, !0);
    }),
    (u.cors = !!Jt && "withCredentials" in Jt),
    (Jt = u.ajax = !!Jt) &&
      f.ajaxTransport(function (t) {
        if (!t.crossDomain || u.cors) {
          var i;
          return {
            send: function (n, r) {
              var a,
                s = t.xhr(),
                o = ++Yt;
              if (
                (s.open(t.type, t.url, t.async, t.username, t.password),
                t.xhrFields)
              )
                for (a in t.xhrFields) s[a] = t.xhrFields[a];
              t.mimeType &&
                s.overrideMimeType &&
                s.overrideMimeType(t.mimeType),
                t.crossDomain ||
                  n["X-Requested-With"] ||
                  (n["X-Requested-With"] = "XMLHttpRequest");
              for (a in n) void 0 !== n[a] && s.setRequestHeader(a, n[a] + "");
              s.send((t.hasContent && t.data) || null),
                (i = function (e, n) {
                  var a, l, c;
                  if (i && (n || 4 === s.readyState))
                    if (
                      (delete Zt[o],
                      (i = void 0),
                      (s.onreadystatechange = f.noop),
                      n)
                    )
                      4 !== s.readyState && s.abort();
                    else {
                      (c = {}),
                        (a = s.status),
                        "string" == typeof s.responseText &&
                          (c.text = s.responseText);
                      try {
                        l = s.statusText;
                      } catch (e) {
                        l = "";
                      }
                      a || !t.isLocal || t.crossDomain
                        ? 1223 === a && (a = 204)
                        : (a = c.text ? 200 : 404);
                    }
                  c && r(a, l, c, s.getAllResponseHeaders());
                }),
                t.async
                  ? 4 === s.readyState
                    ? e.setTimeout(i)
                    : (s.onreadystatechange = Zt[o] = i)
                  : i();
            },
            abort: function () {
              i && i(void 0, !0);
            },
          };
        }
      });
  function $t() {
    try {
      return new e.XMLHttpRequest();
    } catch (e) {}
  }
  function Qt() {
    try {
      return new e.ActiveXObject("Microsoft.XMLHTTP");
    } catch (e) {}
  }
  f.ajaxSetup({
    accepts: {
      script:
        "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript",
    },
    contents: { script: /\b(?:java|ecma)script\b/ },
    converters: {
      "text script": function (e) {
        return f.globalEval(e), e;
      },
    },
  }),
    f.ajaxPrefilter("script", function (e) {
      void 0 === e.cache && (e.cache = !1),
        e.crossDomain && ((e.type = "GET"), (e.global = !1));
    }),
    f.ajaxTransport("script", function (e) {
      if (e.crossDomain) {
        var t,
          i = n.head || f("head")[0] || n.documentElement;
        return {
          send: function (r, a) {
            ((t = n.createElement("script")).async = !0),
              e.scriptCharset && (t.charset = e.scriptCharset),
              (t.src = e.url),
              (t.onload = t.onreadystatechange =
                function (e, i) {
                  (i ||
                    !t.readyState ||
                    /loaded|complete/.test(t.readyState)) &&
                    ((t.onload = t.onreadystatechange = null),
                    t.parentNode && t.parentNode.removeChild(t),
                    (t = null),
                    i || a(200, "success"));
                }),
              i.insertBefore(t, i.firstChild);
          },
          abort: function () {
            t && t.onload(void 0, !0);
          },
        };
      }
    });
  var ei = [],
    ti = /(=)\?(?=&|$)|\?\?/;
  f.ajaxSetup({
    jsonp: "callback",
    jsonpCallback: function () {
      var e = ei.pop() || f.expando + "_" + _t++;
      return (this[e] = !0), e;
    },
  }),
    f.ajaxPrefilter("json jsonp", function (t, i, n) {
      var r,
        a,
        s,
        o =
          !1 !== t.jsonp &&
          (ti.test(t.url)
            ? "url"
            : "string" == typeof t.data &&
              0 ===
                (t.contentType || "").indexOf(
                  "application/x-www-form-urlencoded"
                ) &&
              ti.test(t.data) &&
              "data");
      return o || "jsonp" === t.dataTypes[0]
        ? ((r = t.jsonpCallback =
            f.isFunction(t.jsonpCallback)
              ? t.jsonpCallback()
              : t.jsonpCallback),
          o
            ? (t[o] = t[o].replace(ti, "$1" + r))
            : !1 !== t.jsonp &&
              (t.url += (At.test(t.url) ? "&" : "?") + t.jsonp + "=" + r),
          (t.converters["script json"] = function () {
            return s || f.error(r + " was not called"), s[0];
          }),
          (t.dataTypes[0] = "json"),
          (a = e[r]),
          (e[r] = function () {
            s = arguments;
          }),
          n.always(function () {
            void 0 === a ? f(e).removeProp(r) : (e[r] = a),
              t[r] && ((t.jsonpCallback = i.jsonpCallback), ei.push(r)),
              s && f.isFunction(a) && a(s[0]),
              (s = a = void 0);
          }),
          "script")
        : void 0;
    }),
    (f.parseHTML = function (e, t, i) {
      if (!e || "string" != typeof e) return null;
      "boolean" == typeof t && ((i = t), (t = !1)), (t = t || n);
      var r = C.exec(e),
        a = !i && [];
      return r
        ? [t.createElement(r[1])]
        : ((r = oe([e], t, a)),
          a && a.length && f(a).remove(),
          f.merge([], r.childNodes));
    });
  var ii = f.fn.load;
  (f.fn.load = function (e, t, i) {
    if ("string" != typeof e && ii) return ii.apply(this, arguments);
    var n,
      r,
      a,
      s = this,
      o = e.indexOf(" ");
    return (
      o > -1 && ((n = f.trim(e.slice(o, e.length))), (e = e.slice(0, o))),
      f.isFunction(t)
        ? ((i = t), (t = void 0))
        : t && "object" == typeof t && (r = "POST"),
      s.length > 0 &&
        f
          .ajax({ url: e, type: r || "GET", dataType: "html", data: t })
          .done(function (e) {
            (a = arguments),
              s.html(n ? f("<div>").append(f.parseHTML(e)).find(n) : e);
          })
          .always(
            i &&
              function (e, t) {
                s.each(function () {
                  i.apply(this, a || [e.responseText, t, e]);
                });
              }
          ),
      this
    );
  }),
    f.each(
      [
        "ajaxStart",
        "ajaxStop",
        "ajaxComplete",
        "ajaxError",
        "ajaxSuccess",
        "ajaxSend",
      ],
      function (e, t) {
        f.fn[t] = function (e) {
          return this.on(t, e);
        };
      }
    ),
    (f.expr.filters.animated = function (e) {
      return f.grep(f.timers, function (t) {
        return e === t.elem;
      }).length;
    });
  function ni(e) {
    return f.isWindow(e)
      ? e
      : 9 === e.nodeType
      ? e.defaultView || e.parentWindow
      : !1;
  }
  (f.offset = {
    setOffset: function (e, t, i) {
      var n,
        r,
        a,
        s,
        o,
        l,
        c = f.css(e, "position"),
        h = f(e),
        u = {};
      "static" === c && (e.style.position = "relative"),
        (o = h.offset()),
        (a = f.css(e, "top")),
        (l = f.css(e, "left")),
        ("absolute" === c || "fixed" === c) && f.inArray("auto", [a, l]) > -1
          ? ((s = (n = h.position()).top), (r = n.left))
          : ((s = parseFloat(a) || 0), (r = parseFloat(l) || 0)),
        f.isFunction(t) && (t = t.call(e, i, f.extend({}, o))),
        null != t.top && (u.top = t.top - o.top + s),
        null != t.left && (u.left = t.left - o.left + r),
        "using" in t ? t.using.call(e, u) : h.css(u);
    },
  }),
    f.fn.extend({
      offset: function (e) {
        if (arguments.length)
          return void 0 === e
            ? this
            : this.each(function (t) {
                f.offset.setOffset(this, e, t);
              });
        var t,
          i,
          n = { top: 0, left: 0 },
          r = this[0],
          a = r && r.ownerDocument;
        if (a)
          return (
            (t = a.documentElement),
            f.contains(t, r)
              ? (void 0 !== r.getBoundingClientRect &&
                  (n = r.getBoundingClientRect()),
                (i = ni(a)),
                {
                  top:
                    n.top + (i.pageYOffset || t.scrollTop) - (t.clientTop || 0),
                  left:
                    n.left +
                    (i.pageXOffset || t.scrollLeft) -
                    (t.clientLeft || 0),
                })
              : n
          );
      },
      position: function () {
        if (this[0]) {
          var e,
            t,
            i = { top: 0, left: 0 },
            n = this[0];
          return (
            "fixed" === f.css(n, "position")
              ? (t = n.getBoundingClientRect())
              : ((e = this.offsetParent()),
                (t = this.offset()),
                f.nodeName(e[0], "html") || (i = e.offset()),
                (i.top += f.css(e[0], "borderTopWidth", !0)),
                (i.left += f.css(e[0], "borderLeftWidth", !0))),
            {
              top: t.top - i.top - f.css(n, "marginTop", !0),
              left: t.left - i.left - f.css(n, "marginLeft", !0),
            }
          );
        }
      },
      offsetParent: function () {
        return this.map(function () {
          for (
            var e = this.offsetParent;
            e && !f.nodeName(e, "html") && "static" === f.css(e, "position");

          )
            e = e.offsetParent;
          return e || Ue;
        });
      },
    }),
    f.each(
      { scrollLeft: "pageXOffset", scrollTop: "pageYOffset" },
      function (e, t) {
        var i = /Y/.test(t);
        f.fn[e] = function (n) {
          return K(
            this,
            function (e, n, r) {
              var a = ni(e);
              return void 0 === r
                ? a
                  ? t in a
                    ? a[t]
                    : a.document.documentElement[n]
                  : e[n]
                : void (a
                    ? a.scrollTo(
                        i ? f(a).scrollLeft() : r,
                        i ? r : f(a).scrollTop()
                      )
                    : (e[n] = r));
            },
            e,
            n,
            arguments.length,
            null
          );
        };
      }
    ),
    f.each(["top", "left"], function (e, t) {
      f.cssHooks[t] = He(u.pixelPosition, function (e, i) {
        return i
          ? ((i = je(e, t)), Be.test(i) ? f(e).position()[t] + "px" : i)
          : void 0;
      });
    }),
    f.each({ Height: "height", Width: "width" }, function (e, t) {
      f.each(
        { padding: "inner" + e, content: t, "": "outer" + e },
        function (i, n) {
          f.fn[n] = function (n, r) {
            var a = arguments.length && (i || "boolean" != typeof n),
              s = i || (!0 === n || !0 === r ? "margin" : "border");
            return K(
              this,
              function (t, i, n) {
                var r;
                return f.isWindow(t)
                  ? t.document.documentElement["client" + e]
                  : 9 === t.nodeType
                  ? ((r = t.documentElement),
                    Math.max(
                      t.body["scroll" + e],
                      r["scroll" + e],
                      t.body["offset" + e],
                      r["offset" + e],
                      r["client" + e]
                    ))
                  : void 0 === n
                  ? f.css(t, i, s)
                  : f.style(t, i, n, s);
              },
              t,
              a ? n : void 0,
              a,
              null
            );
          };
        }
      );
    }),
    f.fn.extend({
      bind: function (e, t, i) {
        return this.on(e, null, t, i);
      },
      unbind: function (e, t) {
        return this.off(e, null, t);
      },
      delegate: function (e, t, i, n) {
        return this.on(t, e, i, n);
      },
      undelegate: function (e, t, i) {
        return 1 === arguments.length
          ? this.off(e, "**")
          : this.off(t, e || "**", i);
      },
    }),
    (f.fn.size = function () {
      return this.length;
    }),
    (f.fn.andSelf = f.fn.addBack),
    "function" == typeof define &&
      define.amd &&
      define("jquery", [], function () {
        return f;
      });
  var ri = e.jQuery,
    ai = e.$;
  return (
    (f.noConflict = function (t) {
      return e.$ === f && (e.$ = ai), t && e.jQuery === f && (e.jQuery = ri), f;
    }),
    t || (e.jQuery = e.$ = f),
    f
  );
});
!(function (e) {
  "function" == typeof define && define.amd ? define(["jquery"], e) : e(jQuery);
})(function (e) {
  function t() {
    (this._curInst = null),
      (this._keyEvent = !1),
      (this._disabledInputs = []),
      (this._datepickerShowing = !1),
      (this._inDialog = !1),
      (this._mainDivId = "ui-datepicker-div"),
      (this._inlineClass = "ui-datepicker-inline"),
      (this._appendClass = "ui-datepicker-append"),
      (this._triggerClass = "ui-datepicker-trigger"),
      (this._dialogClass = "ui-datepicker-dialog"),
      (this._disableClass = "ui-datepicker-disabled"),
      (this._unselectableClass = "ui-datepicker-unselectable"),
      (this._currentClass = "ui-datepicker-current-day"),
      (this._dayOverClass = "ui-datepicker-days-cell-over"),
      (this.regional = []),
      (this.regional[""] = {
        closeText: "Done",
        prevText: "Prev",
        nextText: "Next",
        currentText: "Today",
        monthNames: [
          "January",
          "February",
          "March",
          "April",
          "May",
          "June",
          "July",
          "August",
          "September",
          "October",
          "November",
          "December",
        ],
        monthNamesShort: [
          "Jan",
          "Feb",
          "Mar",
          "Apr",
          "May",
          "Jun",
          "Jul",
          "Aug",
          "Sep",
          "Oct",
          "Nov",
          "Dec",
        ],
        dayNames: [
          "Sunday",
          "Monday",
          "Tuesday",
          "Wednesday",
          "Thursday",
          "Friday",
          "Saturday",
        ],
        dayNamesShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
        dayNamesMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
        weekHeader: "Wk",
        dateFormat: "mm/dd/yy",
        firstDay: 0,
        isRTL: !1,
        showMonthAfterYear: !1,
        yearSuffix: "",
      }),
      (this._defaults = {
        showOn: "focus",
        showAnim: "fadeIn",
        showOptions: {},
        defaultDate: null,
        appendText: "",
        buttonText: "...",
        buttonImage: "",
        buttonImageOnly: !1,
        hideIfNoPrevNext: !1,
        navigationAsDateFormat: !1,
        gotoCurrent: !1,
        changeMonth: !1,
        changeYear: !1,
        yearRange: "c-10:c+10",
        showOtherMonths: !1,
        selectOtherMonths: !1,
        showWeek: !1,
        calculateWeek: this.iso8601Week,
        shortYearCutoff: "+10",
        minDate: null,
        maxDate: null,
        duration: "fast",
        beforeShowDay: null,
        beforeShow: null,
        onSelect: null,
        onChangeMonthYear: null,
        onClose: null,
        numberOfMonths: 1,
        showCurrentAtPos: 0,
        stepMonths: 1,
        stepBigMonths: 12,
        altField: "",
        altFormat: "",
        constrainInput: !0,
        showButtonPanel: !1,
        autoSize: !1,
        disabled: !1,
      }),
      e.extend(this._defaults, this.regional[""]),
      (this.regional.en = e.extend(!0, {}, this.regional[""])),
      (this.regional["en-US"] = e.extend(!0, {}, this.regional.en)),
      (this.dpDiv = i(
        e(
          "<div id='" +
            this._mainDivId +
            "' class='ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>"
        )
      ));
  }
  function i(t) {
    var i =
      "button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a";
    return t
      .on("mouseout", i, function () {
        e(this).removeClass("ui-state-hover"),
          -1 !== this.className.indexOf("ui-datepicker-prev") &&
            e(this).removeClass("ui-datepicker-prev-hover"),
          -1 !== this.className.indexOf("ui-datepicker-next") &&
            e(this).removeClass("ui-datepicker-next-hover");
      })
      .on("mouseover", i, n);
  }
  function n() {
    e.datepicker._isDisabledDatepicker(
      f.inline ? f.dpDiv.parent()[0] : f.input[0]
    ) ||
      (e(this)
        .parents(".ui-datepicker-calendar")
        .find("a")
        .removeClass("ui-state-hover"),
      e(this).addClass("ui-state-hover"),
      -1 !== this.className.indexOf("ui-datepicker-prev") &&
        e(this).addClass("ui-datepicker-prev-hover"),
      -1 !== this.className.indexOf("ui-datepicker-next") &&
        e(this).addClass("ui-datepicker-next-hover"));
  }
  function r(t, i) {
    e.extend(t, i);
    for (var n in i) null == i[n] && (t[n] = i[n]);
    return t;
  }
  function a(e) {
    return function () {
      var t = this.element.val();
      e.apply(this, arguments),
        this._refresh(),
        t !== this.element.val() && this._trigger("change");
    };
  }
  (e.ui = e.ui || {}), (e.ui.version = "1.12.1");
  var s,
    o = 0,
    l = Array.prototype.slice;
  (e.cleanData =
    ((s = e.cleanData),
    function (t) {
      var i, n, r;
      for (r = 0; null != (n = t[r]); r++)
        try {
          (i = e._data(n, "events")) &&
            i.remove &&
            e(n).triggerHandler("remove");
        } catch (e) {}
      s(t);
    })),
    (e.widget = function (t, i, n) {
      var r,
        a,
        s,
        o = {},
        l = t.split(".")[0],
        c = l + "-" + (t = t.split(".")[1]);
      return (
        n || ((n = i), (i = e.Widget)),
        e.isArray(n) && (n = e.extend.apply(null, [{}].concat(n))),
        (e.expr[":"][c.toLowerCase()] = function (t) {
          return !!e.data(t, c);
        }),
        (e[l] = e[l] || {}),
        (r = e[l][t]),
        (a = e[l][t] =
          function (e, t) {
            return this._createWidget
              ? void (arguments.length && this._createWidget(e, t))
              : new a(e, t);
          }),
        e.extend(a, r, {
          version: n.version,
          _proto: e.extend({}, n),
          _childConstructors: [],
        }),
        ((s = new i()).options = e.widget.extend({}, s.options)),
        e.each(n, function (t, n) {
          return e.isFunction(n)
            ? void (o[t] = (function () {
                function e() {
                  return i.prototype[t].apply(this, arguments);
                }
                function r(e) {
                  return i.prototype[t].apply(this, e);
                }
                return function () {
                  var t,
                    i = this._super,
                    a = this._superApply;
                  return (
                    (this._super = e),
                    (this._superApply = r),
                    (t = n.apply(this, arguments)),
                    (this._super = i),
                    (this._superApply = a),
                    t
                  );
                };
              })())
            : void (o[t] = n);
        }),
        (a.prototype = e.widget.extend(
          s,
          { widgetEventPrefix: r ? s.widgetEventPrefix || t : t },
          o,
          { constructor: a, namespace: l, widgetName: t, widgetFullName: c }
        )),
        r
          ? (e.each(r._childConstructors, function (t, i) {
              var n = i.prototype;
              e.widget(n.namespace + "." + n.widgetName, a, i._proto);
            }),
            delete r._childConstructors)
          : i._childConstructors.push(a),
        e.widget.bridge(t, a),
        a
      );
    }),
    (e.widget.extend = function (t) {
      for (var i, n, r = l.call(arguments, 1), a = 0, s = r.length; s > a; a++)
        for (i in r[a])
          (n = r[a][i]),
            r[a].hasOwnProperty(i) &&
              void 0 !== n &&
              (t[i] = e.isPlainObject(n)
                ? e.isPlainObject(t[i])
                  ? e.widget.extend({}, t[i], n)
                  : e.widget.extend({}, n)
                : n);
      return t;
    }),
    (e.widget.bridge = function (t, i) {
      var n = i.prototype.widgetFullName || t;
      e.fn[t] = function (r) {
        var a = "string" == typeof r,
          s = l.call(arguments, 1),
          o = this;
        return (
          a
            ? this.length || "instance" !== r
              ? this.each(function () {
                  var i,
                    a = e.data(this, n);
                  return "instance" === r
                    ? ((o = a), !1)
                    : a
                    ? e.isFunction(a[r]) && "_" !== r.charAt(0)
                      ? (i = a[r].apply(a, s)) !== a && void 0 !== i
                        ? ((o = i && i.jquery ? o.pushStack(i.get()) : i), !1)
                        : void 0
                      : e.error(
                          "no such method '" +
                            r +
                            "' for " +
                            t +
                            " widget instance"
                        )
                    : e.error(
                        "cannot call methods on " +
                          t +
                          " prior to initialization; attempted to call method '" +
                          r +
                          "'"
                      );
                })
              : (o = void 0)
            : (s.length && (r = e.widget.extend.apply(null, [r].concat(s))),
              this.each(function () {
                var t = e.data(this, n);
                t
                  ? (t.option(r || {}), t._init && t._init())
                  : e.data(this, n, new i(r, this));
              })),
          o
        );
      };
    }),
    (e.Widget = function () {}),
    (e.Widget._childConstructors = []),
    (e.Widget.prototype = {
      widgetName: "widget",
      widgetEventPrefix: "",
      defaultElement: "<div>",
      options: { classes: {}, disabled: !1, create: null },
      _createWidget: function (t, i) {
        (i = e(i || this.defaultElement || this)[0]),
          (this.element = e(i)),
          (this.uuid = o++),
          (this.eventNamespace = "." + this.widgetName + this.uuid),
          (this.bindings = e()),
          (this.hoverable = e()),
          (this.focusable = e()),
          (this.classesElementLookup = {}),
          i !== this &&
            (e.data(i, this.widgetFullName, this),
            this._on(!0, this.element, {
              remove: function (e) {
                e.target === i && this.destroy();
              },
            }),
            (this.document = e(i.style ? i.ownerDocument : i.document || i)),
            (this.window = e(
              this.document[0].defaultView || this.document[0].parentWindow
            ))),
          (this.options = e.widget.extend(
            {},
            this.options,
            this._getCreateOptions(),
            t
          )),
          this._create(),
          this.options.disabled &&
            this._setOptionDisabled(this.options.disabled),
          this._trigger("create", null, this._getCreateEventData()),
          this._init();
      },
      _getCreateOptions: function () {
        return {};
      },
      _getCreateEventData: e.noop,
      _create: e.noop,
      _init: e.noop,
      destroy: function () {
        var t = this;
        this._destroy(),
          e.each(this.classesElementLookup, function (e, i) {
            t._removeClass(i, e);
          }),
          this.element.off(this.eventNamespace).removeData(this.widgetFullName),
          this.widget().off(this.eventNamespace).removeAttr("aria-disabled"),
          this.bindings.off(this.eventNamespace);
      },
      _destroy: e.noop,
      widget: function () {
        return this.element;
      },
      option: function (t, i) {
        var n,
          r,
          a,
          s = t;
        if (0 === arguments.length) return e.widget.extend({}, this.options);
        if ("string" == typeof t)
          if (((s = {}), (n = t.split(".")), (t = n.shift()), n.length)) {
            for (
              r = s[t] = e.widget.extend({}, this.options[t]), a = 0;
              n.length - 1 > a;
              a++
            )
              (r[n[a]] = r[n[a]] || {}), (r = r[n[a]]);
            if (((t = n.pop()), 1 === arguments.length))
              return void 0 === r[t] ? null : r[t];
            r[t] = i;
          } else {
            if (1 === arguments.length)
              return void 0 === this.options[t] ? null : this.options[t];
            s[t] = i;
          }
        return this._setOptions(s), this;
      },
      _setOptions: function (e) {
        var t;
        for (t in e) this._setOption(t, e[t]);
        return this;
      },
      _setOption: function (e, t) {
        return (
          "classes" === e && this._setOptionClasses(t),
          (this.options[e] = t),
          "disabled" === e && this._setOptionDisabled(t),
          this
        );
      },
      _setOptionClasses: function (t) {
        var i, n, r;
        for (i in t)
          (r = this.classesElementLookup[i]),
            t[i] !== this.options.classes[i] &&
              r &&
              r.length &&
              ((n = e(r.get())),
              this._removeClass(r, i),
              n.addClass(
                this._classes({ element: n, keys: i, classes: t, add: !0 })
              ));
      },
      _setOptionDisabled: function (e) {
        this._toggleClass(
          this.widget(),
          this.widgetFullName + "-disabled",
          null,
          !!e
        ),
          e &&
            (this._removeClass(this.hoverable, null, "ui-state-hover"),
            this._removeClass(this.focusable, null, "ui-state-focus"));
      },
      enable: function () {
        return this._setOptions({ disabled: !1 });
      },
      disable: function () {
        return this._setOptions({ disabled: !0 });
      },
      _classes: function (t) {
        function i(i, a) {
          var s, o;
          for (o = 0; i.length > o; o++)
            (s = r.classesElementLookup[i[o]] || e()),
              (s = t.add
                ? e(e.unique(s.get().concat(t.element.get())))
                : e(s.not(t.element).get())),
              (r.classesElementLookup[i[o]] = s),
              n.push(i[o]),
              a && t.classes[i[o]] && n.push(t.classes[i[o]]);
        }
        var n = [],
          r = this;
        return (
          (t = e.extend(
            { element: this.element, classes: this.options.classes || {} },
            t
          )),
          this._on(t.element, { remove: "_untrackClassesElement" }),
          t.keys && i(t.keys.match(/\S+/g) || [], !0),
          t.extra && i(t.extra.match(/\S+/g) || []),
          n.join(" ")
        );
      },
      _untrackClassesElement: function (t) {
        var i = this;
        e.each(i.classesElementLookup, function (n, r) {
          -1 !== e.inArray(t.target, r) &&
            (i.classesElementLookup[n] = e(r.not(t.target).get()));
        });
      },
      _removeClass: function (e, t, i) {
        return this._toggleClass(e, t, i, !1);
      },
      _addClass: function (e, t, i) {
        return this._toggleClass(e, t, i, !0);
      },
      _toggleClass: function (e, t, i, n) {
        n = "boolean" == typeof n ? n : i;
        var r = "string" == typeof e || null === e,
          a = {
            extra: r ? t : i,
            keys: r ? e : t,
            element: r ? this.element : e,
            add: n,
          };
        return a.element.toggleClass(this._classes(a), n), this;
      },
      _on: function (t, i, n) {
        var r,
          a = this;
        "boolean" != typeof t && ((n = i), (i = t), (t = !1)),
          n
            ? ((i = r = e(i)), (this.bindings = this.bindings.add(i)))
            : ((n = i), (i = this.element), (r = this.widget())),
          e.each(n, function (n, s) {
            function o() {
              return t ||
                (!0 !== a.options.disabled &&
                  !e(this).hasClass("ui-state-disabled"))
                ? ("string" == typeof s ? a[s] : s).apply(a, arguments)
                : void 0;
            }
            "string" != typeof s &&
              (o.guid = s.guid = s.guid || o.guid || e.guid++);
            var l = n.match(/^([\w:-]*)\s*(.*)$/),
              c = l[1] + a.eventNamespace,
              h = l[2];
            h ? r.on(c, h, o) : i.on(c, o);
          });
      },
      _off: function (t, i) {
        (i =
          (i || "").split(" ").join(this.eventNamespace + " ") +
          this.eventNamespace),
          t.off(i).off(i),
          (this.bindings = e(this.bindings.not(t).get())),
          (this.focusable = e(this.focusable.not(t).get())),
          (this.hoverable = e(this.hoverable.not(t).get()));
      },
      _delay: function (e, t) {
        var i = this;
        return setTimeout(function () {
          return ("string" == typeof e ? i[e] : e).apply(i, arguments);
        }, t || 0);
      },
      _hoverable: function (t) {
        (this.hoverable = this.hoverable.add(t)),
          this._on(t, {
            mouseenter: function (t) {
              this._addClass(e(t.currentTarget), null, "ui-state-hover");
            },
            mouseleave: function (t) {
              this._removeClass(e(t.currentTarget), null, "ui-state-hover");
            },
          });
      },
      _focusable: function (t) {
        (this.focusable = this.focusable.add(t)),
          this._on(t, {
            focusin: function (t) {
              this._addClass(e(t.currentTarget), null, "ui-state-focus");
            },
            focusout: function (t) {
              this._removeClass(e(t.currentTarget), null, "ui-state-focus");
            },
          });
      },
      _trigger: function (t, i, n) {
        var r,
          a,
          s = this.options[t];
        if (
          ((n = n || {}),
          ((i = e.Event(i)).type = (
            t === this.widgetEventPrefix ? t : this.widgetEventPrefix + t
          ).toLowerCase()),
          (i.target = this.element[0]),
          (a = i.originalEvent))
        )
          for (r in a) r in i || (i[r] = a[r]);
        return (
          this.element.trigger(i, n),
          !(
            (e.isFunction(s) &&
              !1 === s.apply(this.element[0], [i].concat(n))) ||
            i.isDefaultPrevented()
          )
        );
      },
    }),
    e.each({ show: "fadeIn", hide: "fadeOut" }, function (t, i) {
      e.Widget.prototype["_" + t] = function (n, r, a) {
        "string" == typeof r && (r = { effect: r });
        var s,
          o = r ? (!0 === r || "number" == typeof r ? i : r.effect || i) : t;
        "number" == typeof (r = r || {}) && (r = { duration: r }),
          (s = !e.isEmptyObject(r)),
          (r.complete = a),
          r.delay && n.delay(r.delay),
          s && e.effects && e.effects.effect[o]
            ? n[t](r)
            : o !== t && n[o]
            ? n[o](r.duration, r.easing, a)
            : n.queue(function (i) {
                e(this)[t](), a && a.call(n[0]), i();
              });
      };
    }),
    e.widget,
    (function () {
      function t(e, t, i) {
        return [
          parseFloat(e[0]) * (u.test(e[0]) ? t / 100 : 1),
          parseFloat(e[1]) * (u.test(e[1]) ? i / 100 : 1),
        ];
      }
      function i(t, i) {
        return parseInt(e.css(t, i), 10) || 0;
      }
      function n(t) {
        var i = t[0];
        return 9 === i.nodeType
          ? {
              width: t.width(),
              height: t.height(),
              offset: { top: 0, left: 0 },
            }
          : e.isWindow(i)
          ? {
              width: t.width(),
              height: t.height(),
              offset: { top: t.scrollTop(), left: t.scrollLeft() },
            }
          : i.preventDefault
          ? { width: 0, height: 0, offset: { top: i.pageY, left: i.pageX } }
          : {
              width: t.outerWidth(),
              height: t.outerHeight(),
              offset: t.offset(),
            };
      }
      var r,
        a = Math.max,
        s = Math.abs,
        o = /left|center|right/,
        l = /top|center|bottom/,
        c = /[\+\-]\d+(\.[\d]+)?%?/,
        h = /^\w+/,
        u = /%$/,
        d = e.fn.position;
      (e.position = {
        scrollbarWidth: function () {
          if (void 0 !== r) return r;
          var t,
            i,
            n = e(
              "<div style='display:block;position:absolute;width:50px;height:50px;overflow:hidden;'><div style='height:100px;width:auto;'></div></div>"
            ),
            a = n.children()[0];
          return (
            e("body").append(n),
            (t = a.offsetWidth),
            n.css("overflow", "scroll"),
            t === (i = a.offsetWidth) && (i = n[0].clientWidth),
            n.remove(),
            (r = t - i)
          );
        },
        getScrollInfo: function (t) {
          var i = t.isWindow || t.isDocument ? "" : t.element.css("overflow-x"),
            n = t.isWindow || t.isDocument ? "" : t.element.css("overflow-y"),
            r =
              "scroll" === i ||
              ("auto" === i && t.width < t.element[0].scrollWidth);
          return {
            width:
              "scroll" === n ||
              ("auto" === n && t.height < t.element[0].scrollHeight)
                ? e.position.scrollbarWidth()
                : 0,
            height: r ? e.position.scrollbarWidth() : 0,
          };
        },
        getWithinInfo: function (t) {
          var i = e(t || window),
            n = e.isWindow(i[0]),
            r = !!i[0] && 9 === i[0].nodeType;
          return {
            element: i,
            isWindow: n,
            isDocument: r,
            offset: !n && !r ? e(t).offset() : { left: 0, top: 0 },
            scrollLeft: i.scrollLeft(),
            scrollTop: i.scrollTop(),
            width: i.outerWidth(),
            height: i.outerHeight(),
          };
        },
      }),
        (e.fn.position = function (r) {
          if (!r || !r.of) return d.apply(this, arguments);
          r = e.extend({}, r);
          var u,
            f,
            p,
            g,
            m,
            v,
            b = e(r.of),
            y = e.position.getWithinInfo(r.within),
            w = e.position.getScrollInfo(y),
            x = (r.collision || "flip").split(" "),
            k = {};
          return (
            (v = n(b)),
            b[0].preventDefault && (r.at = "left top"),
            (f = v.width),
            (p = v.height),
            (g = v.offset),
            (m = e.extend({}, g)),
            e.each(["my", "at"], function () {
              var e,
                t,
                i = (r[this] || "").split(" ");
              1 === i.length &&
                (i = o.test(i[0])
                  ? i.concat(["center"])
                  : l.test(i[0])
                  ? ["center"].concat(i)
                  : ["center", "center"]),
                (i[0] = o.test(i[0]) ? i[0] : "center"),
                (i[1] = l.test(i[1]) ? i[1] : "center"),
                (e = c.exec(i[0])),
                (t = c.exec(i[1])),
                (k[this] = [e ? e[0] : 0, t ? t[0] : 0]),
                (r[this] = [h.exec(i[0])[0], h.exec(i[1])[0]]);
            }),
            1 === x.length && (x[1] = x[0]),
            "right" === r.at[0]
              ? (m.left += f)
              : "center" === r.at[0] && (m.left += f / 2),
            "bottom" === r.at[1]
              ? (m.top += p)
              : "center" === r.at[1] && (m.top += p / 2),
            (u = t(k.at, f, p)),
            (m.left += u[0]),
            (m.top += u[1]),
            this.each(function () {
              var n,
                o,
                l = e(this),
                c = l.outerWidth(),
                h = l.outerHeight(),
                d = i(this, "marginLeft"),
                v = i(this, "marginTop"),
                C = c + d + i(this, "marginRight") + w.width,
                S = h + v + i(this, "marginBottom") + w.height,
                _ = e.extend({}, m),
                A = t(k.my, l.outerWidth(), l.outerHeight());
              "right" === r.my[0]
                ? (_.left -= c)
                : "center" === r.my[0] && (_.left -= c / 2),
                "bottom" === r.my[1]
                  ? (_.top -= h)
                  : "center" === r.my[1] && (_.top -= h / 2),
                (_.left += A[0]),
                (_.top += A[1]),
                (n = { marginLeft: d, marginTop: v }),
                e.each(["left", "top"], function (t, i) {
                  e.ui.position[x[t]] &&
                    e.ui.position[x[t]][i](_, {
                      targetWidth: f,
                      targetHeight: p,
                      elemWidth: c,
                      elemHeight: h,
                      collisionPosition: n,
                      collisionWidth: C,
                      collisionHeight: S,
                      offset: [u[0] + A[0], u[1] + A[1]],
                      my: r.my,
                      at: r.at,
                      within: y,
                      elem: l,
                    });
                }),
                r.using &&
                  (o = function (e) {
                    var t = g.left - _.left,
                      i = t + f - c,
                      n = g.top - _.top,
                      o = n + p - h,
                      u = {
                        target: {
                          element: b,
                          left: g.left,
                          top: g.top,
                          width: f,
                          height: p,
                        },
                        element: {
                          element: l,
                          left: _.left,
                          top: _.top,
                          width: c,
                          height: h,
                        },
                        horizontal: 0 > i ? "left" : t > 0 ? "right" : "center",
                        vertical: 0 > o ? "top" : n > 0 ? "bottom" : "middle",
                      };
                    c > f && f > s(t + i) && (u.horizontal = "center"),
                      h > p && p > s(n + o) && (u.vertical = "middle"),
                      (u.important =
                        a(s(t), s(i)) > a(s(n), s(o))
                          ? "horizontal"
                          : "vertical"),
                      r.using.call(this, e, u);
                  }),
                l.offset(e.extend(_, { using: o }));
            })
          );
        }),
        (e.ui.position = {
          fit: {
            left: function (e, t) {
              var i,
                n = t.within,
                r = n.isWindow ? n.scrollLeft : n.offset.left,
                s = n.width,
                o = e.left - t.collisionPosition.marginLeft,
                l = r - o,
                c = o + t.collisionWidth - s - r;
              t.collisionWidth > s
                ? l > 0 && 0 >= c
                  ? ((i = e.left + l + t.collisionWidth - s - r),
                    (e.left += l - i))
                  : (e.left =
                      c > 0 && 0 >= l
                        ? r
                        : l > c
                        ? r + s - t.collisionWidth
                        : r)
                : l > 0
                ? (e.left += l)
                : c > 0
                ? (e.left -= c)
                : (e.left = a(e.left - o, e.left));
            },
            top: function (e, t) {
              var i,
                n = t.within,
                r = n.isWindow ? n.scrollTop : n.offset.top,
                s = t.within.height,
                o = e.top - t.collisionPosition.marginTop,
                l = r - o,
                c = o + t.collisionHeight - s - r;
              t.collisionHeight > s
                ? l > 0 && 0 >= c
                  ? ((i = e.top + l + t.collisionHeight - s - r),
                    (e.top += l - i))
                  : (e.top =
                      c > 0 && 0 >= l
                        ? r
                        : l > c
                        ? r + s - t.collisionHeight
                        : r)
                : l > 0
                ? (e.top += l)
                : c > 0
                ? (e.top -= c)
                : (e.top = a(e.top - o, e.top));
            },
          },
          flip: {
            left: function (e, t) {
              var i,
                n,
                r = t.within,
                a = r.offset.left + r.scrollLeft,
                o = r.width,
                l = r.isWindow ? r.scrollLeft : r.offset.left,
                c = e.left - t.collisionPosition.marginLeft,
                h = c - l,
                u = c + t.collisionWidth - o - l,
                d =
                  "left" === t.my[0]
                    ? -t.elemWidth
                    : "right" === t.my[0]
                    ? t.elemWidth
                    : 0,
                f =
                  "left" === t.at[0]
                    ? t.targetWidth
                    : "right" === t.at[0]
                    ? -t.targetWidth
                    : 0,
                p = -2 * t.offset[0];
              0 > h
                ? (0 > (i = e.left + d + f + p + t.collisionWidth - o - a) ||
                    s(h) > i) &&
                  (e.left += d + f + p)
                : u > 0 &&
                  ((n =
                    e.left - t.collisionPosition.marginLeft + d + f + p - l) >
                    0 ||
                    u > s(n)) &&
                  (e.left += d + f + p);
            },
            top: function (e, t) {
              var i,
                n,
                r = t.within,
                a = r.offset.top + r.scrollTop,
                o = r.height,
                l = r.isWindow ? r.scrollTop : r.offset.top,
                c = e.top - t.collisionPosition.marginTop,
                h = c - l,
                u = c + t.collisionHeight - o - l,
                d =
                  "top" === t.my[1]
                    ? -t.elemHeight
                    : "bottom" === t.my[1]
                    ? t.elemHeight
                    : 0,
                f =
                  "top" === t.at[1]
                    ? t.targetHeight
                    : "bottom" === t.at[1]
                    ? -t.targetHeight
                    : 0,
                p = -2 * t.offset[1];
              0 > h
                ? (0 > (n = e.top + d + f + p + t.collisionHeight - o - a) ||
                    s(h) > n) &&
                  (e.top += d + f + p)
                : u > 0 &&
                  ((i = e.top - t.collisionPosition.marginTop + d + f + p - l) >
                    0 ||
                    u > s(i)) &&
                  (e.top += d + f + p);
            },
          },
          flipfit: {
            left: function () {
              e.ui.position.flip.left.apply(this, arguments),
                e.ui.position.fit.left.apply(this, arguments);
            },
            top: function () {
              e.ui.position.flip.top.apply(this, arguments),
                e.ui.position.fit.top.apply(this, arguments);
            },
          },
        });
    })(),
    e.ui.position,
    e.extend(e.expr[":"], {
      data: e.expr.createPseudo
        ? e.expr.createPseudo(function (t) {
            return function (i) {
              return !!e.data(i, t);
            };
          })
        : function (t, i, n) {
            return !!e.data(t, n[3]);
          },
    }),
    e.fn.extend({
      disableSelection: (function () {
        var e =
          "onselectstart" in document.createElement("div")
            ? "selectstart"
            : "mousedown";
        return function () {
          return this.on(e + ".ui-disableSelection", function (e) {
            e.preventDefault();
          });
        };
      })(),
      enableSelection: function () {
        return this.off(".ui-disableSelection");
      },
    });
  var c = "ui-effects-",
    h = "ui-effects-style",
    u = "ui-effects-animated",
    d = e;
  (e.effects = { effect: {} }),
    (function (e, t) {
      function i(e, t, i) {
        var n = h[t.type] || {};
        return null == e
          ? i || !t.def
            ? null
            : t.def
          : ((e = n.floor ? ~~e : parseFloat(e)),
            isNaN(e)
              ? t.def
              : n.mod
              ? (e + n.mod) % n.mod
              : 0 > e
              ? 0
              : e > n.max
              ? n.max
              : e);
      }
      function n(i) {
        var n = l(),
          r = (n._rgba = []);
        return (
          (i = i.toLowerCase()),
          f(o, function (e, a) {
            var s,
              o = a.re.exec(i),
              l = o && a.parse(o),
              h = a.space || "rgba";
            return l
              ? ((s = n[h](l)),
                (n[c[h].cache] = s[c[h].cache]),
                (r = n._rgba = s._rgba),
                !1)
              : t;
          }),
          r.length
            ? ("0,0,0,0" === r.join() && e.extend(r, a.transparent), n)
            : a[i]
        );
      }
      function r(e, t, i) {
        return 1 > 6 * (i = (i + 1) % 1)
          ? e + 6 * (t - e) * i
          : 1 > 2 * i
          ? t
          : 2 > 3 * i
          ? e + 6 * (t - e) * (2 / 3 - i)
          : e;
      }
      var a,
        s = /^([\-+])=\s*(\d+\.?\d*)/,
        o = [
          {
            re: /rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
            parse: function (e) {
              return [e[1], e[2], e[3], e[4]];
            },
          },
          {
            re: /rgba?\(\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
            parse: function (e) {
              return [2.55 * e[1], 2.55 * e[2], 2.55 * e[3], e[4]];
            },
          },
          {
            re: /#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})/,
            parse: function (e) {
              return [
                parseInt(e[1], 16),
                parseInt(e[2], 16),
                parseInt(e[3], 16),
              ];
            },
          },
          {
            re: /#([a-f0-9])([a-f0-9])([a-f0-9])/,
            parse: function (e) {
              return [
                parseInt(e[1] + e[1], 16),
                parseInt(e[2] + e[2], 16),
                parseInt(e[3] + e[3], 16),
              ];
            },
          },
          {
            re: /hsla?\(\s*(\d+(?:\.\d+)?)\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
            space: "hsla",
            parse: function (e) {
              return [e[1], e[2] / 100, e[3] / 100, e[4]];
            },
          },
        ],
        l = (e.Color = function (t, i, n, r) {
          return new e.Color.fn.parse(t, i, n, r);
        }),
        c = {
          rgba: {
            props: {
              red: { idx: 0, type: "byte" },
              green: { idx: 1, type: "byte" },
              blue: { idx: 2, type: "byte" },
            },
          },
          hsla: {
            props: {
              hue: { idx: 0, type: "degrees" },
              saturation: { idx: 1, type: "percent" },
              lightness: { idx: 2, type: "percent" },
            },
          },
        },
        h = {
          byte: { floor: !0, max: 255 },
          percent: { max: 1 },
          degrees: { mod: 360, floor: !0 },
        },
        u = (l.support = {}),
        d = e("<p>")[0],
        f = e.each;
      (d.style.cssText = "background-color:rgba(1,1,1,.5)"),
        (u.rgba = d.style.backgroundColor.indexOf("rgba") > -1),
        f(c, function (e, t) {
          (t.cache = "_" + e),
            (t.props.alpha = { idx: 3, type: "percent", def: 1 });
        }),
        (l.fn = e.extend(l.prototype, {
          parse: function (r, s, o, h) {
            if (r === t) return (this._rgba = [null, null, null, null]), this;
            (r.jquery || r.nodeType) && ((r = e(r).css(s)), (s = t));
            var u = this,
              d = e.type(r),
              p = (this._rgba = []);
            return (
              s !== t && ((r = [r, s, o, h]), (d = "array")),
              "string" === d
                ? this.parse(n(r) || a._default)
                : "array" === d
                ? (f(c.rgba.props, function (e, t) {
                    p[t.idx] = i(r[t.idx], t);
                  }),
                  this)
                : "object" === d
                ? (r instanceof l
                    ? f(c, function (e, t) {
                        r[t.cache] && (u[t.cache] = r[t.cache].slice());
                      })
                    : f(c, function (t, n) {
                        var a = n.cache;
                        f(n.props, function (e, t) {
                          if (!u[a] && n.to) {
                            if ("alpha" === e || null == r[e]) return;
                            u[a] = n.to(u._rgba);
                          }
                          u[a][t.idx] = i(r[e], t, !0);
                        }),
                          u[a] &&
                            0 > e.inArray(null, u[a].slice(0, 3)) &&
                            ((u[a][3] = 1), n.from && (u._rgba = n.from(u[a])));
                      }),
                  this)
                : t
            );
          },
          is: function (e) {
            var i = l(e),
              n = !0,
              r = this;
            return (
              f(c, function (e, a) {
                var s,
                  o = i[a.cache];
                return (
                  o &&
                    ((s = r[a.cache] || (a.to && a.to(r._rgba)) || []),
                    f(a.props, function (e, i) {
                      return null != o[i.idx] ? (n = o[i.idx] === s[i.idx]) : t;
                    })),
                  n
                );
              }),
              n
            );
          },
          _space: function () {
            var e = [],
              t = this;
            return (
              f(c, function (i, n) {
                t[n.cache] && e.push(i);
              }),
              e.pop()
            );
          },
          transition: function (e, t) {
            var n = l(e),
              r = n._space(),
              a = c[r],
              s = 0 === this.alpha() ? l("transparent") : this,
              o = s[a.cache] || a.to(s._rgba),
              u = o.slice();
            return (
              (n = n[a.cache]),
              f(a.props, function (e, r) {
                var a = r.idx,
                  s = o[a],
                  l = n[a],
                  c = h[r.type] || {};
                null !== l &&
                  (null === s
                    ? (u[a] = l)
                    : (c.mod &&
                        (l - s > c.mod / 2
                          ? (s += c.mod)
                          : s - l > c.mod / 2 && (s -= c.mod)),
                      (u[a] = i((l - s) * t + s, r))));
              }),
              this[r](u)
            );
          },
          blend: function (t) {
            if (1 === this._rgba[3]) return this;
            var i = this._rgba.slice(),
              n = i.pop(),
              r = l(t)._rgba;
            return l(
              e.map(i, function (e, t) {
                return (1 - n) * r[t] + n * e;
              })
            );
          },
          toRgbaString: function () {
            var t = "rgba(",
              i = e.map(this._rgba, function (e, t) {
                return null == e ? (t > 2 ? 1 : 0) : e;
              });
            return 1 === i[3] && (i.pop(), (t = "rgb(")), t + i.join() + ")";
          },
          toHslaString: function () {
            var t = "hsla(",
              i = e.map(this.hsla(), function (e, t) {
                return (
                  null == e && (e = t > 2 ? 1 : 0),
                  t && 3 > t && (e = Math.round(100 * e) + "%"),
                  e
                );
              });
            return 1 === i[3] && (i.pop(), (t = "hsl(")), t + i.join() + ")";
          },
          toHexString: function (t) {
            var i = this._rgba.slice(),
              n = i.pop();
            return (
              t && i.push(~~(255 * n)),
              "#" +
                e
                  .map(i, function (e) {
                    return 1 === (e = (e || 0).toString(16)).length
                      ? "0" + e
                      : e;
                  })
                  .join("")
            );
          },
          toString: function () {
            return 0 === this._rgba[3] ? "transparent" : this.toRgbaString();
          },
        })),
        (l.fn.parse.prototype = l.fn),
        (c.hsla.to = function (e) {
          if (null == e[0] || null == e[1] || null == e[2])
            return [null, null, null, e[3]];
          var t,
            i,
            n = e[0] / 255,
            r = e[1] / 255,
            a = e[2] / 255,
            s = e[3],
            o = Math.max(n, r, a),
            l = Math.min(n, r, a),
            c = o - l,
            h = o + l,
            u = 0.5 * h;
          return (
            (t =
              l === o
                ? 0
                : n === o
                ? (60 * (r - a)) / c + 360
                : r === o
                ? (60 * (a - n)) / c + 120
                : (60 * (n - r)) / c + 240),
            (i = 0 === c ? 0 : 0.5 >= u ? c / h : c / (2 - h)),
            [Math.round(t) % 360, i, u, null == s ? 1 : s]
          );
        }),
        (c.hsla.from = function (e) {
          if (null == e[0] || null == e[1] || null == e[2])
            return [null, null, null, e[3]];
          var t = e[0] / 360,
            i = e[1],
            n = e[2],
            a = e[3],
            s = 0.5 >= n ? n * (1 + i) : n + i - n * i,
            o = 2 * n - s;
          return [
            Math.round(255 * r(o, s, t + 1 / 3)),
            Math.round(255 * r(o, s, t)),
            Math.round(255 * r(o, s, t - 1 / 3)),
            a,
          ];
        }),
        f(c, function (n, r) {
          var a = r.props,
            o = r.cache,
            c = r.to,
            h = r.from;
          (l.fn[n] = function (n) {
            if ((c && !this[o] && (this[o] = c(this._rgba)), n === t))
              return this[o].slice();
            var r,
              s = e.type(n),
              u = "array" === s || "object" === s ? n : arguments,
              d = this[o].slice();
            return (
              f(a, function (e, t) {
                var n = u["object" === s ? e : t.idx];
                null == n && (n = d[t.idx]), (d[t.idx] = i(n, t));
              }),
              h ? (((r = l(h(d)))[o] = d), r) : l(d)
            );
          }),
            f(a, function (t, i) {
              l.fn[t] ||
                (l.fn[t] = function (r) {
                  var a,
                    o = e.type(r),
                    l = "alpha" === t ? (this._hsla ? "hsla" : "rgba") : n,
                    c = this[l](),
                    h = c[i.idx];
                  return "undefined" === o
                    ? h
                    : ("function" === o &&
                        ((r = r.call(this, h)), (o = e.type(r))),
                      null == r && i.empty
                        ? this
                        : ("string" === o &&
                            (a = s.exec(r)) &&
                            (r =
                              h + parseFloat(a[2]) * ("+" === a[1] ? 1 : -1)),
                          (c[i.idx] = r),
                          this[l](c)));
                });
            });
        }),
        (l.hook = function (t) {
          var i = t.split(" ");
          f(i, function (t, i) {
            (e.cssHooks[i] = {
              set: function (t, r) {
                var a,
                  s,
                  o = "";
                if (
                  "transparent" !== r &&
                  ("string" !== e.type(r) || (a = n(r)))
                ) {
                  if (((r = l(a || r)), !u.rgba && 1 !== r._rgba[3])) {
                    for (
                      s = "backgroundColor" === i ? t.parentNode : t;
                      ("" === o || "transparent" === o) && s && s.style;

                    )
                      try {
                        (o = e.css(s, "backgroundColor")), (s = s.parentNode);
                      } catch (e) {}
                    r = r.blend(o && "transparent" !== o ? o : "_default");
                  }
                  r = r.toRgbaString();
                }
                try {
                  t.style[i] = r;
                } catch (e) {}
              },
            }),
              (e.fx.step[i] = function (t) {
                t.colorInit ||
                  ((t.start = l(t.elem, i)),
                  (t.end = l(t.end)),
                  (t.colorInit = !0)),
                  e.cssHooks[i].set(t.elem, t.start.transition(t.end, t.pos));
              });
          });
        }),
        l.hook(
          "backgroundColor borderBottomColor borderLeftColor borderRightColor borderTopColor color columnRuleColor outlineColor textDecorationColor textEmphasisColor"
        ),
        (e.cssHooks.borderColor = {
          expand: function (e) {
            var t = {};
            return (
              f(["Top", "Right", "Bottom", "Left"], function (i, n) {
                t["border" + n + "Color"] = e;
              }),
              t
            );
          },
        }),
        (a = e.Color.names =
          {
            aqua: "#00ffff",
            black: "#000000",
            blue: "#0000ff",
            fuchsia: "#ff00ff",
            gray: "#808080",
            green: "#008000",
            lime: "#00ff00",
            maroon: "#800000",
            navy: "#000080",
            olive: "#808000",
            purple: "#800080",
            red: "#ff0000",
            silver: "#c0c0c0",
            teal: "#008080",
            white: "#ffffff",
            yellow: "#ffff00",
            transparent: [null, null, null, 0],
            _default: "#ffffff",
          });
    })(d),
    (function () {
      function t(t) {
        var i,
          n,
          r = t.ownerDocument.defaultView
            ? t.ownerDocument.defaultView.getComputedStyle(t, null)
            : t.currentStyle,
          a = {};
        if (r && r.length && r[0] && r[r[0]])
          for (n = r.length; n--; )
            "string" == typeof r[(i = r[n])] && (a[e.camelCase(i)] = r[i]);
        else for (i in r) "string" == typeof r[i] && (a[i] = r[i]);
        return a;
      }
      function i(t, i) {
        var n,
          a,
          s = {};
        for (n in i)
          (a = i[n]),
            t[n] !== a &&
              (r[n] || ((e.fx.step[n] || !isNaN(parseFloat(a))) && (s[n] = a)));
        return s;
      }
      var n = ["add", "remove", "toggle"],
        r = {
          border: 1,
          borderBottom: 1,
          borderColor: 1,
          borderLeft: 1,
          borderRight: 1,
          borderTop: 1,
          borderWidth: 1,
          margin: 1,
          padding: 1,
        };
      e.each(
        [
          "borderLeftStyle",
          "borderRightStyle",
          "borderBottomStyle",
          "borderTopStyle",
        ],
        function (t, i) {
          e.fx.step[i] = function (e) {
            (("none" !== e.end && !e.setAttr) || (1 === e.pos && !e.setAttr)) &&
              (d.style(e.elem, i, e.end), (e.setAttr = !0));
          };
        }
      ),
        e.fn.addBack ||
          (e.fn.addBack = function (e) {
            return this.add(
              null == e ? this.prevObject : this.prevObject.filter(e)
            );
          }),
        (e.effects.animateClass = function (r, a, s, o) {
          var l = e.speed(a, s, o);
          return this.queue(function () {
            var a,
              s = e(this),
              o = s.attr("class") || "",
              c = l.children ? s.find("*").addBack() : s;
            (c = c.map(function () {
              return { el: e(this), start: t(this) };
            })),
              (a = function () {
                e.each(n, function (e, t) {
                  r[t] && s[t + "Class"](r[t]);
                });
              })(),
              (c = c.map(function () {
                return (
                  (this.end = t(this.el[0])),
                  (this.diff = i(this.start, this.end)),
                  this
                );
              })),
              s.attr("class", o),
              (c = c.map(function () {
                var t = this,
                  i = e.Deferred(),
                  n = e.extend({}, l, {
                    queue: !1,
                    complete: function () {
                      i.resolve(t);
                    },
                  });
                return this.el.animate(this.diff, n), i.promise();
              })),
              e.when.apply(e, c.get()).done(function () {
                a(),
                  e.each(arguments, function () {
                    var t = this.el;
                    e.each(this.diff, function (e) {
                      t.css(e, "");
                    });
                  }),
                  l.complete.call(s[0]);
              });
          });
        }),
        e.fn.extend({
          addClass: (function (t) {
            return function (i, n, r, a) {
              return n
                ? e.effects.animateClass.call(this, { add: i }, n, r, a)
                : t.apply(this, arguments);
            };
          })(e.fn.addClass),
          removeClass: (function (t) {
            return function (i, n, r, a) {
              return arguments.length > 1
                ? e.effects.animateClass.call(this, { remove: i }, n, r, a)
                : t.apply(this, arguments);
            };
          })(e.fn.removeClass),
          toggleClass: (function (t) {
            return function (i, n, r, a, s) {
              return "boolean" == typeof n || void 0 === n
                ? r
                  ? e.effects.animateClass.call(
                      this,
                      n ? { add: i } : { remove: i },
                      r,
                      a,
                      s
                    )
                  : t.apply(this, arguments)
                : e.effects.animateClass.call(this, { toggle: i }, n, r, a);
            };
          })(e.fn.toggleClass),
          switchClass: function (t, i, n, r, a) {
            return e.effects.animateClass.call(
              this,
              { add: i, remove: t },
              n,
              r,
              a
            );
          },
        });
    })(),
    (function () {
      function t(t, i, n, r) {
        return (
          e.isPlainObject(t) && ((i = t), (t = t.effect)),
          (t = { effect: t }),
          null == i && (i = {}),
          e.isFunction(i) && ((r = i), (n = null), (i = {})),
          ("number" == typeof i || e.fx.speeds[i]) &&
            ((r = n), (n = i), (i = {})),
          e.isFunction(n) && ((r = n), (n = null)),
          i && e.extend(t, i),
          (n = n || i.duration),
          (t.duration = e.fx.off
            ? 0
            : "number" == typeof n
            ? n
            : n in e.fx.speeds
            ? e.fx.speeds[n]
            : e.fx.speeds._default),
          (t.complete = r || i.complete),
          t
        );
      }
      function i(t) {
        return !t || "number" == typeof t || e.fx.speeds[t]
          ? !0
          : "string" != typeof t || e.effects.effect[t]
          ? e.isFunction(t)
            ? !0
            : "object" != typeof t || t.effect
            ? !1
            : !0
          : !0;
      }
      function n(e, t) {
        var i = t.outerWidth(),
          n = t.outerHeight(),
          r =
            /^rect\((-?\d*\.?\d*px|-?\d+%|auto),?\s*(-?\d*\.?\d*px|-?\d+%|auto),?\s*(-?\d*\.?\d*px|-?\d+%|auto),?\s*(-?\d*\.?\d*px|-?\d+%|auto)\)$/.exec(
              e
            ) || ["", 0, i, n, 0];
        return {
          top: parseFloat(r[1]) || 0,
          right: "auto" === r[2] ? i : parseFloat(r[2]),
          bottom: "auto" === r[3] ? n : parseFloat(r[3]),
          left: parseFloat(r[4]) || 0,
        };
      }
      e.expr &&
        e.expr.filters &&
        e.expr.filters.animated &&
        (e.expr.filters.animated = (function (t) {
          return function (i) {
            return !!e(i).data(u) || t(i);
          };
        })(e.expr.filters.animated)),
        !1 !== e.uiBackCompat &&
          e.extend(e.effects, {
            save: function (e, t) {
              for (var i = 0, n = t.length; n > i; i++)
                null !== t[i] && e.data(c + t[i], e[0].style[t[i]]);
            },
            restore: function (e, t) {
              for (var i, n = 0, r = t.length; r > n; n++)
                null !== t[n] && ((i = e.data(c + t[n])), e.css(t[n], i));
            },
            setMode: function (e, t) {
              return (
                "toggle" === t && (t = e.is(":hidden") ? "show" : "hide"), t
              );
            },
            createWrapper: function (t) {
              if (t.parent().is(".ui-effects-wrapper")) return t.parent();
              var i = {
                  width: t.outerWidth(!0),
                  height: t.outerHeight(!0),
                  float: t.css("float"),
                },
                n = e("<div></div>")
                  .addClass("ui-effects-wrapper")
                  .css({
                    fontSize: "100%",
                    background: "transparent",
                    border: "none",
                    margin: 0,
                    padding: 0,
                  }),
                r = { width: t.width(), height: t.height() },
                a = document.activeElement;
              try {
                a.id;
              } catch (e) {
                a = document.body;
              }
              return (
                t.wrap(n),
                (t[0] === a || e.contains(t[0], a)) && e(a).trigger("focus"),
                (n = t.parent()),
                "static" === t.css("position")
                  ? (n.css({ position: "relative" }),
                    t.css({ position: "relative" }))
                  : (e.extend(i, {
                      position: t.css("position"),
                      zIndex: t.css("z-index"),
                    }),
                    e.each(["top", "left", "bottom", "right"], function (e, n) {
                      (i[n] = t.css(n)),
                        isNaN(parseInt(i[n], 10)) && (i[n] = "auto");
                    }),
                    t.css({
                      position: "relative",
                      top: 0,
                      left: 0,
                      right: "auto",
                      bottom: "auto",
                    })),
                t.css(r),
                n.css(i).show()
              );
            },
            removeWrapper: function (t) {
              var i = document.activeElement;
              return (
                t.parent().is(".ui-effects-wrapper") &&
                  (t.parent().replaceWith(t),
                  (t[0] === i || e.contains(t[0], i)) && e(i).trigger("focus")),
                t
              );
            },
          }),
        e.extend(e.effects, {
          version: "1.12.1",
          define: function (t, i, n) {
            return (
              n || ((n = i), (i = "effect")),
              (e.effects.effect[t] = n),
              (e.effects.effect[t].mode = i),
              n
            );
          },
          scaledDimensions: function (e, t, i) {
            if (0 === t)
              return { height: 0, width: 0, outerHeight: 0, outerWidth: 0 };
            var n = "horizontal" !== i ? (t || 100) / 100 : 1,
              r = "vertical" !== i ? (t || 100) / 100 : 1;
            return {
              height: e.height() * r,
              width: e.width() * n,
              outerHeight: e.outerHeight() * r,
              outerWidth: e.outerWidth() * n,
            };
          },
          clipToBox: function (e) {
            return {
              width: e.clip.right - e.clip.left,
              height: e.clip.bottom - e.clip.top,
              left: e.clip.left,
              top: e.clip.top,
            };
          },
          unshift: function (e, t, i) {
            var n = e.queue();
            t > 1 && n.splice.apply(n, [1, 0].concat(n.splice(t, i))),
              e.dequeue();
          },
          saveStyle: function (e) {
            e.data(h, e[0].style.cssText);
          },
          restoreStyle: function (e) {
            (e[0].style.cssText = e.data(h) || ""), e.removeData(h);
          },
          mode: function (e, t) {
            var i = e.is(":hidden");
            return (
              "toggle" === t && (t = i ? "show" : "hide"),
              (i ? "hide" === t : "show" === t) && (t = "none"),
              t
            );
          },
          getBaseline: function (e, t) {
            var i, n;
            switch (e[0]) {
              case "top":
                i = 0;
                break;
              case "middle":
                i = 0.5;
                break;
              case "bottom":
                i = 1;
                break;
              default:
                i = e[0] / t.height;
            }
            switch (e[1]) {
              case "left":
                n = 0;
                break;
              case "center":
                n = 0.5;
                break;
              case "right":
                n = 1;
                break;
              default:
                n = e[1] / t.width;
            }
            return { x: n, y: i };
          },
          createPlaceholder: function (t) {
            var i,
              n = t.css("position"),
              r = t.position();
            return (
              t
                .css({
                  marginTop: t.css("marginTop"),
                  marginBottom: t.css("marginBottom"),
                  marginLeft: t.css("marginLeft"),
                  marginRight: t.css("marginRight"),
                })
                .outerWidth(t.outerWidth())
                .outerHeight(t.outerHeight()),
              /^(static|relative)/.test(n) &&
                ((n = "absolute"),
                (i = e("<" + t[0].nodeName + ">")
                  .insertAfter(t)
                  .css({
                    display: /^(inline|ruby)/.test(t.css("display"))
                      ? "inline-block"
                      : "block",
                    visibility: "hidden",
                    marginTop: t.css("marginTop"),
                    marginBottom: t.css("marginBottom"),
                    marginLeft: t.css("marginLeft"),
                    marginRight: t.css("marginRight"),
                    float: t.css("float"),
                  })
                  .outerWidth(t.outerWidth())
                  .outerHeight(t.outerHeight())
                  .addClass("ui-effects-placeholder")),
                t.data(c + "placeholder", i)),
              t.css({ position: n, left: r.left, top: r.top }),
              i
            );
          },
          removePlaceholder: function (e) {
            var t = c + "placeholder",
              i = e.data(t);
            i && (i.remove(), e.removeData(t));
          },
          cleanUp: function (t) {
            e.effects.restoreStyle(t), e.effects.removePlaceholder(t);
          },
          setTransition: function (t, i, n, r) {
            return (
              (r = r || {}),
              e.each(i, function (e, i) {
                var a = t.cssUnit(i);
                a[0] > 0 && (r[i] = a[0] * n + a[1]);
              }),
              r
            );
          },
        }),
        e.fn.extend({
          effect: function () {
            function i(t) {
              function i() {
                e.isFunction(l) && l.call(s[0]), e.isFunction(t) && t();
              }
              var s = e(this);
              (n.mode = h.shift()),
                !1 === e.uiBackCompat || a
                  ? "none" === n.mode
                    ? (s[c](), i())
                    : r.call(s[0], n, function () {
                        s.removeData(u),
                          e.effects.cleanUp(s),
                          "hide" === n.mode && s.hide(),
                          i();
                      })
                  : (s.is(":hidden") ? "hide" === c : "show" === c)
                  ? (s[c](), i())
                  : r.call(s[0], n, i);
            }
            var n = t.apply(this, arguments),
              r = e.effects.effect[n.effect],
              a = r.mode,
              s = n.queue,
              o = s || "fx",
              l = n.complete,
              c = n.mode,
              h = [],
              d = function (t) {
                var i = e(this),
                  n = e.effects.mode(i, c) || a;
                i.data(u, !0),
                  h.push(n),
                  a && ("show" === n || (n === a && "hide" === n)) && i.show(),
                  (a && "none" === n) || e.effects.saveStyle(i),
                  e.isFunction(t) && t();
              };
            return e.fx.off || !r
              ? c
                ? this[c](n.duration, l)
                : this.each(function () {
                    l && l.call(this);
                  })
              : !1 === s
              ? this.each(d).each(i)
              : this.queue(o, d).queue(o, i);
          },
          show: (function (e) {
            return function (n) {
              if (i(n)) return e.apply(this, arguments);
              var r = t.apply(this, arguments);
              return (r.mode = "show"), this.effect.call(this, r);
            };
          })(e.fn.show),
          hide: (function (e) {
            return function (n) {
              if (i(n)) return e.apply(this, arguments);
              var r = t.apply(this, arguments);
              return (r.mode = "hide"), this.effect.call(this, r);
            };
          })(e.fn.hide),
          toggle: (function (e) {
            return function (n) {
              if (i(n) || "boolean" == typeof n)
                return e.apply(this, arguments);
              var r = t.apply(this, arguments);
              return (r.mode = "toggle"), this.effect.call(this, r);
            };
          })(e.fn.toggle),
          cssUnit: function (t) {
            var i = this.css(t),
              n = [];
            return (
              e.each(["em", "px", "%", "pt"], function (e, t) {
                i.indexOf(t) > 0 && (n = [parseFloat(i), t]);
              }),
              n
            );
          },
          cssClip: function (e) {
            return e
              ? this.css(
                  "clip",
                  "rect(" +
                    e.top +
                    "px " +
                    e.right +
                    "px " +
                    e.bottom +
                    "px " +
                    e.left +
                    "px)"
                )
              : n(this.css("clip"), this);
          },
          transfer: function (t, i) {
            var n = e(this),
              r = e(t.to),
              a = "fixed" === r.css("position"),
              s = e("body"),
              o = a ? s.scrollTop() : 0,
              l = a ? s.scrollLeft() : 0,
              c = r.offset(),
              h = {
                top: c.top - o,
                left: c.left - l,
                height: r.innerHeight(),
                width: r.innerWidth(),
              },
              u = n.offset(),
              d = e("<div class='ui-effects-transfer'></div>")
                .appendTo("body")
                .addClass(t.className)
                .css({
                  top: u.top - o,
                  left: u.left - l,
                  height: n.innerHeight(),
                  width: n.innerWidth(),
                  position: a ? "fixed" : "absolute",
                })
                .animate(h, t.duration, t.easing, function () {
                  d.remove(), e.isFunction(i) && i();
                });
          },
        }),
        (e.fx.step.clip = function (t) {
          t.clipInit ||
            ((t.start = e(t.elem).cssClip()),
            "string" == typeof t.end && (t.end = n(t.end, t.elem)),
            (t.clipInit = !0)),
            e(t.elem).cssClip({
              top: t.pos * (t.end.top - t.start.top) + t.start.top,
              right: t.pos * (t.end.right - t.start.right) + t.start.right,
              bottom: t.pos * (t.end.bottom - t.start.bottom) + t.start.bottom,
              left: t.pos * (t.end.left - t.start.left) + t.start.left,
            });
        });
    })(),
    (function () {
      var t = {};
      e.each(["Quad", "Cubic", "Quart", "Quint", "Expo"], function (e, i) {
        t[i] = function (t) {
          return Math.pow(t, e + 2);
        };
      }),
        e.extend(t, {
          Sine: function (e) {
            return 1 - Math.cos((e * Math.PI) / 2);
          },
          Circ: function (e) {
            return 1 - Math.sqrt(1 - e * e);
          },
          Elastic: function (e) {
            return 0 === e || 1 === e
              ? e
              : -Math.pow(2, 8 * (e - 1)) *
                  Math.sin(((80 * (e - 1) - 7.5) * Math.PI) / 15);
          },
          Back: function (e) {
            return e * e * (3 * e - 2);
          },
          Bounce: function (e) {
            for (var t, i = 4; ((t = Math.pow(2, --i)) - 1) / 11 > e; );
            return (
              1 / Math.pow(4, 3 - i) -
              7.5625 * Math.pow((3 * t - 2) / 22 - e, 2)
            );
          },
        }),
        e.each(t, function (t, i) {
          (e.easing["easeIn" + t] = i),
            (e.easing["easeOut" + t] = function (e) {
              return 1 - i(1 - e);
            }),
            (e.easing["easeInOut" + t] = function (e) {
              return 0.5 > e ? i(2 * e) / 2 : 1 - i(-2 * e + 2) / 2;
            });
        });
    })();
  e.effects;
  e.effects.define("blind", "hide", function (t, i) {
    var n = {
        up: ["bottom", "top"],
        vertical: ["bottom", "top"],
        down: ["top", "bottom"],
        left: ["right", "left"],
        horizontal: ["right", "left"],
        right: ["left", "right"],
      },
      r = e(this),
      a = t.direction || "up",
      s = r.cssClip(),
      o = { clip: e.extend({}, s) },
      l = e.effects.createPlaceholder(r);
    (o.clip[n[a][0]] = o.clip[n[a][1]]),
      "show" === t.mode &&
        (r.cssClip(o.clip), l && l.css(e.effects.clipToBox(o)), (o.clip = s)),
      l && l.animate(e.effects.clipToBox(o), t.duration, t.easing),
      r.animate(o, {
        queue: !1,
        duration: t.duration,
        easing: t.easing,
        complete: i,
      });
  }),
    e.effects.define("bounce", function (t, i) {
      var n,
        r,
        a,
        s = e(this),
        o = t.mode,
        l = "hide" === o,
        c = "show" === o,
        h = t.direction || "up",
        u = t.distance,
        d = t.times || 5,
        f = 2 * d + (c || l ? 1 : 0),
        p = t.duration / f,
        g = t.easing,
        m = "up" === h || "down" === h ? "top" : "left",
        v = "up" === h || "left" === h,
        b = 0,
        y = s.queue().length;
      for (
        e.effects.createPlaceholder(s),
          a = s.css(m),
          u || (u = s["top" === m ? "outerHeight" : "outerWidth"]() / 3),
          c &&
            (((r = { opacity: 1 })[m] = a),
            s
              .css("opacity", 0)
              .css(m, v ? 2 * -u : 2 * u)
              .animate(r, p, g)),
          l && (u /= Math.pow(2, d - 1)),
          (r = {})[m] = a;
        d > b;
        b++
      )
        ((n = {})[m] = (v ? "-=" : "+=") + u),
          s.animate(n, p, g).animate(r, p, g),
          (u = l ? 2 * u : u / 2);
      l &&
        (((n = { opacity: 0 })[m] = (v ? "-=" : "+=") + u), s.animate(n, p, g)),
        s.queue(i),
        e.effects.unshift(s, y, f + 1);
    }),
    e.effects.define("clip", "hide", function (t, i) {
      var n,
        r = {},
        a = e(this),
        s = t.direction || "vertical",
        o = "both" === s,
        l = o || "horizontal" === s,
        c = o || "vertical" === s;
      (n = a.cssClip()),
        (r.clip = {
          top: c ? (n.bottom - n.top) / 2 : n.top,
          right: l ? (n.right - n.left) / 2 : n.right,
          bottom: c ? (n.bottom - n.top) / 2 : n.bottom,
          left: l ? (n.right - n.left) / 2 : n.left,
        }),
        e.effects.createPlaceholder(a),
        "show" === t.mode && (a.cssClip(r.clip), (r.clip = n)),
        a.animate(r, {
          queue: !1,
          duration: t.duration,
          easing: t.easing,
          complete: i,
        });
    }),
    e.effects.define("drop", "hide", function (t, i) {
      var n,
        r = e(this),
        a = "show" === t.mode,
        s = t.direction || "left",
        o = "up" === s || "down" === s ? "top" : "left",
        l = "up" === s || "left" === s ? "-=" : "+=",
        c = "+=" === l ? "-=" : "+=",
        h = { opacity: 0 };
      e.effects.createPlaceholder(r),
        (n =
          t.distance || r["top" === o ? "outerHeight" : "outerWidth"](!0) / 2),
        (h[o] = l + n),
        a && (r.css(h), (h[o] = c + n), (h.opacity = 1)),
        r.animate(h, {
          queue: !1,
          duration: t.duration,
          easing: t.easing,
          complete: i,
        });
    }),
    e.effects.define("explode", "hide", function (t, i) {
      function n() {
        v.push(this),
          v.length === h * u &&
            (d.css({ visibility: "visible" }), e(v).remove(), i());
      }
      var r,
        a,
        s,
        o,
        l,
        c,
        h = t.pieces ? Math.round(Math.sqrt(t.pieces)) : 3,
        u = h,
        d = e(this),
        f = "show" === t.mode,
        p = d.show().css("visibility", "hidden").offset(),
        g = Math.ceil(d.outerWidth() / u),
        m = Math.ceil(d.outerHeight() / h),
        v = [];
      for (r = 0; h > r; r++)
        for (o = p.top + r * m, c = r - (h - 1) / 2, a = 0; u > a; a++)
          (s = p.left + a * g),
            (l = a - (u - 1) / 2),
            d
              .clone()
              .appendTo("body")
              .wrap("<div></div>")
              .css({
                position: "absolute",
                visibility: "visible",
                left: -a * g,
                top: -r * m,
              })
              .parent()
              .addClass("ui-effects-explode")
              .css({
                position: "absolute",
                overflow: "hidden",
                width: g,
                height: m,
                left: s + (f ? l * g : 0),
                top: o + (f ? c * m : 0),
                opacity: f ? 0 : 1,
              })
              .animate(
                {
                  left: s + (f ? 0 : l * g),
                  top: o + (f ? 0 : c * m),
                  opacity: f ? 1 : 0,
                },
                t.duration || 500,
                t.easing,
                n
              );
    }),
    e.effects.define("fade", "toggle", function (t, i) {
      var n = "show" === t.mode;
      e(this)
        .css("opacity", n ? 0 : 1)
        .animate(
          { opacity: n ? 1 : 0 },
          { queue: !1, duration: t.duration, easing: t.easing, complete: i }
        );
    }),
    e.effects.define("fold", "hide", function (t, i) {
      var n = e(this),
        r = t.mode,
        a = "show" === r,
        s = "hide" === r,
        o = t.size || 15,
        l = /([0-9]+)%/.exec(o),
        c = t.horizFirst ? ["right", "bottom"] : ["bottom", "right"],
        h = t.duration / 2,
        u = e.effects.createPlaceholder(n),
        d = n.cssClip(),
        f = { clip: e.extend({}, d) },
        p = { clip: e.extend({}, d) },
        g = [d[c[0]], d[c[1]]],
        m = n.queue().length;
      l && (o = (parseInt(l[1], 10) / 100) * g[s ? 0 : 1]),
        (f.clip[c[0]] = o),
        (p.clip[c[0]] = o),
        (p.clip[c[1]] = 0),
        a &&
          (n.cssClip(p.clip), u && u.css(e.effects.clipToBox(p)), (p.clip = d)),
        n
          .queue(function (i) {
            u &&
              u
                .animate(e.effects.clipToBox(f), h, t.easing)
                .animate(e.effects.clipToBox(p), h, t.easing),
              i();
          })
          .animate(f, h, t.easing)
          .animate(p, h, t.easing)
          .queue(i),
        e.effects.unshift(n, m, 4);
    }),
    e.effects.define("highlight", "show", function (t, i) {
      var n = e(this),
        r = { backgroundColor: n.css("backgroundColor") };
      "hide" === t.mode && (r.opacity = 0),
        e.effects.saveStyle(n),
        n
          .css({
            backgroundImage: "none",
            backgroundColor: t.color || "#ffff99",
          })
          .animate(r, {
            queue: !1,
            duration: t.duration,
            easing: t.easing,
            complete: i,
          });
    }),
    e.effects.define("size", function (t, i) {
      var n,
        r,
        a,
        s = e(this),
        o = ["fontSize"],
        l = [
          "borderTopWidth",
          "borderBottomWidth",
          "paddingTop",
          "paddingBottom",
        ],
        c = [
          "borderLeftWidth",
          "borderRightWidth",
          "paddingLeft",
          "paddingRight",
        ],
        h = t.mode,
        u = "effect" !== h,
        d = t.scale || "both",
        f = t.origin || ["middle", "center"],
        p = s.css("position"),
        g = s.position(),
        m = e.effects.scaledDimensions(s),
        v = t.from || m,
        b = t.to || e.effects.scaledDimensions(s, 0);
      e.effects.createPlaceholder(s),
        "show" === h && ((a = v), (v = b), (b = a)),
        (r = {
          from: { y: v.height / m.height, x: v.width / m.width },
          to: { y: b.height / m.height, x: b.width / m.width },
        }),
        ("box" === d || "both" === d) &&
          (r.from.y !== r.to.y &&
            ((v = e.effects.setTransition(s, l, r.from.y, v)),
            (b = e.effects.setTransition(s, l, r.to.y, b))),
          r.from.x !== r.to.x &&
            ((v = e.effects.setTransition(s, c, r.from.x, v)),
            (b = e.effects.setTransition(s, c, r.to.x, b)))),
        ("content" === d || "both" === d) &&
          r.from.y !== r.to.y &&
          ((v = e.effects.setTransition(s, o, r.from.y, v)),
          (b = e.effects.setTransition(s, o, r.to.y, b))),
        f &&
          ((n = e.effects.getBaseline(f, m)),
          (v.top = (m.outerHeight - v.outerHeight) * n.y + g.top),
          (v.left = (m.outerWidth - v.outerWidth) * n.x + g.left),
          (b.top = (m.outerHeight - b.outerHeight) * n.y + g.top),
          (b.left = (m.outerWidth - b.outerWidth) * n.x + g.left)),
        s.css(v),
        ("content" === d || "both" === d) &&
          ((l = l.concat(["marginTop", "marginBottom"]).concat(o)),
          (c = c.concat(["marginLeft", "marginRight"])),
          s.find("*[width]").each(function () {
            var i = e(this),
              n = e.effects.scaledDimensions(i),
              a = {
                height: n.height * r.from.y,
                width: n.width * r.from.x,
                outerHeight: n.outerHeight * r.from.y,
                outerWidth: n.outerWidth * r.from.x,
              },
              s = {
                height: n.height * r.to.y,
                width: n.width * r.to.x,
                outerHeight: n.height * r.to.y,
                outerWidth: n.width * r.to.x,
              };
            r.from.y !== r.to.y &&
              ((a = e.effects.setTransition(i, l, r.from.y, a)),
              (s = e.effects.setTransition(i, l, r.to.y, s))),
              r.from.x !== r.to.x &&
                ((a = e.effects.setTransition(i, c, r.from.x, a)),
                (s = e.effects.setTransition(i, c, r.to.x, s))),
              u && e.effects.saveStyle(i),
              i.css(a),
              i.animate(s, t.duration, t.easing, function () {
                u && e.effects.restoreStyle(i);
              });
          })),
        s.animate(b, {
          queue: !1,
          duration: t.duration,
          easing: t.easing,
          complete: function () {
            var t = s.offset();
            0 === b.opacity && s.css("opacity", v.opacity),
              u ||
                (s.css("position", "static" === p ? "relative" : p).offset(t),
                e.effects.saveStyle(s)),
              i();
          },
        });
    }),
    e.effects.define("scale", function (t, i) {
      var n = e(this),
        r = t.mode,
        a =
          parseInt(t.percent, 10) ||
          (0 === parseInt(t.percent, 10) ? 0 : "effect" !== r ? 0 : 100),
        s = e.extend(
          !0,
          {
            from: e.effects.scaledDimensions(n),
            to: e.effects.scaledDimensions(n, a, t.direction || "both"),
            origin: t.origin || ["middle", "center"],
          },
          t
        );
      t.fade && ((s.from.opacity = 1), (s.to.opacity = 0)),
        e.effects.effect.size.call(this, s, i);
    }),
    e.effects.define("puff", "hide", function (t, i) {
      var n = e.extend(!0, {}, t, {
        fade: !0,
        percent: parseInt(t.percent, 10) || 150,
      });
      e.effects.effect.scale.call(this, n, i);
    }),
    e.effects.define("pulsate", "show", function (t, i) {
      var n = e(this),
        r = t.mode,
        a = "show" === r,
        s = a || "hide" === r,
        o = 2 * (t.times || 5) + (s ? 1 : 0),
        l = t.duration / o,
        c = 0,
        h = 1,
        u = n.queue().length;
      for (
        (a || !n.is(":visible")) && (n.css("opacity", 0).show(), (c = 1));
        o > h;
        h++
      )
        n.animate({ opacity: c }, l, t.easing), (c = 1 - c);
      n.animate({ opacity: c }, l, t.easing),
        n.queue(i),
        e.effects.unshift(n, u, o + 1);
    }),
    e.effects.define("shake", function (t, i) {
      var n = 1,
        r = e(this),
        a = t.direction || "left",
        s = t.distance || 20,
        o = t.times || 3,
        l = 2 * o + 1,
        c = Math.round(t.duration / l),
        h = "up" === a || "down" === a ? "top" : "left",
        u = "up" === a || "left" === a,
        d = {},
        f = {},
        p = {},
        g = r.queue().length;
      for (
        e.effects.createPlaceholder(r),
          d[h] = (u ? "-=" : "+=") + s,
          f[h] = (u ? "+=" : "-=") + 2 * s,
          p[h] = (u ? "-=" : "+=") + 2 * s,
          r.animate(d, c, t.easing);
        o > n;
        n++
      )
        r.animate(f, c, t.easing).animate(p, c, t.easing);
      r
        .animate(f, c, t.easing)
        .animate(d, c / 2, t.easing)
        .queue(i),
        e.effects.unshift(r, g, l + 1);
    }),
    e.effects.define("slide", "show", function (t, i) {
      var n,
        r,
        a = e(this),
        s = {
          up: ["bottom", "top"],
          down: ["top", "bottom"],
          left: ["right", "left"],
          right: ["left", "right"],
        },
        o = t.mode,
        l = t.direction || "left",
        c = "up" === l || "down" === l ? "top" : "left",
        h = "up" === l || "left" === l,
        u = t.distance || a["top" === c ? "outerHeight" : "outerWidth"](!0),
        d = {};
      e.effects.createPlaceholder(a),
        (n = a.cssClip()),
        (r = a.position()[c]),
        (d[c] = (h ? -1 : 1) * u + r),
        (d.clip = a.cssClip()),
        (d.clip[s[l][1]] = d.clip[s[l][0]]),
        "show" === o &&
          (a.cssClip(d.clip), a.css(c, d[c]), (d.clip = n), (d[c] = r)),
        a.animate(d, {
          queue: !1,
          duration: t.duration,
          easing: t.easing,
          complete: i,
        });
    });
  !1 !== e.uiBackCompat &&
    e.effects.define("transfer", function (t, i) {
      e(this).transfer(t, i);
    }),
    (e.ui.focusable = function (t, i) {
      var n,
        r,
        a,
        s,
        o,
        l = t.nodeName.toLowerCase();
      return "area" === l
        ? ((r = (n = t.parentNode).name),
          t.href && r && "map" === n.nodeName.toLowerCase()
            ? (a = e("img[usemap='#" + r + "']")).length > 0 && a.is(":visible")
            : !1)
        : (/^(input|select|textarea|button|object)$/.test(l)
            ? (s = !t.disabled) &&
              (o = e(t).closest("fieldset")[0]) &&
              (s = !o.disabled)
            : (s = "a" === l ? t.href || i : i),
          s &&
            e(t).is(":visible") &&
            (function (e) {
              for (var t = e.css("visibility"); "inherit" === t; )
                t = (e = e.parent()).css("visibility");
              return "hidden" !== t;
            })(e(t)));
    }),
    e.extend(e.expr[":"], {
      focusable: function (t) {
        return e.ui.focusable(t, null != e.attr(t, "tabindex"));
      },
    }),
    e.ui.focusable,
    (e.fn.form = function () {
      return "string" == typeof this[0].form
        ? this.closest("form")
        : e(this[0].form);
    }),
    (e.ui.formResetMixin = {
      _formResetHandler: function () {
        var t = e(this);
        setTimeout(function () {
          var i = t.data("ui-form-reset-instances");
          e.each(i, function () {
            this.refresh();
          });
        });
      },
      _bindFormResetHandler: function () {
        if (((this.form = this.element.form()), this.form.length)) {
          var e = this.form.data("ui-form-reset-instances") || [];
          e.length ||
            this.form.on("reset.ui-form-reset", this._formResetHandler),
            e.push(this),
            this.form.data("ui-form-reset-instances", e);
        }
      },
      _unbindFormResetHandler: function () {
        if (this.form.length) {
          var t = this.form.data("ui-form-reset-instances");
          t.splice(e.inArray(this, t), 1),
            t.length
              ? this.form.data("ui-form-reset-instances", t)
              : this.form
                  .removeData("ui-form-reset-instances")
                  .off("reset.ui-form-reset");
        }
      },
    }),
    "1.7" === e.fn.jquery.substring(0, 3) &&
      (e.each(["Width", "Height"], function (t, i) {
        function n(t, i, n, a) {
          return (
            e.each(r, function () {
              (i -= parseFloat(e.css(t, "padding" + this)) || 0),
                n &&
                  (i -= parseFloat(e.css(t, "border" + this + "Width")) || 0),
                a && (i -= parseFloat(e.css(t, "margin" + this)) || 0);
            }),
            i
          );
        }
        var r = "Width" === i ? ["Left", "Right"] : ["Top", "Bottom"],
          a = i.toLowerCase(),
          s = {
            innerWidth: e.fn.innerWidth,
            innerHeight: e.fn.innerHeight,
            outerWidth: e.fn.outerWidth,
            outerHeight: e.fn.outerHeight,
          };
        (e.fn["inner" + i] = function (t) {
          return void 0 === t
            ? s["inner" + i].call(this)
            : this.each(function () {
                e(this).css(a, n(this, t) + "px");
              });
        }),
          (e.fn["outer" + i] = function (t, r) {
            return "number" != typeof t
              ? s["outer" + i].call(this, t)
              : this.each(function () {
                  e(this).css(a, n(this, t, !0, r) + "px");
                });
          });
      }),
      (e.fn.addBack = function (e) {
        return this.add(
          null == e ? this.prevObject : this.prevObject.filter(e)
        );
      })),
    (e.ui.keyCode = {
      BACKSPACE: 8,
      COMMA: 188,
      DELETE: 46,
      DOWN: 40,
      END: 35,
      ENTER: 13,
      ESCAPE: 27,
      HOME: 36,
      LEFT: 37,
      PAGE_DOWN: 34,
      PAGE_UP: 33,
      PERIOD: 190,
      RIGHT: 39,
      SPACE: 32,
      TAB: 9,
      UP: 38,
    }),
    (e.ui.escapeSelector = (function () {
      var e = /([!"#$%&'()*+,./:;<=>?@[\]^`{|}~])/g;
      return function (t) {
        return t.replace(e, "\\$1");
      };
    })()),
    (e.fn.labels = function () {
      var t, i, n, r, a;
      return this[0].labels && this[0].labels.length
        ? this.pushStack(this[0].labels)
        : ((r = this.eq(0).parents("label")),
          (n = this.attr("id")) &&
            ((a = (t = this.eq(0).parents().last()).add(
              t.length ? t.siblings() : this.siblings()
            )),
            (i = "label[for='" + e.ui.escapeSelector(n) + "']"),
            (r = r.add(a.find(i).addBack(i)))),
          this.pushStack(r));
    }),
    (e.fn.scrollParent = function (t) {
      var i = this.css("position"),
        n = "absolute" === i,
        r = t ? /(auto|scroll|hidden)/ : /(auto|scroll)/,
        a = this.parents()
          .filter(function () {
            var t = e(this);
            return n && "static" === t.css("position")
              ? !1
              : r.test(
                  t.css("overflow") + t.css("overflow-y") + t.css("overflow-x")
                );
          })
          .eq(0);
      return "fixed" !== i && a.length
        ? a
        : e(this[0].ownerDocument || document);
    }),
    e.extend(e.expr[":"], {
      tabbable: function (t) {
        var i = e.attr(t, "tabindex"),
          n = null != i;
        return (!n || i >= 0) && e.ui.focusable(t, n);
      },
    }),
    e.fn.extend({
      uniqueId: (function () {
        var e = 0;
        return function () {
          return this.each(function () {
            this.id || (this.id = "ui-id-" + ++e);
          });
        };
      })(),
      removeUniqueId: function () {
        return this.each(function () {
          /^ui-id-\d+$/.test(this.id) && e(this).removeAttr("id");
        });
      },
    }),
    e.widget("ui.accordion", {
      version: "1.12.1",
      options: {
        active: 0,
        animate: {},
        classes: {
          "ui-accordion-header": "ui-corner-top",
          "ui-accordion-header-collapsed": "ui-corner-all",
          "ui-accordion-content": "ui-corner-bottom",
        },
        collapsible: !1,
        event: "click",
        header: "> li > :first-child, > :not(li):even",
        heightStyle: "auto",
        icons: {
          activeHeader: "ui-icon-triangle-1-s",
          header: "ui-icon-triangle-1-e",
        },
        activate: null,
        beforeActivate: null,
      },
      hideProps: {
        borderTopWidth: "hide",
        borderBottomWidth: "hide",
        paddingTop: "hide",
        paddingBottom: "hide",
        height: "hide",
      },
      showProps: {
        borderTopWidth: "show",
        borderBottomWidth: "show",
        paddingTop: "show",
        paddingBottom: "show",
        height: "show",
      },
      _create: function () {
        var t = this.options;
        (this.prevShow = this.prevHide = e()),
          this._addClass("ui-accordion", "ui-widget ui-helper-reset"),
          this.element.attr("role", "tablist"),
          t.collapsible ||
            (!1 !== t.active && null != t.active) ||
            (t.active = 0),
          this._processPanels(),
          0 > t.active && (t.active += this.headers.length),
          this._refresh();
      },
      _getCreateEventData: function () {
        return {
          header: this.active,
          panel: this.active.length ? this.active.next() : e(),
        };
      },
      _createIcons: function () {
        var t,
          i,
          n = this.options.icons;
        n &&
          ((t = e("<span>")),
          this._addClass(t, "ui-accordion-header-icon", "ui-icon " + n.header),
          t.prependTo(this.headers),
          (i = this.active.children(".ui-accordion-header-icon")),
          this._removeClass(i, n.header)
            ._addClass(i, null, n.activeHeader)
            ._addClass(this.headers, "ui-accordion-icons"));
      },
      _destroyIcons: function () {
        this._removeClass(this.headers, "ui-accordion-icons"),
          this.headers.children(".ui-accordion-header-icon").remove();
      },
      _destroy: function () {
        var e;
        this.element.removeAttr("role"),
          this.headers
            .removeAttr(
              "role aria-expanded aria-selected aria-controls tabIndex"
            )
            .removeUniqueId(),
          this._destroyIcons(),
          (e = this.headers
            .next()
            .css("display", "")
            .removeAttr("role aria-hidden aria-labelledby")
            .removeUniqueId()),
          "content" !== this.options.heightStyle && e.css("height", "");
      },
      _setOption: function (e, t) {
        return "active" === e
          ? void this._activate(t)
          : ("event" === e &&
              (this.options.event &&
                this._off(this.headers, this.options.event),
              this._setupEvents(t)),
            this._super(e, t),
            "collapsible" !== e ||
              t ||
              !1 !== this.options.active ||
              this._activate(0),
            void (
              "icons" === e && (this._destroyIcons(), t && this._createIcons())
            ));
      },
      _setOptionDisabled: function (e) {
        this._super(e),
          this.element.attr("aria-disabled", e),
          this._toggleClass(null, "ui-state-disabled", !!e),
          this._toggleClass(
            this.headers.add(this.headers.next()),
            null,
            "ui-state-disabled",
            !!e
          );
      },
      _keydown: function (t) {
        if (!t.altKey && !t.ctrlKey) {
          var i = e.ui.keyCode,
            n = this.headers.length,
            r = this.headers.index(t.target),
            a = !1;
          switch (t.keyCode) {
            case i.RIGHT:
            case i.DOWN:
              a = this.headers[(r + 1) % n];
              break;
            case i.LEFT:
            case i.UP:
              a = this.headers[(r - 1 + n) % n];
              break;
            case i.SPACE:
            case i.ENTER:
              this._eventHandler(t);
              break;
            case i.HOME:
              a = this.headers[0];
              break;
            case i.END:
              a = this.headers[n - 1];
          }
          a &&
            (e(t.target).attr("tabIndex", -1),
            e(a).attr("tabIndex", 0),
            e(a).trigger("focus"),
            t.preventDefault());
        }
      },
      _panelKeyDown: function (t) {
        t.keyCode === e.ui.keyCode.UP &&
          t.ctrlKey &&
          e(t.currentTarget).prev().trigger("focus");
      },
      refresh: function () {
        var t = this.options;
        this._processPanels(),
          (!1 === t.active && !0 === t.collapsible) || !this.headers.length
            ? ((t.active = !1), (this.active = e()))
            : !1 === t.active
            ? this._activate(0)
            : this.active.length && !e.contains(this.element[0], this.active[0])
            ? this.headers.length ===
              this.headers.find(".ui-state-disabled").length
              ? ((t.active = !1), (this.active = e()))
              : this._activate(Math.max(0, t.active - 1))
            : (t.active = this.headers.index(this.active)),
          this._destroyIcons(),
          this._refresh();
      },
      _processPanels: function () {
        var e = this.headers,
          t = this.panels;
        (this.headers = this.element.find(this.options.header)),
          this._addClass(
            this.headers,
            "ui-accordion-header ui-accordion-header-collapsed",
            "ui-state-default"
          ),
          (this.panels = this.headers
            .next()
            .filter(":not(.ui-accordion-content-active)")
            .hide()),
          this._addClass(
            this.panels,
            "ui-accordion-content",
            "ui-helper-reset ui-widget-content"
          ),
          t && (this._off(e.not(this.headers)), this._off(t.not(this.panels)));
      },
      _refresh: function () {
        var t,
          i = this.options,
          n = i.heightStyle,
          r = this.element.parent();
        (this.active = this._findActive(i.active)),
          this._addClass(
            this.active,
            "ui-accordion-header-active",
            "ui-state-active"
          )._removeClass(this.active, "ui-accordion-header-collapsed"),
          this._addClass(this.active.next(), "ui-accordion-content-active"),
          this.active.next().show(),
          this.headers
            .attr("role", "tab")
            .each(function () {
              var t = e(this),
                i = t.uniqueId().attr("id"),
                n = t.next(),
                r = n.uniqueId().attr("id");
              t.attr("aria-controls", r), n.attr("aria-labelledby", i);
            })
            .next()
            .attr("role", "tabpanel"),
          this.headers
            .not(this.active)
            .attr({
              "aria-selected": "false",
              "aria-expanded": "false",
              tabIndex: -1,
            })
            .next()
            .attr({ "aria-hidden": "true" })
            .hide(),
          this.active.length
            ? this.active
                .attr({
                  "aria-selected": "true",
                  "aria-expanded": "true",
                  tabIndex: 0,
                })
                .next()
                .attr({ "aria-hidden": "false" })
            : this.headers.eq(0).attr("tabIndex", 0),
          this._createIcons(),
          this._setupEvents(i.event),
          "fill" === n
            ? ((t = r.height()),
              this.element.siblings(":visible").each(function () {
                var i = e(this),
                  n = i.css("position");
                "absolute" !== n && "fixed" !== n && (t -= i.outerHeight(!0));
              }),
              this.headers.each(function () {
                t -= e(this).outerHeight(!0);
              }),
              this.headers
                .next()
                .each(function () {
                  e(this).height(
                    Math.max(0, t - e(this).innerHeight() + e(this).height())
                  );
                })
                .css("overflow", "auto"))
            : "auto" === n &&
              ((t = 0),
              this.headers
                .next()
                .each(function () {
                  var i = e(this).is(":visible");
                  i || e(this).show(),
                    (t = Math.max(t, e(this).css("height", "").height())),
                    i || e(this).hide();
                })
                .height(t));
      },
      _activate: function (t) {
        var i = this._findActive(t)[0];
        i !== this.active[0] &&
          ((i = i || this.active[0]),
          this._eventHandler({
            target: i,
            currentTarget: i,
            preventDefault: e.noop,
          }));
      },
      _findActive: function (t) {
        return "number" == typeof t ? this.headers.eq(t) : e();
      },
      _setupEvents: function (t) {
        var i = { keydown: "_keydown" };
        t &&
          e.each(t.split(" "), function (e, t) {
            i[t] = "_eventHandler";
          }),
          this._off(this.headers.add(this.headers.next())),
          this._on(this.headers, i),
          this._on(this.headers.next(), { keydown: "_panelKeyDown" }),
          this._hoverable(this.headers),
          this._focusable(this.headers);
      },
      _eventHandler: function (t) {
        var i,
          n,
          r = this.options,
          a = this.active,
          s = e(t.currentTarget),
          o = s[0] === a[0],
          l = o && r.collapsible,
          c = l ? e() : s.next(),
          h = a.next(),
          u = {
            oldHeader: a,
            oldPanel: h,
            newHeader: l ? e() : s,
            newPanel: c,
          };
        t.preventDefault(),
          (o && !r.collapsible) ||
            !1 === this._trigger("beforeActivate", t, u) ||
            ((r.active = l ? !1 : this.headers.index(s)),
            (this.active = o ? e() : s),
            this._toggle(u),
            this._removeClass(
              a,
              "ui-accordion-header-active",
              "ui-state-active"
            ),
            r.icons &&
              ((i = a.children(".ui-accordion-header-icon")),
              this._removeClass(i, null, r.icons.activeHeader)._addClass(
                i,
                null,
                r.icons.header
              )),
            o ||
              (this._removeClass(s, "ui-accordion-header-collapsed")._addClass(
                s,
                "ui-accordion-header-active",
                "ui-state-active"
              ),
              r.icons &&
                ((n = s.children(".ui-accordion-header-icon")),
                this._removeClass(n, null, r.icons.header)._addClass(
                  n,
                  null,
                  r.icons.activeHeader
                )),
              this._addClass(s.next(), "ui-accordion-content-active")));
      },
      _toggle: function (t) {
        var i = t.newPanel,
          n = this.prevShow.length ? this.prevShow : t.oldPanel;
        this.prevShow.add(this.prevHide).stop(!0, !0),
          (this.prevShow = i),
          (this.prevHide = n),
          this.options.animate
            ? this._animate(i, n, t)
            : (n.hide(), i.show(), this._toggleComplete(t)),
          n.attr({ "aria-hidden": "true" }),
          n.prev().attr({ "aria-selected": "false", "aria-expanded": "false" }),
          i.length && n.length
            ? n.prev().attr({ tabIndex: -1, "aria-expanded": "false" })
            : i.length &&
              this.headers
                .filter(function () {
                  return 0 === parseInt(e(this).attr("tabIndex"), 10);
                })
                .attr("tabIndex", -1),
          i
            .attr("aria-hidden", "false")
            .prev()
            .attr({
              "aria-selected": "true",
              "aria-expanded": "true",
              tabIndex: 0,
            });
      },
      _animate: function (e, t, i) {
        var n,
          r,
          a,
          s = this,
          o = 0,
          l = e.css("box-sizing"),
          c = e.length && (!t.length || e.index() < t.index()),
          h = this.options.animate || {},
          u = (c && h.down) || h,
          d = function () {
            s._toggleComplete(i);
          };
        return (
          "number" == typeof u && (a = u),
          "string" == typeof u && (r = u),
          (r = r || u.easing || h.easing),
          (a = a || u.duration || h.duration),
          t.length
            ? e.length
              ? ((n = e.show().outerHeight()),
                t.animate(this.hideProps, {
                  duration: a,
                  easing: r,
                  step: function (e, t) {
                    t.now = Math.round(e);
                  },
                }),
                void e.hide().animate(this.showProps, {
                  duration: a,
                  easing: r,
                  complete: d,
                  step: function (e, i) {
                    (i.now = Math.round(e)),
                      "height" !== i.prop
                        ? "content-box" === l && (o += i.now)
                        : "content" !== s.options.heightStyle &&
                          ((i.now = Math.round(n - t.outerHeight() - o)),
                          (o = 0));
                  },
                }))
              : t.animate(this.hideProps, a, r, d)
            : e.animate(this.showProps, a, r, d)
        );
      },
      _toggleComplete: function (e) {
        var t = e.oldPanel,
          i = t.prev();
        this._removeClass(t, "ui-accordion-content-active"),
          this._removeClass(i, "ui-accordion-header-active")._addClass(
            i,
            "ui-accordion-header-collapsed"
          ),
          t.length && (t.parent()[0].className = t.parent()[0].className),
          this._trigger("activate", null, e);
      },
    }),
    (e.ui.safeActiveElement = function (e) {
      var t;
      try {
        t = e.activeElement;
      } catch (i) {
        t = e.body;
      }
      return t || (t = e.body), t.nodeName || (t = e.body), t;
    }),
    e.widget("ui.menu", {
      version: "1.12.1",
      defaultElement: "<ul>",
      delay: 300,
      options: {
        icons: { submenu: "ui-icon-caret-1-e" },
        items: "> *",
        menus: "ul",
        position: { my: "left top", at: "right top" },
        role: "menu",
        blur: null,
        focus: null,
        select: null,
      },
      _create: function () {
        (this.activeMenu = this.element),
          (this.mouseHandled = !1),
          this.element
            .uniqueId()
            .attr({ role: this.options.role, tabIndex: 0 }),
          this._addClass("ui-menu", "ui-widget ui-widget-content"),
          this._on({
            "mousedown .ui-menu-item": function (e) {
              e.preventDefault();
            },
            "click .ui-menu-item": function (t) {
              var i = e(t.target),
                n = e(e.ui.safeActiveElement(this.document[0]));
              !this.mouseHandled &&
                i.not(".ui-state-disabled").length &&
                (this.select(t),
                t.isPropagationStopped() || (this.mouseHandled = !0),
                i.has(".ui-menu").length
                  ? this.expand(t)
                  : !this.element.is(":focus") &&
                    n.closest(".ui-menu").length &&
                    (this.element.trigger("focus", [!0]),
                    this.active &&
                      1 === this.active.parents(".ui-menu").length &&
                      clearTimeout(this.timer)));
            },
            "mouseenter .ui-menu-item": function (t) {
              if (!this.previousFilter) {
                var i = e(t.target).closest(".ui-menu-item"),
                  n = e(t.currentTarget);
                i[0] === n[0] &&
                  (this._removeClass(
                    n.siblings().children(".ui-state-active"),
                    null,
                    "ui-state-active"
                  ),
                  this.focus(t, n));
              }
            },
            mouseleave: "collapseAll",
            "mouseleave .ui-menu": "collapseAll",
            focus: function (e, t) {
              var i =
                this.active || this.element.find(this.options.items).eq(0);
              t || this.focus(e, i);
            },
            blur: function (t) {
              this._delay(function () {
                !e.contains(
                  this.element[0],
                  e.ui.safeActiveElement(this.document[0])
                ) && this.collapseAll(t);
              });
            },
            keydown: "_keydown",
          }),
          this.refresh(),
          this._on(this.document, {
            click: function (e) {
              this._closeOnDocumentClick(e) && this.collapseAll(e),
                (this.mouseHandled = !1);
            },
          });
      },
      _destroy: function () {
        var t = this.element
          .find(".ui-menu-item")
          .removeAttr("role aria-disabled")
          .children(".ui-menu-item-wrapper")
          .removeUniqueId()
          .removeAttr("tabIndex role aria-haspopup");
        this.element
          .removeAttr("aria-activedescendant")
          .find(".ui-menu")
          .addBack()
          .removeAttr(
            "role aria-labelledby aria-expanded aria-hidden aria-disabled tabIndex"
          )
          .removeUniqueId()
          .show(),
          t.children().each(function () {
            var t = e(this);
            t.data("ui-menu-submenu-caret") && t.remove();
          });
      },
      _keydown: function (t) {
        var i,
          n,
          r,
          a,
          s = !0;
        switch (t.keyCode) {
          case e.ui.keyCode.PAGE_UP:
            this.previousPage(t);
            break;
          case e.ui.keyCode.PAGE_DOWN:
            this.nextPage(t);
            break;
          case e.ui.keyCode.HOME:
            this._move("first", "first", t);
            break;
          case e.ui.keyCode.END:
            this._move("last", "last", t);
            break;
          case e.ui.keyCode.UP:
            this.previous(t);
            break;
          case e.ui.keyCode.DOWN:
            this.next(t);
            break;
          case e.ui.keyCode.LEFT:
            this.collapse(t);
            break;
          case e.ui.keyCode.RIGHT:
            this.active &&
              !this.active.is(".ui-state-disabled") &&
              this.expand(t);
            break;
          case e.ui.keyCode.ENTER:
          case e.ui.keyCode.SPACE:
            this._activate(t);
            break;
          case e.ui.keyCode.ESCAPE:
            this.collapse(t);
            break;
          default:
            (s = !1),
              (n = this.previousFilter || ""),
              (a = !1),
              (r =
                t.keyCode >= 96 && 105 >= t.keyCode
                  ? "" + (t.keyCode - 96)
                  : String.fromCharCode(t.keyCode)),
              clearTimeout(this.filterTimer),
              r === n ? (a = !0) : (r = n + r),
              (i = this._filterMenuItems(r)),
              (i =
                a && -1 !== i.index(this.active.next())
                  ? this.active.nextAll(".ui-menu-item")
                  : i).length ||
                ((r = String.fromCharCode(t.keyCode)),
                (i = this._filterMenuItems(r))),
              i.length
                ? (this.focus(t, i),
                  (this.previousFilter = r),
                  (this.filterTimer = this._delay(function () {
                    delete this.previousFilter;
                  }, 1e3)))
                : delete this.previousFilter;
        }
        s && t.preventDefault();
      },
      _activate: function (e) {
        this.active &&
          !this.active.is(".ui-state-disabled") &&
          (this.active.children("[aria-haspopup='true']").length
            ? this.expand(e)
            : this.select(e));
      },
      refresh: function () {
        var t,
          i,
          n,
          r,
          a = this,
          s = this.options.icons.submenu,
          o = this.element.find(this.options.menus);
        this._toggleClass(
          "ui-menu-icons",
          null,
          !!this.element.find(".ui-icon").length
        ),
          (i = o
            .filter(":not(.ui-menu)")
            .hide()
            .attr({
              role: this.options.role,
              "aria-hidden": "true",
              "aria-expanded": "false",
            })
            .each(function () {
              var t = e(this),
                i = t.prev(),
                n = e("<span>").data("ui-menu-submenu-caret", !0);
              a._addClass(n, "ui-menu-icon", "ui-icon " + s),
                i.attr("aria-haspopup", "true").prepend(n),
                t.attr("aria-labelledby", i.attr("id"));
            })),
          this._addClass(i, "ui-menu", "ui-widget ui-widget-content ui-front"),
          (t = o.add(this.element).find(this.options.items))
            .not(".ui-menu-item")
            .each(function () {
              var t = e(this);
              a._isDivider(t) &&
                a._addClass(t, "ui-menu-divider", "ui-widget-content");
            }),
          (r = (n = t.not(".ui-menu-item, .ui-menu-divider"))
            .children()
            .not(".ui-menu")
            .uniqueId()
            .attr({ tabIndex: -1, role: this._itemRole() })),
          this._addClass(n, "ui-menu-item")._addClass(
            r,
            "ui-menu-item-wrapper"
          ),
          t.filter(".ui-state-disabled").attr("aria-disabled", "true"),
          this.active &&
            !e.contains(this.element[0], this.active[0]) &&
            this.blur();
      },
      _itemRole: function () {
        return { menu: "menuitem", listbox: "option" }[this.options.role];
      },
      _setOption: function (e, t) {
        if ("icons" === e) {
          var i = this.element.find(".ui-menu-icon");
          this._removeClass(i, null, this.options.icons.submenu)._addClass(
            i,
            null,
            t.submenu
          );
        }
        this._super(e, t);
      },
      _setOptionDisabled: function (e) {
        this._super(e),
          this.element.attr("aria-disabled", e + ""),
          this._toggleClass(null, "ui-state-disabled", !!e);
      },
      focus: function (e, t) {
        var i, n, r;
        this.blur(e, e && "focus" === e.type),
          this._scrollIntoView(t),
          (this.active = t.first()),
          (n = this.active.children(".ui-menu-item-wrapper")),
          this._addClass(n, null, "ui-state-active"),
          this.options.role &&
            this.element.attr("aria-activedescendant", n.attr("id")),
          (r = this.active
            .parent()
            .closest(".ui-menu-item")
            .children(".ui-menu-item-wrapper")),
          this._addClass(r, null, "ui-state-active"),
          e && "keydown" === e.type
            ? this._close()
            : (this.timer = this._delay(function () {
                this._close();
              }, this.delay)),
          (i = t.children(".ui-menu")).length &&
            e &&
            /^mouse/.test(e.type) &&
            this._startOpening(i),
          (this.activeMenu = t.parent()),
          this._trigger("focus", e, { item: t });
      },
      _scrollIntoView: function (t) {
        var i, n, r, a, s, o;
        this._hasScroll() &&
          ((i = parseFloat(e.css(this.activeMenu[0], "borderTopWidth")) || 0),
          (n = parseFloat(e.css(this.activeMenu[0], "paddingTop")) || 0),
          (r = t.offset().top - this.activeMenu.offset().top - i - n),
          (a = this.activeMenu.scrollTop()),
          (s = this.activeMenu.height()),
          (o = t.outerHeight()),
          0 > r
            ? this.activeMenu.scrollTop(a + r)
            : r + o > s && this.activeMenu.scrollTop(a + r - s + o));
      },
      blur: function (e, t) {
        t || clearTimeout(this.timer),
          this.active &&
            (this._removeClass(
              this.active.children(".ui-menu-item-wrapper"),
              null,
              "ui-state-active"
            ),
            this._trigger("blur", e, { item: this.active }),
            (this.active = null));
      },
      _startOpening: function (e) {
        clearTimeout(this.timer),
          "true" === e.attr("aria-hidden") &&
            (this.timer = this._delay(function () {
              this._close(), this._open(e);
            }, this.delay));
      },
      _open: function (t) {
        var i = e.extend({ of: this.active }, this.options.position);
        clearTimeout(this.timer),
          this.element
            .find(".ui-menu")
            .not(t.parents(".ui-menu"))
            .hide()
            .attr("aria-hidden", "true"),
          t
            .show()
            .removeAttr("aria-hidden")
            .attr("aria-expanded", "true")
            .position(i);
      },
      collapseAll: function (t, i) {
        clearTimeout(this.timer),
          (this.timer = this._delay(function () {
            var n = i
              ? this.element
              : e(t && t.target).closest(this.element.find(".ui-menu"));
            n.length || (n = this.element),
              this._close(n),
              this.blur(t),
              this._removeClass(
                n.find(".ui-state-active"),
                null,
                "ui-state-active"
              ),
              (this.activeMenu = n);
          }, this.delay));
      },
      _close: function (e) {
        e || (e = this.active ? this.active.parent() : this.element),
          e
            .find(".ui-menu")
            .hide()
            .attr("aria-hidden", "true")
            .attr("aria-expanded", "false");
      },
      _closeOnDocumentClick: function (t) {
        return !e(t.target).closest(".ui-menu").length;
      },
      _isDivider: function (e) {
        return !/[^\-\u2014\u2013\s]/.test(e.text());
      },
      collapse: function (e) {
        var t =
          this.active &&
          this.active.parent().closest(".ui-menu-item", this.element);
        t && t.length && (this._close(), this.focus(e, t));
      },
      expand: function (e) {
        var t =
          this.active &&
          this.active.children(".ui-menu ").find(this.options.items).first();
        t &&
          t.length &&
          (this._open(t.parent()),
          this._delay(function () {
            this.focus(e, t);
          }));
      },
      next: function (e) {
        this._move("next", "first", e);
      },
      previous: function (e) {
        this._move("prev", "last", e);
      },
      isFirstItem: function () {
        return this.active && !this.active.prevAll(".ui-menu-item").length;
      },
      isLastItem: function () {
        return this.active && !this.active.nextAll(".ui-menu-item").length;
      },
      _move: function (e, t, i) {
        var n;
        this.active &&
          (n =
            "first" === e || "last" === e
              ? this.active["first" === e ? "prevAll" : "nextAll"](
                  ".ui-menu-item"
                ).eq(-1)
              : this.active[e + "All"](".ui-menu-item").eq(0)),
          (n && n.length && this.active) ||
            (n = this.activeMenu.find(this.options.items)[t]()),
          this.focus(i, n);
      },
      nextPage: function (t) {
        var i, n, r;
        return this.active
          ? void (
              this.isLastItem() ||
              (this._hasScroll()
                ? ((n = this.active.offset().top),
                  (r = this.element.height()),
                  this.active.nextAll(".ui-menu-item").each(function () {
                    return 0 > (i = e(this)).offset().top - n - r;
                  }),
                  this.focus(t, i))
                : this.focus(
                    t,
                    this.activeMenu
                      .find(this.options.items)
                      [this.active ? "last" : "first"]()
                  ))
            )
          : void this.next(t);
      },
      previousPage: function (t) {
        var i, n, r;
        return this.active
          ? void (
              this.isFirstItem() ||
              (this._hasScroll()
                ? ((n = this.active.offset().top),
                  (r = this.element.height()),
                  this.active.prevAll(".ui-menu-item").each(function () {
                    return (i = e(this)).offset().top - n + r > 0;
                  }),
                  this.focus(t, i))
                : this.focus(
                    t,
                    this.activeMenu.find(this.options.items).first()
                  ))
            )
          : void this.next(t);
      },
      _hasScroll: function () {
        return this.element.outerHeight() < this.element.prop("scrollHeight");
      },
      select: function (t) {
        this.active = this.active || e(t.target).closest(".ui-menu-item");
        var i = { item: this.active };
        this.active.has(".ui-menu").length || this.collapseAll(t, !0),
          this._trigger("select", t, i);
      },
      _filterMenuItems: function (t) {
        var i = t.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&"),
          n = RegExp("^" + i, "i");
        return this.activeMenu
          .find(this.options.items)
          .filter(".ui-menu-item")
          .filter(function () {
            return n.test(
              e.trim(e(this).children(".ui-menu-item-wrapper").text())
            );
          });
      },
    }),
    e.widget("ui.autocomplete", {
      version: "1.12.1",
      defaultElement: "<input>",
      options: {
        appendTo: null,
        autoFocus: !1,
        delay: 300,
        minLength: 1,
        position: { my: "left top", at: "left bottom", collision: "none" },
        source: null,
        change: null,
        close: null,
        focus: null,
        open: null,
        response: null,
        search: null,
        select: null,
      },
      requestIndex: 0,
      pending: 0,
      _create: function () {
        var t,
          i,
          n,
          r = this.element[0].nodeName.toLowerCase(),
          a = "textarea" === r,
          s = "input" === r;
        (this.isMultiLine = a || (!s && this._isContentEditable(this.element))),
          (this.valueMethod = this.element[a || s ? "val" : "text"]),
          (this.isNewMenu = !0),
          this._addClass("ui-autocomplete-input"),
          this.element.attr("autocomplete", "off"),
          this._on(this.element, {
            keydown: function (r) {
              if (this.element.prop("readOnly"))
                return (t = !0), (n = !0), void (i = !0);
              (t = !1), (n = !1), (i = !1);
              var a = e.ui.keyCode;
              switch (r.keyCode) {
                case a.PAGE_UP:
                  (t = !0), this._move("previousPage", r);
                  break;
                case a.PAGE_DOWN:
                  (t = !0), this._move("nextPage", r);
                  break;
                case a.UP:
                  (t = !0), this._keyEvent("previous", r);
                  break;
                case a.DOWN:
                  (t = !0), this._keyEvent("next", r);
                  break;
                case a.ENTER:
                  this.menu.active &&
                    ((t = !0), r.preventDefault(), this.menu.select(r));
                  break;
                case a.TAB:
                  this.menu.active && this.menu.select(r);
                  break;
                case a.ESCAPE:
                  this.menu.element.is(":visible") &&
                    (this.isMultiLine || this._value(this.term),
                    this.close(r),
                    r.preventDefault());
                  break;
                default:
                  (i = !0), this._searchTimeout(r);
              }
            },
            keypress: function (n) {
              if (t)
                return (
                  (t = !1),
                  void (
                    (!this.isMultiLine || this.menu.element.is(":visible")) &&
                    n.preventDefault()
                  )
                );
              if (!i) {
                var r = e.ui.keyCode;
                switch (n.keyCode) {
                  case r.PAGE_UP:
                    this._move("previousPage", n);
                    break;
                  case r.PAGE_DOWN:
                    this._move("nextPage", n);
                    break;
                  case r.UP:
                    this._keyEvent("previous", n);
                    break;
                  case r.DOWN:
                    this._keyEvent("next", n);
                }
              }
            },
            input: function (e) {
              return n
                ? ((n = !1), void e.preventDefault())
                : void this._searchTimeout(e);
            },
            focus: function () {
              (this.selectedItem = null), (this.previous = this._value());
            },
            blur: function (e) {
              return this.cancelBlur
                ? void delete this.cancelBlur
                : (clearTimeout(this.searching),
                  this.close(e),
                  void this._change(e));
            },
          }),
          this._initSource(),
          (this.menu = e("<ul>")
            .appendTo(this._appendTo())
            .menu({ role: null })
            .hide()
            .menu("instance")),
          this._addClass(this.menu.element, "ui-autocomplete", "ui-front"),
          this._on(this.menu.element, {
            mousedown: function (t) {
              t.preventDefault(),
                (this.cancelBlur = !0),
                this._delay(function () {
                  delete this.cancelBlur,
                    this.element[0] !==
                      e.ui.safeActiveElement(this.document[0]) &&
                      this.element.trigger("focus");
                });
            },
            menufocus: function (t, i) {
              var n, r;
              return this.isNewMenu &&
                ((this.isNewMenu = !1),
                t.originalEvent && /^mouse/.test(t.originalEvent.type))
                ? (this.menu.blur(),
                  void this.document.one("mousemove", function () {
                    e(t.target).trigger(t.originalEvent);
                  }))
                : ((r = i.item.data("ui-autocomplete-item")),
                  !1 !== this._trigger("focus", t, { item: r }) &&
                    t.originalEvent &&
                    /^key/.test(t.originalEvent.type) &&
                    this._value(r.value),
                  void (
                    (n = i.item.attr("aria-label") || r.value) &&
                    e.trim(n).length &&
                    (this.liveRegion.children().hide(),
                    e("<div>").text(n).appendTo(this.liveRegion))
                  ));
            },
            menuselect: function (t, i) {
              var n = i.item.data("ui-autocomplete-item"),
                r = this.previous;
              this.element[0] !== e.ui.safeActiveElement(this.document[0]) &&
                (this.element.trigger("focus"),
                (this.previous = r),
                this._delay(function () {
                  (this.previous = r), (this.selectedItem = n);
                })),
                !1 !== this._trigger("select", t, { item: n }) &&
                  this._value(n.value),
                (this.term = this._value()),
                this.close(t),
                (this.selectedItem = n);
            },
          }),
          (this.liveRegion = e("<div>", {
            role: "status",
            "aria-live": "assertive",
            "aria-relevant": "additions",
          }).appendTo(this.document[0].body)),
          this._addClass(this.liveRegion, null, "ui-helper-hidden-accessible"),
          this._on(this.window, {
            beforeunload: function () {
              
            },
          });
      },
      _destroy: function () {
        clearTimeout(this.searching),
          this.element.removeAttr("autocomplete"),
          this.menu.element.remove(),
          this.liveRegion.remove();
      },
      _setOption: function (e, t) {
        this._super(e, t),
          "source" === e && this._initSource(),
          "appendTo" === e && this.menu.element.appendTo(this._appendTo()),
          "disabled" === e && t && this.xhr && this.xhr.abort();
      },
      _isEventTargetInWidget: function (t) {
        var i = this.menu.element[0];
        return (
          t.target === this.element[0] ||
          t.target === i ||
          e.contains(i, t.target)
        );
      },
      _closeOnClickOutside: function (e) {
        this._isEventTargetInWidget(e) || this.close();
      },
      _appendTo: function () {
        var t = this.options.appendTo;
        return (
          t &&
            (t = t.jquery || t.nodeType ? e(t) : this.document.find(t).eq(0)),
          (t && t[0]) || (t = this.element.closest(".ui-front, dialog")),
          t.length || (t = this.document[0].body),
          t
        );
      },
      _initSource: function () {
        var t,
          i,
          n = this;
        e.isArray(this.options.source)
          ? ((t = this.options.source),
            (this.source = function (i, n) {
              n(e.ui.autocomplete.filter(t, i.term));
            }))
          : "string" == typeof this.options.source
          ? ((i = this.options.source),
            (this.source = function (t, r) {
              n.xhr && n.xhr.abort(),
                (n.xhr = e.ajax({
                  url: i,
                  data: t,
                  dataType: "json",
                  success: function (e) {
                    r(e);
                  },
                  error: function () {
                    r([]);
                  },
                }));
            }))
          : (this.source = this.options.source);
      },
      _searchTimeout: function (e) {
        clearTimeout(this.searching),
          (this.searching = this._delay(function () {
            var t = this.term === this._value(),
              i = this.menu.element.is(":visible"),
              n = e.altKey || e.ctrlKey || e.metaKey || e.shiftKey;
            (!t || (t && !i && !n)) &&
              ((this.selectedItem = null), this.search(null, e));
          }, this.options.delay));
      },
      search: function (e, t) {
        return (
          (e = null != e ? e : this._value()),
          (this.term = this._value()),
          e.length < this.options.minLength
            ? this.close(t)
            : !1 !== this._trigger("search", t)
            ? this._search(e)
            : void 0
        );
      },
      _search: function (e) {
        this.pending++,
          this._addClass("ui-autocomplete-loading"),
          (this.cancelSearch = !1),
          this.source({ term: e }, this._response());
      },
      _response: function () {
        var t = ++this.requestIndex;
        return e.proxy(function (e) {
          t === this.requestIndex && this.__response(e),
            this.pending--,
            this.pending || this._removeClass("ui-autocomplete-loading");
        }, this);
      },
      __response: function (e) {
        e && (e = this._normalize(e)),
          this._trigger("response", null, { content: e }),
          !this.options.disabled && e && e.length && !this.cancelSearch
            ? (this._suggest(e), this._trigger("open"))
            : this._close();
      },
      close: function (e) {
        (this.cancelSearch = !0), this._close(e);
      },
      _close: function (e) {
        this._off(this.document, "mousedown"),
          this.menu.element.is(":visible") &&
            (this.menu.element.hide(),
            this.menu.blur(),
            (this.isNewMenu = !0),
            this._trigger("close", e));
      },
      _change: function (e) {
        this.previous !== this._value() &&
          this._trigger("change", e, { item: this.selectedItem });
      },
      _normalize: function (t) {
        return t.length && t[0].label && t[0].value
          ? t
          : e.map(t, function (t) {
              return "string" == typeof t
                ? { label: t, value: t }
                : e.extend({}, t, {
                    label: t.label || t.value,
                    value: t.value || t.label,
                  });
            });
      },
      _suggest: function (t) {
        var i = this.menu.element.empty();
        this._renderMenu(i, t),
          (this.isNewMenu = !0),
          this.menu.refresh(),
          i.show(),
          this._resizeMenu(),
          i.position(e.extend({ of: this.element }, this.options.position)),
          this.options.autoFocus && this.menu.next(),
          this._on(this.document, { mousedown: "_closeOnClickOutside" });
      },
      _resizeMenu: function () {
        var e = this.menu.element;
        e.outerWidth(
          Math.max(e.width("").outerWidth() + 1, this.element.outerWidth())
        );
      },
      _renderMenu: function (t, i) {
        var n = this;
        e.each(i, function (e, i) {
          n._renderItemData(t, i);
        });
      },
      _renderItemData: function (e, t) {
        return this._renderItem(e, t).data("ui-autocomplete-item", t);
      },
      _renderItem: function (t, i) {
        return e("<li>").append(e("<div>").text(i.label)).appendTo(t);
      },
      _move: function (e, t) {
        return this.menu.element.is(":visible")
          ? (this.menu.isFirstItem() && /^previous/.test(e)) ||
            (this.menu.isLastItem() && /^next/.test(e))
            ? (this.isMultiLine || this._value(this.term),
              void this.menu.blur())
            : void this.menu[e](t)
          : void this.search(null, t);
      },
      widget: function () {
        return this.menu.element;
      },
      _value: function () {
        return this.valueMethod.apply(this.element, arguments);
      },
      _keyEvent: function (e, t) {
        (!this.isMultiLine || this.menu.element.is(":visible")) &&
          (this._move(e, t), t.preventDefault());
      },
      _isContentEditable: function (e) {
        if (!e.length) return !1;
        var t = e.prop("contentEditable");
        return "inherit" === t
          ? this._isContentEditable(e.parent())
          : "true" === t;
      },
    }),
    e.extend(e.ui.autocomplete, {
      escapeRegex: function (e) {
        return e.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&");
      },
      filter: function (t, i) {
        var n = RegExp(e.ui.autocomplete.escapeRegex(i), "i");
        return e.grep(t, function (e) {
          return n.test(e.label || e.value || e);
        });
      },
    }),
    e.widget("ui.autocomplete", e.ui.autocomplete, {
      options: {
        messages: {
          noResults: "No search results.",
          results: function (e) {
            return (
              e +
              (e > 1 ? " results are" : " result is") +
              " available, use up and down arrow keys to navigate."
            );
          },
        },
      },
      __response: function (t) {
        var i;
        this._superApply(arguments),
          this.options.disabled ||
            this.cancelSearch ||
            ((i =
              t && t.length
                ? this.options.messages.results(t.length)
                : this.options.messages.noResults),
            this.liveRegion.children().hide(),
            e("<div>").text(i).appendTo(this.liveRegion));
      },
    }),
    e.ui.autocomplete;
  var f,
    p = /ui-corner-([a-z]){2,6}/g;
  e.widget("ui.controlgroup", {
    version: "1.12.1",
    defaultElement: "<div>",
    options: {
      direction: "horizontal",
      disabled: null,
      onlyVisible: !0,
      items: {
        button:
          "input[type=button], input[type=submit], input[type=reset], button, a",
        controlgroupLabel: ".ui-controlgroup-label",
        checkboxradio: "input[type='checkbox'], input[type='radio']",
        selectmenu: "select",
        spinner: ".ui-spinner-input",
      },
    },
    _create: function () {
      this._enhance();
    },
    _enhance: function () {
      this.element.attr("role", "toolbar"), this.refresh();
    },
    _destroy: function () {
      this._callChildMethod("destroy"),
        this.childWidgets.removeData("ui-controlgroup-data"),
        this.element.removeAttr("role"),
        this.options.items.controlgroupLabel &&
          this.element
            .find(this.options.items.controlgroupLabel)
            .find(".ui-controlgroup-label-contents")
            .contents()
            .unwrap();
    },
    _initWidgets: function () {
      var t = this,
        i = [];
      e.each(this.options.items, function (n, r) {
        var a,
          s = {};
        return r
          ? "controlgroupLabel" === n
            ? ((a = t.element.find(r)).each(function () {
                var t = e(this);
                t.children(".ui-controlgroup-label-contents").length ||
                  t
                    .contents()
                    .wrapAll(
                      "<span class='ui-controlgroup-label-contents'></span>"
                    );
              }),
              t._addClass(
                a,
                null,
                "ui-widget ui-widget-content ui-state-default"
              ),
              void (i = i.concat(a.get())))
            : void (
                e.fn[n] &&
                ((s = t["_" + n + "Options"]
                  ? t["_" + n + "Options"]("middle")
                  : { classes: {} }),
                t.element.find(r).each(function () {
                  var r = e(this),
                    a = r[n]("instance"),
                    o = e.widget.extend({}, s);
                  if ("button" !== n || !r.parent(".ui-spinner").length) {
                    a || (a = r[n]()[n]("instance")),
                      a && (o.classes = t._resolveClassesValues(o.classes, a)),
                      r[n](o);
                    var l = r[n]("widget");
                    e.data(
                      l[0],
                      "ui-controlgroup-data",
                      a ? a : r[n]("instance")
                    ),
                      i.push(l[0]);
                  }
                }))
              )
          : void 0;
      }),
        (this.childWidgets = e(e.unique(i))),
        this._addClass(this.childWidgets, "ui-controlgroup-item");
    },
    _callChildMethod: function (t) {
      this.childWidgets.each(function () {
        var i = e(this).data("ui-controlgroup-data");
        i && i[t] && i[t]();
      });
    },
    _updateCornerClass: function (e, t) {
      var i = this._buildSimpleOptions(t, "label").classes.label;
      this._removeClass(
        e,
        null,
        "ui-corner-top ui-corner-bottom ui-corner-left ui-corner-right ui-corner-all"
      ),
        this._addClass(e, null, i);
    },
    _buildSimpleOptions: function (e, t) {
      var i = "vertical" === this.options.direction,
        n = { classes: {} };
      return (
        (n.classes[t] = {
          middle: "",
          first: "ui-corner-" + (i ? "top" : "left"),
          last: "ui-corner-" + (i ? "bottom" : "right"),
          only: "ui-corner-all",
        }[e]),
        n
      );
    },
    _spinnerOptions: function (e) {
      var t = this._buildSimpleOptions(e, "ui-spinner");
      return (
        (t.classes["ui-spinner-up"] = ""),
        (t.classes["ui-spinner-down"] = ""),
        t
      );
    },
    _buttonOptions: function (e) {
      return this._buildSimpleOptions(e, "ui-button");
    },
    _checkboxradioOptions: function (e) {
      return this._buildSimpleOptions(e, "ui-checkboxradio-label");
    },
    _selectmenuOptions: function (e) {
      var t = "vertical" === this.options.direction;
      return {
        width: t ? "auto" : !1,
        classes: {
          middle: {
            "ui-selectmenu-button-open": "",
            "ui-selectmenu-button-closed": "",
          },
          first: {
            "ui-selectmenu-button-open": "ui-corner-" + (t ? "top" : "tl"),
            "ui-selectmenu-button-closed": "ui-corner-" + (t ? "top" : "left"),
          },
          last: {
            "ui-selectmenu-button-open": t ? "" : "ui-corner-tr",
            "ui-selectmenu-button-closed":
              "ui-corner-" + (t ? "bottom" : "right"),
          },
          only: {
            "ui-selectmenu-button-open": "ui-corner-top",
            "ui-selectmenu-button-closed": "ui-corner-all",
          },
        }[e],
      };
    },
    _resolveClassesValues: function (t, i) {
      var n = {};
      return (
        e.each(t, function (r) {
          var a = i.options.classes[r] || "";
          (a = e.trim(a.replace(p, ""))),
            (n[r] = (a + " " + t[r]).replace(/\s+/g, " "));
        }),
        n
      );
    },
    _setOption: function (e, t) {
      return (
        "direction" === e &&
          this._removeClass("ui-controlgroup-" + this.options.direction),
        this._super(e, t),
        "disabled" === e
          ? void this._callChildMethod(t ? "disable" : "enable")
          : void this.refresh()
      );
    },
    refresh: function () {
      var t,
        i = this;
      this._addClass(
        "ui-controlgroup ui-controlgroup-" + this.options.direction
      ),
        "horizontal" === this.options.direction &&
          this._addClass(null, "ui-helper-clearfix"),
        this._initWidgets(),
        (t = this.childWidgets),
        this.options.onlyVisible && (t = t.filter(":visible")),
        t.length &&
          (e.each(["first", "last"], function (e, n) {
            var r = t[n]().data("ui-controlgroup-data");
            if (r && i["_" + r.widgetName + "Options"]) {
              var a = i["_" + r.widgetName + "Options"](
                1 === t.length ? "only" : n
              );
              (a.classes = i._resolveClassesValues(a.classes, r)),
                r.element[r.widgetName](a);
            } else i._updateCornerClass(t[n](), n);
          }),
          this._callChildMethod("refresh"));
    },
  }),
    e.widget("ui.checkboxradio", [
      e.ui.formResetMixin,
      {
        version: "1.12.1",
        options: {
          disabled: null,
          label: null,
          icon: !0,
          classes: {
            "ui-checkboxradio-label": "ui-corner-all",
            "ui-checkboxradio-icon": "ui-corner-all",
          },
        },
        _getCreateOptions: function () {
          var t,
            i,
            n = this,
            r = this._super() || {};
          return (
            this._readType(),
            (i = this.element.labels()),
            (this.label = e(i[i.length - 1])),
            this.label.length ||
              e.error("No label found for checkboxradio widget"),
            (this.originalLabel = ""),
            this.label
              .contents()
              .not(this.element[0])
              .each(function () {
                n.originalLabel +=
                  3 === this.nodeType ? e(this).text() : this.outerHTML;
              }),
            this.originalLabel && (r.label = this.originalLabel),
            null != (t = this.element[0].disabled) && (r.disabled = t),
            r
          );
        },
        _create: function () {
          var e = this.element[0].checked;
          this._bindFormResetHandler(),
            null == this.options.disabled &&
              (this.options.disabled = this.element[0].disabled),
            this._setOption("disabled", this.options.disabled),
            this._addClass("ui-checkboxradio", "ui-helper-hidden-accessible"),
            this._addClass(
              this.label,
              "ui-checkboxradio-label",
              "ui-button ui-widget"
            ),
            "radio" === this.type &&
              this._addClass(this.label, "ui-checkboxradio-radio-label"),
            this.options.label && this.options.label !== this.originalLabel
              ? this._updateLabel()
              : this.originalLabel && (this.options.label = this.originalLabel),
            this._enhance(),
            e &&
              (this._addClass(
                this.label,
                "ui-checkboxradio-checked",
                "ui-state-active"
              ),
              this.icon && this._addClass(this.icon, null, "ui-state-hover")),
            this._on({
              change: "_toggleClasses",
              focus: function () {
                this._addClass(
                  this.label,
                  null,
                  "ui-state-focus ui-visual-focus"
                );
              },
              blur: function () {
                this._removeClass(
                  this.label,
                  null,
                  "ui-state-focus ui-visual-focus"
                );
              },
            });
        },
        _readType: function () {
          var t = this.element[0].nodeName.toLowerCase();
          (this.type = this.element[0].type),
            ("input" === t && /radio|checkbox/.test(this.type)) ||
              e.error(
                "Can't create checkboxradio on element.nodeName=" +
                  t +
                  " and element.type=" +
                  this.type
              );
        },
        _enhance: function () {
          this._updateIcon(this.element[0].checked);
        },
        widget: function () {
          return this.label;
        },
        _getRadioGroup: function () {
          var t = this.element[0].name,
            i = "input[name='" + e.ui.escapeSelector(t) + "']";
          return t
            ? (this.form.length
                ? e(this.form[0].elements).filter(i)
                : e(i).filter(function () {
                    return 0 === e(this).form().length;
                  })
              ).not(this.element)
            : e([]);
        },
        _toggleClasses: function () {
          var t = this.element[0].checked;
          this._toggleClass(
            this.label,
            "ui-checkboxradio-checked",
            "ui-state-active",
            t
          ),
            this.options.icon &&
              "checkbox" === this.type &&
              this._toggleClass(
                this.icon,
                null,
                "ui-icon-check ui-state-checked",
                t
              )._toggleClass(this.icon, null, "ui-icon-blank", !t),
            "radio" === this.type &&
              this._getRadioGroup().each(function () {
                var t = e(this).checkboxradio("instance");
                t &&
                  t._removeClass(
                    t.label,
                    "ui-checkboxradio-checked",
                    "ui-state-active"
                  );
              });
        },
        _destroy: function () {
          this._unbindFormResetHandler(),
            this.icon && (this.icon.remove(), this.iconSpace.remove());
        },
        _setOption: function (e, t) {
          return "label" !== e || t
            ? (this._super(e, t),
              "disabled" === e
                ? (this._toggleClass(this.label, null, "ui-state-disabled", t),
                  void (this.element[0].disabled = t))
                : void this.refresh())
            : void 0;
        },
        _updateIcon: function (t) {
          var i = "ui-icon ui-icon-background ";
          this.options.icon
            ? (this.icon ||
                ((this.icon = e("<span>")),
                (this.iconSpace = e("<span> </span>")),
                this._addClass(this.iconSpace, "ui-checkboxradio-icon-space")),
              "checkbox" === this.type
                ? ((i += t
                    ? "ui-icon-check ui-state-checked"
                    : "ui-icon-blank"),
                  this._removeClass(
                    this.icon,
                    null,
                    t ? "ui-icon-blank" : "ui-icon-check"
                  ))
                : (i += "ui-icon-blank"),
              this._addClass(this.icon, "ui-checkboxradio-icon", i),
              t ||
                this._removeClass(
                  this.icon,
                  null,
                  "ui-icon-check ui-state-checked"
                ),
              this.icon.prependTo(this.label).after(this.iconSpace))
            : void 0 !== this.icon &&
              (this.icon.remove(), this.iconSpace.remove(), delete this.icon);
        },
        _updateLabel: function () {
          var e = this.label.contents().not(this.element[0]);
          this.icon && (e = e.not(this.icon[0])),
            this.iconSpace && (e = e.not(this.iconSpace[0])),
            e.remove(),
            this.label.append(this.options.label);
        },
        refresh: function () {
          var e = this.element[0].checked,
            t = this.element[0].disabled;
          this._updateIcon(e),
            this._toggleClass(
              this.label,
              "ui-checkboxradio-checked",
              "ui-state-active",
              e
            ),
            null !== this.options.label && this._updateLabel(),
            t !== this.options.disabled && this._setOptions({ disabled: t });
        },
      },
    ]),
    e.ui.checkboxradio,
    e.widget("ui.button", {
      version: "1.12.1",
      defaultElement: "<button>",
      options: {
        classes: { "ui-button": "ui-corner-all" },
        disabled: null,
        icon: null,
        iconPosition: "beginning",
        label: null,
        showLabel: !0,
      },
      _getCreateOptions: function () {
        var e,
          t = this._super() || {};
        return (
          (this.isInput = this.element.is("input")),
          null != (e = this.element[0].disabled) && (t.disabled = e),
          (this.originalLabel = this.isInput
            ? this.element.val()
            : this.element.html()),
          this.originalLabel && (t.label = this.originalLabel),
          t
        );
      },
      _create: function () {
        !this.option.showLabel & !this.options.icon &&
          (this.options.showLabel = !0),
          null == this.options.disabled &&
            (this.options.disabled = this.element[0].disabled || !1),
          (this.hasTitle = !!this.element.attr("title")),
          this.options.label &&
            this.options.label !== this.originalLabel &&
            (this.isInput
              ? this.element.val(this.options.label)
              : this.element.html(this.options.label)),
          this._addClass("ui-button", "ui-widget"),
          this._setOption("disabled", this.options.disabled),
          this._enhance(),
          this.element.is("a") &&
            this._on({
              keyup: function (t) {
                t.keyCode === e.ui.keyCode.SPACE &&
                  (t.preventDefault(),
                  this.element[0].click
                    ? this.element[0].click()
                    : this.element.trigger("click"));
              },
            });
      },
      _enhance: function () {
        this.element.is("button") || this.element.attr("role", "button"),
          this.options.icon &&
            (this._updateIcon("icon", this.options.icon),
            this._updateTooltip());
      },
      _updateTooltip: function () {
        (this.title = this.element.attr("title")),
          this.options.showLabel ||
            this.title ||
            this.element.attr("title", this.options.label);
      },
      _updateIcon: function (t, i) {
        var n = "iconPosition" !== t,
          r = n ? this.options.iconPosition : i,
          a = "top" === r || "bottom" === r;
        this.icon
          ? n && this._removeClass(this.icon, null, this.options.icon)
          : ((this.icon = e("<span>")),
            this._addClass(this.icon, "ui-button-icon", "ui-icon"),
            this.options.showLabel || this._addClass("ui-button-icon-only")),
          n && this._addClass(this.icon, null, i),
          this._attachIcon(r),
          a
            ? (this._addClass(this.icon, null, "ui-widget-icon-block"),
              this.iconSpace && this.iconSpace.remove())
            : (this.iconSpace ||
                ((this.iconSpace = e("<span> </span>")),
                this._addClass(this.iconSpace, "ui-button-icon-space")),
              this._removeClass(this.icon, null, "ui-wiget-icon-block"),
              this._attachIconSpace(r));
      },
      _destroy: function () {
        this.element.removeAttr("role"),
          this.icon && this.icon.remove(),
          this.iconSpace && this.iconSpace.remove(),
          this.hasTitle || this.element.removeAttr("title");
      },
      _attachIconSpace: function (e) {
        this.icon[/^(?:end|bottom)/.test(e) ? "before" : "after"](
          this.iconSpace
        );
      },
      _attachIcon: function (e) {
        this.element[/^(?:end|bottom)/.test(e) ? "append" : "prepend"](
          this.icon
        );
      },
      _setOptions: function (e) {
        var t = void 0 === e.showLabel ? this.options.showLabel : e.showLabel,
          i = void 0 === e.icon ? this.options.icon : e.icon;
        t || i || (e.showLabel = !0), this._super(e);
      },
      _setOption: function (e, t) {
        "icon" === e &&
          (t
            ? this._updateIcon(e, t)
            : this.icon &&
              (this.icon.remove(), this.iconSpace && this.iconSpace.remove())),
          "iconPosition" === e && this._updateIcon(e, t),
          "showLabel" === e &&
            (this._toggleClass("ui-button-icon-only", null, !t),
            this._updateTooltip()),
          "label" === e &&
            (this.isInput
              ? this.element.val(t)
              : (this.element.html(t),
                this.icon &&
                  (this._attachIcon(this.options.iconPosition),
                  this._attachIconSpace(this.options.iconPosition)))),
          this._super(e, t),
          "disabled" === e &&
            (this._toggleClass(null, "ui-state-disabled", t),
            (this.element[0].disabled = t),
            t && this.element.blur());
      },
      refresh: function () {
        var e = this.element.is("input, button")
          ? this.element[0].disabled
          : this.element.hasClass("ui-button-disabled");
        e !== this.options.disabled && this._setOptions({ disabled: e }),
          this._updateTooltip();
      },
    }),
    !1 !== e.uiBackCompat &&
      (e.widget("ui.button", e.ui.button, {
        options: { text: !0, icons: { primary: null, secondary: null } },
        _create: function () {
          this.options.showLabel &&
            !this.options.text &&
            (this.options.showLabel = this.options.text),
            !this.options.showLabel &&
              this.options.text &&
              (this.options.text = this.options.showLabel),
            this.options.icon ||
            (!this.options.icons.primary && !this.options.icons.secondary)
              ? this.options.icon &&
                (this.options.icons.primary = this.options.icon)
              : this.options.icons.primary
              ? (this.options.icon = this.options.icons.primary)
              : ((this.options.icon = this.options.icons.secondary),
                (this.options.iconPosition = "end")),
            this._super();
        },
        _setOption: function (e, t) {
          return "text" === e
            ? void this._super("showLabel", t)
            : ("showLabel" === e && (this.options.text = t),
              "icon" === e && (this.options.icons.primary = t),
              "icons" === e &&
                (t.primary
                  ? (this._super("icon", t.primary),
                    this._super("iconPosition", "beginning"))
                  : t.secondary &&
                    (this._super("icon", t.secondary),
                    this._super("iconPosition", "end"))),
              void this._superApply(arguments));
        },
      }),
      (e.fn.button = (function (t) {
        return function () {
          return !this.length ||
            (this.length && "INPUT" !== this[0].tagName) ||
            (this.length &&
              "INPUT" === this[0].tagName &&
              "checkbox" !== this.attr("type") &&
              "radio" !== this.attr("type"))
            ? t.apply(this, arguments)
            : (e.ui.checkboxradio || e.error("Checkboxradio widget missing"),
              0 === arguments.length
                ? this.checkboxradio({ icon: !1 })
                : this.checkboxradio.apply(this, arguments));
        };
      })(e.fn.button)),
      (e.fn.buttonset = function () {
        return (
          e.ui.controlgroup || e.error("Controlgroup widget missing"),
          "option" === arguments[0] && "items" === arguments[1] && arguments[2]
            ? this.controlgroup.apply(this, [
                arguments[0],
                "items.button",
                arguments[2],
              ])
            : "option" === arguments[0] && "items" === arguments[1]
            ? this.controlgroup.apply(this, [arguments[0], "items.button"])
            : ("object" == typeof arguments[0] &&
                arguments[0].items &&
                (arguments[0].items = { button: arguments[0].items }),
              this.controlgroup.apply(this, arguments))
        );
      })),
    e.ui.button,
    e.extend(e.ui, { datepicker: { version: "1.12.1" } });
  e.extend(t.prototype, {
    markerClassName: "hasDatepicker",
    maxRows: 4,
    _widgetDatepicker: function () {
      return this.dpDiv;
    },
    setDefaults: function (e) {
      return r(this._defaults, e || {}), this;
    },
    _attachDatepicker: function (t, i) {
      var n, r, a;
      (r = "div" === (n = t.nodeName.toLowerCase()) || "span" === n),
        t.id || ((this.uuid += 1), (t.id = "dp" + this.uuid)),
        ((a = this._newInst(e(t), r)).settings = e.extend({}, i || {})),
        "input" === n
          ? this._connectDatepicker(t, a)
          : r && this._inlineDatepicker(t, a);
    },
    _newInst: function (t, n) {
      return {
        id: t[0].id.replace(/([^A-Za-z0-9_\-])/g, "\\\\$1"),
        input: t,
        selectedDay: 0,
        selectedMonth: 0,
        selectedYear: 0,
        drawMonth: 0,
        drawYear: 0,
        inline: n,
        dpDiv: n
          ? i(
              e(
                "<div class='" +
                  this._inlineClass +
                  " ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>"
              )
            )
          : this.dpDiv,
      };
    },
    _connectDatepicker: function (t, i) {
      var n = e(t);
      (i.append = e([])),
        (i.trigger = e([])),
        n.hasClass(this.markerClassName) ||
          (this._attachments(n, i),
          n
            .addClass(this.markerClassName)
            .on("keydown", this._doKeyDown)
            .on("keypress", this._doKeyPress)
            .on("keyup", this._doKeyUp),
          this._autoSize(i),
          e.data(t, "datepicker", i),
          i.settings.disabled && this._disableDatepicker(t));
    },
    _attachments: function (t, i) {
      var n,
        r,
        a,
        s = this._get(i, "appendText"),
        o = this._get(i, "isRTL");
      i.append && i.append.remove(),
        s &&
          ((i.append = e(
            "<span class='" + this._appendClass + "'>" + s + "</span>"
          )),
          t[o ? "before" : "after"](i.append)),
        t.off("focus", this._showDatepicker),
        i.trigger && i.trigger.remove(),
        ("focus" === (n = this._get(i, "showOn")) || "both" === n) &&
          t.on("focus", this._showDatepicker),
        ("button" === n || "both" === n) &&
          ((r = this._get(i, "buttonText")),
          (a = this._get(i, "buttonImage")),
          (i.trigger = e(
            this._get(i, "buttonImageOnly")
              ? e("<img/>")
                  .addClass(this._triggerClass)
                  .attr({ src: a, alt: r, title: r })
              : e("<button type='button'></button>")
                  .addClass(this._triggerClass)
                  .html(a ? e("<img/>").attr({ src: a, alt: r, title: r }) : r)
          )),
          t[o ? "before" : "after"](i.trigger),
          i.trigger.on("click", function () {
            return (
              e.datepicker._datepickerShowing &&
              e.datepicker._lastInput === t[0]
                ? e.datepicker._hideDatepicker()
                : e.datepicker._datepickerShowing &&
                  e.datepicker._lastInput !== t[0]
                ? (e.datepicker._hideDatepicker(),
                  e.datepicker._showDatepicker(t[0]))
                : e.datepicker._showDatepicker(t[0]),
              !1
            );
          }));
    },
    _autoSize: function (e) {
      if (this._get(e, "autoSize") && !e.inline) {
        var t,
          i,
          n,
          r,
          a = new Date(2009, 11, 20),
          s = this._get(e, "dateFormat");
        s.match(/[DM]/) &&
          ((t = function (e) {
            for (i = 0, n = 0, r = 0; e.length > r; r++)
              e[r].length > i && ((i = e[r].length), (n = r));
            return n;
          }),
          a.setMonth(
            t(this._get(e, s.match(/MM/) ? "monthNames" : "monthNamesShort"))
          ),
          a.setDate(
            t(this._get(e, s.match(/DD/) ? "dayNames" : "dayNamesShort")) +
              20 -
              a.getDay()
          )),
          e.input.attr("size", this._formatDate(e, a).length);
      }
    },
    _inlineDatepicker: function (t, i) {
      var n = e(t);
      n.hasClass(this.markerClassName) ||
        (n.addClass(this.markerClassName).append(i.dpDiv),
        e.data(t, "datepicker", i),
        this._setDate(i, this._getDefaultDate(i), !0),
        this._updateDatepicker(i),
        this._updateAlternate(i),
        i.settings.disabled && this._disableDatepicker(t),
        i.dpDiv.css("display", "block"));
    },
    _dialogDatepicker: function (t, i, n, a, s) {
      var o,
        l,
        c,
        h,
        u,
        d = this._dialogInst;
      return (
        d ||
          ((this.uuid += 1),
          (o = "dp" + this.uuid),
          (this._dialogInput = e(
            "<input type='text' id='" +
              o +
              "' style='position: absolute; top: -100px; width: 0px;'/>"
          )),
          this._dialogInput.on("keydown", this._doKeyDown),
          e("body").append(this._dialogInput),
          ((d = this._dialogInst =
            this._newInst(this._dialogInput, !1)).settings = {}),
          e.data(this._dialogInput[0], "datepicker", d)),
        r(d.settings, a || {}),
        (i = i && i.constructor === Date ? this._formatDate(d, i) : i),
        this._dialogInput.val(i),
        (this._pos = s ? (s.length ? s : [s.pageX, s.pageY]) : null),
        this._pos ||
          ((l = document.documentElement.clientWidth),
          (c = document.documentElement.clientHeight),
          (h = document.documentElement.scrollLeft || document.body.scrollLeft),
          (u = document.documentElement.scrollTop || document.body.scrollTop),
          (this._pos = [l / 2 - 100 + h, c / 2 - 150 + u])),
        this._dialogInput
          .css("left", this._pos[0] + 20 + "px")
          .css("top", this._pos[1] + "px"),
        (d.settings.onSelect = n),
        (this._inDialog = !0),
        this.dpDiv.addClass(this._dialogClass),
        this._showDatepicker(this._dialogInput[0]),
        e.blockUI && e.blockUI(this.dpDiv),
        e.data(this._dialogInput[0], "datepicker", d),
        this
      );
    },
    _destroyDatepicker: function (t) {
      var i,
        n = e(t),
        r = e.data(t, "datepicker");
      n.hasClass(this.markerClassName) &&
        ((i = t.nodeName.toLowerCase()),
        e.removeData(t, "datepicker"),
        "input" === i
          ? (r.append.remove(),
            r.trigger.remove(),
            n
              .removeClass(this.markerClassName)
              .off("focus", this._showDatepicker)
              .off("keydown", this._doKeyDown)
              .off("keypress", this._doKeyPress)
              .off("keyup", this._doKeyUp))
          : ("div" === i || "span" === i) &&
            n.removeClass(this.markerClassName).empty(),
        f === r && (f = null));
    },
    _enableDatepicker: function (t) {
      var i,
        n,
        r = e(t),
        a = e.data(t, "datepicker");
      r.hasClass(this.markerClassName) &&
        ("input" === (i = t.nodeName.toLowerCase())
          ? ((t.disabled = !1),
            a.trigger
              .filter("button")
              .each(function () {
                this.disabled = !1;
              })
              .end()
              .filter("img")
              .css({ opacity: "1.0", cursor: "" }))
          : ("div" === i || "span" === i) &&
            ((n = r.children("." + this._inlineClass))
              .children()
              .removeClass("ui-state-disabled"),
            n
              .find("select.ui-datepicker-month, select.ui-datepicker-year")
              .prop("disabled", !1)),
        (this._disabledInputs = e.map(this._disabledInputs, function (e) {
          return e === t ? null : e;
        })));
    },
    _disableDatepicker: function (t) {
      var i,
        n,
        r = e(t),
        a = e.data(t, "datepicker");
      r.hasClass(this.markerClassName) &&
        ("input" === (i = t.nodeName.toLowerCase())
          ? ((t.disabled = !0),
            a.trigger
              .filter("button")
              .each(function () {
                this.disabled = !0;
              })
              .end()
              .filter("img")
              .css({ opacity: "0.5", cursor: "default" }))
          : ("div" === i || "span" === i) &&
            ((n = r.children("." + this._inlineClass))
              .children()
              .addClass("ui-state-disabled"),
            n
              .find("select.ui-datepicker-month, select.ui-datepicker-year")
              .prop("disabled", !0)),
        (this._disabledInputs = e.map(this._disabledInputs, function (e) {
          return e === t ? null : e;
        })),
        (this._disabledInputs[this._disabledInputs.length] = t));
    },
    _isDisabledDatepicker: function (e) {
      if (!e) return !1;
      for (var t = 0; this._disabledInputs.length > t; t++)
        if (this._disabledInputs[t] === e) return !0;
      return !1;
    },
    _getInst: function (t) {
      try {
        return e.data(t, "datepicker");
      } catch (e) {
        throw "Missing instance data for this datepicker";
      }
    },
    _optionDatepicker: function (t, i, n) {
      var a,
        s,
        o,
        l,
        c = this._getInst(t);
      return 2 === arguments.length && "string" == typeof i
        ? "defaults" === i
          ? e.extend({}, e.datepicker._defaults)
          : c
          ? "all" === i
            ? e.extend({}, c.settings)
            : this._get(c, i)
          : null
        : ((a = i || {}),
          "string" == typeof i && ((a = {})[i] = n),
          void (
            c &&
            (this._curInst === c && this._hideDatepicker(),
            (s = this._getDateDatepicker(t, !0)),
            (o = this._getMinMaxDate(c, "min")),
            (l = this._getMinMaxDate(c, "max")),
            r(c.settings, a),
            null !== o &&
              void 0 !== a.dateFormat &&
              void 0 === a.minDate &&
              (c.settings.minDate = this._formatDate(c, o)),
            null !== l &&
              void 0 !== a.dateFormat &&
              void 0 === a.maxDate &&
              (c.settings.maxDate = this._formatDate(c, l)),
            "disabled" in a &&
              (a.disabled
                ? this._disableDatepicker(t)
                : this._enableDatepicker(t)),
            this._attachments(e(t), c),
            this._autoSize(c),
            this._setDate(c, s),
            this._updateAlternate(c),
            this._updateDatepicker(c))
          ));
    },
    _changeDatepicker: function (e, t, i) {
      this._optionDatepicker(e, t, i);
    },
    _refreshDatepicker: function (e) {
      var t = this._getInst(e);
      t && this._updateDatepicker(t);
    },
    _setDateDatepicker: function (e, t) {
      var i = this._getInst(e);
      i &&
        (this._setDate(i, t),
        this._updateDatepicker(i),
        this._updateAlternate(i));
    },
    _getDateDatepicker: function (e, t) {
      var i = this._getInst(e);
      return (
        i && !i.inline && this._setDateFromField(i, t),
        i ? this._getDate(i) : null
      );
    },
    _doKeyDown: function (t) {
      var i,
        n,
        r,
        a = e.datepicker._getInst(t.target),
        s = !0,
        o = a.dpDiv.is(".ui-datepicker-rtl");
      if (((a._keyEvent = !0), e.datepicker._datepickerShowing))
        switch (t.keyCode) {
          case 9:
            e.datepicker._hideDatepicker(), (s = !1);
            break;
          case 13:
            return (
              (r = e(
                "td." +
                  e.datepicker._dayOverClass +
                  ":not(." +
                  e.datepicker._currentClass +
                  ")",
                a.dpDiv
              ))[0] &&
                e.datepicker._selectDay(
                  t.target,
                  a.selectedMonth,
                  a.selectedYear,
                  r[0]
                ),
              (i = e.datepicker._get(a, "onSelect"))
                ? ((n = e.datepicker._formatDate(a)),
                  i.apply(a.input ? a.input[0] : null, [n, a]))
                : e.datepicker._hideDatepicker(),
              !1
            );
          case 27:
            e.datepicker._hideDatepicker();
            break;
          case 33:
            e.datepicker._adjustDate(
              t.target,
              t.ctrlKey
                ? -e.datepicker._get(a, "stepBigMonths")
                : -e.datepicker._get(a, "stepMonths"),
              "M"
            );
            break;
          case 34:
            e.datepicker._adjustDate(
              t.target,
              t.ctrlKey
                ? +e.datepicker._get(a, "stepBigMonths")
                : +e.datepicker._get(a, "stepMonths"),
              "M"
            );
            break;
          case 35:
            (t.ctrlKey || t.metaKey) && e.datepicker._clearDate(t.target),
              (s = t.ctrlKey || t.metaKey);
            break;
          case 36:
            (t.ctrlKey || t.metaKey) && e.datepicker._gotoToday(t.target),
              (s = t.ctrlKey || t.metaKey);
            break;
          case 37:
            (t.ctrlKey || t.metaKey) &&
              e.datepicker._adjustDate(t.target, o ? 1 : -1, "D"),
              (s = t.ctrlKey || t.metaKey),
              t.originalEvent.altKey &&
                e.datepicker._adjustDate(
                  t.target,
                  t.ctrlKey
                    ? -e.datepicker._get(a, "stepBigMonths")
                    : -e.datepicker._get(a, "stepMonths"),
                  "M"
                );
            break;
          case 38:
            (t.ctrlKey || t.metaKey) &&
              e.datepicker._adjustDate(t.target, -7, "D"),
              (s = t.ctrlKey || t.metaKey);
            break;
          case 39:
            (t.ctrlKey || t.metaKey) &&
              e.datepicker._adjustDate(t.target, o ? -1 : 1, "D"),
              (s = t.ctrlKey || t.metaKey),
              t.originalEvent.altKey &&
                e.datepicker._adjustDate(
                  t.target,
                  t.ctrlKey
                    ? +e.datepicker._get(a, "stepBigMonths")
                    : +e.datepicker._get(a, "stepMonths"),
                  "M"
                );
            break;
          case 40:
            (t.ctrlKey || t.metaKey) &&
              e.datepicker._adjustDate(t.target, 7, "D"),
              (s = t.ctrlKey || t.metaKey);
            break;
          default:
            s = !1;
        }
      else
        36 === t.keyCode && t.ctrlKey
          ? e.datepicker._showDatepicker(this)
          : (s = !1);
      s && (t.preventDefault(), t.stopPropagation());
    },
    _doKeyPress: function (t) {
      var i,
        n,
        r = e.datepicker._getInst(t.target);
      return e.datepicker._get(r, "constrainInput")
        ? ((i = e.datepicker._possibleChars(
            e.datepicker._get(r, "dateFormat")
          )),
          (n = String.fromCharCode(
            null == t.charCode ? t.keyCode : t.charCode
          )),
          t.ctrlKey || t.metaKey || " " > n || !i || i.indexOf(n) > -1)
        : void 0;
    },
    _doKeyUp: function (t) {
      var i = e.datepicker._getInst(t.target);
      if (i.input.val() !== i.lastVal)
        try {
          e.datepicker.parseDate(
            e.datepicker._get(i, "dateFormat"),
            i.input ? i.input.val() : null,
            e.datepicker._getFormatConfig(i)
          ) &&
            (e.datepicker._setDateFromField(i),
            e.datepicker._updateAlternate(i),
            e.datepicker._updateDatepicker(i));
        } catch (e) {}
      return !0;
    },
    _showDatepicker: function (t) {
      if (
        ("input" !== (t = t.target || t).nodeName.toLowerCase() &&
          (t = e("input", t.parentNode)[0]),
        !e.datepicker._isDisabledDatepicker(t) && e.datepicker._lastInput !== t)
      ) {
        var i, n, a, s, o, l, c;
        (i = e.datepicker._getInst(t)),
          e.datepicker._curInst &&
            e.datepicker._curInst !== i &&
            (e.datepicker._curInst.dpDiv.stop(!0, !0),
            i &&
              e.datepicker._datepickerShowing &&
              e.datepicker._hideDatepicker(e.datepicker._curInst.input[0])),
          !1 !==
            (a = (n = e.datepicker._get(i, "beforeShow"))
              ? n.apply(t, [t, i])
              : {}) &&
            (r(i.settings, a),
            (i.lastVal = null),
            (e.datepicker._lastInput = t),
            e.datepicker._setDateFromField(i),
            e.datepicker._inDialog && (t.value = ""),
            e.datepicker._pos ||
              ((e.datepicker._pos = e.datepicker._findPos(t)),
              (e.datepicker._pos[1] += t.offsetHeight)),
            (s = !1),
            e(t)
              .parents()
              .each(function () {
                return !(s |= "fixed" === e(this).css("position"));
              }),
            (o = { left: e.datepicker._pos[0], top: e.datepicker._pos[1] }),
            (e.datepicker._pos = null),
            i.dpDiv.empty(),
            i.dpDiv.css({
              position: "absolute",
              display: "block",
              top: "-1000px",
            }),
            e.datepicker._updateDatepicker(i),
            (o = e.datepicker._checkOffset(i, o, s)),
            i.dpDiv.css({
              position:
                e.datepicker._inDialog && e.blockUI
                  ? "static"
                  : s
                  ? "fixed"
                  : "absolute",
              display: "none",
              left: o.left + "px",
              top: o.top + "px",
            }),
            i.inline ||
              ((l = e.datepicker._get(i, "showAnim")),
              (c = e.datepicker._get(i, "duration")),
              i.dpDiv.css(
                "z-index",
                (function (e) {
                  for (var t, i; e.length && e[0] !== document; ) {
                    if (
                      ("absolute" === (t = e.css("position")) ||
                        "relative" === t ||
                        "fixed" === t) &&
                      ((i = parseInt(e.css("zIndex"), 10)),
                      !isNaN(i) && 0 !== i)
                    )
                      return i;
                    e = e.parent();
                  }
                  return 0;
                })(e(t)) + 1
              ),
              (e.datepicker._datepickerShowing = !0),
              e.effects && e.effects.effect[l]
                ? i.dpDiv.show(l, e.datepicker._get(i, "showOptions"), c)
                : i.dpDiv[l || "show"](l ? c : null),
              e.datepicker._shouldFocusInput(i) && i.input.trigger("focus"),
              (e.datepicker._curInst = i)));
      }
    },
    _updateDatepicker: function (t) {
      (this.maxRows = 4),
        (f = t),
        t.dpDiv.empty().append(this._generateHTML(t)),
        this._attachHandlers(t);
      var i,
        r = this._getNumberOfMonths(t),
        a = r[1],
        s = t.dpDiv.find("." + this._dayOverClass + " a");
      s.length > 0 && n.apply(s.get(0)),
        t.dpDiv
          .removeClass(
            "ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4"
          )
          .width(""),
        a > 1 &&
          t.dpDiv
            .addClass("ui-datepicker-multi-" + a)
            .css("width", 17 * a + "em"),
        t.dpDiv[(1 !== r[0] || 1 !== r[1] ? "add" : "remove") + "Class"](
          "ui-datepicker-multi"
        ),
        t.dpDiv[(this._get(t, "isRTL") ? "add" : "remove") + "Class"](
          "ui-datepicker-rtl"
        ),
        t === e.datepicker._curInst &&
          e.datepicker._datepickerShowing &&
          e.datepicker._shouldFocusInput(t) &&
          t.input.trigger("focus"),
        t.yearshtml &&
          ((i = t.yearshtml),
          setTimeout(function () {
            i === t.yearshtml &&
              t.yearshtml &&
              t.dpDiv
                .find("select.ui-datepicker-year:first")
                .replaceWith(t.yearshtml),
              (i = t.yearshtml = null);
          }, 0));
    },
    _shouldFocusInput: function (e) {
      return (
        e.input &&
        e.input.is(":visible") &&
        !e.input.is(":disabled") &&
        !e.input.is(":focus")
      );
    },
    _checkOffset: function (t, i, n) {
      var r = t.dpDiv.outerWidth(),
        a = t.dpDiv.outerHeight(),
        s = t.input ? t.input.outerWidth() : 0,
        o = t.input ? t.input.outerHeight() : 0,
        l =
          document.documentElement.clientWidth +
          (n ? 0 : e(document).scrollLeft()),
        c =
          document.documentElement.clientHeight +
          (n ? 0 : e(document).scrollTop());
      return (
        (i.left -= this._get(t, "isRTL") ? r - s : 0),
        (i.left -=
          n && i.left === t.input.offset().left ? e(document).scrollLeft() : 0),
        (i.top -=
          n && i.top === t.input.offset().top + o
            ? e(document).scrollTop()
            : 0),
        (i.left -= Math.min(
          i.left,
          i.left + r > l && l > r ? Math.abs(i.left + r - l) : 0
        )),
        (i.top -= Math.min(
          i.top,
          i.top + a > c && c > a ? Math.abs(a + o) : 0
        )),
        i
      );
    },
    _findPos: function (t) {
      for (
        var i, n = this._getInst(t), r = this._get(n, "isRTL");
        t &&
        ("hidden" === t.type || 1 !== t.nodeType || e.expr.filters.hidden(t));

      )
        t = t[r ? "previousSibling" : "nextSibling"];
      return [(i = e(t).offset()).left, i.top];
    },
    _hideDatepicker: function (t) {
      var i,
        n,
        r,
        a,
        s = this._curInst;
      !s ||
        (t && s !== e.data(t, "datepicker")) ||
        (this._datepickerShowing &&
          ((i = this._get(s, "showAnim")),
          (n = this._get(s, "duration")),
          (r = function () {
            e.datepicker._tidyDialog(s);
          }),
          e.effects && (e.effects.effect[i] || e.effects[i])
            ? s.dpDiv.hide(i, e.datepicker._get(s, "showOptions"), n, r)
            : s.dpDiv[
                "slideDown" === i
                  ? "slideUp"
                  : "fadeIn" === i
                  ? "fadeOut"
                  : "hide"
              ](i ? n : null, r),
          i || r(),
          (this._datepickerShowing = !1),
          (a = this._get(s, "onClose")) &&
            a.apply(s.input ? s.input[0] : null, [
              s.input ? s.input.val() : "",
              s,
            ]),
          (this._lastInput = null),
          this._inDialog &&
            (this._dialogInput.css({
              position: "absolute",
              left: "0",
              top: "-100px",
            }),
            e.blockUI && (e.unblockUI(), e("body").append(this.dpDiv))),
          (this._inDialog = !1)));
    },
    _tidyDialog: function (e) {
      e.dpDiv.removeClass(this._dialogClass).off(".ui-datepicker-calendar");
    },
    _checkExternalClick: function (t) {
      if (e.datepicker._curInst) {
        var i = e(t.target),
          n = e.datepicker._getInst(i[0]);
        ((i[0].id !== e.datepicker._mainDivId &&
          0 === i.parents("#" + e.datepicker._mainDivId).length &&
          !i.hasClass(e.datepicker.markerClassName) &&
          !i.closest("." + e.datepicker._triggerClass).length &&
          e.datepicker._datepickerShowing &&
          (!e.datepicker._inDialog || !e.blockUI)) ||
          (i.hasClass(e.datepicker.markerClassName) &&
            e.datepicker._curInst !== n)) &&
          e.datepicker._hideDatepicker();
      }
    },
    _adjustDate: function (t, i, n) {
      var r = e(t),
        a = this._getInst(r[0]);
      this._isDisabledDatepicker(r[0]) ||
        (this._adjustInstDate(
          a,
          i + ("M" === n ? this._get(a, "showCurrentAtPos") : 0),
          n
        ),
        this._updateDatepicker(a));
    },
    _gotoToday: function (t) {
      var i,
        n = e(t),
        r = this._getInst(n[0]);
      this._get(r, "gotoCurrent") && r.currentDay
        ? ((r.selectedDay = r.currentDay),
          (r.drawMonth = r.selectedMonth = r.currentMonth),
          (r.drawYear = r.selectedYear = r.currentYear))
        : ((i = new Date()),
          (r.selectedDay = i.getDate()),
          (r.drawMonth = r.selectedMonth = i.getMonth()),
          (r.drawYear = r.selectedYear = i.getFullYear())),
        this._notifyChange(r),
        this._adjustDate(n);
    },
    _selectMonthYear: function (t, i, n) {
      var r = e(t),
        a = this._getInst(r[0]);
      (a["selected" + ("M" === n ? "Month" : "Year")] = a[
        "draw" + ("M" === n ? "Month" : "Year")
      ] =
        parseInt(i.options[i.selectedIndex].value, 10)),
        this._notifyChange(a),
        this._adjustDate(r);
    },
    _selectDay: function (t, i, n, r) {
      var a,
        s = e(t);
      e(r).hasClass(this._unselectableClass) ||
        this._isDisabledDatepicker(s[0]) ||
        (((a = this._getInst(s[0])).selectedDay = a.currentDay =
          e("a", r).html()),
        (a.selectedMonth = a.currentMonth = i),
        (a.selectedYear = a.currentYear = n),
        this._selectDate(
          t,
          this._formatDate(a, a.currentDay, a.currentMonth, a.currentYear)
        ));
    },
    _clearDate: function (t) {
      var i = e(t);
      this._selectDate(i, "");
    },
    _selectDate: function (t, i) {
      var n,
        r = e(t),
        a = this._getInst(r[0]);
      (i = null != i ? i : this._formatDate(a)),
        a.input && a.input.val(i),
        this._updateAlternate(a),
        (n = this._get(a, "onSelect"))
          ? n.apply(a.input ? a.input[0] : null, [i, a])
          : a.input && a.input.trigger("change"),
        a.inline
          ? this._updateDatepicker(a)
          : (this._hideDatepicker(),
            (this._lastInput = a.input[0]),
            "object" != typeof a.input[0] && a.input.trigger("focus"),
            (this._lastInput = null));
    },
    _updateAlternate: function (t) {
      var i,
        n,
        r,
        a = this._get(t, "altField");
      a &&
        ((i = this._get(t, "altFormat") || this._get(t, "dateFormat")),
        (n = this._getDate(t)),
        (r = this.formatDate(i, n, this._getFormatConfig(t))),
        e(a).val(r));
    },
    noWeekends: function (e) {
      var t = e.getDay();
      return [t > 0 && 6 > t, ""];
    },
    iso8601Week: function (e) {
      var t,
        i = new Date(e.getTime());
      return (
        i.setDate(i.getDate() + 4 - (i.getDay() || 7)),
        (t = i.getTime()),
        i.setMonth(0),
        i.setDate(1),
        Math.floor(Math.round((t - i) / 864e5) / 7) + 1
      );
    },
    parseDate: function (t, i, n) {
      if (null == t || null == i) throw "Invalid arguments";
      if ("" == (i = "object" == typeof i ? "" + i : i + "")) return null;
      var r,
        a,
        s,
        o,
        l = 0,
        c = (n ? n.shortYearCutoff : null) || this._defaults.shortYearCutoff,
        h =
          "string" != typeof c
            ? c
            : (new Date().getFullYear() % 100) + parseInt(c, 10),
        u = (n ? n.dayNamesShort : null) || this._defaults.dayNamesShort,
        d = (n ? n.dayNames : null) || this._defaults.dayNames,
        f = (n ? n.monthNamesShort : null) || this._defaults.monthNamesShort,
        p = (n ? n.monthNames : null) || this._defaults.monthNames,
        g = -1,
        m = -1,
        v = -1,
        b = -1,
        y = !1,
        w = function (e) {
          var i = t.length > r + 1 && t.charAt(r + 1) === e;
          return i && r++, i;
        },
        x = function (e) {
          var t = w(e),
            n =
              "@" === e
                ? 14
                : "!" === e
                ? 20
                : "y" === e && t
                ? 4
                : "o" === e
                ? 3
                : 2,
            r = RegExp("^\\d{" + ("y" === e ? n : 1) + "," + n + "}"),
            a = i.substring(l).match(r);
          if (!a) throw "Missing number at position " + l;
          return (l += a[0].length), parseInt(a[0], 10);
        },
        k = function (t, n, r) {
          var a = -1,
            s = e
              .map(w(t) ? r : n, function (e, t) {
                return [[t, e]];
              })
              .sort(function (e, t) {
                return -(e[1].length - t[1].length);
              });
          if (
            (e.each(s, function (e, t) {
              var n = t[1];
              return i.substr(l, n.length).toLowerCase() === n.toLowerCase()
                ? ((a = t[0]), (l += n.length), !1)
                : void 0;
            }),
            -1 !== a)
          )
            return a + 1;
          throw "Unknown name at position " + l;
        },
        C = function () {
          if (i.charAt(l) !== t.charAt(r))
            throw "Unexpected literal at position " + l;
          l++;
        };
      for (r = 0; t.length > r; r++)
        if (y) "'" !== t.charAt(r) || w("'") ? C() : (y = !1);
        else
          switch (t.charAt(r)) {
            case "d":
              v = x("d");
              break;
            case "D":
              k("D", u, d);
              break;
            case "o":
              b = x("o");
              break;
            case "m":
              m = x("m");
              break;
            case "M":
              m = k("M", f, p);
              break;
            case "y":
              g = x("y");
              break;
            case "@":
              (g = (o = new Date(x("@"))).getFullYear()),
                (m = o.getMonth() + 1),
                (v = o.getDate());
              break;
            case "!":
              (g = (o = new Date(
                (x("!") - this._ticksTo1970) / 1e4
              )).getFullYear()),
                (m = o.getMonth() + 1),
                (v = o.getDate());
              break;
            case "'":
              w("'") ? C() : (y = !0);
              break;
            default:
              C();
          }
      if (i.length > l && ((s = i.substr(l)), !/^\s+/.test(s)))
        throw "Extra/unparsed characters found in date: " + s;
      if (
        (-1 === g
          ? (g = new Date().getFullYear())
          : 100 > g &&
            (g +=
              new Date().getFullYear() -
              (new Date().getFullYear() % 100) +
              (h >= g ? 0 : -100)),
        b > -1)
      )
        for (m = 1, v = b; !((a = this._getDaysInMonth(g, m - 1)) >= v); )
          m++, (v -= a);
      if (
        (o = this._daylightSavingAdjust(
          new Date(g, m - 1, v)
        )).getFullYear() !== g ||
        o.getMonth() + 1 !== m ||
        o.getDate() !== v
      )
        throw "Invalid date";
      return o;
    },
    ATOM: "yy-mm-dd",
    COOKIE: "D, dd M yy",
    ISO_8601: "yy-mm-dd",
    RFC_822: "D, d M y",
    RFC_850: "DD, dd-M-y",
    RFC_1036: "D, d M y",
    RFC_1123: "D, d M yy",
    RFC_2822: "D, d M yy",
    RSS: "D, d M y",
    TICKS: "!",
    TIMESTAMP: "@",
    W3C: "yy-mm-dd",
    _ticksTo1970:
      864e9 *
      (718685 + Math.floor(492.5) - Math.floor(19.7) + Math.floor(4.925)),
    formatDate: function (e, t, i) {
      if (!t) return "";
      var n,
        r = (i ? i.dayNamesShort : null) || this._defaults.dayNamesShort,
        a = (i ? i.dayNames : null) || this._defaults.dayNames,
        s = (i ? i.monthNamesShort : null) || this._defaults.monthNamesShort,
        o = (i ? i.monthNames : null) || this._defaults.monthNames,
        l = function (t) {
          var i = e.length > n + 1 && e.charAt(n + 1) === t;
          return i && n++, i;
        },
        c = function (e, t, i) {
          var n = "" + t;
          if (l(e)) for (; i > n.length; ) n = "0" + n;
          return n;
        },
        h = function (e, t, i, n) {
          return l(e) ? n[t] : i[t];
        },
        u = "",
        d = !1;
      if (t)
        for (n = 0; e.length > n; n++)
          if (d) "'" !== e.charAt(n) || l("'") ? (u += e.charAt(n)) : (d = !1);
          else
            switch (e.charAt(n)) {
              case "d":
                u += c("d", t.getDate(), 2);
                break;
              case "D":
                u += h("D", t.getDay(), r, a);
                break;
              case "o":
                u += c(
                  "o",
                  Math.round(
                    (new Date(
                      t.getFullYear(),
                      t.getMonth(),
                      t.getDate()
                    ).getTime() -
                      new Date(t.getFullYear(), 0, 0).getTime()) /
                      864e5
                  ),
                  3
                );
                break;
              case "m":
                u += c("m", t.getMonth() + 1, 2);
                break;
              case "M":
                u += h("M", t.getMonth(), s, o);
                break;
              case "y":
                u += l("y")
                  ? t.getFullYear()
                  : (10 > t.getFullYear() % 100 ? "0" : "") +
                    (t.getFullYear() % 100);
                break;
              case "@":
                u += t.getTime();
                break;
              case "!":
                u += 1e4 * t.getTime() + this._ticksTo1970;
                break;
              case "'":
                l("'") ? (u += "'") : (d = !0);
                break;
              default:
                u += e.charAt(n);
            }
      return u;
    },
    _possibleChars: function (e) {
      var t,
        i = "",
        n = !1,
        r = function (i) {
          var n = e.length > t + 1 && e.charAt(t + 1) === i;
          return n && t++, n;
        };
      for (t = 0; e.length > t; t++)
        if (n) "'" !== e.charAt(t) || r("'") ? (i += e.charAt(t)) : (n = !1);
        else
          switch (e.charAt(t)) {
            case "d":
            case "m":
            case "y":
            case "@":
              i += "0123456789";
              break;
            case "D":
            case "M":
              return null;
            case "'":
              r("'") ? (i += "'") : (n = !0);
              break;
            default:
              i += e.charAt(t);
          }
      return i;
    },
    _get: function (e, t) {
      return void 0 !== e.settings[t] ? e.settings[t] : this._defaults[t];
    },
    _setDateFromField: function (e, t) {
      if (e.input.val() !== e.lastVal) {
        var i = this._get(e, "dateFormat"),
          n = (e.lastVal = e.input ? e.input.val() : null),
          r = this._getDefaultDate(e),
          a = r,
          s = this._getFormatConfig(e);
        try {
          a = this.parseDate(i, n, s) || r;
        } catch (e) {
          n = t ? "" : n;
        }
        (e.selectedDay = a.getDate()),
          (e.drawMonth = e.selectedMonth = a.getMonth()),
          (e.drawYear = e.selectedYear = a.getFullYear()),
          (e.currentDay = n ? a.getDate() : 0),
          (e.currentMonth = n ? a.getMonth() : 0),
          (e.currentYear = n ? a.getFullYear() : 0),
          this._adjustInstDate(e);
      }
    },
    _getDefaultDate: function (e) {
      return this._restrictMinMax(
        e,
        this._determineDate(e, this._get(e, "defaultDate"), new Date())
      );
    },
    _determineDate: function (t, i, n) {
      var r =
        null == i || "" === i
          ? n
          : "string" == typeof i
          ? (function (i) {
              try {
                return e.datepicker.parseDate(
                  e.datepicker._get(t, "dateFormat"),
                  i,
                  e.datepicker._getFormatConfig(t)
                );
              } catch (e) {}
              for (
                var n =
                    (i.toLowerCase().match(/^c/)
                      ? e.datepicker._getDate(t)
                      : null) || new Date(),
                  r = n.getFullYear(),
                  a = n.getMonth(),
                  s = n.getDate(),
                  o = /([+\-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g,
                  l = o.exec(i);
                l;

              ) {
                switch (l[2] || "d") {
                  case "d":
                  case "D":
                    s += parseInt(l[1], 10);
                    break;
                  case "w":
                  case "W":
                    s += 7 * parseInt(l[1], 10);
                    break;
                  case "m":
                  case "M":
                    (a += parseInt(l[1], 10)),
                      (s = Math.min(s, e.datepicker._getDaysInMonth(r, a)));
                    break;
                  case "y":
                  case "Y":
                    (r += parseInt(l[1], 10)),
                      (s = Math.min(s, e.datepicker._getDaysInMonth(r, a)));
                }
                l = o.exec(i);
              }
              return new Date(r, a, s);
            })(i)
          : "number" == typeof i
          ? isNaN(i)
            ? n
            : (function (e) {
                var t = new Date();
                return t.setDate(t.getDate() + e), t;
              })(i)
          : new Date(i.getTime());
      return (
        (r = r && "Invalid Date" == "" + r ? n : r) &&
          (r.setHours(0),
          r.setMinutes(0),
          r.setSeconds(0),
          r.setMilliseconds(0)),
        this._daylightSavingAdjust(r)
      );
    },
    _daylightSavingAdjust: function (e) {
      return e
        ? (e.setHours(e.getHours() > 12 ? e.getHours() + 2 : 0), e)
        : null;
    },
    _setDate: function (e, t, i) {
      var n = !t,
        r = e.selectedMonth,
        a = e.selectedYear,
        s = this._restrictMinMax(e, this._determineDate(e, t, new Date()));
      (e.selectedDay = e.currentDay = s.getDate()),
        (e.drawMonth = e.selectedMonth = e.currentMonth = s.getMonth()),
        (e.drawYear = e.selectedYear = e.currentYear = s.getFullYear()),
        (r === e.selectedMonth && a === e.selectedYear) ||
          i ||
          this._notifyChange(e),
        this._adjustInstDate(e),
        e.input && e.input.val(n ? "" : this._formatDate(e));
    },
    _getDate: function (e) {
      return !e.currentYear || (e.input && "" === e.input.val())
        ? null
        : this._daylightSavingAdjust(
            new Date(e.currentYear, e.currentMonth, e.currentDay)
          );
    },
    _attachHandlers: function (t) {
      var i = this._get(t, "stepMonths"),
        n = "#" + t.id.replace(/\\\\/g, "\\");
      t.dpDiv.find("[data-handler]").map(function () {
        var t = {
          prev: function () {
            e.datepicker._adjustDate(n, -i, "M");
          },
          next: function () {
            e.datepicker._adjustDate(n, +i, "M");
          },
          hide: function () {
            e.datepicker._hideDatepicker();
          },
          today: function () {
            e.datepicker._gotoToday(n);
          },
          selectDay: function () {
            return (
              e.datepicker._selectDay(
                n,
                +this.getAttribute("data-month"),
                +this.getAttribute("data-year"),
                this
              ),
              !1
            );
          },
          selectMonth: function () {
            return e.datepicker._selectMonthYear(n, this, "M"), !1;
          },
          selectYear: function () {
            return e.datepicker._selectMonthYear(n, this, "Y"), !1;
          },
        };
        e(this).on(
          this.getAttribute("data-event"),
          t[this.getAttribute("data-handler")]
        );
      });
    },
    _generateHTML: function (e) {
      var t,
        i,
        n,
        r,
        a,
        s,
        o,
        l,
        c,
        h,
        u,
        d,
        f,
        p,
        g,
        m,
        v,
        b,
        y,
        w,
        x,
        k,
        C,
        S,
        _,
        A,
        F,
        T,
        P,
        E,
        I,
        D,
        O,
        R,
        N,
        M,
        B,
        L,
        U,
        z = new Date(),
        j = this._daylightSavingAdjust(
          new Date(z.getFullYear(), z.getMonth(), z.getDate())
        ),
        q = this._get(e, "isRTL"),
        H = this._get(e, "showButtonPanel"),
        W = this._get(e, "hideIfNoPrevNext"),
        G = this._get(e, "navigationAsDateFormat"),
        V = this._getNumberOfMonths(e),
        X = this._get(e, "showCurrentAtPos"),
        K = this._get(e, "stepMonths"),
        Y = 1 !== V[0] || 1 !== V[1],
        Z = this._daylightSavingAdjust(
          e.currentDay
            ? new Date(e.currentYear, e.currentMonth, e.currentDay)
            : new Date(9999, 9, 9)
        ),
        J = this._getMinMaxDate(e, "min"),
        $ = this._getMinMaxDate(e, "max"),
        Q = e.drawMonth - X,
        ee = e.drawYear;
      if ((0 > Q && ((Q += 12), ee--), $))
        for (
          t = this._daylightSavingAdjust(
            new Date(
              $.getFullYear(),
              $.getMonth() - V[0] * V[1] + 1,
              $.getDate()
            )
          ),
            t = J && J > t ? J : t;
          this._daylightSavingAdjust(new Date(ee, Q, 1)) > t;

        )
          0 > --Q && ((Q = 11), ee--);
      for (
        e.drawMonth = Q,
          e.drawYear = ee,
          i = this._get(e, "prevText"),
          i = G
            ? this.formatDate(
                i,
                this._daylightSavingAdjust(new Date(ee, Q - K, 1)),
                this._getFormatConfig(e)
              )
            : i,
          n = this._canAdjustMonth(e, -1, ee, Q)
            ? "<a class='ui-datepicker-prev ui-corner-all' data-handler='prev' data-event='click' title='" +
              i +
              "'><span class='ui-icon ui-icon-circle-triangle-" +
              (q ? "e" : "w") +
              "'>" +
              i +
              "</span></a>"
            : W
            ? ""
            : "<a class='ui-datepicker-prev ui-corner-all ui-state-disabled' title='" +
              i +
              "'><span class='ui-icon ui-icon-circle-triangle-" +
              (q ? "e" : "w") +
              "'>" +
              i +
              "</span></a>",
          r = this._get(e, "nextText"),
          r = G
            ? this.formatDate(
                r,
                this._daylightSavingAdjust(new Date(ee, Q + K, 1)),
                this._getFormatConfig(e)
              )
            : r,
          a = this._canAdjustMonth(e, 1, ee, Q)
            ? "<a class='ui-datepicker-next ui-corner-all' data-handler='next' data-event='click' title='" +
              r +
              "'><span class='ui-icon ui-icon-circle-triangle-" +
              (q ? "w" : "e") +
              "'>" +
              r +
              "</span></a>"
            : W
            ? ""
            : "<a class='ui-datepicker-next ui-corner-all ui-state-disabled' title='" +
              r +
              "'><span class='ui-icon ui-icon-circle-triangle-" +
              (q ? "w" : "e") +
              "'>" +
              r +
              "</span></a>",
          s = this._get(e, "currentText"),
          o = this._get(e, "gotoCurrent") && e.currentDay ? Z : j,
          s = G ? this.formatDate(s, o, this._getFormatConfig(e)) : s,
          l = e.inline
            ? ""
            : "<button type='button' class='ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all' data-handler='hide' data-event='click'>" +
              this._get(e, "closeText") +
              "</button>",
          c = H
            ? "<div class='ui-datepicker-buttonpane ui-widget-content'>" +
              (q ? l : "") +
              (this._isInRange(e, o)
                ? "<button type='button' class='ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all' data-handler='today' data-event='click'>" +
                  s +
                  "</button>"
                : "") +
              (q ? "" : l) +
              "</div>"
            : "",
          h = parseInt(this._get(e, "firstDay"), 10),
          h = isNaN(h) ? 0 : h,
          u = this._get(e, "showWeek"),
          d = this._get(e, "dayNames"),
          f = this._get(e, "dayNamesMin"),
          p = this._get(e, "monthNames"),
          g = this._get(e, "monthNamesShort"),
          m = this._get(e, "beforeShowDay"),
          v = this._get(e, "showOtherMonths"),
          b = this._get(e, "selectOtherMonths"),
          y = this._getDefaultDate(e),
          w = "",
          k = 0;
        V[0] > k;
        k++
      ) {
        for (C = "", this.maxRows = 4, S = 0; V[1] > S; S++) {
          if (
            ((_ = this._daylightSavingAdjust(new Date(ee, Q, e.selectedDay))),
            (A = " ui-corner-all"),
            (F = ""),
            Y)
          ) {
            if (((F += "<div class='ui-datepicker-group"), V[1] > 1))
              switch (S) {
                case 0:
                  (F += " ui-datepicker-group-first"),
                    (A = " ui-corner-" + (q ? "right" : "left"));
                  break;
                case V[1] - 1:
                  (F += " ui-datepicker-group-last"),
                    (A = " ui-corner-" + (q ? "left" : "right"));
                  break;
                default:
                  (F += " ui-datepicker-group-middle"), (A = "");
              }
            F += "'>";
          }
          for (
            F +=
              "<div class='ui-datepicker-header ui-widget-header ui-helper-clearfix" +
              A +
              "'>" +
              (/all|left/.test(A) && 0 === k ? (q ? a : n) : "") +
              (/all|right/.test(A) && 0 === k ? (q ? n : a) : "") +
              this._generateMonthYearHeader(
                e,
                Q,
                ee,
                J,
                $,
                k > 0 || S > 0,
                p,
                g
              ) +
              "</div><table class='ui-datepicker-calendar'><thead><tr>",
              T = u
                ? "<th class='ui-datepicker-week-col'>" +
                  this._get(e, "weekHeader") +
                  "</th>"
                : "",
              x = 0;
            7 > x;
            x++
          )
            T +=
              "<th scope='col'" +
              ((x + h + 6) % 7 >= 5 ? " class='ui-datepicker-week-end'" : "") +
              "><span title='" +
              d[(P = (x + h) % 7)] +
              "'>" +
              f[P] +
              "</span></th>";
          for (
            F += T + "</tr></thead><tbody>",
              E = this._getDaysInMonth(ee, Q),
              ee === e.selectedYear &&
                Q === e.selectedMonth &&
                (e.selectedDay = Math.min(e.selectedDay, E)),
              I = (this._getFirstDayOfMonth(ee, Q) - h + 7) % 7,
              D = Math.ceil((I + E) / 7),
              O = Y ? (this.maxRows > D ? this.maxRows : D) : D,
              this.maxRows = O,
              R = this._daylightSavingAdjust(new Date(ee, Q, 1 - I)),
              N = 0;
            O > N;
            N++
          ) {
            for (
              F += "<tr>",
                M = u
                  ? "<td class='ui-datepicker-week-col'>" +
                    this._get(e, "calculateWeek")(R) +
                    "</td>"
                  : "",
                x = 0;
              7 > x;
              x++
            )
              (B = m ? m.apply(e.input ? e.input[0] : null, [R]) : [!0, ""]),
                (U =
                  ((L = R.getMonth() !== Q) && !b) ||
                  !B[0] ||
                  (J && J > R) ||
                  ($ && R > $)),
                (M +=
                  "<td class='" +
                  ((x + h + 6) % 7 >= 5 ? " ui-datepicker-week-end" : "") +
                  (L ? " ui-datepicker-other-month" : "") +
                  ((R.getTime() === _.getTime() &&
                    Q === e.selectedMonth &&
                    e._keyEvent) ||
                  (y.getTime() === R.getTime() && y.getTime() === _.getTime())
                    ? " " + this._dayOverClass
                    : "") +
                  (U
                    ? " " + this._unselectableClass + " ui-state-disabled"
                    : "") +
                  (L && !v
                    ? ""
                    : " " +
                      B[1] +
                      (R.getTime() === Z.getTime()
                        ? " " + this._currentClass
                        : "") +
                      (R.getTime() === j.getTime()
                        ? " ui-datepicker-today"
                        : "")) +
                  "'" +
                  ((L && !v) || !B[2]
                    ? ""
                    : " title='" + B[2].replace(/'/g, "&#39;") + "'") +
                  (U
                    ? ""
                    : " data-handler='selectDay' data-event='click' data-month='" +
                      R.getMonth() +
                      "' data-year='" +
                      R.getFullYear() +
                      "'") +
                  ">" +
                  (L && !v
                    ? "&#xa0;"
                    : U
                    ? "<span class='ui-state-default'>" +
                      R.getDate() +
                      "</span>"
                    : "<a class='ui-state-default" +
                      (R.getTime() === j.getTime()
                        ? " ui-state-highlight"
                        : "") +
                      (R.getTime() === Z.getTime() ? " ui-state-active" : "") +
                      (L ? " ui-priority-secondary" : "") +
                      "' href='#'>" +
                      R.getDate() +
                      "</a>") +
                  "</td>"),
                R.setDate(R.getDate() + 1),
                (R = this._daylightSavingAdjust(R));
            F += M + "</tr>";
          }
          ++Q > 11 && ((Q = 0), ee++),
            (C += F +=
              "</tbody></table>" +
              (Y
                ? "</div>" +
                  (V[0] > 0 && S === V[1] - 1
                    ? "<div class='ui-datepicker-row-break'></div>"
                    : "")
                : ""));
        }
        w += C;
      }
      return (w += c), (e._keyEvent = !1), w;
    },
    _generateMonthYearHeader: function (e, t, i, n, r, a, s, o) {
      var l,
        c,
        h,
        u,
        d,
        f,
        p,
        g,
        m = this._get(e, "changeMonth"),
        v = this._get(e, "changeYear"),
        b = this._get(e, "showMonthAfterYear"),
        y = "<div class='ui-datepicker-title'>",
        w = "";
      if (a || !m) w += "<span class='ui-datepicker-month'>" + s[t] + "</span>";
      else {
        for (
          l = n && n.getFullYear() === i,
            c = r && r.getFullYear() === i,
            w +=
              "<select class='ui-datepicker-month' data-handler='selectMonth' data-event='change'>",
            h = 0;
          12 > h;
          h++
        )
          (!l || h >= n.getMonth()) &&
            (!c || r.getMonth() >= h) &&
            (w +=
              "<option value='" +
              h +
              "'" +
              (h === t ? " selected='selected'" : "") +
              ">" +
              o[h] +
              "</option>");
        w += "</select>";
      }
      if ((b || (y += w + (!a && m && v ? "" : "&#xa0;")), !e.yearshtml))
        if (((e.yearshtml = ""), a || !v))
          y += "<span class='ui-datepicker-year'>" + i + "</span>";
        else {
          for (
            u = this._get(e, "yearRange").split(":"),
              d = new Date().getFullYear(),
              p = (f = function (e) {
                var t = e.match(/c[+\-].*/)
                  ? i + parseInt(e.substring(1), 10)
                  : e.match(/[+\-].*/)
                  ? d + parseInt(e, 10)
                  : parseInt(e, 10);
                return isNaN(t) ? d : t;
              })(u[0]),
              g = Math.max(p, f(u[1] || "")),
              p = n ? Math.max(p, n.getFullYear()) : p,
              g = r ? Math.min(g, r.getFullYear()) : g,
              e.yearshtml +=
                "<select class='ui-datepicker-year' data-handler='selectYear' data-event='change'>";
            g >= p;
            p++
          )
            e.yearshtml +=
              "<option value='" +
              p +
              "'" +
              (p === i ? " selected='selected'" : "") +
              ">" +
              p +
              "</option>";
          (e.yearshtml += "</select>"),
            (y += e.yearshtml),
            (e.yearshtml = null);
        }
      return (
        (y += this._get(e, "yearSuffix")),
        b && (y += (!a && m && v ? "" : "&#xa0;") + w),
        y + "</div>"
      );
    },
    _adjustInstDate: function (e, t, i) {
      var n = e.selectedYear + ("Y" === i ? t : 0),
        r = e.selectedMonth + ("M" === i ? t : 0),
        a =
          Math.min(e.selectedDay, this._getDaysInMonth(n, r)) +
          ("D" === i ? t : 0),
        s = this._restrictMinMax(
          e,
          this._daylightSavingAdjust(new Date(n, r, a))
        );
      (e.selectedDay = s.getDate()),
        (e.drawMonth = e.selectedMonth = s.getMonth()),
        (e.drawYear = e.selectedYear = s.getFullYear()),
        ("M" === i || "Y" === i) && this._notifyChange(e);
    },
    _restrictMinMax: function (e, t) {
      var i = this._getMinMaxDate(e, "min"),
        n = this._getMinMaxDate(e, "max"),
        r = i && i > t ? i : t;
      return n && r > n ? n : r;
    },
    _notifyChange: function (e) {
      var t = this._get(e, "onChangeMonthYear");
      t &&
        t.apply(e.input ? e.input[0] : null, [
          e.selectedYear,
          e.selectedMonth + 1,
          e,
        ]);
    },
    _getNumberOfMonths: function (e) {
      var t = this._get(e, "numberOfMonths");
      return null == t ? [1, 1] : "number" == typeof t ? [1, t] : t;
    },
    _getMinMaxDate: function (e, t) {
      return this._determineDate(e, this._get(e, t + "Date"), null);
    },
    _getDaysInMonth: function (e, t) {
      return 32 - this._daylightSavingAdjust(new Date(e, t, 32)).getDate();
    },
    _getFirstDayOfMonth: function (e, t) {
      return new Date(e, t, 1).getDay();
    },
    _canAdjustMonth: function (e, t, i, n) {
      var r = this._getNumberOfMonths(e),
        a = this._daylightSavingAdjust(
          new Date(i, n + (0 > t ? t : r[0] * r[1]), 1)
        );
      return (
        0 > t && a.setDate(this._getDaysInMonth(a.getFullYear(), a.getMonth())),
        this._isInRange(e, a)
      );
    },
    _isInRange: function (e, t) {
      var i,
        n,
        r = this._getMinMaxDate(e, "min"),
        a = this._getMinMaxDate(e, "max"),
        s = null,
        o = null,
        l = this._get(e, "yearRange");
      return (
        l &&
          ((i = l.split(":")),
          (n = new Date().getFullYear()),
          (s = parseInt(i[0], 10)),
          (o = parseInt(i[1], 10)),
          i[0].match(/[+\-].*/) && (s += n),
          i[1].match(/[+\-].*/) && (o += n)),
        (!r || t.getTime() >= r.getTime()) &&
          (!a || t.getTime() <= a.getTime()) &&
          (!s || t.getFullYear() >= s) &&
          (!o || o >= t.getFullYear())
      );
    },
    _getFormatConfig: function (e) {
      var t = this._get(e, "shortYearCutoff");
      return {
        shortYearCutoff: (t =
          "string" != typeof t
            ? t
            : (new Date().getFullYear() % 100) + parseInt(t, 10)),
        dayNamesShort: this._get(e, "dayNamesShort"),
        dayNames: this._get(e, "dayNames"),
        monthNamesShort: this._get(e, "monthNamesShort"),
        monthNames: this._get(e, "monthNames"),
      };
    },
    _formatDate: function (e, t, i, n) {
      t ||
        ((e.currentDay = e.selectedDay),
        (e.currentMonth = e.selectedMonth),
        (e.currentYear = e.selectedYear));
      var r = t
        ? "object" == typeof t
          ? t
          : this._daylightSavingAdjust(new Date(n, i, t))
        : this._daylightSavingAdjust(
            new Date(e.currentYear, e.currentMonth, e.currentDay)
          );
      return this.formatDate(
        this._get(e, "dateFormat"),
        r,
        this._getFormatConfig(e)
      );
    },
  }),
    (e.fn.datepicker = function (t) {
      if (!this.length) return this;
      e.datepicker.initialized ||
        (e(document).on("mousedown", e.datepicker._checkExternalClick),
        (e.datepicker.initialized = !0)),
        0 === e("#" + e.datepicker._mainDivId).length &&
          e("body").append(e.datepicker.dpDiv);
      var i = Array.prototype.slice.call(arguments, 1);
      return "string" != typeof t ||
        ("isDisabled" !== t && "getDate" !== t && "widget" !== t)
        ? "option" === t &&
          2 === arguments.length &&
          "string" == typeof arguments[1]
          ? e.datepicker["_" + t + "Datepicker"].apply(
              e.datepicker,
              [this[0]].concat(i)
            )
          : this.each(function () {
              "string" == typeof t
                ? e.datepicker["_" + t + "Datepicker"].apply(
                    e.datepicker,
                    [this].concat(i)
                  )
                : e.datepicker._attachDatepicker(this, t);
            })
        : e.datepicker["_" + t + "Datepicker"].apply(
            e.datepicker,
            [this[0]].concat(i)
          );
    }),
    (e.datepicker = new t()),
    (e.datepicker.initialized = !1),
    (e.datepicker.uuid = new Date().getTime()),
    (e.datepicker.version = "1.12.1"),
    e.datepicker,
    (e.ui.ie = !!/msie [\w.]+/.exec(navigator.userAgent.toLowerCase()));
  var g = !1;
  e(document).on("mouseup", function () {
    g = !1;
  }),
    e.widget("ui.mouse", {
      version: "1.12.1",
      options: {
        cancel: "input, textarea, button, select, option",
        distance: 1,
        delay: 0,
      },
      _mouseInit: function () {
        var t = this;
        this.element
          .on("mousedown." + this.widgetName, function (e) {
            return t._mouseDown(e);
          })
          .on("click." + this.widgetName, function (i) {
            return !0 === e.data(i.target, t.widgetName + ".preventClickEvent")
              ? (e.removeData(i.target, t.widgetName + ".preventClickEvent"),
                i.stopImmediatePropagation(),
                !1)
              : void 0;
          }),
          (this.started = !1);
      },
      _mouseDestroy: function () {
        this.element.off("." + this.widgetName),
          this._mouseMoveDelegate &&
            this.document
              .off("mousemove." + this.widgetName, this._mouseMoveDelegate)
              .off("mouseup." + this.widgetName, this._mouseUpDelegate);
      },
      _mouseDown: function (t) {
        if (!g) {
          (this._mouseMoved = !1),
            this._mouseStarted && this._mouseUp(t),
            (this._mouseDownEvent = t);
          var i = this,
            n = 1 === t.which,
            r =
              "string" == typeof this.options.cancel && t.target.nodeName
                ? e(t.target).closest(this.options.cancel).length
                : !1;
          return n && !r && this._mouseCapture(t)
            ? ((this.mouseDelayMet = !this.options.delay),
              this.mouseDelayMet ||
                (this._mouseDelayTimer = setTimeout(function () {
                  i.mouseDelayMet = !0;
                }, this.options.delay)),
              this._mouseDistanceMet(t) &&
              this._mouseDelayMet(t) &&
              ((this._mouseStarted = !1 !== this._mouseStart(t)),
              !this._mouseStarted)
                ? (t.preventDefault(), !0)
                : (!0 ===
                    e.data(t.target, this.widgetName + ".preventClickEvent") &&
                    e.removeData(
                      t.target,
                      this.widgetName + ".preventClickEvent"
                    ),
                  (this._mouseMoveDelegate = function (e) {
                    return i._mouseMove(e);
                  }),
                  (this._mouseUpDelegate = function (e) {
                    return i._mouseUp(e);
                  }),
                  this.document
                    .on("mousemove." + this.widgetName, this._mouseMoveDelegate)
                    .on("mouseup." + this.widgetName, this._mouseUpDelegate),
                  t.preventDefault(),
                  (g = !0),
                  !0))
            : !0;
        }
      },
      _mouseMove: function (t) {
        if (this._mouseMoved) {
          if (
            e.ui.ie &&
            (!document.documentMode || 9 > document.documentMode) &&
            !t.button
          )
            return this._mouseUp(t);
          if (!t.which)
            if (
              t.originalEvent.altKey ||
              t.originalEvent.ctrlKey ||
              t.originalEvent.metaKey ||
              t.originalEvent.shiftKey
            )
              this.ignoreMissingWhich = !0;
            else if (!this.ignoreMissingWhich) return this._mouseUp(t);
        }
        return (
          (t.which || t.button) && (this._mouseMoved = !0),
          this._mouseStarted
            ? (this._mouseDrag(t), t.preventDefault())
            : (this._mouseDistanceMet(t) &&
                this._mouseDelayMet(t) &&
                ((this._mouseStarted =
                  !1 !== this._mouseStart(this._mouseDownEvent, t)),
                this._mouseStarted ? this._mouseDrag(t) : this._mouseUp(t)),
              !this._mouseStarted)
        );
      },
      _mouseUp: function (t) {
        this.document
          .off("mousemove." + this.widgetName, this._mouseMoveDelegate)
          .off("mouseup." + this.widgetName, this._mouseUpDelegate),
          this._mouseStarted &&
            ((this._mouseStarted = !1),
            t.target === this._mouseDownEvent.target &&
              e.data(t.target, this.widgetName + ".preventClickEvent", !0),
            this._mouseStop(t)),
          this._mouseDelayTimer &&
            (clearTimeout(this._mouseDelayTimer), delete this._mouseDelayTimer),
          (this.ignoreMissingWhich = !1),
          (g = !1),
          t.preventDefault();
      },
      _mouseDistanceMet: function (e) {
        return (
          Math.max(
            Math.abs(this._mouseDownEvent.pageX - e.pageX),
            Math.abs(this._mouseDownEvent.pageY - e.pageY)
          ) >= this.options.distance
        );
      },
      _mouseDelayMet: function () {
        return this.mouseDelayMet;
      },
      _mouseStart: function () {},
      _mouseDrag: function () {},
      _mouseStop: function () {},
      _mouseCapture: function () {
        return !0;
      },
    }),
    (e.ui.plugin = {
      add: function (t, i, n) {
        var r,
          a = e.ui[t].prototype;
        for (r in n)
          (a.plugins[r] = a.plugins[r] || []), a.plugins[r].push([i, n[r]]);
      },
      call: function (e, t, i, n) {
        var r,
          a = e.plugins[t];
        if (
          a &&
          (n ||
            (e.element[0].parentNode &&
              11 !== e.element[0].parentNode.nodeType))
        )
          for (r = 0; a.length > r; r++)
            e.options[a[r][0]] && a[r][1].apply(e.element, i);
      },
    }),
    (e.ui.safeBlur = function (t) {
      t && "body" !== t.nodeName.toLowerCase() && e(t).trigger("blur");
    }),
    e.widget("ui.draggable", e.ui.mouse, {
      version: "1.12.1",
      widgetEventPrefix: "drag",
      options: {
        addClasses: !0,
        appendTo: "parent",
        axis: !1,
        connectToSortable: !1,
        containment: !1,
        cursor: "auto",
        cursorAt: !1,
        grid: !1,
        handle: !1,
        helper: "original",
        iframeFix: !1,
        opacity: !1,
        refreshPositions: !1,
        revert: !1,
        revertDuration: 500,
        scope: "default",
        scroll: !0,
        scrollSensitivity: 20,
        scrollSpeed: 20,
        snap: !1,
        snapMode: "both",
        snapTolerance: 20,
        stack: !1,
        zIndex: !1,
        drag: null,
        start: null,
        stop: null,
      },
      _create: function () {
        "original" === this.options.helper && this._setPositionRelative(),
          this.options.addClasses && this._addClass("ui-draggable"),
          this._setHandleClassName(),
          this._mouseInit();
      },
      _setOption: function (e, t) {
        this._super(e, t),
          "handle" === e &&
            (this._removeHandleClassName(), this._setHandleClassName());
      },
      _destroy: function () {
        return (this.helper || this.element).is(".ui-draggable-dragging")
          ? void (this.destroyOnClear = !0)
          : (this._removeHandleClassName(), void this._mouseDestroy());
      },
      _mouseCapture: function (t) {
        var i = this.options;
        return this.helper ||
          i.disabled ||
          e(t.target).closest(".ui-resizable-handle").length > 0
          ? !1
          : ((this.handle = this._getHandle(t)),
            this.handle
              ? (this._blurActiveElement(t),
                this._blockFrames(!0 === i.iframeFix ? "iframe" : i.iframeFix),
                !0)
              : !1);
      },
      _blockFrames: function (t) {
        this.iframeBlocks = this.document.find(t).map(function () {
          var t = e(this);
          return e("<div>")
            .css("position", "absolute")
            .appendTo(t.parent())
            .outerWidth(t.outerWidth())
            .outerHeight(t.outerHeight())
            .offset(t.offset())[0];
        });
      },
      _unblockFrames: function () {
        this.iframeBlocks &&
          (this.iframeBlocks.remove(), delete this.iframeBlocks);
      },
      _blurActiveElement: function (t) {
        var i = e.ui.safeActiveElement(this.document[0]);
        e(t.target).closest(i).length || e.ui.safeBlur(i);
      },
      _mouseStart: function (t) {
        var i = this.options;
        return (
          (this.helper = this._createHelper(t)),
          this._addClass(this.helper, "ui-draggable-dragging"),
          this._cacheHelperProportions(),
          e.ui.ddmanager && (e.ui.ddmanager.current = this),
          this._cacheMargins(),
          (this.cssPosition = this.helper.css("position")),
          (this.scrollParent = this.helper.scrollParent(!0)),
          (this.offsetParent = this.helper.offsetParent()),
          (this.hasFixedAncestor =
            this.helper.parents().filter(function () {
              return "fixed" === e(this).css("position");
            }).length > 0),
          (this.positionAbs = this.element.offset()),
          this._refreshOffsets(t),
          (this.originalPosition = this.position =
            this._generatePosition(t, !1)),
          (this.originalPageX = t.pageX),
          (this.originalPageY = t.pageY),
          i.cursorAt && this._adjustOffsetFromHelper(i.cursorAt),
          this._setContainment(),
          !1 === this._trigger("start", t)
            ? (this._clear(), !1)
            : (this._cacheHelperProportions(),
              e.ui.ddmanager &&
                !i.dropBehaviour &&
                e.ui.ddmanager.prepareOffsets(this, t),
              this._mouseDrag(t, !0),
              e.ui.ddmanager && e.ui.ddmanager.dragStart(this, t),
              !0)
        );
      },
      _refreshOffsets: function (e) {
        (this.offset = {
          top: this.positionAbs.top - this.margins.top,
          left: this.positionAbs.left - this.margins.left,
          scroll: !1,
          parent: this._getParentOffset(),
          relative: this._getRelativeOffset(),
        }),
          (this.offset.click = {
            left: e.pageX - this.offset.left,
            top: e.pageY - this.offset.top,
          });
      },
      _mouseDrag: function (t, i) {
        if (
          (this.hasFixedAncestor &&
            (this.offset.parent = this._getParentOffset()),
          (this.position = this._generatePosition(t, !0)),
          (this.positionAbs = this._convertPositionTo("absolute")),
          !i)
        ) {
          var n = this._uiHash();
          if (!1 === this._trigger("drag", t, n))
            return this._mouseUp(new e.Event("mouseup", t)), !1;
          this.position = n.position;
        }
        return (
          (this.helper[0].style.left = this.position.left + "px"),
          (this.helper[0].style.top = this.position.top + "px"),
          e.ui.ddmanager && e.ui.ddmanager.drag(this, t),
          !1
        );
      },
      _mouseStop: function (t) {
        var i = this,
          n = !1;
        return (
          e.ui.ddmanager &&
            !this.options.dropBehaviour &&
            (n = e.ui.ddmanager.drop(this, t)),
          this.dropped && ((n = this.dropped), (this.dropped = !1)),
          ("invalid" === this.options.revert && !n) ||
          ("valid" === this.options.revert && n) ||
          !0 === this.options.revert ||
          (e.isFunction(this.options.revert) &&
            this.options.revert.call(this.element, n))
            ? e(this.helper).animate(
                this.originalPosition,
                parseInt(this.options.revertDuration, 10),
                function () {
                  !1 !== i._trigger("stop", t) && i._clear();
                }
              )
            : !1 !== this._trigger("stop", t) && this._clear(),
          !1
        );
      },
      _mouseUp: function (t) {
        return (
          this._unblockFrames(),
          e.ui.ddmanager && e.ui.ddmanager.dragStop(this, t),
          this.handleElement.is(t.target) && this.element.trigger("focus"),
          e.ui.mouse.prototype._mouseUp.call(this, t)
        );
      },
      cancel: function () {
        return (
          this.helper.is(".ui-draggable-dragging")
            ? this._mouseUp(new e.Event("mouseup", { target: this.element[0] }))
            : this._clear(),
          this
        );
      },
      _getHandle: function (t) {
        return this.options.handle
          ? !!e(t.target).closest(this.element.find(this.options.handle)).length
          : !0;
      },
      _setHandleClassName: function () {
        (this.handleElement = this.options.handle
          ? this.element.find(this.options.handle)
          : this.element),
          this._addClass(this.handleElement, "ui-draggable-handle");
      },
      _removeHandleClassName: function () {
        this._removeClass(this.handleElement, "ui-draggable-handle");
      },
      _createHelper: function (t) {
        var i = this.options,
          n = e.isFunction(i.helper),
          r = n
            ? e(i.helper.apply(this.element[0], [t]))
            : "clone" === i.helper
            ? this.element.clone().removeAttr("id")
            : this.element;
        return (
          r.parents("body").length ||
            r.appendTo(
              "parent" === i.appendTo ? this.element[0].parentNode : i.appendTo
            ),
          n && r[0] === this.element[0] && this._setPositionRelative(),
          r[0] === this.element[0] ||
            /(fixed|absolute)/.test(r.css("position")) ||
            r.css("position", "absolute"),
          r
        );
      },
      _setPositionRelative: function () {
        /^(?:r|a|f)/.test(this.element.css("position")) ||
          (this.element[0].style.position = "relative");
      },
      _adjustOffsetFromHelper: function (t) {
        "string" == typeof t && (t = t.split(" ")),
          e.isArray(t) && (t = { left: +t[0], top: +t[1] || 0 }),
          "left" in t && (this.offset.click.left = t.left + this.margins.left),
          "right" in t &&
            (this.offset.click.left =
              this.helperProportions.width - t.right + this.margins.left),
          "top" in t && (this.offset.click.top = t.top + this.margins.top),
          "bottom" in t &&
            (this.offset.click.top =
              this.helperProportions.height - t.bottom + this.margins.top);
      },
      _isRootNode: function (e) {
        return /(html|body)/i.test(e.tagName) || e === this.document[0];
      },
      _getParentOffset: function () {
        var t = this.offsetParent.offset(),
          i = this.document[0];
        return (
          "absolute" === this.cssPosition &&
            this.scrollParent[0] !== i &&
            e.contains(this.scrollParent[0], this.offsetParent[0]) &&
            ((t.left += this.scrollParent.scrollLeft()),
            (t.top += this.scrollParent.scrollTop())),
          this._isRootNode(this.offsetParent[0]) && (t = { top: 0, left: 0 }),
          {
            top:
              t.top +
              (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0),
            left:
              t.left +
              (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0),
          }
        );
      },
      _getRelativeOffset: function () {
        if ("relative" !== this.cssPosition) return { top: 0, left: 0 };
        var e = this.element.position(),
          t = this._isRootNode(this.scrollParent[0]);
        return {
          top:
            e.top -
            (parseInt(this.helper.css("top"), 10) || 0) +
            (t ? 0 : this.scrollParent.scrollTop()),
          left:
            e.left -
            (parseInt(this.helper.css("left"), 10) || 0) +
            (t ? 0 : this.scrollParent.scrollLeft()),
        };
      },
      _cacheMargins: function () {
        this.margins = {
          left: parseInt(this.element.css("marginLeft"), 10) || 0,
          top: parseInt(this.element.css("marginTop"), 10) || 0,
          right: parseInt(this.element.css("marginRight"), 10) || 0,
          bottom: parseInt(this.element.css("marginBottom"), 10) || 0,
        };
      },
      _cacheHelperProportions: function () {
        this.helperProportions = {
          width: this.helper.outerWidth(),
          height: this.helper.outerHeight(),
        };
      },
      _setContainment: function () {
        var t,
          i,
          n,
          r = this.options,
          a = this.document[0];
        return (
          (this.relativeContainer = null),
          r.containment
            ? "window" === r.containment
              ? void (this.containment = [
                  e(window).scrollLeft() -
                    this.offset.relative.left -
                    this.offset.parent.left,
                  e(window).scrollTop() -
                    this.offset.relative.top -
                    this.offset.parent.top,
                  e(window).scrollLeft() +
                    e(window).width() -
                    this.helperProportions.width -
                    this.margins.left,
                  e(window).scrollTop() +
                    (e(window).height() || a.body.parentNode.scrollHeight) -
                    this.helperProportions.height -
                    this.margins.top,
                ])
              : "document" === r.containment
              ? void (this.containment = [
                  0,
                  0,
                  e(a).width() -
                    this.helperProportions.width -
                    this.margins.left,
                  (e(a).height() || a.body.parentNode.scrollHeight) -
                    this.helperProportions.height -
                    this.margins.top,
                ])
              : r.containment.constructor === Array
              ? void (this.containment = r.containment)
              : ("parent" === r.containment &&
                  (r.containment = this.helper[0].parentNode),
                void (
                  (n = (i = e(r.containment))[0]) &&
                  ((t = /(scroll|auto)/.test(i.css("overflow"))),
                  (this.containment = [
                    (parseInt(i.css("borderLeftWidth"), 10) || 0) +
                      (parseInt(i.css("paddingLeft"), 10) || 0),
                    (parseInt(i.css("borderTopWidth"), 10) || 0) +
                      (parseInt(i.css("paddingTop"), 10) || 0),
                    (t
                      ? Math.max(n.scrollWidth, n.offsetWidth)
                      : n.offsetWidth) -
                      (parseInt(i.css("borderRightWidth"), 10) || 0) -
                      (parseInt(i.css("paddingRight"), 10) || 0) -
                      this.helperProportions.width -
                      this.margins.left -
                      this.margins.right,
                    (t
                      ? Math.max(n.scrollHeight, n.offsetHeight)
                      : n.offsetHeight) -
                      (parseInt(i.css("borderBottomWidth"), 10) || 0) -
                      (parseInt(i.css("paddingBottom"), 10) || 0) -
                      this.helperProportions.height -
                      this.margins.top -
                      this.margins.bottom,
                  ]),
                  (this.relativeContainer = i))
                ))
            : void (this.containment = null)
        );
      },
      _convertPositionTo: function (e, t) {
        t || (t = this.position);
        var i = "absolute" === e ? 1 : -1,
          n = this._isRootNode(this.scrollParent[0]);
        return {
          top:
            t.top +
            this.offset.relative.top * i +
            this.offset.parent.top * i -
            ("fixed" === this.cssPosition
              ? -this.offset.scroll.top
              : n
              ? 0
              : this.offset.scroll.top) *
              i,
          left:
            t.left +
            this.offset.relative.left * i +
            this.offset.parent.left * i -
            ("fixed" === this.cssPosition
              ? -this.offset.scroll.left
              : n
              ? 0
              : this.offset.scroll.left) *
              i,
        };
      },
      _generatePosition: function (e, t) {
        var i,
          n,
          r,
          a,
          s = this.options,
          o = this._isRootNode(this.scrollParent[0]),
          l = e.pageX,
          c = e.pageY;
        return (
          (o && this.offset.scroll) ||
            (this.offset.scroll = {
              top: this.scrollParent.scrollTop(),
              left: this.scrollParent.scrollLeft(),
            }),
          t &&
            (this.containment &&
              (this.relativeContainer
                ? ((n = this.relativeContainer.offset()),
                  (i = [
                    this.containment[0] + n.left,
                    this.containment[1] + n.top,
                    this.containment[2] + n.left,
                    this.containment[3] + n.top,
                  ]))
                : (i = this.containment),
              e.pageX - this.offset.click.left < i[0] &&
                (l = i[0] + this.offset.click.left),
              e.pageY - this.offset.click.top < i[1] &&
                (c = i[1] + this.offset.click.top),
              e.pageX - this.offset.click.left > i[2] &&
                (l = i[2] + this.offset.click.left),
              e.pageY - this.offset.click.top > i[3] &&
                (c = i[3] + this.offset.click.top)),
            s.grid &&
              ((r = s.grid[1]
                ? this.originalPageY +
                  Math.round((c - this.originalPageY) / s.grid[1]) * s.grid[1]
                : this.originalPageY),
              (c = i
                ? r - this.offset.click.top >= i[1] ||
                  r - this.offset.click.top > i[3]
                  ? r
                  : r - this.offset.click.top >= i[1]
                  ? r - s.grid[1]
                  : r + s.grid[1]
                : r),
              (a = s.grid[0]
                ? this.originalPageX +
                  Math.round((l - this.originalPageX) / s.grid[0]) * s.grid[0]
                : this.originalPageX),
              (l = i
                ? a - this.offset.click.left >= i[0] ||
                  a - this.offset.click.left > i[2]
                  ? a
                  : a - this.offset.click.left >= i[0]
                  ? a - s.grid[0]
                  : a + s.grid[0]
                : a)),
            "y" === s.axis && (l = this.originalPageX),
            "x" === s.axis && (c = this.originalPageY)),
          {
            top:
              c -
              this.offset.click.top -
              this.offset.relative.top -
              this.offset.parent.top +
              ("fixed" === this.cssPosition
                ? -this.offset.scroll.top
                : o
                ? 0
                : this.offset.scroll.top),
            left:
              l -
              this.offset.click.left -
              this.offset.relative.left -
              this.offset.parent.left +
              ("fixed" === this.cssPosition
                ? -this.offset.scroll.left
                : o
                ? 0
                : this.offset.scroll.left),
          }
        );
      },
      _clear: function () {
        this._removeClass(this.helper, "ui-draggable-dragging"),
          this.helper[0] === this.element[0] ||
            this.cancelHelperRemoval ||
            this.helper.remove(),
          (this.helper = null),
          (this.cancelHelperRemoval = !1),
          this.destroyOnClear && this.destroy();
      },
      _trigger: function (t, i, n) {
        return (
          (n = n || this._uiHash()),
          e.ui.plugin.call(this, t, [i, n, this], !0),
          /^(drag|start|stop)/.test(t) &&
            ((this.positionAbs = this._convertPositionTo("absolute")),
            (n.offset = this.positionAbs)),
          e.Widget.prototype._trigger.call(this, t, i, n)
        );
      },
      plugins: {},
      _uiHash: function () {
        return {
          helper: this.helper,
          position: this.position,
          originalPosition: this.originalPosition,
          offset: this.positionAbs,
        };
      },
    }),
    e.ui.plugin.add("draggable", "connectToSortable", {
      start: function (t, i, n) {
        var r = e.extend({}, i, { item: n.element });
        (n.sortables = []),
          e(n.options.connectToSortable).each(function () {
            var i = e(this).sortable("instance");
            i &&
              !i.options.disabled &&
              (n.sortables.push(i),
              i.refreshPositions(),
              i._trigger("activate", t, r));
          });
      },
      stop: function (t, i, n) {
        var r = e.extend({}, i, { item: n.element });
        (n.cancelHelperRemoval = !1),
          e.each(n.sortables, function () {
            var e = this;
            e.isOver
              ? ((e.isOver = 0),
                (n.cancelHelperRemoval = !0),
                (e.cancelHelperRemoval = !1),
                (e._storedCSS = {
                  position: e.placeholder.css("position"),
                  top: e.placeholder.css("top"),
                  left: e.placeholder.css("left"),
                }),
                e._mouseStop(t),
                (e.options.helper = e.options._helper))
              : ((e.cancelHelperRemoval = !0), e._trigger("deactivate", t, r));
          });
      },
      drag: function (t, i, n) {
        e.each(n.sortables, function () {
          var r = !1,
            a = this;
          (a.positionAbs = n.positionAbs),
            (a.helperProportions = n.helperProportions),
            (a.offset.click = n.offset.click),
            a._intersectsWith(a.containerCache) &&
              ((r = !0),
              e.each(n.sortables, function () {
                return (
                  (this.positionAbs = n.positionAbs),
                  (this.helperProportions = n.helperProportions),
                  (this.offset.click = n.offset.click),
                  this !== a &&
                    this._intersectsWith(this.containerCache) &&
                    e.contains(a.element[0], this.element[0]) &&
                    (r = !1),
                  r
                );
              })),
            r
              ? (a.isOver ||
                  ((a.isOver = 1),
                  (n._parent = i.helper.parent()),
                  (a.currentItem = i.helper
                    .appendTo(a.element)
                    .data("ui-sortable-item", !0)),
                  (a.options._helper = a.options.helper),
                  (a.options.helper = function () {
                    return i.helper[0];
                  }),
                  (t.target = a.currentItem[0]),
                  a._mouseCapture(t, !0),
                  a._mouseStart(t, !0, !0),
                  (a.offset.click.top = n.offset.click.top),
                  (a.offset.click.left = n.offset.click.left),
                  (a.offset.parent.left -=
                    n.offset.parent.left - a.offset.parent.left),
                  (a.offset.parent.top -=
                    n.offset.parent.top - a.offset.parent.top),
                  n._trigger("toSortable", t),
                  (n.dropped = a.element),
                  e.each(n.sortables, function () {
                    this.refreshPositions();
                  }),
                  (n.currentItem = n.element),
                  (a.fromOutside = n)),
                a.currentItem && (a._mouseDrag(t), (i.position = a.position)))
              : a.isOver &&
                ((a.isOver = 0),
                (a.cancelHelperRemoval = !0),
                (a.options._revert = a.options.revert),
                (a.options.revert = !1),
                a._trigger("out", t, a._uiHash(a)),
                a._mouseStop(t, !0),
                (a.options.revert = a.options._revert),
                (a.options.helper = a.options._helper),
                a.placeholder && a.placeholder.remove(),
                i.helper.appendTo(n._parent),
                n._refreshOffsets(t),
                (i.position = n._generatePosition(t, !0)),
                n._trigger("fromSortable", t),
                (n.dropped = !1),
                e.each(n.sortables, function () {
                  this.refreshPositions();
                }));
        });
      },
    }),
    e.ui.plugin.add("draggable", "cursor", {
      start: function (t, i, n) {
        var r = e("body"),
          a = n.options;
        r.css("cursor") && (a._cursor = r.css("cursor")),
          r.css("cursor", a.cursor);
      },
      stop: function (t, i, n) {
        var r = n.options;
        r._cursor && e("body").css("cursor", r._cursor);
      },
    }),
    e.ui.plugin.add("draggable", "opacity", {
      start: function (t, i, n) {
        var r = e(i.helper),
          a = n.options;
        r.css("opacity") && (a._opacity = r.css("opacity")),
          r.css("opacity", a.opacity);
      },
      stop: function (t, i, n) {
        var r = n.options;
        r._opacity && e(i.helper).css("opacity", r._opacity);
      },
    }),
    e.ui.plugin.add("draggable", "scroll", {
      start: function (e, t, i) {
        i.scrollParentNotHidden ||
          (i.scrollParentNotHidden = i.helper.scrollParent(!1)),
          i.scrollParentNotHidden[0] !== i.document[0] &&
            "HTML" !== i.scrollParentNotHidden[0].tagName &&
            (i.overflowOffset = i.scrollParentNotHidden.offset());
      },
      drag: function (t, i, n) {
        var r = n.options,
          a = !1,
          s = n.scrollParentNotHidden[0],
          o = n.document[0];
        s !== o && "HTML" !== s.tagName
          ? ((r.axis && "x" === r.axis) ||
              (n.overflowOffset.top + s.offsetHeight - t.pageY <
              r.scrollSensitivity
                ? (s.scrollTop = a = s.scrollTop + r.scrollSpeed)
                : t.pageY - n.overflowOffset.top < r.scrollSensitivity &&
                  (s.scrollTop = a = s.scrollTop - r.scrollSpeed)),
            (r.axis && "y" === r.axis) ||
              (n.overflowOffset.left + s.offsetWidth - t.pageX <
              r.scrollSensitivity
                ? (s.scrollLeft = a = s.scrollLeft + r.scrollSpeed)
                : t.pageX - n.overflowOffset.left < r.scrollSensitivity &&
                  (s.scrollLeft = a = s.scrollLeft - r.scrollSpeed)))
          : ((r.axis && "x" === r.axis) ||
              (t.pageY - e(o).scrollTop() < r.scrollSensitivity
                ? (a = e(o).scrollTop(e(o).scrollTop() - r.scrollSpeed))
                : e(window).height() - (t.pageY - e(o).scrollTop()) <
                    r.scrollSensitivity &&
                  (a = e(o).scrollTop(e(o).scrollTop() + r.scrollSpeed))),
            (r.axis && "y" === r.axis) ||
              (t.pageX - e(o).scrollLeft() < r.scrollSensitivity
                ? (a = e(o).scrollLeft(e(o).scrollLeft() - r.scrollSpeed))
                : e(window).width() - (t.pageX - e(o).scrollLeft()) <
                    r.scrollSensitivity &&
                  (a = e(o).scrollLeft(e(o).scrollLeft() + r.scrollSpeed)))),
          !1 !== a &&
            e.ui.ddmanager &&
            !r.dropBehaviour &&
            e.ui.ddmanager.prepareOffsets(n, t);
      },
    }),
    e.ui.plugin.add("draggable", "snap", {
      start: function (t, i, n) {
        var r = n.options;
        (n.snapElements = []),
          e(
            r.snap.constructor !== String
              ? r.snap.items || ":data(ui-draggable)"
              : r.snap
          ).each(function () {
            var t = e(this),
              i = t.offset();
            this !== n.element[0] &&
              n.snapElements.push({
                item: this,
                width: t.outerWidth(),
                height: t.outerHeight(),
                top: i.top,
                left: i.left,
              });
          });
      },
      drag: function (t, i, n) {
        var r,
          a,
          s,
          o,
          l,
          c,
          h,
          u,
          d,
          f,
          p = n.options,
          g = p.snapTolerance,
          m = i.offset.left,
          v = m + n.helperProportions.width,
          b = i.offset.top,
          y = b + n.helperProportions.height;
        for (d = n.snapElements.length - 1; d >= 0; d--)
          (c =
            (l = n.snapElements[d].left - n.margins.left) +
            n.snapElements[d].width),
            (u =
              (h = n.snapElements[d].top - n.margins.top) +
              n.snapElements[d].height),
            l - g > v ||
            m > c + g ||
            h - g > y ||
            b > u + g ||
            !e.contains(
              n.snapElements[d].item.ownerDocument,
              n.snapElements[d].item
            )
              ? (n.snapElements[d].snapping &&
                  n.options.snap.release &&
                  n.options.snap.release.call(
                    n.element,
                    t,
                    e.extend(n._uiHash(), { snapItem: n.snapElements[d].item })
                  ),
                (n.snapElements[d].snapping = !1))
              : ("inner" !== p.snapMode &&
                  ((r = g >= Math.abs(h - y)),
                  (a = g >= Math.abs(u - b)),
                  (s = g >= Math.abs(l - v)),
                  (o = g >= Math.abs(c - m)),
                  r &&
                    (i.position.top = n._convertPositionTo("relative", {
                      top: h - n.helperProportions.height,
                      left: 0,
                    }).top),
                  a &&
                    (i.position.top = n._convertPositionTo("relative", {
                      top: u,
                      left: 0,
                    }).top),
                  s &&
                    (i.position.left = n._convertPositionTo("relative", {
                      top: 0,
                      left: l - n.helperProportions.width,
                    }).left),
                  o &&
                    (i.position.left = n._convertPositionTo("relative", {
                      top: 0,
                      left: c,
                    }).left)),
                (f = r || a || s || o),
                "outer" !== p.snapMode &&
                  ((r = g >= Math.abs(h - b)),
                  (a = g >= Math.abs(u - y)),
                  (s = g >= Math.abs(l - m)),
                  (o = g >= Math.abs(c - v)),
                  r &&
                    (i.position.top = n._convertPositionTo("relative", {
                      top: h,
                      left: 0,
                    }).top),
                  a &&
                    (i.position.top = n._convertPositionTo("relative", {
                      top: u - n.helperProportions.height,
                      left: 0,
                    }).top),
                  s &&
                    (i.position.left = n._convertPositionTo("relative", {
                      top: 0,
                      left: l,
                    }).left),
                  o &&
                    (i.position.left = n._convertPositionTo("relative", {
                      top: 0,
                      left: c - n.helperProportions.width,
                    }).left)),
                !n.snapElements[d].snapping &&
                  (r || a || s || o || f) &&
                  n.options.snap.snap &&
                  n.options.snap.snap.call(
                    n.element,
                    t,
                    e.extend(n._uiHash(), { snapItem: n.snapElements[d].item })
                  ),
                (n.snapElements[d].snapping = r || a || s || o || f));
      },
    }),
    e.ui.plugin.add("draggable", "stack", {
      start: function (t, i, n) {
        var r,
          a = n.options,
          s = e.makeArray(e(a.stack)).sort(function (t, i) {
            return (
              (parseInt(e(t).css("zIndex"), 10) || 0) -
              (parseInt(e(i).css("zIndex"), 10) || 0)
            );
          });
        s.length &&
          ((r = parseInt(e(s[0]).css("zIndex"), 10) || 0),
          e(s).each(function (t) {
            e(this).css("zIndex", r + t);
          }),
          this.css("zIndex", r + s.length));
      },
    }),
    e.ui.plugin.add("draggable", "zIndex", {
      start: function (t, i, n) {
        var r = e(i.helper),
          a = n.options;
        r.css("zIndex") && (a._zIndex = r.css("zIndex")),
          r.css("zIndex", a.zIndex);
      },
      stop: function (t, i, n) {
        var r = n.options;
        r._zIndex && e(i.helper).css("zIndex", r._zIndex);
      },
    }),
    e.ui.draggable,
    e.widget("ui.resizable", e.ui.mouse, {
      version: "1.12.1",
      widgetEventPrefix: "resize",
      options: {
        alsoResize: !1,
        animate: !1,
        animateDuration: "slow",
        animateEasing: "swing",
        aspectRatio: !1,
        autoHide: !1,
        classes: { "ui-resizable-se": "ui-icon ui-icon-gripsmall-diagonal-se" },
        containment: !1,
        ghost: !1,
        grid: !1,
        handles: "e,s,se",
        helper: !1,
        maxHeight: null,
        maxWidth: null,
        minHeight: 10,
        minWidth: 10,
        zIndex: 90,
        resize: null,
        start: null,
        stop: null,
      },
      _num: function (e) {
        return parseFloat(e) || 0;
      },
      _isNumber: function (e) {
        return !isNaN(parseFloat(e));
      },
      _hasScroll: function (t, i) {
        if ("hidden" === e(t).css("overflow")) return !1;
        var n = i && "left" === i ? "scrollLeft" : "scrollTop",
          r = !1;
        return t[n] > 0 ? !0 : ((t[n] = 1), (r = t[n] > 0), (t[n] = 0), r);
      },
      _create: function () {
        var t,
          i = this.options,
          n = this;
        this._addClass("ui-resizable"),
          e.extend(this, {
            _aspectRatio: !!i.aspectRatio,
            aspectRatio: i.aspectRatio,
            originalElement: this.element,
            _proportionallyResizeElements: [],
            _helper:
              i.helper || i.ghost || i.animate
                ? i.helper || "ui-resizable-helper"
                : null,
          }),
          this.element[0].nodeName.match(
            /^(canvas|textarea|input|select|button|img)$/i
          ) &&
            (this.element.wrap(
              e("<div class='ui-wrapper' style='overflow: hidden;'></div>").css(
                {
                  position: this.element.css("position"),
                  width: this.element.outerWidth(),
                  height: this.element.outerHeight(),
                  top: this.element.css("top"),
                  left: this.element.css("left"),
                }
              )
            ),
            (this.element = this.element
              .parent()
              .data("ui-resizable", this.element.resizable("instance"))),
            (this.elementIsWrapper = !0),
            (t = {
              marginTop: this.originalElement.css("marginTop"),
              marginRight: this.originalElement.css("marginRight"),
              marginBottom: this.originalElement.css("marginBottom"),
              marginLeft: this.originalElement.css("marginLeft"),
            }),
            this.element.css(t),
            this.originalElement.css("margin", 0),
            (this.originalResizeStyle = this.originalElement.css("resize")),
            this.originalElement.css("resize", "none"),
            this._proportionallyResizeElements.push(
              this.originalElement.css({
                position: "static",
                zoom: 1,
                display: "block",
              })
            ),
            this.originalElement.css(t),
            this._proportionallyResize()),
          this._setupHandles(),
          i.autoHide &&
            e(this.element)
              .on("mouseenter", function () {
                i.disabled ||
                  (n._removeClass("ui-resizable-autohide"), n._handles.show());
              })
              .on("mouseleave", function () {
                i.disabled ||
                  n.resizing ||
                  (n._addClass("ui-resizable-autohide"), n._handles.hide());
              }),
          this._mouseInit();
      },
      _destroy: function () {
        this._mouseDestroy();
        var t,
          i = function (t) {
            e(t)
              .removeData("resizable")
              .removeData("ui-resizable")
              .off(".resizable")
              .find(".ui-resizable-handle")
              .remove();
          };
        return (
          this.elementIsWrapper &&
            (i(this.element),
            (t = this.element),
            this.originalElement
              .css({
                position: t.css("position"),
                width: t.outerWidth(),
                height: t.outerHeight(),
                top: t.css("top"),
                left: t.css("left"),
              })
              .insertAfter(t),
            t.remove()),
          this.originalElement.css("resize", this.originalResizeStyle),
          i(this.originalElement),
          this
        );
      },
      _setOption: function (e, t) {
        switch ((this._super(e, t), e)) {
          case "handles":
            this._removeHandles(), this._setupHandles();
        }
      },
      _setupHandles: function () {
        var t,
          i,
          n,
          r,
          a,
          s = this.options,
          o = this;
        if (
          ((this.handles =
            s.handles ||
            (e(".ui-resizable-handle", this.element).length
              ? {
                  n: ".ui-resizable-n",
                  e: ".ui-resizable-e",
                  s: ".ui-resizable-s",
                  w: ".ui-resizable-w",
                  se: ".ui-resizable-se",
                  sw: ".ui-resizable-sw",
                  ne: ".ui-resizable-ne",
                  nw: ".ui-resizable-nw",
                }
              : "e,s,se")),
          (this._handles = e()),
          this.handles.constructor === String)
        )
          for (
            "all" === this.handles && (this.handles = "n,e,s,w,se,sw,ne,nw"),
              n = this.handles.split(","),
              this.handles = {},
              i = 0;
            n.length > i;
            i++
          )
            (r = "ui-resizable-" + (t = e.trim(n[i]))),
              (a = e("<div>")),
              this._addClass(a, "ui-resizable-handle " + r),
              a.css({ zIndex: s.zIndex }),
              (this.handles[t] = ".ui-resizable-" + t),
              this.element.append(a);
        (this._renderAxis = function (t) {
          var i, n, r, a;
          t = t || this.element;
          for (i in this.handles)
            this.handles[i].constructor === String
              ? (this.handles[i] = this.element
                  .children(this.handles[i])
                  .first()
                  .show())
              : (this.handles[i].jquery || this.handles[i].nodeType) &&
                ((this.handles[i] = e(this.handles[i])),
                this._on(this.handles[i], { mousedown: o._mouseDown })),
              this.elementIsWrapper &&
                this.originalElement[0].nodeName.match(
                  /^(textarea|input|select|button)$/i
                ) &&
                ((n = e(this.handles[i], this.element)),
                (a = /sw|ne|nw|se|n|s/.test(i)
                  ? n.outerHeight()
                  : n.outerWidth()),
                (r = [
                  "padding",
                  /ne|nw|n/.test(i)
                    ? "Top"
                    : /se|sw|s/.test(i)
                    ? "Bottom"
                    : /^e$/.test(i)
                    ? "Right"
                    : "Left",
                ].join("")),
                t.css(r, a),
                this._proportionallyResize()),
              (this._handles = this._handles.add(this.handles[i]));
        }),
          this._renderAxis(this.element),
          (this._handles = this._handles.add(
            this.element.find(".ui-resizable-handle")
          )),
          this._handles.disableSelection(),
          this._handles.on("mouseover", function () {
            o.resizing ||
              (this.className &&
                (a = this.className.match(
                  /ui-resizable-(se|sw|ne|nw|n|e|s|w)/i
                )),
              (o.axis = a && a[1] ? a[1] : "se"));
          }),
          s.autoHide &&
            (this._handles.hide(), this._addClass("ui-resizable-autohide"));
      },
      _removeHandles: function () {
        this._handles.remove();
      },
      _mouseCapture: function (t) {
        var i,
          n,
          r = !1;
        for (i in this.handles)
          ((n = e(this.handles[i])[0]) === t.target ||
            e.contains(n, t.target)) &&
            (r = !0);
        return !this.options.disabled && r;
      },
      _mouseStart: function (t) {
        var i,
          n,
          r,
          a = this.options,
          s = this.element;
        return (
          (this.resizing = !0),
          this._renderProxy(),
          (i = this._num(this.helper.css("left"))),
          (n = this._num(this.helper.css("top"))),
          a.containment &&
            ((i += e(a.containment).scrollLeft() || 0),
            (n += e(a.containment).scrollTop() || 0)),
          (this.offset = this.helper.offset()),
          (this.position = { left: i, top: n }),
          (this.size = this._helper
            ? { width: this.helper.width(), height: this.helper.height() }
            : { width: s.width(), height: s.height() }),
          (this.originalSize = this._helper
            ? { width: s.outerWidth(), height: s.outerHeight() }
            : { width: s.width(), height: s.height() }),
          (this.sizeDiff = {
            width: s.outerWidth() - s.width(),
            height: s.outerHeight() - s.height(),
          }),
          (this.originalPosition = { left: i, top: n }),
          (this.originalMousePosition = { left: t.pageX, top: t.pageY }),
          (this.aspectRatio =
            "number" == typeof a.aspectRatio
              ? a.aspectRatio
              : this.originalSize.width / this.originalSize.height || 1),
          (r = e(".ui-resizable-" + this.axis).css("cursor")),
          e("body").css("cursor", "auto" === r ? this.axis + "-resize" : r),
          this._addClass("ui-resizable-resizing"),
          this._propagate("start", t),
          !0
        );
      },
      _mouseDrag: function (t) {
        var i,
          n,
          r = this.originalMousePosition,
          a = this.axis,
          s = t.pageX - r.left || 0,
          o = t.pageY - r.top || 0,
          l = this._change[a];
        return (
          this._updatePrevProperties(),
          l
            ? ((i = l.apply(this, [t, s, o])),
              this._updateVirtualBoundaries(t.shiftKey),
              (this._aspectRatio || t.shiftKey) &&
                (i = this._updateRatio(i, t)),
              (i = this._respectSize(i, t)),
              this._updateCache(i),
              this._propagate("resize", t),
              (n = this._applyChanges()),
              !this._helper &&
                this._proportionallyResizeElements.length &&
                this._proportionallyResize(),
              e.isEmptyObject(n) ||
                (this._updatePrevProperties(),
                this._trigger("resize", t, this.ui()),
                this._applyChanges()),
              !1)
            : !1
        );
      },
      _mouseStop: function (t) {
        this.resizing = !1;
        var i,
          n,
          r,
          a,
          s,
          o,
          l,
          c = this.options,
          h = this;
        return (
          this._helper &&
            ((r =
              (n =
                (i = this._proportionallyResizeElements).length &&
                /textarea/i.test(i[0].nodeName)) &&
              this._hasScroll(i[0], "left")
                ? 0
                : h.sizeDiff.height),
            (a = n ? 0 : h.sizeDiff.width),
            (s = {
              width: h.helper.width() - a,
              height: h.helper.height() - r,
            }),
            (o =
              parseFloat(h.element.css("left")) +
                (h.position.left - h.originalPosition.left) || null),
            (l =
              parseFloat(h.element.css("top")) +
                (h.position.top - h.originalPosition.top) || null),
            c.animate || this.element.css(e.extend(s, { top: l, left: o })),
            h.helper.height(h.size.height),
            h.helper.width(h.size.width),
            this._helper && !c.animate && this._proportionallyResize()),
          e("body").css("cursor", "auto"),
          this._removeClass("ui-resizable-resizing"),
          this._propagate("stop", t),
          this._helper && this.helper.remove(),
          !1
        );
      },
      _updatePrevProperties: function () {
        (this.prevPosition = {
          top: this.position.top,
          left: this.position.left,
        }),
          (this.prevSize = {
            width: this.size.width,
            height: this.size.height,
          });
      },
      _applyChanges: function () {
        var e = {};
        return (
          this.position.top !== this.prevPosition.top &&
            (e.top = this.position.top + "px"),
          this.position.left !== this.prevPosition.left &&
            (e.left = this.position.left + "px"),
          this.size.width !== this.prevSize.width &&
            (e.width = this.size.width + "px"),
          this.size.height !== this.prevSize.height &&
            (e.height = this.size.height + "px"),
          this.helper.css(e),
          e
        );
      },
      _updateVirtualBoundaries: function (e) {
        var t,
          i,
          n,
          r,
          a,
          s = this.options;
        (a = {
          minWidth: this._isNumber(s.minWidth) ? s.minWidth : 0,
          maxWidth: this._isNumber(s.maxWidth) ? s.maxWidth : 1 / 0,
          minHeight: this._isNumber(s.minHeight) ? s.minHeight : 0,
          maxHeight: this._isNumber(s.maxHeight) ? s.maxHeight : 1 / 0,
        }),
          (this._aspectRatio || e) &&
            ((t = a.minHeight * this.aspectRatio),
            (n = a.minWidth / this.aspectRatio),
            (i = a.maxHeight * this.aspectRatio),
            (r = a.maxWidth / this.aspectRatio),
            t > a.minWidth && (a.minWidth = t),
            n > a.minHeight && (a.minHeight = n),
            a.maxWidth > i && (a.maxWidth = i),
            a.maxHeight > r && (a.maxHeight = r)),
          (this._vBoundaries = a);
      },
      _updateCache: function (e) {
        (this.offset = this.helper.offset()),
          this._isNumber(e.left) && (this.position.left = e.left),
          this._isNumber(e.top) && (this.position.top = e.top),
          this._isNumber(e.height) && (this.size.height = e.height),
          this._isNumber(e.width) && (this.size.width = e.width);
      },
      _updateRatio: function (e) {
        var t = this.position,
          i = this.size,
          n = this.axis;
        return (
          this._isNumber(e.height)
            ? (e.width = e.height * this.aspectRatio)
            : this._isNumber(e.width) &&
              (e.height = e.width / this.aspectRatio),
          "sw" === n &&
            ((e.left = t.left + (i.width - e.width)), (e.top = null)),
          "nw" === n &&
            ((e.top = t.top + (i.height - e.height)),
            (e.left = t.left + (i.width - e.width))),
          e
        );
      },
      _respectSize: function (e) {
        var t = this._vBoundaries,
          i = this.axis,
          n = this._isNumber(e.width) && t.maxWidth && t.maxWidth < e.width,
          r = this._isNumber(e.height) && t.maxHeight && t.maxHeight < e.height,
          a = this._isNumber(e.width) && t.minWidth && t.minWidth > e.width,
          s = this._isNumber(e.height) && t.minHeight && t.minHeight > e.height,
          o = this.originalPosition.left + this.originalSize.width,
          l = this.originalPosition.top + this.originalSize.height,
          c = /sw|nw|w/.test(i),
          h = /nw|ne|n/.test(i);
        return (
          a && (e.width = t.minWidth),
          s && (e.height = t.minHeight),
          n && (e.width = t.maxWidth),
          r && (e.height = t.maxHeight),
          a && c && (e.left = o - t.minWidth),
          n && c && (e.left = o - t.maxWidth),
          s && h && (e.top = l - t.minHeight),
          r && h && (e.top = l - t.maxHeight),
          e.width || e.height || e.left || !e.top
            ? e.width || e.height || e.top || !e.left || (e.left = null)
            : (e.top = null),
          e
        );
      },
      _getPaddingPlusBorderDimensions: function (e) {
        for (
          var t = 0,
            i = [],
            n = [
              e.css("borderTopWidth"),
              e.css("borderRightWidth"),
              e.css("borderBottomWidth"),
              e.css("borderLeftWidth"),
            ],
            r = [
              e.css("paddingTop"),
              e.css("paddingRight"),
              e.css("paddingBottom"),
              e.css("paddingLeft"),
            ];
          4 > t;
          t++
        )
          (i[t] = parseFloat(n[t]) || 0), (i[t] += parseFloat(r[t]) || 0);
        return { height: i[0] + i[2], width: i[1] + i[3] };
      },
      _proportionallyResize: function () {
        if (this._proportionallyResizeElements.length)
          for (
            var e, t = 0, i = this.helper || this.element;
            this._proportionallyResizeElements.length > t;
            t++
          )
            (e = this._proportionallyResizeElements[t]),
              this.outerDimensions ||
                (this.outerDimensions =
                  this._getPaddingPlusBorderDimensions(e)),
              e.css({
                height: i.height() - this.outerDimensions.height || 0,
                width: i.width() - this.outerDimensions.width || 0,
              });
      },
      _renderProxy: function () {
        var t = this.element,
          i = this.options;
        (this.elementOffset = t.offset()),
          this._helper
            ? ((this.helper =
                this.helper || e("<div style='overflow:hidden;'></div>")),
              this._addClass(this.helper, this._helper),
              this.helper.css({
                width: this.element.outerWidth(),
                height: this.element.outerHeight(),
                position: "absolute",
                left: this.elementOffset.left + "px",
                top: this.elementOffset.top + "px",
                zIndex: ++i.zIndex,
              }),
              this.helper.appendTo("body").disableSelection())
            : (this.helper = this.element);
      },
      _change: {
        e: function (e, t) {
          return { width: this.originalSize.width + t };
        },
        w: function (e, t) {
          var i = this.originalSize;
          return { left: this.originalPosition.left + t, width: i.width - t };
        },
        n: function (e, t, i) {
          var n = this.originalSize;
          return { top: this.originalPosition.top + i, height: n.height - i };
        },
        s: function (e, t, i) {
          return { height: this.originalSize.height + i };
        },
        se: function (t, i, n) {
          return e.extend(
            this._change.s.apply(this, arguments),
            this._change.e.apply(this, [t, i, n])
          );
        },
        sw: function (t, i, n) {
          return e.extend(
            this._change.s.apply(this, arguments),
            this._change.w.apply(this, [t, i, n])
          );
        },
        ne: function (t, i, n) {
          return e.extend(
            this._change.n.apply(this, arguments),
            this._change.e.apply(this, [t, i, n])
          );
        },
        nw: function (t, i, n) {
          return e.extend(
            this._change.n.apply(this, arguments),
            this._change.w.apply(this, [t, i, n])
          );
        },
      },
      _propagate: function (t, i) {
        e.ui.plugin.call(this, t, [i, this.ui()]),
          "resize" !== t && this._trigger(t, i, this.ui());
      },
      plugins: {},
      ui: function () {
        return {
          originalElement: this.originalElement,
          element: this.element,
          helper: this.helper,
          position: this.position,
          size: this.size,
          originalSize: this.originalSize,
          originalPosition: this.originalPosition,
        };
      },
    }),
    e.ui.plugin.add("resizable", "animate", {
      stop: function (t) {
        var i = e(this).resizable("instance"),
          n = i.options,
          r = i._proportionallyResizeElements,
          a = r.length && /textarea/i.test(r[0].nodeName),
          s = a && i._hasScroll(r[0], "left") ? 0 : i.sizeDiff.height,
          o = a ? 0 : i.sizeDiff.width,
          l = { width: i.size.width - o, height: i.size.height - s },
          c =
            parseFloat(i.element.css("left")) +
              (i.position.left - i.originalPosition.left) || null,
          h =
            parseFloat(i.element.css("top")) +
              (i.position.top - i.originalPosition.top) || null;
        i.element.animate(e.extend(l, h && c ? { top: h, left: c } : {}), {
          duration: n.animateDuration,
          easing: n.animateEasing,
          step: function () {
            var n = {
              width: parseFloat(i.element.css("width")),
              height: parseFloat(i.element.css("height")),
              top: parseFloat(i.element.css("top")),
              left: parseFloat(i.element.css("left")),
            };
            r && r.length && e(r[0]).css({ width: n.width, height: n.height }),
              i._updateCache(n),
              i._propagate("resize", t);
          },
        });
      },
    }),
    e.ui.plugin.add("resizable", "containment", {
      start: function () {
        var t,
          i,
          n,
          r,
          a,
          s,
          o,
          l = e(this).resizable("instance"),
          c = l.options,
          h = l.element,
          u = c.containment,
          d =
            u instanceof e
              ? u.get(0)
              : /parent/.test(u)
              ? h.parent().get(0)
              : u;
        d &&
          ((l.containerElement = e(d)),
          /document/.test(u) || u === document
            ? ((l.containerOffset = { left: 0, top: 0 }),
              (l.containerPosition = { left: 0, top: 0 }),
              (l.parentData = {
                element: e(document),
                left: 0,
                top: 0,
                width: e(document).width(),
                height:
                  e(document).height() || document.body.parentNode.scrollHeight,
              }))
            : ((t = e(d)),
              (i = []),
              e(["Top", "Right", "Left", "Bottom"]).each(function (e, n) {
                i[e] = l._num(t.css("padding" + n));
              }),
              (l.containerOffset = t.offset()),
              (l.containerPosition = t.position()),
              (l.containerSize = {
                height: t.innerHeight() - i[3],
                width: t.innerWidth() - i[1],
              }),
              (n = l.containerOffset),
              (r = l.containerSize.height),
              (a = l.containerSize.width),
              (s = l._hasScroll(d, "left") ? d.scrollWidth : a),
              (o = l._hasScroll(d) ? d.scrollHeight : r),
              (l.parentData = {
                element: d,
                left: n.left,
                top: n.top,
                width: s,
                height: o,
              })));
      },
      resize: function (t) {
        var i,
          n,
          r,
          a,
          s = e(this).resizable("instance"),
          o = s.options,
          l = s.containerOffset,
          c = s.position,
          h = s._aspectRatio || t.shiftKey,
          u = { top: 0, left: 0 },
          d = s.containerElement,
          f = !0;
        d[0] !== document && /static/.test(d.css("position")) && (u = l),
          c.left < (s._helper ? l.left : 0) &&
            ((s.size.width =
              s.size.width +
              (s._helper
                ? s.position.left - l.left
                : s.position.left - u.left)),
            h && ((s.size.height = s.size.width / s.aspectRatio), (f = !1)),
            (s.position.left = o.helper ? l.left : 0)),
          c.top < (s._helper ? l.top : 0) &&
            ((s.size.height =
              s.size.height +
              (s._helper ? s.position.top - l.top : s.position.top)),
            h && ((s.size.width = s.size.height * s.aspectRatio), (f = !1)),
            (s.position.top = s._helper ? l.top : 0)),
          (r = s.containerElement.get(0) === s.element.parent().get(0)),
          (a = /relative|absolute/.test(s.containerElement.css("position"))),
          r && a
            ? ((s.offset.left = s.parentData.left + s.position.left),
              (s.offset.top = s.parentData.top + s.position.top))
            : ((s.offset.left = s.element.offset().left),
              (s.offset.top = s.element.offset().top)),
          (i = Math.abs(
            s.sizeDiff.width +
              (s._helper ? s.offset.left - u.left : s.offset.left - l.left)
          )),
          (n = Math.abs(
            s.sizeDiff.height +
              (s._helper ? s.offset.top - u.top : s.offset.top - l.top)
          )),
          i + s.size.width >= s.parentData.width &&
            ((s.size.width = s.parentData.width - i),
            h && ((s.size.height = s.size.width / s.aspectRatio), (f = !1))),
          n + s.size.height >= s.parentData.height &&
            ((s.size.height = s.parentData.height - n),
            h && ((s.size.width = s.size.height * s.aspectRatio), (f = !1))),
          f ||
            ((s.position.left = s.prevPosition.left),
            (s.position.top = s.prevPosition.top),
            (s.size.width = s.prevSize.width),
            (s.size.height = s.prevSize.height));
      },
      stop: function () {
        var t = e(this).resizable("instance"),
          i = t.options,
          n = t.containerOffset,
          r = t.containerPosition,
          a = t.containerElement,
          s = e(t.helper),
          o = s.offset(),
          l = s.outerWidth() - t.sizeDiff.width,
          c = s.outerHeight() - t.sizeDiff.height;
        t._helper &&
          !i.animate &&
          /relative/.test(a.css("position")) &&
          e(this).css({ left: o.left - r.left - n.left, width: l, height: c }),
          t._helper &&
            !i.animate &&
            /static/.test(a.css("position")) &&
            e(this).css({
              left: o.left - r.left - n.left,
              width: l,
              height: c,
            });
      },
    }),
    e.ui.plugin.add("resizable", "alsoResize", {
      start: function () {
        var t = e(this).resizable("instance").options;
        e(t.alsoResize).each(function () {
          var t = e(this);
          t.data("ui-resizable-alsoresize", {
            width: parseFloat(t.width()),
            height: parseFloat(t.height()),
            left: parseFloat(t.css("left")),
            top: parseFloat(t.css("top")),
          });
        });
      },
      resize: function (t, i) {
        var n = e(this).resizable("instance"),
          r = n.options,
          a = n.originalSize,
          s = n.originalPosition,
          o = {
            height: n.size.height - a.height || 0,
            width: n.size.width - a.width || 0,
            top: n.position.top - s.top || 0,
            left: n.position.left - s.left || 0,
          };
        e(r.alsoResize).each(function () {
          var t = e(this),
            n = e(this).data("ui-resizable-alsoresize"),
            r = {},
            a = t.parents(i.originalElement[0]).length
              ? ["width", "height"]
              : ["width", "height", "top", "left"];
          e.each(a, function (e, t) {
            var i = (n[t] || 0) + (o[t] || 0);
            i && i >= 0 && (r[t] = i || null);
          }),
            t.css(r);
        });
      },
      stop: function () {
        e(this).removeData("ui-resizable-alsoresize");
      },
    }),
    e.ui.plugin.add("resizable", "ghost", {
      start: function () {
        var t = e(this).resizable("instance"),
          i = t.size;
        (t.ghost = t.originalElement.clone()),
          t.ghost.css({
            opacity: 0.25,
            display: "block",
            position: "relative",
            height: i.height,
            width: i.width,
            margin: 0,
            left: 0,
            top: 0,
          }),
          t._addClass(t.ghost, "ui-resizable-ghost"),
          !1 !== e.uiBackCompat &&
            "string" == typeof t.options.ghost &&
            t.ghost.addClass(this.options.ghost),
          t.ghost.appendTo(t.helper);
      },
      resize: function () {
        var t = e(this).resizable("instance");
        t.ghost &&
          t.ghost.css({
            position: "relative",
            height: t.size.height,
            width: t.size.width,
          });
      },
      stop: function () {
        var t = e(this).resizable("instance");
        t.ghost && t.helper && t.helper.get(0).removeChild(t.ghost.get(0));
      },
    }),
    e.ui.plugin.add("resizable", "grid", {
      resize: function () {
        var t,
          i = e(this).resizable("instance"),
          n = i.options,
          r = i.size,
          a = i.originalSize,
          s = i.originalPosition,
          o = i.axis,
          l = "number" == typeof n.grid ? [n.grid, n.grid] : n.grid,
          c = l[0] || 1,
          h = l[1] || 1,
          u = Math.round((r.width - a.width) / c) * c,
          d = Math.round((r.height - a.height) / h) * h,
          f = a.width + u,
          p = a.height + d,
          g = n.maxWidth && f > n.maxWidth,
          m = n.maxHeight && p > n.maxHeight,
          v = n.minWidth && n.minWidth > f,
          b = n.minHeight && n.minHeight > p;
        (n.grid = l),
          v && (f += c),
          b && (p += h),
          g && (f -= c),
          m && (p -= h),
          /^(se|s|e)$/.test(o)
            ? ((i.size.width = f), (i.size.height = p))
            : /^(ne)$/.test(o)
            ? ((i.size.width = f),
              (i.size.height = p),
              (i.position.top = s.top - d))
            : /^(sw)$/.test(o)
            ? ((i.size.width = f),
              (i.size.height = p),
              (i.position.left = s.left - u))
            : ((0 >= p - h || 0 >= f - c) &&
                (t = i._getPaddingPlusBorderDimensions(this)),
              p - h > 0
                ? ((i.size.height = p), (i.position.top = s.top - d))
                : ((p = h - t.height),
                  (i.size.height = p),
                  (i.position.top = s.top + a.height - p)),
              f - c > 0
                ? ((i.size.width = f), (i.position.left = s.left - u))
                : ((f = c - t.width),
                  (i.size.width = f),
                  (i.position.left = s.left + a.width - f)));
      },
    }),
    e.ui.resizable,
    e.widget("ui.dialog", {
      version: "1.12.1",
      options: {
        appendTo: "body",
        autoOpen: !0,
        buttons: [],
        classes: {
          "ui-dialog": "ui-corner-all",
          "ui-dialog-titlebar": "ui-corner-all",
        },
        closeOnEscape: !0,
        closeText: "Close",
        draggable: !0,
        hide: null,
        height: "auto",
        maxHeight: null,
        maxWidth: null,
        minHeight: 150,
        minWidth: 150,
        modal: !1,
        position: {
          my: "center",
          at: "center",
          of: window,
          collision: "fit",
          using: function (t) {
            var i = e(this).css(t).offset().top;
            0 > i && e(this).css("top", t.top - i);
          },
        },
        resizable: !0,
        show: null,
        title: null,
        width: 300,
        beforeClose: null,
        close: null,
        drag: null,
        dragStart: null,
        dragStop: null,
        focus: null,
        open: null,
        resize: null,
        resizeStart: null,
        resizeStop: null,
      },
      sizeRelatedOptions: {
        buttons: !0,
        height: !0,
        maxHeight: !0,
        maxWidth: !0,
        minHeight: !0,
        minWidth: !0,
        width: !0,
      },
      resizableRelatedOptions: {
        maxHeight: !0,
        maxWidth: !0,
        minHeight: !0,
        minWidth: !0,
      },
      _create: function () {
        (this.originalCss = {
          display: this.element[0].style.display,
          width: this.element[0].style.width,
          minHeight: this.element[0].style.minHeight,
          maxHeight: this.element[0].style.maxHeight,
          height: this.element[0].style.height,
        }),
          (this.originalPosition = {
            parent: this.element.parent(),
            index: this.element.parent().children().index(this.element),
          }),
          (this.originalTitle = this.element.attr("title")),
          null == this.options.title &&
            null != this.originalTitle &&
            (this.options.title = this.originalTitle),
          this.options.disabled && (this.options.disabled = !1),
          this._createWrapper(),
          this.element.show().removeAttr("title").appendTo(this.uiDialog),
          this._addClass("ui-dialog-content", "ui-widget-content"),
          this._createTitlebar(),
          this._createButtonPane(),
          this.options.draggable && e.fn.draggable && this._makeDraggable(),
          this.options.resizable && e.fn.resizable && this._makeResizable(),
          (this._isOpen = !1),
          this._trackFocus();
      },
      _init: function () {
        this.options.autoOpen && this.open();
      },
      _appendTo: function () {
        var t = this.options.appendTo;
        return t && (t.jquery || t.nodeType)
          ? e(t)
          : this.document.find(t || "body").eq(0);
      },
      _destroy: function () {
        var e,
          t = this.originalPosition;
        this._untrackInstance(),
          this._destroyOverlay(),
          this.element.removeUniqueId().css(this.originalCss).detach(),
          this.uiDialog.remove(),
          this.originalTitle && this.element.attr("title", this.originalTitle),
          (e = t.parent.children().eq(t.index)).length &&
          e[0] !== this.element[0]
            ? e.before(this.element)
            : t.parent.append(this.element);
      },
      widget: function () {
        return this.uiDialog;
      },
      disable: e.noop,
      enable: e.noop,
      close: function (t) {
        var i = this;
        this._isOpen &&
          !1 !== this._trigger("beforeClose", t) &&
          ((this._isOpen = !1),
          (this._focusedElement = null),
          this._destroyOverlay(),
          this._untrackInstance(),
          this.opener.filter(":focusable").trigger("focus").length ||
            e.ui.safeBlur(e.ui.safeActiveElement(this.document[0])),
          this._hide(this.uiDialog, this.options.hide, function () {
            i._trigger("close", t);
          }));
      },
      isOpen: function () {
        return this._isOpen;
      },
      moveToTop: function () {
        this._moveToTop();
      },
      _moveToTop: function (t, i) {
        var n = !1,
          r = this.uiDialog
            .siblings(".ui-front:visible")
            .map(function () {
              return +e(this).css("z-index");
            })
            .get(),
          a = Math.max.apply(null, r);
        return (
          a >= +this.uiDialog.css("z-index") &&
            (this.uiDialog.css("z-index", a + 1), (n = !0)),
          n && !i && this._trigger("focus", t),
          n
        );
      },
      open: function () {
        var t = this;
        return this._isOpen
          ? void (this._moveToTop() && this._focusTabbable())
          : ((this._isOpen = !0),
            (this.opener = e(e.ui.safeActiveElement(this.document[0]))),
            this._size(),
            this._position(),
            this._createOverlay(),
            this._moveToTop(null, !0),
            this.overlay &&
              this.overlay.css("z-index", this.uiDialog.css("z-index") - 1),
            this._show(this.uiDialog, this.options.show, function () {
              t._focusTabbable(), t._trigger("focus");
            }),
            this._makeFocusTarget(),
            void this._trigger("open"));
      },
      _focusTabbable: function () {
        var e = this._focusedElement;
        e || (e = this.element.find("[autofocus]")),
          e.length || (e = this.element.find(":tabbable")),
          e.length || (e = this.uiDialogButtonPane.find(":tabbable")),
          e.length || (e = this.uiDialogTitlebarClose.filter(":tabbable")),
          e.length || (e = this.uiDialog),
          e.eq(0).trigger("focus");
      },
      _keepFocus: function (t) {
        function i() {
          var t = e.ui.safeActiveElement(this.document[0]);
          this.uiDialog[0] === t ||
            e.contains(this.uiDialog[0], t) ||
            this._focusTabbable();
        }
        t.preventDefault(), i.call(this), this._delay(i);
      },
      _createWrapper: function () {
        (this.uiDialog = e("<div>")
          .hide()
          .attr({ tabIndex: -1, role: "dialog" })
          .appendTo(this._appendTo())),
          this._addClass(
            this.uiDialog,
            "ui-dialog",
            "ui-widget ui-widget-content ui-front"
          ),
          this._on(this.uiDialog, {
            keydown: function (t) {
              if (
                this.options.closeOnEscape &&
                !t.isDefaultPrevented() &&
                t.keyCode &&
                t.keyCode === e.ui.keyCode.ESCAPE
              )
                return t.preventDefault(), void this.close(t);
              if (t.keyCode === e.ui.keyCode.TAB && !t.isDefaultPrevented()) {
                var i = this.uiDialog.find(":tabbable"),
                  n = i.filter(":first"),
                  r = i.filter(":last");
                (t.target !== r[0] && t.target !== this.uiDialog[0]) ||
                t.shiftKey
                  ? (t.target !== n[0] && t.target !== this.uiDialog[0]) ||
                    !t.shiftKey ||
                    (this._delay(function () {
                      r.trigger("focus");
                    }),
                    t.preventDefault())
                  : (this._delay(function () {
                      n.trigger("focus");
                    }),
                    t.preventDefault());
              }
            },
            mousedown: function (e) {
              this._moveToTop(e) && this._focusTabbable();
            },
          }),
          this.element.find("[aria-describedby]").length ||
            this.uiDialog.attr({
              "aria-describedby": this.element.uniqueId().attr("id"),
            });
      },
      _createTitlebar: function () {
        var t;
        (this.uiDialogTitlebar = e("<div>")),
          this._addClass(
            this.uiDialogTitlebar,
            "ui-dialog-titlebar",
            "ui-widget-header ui-helper-clearfix"
          ),
          this._on(this.uiDialogTitlebar, {
            mousedown: function (t) {
              e(t.target).closest(".ui-dialog-titlebar-close") ||
                this.uiDialog.trigger("focus");
            },
          }),
          (this.uiDialogTitlebarClose = e("<button type='button'></button>")
            .button({
              label: e("<a>").text(this.options.closeText).html(),
              icon: "ui-icon-closethick",
              showLabel: !1,
            })
            .appendTo(this.uiDialogTitlebar)),
          this._addClass(
            this.uiDialogTitlebarClose,
            "ui-dialog-titlebar-close"
          ),
          this._on(this.uiDialogTitlebarClose, {
            click: function (e) {
              e.preventDefault(), this.close(e);
            },
          }),
          (t = e("<span>").uniqueId().prependTo(this.uiDialogTitlebar)),
          this._addClass(t, "ui-dialog-title"),
          this._title(t),
          this.uiDialogTitlebar.prependTo(this.uiDialog),
          this.uiDialog.attr({ "aria-labelledby": t.attr("id") });
      },
      _title: function (e) {
        this.options.title ? e.text(this.options.title) : e.html("&#160;");
      },
      _createButtonPane: function () {
        (this.uiDialogButtonPane = e("<div>")),
          this._addClass(
            this.uiDialogButtonPane,
            "ui-dialog-buttonpane",
            "ui-widget-content ui-helper-clearfix"
          ),
          (this.uiButtonSet = e("<div>").appendTo(this.uiDialogButtonPane)),
          this._addClass(this.uiButtonSet, "ui-dialog-buttonset"),
          this._createButtons();
      },
      _createButtons: function () {
        var t = this,
          i = this.options.buttons;
        return (
          this.uiDialogButtonPane.remove(),
          this.uiButtonSet.empty(),
          e.isEmptyObject(i) || (e.isArray(i) && !i.length)
            ? void this._removeClass(this.uiDialog, "ui-dialog-buttons")
            : (e.each(i, function (i, n) {
                var r, a;
                (n = e.isFunction(n) ? { click: n, text: i } : n),
                  (n = e.extend({ type: "button" }, n)),
                  (r = n.click),
                  (a = {
                    icon: n.icon,
                    iconPosition: n.iconPosition,
                    showLabel: n.showLabel,
                    icons: n.icons,
                    text: n.text,
                  }),
                  delete n.click,
                  delete n.icon,
                  delete n.iconPosition,
                  delete n.showLabel,
                  delete n.icons,
                  "boolean" == typeof n.text && delete n.text,
                  e("<button></button>", n)
                    .button(a)
                    .appendTo(t.uiButtonSet)
                    .on("click", function () {
                      r.apply(t.element[0], arguments);
                    });
              }),
              this._addClass(this.uiDialog, "ui-dialog-buttons"),
              void this.uiDialogButtonPane.appendTo(this.uiDialog))
        );
      },
      _makeDraggable: function () {
        function t(e) {
          return { position: e.position, offset: e.offset };
        }
        var i = this,
          n = this.options;
        this.uiDialog.draggable({
          cancel: ".ui-dialog-content, .ui-dialog-titlebar-close",
          handle: ".ui-dialog-titlebar",
          containment: "document",
          start: function (n, r) {
            i._addClass(e(this), "ui-dialog-dragging"),
              i._blockFrames(),
              i._trigger("dragStart", n, t(r));
          },
          drag: function (e, n) {
            i._trigger("drag", e, t(n));
          },
          stop: function (r, a) {
            var s = a.offset.left - i.document.scrollLeft(),
              o = a.offset.top - i.document.scrollTop();
            (n.position = {
              my: "left top",
              at:
                "left" +
                (s >= 0 ? "+" : "") +
                s +
                " top" +
                (o >= 0 ? "+" : "") +
                o,
              of: i.window,
            }),
              i._removeClass(e(this), "ui-dialog-dragging"),
              i._unblockFrames(),
              i._trigger("dragStop", r, t(a));
          },
        });
      },
      _makeResizable: function () {
        function t(e) {
          return {
            originalPosition: e.originalPosition,
            originalSize: e.originalSize,
            position: e.position,
            size: e.size,
          };
        }
        var i = this,
          n = this.options,
          r = n.resizable,
          a = this.uiDialog.css("position"),
          s = "string" == typeof r ? r : "n,e,s,w,se,sw,ne,nw";
        this.uiDialog
          .resizable({
            cancel: ".ui-dialog-content",
            containment: "document",
            alsoResize: this.element,
            maxWidth: n.maxWidth,
            maxHeight: n.maxHeight,
            minWidth: n.minWidth,
            minHeight: this._minHeight(),
            handles: s,
            start: function (n, r) {
              i._addClass(e(this), "ui-dialog-resizing"),
                i._blockFrames(),
                i._trigger("resizeStart", n, t(r));
            },
            resize: function (e, n) {
              i._trigger("resize", e, t(n));
            },
            stop: function (r, a) {
              var s = i.uiDialog.offset(),
                o = s.left - i.document.scrollLeft(),
                l = s.top - i.document.scrollTop();
              (n.height = i.uiDialog.height()),
                (n.width = i.uiDialog.width()),
                (n.position = {
                  my: "left top",
                  at:
                    "left" +
                    (o >= 0 ? "+" : "") +
                    o +
                    " top" +
                    (l >= 0 ? "+" : "") +
                    l,
                  of: i.window,
                }),
                i._removeClass(e(this), "ui-dialog-resizing"),
                i._unblockFrames(),
                i._trigger("resizeStop", r, t(a));
            },
          })
          .css("position", a);
      },
      _trackFocus: function () {
        this._on(this.widget(), {
          focusin: function (t) {
            this._makeFocusTarget(), (this._focusedElement = e(t.target));
          },
        });
      },
      _makeFocusTarget: function () {
        this._untrackInstance(), this._trackingInstances().unshift(this);
      },
      _untrackInstance: function () {
        var t = this._trackingInstances(),
          i = e.inArray(this, t);
        -1 !== i && t.splice(i, 1);
      },
      _trackingInstances: function () {
        var e = this.document.data("ui-dialog-instances");
        return e || ((e = []), this.document.data("ui-dialog-instances", e)), e;
      },
      _minHeight: function () {
        var e = this.options;
        return "auto" === e.height
          ? e.minHeight
          : Math.min(e.minHeight, e.height);
      },
      _position: function () {
        var e = this.uiDialog.is(":visible");
        e || this.uiDialog.show(),
          this.uiDialog.position(this.options.position),
          e || this.uiDialog.hide();
      },
      _setOptions: function (t) {
        var i = this,
          n = !1,
          r = {};
        e.each(t, function (e, t) {
          i._setOption(e, t),
            e in i.sizeRelatedOptions && (n = !0),
            e in i.resizableRelatedOptions && (r[e] = t);
        }),
          n && (this._size(), this._position()),
          this.uiDialog.is(":data(ui-resizable)") &&
            this.uiDialog.resizable("option", r);
      },
      _setOption: function (t, i) {
        var n,
          r,
          a = this.uiDialog;
        "disabled" !== t &&
          (this._super(t, i),
          "appendTo" === t && this.uiDialog.appendTo(this._appendTo()),
          "buttons" === t && this._createButtons(),
          "closeText" === t &&
            this.uiDialogTitlebarClose.button({
              label: e("<a>")
                .text("" + this.options.closeText)
                .html(),
            }),
          "draggable" === t &&
            ((n = a.is(":data(ui-draggable)")) && !i && a.draggable("destroy"),
            !n && i && this._makeDraggable()),
          "position" === t && this._position(),
          "resizable" === t &&
            ((r = a.is(":data(ui-resizable)")) && !i && a.resizable("destroy"),
            r && "string" == typeof i && a.resizable("option", "handles", i),
            r || !1 === i || this._makeResizable()),
          "title" === t &&
            this._title(this.uiDialogTitlebar.find(".ui-dialog-title")));
      },
      _size: function () {
        var e,
          t,
          i,
          n = this.options;
        this.element
          .show()
          .css({ width: "auto", minHeight: 0, maxHeight: "none", height: 0 }),
          n.minWidth > n.width && (n.width = n.minWidth),
          (e = this.uiDialog
            .css({ height: "auto", width: n.width })
            .outerHeight()),
          (t = Math.max(0, n.minHeight - e)),
          (i =
            "number" == typeof n.maxHeight
              ? Math.max(0, n.maxHeight - e)
              : "none"),
          "auto" === n.height
            ? this.element.css({ minHeight: t, maxHeight: i, height: "auto" })
            : this.element.height(Math.max(0, n.height - e)),
          this.uiDialog.is(":data(ui-resizable)") &&
            this.uiDialog.resizable("option", "minHeight", this._minHeight());
      },
      _blockFrames: function () {
        this.iframeBlocks = this.document.find("iframe").map(function () {
          var t = e(this);
          return e("<div>")
            .css({
              position: "absolute",
              width: t.outerWidth(),
              height: t.outerHeight(),
            })
            .appendTo(t.parent())
            .offset(t.offset())[0];
        });
      },
      _unblockFrames: function () {
        this.iframeBlocks &&
          (this.iframeBlocks.remove(), delete this.iframeBlocks);
      },
      _allowInteraction: function (t) {
        return e(t.target).closest(".ui-dialog").length
          ? !0
          : !!e(t.target).closest(".ui-datepicker").length;
      },
      _createOverlay: function () {
        if (this.options.modal) {
          var t = !0;
          this._delay(function () {
            t = !1;
          }),
            this.document.data("ui-dialog-overlays") ||
              this._on(this.document, {
                focusin: function (e) {
                  t ||
                    this._allowInteraction(e) ||
                    (e.preventDefault(),
                    this._trackingInstances()[0]._focusTabbable());
                },
              }),
            (this.overlay = e("<div>").appendTo(this._appendTo())),
            this._addClass(this.overlay, null, "ui-widget-overlay ui-front"),
            this._on(this.overlay, { mousedown: "_keepFocus" }),
            this.document.data(
              "ui-dialog-overlays",
              (this.document.data("ui-dialog-overlays") || 0) + 1
            );
        }
      },
      _destroyOverlay: function () {
        if (this.options.modal && this.overlay) {
          var e = this.document.data("ui-dialog-overlays") - 1;
          e
            ? this.document.data("ui-dialog-overlays", e)
            : (this._off(this.document, "focusin"),
              this.document.removeData("ui-dialog-overlays")),
            this.overlay.remove(),
            (this.overlay = null);
        }
      },
    }),
    !1 !== e.uiBackCompat &&
      e.widget("ui.dialog", e.ui.dialog, {
        options: { dialogClass: "" },
        _createWrapper: function () {
          this._super(), this.uiDialog.addClass(this.options.dialogClass);
        },
        _setOption: function (e, t) {
          "dialogClass" === e &&
            this.uiDialog.removeClass(this.options.dialogClass).addClass(t),
            this._superApply(arguments);
        },
      }),
    e.ui.dialog,
    e.widget("ui.droppable", {
      version: "1.12.1",
      widgetEventPrefix: "drop",
      options: {
        accept: "*",
        addClasses: !0,
        greedy: !1,
        scope: "default",
        tolerance: "intersect",
        activate: null,
        deactivate: null,
        drop: null,
        out: null,
        over: null,
      },
      _create: function () {
        var t,
          i = this.options,
          n = i.accept;
        (this.isover = !1),
          (this.isout = !0),
          (this.accept = e.isFunction(n)
            ? n
            : function (e) {
                return e.is(n);
              }),
          (this.proportions = function () {
            return arguments.length
              ? void (t = arguments[0])
              : t
              ? t
              : (t = {
                  width: this.element[0].offsetWidth,
                  height: this.element[0].offsetHeight,
                });
          }),
          this._addToManager(i.scope),
          i.addClasses && this._addClass("ui-droppable");
      },
      _addToManager: function (t) {
        (e.ui.ddmanager.droppables[t] = e.ui.ddmanager.droppables[t] || []),
          e.ui.ddmanager.droppables[t].push(this);
      },
      _splice: function (e) {
        for (var t = 0; e.length > t; t++) e[t] === this && e.splice(t, 1);
      },
      _destroy: function () {
        var t = e.ui.ddmanager.droppables[this.options.scope];
        this._splice(t);
      },
      _setOption: function (t, i) {
        if ("accept" === t)
          this.accept = e.isFunction(i)
            ? i
            : function (e) {
                return e.is(i);
              };
        else if ("scope" === t) {
          var n = e.ui.ddmanager.droppables[this.options.scope];
          this._splice(n), this._addToManager(i);
        }
        this._super(t, i);
      },
      _activate: function (t) {
        var i = e.ui.ddmanager.current;
        this._addActiveClass(), i && this._trigger("activate", t, this.ui(i));
      },
      _deactivate: function (t) {
        var i = e.ui.ddmanager.current;
        this._removeActiveClass(),
          i && this._trigger("deactivate", t, this.ui(i));
      },
      _over: function (t) {
        var i = e.ui.ddmanager.current;
        i &&
          (i.currentItem || i.element)[0] !== this.element[0] &&
          this.accept.call(this.element[0], i.currentItem || i.element) &&
          (this._addHoverClass(), this._trigger("over", t, this.ui(i)));
      },
      _out: function (t) {
        var i = e.ui.ddmanager.current;
        i &&
          (i.currentItem || i.element)[0] !== this.element[0] &&
          this.accept.call(this.element[0], i.currentItem || i.element) &&
          (this._removeHoverClass(), this._trigger("out", t, this.ui(i)));
      },
      _drop: function (t, i) {
        var n = i || e.ui.ddmanager.current,
          r = !1;
        return n && (n.currentItem || n.element)[0] !== this.element[0]
          ? (this.element
              .find(":data(ui-droppable)")
              .not(".ui-draggable-dragging")
              .each(function () {
                var i = e(this).droppable("instance");
                return i.options.greedy &&
                  !i.options.disabled &&
                  i.options.scope === n.options.scope &&
                  i.accept.call(i.element[0], n.currentItem || n.element) &&
                  m(
                    n,
                    e.extend(i, { offset: i.element.offset() }),
                    i.options.tolerance,
                    t
                  )
                  ? ((r = !0), !1)
                  : void 0;
              }),
            r
              ? !1
              : this.accept.call(this.element[0], n.currentItem || n.element)
              ? (this._removeActiveClass(),
                this._removeHoverClass(),
                this._trigger("drop", t, this.ui(n)),
                this.element)
              : !1)
          : !1;
      },
      ui: function (e) {
        return {
          draggable: e.currentItem || e.element,
          helper: e.helper,
          position: e.position,
          offset: e.positionAbs,
        };
      },
      _addHoverClass: function () {
        this._addClass("ui-droppable-hover");
      },
      _removeHoverClass: function () {
        this._removeClass("ui-droppable-hover");
      },
      _addActiveClass: function () {
        this._addClass("ui-droppable-active");
      },
      _removeActiveClass: function () {
        this._removeClass("ui-droppable-active");
      },
    });
  var m = (e.ui.intersect = (function () {
    function e(e, t, i) {
      return e >= t && t + i > e;
    }
    return function (t, i, n, r) {
      if (!i.offset) return !1;
      var a = (t.positionAbs || t.position.absolute).left + t.margins.left,
        s = (t.positionAbs || t.position.absolute).top + t.margins.top,
        o = a + t.helperProportions.width,
        l = s + t.helperProportions.height,
        c = i.offset.left,
        h = i.offset.top,
        u = c + i.proportions().width,
        d = h + i.proportions().height;
      switch (n) {
        case "fit":
          return a >= c && u >= o && s >= h && d >= l;
        case "intersect":
          return (
            a + t.helperProportions.width / 2 > c &&
            u > o - t.helperProportions.width / 2 &&
            s + t.helperProportions.height / 2 > h &&
            d > l - t.helperProportions.height / 2
          );
        case "pointer":
          return (
            e(r.pageY, h, i.proportions().height) &&
            e(r.pageX, c, i.proportions().width)
          );
        case "touch":
          return (
            ((s >= h && d >= s) || (l >= h && d >= l) || (h > s && l > d)) &&
            ((a >= c && u >= a) || (o >= c && u >= o) || (c > a && o > u))
          );
        default:
          return !1;
      }
    };
  })());
  (e.ui.ddmanager = {
    current: null,
    droppables: { default: [] },
    prepareOffsets: function (t, i) {
      var n,
        r,
        a = e.ui.ddmanager.droppables[t.options.scope] || [],
        s = i ? i.type : null,
        o = (t.currentItem || t.element).find(":data(ui-droppable)").addBack();
      e: for (n = 0; a.length > n; n++)
        if (
          !(
            a[n].options.disabled ||
            (t &&
              !a[n].accept.call(a[n].element[0], t.currentItem || t.element))
          )
        ) {
          for (r = 0; o.length > r; r++)
            if (o[r] === a[n].element[0]) {
              a[n].proportions().height = 0;
              continue e;
            }
          (a[n].visible = "none" !== a[n].element.css("display")),
            a[n].visible &&
              ("mousedown" === s && a[n]._activate.call(a[n], i),
              (a[n].offset = a[n].element.offset()),
              a[n].proportions({
                width: a[n].element[0].offsetWidth,
                height: a[n].element[0].offsetHeight,
              }));
        }
    },
    drop: function (t, i) {
      var n = !1;
      return (
        e.each(
          (e.ui.ddmanager.droppables[t.options.scope] || []).slice(),
          function () {
            this.options &&
              (!this.options.disabled &&
                this.visible &&
                m(t, this, this.options.tolerance, i) &&
                (n = this._drop.call(this, i) || n),
              !this.options.disabled &&
                this.visible &&
                this.accept.call(this.element[0], t.currentItem || t.element) &&
                ((this.isout = !0),
                (this.isover = !1),
                this._deactivate.call(this, i)));
          }
        ),
        n
      );
    },
    dragStart: function (t, i) {
      t.element.parentsUntil("body").on("scroll.droppable", function () {
        t.options.refreshPositions || e.ui.ddmanager.prepareOffsets(t, i);
      });
    },
    drag: function (t, i) {
      t.options.refreshPositions && e.ui.ddmanager.prepareOffsets(t, i),
        e.each(e.ui.ddmanager.droppables[t.options.scope] || [], function () {
          if (!this.options.disabled && !this.greedyChild && this.visible) {
            var n,
              r,
              a,
              s = m(t, this, this.options.tolerance, i),
              o =
                !s && this.isover
                  ? "isout"
                  : s && !this.isover
                  ? "isover"
                  : null;
            o &&
              (this.options.greedy &&
                ((r = this.options.scope),
                (a = this.element
                  .parents(":data(ui-droppable)")
                  .filter(function () {
                    return e(this).droppable("instance").options.scope === r;
                  })).length &&
                  ((n = e(a[0]).droppable("instance")).greedyChild =
                    "isover" === o)),
              n &&
                "isover" === o &&
                ((n.isover = !1), (n.isout = !0), n._out.call(n, i)),
              (this[o] = !0),
              (this["isout" === o ? "isover" : "isout"] = !1),
              this["isover" === o ? "_over" : "_out"].call(this, i),
              n &&
                "isout" === o &&
                ((n.isout = !1), (n.isover = !0), n._over.call(n, i)));
          }
        });
    },
    dragStop: function (t, i) {
      t.element.parentsUntil("body").off("scroll.droppable"),
        t.options.refreshPositions || e.ui.ddmanager.prepareOffsets(t, i);
    },
  }),
    !1 !== e.uiBackCompat &&
      e.widget("ui.droppable", e.ui.droppable, {
        options: { hoverClass: !1, activeClass: !1 },
        _addActiveClass: function () {
          this._super(),
            this.options.activeClass &&
              this.element.addClass(this.options.activeClass);
        },
        _removeActiveClass: function () {
          this._super(),
            this.options.activeClass &&
              this.element.removeClass(this.options.activeClass);
        },
        _addHoverClass: function () {
          this._super(),
            this.options.hoverClass &&
              this.element.addClass(this.options.hoverClass);
        },
        _removeHoverClass: function () {
          this._super(),
            this.options.hoverClass &&
              this.element.removeClass(this.options.hoverClass);
        },
      }),
    e.ui.droppable,
    e.widget("ui.progressbar", {
      version: "1.12.1",
      options: {
        classes: {
          "ui-progressbar": "ui-corner-all",
          "ui-progressbar-value": "ui-corner-left",
          "ui-progressbar-complete": "ui-corner-right",
        },
        max: 100,
        value: 0,
        change: null,
        complete: null,
      },
      min: 0,
      _create: function () {
        (this.oldValue = this.options.value = this._constrainedValue()),
          this.element.attr({ role: "progressbar", "aria-valuemin": this.min }),
          this._addClass("ui-progressbar", "ui-widget ui-widget-content"),
          (this.valueDiv = e("<div>").appendTo(this.element)),
          this._addClass(
            this.valueDiv,
            "ui-progressbar-value",
            "ui-widget-header"
          ),
          this._refreshValue();
      },
      _destroy: function () {
        this.element.removeAttr(
          "role aria-valuemin aria-valuemax aria-valuenow"
        ),
          this.valueDiv.remove();
      },
      value: function (e) {
        return void 0 === e
          ? this.options.value
          : ((this.options.value = this._constrainedValue(e)),
            void this._refreshValue());
      },
      _constrainedValue: function (e) {
        return (
          void 0 === e && (e = this.options.value),
          (this.indeterminate = !1 === e),
          "number" != typeof e && (e = 0),
          this.indeterminate
            ? !1
            : Math.min(this.options.max, Math.max(this.min, e))
        );
      },
      _setOptions: function (e) {
        var t = e.value;
        delete e.value,
          this._super(e),
          (this.options.value = this._constrainedValue(t)),
          this._refreshValue();
      },
      _setOption: function (e, t) {
        "max" === e && (t = Math.max(this.min, t)), this._super(e, t);
      },
      _setOptionDisabled: function (e) {
        this._super(e),
          this.element.attr("aria-disabled", e),
          this._toggleClass(null, "ui-state-disabled", !!e);
      },
      _percentage: function () {
        return this.indeterminate
          ? 100
          : (100 * (this.options.value - this.min)) /
              (this.options.max - this.min);
      },
      _refreshValue: function () {
        var t = this.options.value,
          i = this._percentage();
        this.valueDiv
          .toggle(this.indeterminate || t > this.min)
          .width(i.toFixed(0) + "%"),
          this._toggleClass(
            this.valueDiv,
            "ui-progressbar-complete",
            null,
            t === this.options.max
          )._toggleClass(
            "ui-progressbar-indeterminate",
            null,
            this.indeterminate
          ),
          this.indeterminate
            ? (this.element.removeAttr("aria-valuenow"),
              this.overlayDiv ||
                ((this.overlayDiv = e("<div>").appendTo(this.valueDiv)),
                this._addClass(this.overlayDiv, "ui-progressbar-overlay")))
            : (this.element.attr({
                "aria-valuemax": this.options.max,
                "aria-valuenow": t,
              }),
              this.overlayDiv &&
                (this.overlayDiv.remove(), (this.overlayDiv = null))),
          this.oldValue !== t && ((this.oldValue = t), this._trigger("change")),
          t === this.options.max && this._trigger("complete");
      },
    }),
    e.widget("ui.selectable", e.ui.mouse, {
      version: "1.12.1",
      options: {
        appendTo: "body",
        autoRefresh: !0,
        distance: 0,
        filter: "*",
        tolerance: "touch",
        selected: null,
        selecting: null,
        start: null,
        stop: null,
        unselected: null,
        unselecting: null,
      },
      _create: function () {
        var t = this;
        this._addClass("ui-selectable"),
          (this.dragged = !1),
          (this.refresh = function () {
            (t.elementPos = e(t.element[0]).offset()),
              (t.selectees = e(t.options.filter, t.element[0])),
              t._addClass(t.selectees, "ui-selectee"),
              t.selectees.each(function () {
                var i = e(this),
                  n = i.offset(),
                  r = {
                    left: n.left - t.elementPos.left,
                    top: n.top - t.elementPos.top,
                  };
                e.data(this, "selectable-item", {
                  element: this,
                  $element: i,
                  left: r.left,
                  top: r.top,
                  right: r.left + i.outerWidth(),
                  bottom: r.top + i.outerHeight(),
                  startselected: !1,
                  selected: i.hasClass("ui-selected"),
                  selecting: i.hasClass("ui-selecting"),
                  unselecting: i.hasClass("ui-unselecting"),
                });
              });
          }),
          this.refresh(),
          this._mouseInit(),
          (this.helper = e("<div>")),
          this._addClass(this.helper, "ui-selectable-helper");
      },
      _destroy: function () {
        this.selectees.removeData("selectable-item"), this._mouseDestroy();
      },
      _mouseStart: function (t) {
        var i = this,
          n = this.options;
        (this.opos = [t.pageX, t.pageY]),
          (this.elementPos = e(this.element[0]).offset()),
          this.options.disabled ||
            ((this.selectees = e(n.filter, this.element[0])),
            this._trigger("start", t),
            e(n.appendTo).append(this.helper),
            this.helper.css({
              left: t.pageX,
              top: t.pageY,
              width: 0,
              height: 0,
            }),
            n.autoRefresh && this.refresh(),
            this.selectees.filter(".ui-selected").each(function () {
              var n = e.data(this, "selectable-item");
              (n.startselected = !0),
                t.metaKey ||
                  t.ctrlKey ||
                  (i._removeClass(n.$element, "ui-selected"),
                  (n.selected = !1),
                  i._addClass(n.$element, "ui-unselecting"),
                  (n.unselecting = !0),
                  i._trigger("unselecting", t, { unselecting: n.element }));
            }),
            e(t.target)
              .parents()
              .addBack()
              .each(function () {
                var n,
                  r = e.data(this, "selectable-item");
                return r
                  ? ((n =
                      (!t.metaKey && !t.ctrlKey) ||
                      !r.$element.hasClass("ui-selected")),
                    i
                      ._removeClass(
                        r.$element,
                        n ? "ui-unselecting" : "ui-selected"
                      )
                      ._addClass(
                        r.$element,
                        n ? "ui-selecting" : "ui-unselecting"
                      ),
                    (r.unselecting = !n),
                    (r.selecting = n),
                    (r.selected = n),
                    n
                      ? i._trigger("selecting", t, { selecting: r.element })
                      : i._trigger("unselecting", t, {
                          unselecting: r.element,
                        }),
                    !1)
                  : void 0;
              }));
      },
      _mouseDrag: function (t) {
        if (((this.dragged = !0), !this.options.disabled)) {
          var i,
            n = this,
            r = this.options,
            a = this.opos[0],
            s = this.opos[1],
            o = t.pageX,
            l = t.pageY;
          return (
            a > o && ((i = o), (o = a), (a = i)),
            s > l && ((i = l), (l = s), (s = i)),
            this.helper.css({ left: a, top: s, width: o - a, height: l - s }),
            this.selectees.each(function () {
              var i = e.data(this, "selectable-item"),
                c = !1,
                h = {};
              i &&
                i.element !== n.element[0] &&
                ((h.left = i.left + n.elementPos.left),
                (h.right = i.right + n.elementPos.left),
                (h.top = i.top + n.elementPos.top),
                (h.bottom = i.bottom + n.elementPos.top),
                "touch" === r.tolerance
                  ? (c = !(
                      h.left > o ||
                      a > h.right ||
                      h.top > l ||
                      s > h.bottom
                    ))
                  : "fit" === r.tolerance &&
                    (c =
                      h.left > a && o > h.right && h.top > s && l > h.bottom),
                c
                  ? (i.selected &&
                      (n._removeClass(i.$element, "ui-selected"),
                      (i.selected = !1)),
                    i.unselecting &&
                      (n._removeClass(i.$element, "ui-unselecting"),
                      (i.unselecting = !1)),
                    i.selecting ||
                      (n._addClass(i.$element, "ui-selecting"),
                      (i.selecting = !0),
                      n._trigger("selecting", t, { selecting: i.element })))
                  : (i.selecting &&
                      ((t.metaKey || t.ctrlKey) && i.startselected
                        ? (n._removeClass(i.$element, "ui-selecting"),
                          (i.selecting = !1),
                          n._addClass(i.$element, "ui-selected"),
                          (i.selected = !0))
                        : (n._removeClass(i.$element, "ui-selecting"),
                          (i.selecting = !1),
                          i.startselected &&
                            (n._addClass(i.$element, "ui-unselecting"),
                            (i.unselecting = !0)),
                          n._trigger("unselecting", t, {
                            unselecting: i.element,
                          }))),
                    i.selected &&
                      (t.metaKey ||
                        t.ctrlKey ||
                        i.startselected ||
                        (n._removeClass(i.$element, "ui-selected"),
                        (i.selected = !1),
                        n._addClass(i.$element, "ui-unselecting"),
                        (i.unselecting = !0),
                        n._trigger("unselecting", t, {
                          unselecting: i.element,
                        })))));
            }),
            !1
          );
        }
      },
      _mouseStop: function (t) {
        var i = this;
        return (
          (this.dragged = !1),
          e(".ui-unselecting", this.element[0]).each(function () {
            var n = e.data(this, "selectable-item");
            i._removeClass(n.$element, "ui-unselecting"),
              (n.unselecting = !1),
              (n.startselected = !1),
              i._trigger("unselected", t, { unselected: n.element });
          }),
          e(".ui-selecting", this.element[0]).each(function () {
            var n = e.data(this, "selectable-item");
            i
              ._removeClass(n.$element, "ui-selecting")
              ._addClass(n.$element, "ui-selected"),
              (n.selecting = !1),
              (n.selected = !0),
              (n.startselected = !0),
              i._trigger("selected", t, { selected: n.element });
          }),
          this._trigger("stop", t),
          this.helper.remove(),
          !1
        );
      },
    }),
    e.widget("ui.selectmenu", [
      e.ui.formResetMixin,
      {
        version: "1.12.1",
        defaultElement: "<select>",
        options: {
          appendTo: null,
          classes: {
            "ui-selectmenu-button-open": "ui-corner-top",
            "ui-selectmenu-button-closed": "ui-corner-all",
          },
          disabled: null,
          icons: { button: "ui-icon-triangle-1-s" },
          position: { my: "left top", at: "left bottom", collision: "none" },
          width: !1,
          change: null,
          close: null,
          focus: null,
          open: null,
          select: null,
        },
        _create: function () {
          var t = this.element.uniqueId().attr("id");
          (this.ids = { element: t, button: t + "-button", menu: t + "-menu" }),
            this._drawButton(),
            this._drawMenu(),
            this._bindFormResetHandler(),
            (this._rendered = !1),
            (this.menuItems = e());
        },
        _drawButton: function () {
          var t,
            i = this,
            n = this._parseOption(
              this.element.find("option:selected"),
              this.element[0].selectedIndex
            );
          (this.labels = this.element.labels().attr("for", this.ids.button)),
            this._on(this.labels, {
              click: function (e) {
                this.button.focus(), e.preventDefault();
              },
            }),
            this.element.hide(),
            (this.button = e("<span>", {
              tabindex: this.options.disabled ? -1 : 0,
              id: this.ids.button,
              role: "combobox",
              "aria-expanded": "false",
              "aria-autocomplete": "list",
              "aria-owns": this.ids.menu,
              "aria-haspopup": "true",
              title: this.element.attr("title"),
            }).insertAfter(this.element)),
            this._addClass(
              this.button,
              "ui-selectmenu-button ui-selectmenu-button-closed",
              "ui-button ui-widget"
            ),
            (t = e("<span>").appendTo(this.button)),
            this._addClass(
              t,
              "ui-selectmenu-icon",
              "ui-icon " + this.options.icons.button
            ),
            (this.buttonItem = this._renderButtonItem(n).appendTo(this.button)),
            !1 !== this.options.width && this._resizeButton(),
            this._on(this.button, this._buttonEvents),
            this.button.one("focusin", function () {
              i._rendered || i._refreshMenu();
            });
        },
        _drawMenu: function () {
          var t = this;
          (this.menu = e("<ul>", {
            "aria-hidden": "true",
            "aria-labelledby": this.ids.button,
            id: this.ids.menu,
          })),
            (this.menuWrap = e("<div>").append(this.menu)),
            this._addClass(this.menuWrap, "ui-selectmenu-menu", "ui-front"),
            this.menuWrap.appendTo(this._appendTo()),
            (this.menuInstance = this.menu
              .menu({
                classes: { "ui-menu": "ui-corner-bottom" },
                role: "listbox",
                select: function (e, i) {
                  e.preventDefault(),
                    t._setSelection(),
                    t._select(i.item.data("ui-selectmenu-item"), e);
                },
                focus: function (e, i) {
                  var n = i.item.data("ui-selectmenu-item");
                  null != t.focusIndex &&
                    n.index !== t.focusIndex &&
                    (t._trigger("focus", e, { item: n }),
                    t.isOpen || t._select(n, e)),
                    (t.focusIndex = n.index),
                    t.button.attr(
                      "aria-activedescendant",
                      t.menuItems.eq(n.index).attr("id")
                    );
                },
              })
              .menu("instance")),
            this.menuInstance._off(this.menu, "mouseleave"),
            (this.menuInstance._closeOnDocumentClick = function () {
              return !1;
            }),
            (this.menuInstance._isDivider = function () {
              return !1;
            });
        },
        refresh: function () {
          this._refreshMenu(),
            this.buttonItem.replaceWith(
              (this.buttonItem = this._renderButtonItem(
                this._getSelectedItem().data("ui-selectmenu-item") || {}
              ))
            ),
            null === this.options.width && this._resizeButton();
        },
        _refreshMenu: function () {
          var e,
            t = this.element.find("option");
          this.menu.empty(),
            this._parseOptions(t),
            this._renderMenu(this.menu, this.items),
            this.menuInstance.refresh(),
            (this.menuItems = this.menu
              .find("li")
              .not(".ui-selectmenu-optgroup")
              .find(".ui-menu-item-wrapper")),
            (this._rendered = !0),
            t.length &&
              ((e = this._getSelectedItem()),
              this.menuInstance.focus(null, e),
              this._setAria(e.data("ui-selectmenu-item")),
              this._setOption("disabled", this.element.prop("disabled")));
        },
        open: function (e) {
          this.options.disabled ||
            (this._rendered
              ? (this._removeClass(
                  this.menu.find(".ui-state-active"),
                  null,
                  "ui-state-active"
                ),
                this.menuInstance.focus(null, this._getSelectedItem()))
              : this._refreshMenu(),
            this.menuItems.length &&
              ((this.isOpen = !0),
              this._toggleAttr(),
              this._resizeMenu(),
              this._position(),
              this._on(this.document, this._documentClick),
              this._trigger("open", e)));
        },
        _position: function () {
          this.menuWrap.position(
            e.extend({ of: this.button }, this.options.position)
          );
        },
        close: function (e) {
          this.isOpen &&
            ((this.isOpen = !1),
            this._toggleAttr(),
            (this.range = null),
            this._off(this.document),
            this._trigger("close", e));
        },
        widget: function () {
          return this.button;
        },
        menuWidget: function () {
          return this.menu;
        },
        _renderButtonItem: function (t) {
          var i = e("<span>");
          return (
            this._setText(i, t.label),
            this._addClass(i, "ui-selectmenu-text"),
            i
          );
        },
        _renderMenu: function (t, i) {
          var n = this,
            r = "";
          e.each(i, function (i, a) {
            var s;
            a.optgroup !== r &&
              ((s = e("<li>", { text: a.optgroup })),
              n._addClass(
                s,
                "ui-selectmenu-optgroup",
                "ui-menu-divider" +
                  (a.element.parent("optgroup").prop("disabled")
                    ? " ui-state-disabled"
                    : "")
              ),
              s.appendTo(t),
              (r = a.optgroup)),
              n._renderItemData(t, a);
          });
        },
        _renderItemData: function (e, t) {
          return this._renderItem(e, t).data("ui-selectmenu-item", t);
        },
        _renderItem: function (t, i) {
          var n = e("<li>"),
            r = e("<div>", { title: i.element.attr("title") });
          return (
            i.disabled && this._addClass(n, null, "ui-state-disabled"),
            this._setText(r, i.label),
            n.append(r).appendTo(t)
          );
        },
        _setText: function (e, t) {
          t ? e.text(t) : e.html("&#160;");
        },
        _move: function (e, t) {
          var i,
            n,
            r = ".ui-menu-item";
          this.isOpen
            ? (i = this.menuItems.eq(this.focusIndex).parent("li"))
            : ((i = this.menuItems
                .eq(this.element[0].selectedIndex)
                .parent("li")),
              (r += ":not(.ui-state-disabled)")),
            (n =
              "first" === e || "last" === e
                ? i["first" === e ? "prevAll" : "nextAll"](r).eq(-1)
                : i[e + "All"](r).eq(0)).length &&
              this.menuInstance.focus(t, n);
        },
        _getSelectedItem: function () {
          return this.menuItems.eq(this.element[0].selectedIndex).parent("li");
        },
        _toggle: function (e) {
          this[this.isOpen ? "close" : "open"](e);
        },
        _setSelection: function () {
          var e;
          this.range &&
            (window.getSelection
              ? ((e = window.getSelection()).removeAllRanges(),
                e.addRange(this.range))
              : this.range.select(),
            this.button.focus());
        },
        _documentClick: {
          mousedown: function (t) {
            this.isOpen &&
              (e(t.target).closest(
                ".ui-selectmenu-menu, #" + e.ui.escapeSelector(this.ids.button)
              ).length ||
                this.close(t));
          },
        },
        _buttonEvents: {
          mousedown: function () {
            var e;
            window.getSelection
              ? (e = window.getSelection()).rangeCount &&
                (this.range = e.getRangeAt(0))
              : (this.range = document.selection.createRange());
          },
          click: function (e) {
            this._setSelection(), this._toggle(e);
          },
          keydown: function (t) {
            var i = !0;
            switch (t.keyCode) {
              case e.ui.keyCode.TAB:
              case e.ui.keyCode.ESCAPE:
                this.close(t), (i = !1);
                break;
              case e.ui.keyCode.ENTER:
                this.isOpen && this._selectFocusedItem(t);
                break;
              case e.ui.keyCode.UP:
                t.altKey ? this._toggle(t) : this._move("prev", t);
                break;
              case e.ui.keyCode.DOWN:
                t.altKey ? this._toggle(t) : this._move("next", t);
                break;
              case e.ui.keyCode.SPACE:
                this.isOpen ? this._selectFocusedItem(t) : this._toggle(t);
                break;
              case e.ui.keyCode.LEFT:
                this._move("prev", t);
                break;
              case e.ui.keyCode.RIGHT:
                this._move("next", t);
                break;
              case e.ui.keyCode.HOME:
              case e.ui.keyCode.PAGE_UP:
                this._move("first", t);
                break;
              case e.ui.keyCode.END:
              case e.ui.keyCode.PAGE_DOWN:
                this._move("last", t);
                break;
              default:
                this.menu.trigger(t), (i = !1);
            }
            i && t.preventDefault();
          },
        },
        _selectFocusedItem: function (e) {
          var t = this.menuItems.eq(this.focusIndex).parent("li");
          t.hasClass("ui-state-disabled") ||
            this._select(t.data("ui-selectmenu-item"), e);
        },
        _select: function (e, t) {
          var i = this.element[0].selectedIndex;
          (this.element[0].selectedIndex = e.index),
            this.buttonItem.replaceWith(
              (this.buttonItem = this._renderButtonItem(e))
            ),
            this._setAria(e),
            this._trigger("select", t, { item: e }),
            e.index !== i && this._trigger("change", t, { item: e }),
            this.close(t);
        },
        _setAria: function (e) {
          var t = this.menuItems.eq(e.index).attr("id");
          this.button.attr({
            "aria-labelledby": t,
            "aria-activedescendant": t,
          }),
            this.menu.attr("aria-activedescendant", t);
        },
        _setOption: function (e, t) {
          if ("icons" === e) {
            var i = this.button.find("span.ui-icon");
            this._removeClass(i, null, this.options.icons.button)._addClass(
              i,
              null,
              t.button
            );
          }
          this._super(e, t),
            "appendTo" === e && this.menuWrap.appendTo(this._appendTo()),
            "width" === e && this._resizeButton();
        },
        _setOptionDisabled: function (e) {
          this._super(e),
            this.menuInstance.option("disabled", e),
            this.button.attr("aria-disabled", e),
            this._toggleClass(this.button, null, "ui-state-disabled", e),
            this.element.prop("disabled", e),
            e
              ? (this.button.attr("tabindex", -1), this.close())
              : this.button.attr("tabindex", 0);
        },
        _appendTo: function () {
          var t = this.options.appendTo;
          return (
            t &&
              (t = t.jquery || t.nodeType ? e(t) : this.document.find(t).eq(0)),
            (t && t[0]) || (t = this.element.closest(".ui-front, dialog")),
            t.length || (t = this.document[0].body),
            t
          );
        },
        _toggleAttr: function () {
          this.button.attr("aria-expanded", this.isOpen),
            this._removeClass(
              this.button,
              "ui-selectmenu-button-" + (this.isOpen ? "closed" : "open")
            )
              ._addClass(
                this.button,
                "ui-selectmenu-button-" + (this.isOpen ? "open" : "closed")
              )
              ._toggleClass(
                this.menuWrap,
                "ui-selectmenu-open",
                null,
                this.isOpen
              ),
            this.menu.attr("aria-hidden", !this.isOpen);
        },
        _resizeButton: function () {
          var e = this.options.width;
          return !1 === e
            ? void this.button.css("width", "")
            : (null === e &&
                ((e = this.element.show().outerWidth()), this.element.hide()),
              void this.button.outerWidth(e));
        },
        _resizeMenu: function () {
          this.menu.outerWidth(
            Math.max(
              this.button.outerWidth(),
              this.menu.width("").outerWidth() + 1
            )
          );
        },
        _getCreateOptions: function () {
          var e = this._super();
          return (e.disabled = this.element.prop("disabled")), e;
        },
        _parseOptions: function (t) {
          var i = this,
            n = [];
          t.each(function (t, r) {
            n.push(i._parseOption(e(r), t));
          }),
            (this.items = n);
        },
        _parseOption: function (e, t) {
          var i = e.parent("optgroup");
          return {
            element: e,
            index: t,
            value: e.val(),
            label: e.text(),
            optgroup: i.attr("label") || "",
            disabled: i.prop("disabled") || e.prop("disabled"),
          };
        },
        _destroy: function () {
          this._unbindFormResetHandler(),
            this.menuWrap.remove(),
            this.button.remove(),
            this.element.show(),
            this.element.removeUniqueId(),
            this.labels.attr("for", this.ids.element);
        },
      },
    ]),
    e.widget("ui.slider", e.ui.mouse, {
      version: "1.12.1",
      widgetEventPrefix: "slide",
      options: {
        animate: !1,
        classes: {
          "ui-slider": "ui-corner-all",
          "ui-slider-handle": "ui-corner-all",
          "ui-slider-range": "ui-corner-all ui-widget-header",
        },
        distance: 0,
        max: 100,
        min: 0,
        orientation: "horizontal",
        range: !1,
        step: 1,
        value: 0,
        values: null,
        change: null,
        slide: null,
        start: null,
        stop: null,
      },
      numPages: 5,
      _create: function () {
        (this._keySliding = !1),
          (this._mouseSliding = !1),
          (this._animateOff = !0),
          (this._handleIndex = null),
          this._detectOrientation(),
          this._mouseInit(),
          this._calculateNewMax(),
          this._addClass(
            "ui-slider ui-slider-" + this.orientation,
            "ui-widget ui-widget-content"
          ),
          this._refresh(),
          (this._animateOff = !1);
      },
      _refresh: function () {
        this._createRange(),
          this._createHandles(),
          this._setupEvents(),
          this._refreshValue();
      },
      _createHandles: function () {
        var t,
          i,
          n = this.options,
          r = this.element.find(".ui-slider-handle"),
          a = [];
        for (
          i = (n.values && n.values.length) || 1,
            r.length > i && (r.slice(i).remove(), (r = r.slice(0, i))),
            t = r.length;
          i > t;
          t++
        )
          a.push("<span tabindex='0'></span>");
        (this.handles = r.add(e(a.join("")).appendTo(this.element))),
          this._addClass(this.handles, "ui-slider-handle", "ui-state-default"),
          (this.handle = this.handles.eq(0)),
          this.handles.each(function (t) {
            e(this).data("ui-slider-handle-index", t).attr("tabIndex", 0);
          });
      },
      _createRange: function () {
        var t = this.options;
        t.range
          ? (!0 === t.range &&
              (t.values
                ? t.values.length && 2 !== t.values.length
                  ? (t.values = [t.values[0], t.values[0]])
                  : e.isArray(t.values) && (t.values = t.values.slice(0))
                : (t.values = [this._valueMin(), this._valueMin()])),
            this.range && this.range.length
              ? (this._removeClass(
                  this.range,
                  "ui-slider-range-min ui-slider-range-max"
                ),
                this.range.css({ left: "", bottom: "" }))
              : ((this.range = e("<div>").appendTo(this.element)),
                this._addClass(this.range, "ui-slider-range")),
            ("min" === t.range || "max" === t.range) &&
              this._addClass(this.range, "ui-slider-range-" + t.range))
          : (this.range && this.range.remove(), (this.range = null));
      },
      _setupEvents: function () {
        this._off(this.handles),
          this._on(this.handles, this._handleEvents),
          this._hoverable(this.handles),
          this._focusable(this.handles);
      },
      _destroy: function () {
        this.handles.remove(),
          this.range && this.range.remove(),
          this._mouseDestroy();
      },
      _mouseCapture: function (t) {
        var i,
          n,
          r,
          a,
          s,
          o,
          l,
          c = this,
          h = this.options;
        return h.disabled
          ? !1
          : ((this.elementSize = {
              width: this.element.outerWidth(),
              height: this.element.outerHeight(),
            }),
            (this.elementOffset = this.element.offset()),
            (i = { x: t.pageX, y: t.pageY }),
            (n = this._normValueFromMouse(i)),
            (r = this._valueMax() - this._valueMin() + 1),
            this.handles.each(function (t) {
              var i = Math.abs(n - c.values(t));
              (r > i ||
                (r === i &&
                  (t === c._lastChangedValue || c.values(t) === h.min))) &&
                ((r = i), (a = e(this)), (s = t));
            }),
            !1 === this._start(t, s)
              ? !1
              : ((this._mouseSliding = !0),
                (this._handleIndex = s),
                this._addClass(a, null, "ui-state-active"),
                a.trigger("focus"),
                (o = a.offset()),
                (l = !e(t.target).parents().addBack().is(".ui-slider-handle")),
                (this._clickOffset = l
                  ? { left: 0, top: 0 }
                  : {
                      left: t.pageX - o.left - a.width() / 2,
                      top:
                        t.pageY -
                        o.top -
                        a.height() / 2 -
                        (parseInt(a.css("borderTopWidth"), 10) || 0) -
                        (parseInt(a.css("borderBottomWidth"), 10) || 0) +
                        (parseInt(a.css("marginTop"), 10) || 0),
                    }),
                this.handles.hasClass("ui-state-hover") || this._slide(t, s, n),
                (this._animateOff = !0),
                !0));
      },
      _mouseStart: function () {
        return !0;
      },
      _mouseDrag: function (e) {
        var t = { x: e.pageX, y: e.pageY },
          i = this._normValueFromMouse(t);
        return this._slide(e, this._handleIndex, i), !1;
      },
      _mouseStop: function (e) {
        return (
          this._removeClass(this.handles, null, "ui-state-active"),
          (this._mouseSliding = !1),
          this._stop(e, this._handleIndex),
          this._change(e, this._handleIndex),
          (this._handleIndex = null),
          (this._clickOffset = null),
          (this._animateOff = !1),
          !1
        );
      },
      _detectOrientation: function () {
        this.orientation =
          "vertical" === this.options.orientation ? "vertical" : "horizontal";
      },
      _normValueFromMouse: function (e) {
        var t, i, n, r, a;
        return (
          "horizontal" === this.orientation
            ? ((t = this.elementSize.width),
              (i =
                e.x -
                this.elementOffset.left -
                (this._clickOffset ? this._clickOffset.left : 0)))
            : ((t = this.elementSize.height),
              (i =
                e.y -
                this.elementOffset.top -
                (this._clickOffset ? this._clickOffset.top : 0))),
          (n = i / t) > 1 && (n = 1),
          0 > n && (n = 0),
          "vertical" === this.orientation && (n = 1 - n),
          (r = this._valueMax() - this._valueMin()),
          (a = this._valueMin() + n * r),
          this._trimAlignValue(a)
        );
      },
      _uiHash: function (e, t, i) {
        var n = {
          handle: this.handles[e],
          handleIndex: e,
          value: void 0 !== t ? t : this.value(),
        };
        return (
          this._hasMultipleValues() &&
            ((n.value = void 0 !== t ? t : this.values(e)),
            (n.values = i || this.values())),
          n
        );
      },
      _hasMultipleValues: function () {
        return this.options.values && this.options.values.length;
      },
      _start: function (e, t) {
        return this._trigger("start", e, this._uiHash(t));
      },
      _slide: function (e, t, i) {
        var n,
          r = this.value(),
          a = this.values();
        this._hasMultipleValues() &&
          ((n = this.values(t ? 0 : 1)),
          (r = this.values(t)),
          2 === this.options.values.length &&
            !0 === this.options.range &&
            (i = 0 === t ? Math.min(n, i) : Math.max(n, i)),
          (a[t] = i)),
          i !== r &&
            !1 !== this._trigger("slide", e, this._uiHash(t, i, a)) &&
            (this._hasMultipleValues() ? this.values(t, i) : this.value(i));
      },
      _stop: function (e, t) {
        this._trigger("stop", e, this._uiHash(t));
      },
      _change: function (e, t) {
        this._keySliding ||
          this._mouseSliding ||
          ((this._lastChangedValue = t),
          this._trigger("change", e, this._uiHash(t)));
      },
      value: function (e) {
        return arguments.length
          ? ((this.options.value = this._trimAlignValue(e)),
            this._refreshValue(),
            void this._change(null, 0))
          : this._value();
      },
      values: function (t, i) {
        var n, r, a;
        if (arguments.length > 1)
          return (
            (this.options.values[t] = this._trimAlignValue(i)),
            this._refreshValue(),
            void this._change(null, t)
          );
        if (!arguments.length) return this._values();
        if (!e.isArray(arguments[0]))
          return this._hasMultipleValues() ? this._values(t) : this.value();
        for (
          n = this.options.values, r = arguments[0], a = 0;
          n.length > a;
          a += 1
        )
          (n[a] = this._trimAlignValue(r[a])), this._change(null, a);
        this._refreshValue();
      },
      _setOption: function (t, i) {
        var n,
          r = 0;
        switch (
          ("range" === t &&
            !0 === this.options.range &&
            ("min" === i
              ? ((this.options.value = this._values(0)),
                (this.options.values = null))
              : "max" === i &&
                ((this.options.value = this._values(
                  this.options.values.length - 1
                )),
                (this.options.values = null))),
          e.isArray(this.options.values) && (r = this.options.values.length),
          this._super(t, i),
          t)
        ) {
          case "orientation":
            this._detectOrientation(),
              this._removeClass(
                "ui-slider-horizontal ui-slider-vertical"
              )._addClass("ui-slider-" + this.orientation),
              this._refreshValue(),
              this.options.range && this._refreshRange(i),
              this.handles.css("horizontal" === i ? "bottom" : "left", "");
            break;
          case "value":
            (this._animateOff = !0),
              this._refreshValue(),
              this._change(null, 0),
              (this._animateOff = !1);
            break;
          case "values":
            for (
              this._animateOff = !0, this._refreshValue(), n = r - 1;
              n >= 0;
              n--
            )
              this._change(null, n);
            this._animateOff = !1;
            break;
          case "step":
          case "min":
          case "max":
            (this._animateOff = !0),
              this._calculateNewMax(),
              this._refreshValue(),
              (this._animateOff = !1);
            break;
          case "range":
            (this._animateOff = !0), this._refresh(), (this._animateOff = !1);
        }
      },
      _setOptionDisabled: function (e) {
        this._super(e), this._toggleClass(null, "ui-state-disabled", !!e);
      },
      _value: function () {
        var e = this.options.value;
        return this._trimAlignValue(e);
      },
      _values: function (e) {
        var t, i, n;
        if (arguments.length)
          return (t = this.options.values[e]), this._trimAlignValue(t);
        if (this._hasMultipleValues()) {
          for (i = this.options.values.slice(), n = 0; i.length > n; n += 1)
            i[n] = this._trimAlignValue(i[n]);
          return i;
        }
        return [];
      },
      _trimAlignValue: function (e) {
        if (this._valueMin() >= e) return this._valueMin();
        if (e >= this._valueMax()) return this._valueMax();
        var t = this.options.step > 0 ? this.options.step : 1,
          i = (e - this._valueMin()) % t,
          n = e - i;
        return (
          2 * Math.abs(i) >= t && (n += i > 0 ? t : -t),
          parseFloat(n.toFixed(5))
        );
      },
      _calculateNewMax: function () {
        var e = this.options.max,
          t = this._valueMin(),
          i = this.options.step;
        (e = Math.round((e - t) / i) * i + t) > this.options.max && (e -= i),
          (this.max = parseFloat(e.toFixed(this._precision())));
      },
      _precision: function () {
        var e = this._precisionOf(this.options.step);
        return (
          null !== this.options.min &&
            (e = Math.max(e, this._precisionOf(this.options.min))),
          e
        );
      },
      _precisionOf: function (e) {
        var t = "" + e,
          i = t.indexOf(".");
        return -1 === i ? 0 : t.length - i - 1;
      },
      _valueMin: function () {
        return this.options.min;
      },
      _valueMax: function () {
        return this.max;
      },
      _refreshRange: function (e) {
        "vertical" === e && this.range.css({ width: "", left: "" }),
          "horizontal" === e && this.range.css({ height: "", bottom: "" });
      },
      _refreshValue: function () {
        var t,
          i,
          n,
          r,
          a,
          s = this.options.range,
          o = this.options,
          l = this,
          c = this._animateOff ? !1 : o.animate,
          h = {};
        this._hasMultipleValues()
          ? this.handles.each(function (n) {
              (i =
                ((l.values(n) - l._valueMin()) /
                  (l._valueMax() - l._valueMin())) *
                100),
                (h["horizontal" === l.orientation ? "left" : "bottom"] =
                  i + "%"),
                e(this).stop(1, 1)[c ? "animate" : "css"](h, o.animate),
                !0 === l.options.range &&
                  ("horizontal" === l.orientation
                    ? (0 === n &&
                        l.range
                          .stop(1, 1)
                          [c ? "animate" : "css"]({ left: i + "%" }, o.animate),
                      1 === n &&
                        l.range[c ? "animate" : "css"](
                          { width: i - t + "%" },
                          { queue: !1, duration: o.animate }
                        ))
                    : (0 === n &&
                        l.range
                          .stop(1, 1)
                          [c ? "animate" : "css"](
                            { bottom: i + "%" },
                            o.animate
                          ),
                      1 === n &&
                        l.range[c ? "animate" : "css"](
                          { height: i - t + "%" },
                          { queue: !1, duration: o.animate }
                        ))),
                (t = i);
            })
          : ((n = this.value()),
            (r = this._valueMin()),
            (a = this._valueMax()),
            (i = a !== r ? ((n - r) / (a - r)) * 100 : 0),
            (h["horizontal" === this.orientation ? "left" : "bottom"] =
              i + "%"),
            this.handle.stop(1, 1)[c ? "animate" : "css"](h, o.animate),
            "min" === s &&
              "horizontal" === this.orientation &&
              this.range
                .stop(1, 1)
                [c ? "animate" : "css"]({ width: i + "%" }, o.animate),
            "max" === s &&
              "horizontal" === this.orientation &&
              this.range
                .stop(1, 1)
                [c ? "animate" : "css"]({ width: 100 - i + "%" }, o.animate),
            "min" === s &&
              "vertical" === this.orientation &&
              this.range
                .stop(1, 1)
                [c ? "animate" : "css"]({ height: i + "%" }, o.animate),
            "max" === s &&
              "vertical" === this.orientation &&
              this.range
                .stop(1, 1)
                [c ? "animate" : "css"]({ height: 100 - i + "%" }, o.animate));
      },
      _handleEvents: {
        keydown: function (t) {
          var i,
            n,
            r,
            a = e(t.target).data("ui-slider-handle-index");
          switch (t.keyCode) {
            case e.ui.keyCode.HOME:
            case e.ui.keyCode.END:
            case e.ui.keyCode.PAGE_UP:
            case e.ui.keyCode.PAGE_DOWN:
            case e.ui.keyCode.UP:
            case e.ui.keyCode.RIGHT:
            case e.ui.keyCode.DOWN:
            case e.ui.keyCode.LEFT:
              if (
                (t.preventDefault(),
                !this._keySliding &&
                  ((this._keySliding = !0),
                  this._addClass(e(t.target), null, "ui-state-active"),
                  !1 === this._start(t, a)))
              )
                return;
          }
          switch (
            ((r = this.options.step),
            (i = n = this._hasMultipleValues() ? this.values(a) : this.value()),
            t.keyCode)
          ) {
            case e.ui.keyCode.HOME:
              n = this._valueMin();
              break;
            case e.ui.keyCode.END:
              n = this._valueMax();
              break;
            case e.ui.keyCode.PAGE_UP:
              n = this._trimAlignValue(
                i + (this._valueMax() - this._valueMin()) / this.numPages
              );
              break;
            case e.ui.keyCode.PAGE_DOWN:
              n = this._trimAlignValue(
                i - (this._valueMax() - this._valueMin()) / this.numPages
              );
              break;
            case e.ui.keyCode.UP:
            case e.ui.keyCode.RIGHT:
              if (i === this._valueMax()) return;
              n = this._trimAlignValue(i + r);
              break;
            case e.ui.keyCode.DOWN:
            case e.ui.keyCode.LEFT:
              if (i === this._valueMin()) return;
              n = this._trimAlignValue(i - r);
          }
          this._slide(t, a, n);
        },
        keyup: function (t) {
          var i = e(t.target).data("ui-slider-handle-index");
          this._keySliding &&
            ((this._keySliding = !1),
            this._stop(t, i),
            this._change(t, i),
            this._removeClass(e(t.target), null, "ui-state-active"));
        },
      },
    }),
    e.widget("ui.sortable", e.ui.mouse, {
      version: "1.12.1",
      widgetEventPrefix: "sort",
      ready: !1,
      options: {
        appendTo: "parent",
        axis: !1,
        connectWith: !1,
        containment: !1,
        cursor: "auto",
        cursorAt: !1,
        dropOnEmpty: !0,
        forcePlaceholderSize: !1,
        forceHelperSize: !1,
        grid: !1,
        handle: !1,
        helper: "original",
        items: "> *",
        opacity: !1,
        placeholder: !1,
        revert: !1,
        scroll: !0,
        scrollSensitivity: 20,
        scrollSpeed: 20,
        scope: "default",
        tolerance: "intersect",
        zIndex: 1e3,
        activate: null,
        beforeStop: null,
        change: null,
        deactivate: null,
        out: null,
        over: null,
        receive: null,
        remove: null,
        sort: null,
        start: null,
        stop: null,
        update: null,
      },
      _isOverAxis: function (e, t, i) {
        return e >= t && t + i > e;
      },
      _isFloating: function (e) {
        return (
          /left|right/.test(e.css("float")) ||
          /inline|table-cell/.test(e.css("display"))
        );
      },
      _create: function () {
        (this.containerCache = {}),
          this._addClass("ui-sortable"),
          this.refresh(),
          (this.offset = this.element.offset()),
          this._mouseInit(),
          this._setHandleClassName(),
          (this.ready = !0);
      },
      _setOption: function (e, t) {
        this._super(e, t), "handle" === e && this._setHandleClassName();
      },
      _setHandleClassName: function () {
        var t = this;
        this._removeClass(
          this.element.find(".ui-sortable-handle"),
          "ui-sortable-handle"
        ),
          e.each(this.items, function () {
            t._addClass(
              this.instance.options.handle
                ? this.item.find(this.instance.options.handle)
                : this.item,
              "ui-sortable-handle"
            );
          });
      },
      _destroy: function () {
        this._mouseDestroy();
        for (var e = this.items.length - 1; e >= 0; e--)
          this.items[e].item.removeData(this.widgetName + "-item");
        return this;
      },
      _mouseCapture: function (t, i) {
        var n = null,
          r = !1,
          a = this;
        return this.reverting
          ? !1
          : this.options.disabled || "static" === this.options.type
          ? !1
          : (this._refreshItems(t),
            e(t.target)
              .parents()
              .each(function () {
                return e.data(this, a.widgetName + "-item") === a
                  ? ((n = e(this)), !1)
                  : void 0;
              }),
            e.data(t.target, a.widgetName + "-item") === a && (n = e(t.target)),
            n
              ? !this.options.handle ||
                i ||
                (e(this.options.handle, n)
                  .find("*")
                  .addBack()
                  .each(function () {
                    this === t.target && (r = !0);
                  }),
                r)
                ? ((this.currentItem = n), this._removeCurrentsFromItems(), !0)
                : !1
              : !1);
      },
      _mouseStart: function (t, i, n) {
        var r,
          a,
          s = this.options;
        if (
          ((this.currentContainer = this),
          this.refreshPositions(),
          (this.helper = this._createHelper(t)),
          this._cacheHelperProportions(),
          this._cacheMargins(),
          (this.scrollParent = this.helper.scrollParent()),
          (this.offset = this.currentItem.offset()),
          (this.offset = {
            top: this.offset.top - this.margins.top,
            left: this.offset.left - this.margins.left,
          }),
          e.extend(this.offset, {
            click: {
              left: t.pageX - this.offset.left,
              top: t.pageY - this.offset.top,
            },
            parent: this._getParentOffset(),
            relative: this._getRelativeOffset(),
          }),
          this.helper.css("position", "absolute"),
          (this.cssPosition = this.helper.css("position")),
          (this.originalPosition = this._generatePosition(t)),
          (this.originalPageX = t.pageX),
          (this.originalPageY = t.pageY),
          s.cursorAt && this._adjustOffsetFromHelper(s.cursorAt),
          (this.domPosition = {
            prev: this.currentItem.prev()[0],
            parent: this.currentItem.parent()[0],
          }),
          this.helper[0] !== this.currentItem[0] && this.currentItem.hide(),
          this._createPlaceholder(),
          s.containment && this._setContainment(),
          s.cursor &&
            "auto" !== s.cursor &&
            ((a = this.document.find("body")),
            (this.storedCursor = a.css("cursor")),
            a.css("cursor", s.cursor),
            (this.storedStylesheet = e(
              "<style>*{ cursor: " + s.cursor + " !important; }</style>"
            ).appendTo(a))),
          s.opacity &&
            (this.helper.css("opacity") &&
              (this._storedOpacity = this.helper.css("opacity")),
            this.helper.css("opacity", s.opacity)),
          s.zIndex &&
            (this.helper.css("zIndex") &&
              (this._storedZIndex = this.helper.css("zIndex")),
            this.helper.css("zIndex", s.zIndex)),
          this.scrollParent[0] !== this.document[0] &&
            "HTML" !== this.scrollParent[0].tagName &&
            (this.overflowOffset = this.scrollParent.offset()),
          this._trigger("start", t, this._uiHash()),
          this._preserveHelperProportions || this._cacheHelperProportions(),
          !n)
        )
          for (r = this.containers.length - 1; r >= 0; r--)
            this.containers[r]._trigger("activate", t, this._uiHash(this));
        return (
          e.ui.ddmanager && (e.ui.ddmanager.current = this),
          e.ui.ddmanager &&
            !s.dropBehaviour &&
            e.ui.ddmanager.prepareOffsets(this, t),
          (this.dragging = !0),
          this._addClass(this.helper, "ui-sortable-helper"),
          this._mouseDrag(t),
          !0
        );
      },
      _mouseDrag: function (t) {
        var i,
          n,
          r,
          a,
          s = this.options,
          o = !1;
        for (
          this.position = this._generatePosition(t),
            this.positionAbs = this._convertPositionTo("absolute"),
            this.lastPositionAbs || (this.lastPositionAbs = this.positionAbs),
            this.options.scroll &&
              (this.scrollParent[0] !== this.document[0] &&
              "HTML" !== this.scrollParent[0].tagName
                ? (this.overflowOffset.top +
                    this.scrollParent[0].offsetHeight -
                    t.pageY <
                  s.scrollSensitivity
                    ? (this.scrollParent[0].scrollTop = o =
                        this.scrollParent[0].scrollTop + s.scrollSpeed)
                    : t.pageY - this.overflowOffset.top < s.scrollSensitivity &&
                      (this.scrollParent[0].scrollTop = o =
                        this.scrollParent[0].scrollTop - s.scrollSpeed),
                  this.overflowOffset.left +
                    this.scrollParent[0].offsetWidth -
                    t.pageX <
                  s.scrollSensitivity
                    ? (this.scrollParent[0].scrollLeft = o =
                        this.scrollParent[0].scrollLeft + s.scrollSpeed)
                    : t.pageX - this.overflowOffset.left <
                        s.scrollSensitivity &&
                      (this.scrollParent[0].scrollLeft = o =
                        this.scrollParent[0].scrollLeft - s.scrollSpeed))
                : (t.pageY - this.document.scrollTop() < s.scrollSensitivity
                    ? (o = this.document.scrollTop(
                        this.document.scrollTop() - s.scrollSpeed
                      ))
                    : this.window.height() -
                        (t.pageY - this.document.scrollTop()) <
                        s.scrollSensitivity &&
                      (o = this.document.scrollTop(
                        this.document.scrollTop() + s.scrollSpeed
                      )),
                  t.pageX - this.document.scrollLeft() < s.scrollSensitivity
                    ? (o = this.document.scrollLeft(
                        this.document.scrollLeft() - s.scrollSpeed
                      ))
                    : this.window.width() -
                        (t.pageX - this.document.scrollLeft()) <
                        s.scrollSensitivity &&
                      (o = this.document.scrollLeft(
                        this.document.scrollLeft() + s.scrollSpeed
                      ))),
              !1 !== o &&
                e.ui.ddmanager &&
                !s.dropBehaviour &&
                e.ui.ddmanager.prepareOffsets(this, t)),
            this.positionAbs = this._convertPositionTo("absolute"),
            (this.options.axis && "y" === this.options.axis) ||
              (this.helper[0].style.left = this.position.left + "px"),
            (this.options.axis && "x" === this.options.axis) ||
              (this.helper[0].style.top = this.position.top + "px"),
            i = this.items.length - 1;
          i >= 0;
          i--
        )
          if (
            ((r = (n = this.items[i]).item[0]),
            (a = this._intersectsWithPointer(n)) &&
              n.instance === this.currentContainer &&
              r !== this.currentItem[0] &&
              this.placeholder[1 === a ? "next" : "prev"]()[0] !== r &&
              !e.contains(this.placeholder[0], r) &&
              ("semi-dynamic" === this.options.type
                ? !e.contains(this.element[0], r)
                : 1))
          ) {
            if (
              ((this.direction = 1 === a ? "down" : "up"),
              "pointer" !== this.options.tolerance &&
                !this._intersectsWithSides(n))
            )
              break;
            this._rearrange(t, n), this._trigger("change", t, this._uiHash());
            break;
          }
        return (
          this._contactContainers(t),
          e.ui.ddmanager && e.ui.ddmanager.drag(this, t),
          this._trigger("sort", t, this._uiHash()),
          (this.lastPositionAbs = this.positionAbs),
          !1
        );
      },
      _mouseStop: function (t, i) {
        if (t) {
          if (
            (e.ui.ddmanager &&
              !this.options.dropBehaviour &&
              e.ui.ddmanager.drop(this, t),
            this.options.revert)
          ) {
            var n = this,
              r = this.placeholder.offset(),
              a = this.options.axis,
              s = {};
            (a && "x" !== a) ||
              (s.left =
                r.left -
                this.offset.parent.left -
                this.margins.left +
                (this.offsetParent[0] === this.document[0].body
                  ? 0
                  : this.offsetParent[0].scrollLeft)),
              (a && "y" !== a) ||
                (s.top =
                  r.top -
                  this.offset.parent.top -
                  this.margins.top +
                  (this.offsetParent[0] === this.document[0].body
                    ? 0
                    : this.offsetParent[0].scrollTop)),
              (this.reverting = !0),
              e(this.helper).animate(
                s,
                parseInt(this.options.revert, 10) || 500,
                function () {
                  n._clear(t);
                }
              );
          } else this._clear(t, i);
          return !1;
        }
      },
      cancel: function () {
        if (this.dragging) {
          this._mouseUp(new e.Event("mouseup", { target: null })),
            "original" === this.options.helper
              ? (this.currentItem.css(this._storedCSS),
                this._removeClass(this.currentItem, "ui-sortable-helper"))
              : this.currentItem.show();
          for (var t = this.containers.length - 1; t >= 0; t--)
            this.containers[t]._trigger("deactivate", null, this._uiHash(this)),
              this.containers[t].containerCache.over &&
                (this.containers[t]._trigger("out", null, this._uiHash(this)),
                (this.containers[t].containerCache.over = 0));
        }
        return (
          this.placeholder &&
            (this.placeholder[0].parentNode &&
              this.placeholder[0].parentNode.removeChild(this.placeholder[0]),
            "original" !== this.options.helper &&
              this.helper &&
              this.helper[0].parentNode &&
              this.helper.remove(),
            e.extend(this, {
              helper: null,
              dragging: !1,
              reverting: !1,
              _noFinalSort: null,
            }),
            this.domPosition.prev
              ? e(this.domPosition.prev).after(this.currentItem)
              : e(this.domPosition.parent).prepend(this.currentItem)),
          this
        );
      },
      serialize: function (t) {
        var i = this._getItemsAsjQuery(t && t.connected),
          n = [];
        return (
          (t = t || {}),
          e(i).each(function () {
            var i = (e(t.item || this).attr(t.attribute || "id") || "").match(
              t.expression || /(.+)[\-=_](.+)/
            );
            i &&
              n.push(
                (t.key || i[1] + "[]") +
                  "=" +
                  (t.key && t.expression ? i[1] : i[2])
              );
          }),
          !n.length && t.key && n.push(t.key + "="),
          n.join("&")
        );
      },
      toArray: function (t) {
        var i = this._getItemsAsjQuery(t && t.connected),
          n = [];
        return (
          (t = t || {}),
          i.each(function () {
            n.push(e(t.item || this).attr(t.attribute || "id") || "");
          }),
          n
        );
      },
      _intersectsWith: function (e) {
        var t = this.positionAbs.left,
          i = t + this.helperProportions.width,
          n = this.positionAbs.top,
          r = n + this.helperProportions.height,
          a = e.left,
          s = a + e.width,
          o = e.top,
          l = o + e.height,
          c = this.offset.click.top,
          h = this.offset.click.left,
          u = "x" === this.options.axis || (n + c > o && l > n + c),
          d = "y" === this.options.axis || (t + h > a && s > t + h),
          f = u && d;
        return "pointer" === this.options.tolerance ||
          this.options.forcePointerForContainers ||
          ("pointer" !== this.options.tolerance &&
            this.helperProportions[this.floating ? "width" : "height"] >
              e[this.floating ? "width" : "height"])
          ? f
          : t + this.helperProportions.width / 2 > a &&
              s > i - this.helperProportions.width / 2 &&
              n + this.helperProportions.height / 2 > o &&
              l > r - this.helperProportions.height / 2;
      },
      _intersectsWithPointer: function (e) {
        var t,
          i,
          n =
            "x" === this.options.axis ||
            this._isOverAxis(
              this.positionAbs.top + this.offset.click.top,
              e.top,
              e.height
            ),
          r =
            "y" === this.options.axis ||
            this._isOverAxis(
              this.positionAbs.left + this.offset.click.left,
              e.left,
              e.width
            );
        return n && r
          ? ((t = this._getDragVerticalDirection()),
            (i = this._getDragHorizontalDirection()),
            this.floating
              ? "right" === i || "down" === t
                ? 2
                : 1
              : t && ("down" === t ? 2 : 1))
          : !1;
      },
      _intersectsWithSides: function (e) {
        var t = this._isOverAxis(
            this.positionAbs.top + this.offset.click.top,
            e.top + e.height / 2,
            e.height
          ),
          i = this._isOverAxis(
            this.positionAbs.left + this.offset.click.left,
            e.left + e.width / 2,
            e.width
          ),
          n = this._getDragVerticalDirection(),
          r = this._getDragHorizontalDirection();
        return this.floating && r
          ? ("right" === r && i) || ("left" === r && !i)
          : n && (("down" === n && t) || ("up" === n && !t));
      },
      _getDragVerticalDirection: function () {
        var e = this.positionAbs.top - this.lastPositionAbs.top;
        return 0 !== e && (e > 0 ? "down" : "up");
      },
      _getDragHorizontalDirection: function () {
        var e = this.positionAbs.left - this.lastPositionAbs.left;
        return 0 !== e && (e > 0 ? "right" : "left");
      },
      refresh: function (e) {
        return (
          this._refreshItems(e),
          this._setHandleClassName(),
          this.refreshPositions(),
          this
        );
      },
      _connectWith: function () {
        var e = this.options;
        return e.connectWith.constructor === String
          ? [e.connectWith]
          : e.connectWith;
      },
      _getItemsAsjQuery: function (t) {
        function i() {
          o.push(this);
        }
        var n,
          r,
          a,
          s,
          o = [],
          l = [],
          c = this._connectWith();
        if (c && t)
          for (n = c.length - 1; n >= 0; n--)
            for (r = (a = e(c[n], this.document[0])).length - 1; r >= 0; r--)
              (s = e.data(a[r], this.widgetFullName)) &&
                s !== this &&
                !s.options.disabled &&
                l.push([
                  e.isFunction(s.options.items)
                    ? s.options.items.call(s.element)
                    : e(s.options.items, s.element)
                        .not(".ui-sortable-helper")
                        .not(".ui-sortable-placeholder"),
                  s,
                ]);
        for (
          l.push([
            e.isFunction(this.options.items)
              ? this.options.items.call(this.element, null, {
                  options: this.options,
                  item: this.currentItem,
                })
              : e(this.options.items, this.element)
                  .not(".ui-sortable-helper")
                  .not(".ui-sortable-placeholder"),
            this,
          ]),
            n = l.length - 1;
          n >= 0;
          n--
        )
          l[n][0].each(i);
        return e(o);
      },
      _removeCurrentsFromItems: function () {
        var t = this.currentItem.find(":data(" + this.widgetName + "-item)");
        this.items = e.grep(this.items, function (e) {
          for (var i = 0; t.length > i; i++) if (t[i] === e.item[0]) return !1;
          return !0;
        });
      },
      _refreshItems: function (t) {
        (this.items = []), (this.containers = [this]);
        var i,
          n,
          r,
          a,
          s,
          o,
          l,
          c,
          h = this.items,
          u = [
            [
              e.isFunction(this.options.items)
                ? this.options.items.call(this.element[0], t, {
                    item: this.currentItem,
                  })
                : e(this.options.items, this.element),
              this,
            ],
          ],
          d = this._connectWith();
        if (d && this.ready)
          for (i = d.length - 1; i >= 0; i--)
            for (n = (r = e(d[i], this.document[0])).length - 1; n >= 0; n--)
              (a = e.data(r[n], this.widgetFullName)) &&
                a !== this &&
                !a.options.disabled &&
                (u.push([
                  e.isFunction(a.options.items)
                    ? a.options.items.call(a.element[0], t, {
                        item: this.currentItem,
                      })
                    : e(a.options.items, a.element),
                  a,
                ]),
                this.containers.push(a));
        for (i = u.length - 1; i >= 0; i--)
          for (s = u[i][1], n = 0, c = (o = u[i][0]).length; c > n; n++)
            (l = e(o[n])).data(this.widgetName + "-item", s),
              h.push({
                item: l,
                instance: s,
                width: 0,
                height: 0,
                left: 0,
                top: 0,
              });
      },
      refreshPositions: function (t) {
        (this.floating = this.items.length
          ? "x" === this.options.axis || this._isFloating(this.items[0].item)
          : !1),
          this.offsetParent &&
            this.helper &&
            (this.offset.parent = this._getParentOffset());
        var i, n, r, a;
        for (i = this.items.length - 1; i >= 0; i--)
          ((n = this.items[i]).instance !== this.currentContainer &&
            this.currentContainer &&
            n.item[0] !== this.currentItem[0]) ||
            ((r = this.options.toleranceElement
              ? e(this.options.toleranceElement, n.item)
              : n.item),
            t || ((n.width = r.outerWidth()), (n.height = r.outerHeight())),
            (a = r.offset()),
            (n.left = a.left),
            (n.top = a.top));
        if (this.options.custom && this.options.custom.refreshContainers)
          this.options.custom.refreshContainers.call(this);
        else
          for (i = this.containers.length - 1; i >= 0; i--)
            (a = this.containers[i].element.offset()),
              (this.containers[i].containerCache.left = a.left),
              (this.containers[i].containerCache.top = a.top),
              (this.containers[i].containerCache.width =
                this.containers[i].element.outerWidth()),
              (this.containers[i].containerCache.height =
                this.containers[i].element.outerHeight());
        return this;
      },
      _createPlaceholder: function (t) {
        var i,
          n = (t = t || this).options;
        (n.placeholder && n.placeholder.constructor !== String) ||
          ((i = n.placeholder),
          (n.placeholder = {
            element: function () {
              var n = t.currentItem[0].nodeName.toLowerCase(),
                r = e("<" + n + ">", t.document[0]);
              return (
                t
                  ._addClass(
                    r,
                    "ui-sortable-placeholder",
                    i || t.currentItem[0].className
                  )
                  ._removeClass(r, "ui-sortable-helper"),
                "tbody" === n
                  ? t._createTrPlaceholder(
                      t.currentItem.find("tr").eq(0),
                      e("<tr>", t.document[0]).appendTo(r)
                    )
                  : "tr" === n
                  ? t._createTrPlaceholder(t.currentItem, r)
                  : "img" === n && r.attr("src", t.currentItem.attr("src")),
                i || r.css("visibility", "hidden"),
                r
              );
            },
            update: function (e, r) {
              (!i || n.forcePlaceholderSize) &&
                (r.height() ||
                  r.height(
                    t.currentItem.innerHeight() -
                      parseInt(t.currentItem.css("paddingTop") || 0, 10) -
                      parseInt(t.currentItem.css("paddingBottom") || 0, 10)
                  ),
                r.width() ||
                  r.width(
                    t.currentItem.innerWidth() -
                      parseInt(t.currentItem.css("paddingLeft") || 0, 10) -
                      parseInt(t.currentItem.css("paddingRight") || 0, 10)
                  ));
            },
          })),
          (t.placeholder = e(
            n.placeholder.element.call(t.element, t.currentItem)
          )),
          t.currentItem.after(t.placeholder),
          n.placeholder.update(t, t.placeholder);
      },
      _createTrPlaceholder: function (t, i) {
        var n = this;
        t.children().each(function () {
          e("<td>&#160;</td>", n.document[0])
            .attr("colspan", e(this).attr("colspan") || 1)
            .appendTo(i);
        });
      },
      _contactContainers: function (t) {
        var i,
          n,
          r,
          a,
          s,
          o,
          l,
          c,
          h,
          u,
          d = null,
          f = null;
        for (i = this.containers.length - 1; i >= 0; i--)
          if (!e.contains(this.currentItem[0], this.containers[i].element[0]))
            if (this._intersectsWith(this.containers[i].containerCache)) {
              if (d && e.contains(this.containers[i].element[0], d.element[0]))
                continue;
              (d = this.containers[i]), (f = i);
            } else
              this.containers[i].containerCache.over &&
                (this.containers[i]._trigger("out", t, this._uiHash(this)),
                (this.containers[i].containerCache.over = 0));
        if (d)
          if (1 === this.containers.length)
            this.containers[f].containerCache.over ||
              (this.containers[f]._trigger("over", t, this._uiHash(this)),
              (this.containers[f].containerCache.over = 1));
          else {
            for (
              r = 1e4,
                a = null,
                s = (h = d.floating || this._isFloating(this.currentItem))
                  ? "left"
                  : "top",
                o = h ? "width" : "height",
                u = h ? "pageX" : "pageY",
                n = this.items.length - 1;
              n >= 0;
              n--
            )
              e.contains(
                this.containers[f].element[0],
                this.items[n].item[0]
              ) &&
                this.items[n].item[0] !== this.currentItem[0] &&
                ((l = this.items[n].item.offset()[s]),
                (c = !1),
                t[u] - l > this.items[n][o] / 2 && (c = !0),
                r > Math.abs(t[u] - l) &&
                  ((r = Math.abs(t[u] - l)),
                  (a = this.items[n]),
                  (this.direction = c ? "up" : "down")));
            if (!a && !this.options.dropOnEmpty) return;
            if (this.currentContainer === this.containers[f])
              return void (
                this.currentContainer.containerCache.over ||
                (this.containers[f]._trigger("over", t, this._uiHash()),
                (this.currentContainer.containerCache.over = 1))
              );
            a
              ? this._rearrange(t, a, null, !0)
              : this._rearrange(t, null, this.containers[f].element, !0),
              this._trigger("change", t, this._uiHash()),
              this.containers[f]._trigger("change", t, this._uiHash(this)),
              (this.currentContainer = this.containers[f]),
              this.options.placeholder.update(
                this.currentContainer,
                this.placeholder
              ),
              this.containers[f]._trigger("over", t, this._uiHash(this)),
              (this.containers[f].containerCache.over = 1);
          }
      },
      _createHelper: function (t) {
        var i = this.options,
          n = e.isFunction(i.helper)
            ? e(i.helper.apply(this.element[0], [t, this.currentItem]))
            : "clone" === i.helper
            ? this.currentItem.clone()
            : this.currentItem;
        return (
          n.parents("body").length ||
            e(
              "parent" !== i.appendTo
                ? i.appendTo
                : this.currentItem[0].parentNode
            )[0].appendChild(n[0]),
          n[0] === this.currentItem[0] &&
            (this._storedCSS = {
              width: this.currentItem[0].style.width,
              height: this.currentItem[0].style.height,
              position: this.currentItem.css("position"),
              top: this.currentItem.css("top"),
              left: this.currentItem.css("left"),
            }),
          (!n[0].style.width || i.forceHelperSize) &&
            n.width(this.currentItem.width()),
          (!n[0].style.height || i.forceHelperSize) &&
            n.height(this.currentItem.height()),
          n
        );
      },
      _adjustOffsetFromHelper: function (t) {
        "string" == typeof t && (t = t.split(" ")),
          e.isArray(t) && (t = { left: +t[0], top: +t[1] || 0 }),
          "left" in t && (this.offset.click.left = t.left + this.margins.left),
          "right" in t &&
            (this.offset.click.left =
              this.helperProportions.width - t.right + this.margins.left),
          "top" in t && (this.offset.click.top = t.top + this.margins.top),
          "bottom" in t &&
            (this.offset.click.top =
              this.helperProportions.height - t.bottom + this.margins.top);
      },
      _getParentOffset: function () {
        this.offsetParent = this.helper.offsetParent();
        var t = this.offsetParent.offset();
        return (
          "absolute" === this.cssPosition &&
            this.scrollParent[0] !== this.document[0] &&
            e.contains(this.scrollParent[0], this.offsetParent[0]) &&
            ((t.left += this.scrollParent.scrollLeft()),
            (t.top += this.scrollParent.scrollTop())),
          (this.offsetParent[0] === this.document[0].body ||
            (this.offsetParent[0].tagName &&
              "html" === this.offsetParent[0].tagName.toLowerCase() &&
              e.ui.ie)) &&
            (t = { top: 0, left: 0 }),
          {
            top:
              t.top +
              (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0),
            left:
              t.left +
              (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0),
          }
        );
      },
      _getRelativeOffset: function () {
        if ("relative" === this.cssPosition) {
          var e = this.currentItem.position();
          return {
            top:
              e.top -
              (parseInt(this.helper.css("top"), 10) || 0) +
              this.scrollParent.scrollTop(),
            left:
              e.left -
              (parseInt(this.helper.css("left"), 10) || 0) +
              this.scrollParent.scrollLeft(),
          };
        }
        return { top: 0, left: 0 };
      },
      _cacheMargins: function () {
        this.margins = {
          left: parseInt(this.currentItem.css("marginLeft"), 10) || 0,
          top: parseInt(this.currentItem.css("marginTop"), 10) || 0,
        };
      },
      _cacheHelperProportions: function () {
        this.helperProportions = {
          width: this.helper.outerWidth(),
          height: this.helper.outerHeight(),
        };
      },
      _setContainment: function () {
        var t,
          i,
          n,
          r = this.options;
        "parent" === r.containment &&
          (r.containment = this.helper[0].parentNode),
          ("document" === r.containment || "window" === r.containment) &&
            (this.containment = [
              0 - this.offset.relative.left - this.offset.parent.left,
              0 - this.offset.relative.top - this.offset.parent.top,
              "document" === r.containment
                ? this.document.width()
                : this.window.width() -
                  this.helperProportions.width -
                  this.margins.left,
              ("document" === r.containment
                ? this.document.height() ||
                  document.body.parentNode.scrollHeight
                : this.window.height() ||
                  this.document[0].body.parentNode.scrollHeight) -
                this.helperProportions.height -
                this.margins.top,
            ]),
          /^(document|window|parent)$/.test(r.containment) ||
            ((t = e(r.containment)[0]),
            (i = e(r.containment).offset()),
            (n = "hidden" !== e(t).css("overflow")),
            (this.containment = [
              i.left +
                (parseInt(e(t).css("borderLeftWidth"), 10) || 0) +
                (parseInt(e(t).css("paddingLeft"), 10) || 0) -
                this.margins.left,
              i.top +
                (parseInt(e(t).css("borderTopWidth"), 10) || 0) +
                (parseInt(e(t).css("paddingTop"), 10) || 0) -
                this.margins.top,
              i.left +
                (n ? Math.max(t.scrollWidth, t.offsetWidth) : t.offsetWidth) -
                (parseInt(e(t).css("borderLeftWidth"), 10) || 0) -
                (parseInt(e(t).css("paddingRight"), 10) || 0) -
                this.helperProportions.width -
                this.margins.left,
              i.top +
                (n
                  ? Math.max(t.scrollHeight, t.offsetHeight)
                  : t.offsetHeight) -
                (parseInt(e(t).css("borderTopWidth"), 10) || 0) -
                (parseInt(e(t).css("paddingBottom"), 10) || 0) -
                this.helperProportions.height -
                this.margins.top,
            ]));
      },
      _convertPositionTo: function (t, i) {
        i || (i = this.position);
        var n = "absolute" === t ? 1 : -1,
          r =
            "absolute" !== this.cssPosition ||
            (this.scrollParent[0] !== this.document[0] &&
              e.contains(this.scrollParent[0], this.offsetParent[0]))
              ? this.scrollParent
              : this.offsetParent,
          a = /(html|body)/i.test(r[0].tagName);
        return {
          top:
            i.top +
            this.offset.relative.top * n +
            this.offset.parent.top * n -
            ("fixed" === this.cssPosition
              ? -this.scrollParent.scrollTop()
              : a
              ? 0
              : r.scrollTop()) *
              n,
          left:
            i.left +
            this.offset.relative.left * n +
            this.offset.parent.left * n -
            ("fixed" === this.cssPosition
              ? -this.scrollParent.scrollLeft()
              : a
              ? 0
              : r.scrollLeft()) *
              n,
        };
      },
      _generatePosition: function (t) {
        var i,
          n,
          r = this.options,
          a = t.pageX,
          s = t.pageY,
          o =
            "absolute" !== this.cssPosition ||
            (this.scrollParent[0] !== this.document[0] &&
              e.contains(this.scrollParent[0], this.offsetParent[0]))
              ? this.scrollParent
              : this.offsetParent,
          l = /(html|body)/i.test(o[0].tagName);
        return (
          "relative" !== this.cssPosition ||
            (this.scrollParent[0] !== this.document[0] &&
              this.scrollParent[0] !== this.offsetParent[0]) ||
            (this.offset.relative = this._getRelativeOffset()),
          this.originalPosition &&
            (this.containment &&
              (t.pageX - this.offset.click.left < this.containment[0] &&
                (a = this.containment[0] + this.offset.click.left),
              t.pageY - this.offset.click.top < this.containment[1] &&
                (s = this.containment[1] + this.offset.click.top),
              t.pageX - this.offset.click.left > this.containment[2] &&
                (a = this.containment[2] + this.offset.click.left),
              t.pageY - this.offset.click.top > this.containment[3] &&
                (s = this.containment[3] + this.offset.click.top)),
            r.grid &&
              ((i =
                this.originalPageY +
                Math.round((s - this.originalPageY) / r.grid[1]) * r.grid[1]),
              (s = this.containment
                ? i - this.offset.click.top >= this.containment[1] &&
                  i - this.offset.click.top <= this.containment[3]
                  ? i
                  : i - this.offset.click.top >= this.containment[1]
                  ? i - r.grid[1]
                  : i + r.grid[1]
                : i),
              (n =
                this.originalPageX +
                Math.round((a - this.originalPageX) / r.grid[0]) * r.grid[0]),
              (a = this.containment
                ? n - this.offset.click.left >= this.containment[0] &&
                  n - this.offset.click.left <= this.containment[2]
                  ? n
                  : n - this.offset.click.left >= this.containment[0]
                  ? n - r.grid[0]
                  : n + r.grid[0]
                : n))),
          {
            top:
              s -
              this.offset.click.top -
              this.offset.relative.top -
              this.offset.parent.top +
              ("fixed" === this.cssPosition
                ? -this.scrollParent.scrollTop()
                : l
                ? 0
                : o.scrollTop()),
            left:
              a -
              this.offset.click.left -
              this.offset.relative.left -
              this.offset.parent.left +
              ("fixed" === this.cssPosition
                ? -this.scrollParent.scrollLeft()
                : l
                ? 0
                : o.scrollLeft()),
          }
        );
      },
      _rearrange: function (e, t, i, n) {
        i
          ? i[0].appendChild(this.placeholder[0])
          : t.item[0].parentNode.insertBefore(
              this.placeholder[0],
              "down" === this.direction ? t.item[0] : t.item[0].nextSibling
            ),
          (this.counter = this.counter ? ++this.counter : 1);
        var r = this.counter;
        this._delay(function () {
          r === this.counter && this.refreshPositions(!n);
        });
      },
      _clear: function (e, t) {
        function i(e, t, i) {
          return function (n) {
            i._trigger(e, n, t._uiHash(t));
          };
        }
        this.reverting = !1;
        var n,
          r = [];
        if (
          (!this._noFinalSort &&
            this.currentItem.parent().length &&
            this.placeholder.before(this.currentItem),
          (this._noFinalSort = null),
          this.helper[0] === this.currentItem[0])
        ) {
          for (n in this._storedCSS)
            ("auto" === this._storedCSS[n] ||
              "static" === this._storedCSS[n]) &&
              (this._storedCSS[n] = "");
          this.currentItem.css(this._storedCSS),
            this._removeClass(this.currentItem, "ui-sortable-helper");
        } else this.currentItem.show();
        for (
          this.fromOutside &&
            !t &&
            r.push(function (e) {
              this._trigger("receive", e, this._uiHash(this.fromOutside));
            }),
            (!this.fromOutside &&
              this.domPosition.prev ===
                this.currentItem.prev().not(".ui-sortable-helper")[0] &&
              this.domPosition.parent === this.currentItem.parent()[0]) ||
              t ||
              r.push(function (e) {
                this._trigger("update", e, this._uiHash());
              }),
            this !== this.currentContainer &&
              (t ||
                (r.push(function (e) {
                  this._trigger("remove", e, this._uiHash());
                }),
                r.push(
                  function (e) {
                    return function (t) {
                      e._trigger("receive", t, this._uiHash(this));
                    };
                  }.call(this, this.currentContainer)
                ),
                r.push(
                  function (e) {
                    return function (t) {
                      e._trigger("update", t, this._uiHash(this));
                    };
                  }.call(this, this.currentContainer)
                ))),
            n = this.containers.length - 1;
          n >= 0;
          n--
        )
          t || r.push(i("deactivate", this, this.containers[n])),
            this.containers[n].containerCache.over &&
              (r.push(i("out", this, this.containers[n])),
              (this.containers[n].containerCache.over = 0));
        if (
          (this.storedCursor &&
            (this.document.find("body").css("cursor", this.storedCursor),
            this.storedStylesheet.remove()),
          this._storedOpacity &&
            this.helper.css("opacity", this._storedOpacity),
          this._storedZIndex &&
            this.helper.css(
              "zIndex",
              "auto" === this._storedZIndex ? "" : this._storedZIndex
            ),
          (this.dragging = !1),
          t || this._trigger("beforeStop", e, this._uiHash()),
          this.placeholder[0].parentNode.removeChild(this.placeholder[0]),
          this.cancelHelperRemoval ||
            (this.helper[0] !== this.currentItem[0] && this.helper.remove(),
            (this.helper = null)),
          !t)
        ) {
          for (n = 0; r.length > n; n++) r[n].call(this, e);
          this._trigger("stop", e, this._uiHash());
        }
        return (this.fromOutside = !1), !this.cancelHelperRemoval;
      },
      _trigger: function () {
        !1 === e.Widget.prototype._trigger.apply(this, arguments) &&
          this.cancel();
      },
      _uiHash: function (t) {
        var i = t || this;
        return {
          helper: i.helper,
          placeholder: i.placeholder || e([]),
          position: i.position,
          originalPosition: i.originalPosition,
          offset: i.positionAbs,
          item: i.currentItem,
          sender: t ? t.element : null,
        };
      },
    }),
    e.widget("ui.spinner", {
      version: "1.12.1",
      defaultElement: "<input>",
      widgetEventPrefix: "spin",
      options: {
        classes: {
          "ui-spinner": "ui-corner-all",
          "ui-spinner-down": "ui-corner-br",
          "ui-spinner-up": "ui-corner-tr",
        },
        culture: null,
        icons: { down: "ui-icon-triangle-1-s", up: "ui-icon-triangle-1-n" },
        incremental: !0,
        max: null,
        min: null,
        numberFormat: null,
        page: 10,
        step: 1,
        change: null,
        spin: null,
        start: null,
        stop: null,
      },
      _create: function () {
        this._setOption("max", this.options.max),
          this._setOption("min", this.options.min),
          this._setOption("step", this.options.step),
          "" !== this.value() && this._value(this.element.val(), !0),
          this._draw(),
          this._on(this._events),
          this._refresh(),
          this._on(this.window, {
            beforeunload: function () {
              
            },
          });
      },
      _getCreateOptions: function () {
        var t = this._super(),
          i = this.element;
        return (
          e.each(["min", "max", "step"], function (e, n) {
            var r = i.attr(n);
            null != r && r.length && (t[n] = r);
          }),
          t
        );
      },
      _events: {
        keydown: function (e) {
          this._start(e) && this._keydown(e) && e.preventDefault();
        },
        keyup: "_stop",
        focus: function () {
          this.previous = this.element.val();
        },
        blur: function (e) {
          return this.cancelBlur
            ? void delete this.cancelBlur
            : (this._stop(),
              this._refresh(),
              void (
                this.previous !== this.element.val() &&
                this._trigger("change", e)
              ));
        },
        mousewheel: function (e, t) {
          if (t) {
            if (!this.spinning && !this._start(e)) return !1;
            this._spin((t > 0 ? 1 : -1) * this.options.step, e),
              clearTimeout(this.mousewheelTimer),
              (this.mousewheelTimer = this._delay(function () {
                this.spinning && this._stop(e);
              }, 100)),
              e.preventDefault();
          }
        },
        "mousedown .ui-spinner-button": function (t) {
          function i() {
            this.element[0] === e.ui.safeActiveElement(this.document[0]) ||
              (this.element.trigger("focus"),
              (this.previous = n),
              this._delay(function () {
                this.previous = n;
              }));
          }
          var n;
          (n =
            this.element[0] === e.ui.safeActiveElement(this.document[0])
              ? this.previous
              : this.element.val()),
            t.preventDefault(),
            i.call(this),
            (this.cancelBlur = !0),
            this._delay(function () {
              delete this.cancelBlur, i.call(this);
            }),
            !1 !== this._start(t) &&
              this._repeat(
                null,
                e(t.currentTarget).hasClass("ui-spinner-up") ? 1 : -1,
                t
              );
        },
        "mouseup .ui-spinner-button": "_stop",
        "mouseenter .ui-spinner-button": function (t) {
          return e(t.currentTarget).hasClass("ui-state-active")
            ? !1 === this._start(t)
              ? !1
              : void this._repeat(
                  null,
                  e(t.currentTarget).hasClass("ui-spinner-up") ? 1 : -1,
                  t
                )
            : void 0;
        },
        "mouseleave .ui-spinner-button": "_stop",
      },
      _enhance: function () {
        this.uiSpinner = this.element
          .attr("autocomplete", "off")
          .wrap("<span>")
          .parent()
          .append("<a></a><a></a>");
      },
      _draw: function () {
        this._enhance(),
          this._addClass(
            this.uiSpinner,
            "ui-spinner",
            "ui-widget ui-widget-content"
          ),
          this._addClass("ui-spinner-input"),
          this.element.attr("role", "spinbutton"),
          (this.buttons = this.uiSpinner
            .children("a")
            .attr("tabIndex", -1)
            .attr("aria-hidden", !0)
            .button({ classes: { "ui-button": "" } })),
          this._removeClass(this.buttons, "ui-corner-all"),
          this._addClass(
            this.buttons.first(),
            "ui-spinner-button ui-spinner-up"
          ),
          this._addClass(
            this.buttons.last(),
            "ui-spinner-button ui-spinner-down"
          ),
          this.buttons
            .first()
            .button({ icon: this.options.icons.up, showLabel: !1 }),
          this.buttons
            .last()
            .button({ icon: this.options.icons.down, showLabel: !1 }),
          this.buttons.height() > Math.ceil(0.5 * this.uiSpinner.height()) &&
            this.uiSpinner.height() > 0 &&
            this.uiSpinner.height(this.uiSpinner.height());
      },
      _keydown: function (t) {
        var i = this.options,
          n = e.ui.keyCode;
        switch (t.keyCode) {
          case n.UP:
            return this._repeat(null, 1, t), !0;
          case n.DOWN:
            return this._repeat(null, -1, t), !0;
          case n.PAGE_UP:
            return this._repeat(null, i.page, t), !0;
          case n.PAGE_DOWN:
            return this._repeat(null, -i.page, t), !0;
        }
        return !1;
      },
      _start: function (e) {
        return this.spinning || !1 !== this._trigger("start", e)
          ? (this.counter || (this.counter = 1), (this.spinning = !0), !0)
          : !1;
      },
      _repeat: function (e, t, i) {
        (e = e || 500),
          clearTimeout(this.timer),
          (this.timer = this._delay(function () {
            this._repeat(40, t, i);
          }, e)),
          this._spin(t * this.options.step, i);
      },
      _spin: function (e, t) {
        var i = this.value() || 0;
        this.counter || (this.counter = 1),
          (i = this._adjustValue(i + e * this._increment(this.counter))),
          (this.spinning && !1 === this._trigger("spin", t, { value: i })) ||
            (this._value(i), this.counter++);
      },
      _increment: function (t) {
        var i = this.options.incremental;
        return i
          ? e.isFunction(i)
            ? i(t)
            : Math.floor((t * t * t) / 5e4 - (t * t) / 500 + (17 * t) / 200 + 1)
          : 1;
      },
      _precision: function () {
        var e = this._precisionOf(this.options.step);
        return (
          null !== this.options.min &&
            (e = Math.max(e, this._precisionOf(this.options.min))),
          e
        );
      },
      _precisionOf: function (e) {
        var t = "" + e,
          i = t.indexOf(".");
        return -1 === i ? 0 : t.length - i - 1;
      },
      _adjustValue: function (e) {
        var t,
          i,
          n = this.options;
        return (
          (i = e - (t = null !== n.min ? n.min : 0)),
          (e = t + (i = Math.round(i / n.step) * n.step)),
          (e = parseFloat(e.toFixed(this._precision()))),
          null !== n.max && e > n.max
            ? n.max
            : null !== n.min && n.min > e
            ? n.min
            : e
        );
      },
      _stop: function (e) {
        this.spinning &&
          (clearTimeout(this.timer),
          clearTimeout(this.mousewheelTimer),
          (this.counter = 0),
          (this.spinning = !1),
          this._trigger("stop", e));
      },
      _setOption: function (e, t) {
        var i, n, r;
        return "culture" === e || "numberFormat" === e
          ? ((i = this._parse(this.element.val())),
            (this.options[e] = t),
            void this.element.val(this._format(i)))
          : (("max" === e || "min" === e || "step" === e) &&
              "string" == typeof t &&
              (t = this._parse(t)),
            "icons" === e &&
              ((n = this.buttons.first().find(".ui-icon")),
              this._removeClass(n, null, this.options.icons.up),
              this._addClass(n, null, t.up),
              (r = this.buttons.last().find(".ui-icon")),
              this._removeClass(r, null, this.options.icons.down),
              this._addClass(r, null, t.down)),
            void this._super(e, t));
      },
      _setOptionDisabled: function (e) {
        this._super(e),
          this._toggleClass(this.uiSpinner, null, "ui-state-disabled", !!e),
          this.element.prop("disabled", !!e),
          this.buttons.button(e ? "disable" : "enable");
      },
      _setOptions: a(function (e) {
        this._super(e);
      }),
      _parse: function (e) {
        return (
          "string" == typeof e &&
            "" !== e &&
            (e =
              window.Globalize && this.options.numberFormat
                ? Globalize.parseFloat(e, 10, this.options.culture)
                : +e),
          "" === e || isNaN(e) ? null : e
        );
      },
      _format: function (e) {
        return "" === e
          ? ""
          : window.Globalize && this.options.numberFormat
          ? Globalize.format(e, this.options.numberFormat, this.options.culture)
          : e;
      },
      _refresh: function () {
        this.element.attr({
          "aria-valuemin": this.options.min,
          "aria-valuemax": this.options.max,
          "aria-valuenow": this._parse(this.element.val()),
        });
      },
      isValid: function () {
        var e = this.value();
        return null === e ? !1 : e === this._adjustValue(e);
      },
      _value: function (e, t) {
        var i;
        "" !== e &&
          null !== (i = this._parse(e)) &&
          (t || (i = this._adjustValue(i)), (e = this._format(i))),
          this.element.val(e),
          this._refresh();
      },
      _destroy: function () {
        this.element
          .prop("disabled", !1)
          .removeAttr(
            "autocomplete role aria-valuemin aria-valuemax aria-valuenow"
          ),
          this.uiSpinner.replaceWith(this.element);
      },
      stepUp: a(function (e) {
        this._stepUp(e);
      }),
      _stepUp: function (e) {
        this._start() &&
          (this._spin((e || 1) * this.options.step), this._stop());
      },
      stepDown: a(function (e) {
        this._stepDown(e);
      }),
      _stepDown: function (e) {
        this._start() &&
          (this._spin((e || 1) * -this.options.step), this._stop());
      },
      pageUp: a(function (e) {
        this._stepUp((e || 1) * this.options.page);
      }),
      pageDown: a(function (e) {
        this._stepDown((e || 1) * this.options.page);
      }),
      value: function (e) {
        return arguments.length
          ? void a(this._value).call(this, e)
          : this._parse(this.element.val());
      },
      widget: function () {
        return this.uiSpinner;
      },
    }),
    !1 !== e.uiBackCompat &&
      e.widget("ui.spinner", e.ui.spinner, {
        _enhance: function () {
          this.uiSpinner = this.element
            .attr("autocomplete", "off")
            .wrap(this._uiSpinnerHtml())
            .parent()
            .append(this._buttonHtml());
        },
        _uiSpinnerHtml: function () {
          return "<span>";
        },
        _buttonHtml: function () {
          return "<a></a><a></a>";
        },
      }),
    e.ui.spinner,
    e.widget("ui.tabs", {
      version: "1.12.1",
      delay: 300,
      options: {
        active: null,
        classes: {
          "ui-tabs": "ui-corner-all",
          "ui-tabs-nav": "ui-corner-all",
          "ui-tabs-panel": "ui-corner-bottom",
          "ui-tabs-tab": "ui-corner-top",
        },
        collapsible: !1,
        event: "click",
        heightStyle: "content",
        hide: null,
        show: null,
        activate: null,
        beforeActivate: null,
        beforeLoad: null,
        load: null,
      },
      _isLocal: (function () {
        var e = /#.*$/;
        return function (t) {
          var i, n;
          (i = t.href.replace(e, "")), (n = location.href.replace(e, ""));
          try {
            i = decodeURIComponent(i);
          } catch (e) {}
          try {
            n = decodeURIComponent(n);
          } catch (e) {}
          return t.hash.length > 1 && i === n;
        };
      })(),
      _create: function () {
        var t = this,
          i = this.options;
        (this.running = !1),
          this._addClass("ui-tabs", "ui-widget ui-widget-content"),
          this._toggleClass("ui-tabs-collapsible", null, i.collapsible),
          this._processTabs(),
          (i.active = this._initialActive()),
          e.isArray(i.disabled) &&
            (i.disabled = e
              .unique(
                i.disabled.concat(
                  e.map(this.tabs.filter(".ui-state-disabled"), function (e) {
                    return t.tabs.index(e);
                  })
                )
              )
              .sort()),
          (this.active =
            !1 !== this.options.active && this.anchors.length
              ? this._findActive(i.active)
              : e()),
          this._refresh(),
          this.active.length && this.load(i.active);
      },
      _initialActive: function () {
        var t = this.options.active,
          i = this.options.collapsible,
          n = location.hash.substring(1);
        return (
          null === t &&
            (n &&
              this.tabs.each(function (i, r) {
                return e(r).attr("aria-controls") === n
                  ? ((t = i), !1)
                  : void 0;
              }),
            null === t &&
              (t = this.tabs.index(this.tabs.filter(".ui-tabs-active"))),
            (null === t || -1 === t) && (t = this.tabs.length ? 0 : !1)),
          !1 !== t &&
            -1 === (t = this.tabs.index(this.tabs.eq(t))) &&
            (t = i ? !1 : 0),
          !i && !1 === t && this.anchors.length && (t = 0),
          t
        );
      },
      _getCreateEventData: function () {
        return {
          tab: this.active,
          panel: this.active.length ? this._getPanelForTab(this.active) : e(),
        };
      },
      _tabKeydown: function (t) {
        var i = e(e.ui.safeActiveElement(this.document[0])).closest("li"),
          n = this.tabs.index(i),
          r = !0;
        if (!this._handlePageNav(t)) {
          switch (t.keyCode) {
            case e.ui.keyCode.RIGHT:
            case e.ui.keyCode.DOWN:
              n++;
              break;
            case e.ui.keyCode.UP:
            case e.ui.keyCode.LEFT:
              (r = !1), n--;
              break;
            case e.ui.keyCode.END:
              n = this.anchors.length - 1;
              break;
            case e.ui.keyCode.HOME:
              n = 0;
              break;
            case e.ui.keyCode.SPACE:
              return (
                t.preventDefault(),
                clearTimeout(this.activating),
                void this._activate(n)
              );
            case e.ui.keyCode.ENTER:
              return (
                t.preventDefault(),
                clearTimeout(this.activating),
                void this._activate(n === this.options.active ? !1 : n)
              );
            default:
              return;
          }
          t.preventDefault(),
            clearTimeout(this.activating),
            (n = this._focusNextTab(n, r)),
            t.ctrlKey ||
              t.metaKey ||
              (i.attr("aria-selected", "false"),
              this.tabs.eq(n).attr("aria-selected", "true"),
              (this.activating = this._delay(function () {
                this.option("active", n);
              }, this.delay)));
        }
      },
      _panelKeydown: function (t) {
        this._handlePageNav(t) ||
          (t.ctrlKey &&
            t.keyCode === e.ui.keyCode.UP &&
            (t.preventDefault(), this.active.trigger("focus")));
      },
      _handlePageNav: function (t) {
        return t.altKey && t.keyCode === e.ui.keyCode.PAGE_UP
          ? (this._activate(this._focusNextTab(this.options.active - 1, !1)),
            !0)
          : t.altKey && t.keyCode === e.ui.keyCode.PAGE_DOWN
          ? (this._activate(this._focusNextTab(this.options.active + 1, !0)),
            !0)
          : void 0;
      },
      _findNextTab: function (t, i) {
        for (
          var n = this.tabs.length - 1;
          -1 !==
          e.inArray(
            (t > n && (t = 0), 0 > t && (t = n), t),
            this.options.disabled
          );

        )
          t = i ? t + 1 : t - 1;
        return t;
      },
      _focusNextTab: function (e, t) {
        return (
          (e = this._findNextTab(e, t)), this.tabs.eq(e).trigger("focus"), e
        );
      },
      _setOption: function (e, t) {
        return "active" === e
          ? void this._activate(t)
          : (this._super(e, t),
            "collapsible" === e &&
              (this._toggleClass("ui-tabs-collapsible", null, t),
              t || !1 !== this.options.active || this._activate(0)),
            "event" === e && this._setupEvents(t),
            void ("heightStyle" === e && this._setupHeightStyle(t)));
      },
      _sanitizeSelector: function (e) {
        return e
          ? e.replace(/[!"$%&'()*+,.\/:;<=>?@\[\]\^`{|}~]/g, "\\$&")
          : "";
      },
      refresh: function () {
        var t = this.options,
          i = this.tablist.children(":has(a[href])");
        (t.disabled = e.map(i.filter(".ui-state-disabled"), function (e) {
          return i.index(e);
        })),
          this._processTabs(),
          !1 !== t.active && this.anchors.length
            ? this.active.length && !e.contains(this.tablist[0], this.active[0])
              ? this.tabs.length === t.disabled.length
                ? ((t.active = !1), (this.active = e()))
                : this._activate(
                    this._findNextTab(Math.max(0, t.active - 1), !1)
                  )
              : (t.active = this.tabs.index(this.active))
            : ((t.active = !1), (this.active = e())),
          this._refresh();
      },
      _refresh: function () {
        this._setOptionDisabled(this.options.disabled),
          this._setupEvents(this.options.event),
          this._setupHeightStyle(this.options.heightStyle),
          this.tabs
            .not(this.active)
            .attr({
              "aria-selected": "false",
              "aria-expanded": "false",
              tabIndex: -1,
            }),
          this.panels
            .not(this._getPanelForTab(this.active))
            .hide()
            .attr({ "aria-hidden": "true" }),
          this.active.length
            ? (this.active.attr({
                "aria-selected": "true",
                "aria-expanded": "true",
                tabIndex: 0,
              }),
              this._addClass(this.active, "ui-tabs-active", "ui-state-active"),
              this._getPanelForTab(this.active)
                .show()
                .attr({ "aria-hidden": "false" }))
            : this.tabs.eq(0).attr("tabIndex", 0);
      },
      _processTabs: function () {
        var t = this,
          i = this.tabs,
          n = this.anchors,
          r = this.panels;
        (this.tablist = this._getList().attr("role", "tablist")),
          this._addClass(
            this.tablist,
            "ui-tabs-nav",
            "ui-helper-reset ui-helper-clearfix ui-widget-header"
          ),
          this.tablist
            .on("mousedown" + this.eventNamespace, "> li", function (t) {
              e(this).is(".ui-state-disabled") && t.preventDefault();
            })
            .on("focus" + this.eventNamespace, ".ui-tabs-anchor", function () {
              e(this).closest("li").is(".ui-state-disabled") && this.blur();
            }),
          (this.tabs = this.tablist
            .find("> li:has(a[href])")
            .attr({ role: "tab", tabIndex: -1 })),
          this._addClass(this.tabs, "ui-tabs-tab", "ui-state-default"),
          (this.anchors = this.tabs
            .map(function () {
              return e("a", this)[0];
            })
            .attr({ role: "presentation", tabIndex: -1 })),
          this._addClass(this.anchors, "ui-tabs-anchor"),
          (this.panels = e()),
          this.anchors.each(function (i, n) {
            var r,
              a,
              s,
              o = e(n).uniqueId().attr("id"),
              l = e(n).closest("li"),
              c = l.attr("aria-controls");
            t._isLocal(n)
              ? ((s = (r = n.hash).substring(1)),
                (a = t.element.find(t._sanitizeSelector(r))))
              : ((r =
                  "#" +
                  (s = l.attr("aria-controls") || e({}).uniqueId()[0].id)),
                (a = t.element.find(r)).length ||
                  (a = t._createPanel(s)).insertAfter(
                    t.panels[i - 1] || t.tablist
                  ),
                a.attr("aria-live", "polite")),
              a.length && (t.panels = t.panels.add(a)),
              c && l.data("ui-tabs-aria-controls", c),
              l.attr({ "aria-controls": s, "aria-labelledby": o }),
              a.attr("aria-labelledby", o);
          }),
          this.panels.attr("role", "tabpanel"),
          this._addClass(this.panels, "ui-tabs-panel", "ui-widget-content"),
          i &&
            (this._off(i.not(this.tabs)),
            this._off(n.not(this.anchors)),
            this._off(r.not(this.panels)));
      },
      _getList: function () {
        return this.tablist || this.element.find("ol, ul").eq(0);
      },
      _createPanel: function (t) {
        return e("<div>").attr("id", t).data("ui-tabs-destroy", !0);
      },
      _setOptionDisabled: function (t) {
        var i, n, r;
        for (
          e.isArray(t) &&
            (t.length
              ? t.length === this.anchors.length && (t = !0)
              : (t = !1)),
            r = 0;
          (n = this.tabs[r]);
          r++
        )
          (i = e(n)),
            !0 === t || -1 !== e.inArray(r, t)
              ? (i.attr("aria-disabled", "true"),
                this._addClass(i, null, "ui-state-disabled"))
              : (i.removeAttr("aria-disabled"),
                this._removeClass(i, null, "ui-state-disabled"));
        (this.options.disabled = t),
          this._toggleClass(
            this.widget(),
            this.widgetFullName + "-disabled",
            null,
            !0 === t
          );
      },
      _setupEvents: function (t) {
        var i = {};
        t &&
          e.each(t.split(" "), function (e, t) {
            i[t] = "_eventHandler";
          }),
          this._off(this.anchors.add(this.tabs).add(this.panels)),
          this._on(!0, this.anchors, {
            click: function (e) {
              e.preventDefault();
            },
          }),
          this._on(this.anchors, i),
          this._on(this.tabs, { keydown: "_tabKeydown" }),
          this._on(this.panels, { keydown: "_panelKeydown" }),
          this._focusable(this.tabs),
          this._hoverable(this.tabs);
      },
      _setupHeightStyle: function (t) {
        var i,
          n = this.element.parent();
        "fill" === t
          ? ((i = n.height()),
            (i -= this.element.outerHeight() - this.element.height()),
            this.element.siblings(":visible").each(function () {
              var t = e(this),
                n = t.css("position");
              "absolute" !== n && "fixed" !== n && (i -= t.outerHeight(!0));
            }),
            this.element
              .children()
              .not(this.panels)
              .each(function () {
                i -= e(this).outerHeight(!0);
              }),
            this.panels
              .each(function () {
                e(this).height(
                  Math.max(0, i - e(this).innerHeight() + e(this).height())
                );
              })
              .css("overflow", "auto"))
          : "auto" === t &&
            ((i = 0),
            this.panels
              .each(function () {
                i = Math.max(i, e(this).height("").height());
              })
              .height(i));
      },
      _eventHandler: function (t) {
        var i = this.options,
          n = this.active,
          r = e(t.currentTarget).closest("li"),
          a = r[0] === n[0],
          s = a && i.collapsible,
          o = s ? e() : this._getPanelForTab(r),
          l = n.length ? this._getPanelForTab(n) : e(),
          c = { oldTab: n, oldPanel: l, newTab: s ? e() : r, newPanel: o };
        t.preventDefault(),
          r.hasClass("ui-state-disabled") ||
            r.hasClass("ui-tabs-loading") ||
            this.running ||
            (a && !i.collapsible) ||
            !1 === this._trigger("beforeActivate", t, c) ||
            ((i.active = s ? !1 : this.tabs.index(r)),
            (this.active = a ? e() : r),
            this.xhr && this.xhr.abort(),
            l.length ||
              o.length ||
              e.error("jQuery UI Tabs: Mismatching fragment identifier."),
            o.length && this.load(this.tabs.index(r), t),
            this._toggle(t, c));
      },
      _toggle: function (t, i) {
        function n() {
          (a.running = !1), a._trigger("activate", t, i);
        }
        function r() {
          a._addClass(
            i.newTab.closest("li"),
            "ui-tabs-active",
            "ui-state-active"
          ),
            s.length && a.options.show
              ? a._show(s, a.options.show, n)
              : (s.show(), n());
        }
        var a = this,
          s = i.newPanel,
          o = i.oldPanel;
        (this.running = !0),
          o.length && this.options.hide
            ? this._hide(o, this.options.hide, function () {
                a._removeClass(
                  i.oldTab.closest("li"),
                  "ui-tabs-active",
                  "ui-state-active"
                ),
                  r();
              })
            : (this._removeClass(
                i.oldTab.closest("li"),
                "ui-tabs-active",
                "ui-state-active"
              ),
              o.hide(),
              r()),
          o.attr("aria-hidden", "true"),
          i.oldTab.attr({ "aria-selected": "false", "aria-expanded": "false" }),
          s.length && o.length
            ? i.oldTab.attr("tabIndex", -1)
            : s.length &&
              this.tabs
                .filter(function () {
                  return 0 === e(this).attr("tabIndex");
                })
                .attr("tabIndex", -1),
          s.attr("aria-hidden", "false"),
          i.newTab.attr({
            "aria-selected": "true",
            "aria-expanded": "true",
            tabIndex: 0,
          });
      },
      _activate: function (t) {
        var i,
          n = this._findActive(t);
        n[0] !== this.active[0] &&
          (n.length || (n = this.active),
          (i = n.find(".ui-tabs-anchor")[0]),
          this._eventHandler({
            target: i,
            currentTarget: i,
            preventDefault: e.noop,
          }));
      },
      _findActive: function (t) {
        return !1 === t ? e() : this.tabs.eq(t);
      },
      _getIndex: function (t) {
        return (
          "string" == typeof t &&
            (t = this.anchors.index(
              this.anchors.filter("[href$='" + e.ui.escapeSelector(t) + "']")
            )),
          t
        );
      },
      _destroy: function () {
        this.xhr && this.xhr.abort(),
          this.tablist.removeAttr("role").off(this.eventNamespace),
          this.anchors.removeAttr("role tabIndex").removeUniqueId(),
          this.tabs.add(this.panels).each(function () {
            e.data(this, "ui-tabs-destroy")
              ? e(this).remove()
              : e(this).removeAttr(
                  "role tabIndex aria-live aria-busy aria-selected aria-labelledby aria-hidden aria-expanded"
                );
          }),
          this.tabs.each(function () {
            var t = e(this),
              i = t.data("ui-tabs-aria-controls");
            i
              ? t.attr("aria-controls", i).removeData("ui-tabs-aria-controls")
              : t.removeAttr("aria-controls");
          }),
          this.panels.show(),
          "content" !== this.options.heightStyle &&
            this.panels.css("height", "");
      },
      enable: function (t) {
        var i = this.options.disabled;
        !1 !== i &&
          (void 0 === t
            ? (i = !1)
            : ((t = this._getIndex(t)),
              (i = e.isArray(i)
                ? e.map(i, function (e) {
                    return e !== t ? e : null;
                  })
                : e.map(this.tabs, function (e, i) {
                    return i !== t ? i : null;
                  }))),
          this._setOptionDisabled(i));
      },
      disable: function (t) {
        var i = this.options.disabled;
        if (!0 !== i) {
          if (void 0 === t) i = !0;
          else {
            if (((t = this._getIndex(t)), -1 !== e.inArray(t, i))) return;
            i = e.isArray(i) ? e.merge([t], i).sort() : [t];
          }
          this._setOptionDisabled(i);
        }
      },
      load: function (t, i) {
        t = this._getIndex(t);
        var n = this,
          r = this.tabs.eq(t),
          a = r.find(".ui-tabs-anchor"),
          s = this._getPanelForTab(r),
          o = { tab: r, panel: s },
          l = function (e, t) {
            "abort" === t && n.panels.stop(!1, !0),
              n._removeClass(r, "ui-tabs-loading"),
              s.removeAttr("aria-busy"),
              e === n.xhr && delete n.xhr;
          };
        this._isLocal(a[0]) ||
          ((this.xhr = e.ajax(this._ajaxSettings(a, i, o))),
          this.xhr &&
            "canceled" !== this.xhr.statusText &&
            (this._addClass(r, "ui-tabs-loading"),
            s.attr("aria-busy", "true"),
            this.xhr
              .done(function (e, t, r) {
                setTimeout(function () {
                  s.html(e), n._trigger("load", i, o), l(r, t);
                }, 1);
              })
              .fail(function (e, t) {
                setTimeout(function () {
                  l(e, t);
                }, 1);
              })));
      },
      _ajaxSettings: function (t, i, n) {
        var r = this;
        return {
          url: t.attr("href").replace(/#.*$/, ""),
          beforeSend: function (t, a) {
            return r._trigger(
              "beforeLoad",
              i,
              e.extend({ jqXHR: t, ajaxSettings: a }, n)
            );
          },
        };
      },
      _getPanelForTab: function (t) {
        var i = e(t).attr("aria-controls");
        return this.element.find(this._sanitizeSelector("#" + i));
      },
    }),
    !1 !== e.uiBackCompat &&
      e.widget("ui.tabs", e.ui.tabs, {
        _processTabs: function () {
          this._superApply(arguments), this._addClass(this.tabs, "ui-tab");
        },
      }),
    e.ui.tabs,
    e.widget("ui.tooltip", {
      version: "1.12.1",
      options: {
        classes: { "ui-tooltip": "ui-corner-all ui-widget-shadow" },
        content: function () {
          var t = e(this).attr("title") || "";
          return e("<a>").text(t).html();
        },
        hide: !0,
        items: "[title]:not([disabled])",
        position: {
          my: "left top+15",
          at: "left bottom",
          collision: "flipfit flip",
        },
        show: !0,
        track: !1,
        close: null,
        open: null,
      },
      _addDescribedBy: function (t, i) {
        var n = (t.attr("aria-describedby") || "").split(/\s+/);
        n.push(i),
          t
            .data("ui-tooltip-id", i)
            .attr("aria-describedby", e.trim(n.join(" ")));
      },
      _removeDescribedBy: function (t) {
        var i = t.data("ui-tooltip-id"),
          n = (t.attr("aria-describedby") || "").split(/\s+/),
          r = e.inArray(i, n);
        -1 !== r && n.splice(r, 1),
          t.removeData("ui-tooltip-id"),
          (n = e.trim(n.join(" ")))
            ? t.attr("aria-describedby", n)
            : t.removeAttr("aria-describedby");
      },
      _create: function () {
        this._on({ mouseover: "open", focusin: "open" }),
          (this.tooltips = {}),
          (this.parents = {}),
          (this.liveRegion = e("<div>")
            .attr({
              role: "log",
              "aria-live": "assertive",
              "aria-relevant": "additions",
            })
            .appendTo(this.document[0].body)),
          this._addClass(this.liveRegion, null, "ui-helper-hidden-accessible"),
          (this.disabledTitles = e([]));
      },
      _setOption: function (t, i) {
        var n = this;
        this._super(t, i),
          "content" === t &&
            e.each(this.tooltips, function (e, t) {
              n._updateContent(t.element);
            });
      },
      _setOptionDisabled: function (e) {
        this[e ? "_disable" : "_enable"]();
      },
      _disable: function () {
        var t = this;
        e.each(this.tooltips, function (i, n) {
          var r = e.Event("blur");
          (r.target = r.currentTarget = n.element[0]), t.close(r, !0);
        }),
          (this.disabledTitles = this.disabledTitles.add(
            this.element
              .find(this.options.items)
              .addBack()
              .filter(function () {
                var t = e(this);
                return t.is("[title]")
                  ? t
                      .data("ui-tooltip-title", t.attr("title"))
                      .removeAttr("title")
                  : void 0;
              })
          ));
      },
      _enable: function () {
        this.disabledTitles.each(function () {
          var t = e(this);
          t.data("ui-tooltip-title") &&
            t.attr("title", t.data("ui-tooltip-title"));
        }),
          (this.disabledTitles = e([]));
      },
      open: function (t) {
        var i = this,
          n = e(t ? t.target : this.element).closest(this.options.items);
        n.length &&
          !n.data("ui-tooltip-id") &&
          (n.attr("title") && n.data("ui-tooltip-title", n.attr("title")),
          n.data("ui-tooltip-open", !0),
          t &&
            "mouseover" === t.type &&
            n.parents().each(function () {
              var t,
                n = e(this);
              n.data("ui-tooltip-open") &&
                (((t = e.Event("blur")).target = t.currentTarget = this),
                i.close(t, !0)),
                n.attr("title") &&
                  (n.uniqueId(),
                  (i.parents[this.id] = {
                    element: this,
                    title: n.attr("title"),
                  }),
                  n.attr("title", ""));
            }),
          this._registerCloseHandlers(t, n),
          this._updateContent(n, t));
      },
      _updateContent: function (e, t) {
        var i,
          n = this.options.content,
          r = this,
          a = t ? t.type : null;
        return "string" == typeof n || n.nodeType || n.jquery
          ? this._open(t, e, n)
          : void (
              (i = n.call(e[0], function (i) {
                r._delay(function () {
                  e.data("ui-tooltip-open") &&
                    (t && (t.type = a), this._open(t, e, i));
                });
              })) && this._open(t, e, i)
            );
      },
      _open: function (t, i, n) {
        function r(e) {
          (c.of = e), s.is(":hidden") || s.position(c);
        }
        var a,
          s,
          o,
          l,
          c = e.extend({}, this.options.position);
        if (n) {
          if ((a = this._find(i)))
            return void a.tooltip.find(".ui-tooltip-content").html(n);
          i.is("[title]") &&
            (t && "mouseover" === t.type
              ? i.attr("title", "")
              : i.removeAttr("title")),
            (a = this._tooltip(i)),
            (s = a.tooltip),
            this._addDescribedBy(i, s.attr("id")),
            s.find(".ui-tooltip-content").html(n),
            this.liveRegion.children().hide(),
            (l = e("<div>").html(s.find(".ui-tooltip-content").html()))
              .removeAttr("name")
              .find("[name]")
              .removeAttr("name"),
            l.removeAttr("id").find("[id]").removeAttr("id"),
            l.appendTo(this.liveRegion),
            this.options.track && t && /^mouse/.test(t.type)
              ? (this._on(this.document, { mousemove: r }), r(t))
              : s.position(e.extend({ of: i }, this.options.position)),
            s.hide(),
            this._show(s, this.options.show),
            this.options.track &&
              this.options.show &&
              this.options.show.delay &&
              (o = this.delayedShow =
                setInterval(function () {
                  s.is(":visible") && (r(c.of), clearInterval(o));
                }, e.fx.interval)),
            this._trigger("open", t, { tooltip: s });
        }
      },
      _registerCloseHandlers: function (t, i) {
        var n = {
          keyup: function (t) {
            if (t.keyCode === e.ui.keyCode.ESCAPE) {
              var n = e.Event(t);
              (n.currentTarget = i[0]), this.close(n, !0);
            }
          },
        };
        i[0] !== this.element[0] &&
          (n.remove = function () {
            this._removeTooltip(this._find(i).tooltip);
          }),
          (t && "mouseover" !== t.type) || (n.mouseleave = "close"),
          (t && "focusin" !== t.type) || (n.focusout = "close"),
          this._on(!0, i, n);
      },
      close: function (t) {
        var i,
          n = this,
          r = e(t ? t.currentTarget : this.element),
          a = this._find(r);
        return a
          ? ((i = a.tooltip),
            void (
              a.closing ||
              (clearInterval(this.delayedShow),
              r.data("ui-tooltip-title") &&
                !r.attr("title") &&
                r.attr("title", r.data("ui-tooltip-title")),
              this._removeDescribedBy(r),
              (a.hiding = !0),
              i.stop(!0),
              this._hide(i, this.options.hide, function () {
                n._removeTooltip(e(this));
              }),
              r.removeData("ui-tooltip-open"),
              this._off(r, "mouseleave focusout keyup"),
              r[0] !== this.element[0] && this._off(r, "remove"),
              this._off(this.document, "mousemove"),
              t &&
                "mouseleave" === t.type &&
                e.each(this.parents, function (t, i) {
                  e(i.element).attr("title", i.title), delete n.parents[t];
                }),
              (a.closing = !0),
              this._trigger("close", t, { tooltip: i }),
              a.hiding || (a.closing = !1))
            ))
          : void r.removeData("ui-tooltip-open");
      },
      _tooltip: function (t) {
        var i = e("<div>").attr("role", "tooltip"),
          n = e("<div>").appendTo(i),
          r = i.uniqueId().attr("id");
        return (
          this._addClass(n, "ui-tooltip-content"),
          this._addClass(i, "ui-tooltip", "ui-widget ui-widget-content"),
          i.appendTo(this._appendTo(t)),
          (this.tooltips[r] = { element: t, tooltip: i })
        );
      },
      _find: function (e) {
        var t = e.data("ui-tooltip-id");
        return t ? this.tooltips[t] : null;
      },
      _removeTooltip: function (e) {
        e.remove(), delete this.tooltips[e.attr("id")];
      },
      _appendTo: function (e) {
        var t = e.closest(".ui-front, dialog");
        return t.length || (t = this.document[0].body), t;
      },
      _destroy: function () {
        var t = this;
        e.each(this.tooltips, function (i, n) {
          var r = e.Event("blur"),
            a = n.element;
          (r.target = r.currentTarget = a[0]),
            t.close(r, !0),
            e("#" + i).remove(),
            a.data("ui-tooltip-title") &&
              (a.attr("title") || a.attr("title", a.data("ui-tooltip-title")),
              a.removeData("ui-tooltip-title"));
        }),
          this.liveRegion.remove();
      },
    }),
    !1 !== e.uiBackCompat &&
      e.widget("ui.tooltip", e.ui.tooltip, {
        options: { tooltipClass: null },
        _tooltip: function () {
          var e = this._superApply(arguments);
          return (
            this.options.tooltipClass &&
              e.tooltip.addClass(this.options.tooltipClass),
            e
          );
        },
      }),
    e.ui.tooltip;
});
!(function (e) {
  function t(e) {
    return e instanceof Object && Object.keys(e).length > 0;
  }
  function i(e, n) {
    var r = "";
    if ("string" == typeof e) {
      e = e.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
      if (
        /^(ftp|http|https):\/\/(\w+:{0,1}\w*@)?(\S+)(:[0-9]+)?(\/|\/([\w#!:.?+=&%@!\-\/]))?/.test(
          e
        )
      )
        r += '<a href="' + e + '" class="json-string">' + e + "</a>";
      else r += '<span class="json-string">"' + e + '"</span>';
    } else if ("number" == typeof e)
      r += '<span class="json-literal">' + e + "</span>";
    else if ("boolean" == typeof e)
      r += '<span class="json-literal">' + e + "</span>";
    else if (null === e) r += '<span class="json-literal">null</span>';
    else if (e instanceof Array)
      if (e.length > 0) {
        r += '[<ol class="json-array">';
        for (var a = 0; a < e.length; ++a) {
          r += "<li>";
          if (t(e[a])) r += '<a href class="json-toggle"></a>';
          r += i(e[a], n);
          if (a < e.length - 1) r += ",";
          r += "</li>";
        }
        r += "</ol>]";
      } else r += "[]";
    else if ("object" == typeof e) {
      var s = Object.keys(e).length;
      if (s > 0) {
        r += '{<ul class="json-dict">';
        for (var o in e)
          if (e.hasOwnProperty(o)) {
            r += "<li>";
            var l = n.withQuotes
              ? '<span class="json-string">"' + o + '"</span>'
              : o;
            if (t(e[o])) r += '<a href class="json-toggle">' + l + "</a>";
            else r += l;
            r += ": " + i(e[o], n);
            if (--s > 0) r += ",";
            r += "</li>";
          }
        r += "</ul>}";
      } else r += "{}";
    }
    return r;
  }
  e.fn.jsonViewer = function (n, r) {
    r = r || {};
    return this.each(function () {
      var a = i(n, r);
      if (t(n)) a = '<a href class="json-toggle"></a>' + a;
      e(this).html(a);
      e(this).off("click");
      e(this).on("click", "a.json-toggle", function () {
        var t = e(this)
          .toggleClass("collapsed")
          .siblings("ul.json-dict, ol.json-array");
        t.toggle();
        if (t.is(":visible")) t.siblings(".json-placeholder").remove();
        else {
          var i = t.children("li").length,
            n = i + (i > 1 ? " items" : " item");
          t.after('<a href class="json-placeholder">' + n + "</a>");
        }
        return !1;
      });
      e(this).on("click", "a.json-placeholder", function () {
        e(this).siblings("a.json-toggle").click();
        return !1;
      });
      if (1 == r.collapsed) e(this).find("a.json-toggle").click();
    });
  };
})(jQuery);
!(function (e) {
  function t(e, t) {
    if (!(e.originalEvent.touches.length > 1)) {
      e.preventDefault();
      var i = e.originalEvent.changedTouches[0],
        n = document.createEvent("MouseEvents");
      n.initMouseEvent(
        t,
        !0,
        !0,
        window,
        1,
        i.screenX,
        i.screenY,
        i.clientX,
        i.clientY,
        !1,
        !1,
        !1,
        !1,
        0,
        null
      ),
        e.target.dispatchEvent(n);
    }
  }
  if (((e.support.touch = "ontouchend" in document), e.support.touch)) {
    var i,
      n = e.ui.mouse.prototype,
      r = n._mouseInit,
      a = n._mouseDestroy;
    (n._touchStart = function (e) {
      !i &&
        this._mouseCapture(e.originalEvent.changedTouches[0]) &&
        ((i = !0),
        (this._touchMoved = !1),
        t(e, "mouseover"),
        t(e, "mousemove"),
        t(e, "mousedown"));
    }),
      (n._touchMove = function (e) {
        i && ((this._touchMoved = !0), t(e, "mousemove"));
      }),
      (n._touchEnd = function (e) {
        i &&
          (t(e, "mouseup"),
          t(e, "mouseout"),
          this._touchMoved || t(e, "click"),
          (i = !1));
      }),
      (n._mouseInit = function () {
        var t = this;
        t.element.bind({
          touchstart: e.proxy(t, "_touchStart"),
          touchmove: e.proxy(t, "_touchMove"),
          touchend: e.proxy(t, "_touchEnd"),
        }),
          r.call(t);
      }),
      (n._mouseDestroy = function () {
        var t = this;
        t.element.unbind({
          touchstart: e.proxy(t, "_touchStart"),
          touchmove: e.proxy(t, "_touchMove"),
          touchend: e.proxy(t, "_touchEnd"),
        }),
          a.call(t);
      });
  }
})(jQuery);
!(function (e) {
  if ("function" == typeof define && define.amd) define(["jquery"], e);
  else if ("object" == typeof exports) e(require("jquery"));
  else e(jQuery);
})(function (e) {
  var t,
    i = 0,
    n = Array.prototype.slice;
  e.cleanData =
    ((t = e.cleanData),
    function (i) {
      var n, r, a;
      for (a = 0; null != (r = i[a]); a++)
        try {
          if ((n = e._data(r, "events")) && n.remove)
            e(r).triggerHandler("remove");
        } catch (e) {}
      t(i);
    });
  e.widget = function (t, i, n) {
    var r,
      a,
      s,
      o,
      l = {},
      c = t.split(".")[0];
    t = t.split(".")[1];
    r = c + "-" + t;
    if (!n) {
      n = i;
      i = e.Widget;
    }
    e.expr[":"][r.toLowerCase()] = function (t) {
      return !!e.data(t, r);
    };
    e[c] = e[c] || {};
    a = e[c][t];
    s = e[c][t] = function (e, t) {
      if (!this._createWidget) return new s(e, t);
      if (arguments.length) this._createWidget(e, t);
    };
    e.extend(s, a, {
      version: n.version,
      _proto: e.extend({}, n),
      _childConstructors: [],
    });
    (o = new i()).options = e.widget.extend({}, o.options);
    e.each(n, function (t, n) {
      if (e.isFunction(n)) {
        l[t] =
          ((r = function () {
            return i.prototype[t].apply(this, arguments);
          }),
          (a = function (e) {
            return i.prototype[t].apply(this, e);
          }),
          function () {
            var e,
              t = this._super,
              i = this._superApply;
            this._super = r;
            this._superApply = a;
            e = n.apply(this, arguments);
            this._super = t;
            this._superApply = i;
            return e;
          });
        var r, a;
      } else l[t] = n;
    });
    s.prototype = e.widget.extend(
      o,
      { widgetEventPrefix: a ? o.widgetEventPrefix || t : t },
      l,
      { constructor: s, namespace: c, widgetName: t, widgetFullName: r }
    );
    if (a) {
      e.each(a._childConstructors, function (t, i) {
        var n = i.prototype;
        e.widget(n.namespace + "." + n.widgetName, s, i._proto);
      });
      delete a._childConstructors;
    } else i._childConstructors.push(s);
    e.widget.bridge(t, s);
    return s;
  };
  e.widget.extend = function (t) {
    for (var i, r, a = n.call(arguments, 1), s = 0, o = a.length; s < o; s++)
      for (i in a[s]) {
        r = a[s][i];
        if (a[s].hasOwnProperty(i) && void 0 !== r)
          if (e.isPlainObject(r))
            t[i] = e.isPlainObject(t[i])
              ? e.widget.extend({}, t[i], r)
              : e.widget.extend({}, r);
          else t[i] = r;
      }
    return t;
  };
  e.widget.bridge = function (t, i) {
    var r = i.prototype.widgetFullName || t;
    e.fn[t] = function (a) {
      var s = "string" == typeof a,
        o = n.call(arguments, 1),
        l = this;
      if (s)
        this.each(function () {
          var i,
            n = e.data(this, r);
          if ("instance" === a) {
            l = n;
            return !1;
          }
          if (!n)
            return e.error(
              "cannot call methods on " +
                t +
                " prior to initialization; attempted to call method '" +
                a +
                "'"
            );
          if (!e.isFunction(n[a]) || "_" === a.charAt(0))
            return e.error(
              "no such method '" + a + "' for " + t + " widget instance"
            );
          if ((i = n[a].apply(n, o)) !== n && void 0 !== i) {
            l = i && i.jquery ? l.pushStack(i.get()) : i;
            return !1;
          }
        });
      else {
        if (o.length) a = e.widget.extend.apply(null, [a].concat(o));
        this.each(function () {
          var t = e.data(this, r);
          if (t) {
            t.option(a || {});
            if (t._init) t._init();
          } else e.data(this, r, new i(a, this));
        });
      }
      return l;
    };
  };
  e.Widget = function () {};
  e.Widget._childConstructors = [];
  e.Widget.prototype = {
    widgetName: "widget",
    widgetEventPrefix: "",
    defaultElement: "<div>",
    options: { disabled: !1, create: null },
    _createWidget: function (t, n) {
      n = e(n || this.defaultElement || this)[0];
      this.element = e(n);
      this.uuid = i++;
      this.eventNamespace = "." + this.widgetName + this.uuid;
      this.bindings = e();
      this.hoverable = e();
      this.focusable = e();
      if (n !== this) {
        e.data(n, this.widgetFullName, this);
        this._on(!0, this.element, {
          remove: function (e) {
            if (e.target === n) this.destroy();
          },
        });
        this.document = e(n.style ? n.ownerDocument : n.document || n);
        this.window = e(
          this.document[0].defaultView || this.document[0].parentWindow
        );
      }
      this.options = e.widget.extend(
        {},
        this.options,
        this._getCreateOptions(),
        t
      );
      this._create();
      this._trigger("create", null, this._getCreateEventData());
      this._init();
    },
    _getCreateOptions: e.noop,
    _getCreateEventData: e.noop,
    _create: e.noop,
    _init: e.noop,
    destroy: function () {
      this._destroy();
      this.element
        .unbind(this.eventNamespace)
        .removeData(this.widgetFullName)
        .removeData(e.camelCase(this.widgetFullName));
      this.widget()
        .unbind(this.eventNamespace)
        .removeAttr("aria-disabled")
        .removeClass(this.widgetFullName + "-disabled ui-state-disabled");
      this.bindings.unbind(this.eventNamespace);
      this.hoverable.removeClass("ui-state-hover");
      this.focusable.removeClass("ui-state-focus");
    },
    _destroy: e.noop,
    widget: function () {
      return this.element;
    },
    option: function (t, i) {
      var n,
        r,
        a,
        s = t;
      if (0 === arguments.length) return e.widget.extend({}, this.options);
      if ("string" == typeof t) {
        s = {};
        n = t.split(".");
        t = n.shift();
        if (n.length) {
          r = s[t] = e.widget.extend({}, this.options[t]);
          for (a = 0; a < n.length - 1; a++) {
            r[n[a]] = r[n[a]] || {};
            r = r[n[a]];
          }
          t = n.pop();
          if (1 === arguments.length) return void 0 === r[t] ? null : r[t];
          r[t] = i;
        } else {
          if (1 === arguments.length)
            return void 0 === this.options[t] ? null : this.options[t];
          s[t] = i;
        }
      }
      this._setOptions(s);
      return this;
    },
    _setOptions: function (e) {
      var t;
      for (t in e) this._setOption(t, e[t]);
      return this;
    },
    _setOption: function (e, t) {
      this.options[e] = t;
      if ("disabled" === e) {
        this.widget().toggleClass(this.widgetFullName + "-disabled", !!t);
        if (t) {
          this.hoverable.removeClass("ui-state-hover");
          this.focusable.removeClass("ui-state-focus");
        }
      }
      return this;
    },
    enable: function () {
      return this._setOptions({ disabled: !1 });
    },
    disable: function () {
      return this._setOptions({ disabled: !0 });
    },
    _on: function (t, i, n) {
      var r,
        a = this;
      if ("boolean" != typeof t) {
        n = i;
        i = t;
        t = !1;
      }
      if (!n) {
        n = i;
        i = this.element;
        r = this.widget();
      } else {
        i = r = e(i);
        this.bindings = this.bindings.add(i);
      }
      e.each(n, function (n, s) {
        function o() {
          if (
            t ||
            (!0 !== a.options.disabled &&
              !e(this).hasClass("ui-state-disabled"))
          )
            return ("string" == typeof s ? a[s] : s).apply(a, arguments);
        }
        if ("string" != typeof s)
          o.guid = s.guid = s.guid || o.guid || e.guid++;
        var l = n.match(/^([\w:-]*)\s*(.*)$/),
          c = l[1] + a.eventNamespace,
          h = l[2];
        if (h) r.delegate(h, c, o);
        else i.bind(c, o);
      });
    },
    _off: function (t, i) {
      i =
        (i || "").split(" ").join(this.eventNamespace + " ") +
        this.eventNamespace;
      t.unbind(i).undelegate(i);
      this.bindings = e(this.bindings.not(t).get());
      this.focusable = e(this.focusable.not(t).get());
      this.hoverable = e(this.hoverable.not(t).get());
    },
    _delay: function (e, t) {
      var i = this;
      return setTimeout(function () {
        return ("string" == typeof e ? i[e] : e).apply(i, arguments);
      }, t || 0);
    },
    _hoverable: function (t) {
      this.hoverable = this.hoverable.add(t);
      this._on(t, {
        mouseenter: function (t) {
          e(t.currentTarget).addClass("ui-state-hover");
        },
        mouseleave: function (t) {
          e(t.currentTarget).removeClass("ui-state-hover");
        },
      });
    },
    _focusable: function (t) {
      this.focusable = this.focusable.add(t);
      this._on(t, {
        focusin: function (t) {
          e(t.currentTarget).addClass("ui-state-focus");
        },
        focusout: function (t) {
          e(t.currentTarget).removeClass("ui-state-focus");
        },
      });
    },
    _trigger: function (t, i, n) {
      var r,
        a,
        s = this.options[t];
      n = n || {};
      (i = e.Event(i)).type = (
        t === this.widgetEventPrefix ? t : this.widgetEventPrefix + t
      ).toLowerCase();
      i.target = this.element[0];
      if ((a = i.originalEvent)) for (r in a) if (!(r in i)) i[r] = a[r];
      this.element.trigger(i, n);
      return !(
        (e.isFunction(s) && !1 === s.apply(this.element[0], [i].concat(n))) ||
        i.isDefaultPrevented()
      );
    },
  };
  e.each({ show: "fadeIn", hide: "fadeOut" }, function (t, i) {
    e.Widget.prototype["_" + t] = function (n, r, a) {
      if ("string" == typeof r) r = { effect: r };
      var s,
        o = !r ? t : !0 === r || "number" == typeof r ? i : r.effect || i;
      if ("number" == typeof (r = r || {})) r = { duration: r };
      s = !e.isEmptyObject(r);
      r.complete = a;
      if (r.delay) n.delay(r.delay);
      if (s && e.effects && e.effects.effect[o]) n[t](r);
      else if (o !== t && n[o]) n[o](r.duration, r.easing, a);
      else
        n.queue(function (i) {
          e(this)[t]();
          if (a) a.call(n[0]);
          i();
        });
    };
  });
  e.widget;
});
var CONVERSION_TYPES = {
    common: 0,
    barcodeGenerator: 1,
    barcodeReader: 2,
    splitPdf: 3,
    pdfInfo: 4,
  },
  quoteChangeIntervalId,
  editor,
  localFile,
  pdfUrl;
$(document).on("turbolinks:load", function () {
  if ($('[data-tooltip="tooltip"]').tooltip)
    $('[data-tooltip="tooltip"]').tooltip();
  checkStorage();
});
function handleConverterResult(e) {
  var t = e.result,
    i = e.conversionType || CONVERSION_TYPES.common,
    n = e.showFileName || !0,
    r = e.async || !1;
  if (t.remainingCredits)
    $("#currentCredits").text(t.remainingCredits + " credits");
  incrementMadeConversions();
  amplitudeTrack("Conversion (" + window.pdfco.path + ")");
  if (!1 === t.error)
    if (r) {
      $("#panel-result").hide();
      hideProgressBar();
      showWaitMessage();
      t.jobId || t.resultId;
      var a = !1;
      setInterval(function () {
        if (!a) a = !0;
      }, 5e3);
    } else showResult(t, n, i);
  else showConvertTempFileErrors(t.message);
}
function handleAsyncCompletion(e, t, i, n) {
  clearInterval(e);
  hideWaitMessage();
  $("#panel-result").show();
  switch (n) {
    case CONVERSION_TYPES.barcodeReader:
      parseJson(t.url).then(function (e) {
        t.barcodes = null;
        t.barcodes = e;
        showResult(t, i, n);
      });
      break;
    case CONVERSION_TYPES.splitPdf:
      parseJson(t.url).then(function (e) {
        t.urls = e;
        showResult(t, i, n);
      });
      break;
    default:
      showResult(t, i, n);
  }
}
function parseJson(e) {
  return new Promise(function (t, i) {
    $.ajax({
      url: e,
      type: "GET",
      success: function (e) {
        t($.parseJSON(e));
      },
      error: function () {
        i();
      },
    });
  });
}
function showResult(e, t, i) {
  if (loggedIn())
    switch (i) {
      case CONVERSION_TYPES.common:
        var n = [e.url];
        if (e.hasOwnProperty("urls")) n = e.urls;
        saveConvertedFile(n, t);
        showPreview(e.url, $("#preview"));
        break;
      case CONVERSION_TYPES.barcodeReader:
        $("#result").append($('<p class="text-center">Decoded Barcodes:</p>'));
        $.each(e.barcodes, function () {
          $("#result").append(
            $('<div class="text-center"></div>').html(
              '<textarea class="form-control text-center">' +
                this.Value +
                "</textarea>"
            )
          );
        });
        $("#preview-block").hide();
        break;
      case CONVERSION_TYPES.barcodeGenerator:
        $("#result").html(
          $(
            '<p class="text-center"><a href="' +
              e.url +
              '">Download image</a><br><img src="' +
              e.url +
              '"></p>'
          )
        );
        break;
      case CONVERSION_TYPES.splitPdf:
        n = [e.url];
        if (e.hasOwnProperty("urls")) n = e.urls;
        if ($("#merge-files").is(":checked"))
          return mergePDFDocuments("link", e.urls);
        saveConvertedFile(n, t);
        showPreview(e.urls[0], $("#preview"));
        break;
      case CONVERSION_TYPES.pdfInfo:
        hideWaitMessage();
        $(".panel-result-body").remove();
        $(".panel-result-preview > hr").remove();
        $("#json-renderer").remove();
        var r = $(
          '<pre id="json-renderer" class="collapse in previewer"></div>'
        );
        $("#preview").append(r);
        r.jsonViewer(e.info);
    }
  else
    $("#result").append(
      $(
        '<h2 class="text-center"><a href="/signup?redirection_path=' +
          location.href +
          "?resultId=" +
          e.resultId +
          '"><i class="fa fa-icon fa-download"></i> Here is your file</a></h2>'
      )
    );
}
function getCachedResult(e, t) {
  if (void 0 === t) t = CONVERSION_TYPES.common;
  if (void 0 === e) e = !0;
  if (loggedIn()) {
    var i = getParameterByName("resultId", location.search);
    if (i && 0 !== i.length) showWaitMessage();
  }
}
function loggedIn() {
  return "true" === $("#current-user").val();
}
function extractFileName(e) {
  return e.split("?")[0].split("/")[e.split("?")[0].split("/").length - 1];
}
function extractFileExt(e) {
  return e.split("?")[0].split(".").pop();
}
function getCurrentDateTimeAsString() {
  var e = new Date();
  return e.getFullYear() + "-" + (e.getMonth() + 1) + "-" + e.getDate();
}
function handleConverterResponse(e) {
  var t = e.result,
    i = e.async || !1;
  if (!0 === t.error)
    showConvertTempFileErrors(t.message || "Error converting file :(");
  else {
    if (i) return;
    if (loggedIn()) showPreview(t.url, $("#preview"));
    hideWaitMessage();
  }
}
function showConvertTempFileErrors(e, t) {
  e = void 0 !== e ? e : "Something went wrong !";
  hideWaitMessage();
  if (!t) showInputBox();
  $("#panel-error").toggleClass("hidden", !1);
  $("#panel-result").toggleClass("hidden", !0);
  $("#error-list").html("");
  $("#error-list").append("<li>" + e + "</li>");
  if (t)
    $("#panel-error")
      .append($('<button id="retry" class="btn btn-primary">Retry</button>'))
      .on("click", function () {
        t();
        $("#panel-error").addClass("hidden");
      });
  clearCustomFileInput();
  $("body").animate({ scrollTop: $("#panel-error").offset().top });
}
$("body").click(function () {
  if (
    $(".navbar-collapse").is(":visible") &&
    $(".navbar-toggle").is(":visible")
  )
    $(".navbar-collapse").collapse("toggle");
});
$(".btn[data-toggle='collapse']").on("click", function () {
  $(this).button("toggle");
  $(this)
    .find("span")
    .toggleClass("glyphicon-triangle-right glyphicon-triangle-bottom");
});
$(".nav > li > a").on("click", function () {
  $("#panel-error").toggleClass("hidden", !0);
  $("#panel-result").toggleClass("hidden", !0);
});
$(".resolution-selector > li > a").on("click", function (e) {
  var t = this.href.substring(this.href.indexOf("#"));
  $(t).attr("value", this.text);
  e.preventDefault();
});
function uploadFileWithPresignedUrl(e, t, i, n, r) {
  r || e.type;
  i = encodeURIComponent(i.replace(/\//g, "_"));
}
function uploadFileByUrl(e, t, i) {
  if (i) {
    i.closest(".progress-bar-wrapper").css("display", "block");
    i.css("width", "50%");
  }
}
function checkConversionLimits() {
  return new Promise(function (e, t) {});
}
function startConversionWithCheck(e, t) {
  $(".additional-upload-buttons button").prop("disabled", !0);
  $(".additional-upload-buttons")
    .find("input[type=file]")
    .filestyle("disabled", !0);
  checkConversionLimits()
    .then(function () {
      $(".additional-upload-buttons button").prop("disabled", !1);
      $(".additional-upload-buttons")
        .find("input[type=file]")
        .filestyle("disabled", !1);
      startConversion(e, t);
    })
    .catch(function () {
      Turbolinks.visit("/subscriptions");
      setTimeout(function () {
        $("#flash_notice").html(
          '<div class="text-center alert alert-danger flash-message">You have reached the limit of conversions. You can upgrade your subscription plan to perform new conversions.<button type="button" class="close alert-close-btn " data-dismiss="alert" aria-label="Close"><span aria-hidden="true">×</span></button></div>'
        );
      }, 2e3);
    });
}
function setMadeConversions(e) {
  localStorage.setItem("pdfcoConversionsMade", e);
}
function getMadeConversions() {
  return parseInt(localStorage.getItem("pdfcoConversionsMade"), 10) || 0;
}
function incrementMadeConversions() {
  var e = getMadeConversions();
  localStorage.setItem("pdfcoConversionsMade", e + 1);
}
function saveConvertedFile(e, t) {
  var i = $("#inputUrl").val() ? $("#inputUrl").val().trim() : "";
  $("#inputUrl").val("");
  $("#inputFile").val("");
  var n = i.split(",");
  if (0 === (n = n.filter(Boolean)).length)
    for (var r = $("#inputFile"), a = [], s = 0; s < r[0].files.length; s++)
      a.push(r[0].files[s].name);
  e.forEach(function (e, i) {
    var n = "Here is your file";
    if (t) n = "Download File (." + extractFileExt(e) + ")";
    $("#result").append(
      $(
        '<h2 class="text-center"><a class="btn btn-lg btn-primary" target="_blank" href="' +
          e +
          '"><i class="fa fa-icon fa-download"></i> ' +
          n +
          "</a></h2>"
      )
    );
    $("#result p")
      .last()
      .append(
        $("<br/><div class='google-drive'></div>").attr(
          "id",
          "google-drive-" + i
        )
      );
    renderGoogleSaver(e, n, $("#result p").last().find("div.google-drive"));
  });
  appendDropboxSaver(e);
}
function docToPdf(e, t, i) {
  e.split("/")[e.split("/").length - 1].split("?")[0];
}
function appendDropboxSaver(e) {
  if ("undefined" != typeof Dropbox)
    if (loggedIn()) {
      var t = Dropbox.createSaveButton({
        files: e.map(function (e) {
          return { url: e };
        }),
      });
      $("#dropbox-save").html($(t));
    }
}
function convertWithUrl(e) {
  var t = new RegExp("[\\?&]convert_to_url=([^&#]*)").exec(
    window.location.href
  );
  if (null != t) {
    $("#inputUrl").val(t[1]);
    showWaitMessage();
    e("link", t[1]);
  }
}
function getParameterByName(e, t) {
  if (!t) t = window.location.href;
  e = e.replace(/[\[\]]/g, "\\$&");
  var i = new RegExp("[?&]" + e + "(=([^&#]*)|&|#|$)").exec(t);
  if (!i) return null;
  if (!i[2]) return "";
  else return decodeURIComponent(i[2].replace(/\+/g, " "));
}
function downloadFilesAfterSignIn() {
  var e = getParameterByName("download_urls");
  if (null !== e) {
    var t = JSON.parse(e);
    displayFile(t);
    if (-1 === t.indexOf(",")) showPreview(t[0], $("#preview"));
  }
}
function hideWaitMessage() {
  if (quoteChangeIntervalId) clearInterval(quoteChangeIntervalId);
  $("#wait-message").hide();
  hideProgressBar();
  window.onbeforeunload = null;
  document.body.style.overflow = "visible";
  $(".main-content").css("margin-top", "0px");
}
function hideProgressBar() {
  $(".progress-bar-wrapper").hide();
  $(".progress-bar-wrapper span").css("width", "0%");
}
function showWaitMessage() {
  hideInputBox();
  hideInfoBlocks();
  window.onbeforeunload = null;
  quoteChangeIntervalId = setInterval(changeQuote, 1e4);
  $("#wait-message").show();
  document.body.style.overflow = "hidden";
  $(".main-content").css("margin-top", "55px");
  $("html, body").animate({ scrollTop: 0 }, "slow");
}
function showProgressBar() {
  hideInputBox();
  hideInfoBlocks();
  $(".progress-bar-wrapper").show();
}
function hideInfoBlocks() {
  $("#info-blocks").slideUp();
}
function showInfoBlocks() {
  $("#info-blocks").slideDown();
}
$(document).on(
  "click",
  "#store-data a, #show-preview.unauthorized, .unauthorized-download",
  function () {
    $("#result").val();
  }
);
function displayFile(e) {
  if (loggedIn()) {
    e.forEach(function (e, t) {
      var i = "Download " + extractFileExt(e) + " file #" + (t + 1);
      $("#result").append(
        $(
          '<p class="text-center"><a class="btn btn-lg btn-primary" target="_blank" href="' +
            e +
            '"><h2><i class="fa fa-icon fa-download"></i> ' +
            i +
            "</h2></a></p>"
        )
      );
      $("#result p")
        .last()
        .append(
          $("<div class='google-drive'></div>").attr("id", "google-drive-" + t)
        );
      renderGoogleSaver(e, i, $("#result p").last().find("div.google-drive"));
    });
    $("#panel-result").toggleClass("hidden", !1);
  } else {
    e.forEach(function (e, t) {
      $("#result").val(e);
      var i = "Download " + extractFileExt(e) + " file #" + (t + 1);
      $("#result").append(
        $(
          '<p class="text-center" id=\'store-data\'><a class="btn btn-lg btn-primary" target="_blank" ><h2><i class="fa fa-icon fa-download"></i> ' +
            i +
            "</h2></a></p>"
        )
      );
      renderGoogleSaver(e, i, $("#result p").last().find("div.google-drive"));
      $("#result p")
        .last()
        .find("div.google-drive")
        .prepend($("<a>").addClass("unauthorized-download"));
    });
    $("#panel-result").toggleClass("hidden", !1);
  }
  appendDropboxSaver(e);
  hideInputBox();
}
function renderGoogleSaver(e, t, i) {
  if ("undefined" != typeof gapi) {
    i.html($("<div></div>").attr("id", i.attr("id") + "-container"));
    gapi.savetodrive.render(i.attr("id") + "-container", {
      src: e,
      filename: t,
      sitename: "PDF.co",
    });
  }
}
function hideInputBox() {
  $("#inputBox").slideUp("fast");
  $(".templates-block").slideUp("fast");
}
function showInputBox(e) {
  $("#inputFile").val("");
  $("#inputUrl").val("");
  $(".reset-input").val("");
  if (!e || !e.leavePreview)
    if ($("#preview-files").length > 0) removePreviews();
  $("#inputBox").fadeIn(500);
}
function clearCustomFileInput() {
  if ($(".additional-upload-buttons").find(".bootstrap-filestyle").length > 0)
    $(".additional-upload-buttons").find("input[type=file]").filestyle("clear");
}
function startOver(e) {
  $("#panel-error").toggleClass("hidden", !0);
  $("#panel-result").toggleClass("hidden", !0);
  $(".hide-on-start-over").toggleClass("hidden", !0);
  $("#progress-bar span").css("width", "0%");
  $("#show-preview").html("Hide Preview");
  $(".uploader, .tip").show(0);
  $("#result").html("");
  clearCustomFileInput();
  showInputBox(e);
  showInfoBlocks();
}
function removePreviews() {
  $("#preview-files").children(".preview-file").remove();
  $("#preview-files").children(".preview-page").remove();
}
function setProgressBar(e, t) {
  e.on("change", function () {
    $("#progress-bar span").css("width", "0%");
    $("#progress-bar span").animate({ width: (t || 50) + "%" }, 200);
  });
}
function checkFormatAllowed(e, t) {
  if (-1 !== e.val().indexOf("chrome://")) return !1;
  if ("" === e.val() && "file" === e.attr("type")) return !0;
  if ("" === e.val() && "text" === e.attr("type")) return !1;
  var i = e.attr("accept").split(",");
  if (0 === i.length || "." == i) return !0;
  var n = "";
  if ("file" === e.attr("type")) {
    var r = e[0].files[e[0].files.length - 1];
    (n = r.name.replace(/^.*\./, "")) === r.name
      ? (n = "")
      : (n = "." + n.toLowerCase());
  } else if ("text" === e.attr("type")) {
    var a = e.val();
    if (getParameterByName("fileExtension", a))
      n = getParameterByName("fileExtension", a);
    else n = e.val().replace(/^.*\./, "").split("?")[0];
    n === e.val() ? (n = "") : (n = "." + n.toLowerCase());
  }
  if (-1 === i.indexOf(n)) {
    e.val("");
    t.find("#error-list").append(
      $("<li>Sorry, file format " + n + " is not allowed</li>")
    );
    t.removeClass("hidden");
    $("body").animate({ scrollTop: t.offset().top });
    return !1;
  }
  return !0;
}
function showError(e) {
  $("#panel-error").toggleClass("hidden", !1);
  $("#panel-result").toggleClass("hidden", !0);
  $("#error-status-code").html("-");
  $("#error-list").html("");
  $("#error-list").append($("<li>" + e + "</li>"));
  $("body").animate({ scrollTop: $("#panel-error").offset().top });
}
function hideError() {
  $("#panel-error").toggleClass("hidden", !0);
}
function showLoading() {
  $("#show-preview").addClass("hidden");
  $("#loading-icon").removeClass("hidden");
}
function hideLoading(e) {
  $("#show-preview").attr("data-target", "#" + e + "-renderer");
  $("#show-preview").removeClass("hidden");
  $("#loading-icon").addClass("hidden");
}
function showUnauthorizedPreview() {
  var e = $("#show-preview");
  e.removeClass("hidden");
  e.addClass("unauthorized");
  e.attr("data-toggle", null);
  e.attr("data-target", null);
}
function showPreview(e, t) {
  if (e) {
    if (!loggedIn()) return showUnauthorizedPreview();
    var i = /(?:\.([^.]+))?$/.exec(e.split("?")[0])[1];
    $("#loading-icon").removeClass("hidden").show();
    $(t).find(".previewer").remove();
    var n = $(
      '<pre id="' + i + '-renderer" class="collapse in previewer"></div>'
    );
    t.append(n);
    showLoading();
    switch (i) {
      case "json":
        showJsonPreview(e, n);
        break;
      case "csv":
        showCsvPreview(e, n);
        break;
      case "txt":
        showTxtPreview(e, n);
        break;
      case "pdf":
        showPdfPreview(e, n);
        break;
      default:
        hideLoading();
        $("#preview-block").addClass("hidden");
    }
  }
}
function showJsonPreview(e, t) {}
function showCsvPreview(e, t) {}
function showTxtPreview(e, t) {}
function showPdfPreview(e, t) {
  var i = new pdfViewer(e, t);
  i.initPromise.then(function () {
    i.renderPage(
      1,
      function () {
        hideLoading("pdf");
      },
      $("#preview").width() -
        parseFloat($("#pdf-renderer").css("padding-left")) -
        parseFloat($("#pdf-renderer").css("padding-right")) -
        getScrollBarWidth() -
        2
    );
  });
}
function getScrollBarWidth() {
  var e = $("<div>")
      .css({ visibility: "hidden", width: 100, overflow: "scroll" })
      .appendTo("body"),
    t = $("<div>").css({ width: "100%" }).appendTo(e).outerWidth();
  e.remove();
  return 100 - t;
}
function resizeCanvas(e, t, i) {
  var n = e.parent().width();
  if (n < t) e.attr("width", n);
  else e.attr("width", t);
  e.attr("height", e.attr("width") * (i || 0.5));
}
function base64ToBlob(e, t) {
  t = t || "";
  for (
    var i = window.atob(e.replace(/\s/g, "")), n = [], r = 0, a = i.length;
    r < a;
    r += 1024
  ) {
    for (
      var s = i.slice(r, r + 1024), o = new Array(s.length), l = 0;
      l < s.length;
      l++
    )
      o[l] = s.charCodeAt(l);
    var c = new Uint8Array(o);
    n.push(c);
  }
  return new Blob(n, { type: t });
}
$(document).on("click", "#show-preview", function () {
  if ("hide preview" === $(this).html().trim().toLocaleLowerCase())
    $(this).html("Show Preview Of Output File");
  else $(this).html("Hide Preview");
});
$(document).on("click", "#start-over", function () {
  startOver();
});
$(document).on("click", "#to-top", function (e) {
  e.preventDefault();
  $("body").animate({ scrollTop: 0 });
});
$(document).ready(function () {
  if ($(".flash-message").length > 0)
    setTimeout(function () {
      $(".flash-message").each(function () {
        if (!$(this).hasClass("permanent")) $(this).slideUp();
      });
    }, 15e3);
  downloadFilesAfterSignIn();
});
function checkLocationForUrl(e) {
  var t = getParameterByName("url", window.location.href);
  if (!t || t.includes("chrome://")) return !1;
  try {
    t = decodeURIComponent(window.atob(t));
  } catch (e) {}
  $("#inputUrl").val(t);
  if (e) e(t);
  else if (startConversion) startConversionWithCheck();
  return !0;
}
function checkStorage() {
  if (localStorage.getItem("pdfcoAfterLoginEndpoint") && loggedIn())
    $.ajax({
      url: localStorage.getItem("pdfcoAfterLoginEndpoint"),
      type: localStorage.getItem("pdfcoAfterLoginMethod"),
      data: localStorage.getItem("pdfcoAfterLoginOptions"),
      contentType: localStorage.getItem("pdfcoAfterLoginContentType"),
      success: function () {
        removeStorage();
      },
      error: function () {
        removeStorage();
      },
    });
}
function removeStorage() {
  localStorage.removeItem("pdfcoAfterLoginEndpoint");
  localStorage.removeItem("pdfcoAfterLoginMethod");
  localStorage.removeItem("pdfcoAfterLoginOptions");
  localStorage.removeItem("pdfcoAfterLoginContentType");
}
function isEmail(e) {
  return /^([a-zA-Z0-9_.+-])+\@(([a-zA-Z0-9-])+\.)+([a-zA-Z0-9]{2,4})+$/.test(
    e
  );
}
$(document).on("click", ".toggle-icon", function () {
  $(this).find("i").toggleClass("hidden");
});
$(document).on("click", function () {
  $(".expandable.collapse").removeClass("in");
});
$(document).on("click", '[data-loading="true"]', function () {
  initButtonLoading($(this));
});
function initButtonLoading(e) {
  var t = e.find(".loading-pic");
  if (0 === t.length) t = e.siblings(".loading-pic");
  e.after($(t).clone().removeClass("hidden"));
  e.addClass("hidden");
}
function getFileNameFromUrl(e) {
  return e.split("?")[0].split("/").pop();
}
function isCanvasBlank(e) {
  var t = document.createElement("canvas");
  t.width = e.width;
  t.height = e.height;
  return e.toDataURL() === t.toDataURL();
}
function requestImageDataUrl(e, t) {
  $.ajax({
    url: e,
    type: "GET",
    mimeType: "text/plain; charset=x-user-defined",
  }).done(function (e, i, n) {
    var r = "data:image/png;base64," + base64Encode(e);
    t(r);
  });
}
function base64Encode(e) {
  for (
    var t,
      i,
      n,
      r = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
      a = "",
      s = 0,
      o = e.length;
    s < o;

  ) {
    t = 255 & e.charCodeAt(s++);
    if (s === o) {
      a += r.charAt(t >> 2);
      a += r.charAt((3 & t) << 4);
      a += "==";
      break;
    }
    i = e.charCodeAt(s++);
    if (s === o) {
      a += r.charAt(t >> 2);
      a += r.charAt(((3 & t) << 4) | ((240 & i) >> 4));
      a += r.charAt((15 & i) << 2);
      a += "=";
      break;
    }
    n = e.charCodeAt(s++);
    a += r.charAt(t >> 2);
    a += r.charAt(((3 & t) << 4) | ((240 & i) >> 4));
    a += r.charAt(((15 & i) << 2) | ((192 & n) >> 6));
    a += r.charAt(63 & n);
  }
  return a;
}
function parseJsonBlock(e) {
  if ($(e).length > 0 && $(e).html().length > 0) return JSON.parse($(e).html());
}
function placedElements() {
  var e = { images: [], annotations: [] };
  $.each($("#changes-data .invited-change-json-item"), function () {
    if (0 !== $(this).html().trim().length) {
      var t = JSON.parse($(this).html());
      if (t.annotations && t.annotations.length > 0)
        e.annotations = e.annotations.concat(t.annotations);
      if (t.images && t.images.length > 0) e.images = e.images.concat(t.images);
    }
  });
  return e;
}
function resizeText(e, t) {
  var i;
  i = parseInt($(t).css("font-size").slice(0, -2)) + e + "px";
  return $(t).css({ "font-size": i, "line-height": i });
}
function autoSizeText(e, t, i) {
  try {
    if (!e || 0 === $(e).length) return;
    var n = e;
    e = $(e).clone();
    $(e).css({
      height: i || $(n).outerHeight(),
      width: t || $(n).outerWidth(),
      "font-family": $(n).css("font-family"),
    });
    $($("body")).after(e);
    if (
      e.prop("scrollHeight") > e.outerHeight() ||
      e.prop("scrollWidth") > e.outerWidth()
    )
      for (
        var r = 0;
        (r < 999 && e.prop("scrollHeight") > e.outerHeight()) ||
        e.prop("scrollWidth") > e.outerWidth();

      ) {
        e = resizeText(-1, e);
        r += 1;
      }
    else {
      for (
        r = 0;
        (r < 999) & (e.prop("scrollHeight") <= e.outerHeight()) &&
        e.prop("scrollWidth") <= e.outerWidth();

      ) {
        e = resizeText(1, e);
        r += 1;
      }
      e = resizeText(-2, e);
    }
    $(n).css({
      "font-size": $(e).css("font-size"),
      "line-height": $(e).css("line-height"),
    });
    $(e).remove();
  } catch (e) {}
}
!(function (e, t) {
  "object" == typeof exports
    ? (module.exports = exports = t())
    : "function" == typeof define && define.amd
    ? define([], t)
    : (e.CryptoJS = t());
})(this, function () {
  var e,
    t,
    i,
    n,
    r,
    a,
    s,
    o,
    l,
    c,
    h,
    u,
    d,
    f,
    p,
    g,
    m,
    v,
    b,
    y,
    w,
    x,
    k,
    C,
    S,
    _,
    A,
    F,
    T,
    P,
    E,
    I,
    D,
    O,
    R,
    N,
    M,
    B,
    L,
    U,
    z,
    j,
    q,
    H,
    W,
    G,
    V,
    X,
    K,
    Y,
    Z,
    J,
    $,
    Q,
    ee,
    te,
    ie,
    ne,
    re,
    ae,
    se,
    oe,
    le,
    ce,
    he,
    ue,
    de,
    fe,
    pe,
    ge,
    me,
    ve,
    be,
    ye,
    we,
    xe,
    ke,
    Ce =
      Ce ||
      (function (e) {
        var t;
        if (
          ("undefined" != typeof window && window.crypto && (t = window.crypto),
          !t &&
            "undefined" != typeof window &&
            window.msCrypto &&
            (t = window.msCrypto),
          !t &&
            "undefined" != typeof global &&
            global.crypto &&
            (t = global.crypto),
          !t && "function" == typeof require)
        )
          try {
            t = require("crypto");
          } catch (t) {}
        function i() {
          if (t) {
            if ("function" == typeof t.getRandomValues)
              try {
                return t.getRandomValues(new Uint32Array(1))[0];
              } catch (e) {}
            if ("function" == typeof t.randomBytes)
              try {
                return t.randomBytes(4).readInt32LE();
              } catch (e) {}
          }
          throw new Error(
            "Native crypto module could not be used to get secure random number."
          );
        }
        var n =
          Object.create ||
          function (e) {
            var t;
            return (r.prototype = e), (t = new r()), (r.prototype = null), t;
          };
        function r() {}
        var a = {},
          s = (a.lib = {}),
          o = (s.Base = {
            extend: function (e) {
              var t = n(this);
              return (
                e && t.mixIn(e),
                (t.hasOwnProperty("init") && this.init !== t.init) ||
                  (t.init = function () {
                    t.$super.init.apply(this, arguments);
                  }),
                ((t.init.prototype = t).$super = this),
                t
              );
            },
            create: function () {
              var e = this.extend();
              return e.init.apply(e, arguments), e;
            },
            init: function () {},
            mixIn: function (e) {
              for (var t in e) e.hasOwnProperty(t) && (this[t] = e[t]);
              e.hasOwnProperty("toString") && (this.toString = e.toString);
            },
            clone: function () {
              return this.init.prototype.extend(this);
            },
          }),
          l = (s.WordArray = o.extend({
            init: function (e, t) {
              (e = this.words = e || []),
                (this.sigBytes = null != t ? t : 4 * e.length);
            },
            toString: function (e) {
              return (e || h).stringify(this);
            },
            concat: function (e) {
              var t = this.words,
                i = e.words,
                n = this.sigBytes,
                r = e.sigBytes;
              if ((this.clamp(), n % 4))
                for (var a = 0; a < r; a++) {
                  var s = (i[a >>> 2] >>> (24 - (a % 4) * 8)) & 255;
                  t[(n + a) >>> 2] |= s << (24 - ((n + a) % 4) * 8);
                }
              else for (a = 0; a < r; a += 4) t[(n + a) >>> 2] = i[a >>> 2];
              return (this.sigBytes += r), this;
            },
            clamp: function () {
              var t = this.words,
                i = this.sigBytes;
              (t[i >>> 2] &= 4294967295 << (32 - (i % 4) * 8)),
                (t.length = e.ceil(i / 4));
            },
            clone: function () {
              var e = o.clone.call(this);
              return (e.words = this.words.slice(0)), e;
            },
            random: function (e) {
              for (var t = [], n = 0; n < e; n += 4) t.push(i());
              return new l.init(t, e);
            },
          })),
          c = (a.enc = {}),
          h = (c.Hex = {
            stringify: function (e) {
              for (var t = e.words, i = e.sigBytes, n = [], r = 0; r < i; r++) {
                var a = (t[r >>> 2] >>> (24 - (r % 4) * 8)) & 255;
                n.push((a >>> 4).toString(16)), n.push((15 & a).toString(16));
              }
              return n.join("");
            },
            parse: function (e) {
              for (var t = e.length, i = [], n = 0; n < t; n += 2)
                i[n >>> 3] |=
                  parseInt(e.substr(n, 2), 16) << (24 - (n % 8) * 4);
              return new l.init(i, t / 2);
            },
          }),
          u = (c.Latin1 = {
            stringify: function (e) {
              for (var t = e.words, i = e.sigBytes, n = [], r = 0; r < i; r++) {
                var a = (t[r >>> 2] >>> (24 - (r % 4) * 8)) & 255;
                n.push(String.fromCharCode(a));
              }
              return n.join("");
            },
            parse: function (e) {
              for (var t = e.length, i = [], n = 0; n < t; n++)
                i[n >>> 2] |= (255 & e.charCodeAt(n)) << (24 - (n % 4) * 8);
              return new l.init(i, t);
            },
          }),
          d = (c.Utf8 = {
            stringify: function (e) {
              try {
                return decodeURIComponent(escape(u.stringify(e)));
              } catch (e) {
                throw new Error("Malformed UTF-8 data");
              }
            },
            parse: function (e) {
              return u.parse(unescape(encodeURIComponent(e)));
            },
          }),
          f = (s.BufferedBlockAlgorithm = o.extend({
            reset: function () {
              (this._data = new l.init()), (this._nDataBytes = 0);
            },
            _append: function (e) {
              "string" == typeof e && (e = d.parse(e)),
                this._data.concat(e),
                (this._nDataBytes += e.sigBytes);
            },
            _process: function (t) {
              var i,
                n = this._data,
                r = n.words,
                a = n.sigBytes,
                s = this.blockSize,
                o = a / (4 * s),
                c =
                  (o = t
                    ? e.ceil(o)
                    : e.max((0 | o) - this._minBufferSize, 0)) * s,
                h = e.min(4 * c, a);
              if (c) {
                for (var u = 0; u < c; u += s) this._doProcessBlock(r, u);
                (i = r.splice(0, c)), (n.sigBytes -= h);
              }
              return new l.init(i, h);
            },
            clone: function () {
              var e = o.clone.call(this);
              return (e._data = this._data.clone()), e;
            },
            _minBufferSize: 0,
          })),
          p =
            ((s.Hasher = f.extend({
              cfg: o.extend(),
              init: function (e) {
                (this.cfg = this.cfg.extend(e)), this.reset();
              },
              reset: function () {
                f.reset.call(this), this._doReset();
              },
              update: function (e) {
                return this._append(e), this._process(), this;
              },
              finalize: function (e) {
                return e && this._append(e), this._doFinalize();
              },
              blockSize: 16,
              _createHelper: function (e) {
                return function (t, i) {
                  return new e.init(i).finalize(t);
                };
              },
              _createHmacHelper: function (e) {
                return function (t, i) {
                  return new p.HMAC.init(e, i).finalize(t);
                };
              },
            })),
            (a.algo = {}));
        return a;
      })(Math);
  function Se(e, t, i) {
    return e ^ t ^ i;
  }
  function _e(e, t, i) {
    return (e & t) | (~e & i);
  }
  function Ae(e, t, i) {
    return (e | ~t) ^ i;
  }
  function Fe(e, t, i) {
    return (e & i) | (t & ~i);
  }
  function Te(e, t, i) {
    return e ^ (t | ~i);
  }
  function Pe(e, t) {
    return (e << t) | (e >>> (32 - t));
  }
  function Ee(e, t, i, n) {
    var r,
      a = this._iv;
    a ? ((r = a.slice(0)), (this._iv = void 0)) : (r = this._prevBlock),
      n.encryptBlock(r, 0);
    for (var s = 0; s < i; s++) e[t + s] ^= r[s];
  }
  function Ie(e) {
    if (255 == ((e >> 24) & 255)) {
      var t = (e >> 16) & 255,
        i = (e >> 8) & 255,
        n = 255 & e;
      255 === t
        ? ((t = 0), 255 === i ? ((i = 0), 255 === n ? (n = 0) : ++n) : ++i)
        : ++t,
        (e = 0),
        (e += t << 16),
        (e += i << 8),
        (e += n);
    } else e += 1 << 24;
    return e;
  }
  function De() {
    for (var e = this._X, t = this._C, i = 0; i < 8; i++) ue[i] = t[i];
    (t[0] = (t[0] + 1295307597 + this._b) | 0),
      (t[1] = (t[1] + 3545052371 + (t[0] >>> 0 < ue[0] >>> 0 ? 1 : 0)) | 0),
      (t[2] = (t[2] + 886263092 + (t[1] >>> 0 < ue[1] >>> 0 ? 1 : 0)) | 0),
      (t[3] = (t[3] + 1295307597 + (t[2] >>> 0 < ue[2] >>> 0 ? 1 : 0)) | 0),
      (t[4] = (t[4] + 3545052371 + (t[3] >>> 0 < ue[3] >>> 0 ? 1 : 0)) | 0),
      (t[5] = (t[5] + 886263092 + (t[4] >>> 0 < ue[4] >>> 0 ? 1 : 0)) | 0),
      (t[6] = (t[6] + 1295307597 + (t[5] >>> 0 < ue[5] >>> 0 ? 1 : 0)) | 0),
      (t[7] = (t[7] + 3545052371 + (t[6] >>> 0 < ue[6] >>> 0 ? 1 : 0)) | 0),
      (this._b = t[7] >>> 0 < ue[7] >>> 0 ? 1 : 0);
    for (i = 0; i < 8; i++) {
      var n = e[i] + t[i],
        r = 65535 & n,
        a = n >>> 16,
        s = ((((r * r) >>> 17) + r * a) >>> 15) + a * a,
        o = (((4294901760 & n) * n) | 0) + (((65535 & n) * n) | 0);
      de[i] = s ^ o;
    }
    (e[0] =
      (de[0] +
        ((de[7] << 16) | (de[7] >>> 16)) +
        ((de[6] << 16) | (de[6] >>> 16))) |
      0),
      (e[1] = (de[1] + ((de[0] << 8) | (de[0] >>> 24)) + de[7]) | 0),
      (e[2] =
        (de[2] +
          ((de[1] << 16) | (de[1] >>> 16)) +
          ((de[0] << 16) | (de[0] >>> 16))) |
        0),
      (e[3] = (de[3] + ((de[2] << 8) | (de[2] >>> 24)) + de[1]) | 0),
      (e[4] =
        (de[4] +
          ((de[3] << 16) | (de[3] >>> 16)) +
          ((de[2] << 16) | (de[2] >>> 16))) |
        0),
      (e[5] = (de[5] + ((de[4] << 8) | (de[4] >>> 24)) + de[3]) | 0),
      (e[6] =
        (de[6] +
          ((de[5] << 16) | (de[5] >>> 16)) +
          ((de[4] << 16) | (de[4] >>> 16))) |
        0),
      (e[7] = (de[7] + ((de[6] << 8) | (de[6] >>> 24)) + de[5]) | 0);
  }
  function Oe() {
    for (var e = this._X, t = this._C, i = 0; i < 8; i++) we[i] = t[i];
    (t[0] = (t[0] + 1295307597 + this._b) | 0),
      (t[1] = (t[1] + 3545052371 + (t[0] >>> 0 < we[0] >>> 0 ? 1 : 0)) | 0),
      (t[2] = (t[2] + 886263092 + (t[1] >>> 0 < we[1] >>> 0 ? 1 : 0)) | 0),
      (t[3] = (t[3] + 1295307597 + (t[2] >>> 0 < we[2] >>> 0 ? 1 : 0)) | 0),
      (t[4] = (t[4] + 3545052371 + (t[3] >>> 0 < we[3] >>> 0 ? 1 : 0)) | 0),
      (t[5] = (t[5] + 886263092 + (t[4] >>> 0 < we[4] >>> 0 ? 1 : 0)) | 0),
      (t[6] = (t[6] + 1295307597 + (t[5] >>> 0 < we[5] >>> 0 ? 1 : 0)) | 0),
      (t[7] = (t[7] + 3545052371 + (t[6] >>> 0 < we[6] >>> 0 ? 1 : 0)) | 0),
      (this._b = t[7] >>> 0 < we[7] >>> 0 ? 1 : 0);
    for (i = 0; i < 8; i++) {
      var n = e[i] + t[i],
        r = 65535 & n,
        a = n >>> 16,
        s = ((((r * r) >>> 17) + r * a) >>> 15) + a * a,
        o = (((4294901760 & n) * n) | 0) + (((65535 & n) * n) | 0);
      xe[i] = s ^ o;
    }
    (e[0] =
      (xe[0] +
        ((xe[7] << 16) | (xe[7] >>> 16)) +
        ((xe[6] << 16) | (xe[6] >>> 16))) |
      0),
      (e[1] = (xe[1] + ((xe[0] << 8) | (xe[0] >>> 24)) + xe[7]) | 0),
      (e[2] =
        (xe[2] +
          ((xe[1] << 16) | (xe[1] >>> 16)) +
          ((xe[0] << 16) | (xe[0] >>> 16))) |
        0),
      (e[3] = (xe[3] + ((xe[2] << 8) | (xe[2] >>> 24)) + xe[1]) | 0),
      (e[4] =
        (xe[4] +
          ((xe[3] << 16) | (xe[3] >>> 16)) +
          ((xe[2] << 16) | (xe[2] >>> 16))) |
        0),
      (e[5] = (xe[5] + ((xe[4] << 8) | (xe[4] >>> 24)) + xe[3]) | 0),
      (e[6] =
        (xe[6] +
          ((xe[5] << 16) | (xe[5] >>> 16)) +
          ((xe[4] << 16) | (xe[4] >>> 16))) |
        0),
      (e[7] = (xe[7] + ((xe[6] << 8) | (xe[6] >>> 24)) + xe[5]) | 0);
  }
  return (
    (e = Ce.lib.WordArray),
    (Ce.enc.Base64 = {
      stringify: function (e) {
        var t = e.words,
          i = e.sigBytes,
          n = this._map;
        e.clamp();
        for (var r = [], a = 0; a < i; a += 3)
          for (
            var s =
                (((t[a >>> 2] >>> (24 - (a % 4) * 8)) & 255) << 16) |
                (((t[(a + 1) >>> 2] >>> (24 - ((a + 1) % 4) * 8)) & 255) << 8) |
                ((t[(a + 2) >>> 2] >>> (24 - ((a + 2) % 4) * 8)) & 255),
              o = 0;
            o < 4 && a + 0.75 * o < i;
            o++
          )
            r.push(n.charAt((s >>> (6 * (3 - o))) & 63));
        var l = n.charAt(64);
        if (l) for (; r.length % 4; ) r.push(l);
        return r.join("");
      },
      parse: function (t) {
        var i = t.length,
          n = this._map,
          r = this._reverseMap;
        if (!r) {
          r = this._reverseMap = [];
          for (var a = 0; a < n.length; a++) r[n.charCodeAt(a)] = a;
        }
        var s = n.charAt(64);
        if (s) {
          var o = t.indexOf(s);
          -1 !== o && (i = o);
        }
        return (function (t, i, n) {
          for (var r = [], a = 0, s = 0; s < i; s++)
            if (s % 4) {
              var o =
                (n[t.charCodeAt(s - 1)] << ((s % 4) * 2)) |
                (n[t.charCodeAt(s)] >>> (6 - (s % 4) * 2));
              (r[a >>> 2] |= o << (24 - (a % 4) * 8)), a++;
            }
          return e.create(r, a);
        })(t, i, r);
      },
      _map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
    }),
    (function (e) {
      var t = Ce,
        i = t.lib,
        n = i.WordArray,
        r = i.Hasher,
        a = t.algo,
        s = [];
      !(function () {
        for (var t = 0; t < 64; t++)
          s[t] = (4294967296 * e.abs(e.sin(t + 1))) | 0;
      })();
      var o = (a.MD5 = r.extend({
        _doReset: function () {
          this._hash = new n.init([
            1732584193, 4023233417, 2562383102, 271733878,
          ]);
        },
        _doProcessBlock: function (e, t) {
          for (var i = 0; i < 16; i++) {
            var n = t + i,
              r = e[n];
            e[n] =
              (16711935 & ((r << 8) | (r >>> 24))) |
              (4278255360 & ((r << 24) | (r >>> 8)));
          }
          var a = this._hash.words,
            o = e[t + 0],
            d = e[t + 1],
            f = e[t + 2],
            p = e[t + 3],
            g = e[t + 4],
            m = e[t + 5],
            v = e[t + 6],
            b = e[t + 7],
            y = e[t + 8],
            w = e[t + 9],
            x = e[t + 10],
            k = e[t + 11],
            C = e[t + 12],
            S = e[t + 13],
            _ = e[t + 14],
            A = e[t + 15],
            F = a[0],
            T = a[1],
            P = a[2],
            E = a[3];
          (F = l(F, T, P, E, o, 7, s[0])),
            (E = l(E, F, T, P, d, 12, s[1])),
            (P = l(P, E, F, T, f, 17, s[2])),
            (T = l(T, P, E, F, p, 22, s[3])),
            (F = l(F, T, P, E, g, 7, s[4])),
            (E = l(E, F, T, P, m, 12, s[5])),
            (P = l(P, E, F, T, v, 17, s[6])),
            (T = l(T, P, E, F, b, 22, s[7])),
            (F = l(F, T, P, E, y, 7, s[8])),
            (E = l(E, F, T, P, w, 12, s[9])),
            (P = l(P, E, F, T, x, 17, s[10])),
            (T = l(T, P, E, F, k, 22, s[11])),
            (F = l(F, T, P, E, C, 7, s[12])),
            (E = l(E, F, T, P, S, 12, s[13])),
            (P = l(P, E, F, T, _, 17, s[14])),
            (F = c(F, (T = l(T, P, E, F, A, 22, s[15])), P, E, d, 5, s[16])),
            (E = c(E, F, T, P, v, 9, s[17])),
            (P = c(P, E, F, T, k, 14, s[18])),
            (T = c(T, P, E, F, o, 20, s[19])),
            (F = c(F, T, P, E, m, 5, s[20])),
            (E = c(E, F, T, P, x, 9, s[21])),
            (P = c(P, E, F, T, A, 14, s[22])),
            (T = c(T, P, E, F, g, 20, s[23])),
            (F = c(F, T, P, E, w, 5, s[24])),
            (E = c(E, F, T, P, _, 9, s[25])),
            (P = c(P, E, F, T, p, 14, s[26])),
            (T = c(T, P, E, F, y, 20, s[27])),
            (F = c(F, T, P, E, S, 5, s[28])),
            (E = c(E, F, T, P, f, 9, s[29])),
            (P = c(P, E, F, T, b, 14, s[30])),
            (F = h(F, (T = c(T, P, E, F, C, 20, s[31])), P, E, m, 4, s[32])),
            (E = h(E, F, T, P, y, 11, s[33])),
            (P = h(P, E, F, T, k, 16, s[34])),
            (T = h(T, P, E, F, _, 23, s[35])),
            (F = h(F, T, P, E, d, 4, s[36])),
            (E = h(E, F, T, P, g, 11, s[37])),
            (P = h(P, E, F, T, b, 16, s[38])),
            (T = h(T, P, E, F, x, 23, s[39])),
            (F = h(F, T, P, E, S, 4, s[40])),
            (E = h(E, F, T, P, o, 11, s[41])),
            (P = h(P, E, F, T, p, 16, s[42])),
            (T = h(T, P, E, F, v, 23, s[43])),
            (F = h(F, T, P, E, w, 4, s[44])),
            (E = h(E, F, T, P, C, 11, s[45])),
            (P = h(P, E, F, T, A, 16, s[46])),
            (F = u(F, (T = h(T, P, E, F, f, 23, s[47])), P, E, o, 6, s[48])),
            (E = u(E, F, T, P, b, 10, s[49])),
            (P = u(P, E, F, T, _, 15, s[50])),
            (T = u(T, P, E, F, m, 21, s[51])),
            (F = u(F, T, P, E, C, 6, s[52])),
            (E = u(E, F, T, P, p, 10, s[53])),
            (P = u(P, E, F, T, x, 15, s[54])),
            (T = u(T, P, E, F, d, 21, s[55])),
            (F = u(F, T, P, E, y, 6, s[56])),
            (E = u(E, F, T, P, A, 10, s[57])),
            (P = u(P, E, F, T, v, 15, s[58])),
            (T = u(T, P, E, F, S, 21, s[59])),
            (F = u(F, T, P, E, g, 6, s[60])),
            (E = u(E, F, T, P, k, 10, s[61])),
            (P = u(P, E, F, T, f, 15, s[62])),
            (T = u(T, P, E, F, w, 21, s[63])),
            (a[0] = (a[0] + F) | 0),
            (a[1] = (a[1] + T) | 0),
            (a[2] = (a[2] + P) | 0),
            (a[3] = (a[3] + E) | 0);
        },
        _doFinalize: function () {
          var t = this._data,
            i = t.words,
            n = 8 * this._nDataBytes,
            r = 8 * t.sigBytes;
          i[r >>> 5] |= 128 << (24 - (r % 32));
          var a = e.floor(n / 4294967296),
            s = n;
          (i[15 + (((64 + r) >>> 9) << 4)] =
            (16711935 & ((a << 8) | (a >>> 24))) |
            (4278255360 & ((a << 24) | (a >>> 8)))),
            (i[14 + (((64 + r) >>> 9) << 4)] =
              (16711935 & ((s << 8) | (s >>> 24))) |
              (4278255360 & ((s << 24) | (s >>> 8)))),
            (t.sigBytes = 4 * (i.length + 1)),
            this._process();
          for (var o = this._hash, l = o.words, c = 0; c < 4; c++) {
            var h = l[c];
            l[c] =
              (16711935 & ((h << 8) | (h >>> 24))) |
              (4278255360 & ((h << 24) | (h >>> 8)));
          }
          return o;
        },
        clone: function () {
          var e = r.clone.call(this);
          return (e._hash = this._hash.clone()), e;
        },
      }));
      function l(e, t, i, n, r, a, s) {
        var o = e + ((t & i) | (~t & n)) + r + s;
        return ((o << a) | (o >>> (32 - a))) + t;
      }
      function c(e, t, i, n, r, a, s) {
        var o = e + ((t & n) | (i & ~n)) + r + s;
        return ((o << a) | (o >>> (32 - a))) + t;
      }
      function h(e, t, i, n, r, a, s) {
        var o = e + (t ^ i ^ n) + r + s;
        return ((o << a) | (o >>> (32 - a))) + t;
      }
      function u(e, t, i, n, r, a, s) {
        var o = e + (i ^ (t | ~n)) + r + s;
        return ((o << a) | (o >>> (32 - a))) + t;
      }
      (t.MD5 = r._createHelper(o)), (t.HmacMD5 = r._createHmacHelper(o));
    })(Math),
    (i = (t = Ce).lib),
    (n = i.WordArray),
    (r = i.Hasher),
    (a = t.algo),
    (s = []),
    (o = a.SHA1 =
      r.extend({
        _doReset: function () {
          this._hash = new n.init([
            1732584193, 4023233417, 2562383102, 271733878, 3285377520,
          ]);
        },
        _doProcessBlock: function (e, t) {
          for (
            var i = this._hash.words,
              n = i[0],
              r = i[1],
              a = i[2],
              o = i[3],
              l = i[4],
              c = 0;
            c < 80;
            c++
          ) {
            if (c < 16) s[c] = 0 | e[t + c];
            else {
              var h = s[c - 3] ^ s[c - 8] ^ s[c - 14] ^ s[c - 16];
              s[c] = (h << 1) | (h >>> 31);
            }
            var u = ((n << 5) | (n >>> 27)) + l + s[c];
            (u +=
              c < 20
                ? 1518500249 + ((r & a) | (~r & o))
                : c < 40
                ? 1859775393 + (r ^ a ^ o)
                : c < 60
                ? ((r & a) | (r & o) | (a & o)) - 1894007588
                : (r ^ a ^ o) - 899497514),
              (l = o),
              (o = a),
              (a = (r << 30) | (r >>> 2)),
              (r = n),
              (n = u);
          }
          (i[0] = (i[0] + n) | 0),
            (i[1] = (i[1] + r) | 0),
            (i[2] = (i[2] + a) | 0),
            (i[3] = (i[3] + o) | 0),
            (i[4] = (i[4] + l) | 0);
        },
        _doFinalize: function () {
          var e = this._data,
            t = e.words,
            i = 8 * this._nDataBytes,
            n = 8 * e.sigBytes;
          return (
            (t[n >>> 5] |= 128 << (24 - (n % 32))),
            (t[14 + (((64 + n) >>> 9) << 4)] = Math.floor(i / 4294967296)),
            (t[15 + (((64 + n) >>> 9) << 4)] = i),
            (e.sigBytes = 4 * t.length),
            this._process(),
            this._hash
          );
        },
        clone: function () {
          var e = r.clone.call(this);
          return (e._hash = this._hash.clone()), e;
        },
      })),
    (t.SHA1 = r._createHelper(o)),
    (t.HmacSHA1 = r._createHmacHelper(o)),
    (function (e) {
      var t = Ce,
        i = t.lib,
        n = i.WordArray,
        r = i.Hasher,
        a = t.algo,
        s = [],
        o = [];
      !(function () {
        function t(t) {
          for (var i = e.sqrt(t), n = 2; n <= i; n++) if (!(t % n)) return;
          return 1;
        }
        function i(e) {
          return (4294967296 * (e - (0 | e))) | 0;
        }
        for (var n = 2, r = 0; r < 64; )
          t(n) &&
            (r < 8 && (s[r] = i(e.pow(n, 0.5))),
            (o[r] = i(e.pow(n, 1 / 3))),
            r++),
            n++;
      })();
      var l = [],
        c = (a.SHA256 = r.extend({
          _doReset: function () {
            this._hash = new n.init(s.slice(0));
          },
          _doProcessBlock: function (e, t) {
            for (
              var i = this._hash.words,
                n = i[0],
                r = i[1],
                a = i[2],
                s = i[3],
                c = i[4],
                h = i[5],
                u = i[6],
                d = i[7],
                f = 0;
              f < 64;
              f++
            ) {
              if (f < 16) l[f] = 0 | e[t + f];
              else {
                var p = l[f - 15],
                  g =
                    ((p << 25) | (p >>> 7)) ^
                    ((p << 14) | (p >>> 18)) ^
                    (p >>> 3),
                  m = l[f - 2],
                  v =
                    ((m << 15) | (m >>> 17)) ^
                    ((m << 13) | (m >>> 19)) ^
                    (m >>> 10);
                l[f] = g + l[f - 7] + v + l[f - 16];
              }
              var b = (n & r) ^ (n & a) ^ (r & a),
                y =
                  ((n << 30) | (n >>> 2)) ^
                  ((n << 19) | (n >>> 13)) ^
                  ((n << 10) | (n >>> 22)),
                w =
                  d +
                  (((c << 26) | (c >>> 6)) ^
                    ((c << 21) | (c >>> 11)) ^
                    ((c << 7) | (c >>> 25))) +
                  ((c & h) ^ (~c & u)) +
                  o[f] +
                  l[f];
              (d = u),
                (u = h),
                (h = c),
                (c = (s + w) | 0),
                (s = a),
                (a = r),
                (r = n),
                (n = (w + (y + b)) | 0);
            }
            (i[0] = (i[0] + n) | 0),
              (i[1] = (i[1] + r) | 0),
              (i[2] = (i[2] + a) | 0),
              (i[3] = (i[3] + s) | 0),
              (i[4] = (i[4] + c) | 0),
              (i[5] = (i[5] + h) | 0),
              (i[6] = (i[6] + u) | 0),
              (i[7] = (i[7] + d) | 0);
          },
          _doFinalize: function () {
            var t = this._data,
              i = t.words,
              n = 8 * this._nDataBytes,
              r = 8 * t.sigBytes;
            return (
              (i[r >>> 5] |= 128 << (24 - (r % 32))),
              (i[14 + (((64 + r) >>> 9) << 4)] = e.floor(n / 4294967296)),
              (i[15 + (((64 + r) >>> 9) << 4)] = n),
              (t.sigBytes = 4 * i.length),
              this._process(),
              this._hash
            );
          },
          clone: function () {
            var e = r.clone.call(this);
            return (e._hash = this._hash.clone()), e;
          },
        }));
      (t.SHA256 = r._createHelper(c)), (t.HmacSHA256 = r._createHmacHelper(c));
    })(Math),
    (function () {
      var e = Ce.lib.WordArray,
        t = Ce.enc;
      t.Utf16 = t.Utf16BE = {
        stringify: function (e) {
          for (var t = e.words, i = e.sigBytes, n = [], r = 0; r < i; r += 2) {
            var a = (t[r >>> 2] >>> (16 - (r % 4) * 8)) & 65535;
            n.push(String.fromCharCode(a));
          }
          return n.join("");
        },
        parse: function (t) {
          for (var i = t.length, n = [], r = 0; r < i; r++)
            n[r >>> 1] |= t.charCodeAt(r) << (16 - (r % 2) * 16);
          return e.create(n, 2 * i);
        },
      };
      function i(e) {
        return ((e << 8) & 4278255360) | ((e >>> 8) & 16711935);
      }
      t.Utf16LE = {
        stringify: function (e) {
          for (var t = e.words, n = e.sigBytes, r = [], a = 0; a < n; a += 2) {
            var s = i((t[a >>> 2] >>> (16 - (a % 4) * 8)) & 65535);
            r.push(String.fromCharCode(s));
          }
          return r.join("");
        },
        parse: function (t) {
          for (var n = t.length, r = [], a = 0; a < n; a++)
            r[a >>> 1] |= i(t.charCodeAt(a) << (16 - (a % 2) * 16));
          return e.create(r, 2 * n);
        },
      };
    })(),
    (function () {
      if ("function" == typeof ArrayBuffer) {
        var e = Ce.lib.WordArray,
          t = e.init;
        (e.init = function (e) {
          if (
            (e instanceof ArrayBuffer && (e = new Uint8Array(e)),
            (e instanceof Int8Array ||
              ("undefined" != typeof Uint8ClampedArray &&
                e instanceof Uint8ClampedArray) ||
              e instanceof Int16Array ||
              e instanceof Uint16Array ||
              e instanceof Int32Array ||
              e instanceof Uint32Array ||
              e instanceof Float32Array ||
              e instanceof Float64Array) &&
              (e = new Uint8Array(e.buffer, e.byteOffset, e.byteLength)),
            e instanceof Uint8Array)
          ) {
            for (var i = e.byteLength, n = [], r = 0; r < i; r++)
              n[r >>> 2] |= e[r] << (24 - (r % 4) * 8);
            t.call(this, n, i);
          } else t.apply(this, arguments);
        }).prototype = e;
      }
    })(),
    Math,
    (c = (l = Ce).lib),
    (h = c.WordArray),
    (u = c.Hasher),
    (d = l.algo),
    (f = h.create([
      0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6,
      15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6,
      13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0,
      5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13,
    ])),
    (p = h.create([
      5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13,
      5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2,
      10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12,
      15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11,
    ])),
    (g = h.create([
      11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11,
      9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8,
      13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5,
      12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6,
    ])),
    (m = h.create([
      8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12,
      8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13,
      5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15,
      8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11,
    ])),
    (v = h.create([0, 1518500249, 1859775393, 2400959708, 2840853838])),
    (b = h.create([1352829926, 1548603684, 1836072691, 2053994217, 0])),
    (y = d.RIPEMD160 =
      u.extend({
        _doReset: function () {
          this._hash = h.create([
            1732584193, 4023233417, 2562383102, 271733878, 3285377520,
          ]);
        },
        _doProcessBlock: function (e, t) {
          for (var i = 0; i < 16; i++) {
            var n = t + i,
              r = e[n];
            e[n] =
              (16711935 & ((r << 8) | (r >>> 24))) |
              (4278255360 & ((r << 24) | (r >>> 8)));
          }
          var a,
            s,
            o,
            l,
            c,
            h,
            u,
            d,
            y,
            w,
            x,
            k = this._hash.words,
            C = v.words,
            S = b.words,
            _ = f.words,
            A = p.words,
            F = g.words,
            T = m.words;
          (h = a = k[0]),
            (u = s = k[1]),
            (d = o = k[2]),
            (y = l = k[3]),
            (w = c = k[4]);
          for (i = 0; i < 80; i += 1)
            (x = (a + e[t + _[i]]) | 0),
              (x +=
                i < 16
                  ? Se(s, o, l) + C[0]
                  : i < 32
                  ? _e(s, o, l) + C[1]
                  : i < 48
                  ? Ae(s, o, l) + C[2]
                  : i < 64
                  ? Fe(s, o, l) + C[3]
                  : Te(s, o, l) + C[4]),
              (x = ((x = Pe((x |= 0), F[i])) + c) | 0),
              (a = c),
              (c = l),
              (l = Pe(o, 10)),
              (o = s),
              (s = x),
              (x = (h + e[t + A[i]]) | 0),
              (x +=
                i < 16
                  ? Te(u, d, y) + S[0]
                  : i < 32
                  ? Fe(u, d, y) + S[1]
                  : i < 48
                  ? Ae(u, d, y) + S[2]
                  : i < 64
                  ? _e(u, d, y) + S[3]
                  : Se(u, d, y) + S[4]),
              (x = ((x = Pe((x |= 0), T[i])) + w) | 0),
              (h = w),
              (w = y),
              (y = Pe(d, 10)),
              (d = u),
              (u = x);
          (x = (k[1] + o + y) | 0),
            (k[1] = (k[2] + l + w) | 0),
            (k[2] = (k[3] + c + h) | 0),
            (k[3] = (k[4] + a + u) | 0),
            (k[4] = (k[0] + s + d) | 0),
            (k[0] = x);
        },
        _doFinalize: function () {
          var e = this._data,
            t = e.words,
            i = 8 * this._nDataBytes,
            n = 8 * e.sigBytes;
          (t[n >>> 5] |= 128 << (24 - (n % 32))),
            (t[14 + (((64 + n) >>> 9) << 4)] =
              (16711935 & ((i << 8) | (i >>> 24))) |
              (4278255360 & ((i << 24) | (i >>> 8)))),
            (e.sigBytes = 4 * (t.length + 1)),
            this._process();
          for (var r = this._hash, a = r.words, s = 0; s < 5; s++) {
            var o = a[s];
            a[s] =
              (16711935 & ((o << 8) | (o >>> 24))) |
              (4278255360 & ((o << 24) | (o >>> 8)));
          }
          return r;
        },
        clone: function () {
          var e = u.clone.call(this);
          return (e._hash = this._hash.clone()), e;
        },
      })),
    (l.RIPEMD160 = u._createHelper(y)),
    (l.HmacRIPEMD160 = u._createHmacHelper(y)),
    (w = Ce.lib.Base),
    (x = Ce.enc.Utf8),
    (Ce.algo.HMAC = w.extend({
      init: function (e, t) {
        (e = this._hasher = new e.init()),
          "string" == typeof t && (t = x.parse(t));
        var i = e.blockSize,
          n = 4 * i;
        t.sigBytes > n && (t = e.finalize(t)), t.clamp();
        for (
          var r = (this._oKey = t.clone()),
            a = (this._iKey = t.clone()),
            s = r.words,
            o = a.words,
            l = 0;
          l < i;
          l++
        )
          (s[l] ^= 1549556828), (o[l] ^= 909522486);
        (r.sigBytes = a.sigBytes = n), this.reset();
      },
      reset: function () {
        var e = this._hasher;
        e.reset(), e.update(this._iKey);
      },
      update: function (e) {
        return this._hasher.update(e), this;
      },
      finalize: function (e) {
        var t = this._hasher,
          i = t.finalize(e);
        return t.reset(), t.finalize(this._oKey.clone().concat(i));
      },
    })),
    (S = (C = (k = Ce).lib).Base),
    (_ = C.WordArray),
    (F = (A = k.algo).SHA1),
    (T = A.HMAC),
    (P = A.PBKDF2 =
      S.extend({
        cfg: S.extend({ keySize: 4, hasher: F, iterations: 1 }),
        init: function (e) {
          this.cfg = this.cfg.extend(e);
        },
        compute: function (e, t) {
          for (
            var i = this.cfg,
              n = T.create(i.hasher, e),
              r = _.create(),
              a = _.create([1]),
              s = r.words,
              o = a.words,
              l = i.keySize,
              c = i.iterations;
            s.length < l;

          ) {
            var h = n.update(t).finalize(a);
            n.reset();
            for (var u = h.words, d = u.length, f = h, p = 1; p < c; p++) {
              (f = n.finalize(f)), n.reset();
              for (var g = f.words, m = 0; m < d; m++) u[m] ^= g[m];
            }
            r.concat(h), o[0]++;
          }
          return (r.sigBytes = 4 * l), r;
        },
      })),
    (k.PBKDF2 = function (e, t, i) {
      return P.create(i).compute(e, t);
    }),
    (D = (I = (E = Ce).lib).Base),
    (O = I.WordArray),
    (N = (R = E.algo).MD5),
    (M = R.EvpKDF =
      D.extend({
        cfg: D.extend({ keySize: 4, hasher: N, iterations: 1 }),
        init: function (e) {
          this.cfg = this.cfg.extend(e);
        },
        compute: function (e, t) {
          for (
            var i,
              n = this.cfg,
              r = n.hasher.create(),
              a = O.create(),
              s = a.words,
              o = n.keySize,
              l = n.iterations;
            s.length < o;

          ) {
            i && r.update(i), (i = r.update(e).finalize(t)), r.reset();
            for (var c = 1; c < l; c++) (i = r.finalize(i)), r.reset();
            a.concat(i);
          }
          return (a.sigBytes = 4 * o), a;
        },
      })),
    (E.EvpKDF = function (e, t, i) {
      return M.create(i).compute(e, t);
    }),
    (L = (B = Ce).lib.WordArray),
    (U = B.algo),
    (z = U.SHA256),
    (j = U.SHA224 =
      z.extend({
        _doReset: function () {
          this._hash = new L.init([
            3238371032, 914150663, 812702999, 4144912697, 4290775857,
            1750603025, 1694076839, 3204075428,
          ]);
        },
        _doFinalize: function () {
          var e = z._doFinalize.call(this);
          return (e.sigBytes -= 4), e;
        },
      })),
    (B.SHA224 = z._createHelper(j)),
    (B.HmacSHA224 = z._createHmacHelper(j)),
    (q = Ce.lib),
    (H = q.Base),
    (W = q.WordArray),
    ((G = Ce.x64 = {}).Word = H.extend({
      init: function (e, t) {
        (this.high = e), (this.low = t);
      },
    })),
    (G.WordArray = H.extend({
      init: function (e, t) {
        (e = this.words = e || []),
          (this.sigBytes = null != t ? t : 8 * e.length);
      },
      toX32: function () {
        for (var e = this.words, t = e.length, i = [], n = 0; n < t; n++) {
          var r = e[n];
          i.push(r.high), i.push(r.low);
        }
        return W.create(i, this.sigBytes);
      },
      clone: function () {
        for (
          var e = H.clone.call(this),
            t = (e.words = this.words.slice(0)),
            i = t.length,
            n = 0;
          n < i;
          n++
        )
          t[n] = t[n].clone();
        return e;
      },
    })),
    (function (e) {
      var t = Ce,
        i = t.lib,
        n = i.WordArray,
        r = i.Hasher,
        a = t.x64.Word,
        s = t.algo,
        o = [],
        l = [],
        c = [];
      !(function () {
        for (var e = 1, t = 0, i = 0; i < 24; i++) {
          o[e + 5 * t] = (((i + 1) * (i + 2)) / 2) % 64;
          var n = (2 * e + 3 * t) % 5;
          (e = t % 5), (t = n);
        }
        for (e = 0; e < 5; e++)
          for (t = 0; t < 5; t++) l[e + 5 * t] = t + ((2 * e + 3 * t) % 5) * 5;
        for (var r = 1, s = 0; s < 24; s++) {
          for (var h = 0, u = 0, d = 0; d < 7; d++) {
            if (1 & r) {
              var f = (1 << d) - 1;
              f < 32 ? (u ^= 1 << f) : (h ^= 1 << (f - 32));
            }
            128 & r ? (r = (r << 1) ^ 113) : (r <<= 1);
          }
          c[s] = a.create(h, u);
        }
      })();
      var h = [];
      !(function () {
        for (var e = 0; e < 25; e++) h[e] = a.create();
      })();
      var u = (s.SHA3 = r.extend({
        cfg: r.cfg.extend({ outputLength: 512 }),
        _doReset: function () {
          for (var e = (this._state = []), t = 0; t < 25; t++)
            e[t] = new a.init();
          this.blockSize = (1600 - 2 * this.cfg.outputLength) / 32;
        },
        _doProcessBlock: function (e, t) {
          for (var i = this._state, n = this.blockSize / 2, r = 0; r < n; r++) {
            var a = e[t + 2 * r],
              s = e[t + 2 * r + 1];
            (a =
              (16711935 & ((a << 8) | (a >>> 24))) |
              (4278255360 & ((a << 24) | (a >>> 8)))),
              (s =
                (16711935 & ((s << 8) | (s >>> 24))) |
                (4278255360 & ((s << 24) | (s >>> 8)))),
              ((T = i[r]).high ^= s),
              (T.low ^= a);
          }
          for (var u = 0; u < 24; u++) {
            for (var d = 0; d < 5; d++) {
              for (var f = 0, p = 0, g = 0; g < 5; g++)
                (f ^= (T = i[d + 5 * g]).high), (p ^= T.low);
              var m = h[d];
              (m.high = f), (m.low = p);
            }
            for (d = 0; d < 5; d++) {
              var v = h[(d + 4) % 5],
                b = h[(d + 1) % 5],
                y = b.high,
                w = b.low;
              for (
                f = v.high ^ ((y << 1) | (w >>> 31)),
                  p = v.low ^ ((w << 1) | (y >>> 31)),
                  g = 0;
                g < 5;
                g++
              )
                ((T = i[d + 5 * g]).high ^= f), (T.low ^= p);
            }
            for (var x = 1; x < 25; x++) {
              var k = (T = i[x]).high,
                C = T.low,
                S = o[x];
              p =
                S < 32
                  ? ((f = (k << S) | (C >>> (32 - S))),
                    (C << S) | (k >>> (32 - S)))
                  : ((f = (C << (S - 32)) | (k >>> (64 - S))),
                    (k << (S - 32)) | (C >>> (64 - S)));
              var _ = h[l[x]];
              (_.high = f), (_.low = p);
            }
            var A = h[0],
              F = i[0];
            (A.high = F.high), (A.low = F.low);
            for (d = 0; d < 5; d++)
              for (g = 0; g < 5; g++) {
                var T = i[(x = d + 5 * g)],
                  P = h[x],
                  E = h[((d + 1) % 5) + 5 * g],
                  I = h[((d + 2) % 5) + 5 * g];
                (T.high = P.high ^ (~E.high & I.high)),
                  (T.low = P.low ^ (~E.low & I.low));
              }
            T = i[0];
            var D = c[u];
            (T.high ^= D.high), (T.low ^= D.low);
          }
        },
        _doFinalize: function () {
          var t = this._data,
            i = t.words,
            r = (this._nDataBytes, 8 * t.sigBytes),
            a = 32 * this.blockSize;
          (i[r >>> 5] |= 1 << (24 - (r % 32))),
            (i[((e.ceil((1 + r) / a) * a) >>> 5) - 1] |= 128),
            (t.sigBytes = 4 * i.length),
            this._process();
          for (
            var s = this._state,
              o = this.cfg.outputLength / 8,
              l = o / 8,
              c = [],
              h = 0;
            h < l;
            h++
          ) {
            var u = s[h],
              d = u.high,
              f = u.low;
            (d =
              (16711935 & ((d << 8) | (d >>> 24))) |
              (4278255360 & ((d << 24) | (d >>> 8)))),
              (f =
                (16711935 & ((f << 8) | (f >>> 24))) |
                (4278255360 & ((f << 24) | (f >>> 8)))),
              c.push(f),
              c.push(d);
          }
          return new n.init(c, o);
        },
        clone: function () {
          for (
            var e = r.clone.call(this),
              t = (e._state = this._state.slice(0)),
              i = 0;
            i < 25;
            i++
          )
            t[i] = t[i].clone();
          return e;
        },
      }));
      (t.SHA3 = r._createHelper(u)), (t.HmacSHA3 = r._createHmacHelper(u));
    })(Math),
    (function () {
      var e = Ce,
        t = e.lib.Hasher,
        i = e.x64,
        n = i.Word,
        r = i.WordArray,
        a = e.algo;
      function s() {
        return n.create.apply(n, arguments);
      }
      var o = [
          s(1116352408, 3609767458),
          s(1899447441, 602891725),
          s(3049323471, 3964484399),
          s(3921009573, 2173295548),
          s(961987163, 4081628472),
          s(1508970993, 3053834265),
          s(2453635748, 2937671579),
          s(2870763221, 3664609560),
          s(3624381080, 2734883394),
          s(310598401, 1164996542),
          s(607225278, 1323610764),
          s(1426881987, 3590304994),
          s(1925078388, 4068182383),
          s(2162078206, 991336113),
          s(2614888103, 633803317),
          s(3248222580, 3479774868),
          s(3835390401, 2666613458),
          s(4022224774, 944711139),
          s(264347078, 2341262773),
          s(604807628, 2007800933),
          s(770255983, 1495990901),
          s(1249150122, 1856431235),
          s(1555081692, 3175218132),
          s(1996064986, 2198950837),
          s(2554220882, 3999719339),
          s(2821834349, 766784016),
          s(2952996808, 2566594879),
          s(3210313671, 3203337956),
          s(3336571891, 1034457026),
          s(3584528711, 2466948901),
          s(113926993, 3758326383),
          s(338241895, 168717936),
          s(666307205, 1188179964),
          s(773529912, 1546045734),
          s(1294757372, 1522805485),
          s(1396182291, 2643833823),
          s(1695183700, 2343527390),
          s(1986661051, 1014477480),
          s(2177026350, 1206759142),
          s(2456956037, 344077627),
          s(2730485921, 1290863460),
          s(2820302411, 3158454273),
          s(3259730800, 3505952657),
          s(3345764771, 106217008),
          s(3516065817, 3606008344),
          s(3600352804, 1432725776),
          s(4094571909, 1467031594),
          s(275423344, 851169720),
          s(430227734, 3100823752),
          s(506948616, 1363258195),
          s(659060556, 3750685593),
          s(883997877, 3785050280),
          s(958139571, 3318307427),
          s(1322822218, 3812723403),
          s(1537002063, 2003034995),
          s(1747873779, 3602036899),
          s(1955562222, 1575990012),
          s(2024104815, 1125592928),
          s(2227730452, 2716904306),
          s(2361852424, 442776044),
          s(2428436474, 593698344),
          s(2756734187, 3733110249),
          s(3204031479, 2999351573),
          s(3329325298, 3815920427),
          s(3391569614, 3928383900),
          s(3515267271, 566280711),
          s(3940187606, 3454069534),
          s(4118630271, 4000239992),
          s(116418474, 1914138554),
          s(174292421, 2731055270),
          s(289380356, 3203993006),
          s(460393269, 320620315),
          s(685471733, 587496836),
          s(852142971, 1086792851),
          s(1017036298, 365543100),
          s(1126000580, 2618297676),
          s(1288033470, 3409855158),
          s(1501505948, 4234509866),
          s(1607167915, 987167468),
          s(1816402316, 1246189591),
        ],
        l = [];
      !(function () {
        for (var e = 0; e < 80; e++) l[e] = s();
      })();
      var c = (a.SHA512 = t.extend({
        _doReset: function () {
          this._hash = new r.init([
            new n.init(1779033703, 4089235720),
            new n.init(3144134277, 2227873595),
            new n.init(1013904242, 4271175723),
            new n.init(2773480762, 1595750129),
            new n.init(1359893119, 2917565137),
            new n.init(2600822924, 725511199),
            new n.init(528734635, 4215389547),
            new n.init(1541459225, 327033209),
          ]);
        },
        _doProcessBlock: function (e, t) {
          for (
            var i = this._hash.words,
              n = i[0],
              r = i[1],
              a = i[2],
              s = i[3],
              c = i[4],
              h = i[5],
              u = i[6],
              d = i[7],
              f = n.high,
              p = n.low,
              g = r.high,
              m = r.low,
              v = a.high,
              b = a.low,
              y = s.high,
              w = s.low,
              x = c.high,
              k = c.low,
              C = h.high,
              S = h.low,
              _ = u.high,
              A = u.low,
              F = d.high,
              T = d.low,
              P = f,
              E = p,
              I = g,
              D = m,
              O = v,
              R = b,
              N = y,
              M = w,
              B = x,
              L = k,
              U = C,
              z = S,
              j = _,
              q = A,
              H = F,
              W = T,
              G = 0;
            G < 80;
            G++
          ) {
            var V,
              X,
              K = l[G];
            if (G < 16)
              (X = K.high = 0 | e[t + 2 * G]),
                (V = K.low = 0 | e[t + 2 * G + 1]);
            else {
              var Y = l[G - 15],
                Z = Y.high,
                J = Y.low,
                $ =
                  ((Z >>> 1) | (J << 31)) ^ ((Z >>> 8) | (J << 24)) ^ (Z >>> 7),
                Q =
                  ((J >>> 1) | (Z << 31)) ^
                  ((J >>> 8) | (Z << 24)) ^
                  ((J >>> 7) | (Z << 25)),
                ee = l[G - 2],
                te = ee.high,
                ie = ee.low,
                ne =
                  ((te >>> 19) | (ie << 13)) ^
                  ((te << 3) | (ie >>> 29)) ^
                  (te >>> 6),
                re =
                  ((ie >>> 19) | (te << 13)) ^
                  ((ie << 3) | (te >>> 29)) ^
                  ((ie >>> 6) | (te << 26)),
                ae = l[G - 7],
                se = ae.high,
                oe = ae.low,
                le = l[G - 16],
                ce = le.high,
                he = le.low;
              (X =
                (X =
                  (X = $ + se + ((V = Q + oe) >>> 0 < Q >>> 0 ? 1 : 0)) +
                  ne +
                  ((V += re) >>> 0 < re >>> 0 ? 1 : 0)) +
                ce +
                ((V += he) >>> 0 < he >>> 0 ? 1 : 0)),
                (K.high = X),
                (K.low = V);
            }
            var ue,
              de = (B & U) ^ (~B & j),
              fe = (L & z) ^ (~L & q),
              pe = (P & I) ^ (P & O) ^ (I & O),
              ge = (E & D) ^ (E & R) ^ (D & R),
              me =
                ((P >>> 28) | (E << 4)) ^
                ((P << 30) | (E >>> 2)) ^
                ((P << 25) | (E >>> 7)),
              ve =
                ((E >>> 28) | (P << 4)) ^
                ((E << 30) | (P >>> 2)) ^
                ((E << 25) | (P >>> 7)),
              be =
                ((B >>> 14) | (L << 18)) ^
                ((B >>> 18) | (L << 14)) ^
                ((B << 23) | (L >>> 9)),
              ye =
                ((L >>> 14) | (B << 18)) ^
                ((L >>> 18) | (B << 14)) ^
                ((L << 23) | (B >>> 9)),
              we = o[G],
              xe = we.high,
              ke = we.low,
              Ce = H + be + ((ue = W + ye) >>> 0 < W >>> 0 ? 1 : 0),
              Se = ve + ge;
            (H = j),
              (W = q),
              (j = U),
              (q = z),
              (U = B),
              (z = L),
              (B =
                (N +
                  (Ce =
                    (Ce =
                      (Ce = Ce + de + ((ue += fe) >>> 0 < fe >>> 0 ? 1 : 0)) +
                      xe +
                      ((ue += ke) >>> 0 < ke >>> 0 ? 1 : 0)) +
                    X +
                    ((ue += V) >>> 0 < V >>> 0 ? 1 : 0)) +
                  ((L = (M + ue) | 0) >>> 0 < M >>> 0 ? 1 : 0)) |
                0),
              (N = O),
              (M = R),
              (O = I),
              (R = D),
              (I = P),
              (D = E),
              (P =
                (Ce +
                  (me + pe + (Se >>> 0 < ve >>> 0 ? 1 : 0)) +
                  ((E = (ue + Se) | 0) >>> 0 < ue >>> 0 ? 1 : 0)) |
                0);
          }
          (p = n.low = p + E),
            (n.high = f + P + (p >>> 0 < E >>> 0 ? 1 : 0)),
            (m = r.low = m + D),
            (r.high = g + I + (m >>> 0 < D >>> 0 ? 1 : 0)),
            (b = a.low = b + R),
            (a.high = v + O + (b >>> 0 < R >>> 0 ? 1 : 0)),
            (w = s.low = w + M),
            (s.high = y + N + (w >>> 0 < M >>> 0 ? 1 : 0)),
            (k = c.low = k + L),
            (c.high = x + B + (k >>> 0 < L >>> 0 ? 1 : 0)),
            (S = h.low = S + z),
            (h.high = C + U + (S >>> 0 < z >>> 0 ? 1 : 0)),
            (A = u.low = A + q),
            (u.high = _ + j + (A >>> 0 < q >>> 0 ? 1 : 0)),
            (T = d.low = T + W),
            (d.high = F + H + (T >>> 0 < W >>> 0 ? 1 : 0));
        },
        _doFinalize: function () {
          var e = this._data,
            t = e.words,
            i = 8 * this._nDataBytes,
            n = 8 * e.sigBytes;
          return (
            (t[n >>> 5] |= 128 << (24 - (n % 32))),
            (t[30 + (((128 + n) >>> 10) << 5)] = Math.floor(i / 4294967296)),
            (t[31 + (((128 + n) >>> 10) << 5)] = i),
            (e.sigBytes = 4 * t.length),
            this._process(),
            this._hash.toX32()
          );
        },
        clone: function () {
          var e = t.clone.call(this);
          return (e._hash = this._hash.clone()), e;
        },
        blockSize: 32,
      }));
      (e.SHA512 = t._createHelper(c)), (e.HmacSHA512 = t._createHmacHelper(c));
    })(),
    (X = (V = Ce).x64),
    (K = X.Word),
    (Y = X.WordArray),
    (Z = V.algo),
    (J = Z.SHA512),
    ($ = Z.SHA384 =
      J.extend({
        _doReset: function () {
          this._hash = new Y.init([
            new K.init(3418070365, 3238371032),
            new K.init(1654270250, 914150663),
            new K.init(2438529370, 812702999),
            new K.init(355462360, 4144912697),
            new K.init(1731405415, 4290775857),
            new K.init(2394180231, 1750603025),
            new K.init(3675008525, 1694076839),
            new K.init(1203062813, 3204075428),
          ]);
        },
        _doFinalize: function () {
          var e = J._doFinalize.call(this);
          return (e.sigBytes -= 16), e;
        },
      })),
    (V.SHA384 = J._createHelper($)),
    (V.HmacSHA384 = J._createHmacHelper($)),
    Ce.lib.Cipher ||
      (function () {
        var e = Ce,
          t = e.lib,
          i = t.Base,
          n = t.WordArray,
          r = t.BufferedBlockAlgorithm,
          a = e.enc,
          s = (a.Utf8, a.Base64),
          o = e.algo.EvpKDF,
          l = (t.Cipher = r.extend({
            cfg: i.extend(),
            createEncryptor: function (e, t) {
              return this.create(this._ENC_XFORM_MODE, e, t);
            },
            createDecryptor: function (e, t) {
              return this.create(this._DEC_XFORM_MODE, e, t);
            },
            init: function (e, t, i) {
              (this.cfg = this.cfg.extend(i)),
                (this._xformMode = e),
                (this._key = t),
                this.reset();
            },
            reset: function () {
              r.reset.call(this), this._doReset();
            },
            process: function (e) {
              return this._append(e), this._process();
            },
            finalize: function (e) {
              return e && this._append(e), this._doFinalize();
            },
            keySize: 4,
            ivSize: 4,
            _ENC_XFORM_MODE: 1,
            _DEC_XFORM_MODE: 2,
            _createHelper: function (e) {
              return {
                encrypt: function (t, i, n) {
                  return c(i).encrypt(e, t, i, n);
                },
                decrypt: function (t, i, n) {
                  return c(i).decrypt(e, t, i, n);
                },
              };
            },
          }));
        function c(e) {
          return "string" == typeof e ? w : b;
        }
        t.StreamCipher = l.extend({
          _doFinalize: function () {
            return this._process(!0);
          },
          blockSize: 1,
        });
        var h,
          u = (e.mode = {}),
          d = (t.BlockCipherMode = i.extend({
            createEncryptor: function (e, t) {
              return this.Encryptor.create(e, t);
            },
            createDecryptor: function (e, t) {
              return this.Decryptor.create(e, t);
            },
            init: function (e, t) {
              (this._cipher = e), (this._iv = t);
            },
          })),
          f = (u.CBC =
            (((h = d.extend()).Encryptor = h.extend({
              processBlock: function (e, t) {
                var i = this._cipher,
                  n = i.blockSize;
                p.call(this, e, t, n),
                  i.encryptBlock(e, t),
                  (this._prevBlock = e.slice(t, t + n));
              },
            })),
            (h.Decryptor = h.extend({
              processBlock: function (e, t) {
                var i = this._cipher,
                  n = i.blockSize,
                  r = e.slice(t, t + n);
                i.decryptBlock(e, t),
                  p.call(this, e, t, n),
                  (this._prevBlock = r);
              },
            })),
            h));
        function p(e, t, i) {
          var n,
            r = this._iv;
          r ? ((n = r), (this._iv = void 0)) : (n = this._prevBlock);
          for (var a = 0; a < i; a++) e[t + a] ^= n[a];
        }
        var g = ((e.pad = {}).Pkcs7 = {
            pad: function (e, t) {
              for (
                var i = 4 * t,
                  r = i - (e.sigBytes % i),
                  a = (r << 24) | (r << 16) | (r << 8) | r,
                  s = [],
                  o = 0;
                o < r;
                o += 4
              )
                s.push(a);
              var l = n.create(s, r);
              e.concat(l);
            },
            unpad: function (e) {
              var t = 255 & e.words[(e.sigBytes - 1) >>> 2];
              e.sigBytes -= t;
            },
          }),
          m =
            ((t.BlockCipher = l.extend({
              cfg: l.cfg.extend({ mode: f, padding: g }),
              reset: function () {
                var e;
                l.reset.call(this);
                var t = this.cfg,
                  i = t.iv,
                  n = t.mode;
                this._xformMode == this._ENC_XFORM_MODE
                  ? (e = n.createEncryptor)
                  : ((e = n.createDecryptor), (this._minBufferSize = 1)),
                  this._mode && this._mode.__creator == e
                    ? this._mode.init(this, i && i.words)
                    : ((this._mode = e.call(n, this, i && i.words)),
                      (this._mode.__creator = e));
              },
              _doProcessBlock: function (e, t) {
                this._mode.processBlock(e, t);
              },
              _doFinalize: function () {
                var e,
                  t = this.cfg.padding;
                return (
                  this._xformMode == this._ENC_XFORM_MODE
                    ? (t.pad(this._data, this.blockSize),
                      (e = this._process(!0)))
                    : ((e = this._process(!0)), t.unpad(e)),
                  e
                );
              },
              blockSize: 4,
            })),
            (t.CipherParams = i.extend({
              init: function (e) {
                this.mixIn(e);
              },
              toString: function (e) {
                return (e || this.formatter).stringify(this);
              },
            }))),
          v = ((e.format = {}).OpenSSL = {
            stringify: function (e) {
              var t = e.ciphertext,
                i = e.salt;
              return (
                i ? n.create([1398893684, 1701076831]).concat(i).concat(t) : t
              ).toString(s);
            },
            parse: function (e) {
              var t,
                i = s.parse(e),
                r = i.words;
              return (
                1398893684 == r[0] &&
                  1701076831 == r[1] &&
                  ((t = n.create(r.slice(2, 4))),
                  r.splice(0, 4),
                  (i.sigBytes -= 16)),
                m.create({ ciphertext: i, salt: t })
              );
            },
          }),
          b = (t.SerializableCipher = i.extend({
            cfg: i.extend({ format: v }),
            encrypt: function (e, t, i, n) {
              n = this.cfg.extend(n);
              var r = e.createEncryptor(i, n),
                a = r.finalize(t),
                s = r.cfg;
              return m.create({
                ciphertext: a,
                key: i,
                iv: s.iv,
                algorithm: e,
                mode: s.mode,
                padding: s.padding,
                blockSize: e.blockSize,
                formatter: n.format,
              });
            },
            decrypt: function (e, t, i, n) {
              return (
                (n = this.cfg.extend(n)),
                (t = this._parse(t, n.format)),
                e.createDecryptor(i, n).finalize(t.ciphertext)
              );
            },
            _parse: function (e, t) {
              return "string" == typeof e ? t.parse(e, this) : e;
            },
          })),
          y = ((e.kdf = {}).OpenSSL = {
            execute: function (e, t, i, r) {
              r = r || n.random(8);
              var a = o.create({ keySize: t + i }).compute(e, r),
                s = n.create(a.words.slice(t), 4 * i);
              return (a.sigBytes = 4 * t), m.create({ key: a, iv: s, salt: r });
            },
          }),
          w = (t.PasswordBasedCipher = b.extend({
            cfg: b.cfg.extend({ kdf: y }),
            encrypt: function (e, t, i, n) {
              var r = (n = this.cfg.extend(n)).kdf.execute(
                i,
                e.keySize,
                e.ivSize
              );
              n.iv = r.iv;
              var a = b.encrypt.call(this, e, t, r.key, n);
              return a.mixIn(r), a;
            },
            decrypt: function (e, t, i, n) {
              (n = this.cfg.extend(n)), (t = this._parse(t, n.format));
              var r = n.kdf.execute(i, e.keySize, e.ivSize, t.salt);
              return (n.iv = r.iv), b.decrypt.call(this, e, t, r.key, n);
            },
          }));
      })(),
    (Ce.mode.CFB =
      (((Q = Ce.lib.BlockCipherMode.extend()).Encryptor = Q.extend({
        processBlock: function (e, t) {
          var i = this._cipher,
            n = i.blockSize;
          Ee.call(this, e, t, n, i), (this._prevBlock = e.slice(t, t + n));
        },
      })),
      (Q.Decryptor = Q.extend({
        processBlock: function (e, t) {
          var i = this._cipher,
            n = i.blockSize,
            r = e.slice(t, t + n);
          Ee.call(this, e, t, n, i), (this._prevBlock = r);
        },
      })),
      Q)),
    (Ce.mode.ECB =
      (((ee = Ce.lib.BlockCipherMode.extend()).Encryptor = ee.extend({
        processBlock: function (e, t) {
          this._cipher.encryptBlock(e, t);
        },
      })),
      (ee.Decryptor = ee.extend({
        processBlock: function (e, t) {
          this._cipher.decryptBlock(e, t);
        },
      })),
      ee)),
    (Ce.pad.AnsiX923 = {
      pad: function (e, t) {
        var i = e.sigBytes,
          n = 4 * t,
          r = n - (i % n),
          a = i + r - 1;
        e.clamp(),
          (e.words[a >>> 2] |= r << (24 - (a % 4) * 8)),
          (e.sigBytes += r);
      },
      unpad: function (e) {
        var t = 255 & e.words[(e.sigBytes - 1) >>> 2];
        e.sigBytes -= t;
      },
    }),
    (Ce.pad.Iso10126 = {
      pad: function (e, t) {
        var i = 4 * t,
          n = i - (e.sigBytes % i);
        e.concat(Ce.lib.WordArray.random(n - 1)).concat(
          Ce.lib.WordArray.create([n << 24], 1)
        );
      },
      unpad: function (e) {
        var t = 255 & e.words[(e.sigBytes - 1) >>> 2];
        e.sigBytes -= t;
      },
    }),
    (Ce.pad.Iso97971 = {
      pad: function (e, t) {
        e.concat(Ce.lib.WordArray.create([2147483648], 1)),
          Ce.pad.ZeroPadding.pad(e, t);
      },
      unpad: function (e) {
        Ce.pad.ZeroPadding.unpad(e), e.sigBytes--;
      },
    }),
    (Ce.mode.OFB =
      ((ie = (te = Ce.lib.BlockCipherMode.extend()).Encryptor =
        te.extend({
          processBlock: function (e, t) {
            var i = this._cipher,
              n = i.blockSize,
              r = this._iv,
              a = this._keystream;
            r && ((a = this._keystream = r.slice(0)), (this._iv = void 0)),
              i.encryptBlock(a, 0);
            for (var s = 0; s < n; s++) e[t + s] ^= a[s];
          },
        })),
      (te.Decryptor = ie),
      te)),
    (Ce.pad.NoPadding = { pad: function () {}, unpad: function () {} }),
    (ne = Ce.lib.CipherParams),
    (re = Ce.enc.Hex),
    (Ce.format.Hex = {
      stringify: function (e) {
        return e.ciphertext.toString(re);
      },
      parse: function (e) {
        var t = re.parse(e);
        return ne.create({ ciphertext: t });
      },
    }),
    (function () {
      var e = Ce,
        t = e.lib.BlockCipher,
        i = e.algo,
        n = [],
        r = [],
        a = [],
        s = [],
        o = [],
        l = [],
        c = [],
        h = [],
        u = [],
        d = [];
      !(function () {
        for (var e = [], t = 0; t < 256; t++)
          e[t] = t < 128 ? t << 1 : (t << 1) ^ 283;
        var i = 0,
          f = 0;
        for (t = 0; t < 256; t++) {
          var p = f ^ (f << 1) ^ (f << 2) ^ (f << 3) ^ (f << 4);
          (p = (p >>> 8) ^ (255 & p) ^ 99), (n[i] = p);
          var g = e[(r[p] = i)],
            m = e[g],
            v = e[m],
            b = (257 * e[p]) ^ (16843008 * p);
          (a[i] = (b << 24) | (b >>> 8)),
            (s[i] = (b << 16) | (b >>> 16)),
            (o[i] = (b << 8) | (b >>> 24)),
            (l[i] = b);
          b = (16843009 * v) ^ (65537 * m) ^ (257 * g) ^ (16843008 * i);
          (c[p] = (b << 24) | (b >>> 8)),
            (h[p] = (b << 16) | (b >>> 16)),
            (u[p] = (b << 8) | (b >>> 24)),
            (d[p] = b),
            i ? ((i = g ^ e[e[e[v ^ g]]]), (f ^= e[e[f]])) : (i = f = 1);
        }
      })();
      var f = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54],
        p = (i.AES = t.extend({
          _doReset: function () {
            if (!this._nRounds || this._keyPriorReset !== this._key) {
              for (
                var e = (this._keyPriorReset = this._key),
                  t = e.words,
                  i = e.sigBytes / 4,
                  r = 4 * (1 + (this._nRounds = 6 + i)),
                  a = (this._keySchedule = []),
                  s = 0;
                s < r;
                s++
              )
                s < i
                  ? (a[s] = t[s])
                  : ((p = a[s - 1]),
                    s % i
                      ? 6 < i &&
                        s % i == 4 &&
                        (p =
                          (n[p >>> 24] << 24) |
                          (n[(p >>> 16) & 255] << 16) |
                          (n[(p >>> 8) & 255] << 8) |
                          n[255 & p])
                      : ((p =
                          (n[(p = (p << 8) | (p >>> 24)) >>> 24] << 24) |
                          (n[(p >>> 16) & 255] << 16) |
                          (n[(p >>> 8) & 255] << 8) |
                          n[255 & p]),
                        (p ^= f[(s / i) | 0] << 24)),
                    (a[s] = a[s - i] ^ p));
              for (var o = (this._invKeySchedule = []), l = 0; l < r; l++) {
                s = r - l;
                if (l % 4) var p = a[s];
                else p = a[s - 4];
                o[l] =
                  l < 4 || s <= 4
                    ? p
                    : c[n[p >>> 24]] ^
                      h[n[(p >>> 16) & 255]] ^
                      u[n[(p >>> 8) & 255]] ^
                      d[n[255 & p]];
              }
            }
          },
          encryptBlock: function (e, t) {
            this._doCryptBlock(e, t, this._keySchedule, a, s, o, l, n);
          },
          decryptBlock: function (e, t) {
            var i = e[t + 1];
            (e[t + 1] = e[t + 3]),
              (e[t + 3] = i),
              this._doCryptBlock(e, t, this._invKeySchedule, c, h, u, d, r);
            i = e[t + 1];
            (e[t + 1] = e[t + 3]), (e[t + 3] = i);
          },
          _doCryptBlock: function (e, t, i, n, r, a, s, o) {
            for (
              var l = this._nRounds,
                c = e[t] ^ i[0],
                h = e[t + 1] ^ i[1],
                u = e[t + 2] ^ i[2],
                d = e[t + 3] ^ i[3],
                f = 4,
                p = 1;
              p < l;
              p++
            ) {
              var g =
                  n[c >>> 24] ^
                  r[(h >>> 16) & 255] ^
                  a[(u >>> 8) & 255] ^
                  s[255 & d] ^
                  i[f++],
                m =
                  n[h >>> 24] ^
                  r[(u >>> 16) & 255] ^
                  a[(d >>> 8) & 255] ^
                  s[255 & c] ^
                  i[f++],
                v =
                  n[u >>> 24] ^
                  r[(d >>> 16) & 255] ^
                  a[(c >>> 8) & 255] ^
                  s[255 & h] ^
                  i[f++],
                b =
                  n[d >>> 24] ^
                  r[(c >>> 16) & 255] ^
                  a[(h >>> 8) & 255] ^
                  s[255 & u] ^
                  i[f++];
              (c = g), (h = m), (u = v), (d = b);
            }
            (g =
              ((o[c >>> 24] << 24) |
                (o[(h >>> 16) & 255] << 16) |
                (o[(u >>> 8) & 255] << 8) |
                o[255 & d]) ^
              i[f++]),
              (m =
                ((o[h >>> 24] << 24) |
                  (o[(u >>> 16) & 255] << 16) |
                  (o[(d >>> 8) & 255] << 8) |
                  o[255 & c]) ^
                i[f++]),
              (v =
                ((o[u >>> 24] << 24) |
                  (o[(d >>> 16) & 255] << 16) |
                  (o[(c >>> 8) & 255] << 8) |
                  o[255 & h]) ^
                i[f++]),
              (b =
                ((o[d >>> 24] << 24) |
                  (o[(c >>> 16) & 255] << 16) |
                  (o[(h >>> 8) & 255] << 8) |
                  o[255 & u]) ^
                i[f++]);
            (e[t] = g), (e[t + 1] = m), (e[t + 2] = v), (e[t + 3] = b);
          },
          keySize: 8,
        }));
      e.AES = t._createHelper(p);
    })(),
    (function () {
      var e = Ce,
        t = e.lib,
        i = t.WordArray,
        n = t.BlockCipher,
        r = e.algo,
        a = [
          57, 49, 41, 33, 25, 17, 9, 1, 58, 50, 42, 34, 26, 18, 10, 2, 59, 51,
          43, 35, 27, 19, 11, 3, 60, 52, 44, 36, 63, 55, 47, 39, 31, 23, 15, 7,
          62, 54, 46, 38, 30, 22, 14, 6, 61, 53, 45, 37, 29, 21, 13, 5, 28, 20,
          12, 4,
        ],
        s = [
          14, 17, 11, 24, 1, 5, 3, 28, 15, 6, 21, 10, 23, 19, 12, 4, 26, 8, 16,
          7, 27, 20, 13, 2, 41, 52, 31, 37, 47, 55, 30, 40, 51, 45, 33, 48, 44,
          49, 39, 56, 34, 53, 46, 42, 50, 36, 29, 32,
        ],
        o = [1, 2, 4, 6, 8, 10, 12, 14, 15, 17, 19, 21, 23, 25, 27, 28],
        l = [
          {
            0: 8421888,
            268435456: 32768,
            536870912: 8421378,
            805306368: 2,
            1073741824: 512,
            1342177280: 8421890,
            1610612736: 8389122,
            1879048192: 8388608,
            2147483648: 514,
            2415919104: 8389120,
            2684354560: 33280,
            2952790016: 8421376,
            3221225472: 32770,
            3489660928: 8388610,
            3758096384: 0,
            4026531840: 33282,
            134217728: 0,
            402653184: 8421890,
            671088640: 33282,
            939524096: 32768,
            1207959552: 8421888,
            1476395008: 512,
            1744830464: 8421378,
            2013265920: 2,
            2281701376: 8389120,
            2550136832: 33280,
            2818572288: 8421376,
            3087007744: 8389122,
            3355443200: 8388610,
            3623878656: 32770,
            3892314112: 514,
            4160749568: 8388608,
            1: 32768,
            268435457: 2,
            536870913: 8421888,
            805306369: 8388608,
            1073741825: 8421378,
            1342177281: 33280,
            1610612737: 512,
            1879048193: 8389122,
            2147483649: 8421890,
            2415919105: 8421376,
            2684354561: 8388610,
            2952790017: 33282,
            3221225473: 514,
            3489660929: 8389120,
            3758096385: 32770,
            4026531841: 0,
            134217729: 8421890,
            402653185: 8421376,
            671088641: 8388608,
            939524097: 512,
            1207959553: 32768,
            1476395009: 8388610,
            1744830465: 2,
            2013265921: 33282,
            2281701377: 32770,
            2550136833: 8389122,
            2818572289: 514,
            3087007745: 8421888,
            3355443201: 8389120,
            3623878657: 0,
            3892314113: 33280,
            4160749569: 8421378,
          },
          {
            0: 1074282512,
            16777216: 16384,
            33554432: 524288,
            50331648: 1074266128,
            67108864: 1073741840,
            83886080: 1074282496,
            100663296: 1073758208,
            117440512: 16,
            134217728: 540672,
            150994944: 1073758224,
            167772160: 1073741824,
            184549376: 540688,
            201326592: 524304,
            218103808: 0,
            234881024: 16400,
            251658240: 1074266112,
            8388608: 1073758208,
            25165824: 540688,
            41943040: 16,
            58720256: 1073758224,
            75497472: 1074282512,
            92274688: 1073741824,
            109051904: 524288,
            125829120: 1074266128,
            142606336: 524304,
            159383552: 0,
            176160768: 16384,
            192937984: 1074266112,
            209715200: 1073741840,
            226492416: 540672,
            243269632: 1074282496,
            260046848: 16400,
            268435456: 0,
            285212672: 1074266128,
            301989888: 1073758224,
            318767104: 1074282496,
            335544320: 1074266112,
            352321536: 16,
            369098752: 540688,
            385875968: 16384,
            402653184: 16400,
            419430400: 524288,
            436207616: 524304,
            452984832: 1073741840,
            469762048: 540672,
            486539264: 1073758208,
            503316480: 1073741824,
            520093696: 1074282512,
            276824064: 540688,
            293601280: 524288,
            310378496: 1074266112,
            327155712: 16384,
            343932928: 1073758208,
            360710144: 1074282512,
            377487360: 16,
            394264576: 1073741824,
            411041792: 1074282496,
            427819008: 1073741840,
            444596224: 1073758224,
            461373440: 524304,
            478150656: 0,
            494927872: 16400,
            511705088: 1074266128,
            528482304: 540672,
          },
          {
            0: 260,
            1048576: 0,
            2097152: 67109120,
            3145728: 65796,
            4194304: 65540,
            5242880: 67108868,
            6291456: 67174660,
            7340032: 67174400,
            8388608: 67108864,
            9437184: 67174656,
            10485760: 65792,
            11534336: 67174404,
            12582912: 67109124,
            13631488: 65536,
            14680064: 4,
            15728640: 256,
            524288: 67174656,
            1572864: 67174404,
            2621440: 0,
            3670016: 67109120,
            4718592: 67108868,
            5767168: 65536,
            6815744: 65540,
            7864320: 260,
            8912896: 4,
            9961472: 256,
            11010048: 67174400,
            12058624: 65796,
            13107200: 65792,
            14155776: 67109124,
            15204352: 67174660,
            16252928: 67108864,
            16777216: 67174656,
            17825792: 65540,
            18874368: 65536,
            19922944: 67109120,
            20971520: 256,
            22020096: 67174660,
            23068672: 67108868,
            24117248: 0,
            25165824: 67109124,
            26214400: 67108864,
            27262976: 4,
            28311552: 65792,
            29360128: 67174400,
            30408704: 260,
            31457280: 65796,
            32505856: 67174404,
            17301504: 67108864,
            18350080: 260,
            19398656: 67174656,
            20447232: 0,
            21495808: 65540,
            22544384: 67109120,
            23592960: 256,
            24641536: 67174404,
            25690112: 65536,
            26738688: 67174660,
            27787264: 65796,
            28835840: 67108868,
            29884416: 67109124,
            30932992: 67174400,
            31981568: 4,
            33030144: 65792,
          },
          {
            0: 2151682048,
            65536: 2147487808,
            131072: 4198464,
            196608: 2151677952,
            262144: 0,
            327680: 4198400,
            393216: 2147483712,
            458752: 4194368,
            524288: 2147483648,
            589824: 4194304,
            655360: 64,
            720896: 2147487744,
            786432: 2151678016,
            851968: 4160,
            917504: 4096,
            983040: 2151682112,
            32768: 2147487808,
            98304: 64,
            163840: 2151678016,
            229376: 2147487744,
            294912: 4198400,
            360448: 2151682112,
            425984: 0,
            491520: 2151677952,
            557056: 4096,
            622592: 2151682048,
            688128: 4194304,
            753664: 4160,
            819200: 2147483648,
            884736: 4194368,
            950272: 4198464,
            1015808: 2147483712,
            1048576: 4194368,
            1114112: 4198400,
            1179648: 2147483712,
            1245184: 0,
            1310720: 4160,
            1376256: 2151678016,
            1441792: 2151682048,
            1507328: 2147487808,
            1572864: 2151682112,
            1638400: 2147483648,
            1703936: 2151677952,
            1769472: 4198464,
            1835008: 2147487744,
            1900544: 4194304,
            1966080: 64,
            2031616: 4096,
            1081344: 2151677952,
            1146880: 2151682112,
            1212416: 0,
            1277952: 4198400,
            1343488: 4194368,
            1409024: 2147483648,
            1474560: 2147487808,
            1540096: 64,
            1605632: 2147483712,
            1671168: 4096,
            1736704: 2147487744,
            1802240: 2151678016,
            1867776: 4160,
            1933312: 2151682048,
            1998848: 4194304,
            2064384: 4198464,
          },
          {
            0: 128,
            4096: 17039360,
            8192: 262144,
            12288: 536870912,
            16384: 537133184,
            20480: 16777344,
            24576: 553648256,
            28672: 262272,
            32768: 16777216,
            36864: 537133056,
            40960: 536871040,
            45056: 553910400,
            49152: 553910272,
            53248: 0,
            57344: 17039488,
            61440: 553648128,
            2048: 17039488,
            6144: 553648256,
            10240: 128,
            14336: 17039360,
            18432: 262144,
            22528: 537133184,
            26624: 553910272,
            30720: 536870912,
            34816: 537133056,
            38912: 0,
            43008: 553910400,
            47104: 16777344,
            51200: 536871040,
            55296: 553648128,
            59392: 16777216,
            63488: 262272,
            65536: 262144,
            69632: 128,
            73728: 536870912,
            77824: 553648256,
            81920: 16777344,
            86016: 553910272,
            90112: 537133184,
            94208: 16777216,
            98304: 553910400,
            102400: 553648128,
            106496: 17039360,
            110592: 537133056,
            114688: 262272,
            118784: 536871040,
            122880: 0,
            126976: 17039488,
            67584: 553648256,
            71680: 16777216,
            75776: 17039360,
            79872: 537133184,
            83968: 536870912,
            88064: 17039488,
            92160: 128,
            96256: 553910272,
            100352: 262272,
            104448: 553910400,
            108544: 0,
            112640: 553648128,
            116736: 16777344,
            120832: 262144,
            124928: 537133056,
            129024: 536871040,
          },
          {
            0: 268435464,
            256: 8192,
            512: 270532608,
            768: 270540808,
            1024: 268443648,
            1280: 2097152,
            1536: 2097160,
            1792: 268435456,
            2048: 0,
            2304: 268443656,
            2560: 2105344,
            2816: 8,
            3072: 270532616,
            3328: 2105352,
            3584: 8200,
            3840: 270540800,
            128: 270532608,
            384: 270540808,
            640: 8,
            896: 2097152,
            1152: 2105352,
            1408: 268435464,
            1664: 268443648,
            1920: 8200,
            2176: 2097160,
            2432: 8192,
            2688: 268443656,
            2944: 270532616,
            3200: 0,
            3456: 270540800,
            3712: 2105344,
            3968: 268435456,
            4096: 268443648,
            4352: 270532616,
            4608: 270540808,
            4864: 8200,
            5120: 2097152,
            5376: 268435456,
            5632: 268435464,
            5888: 2105344,
            6144: 2105352,
            6400: 0,
            6656: 8,
            6912: 270532608,
            7168: 8192,
            7424: 268443656,
            7680: 270540800,
            7936: 2097160,
            4224: 8,
            4480: 2105344,
            4736: 2097152,
            4992: 268435464,
            5248: 268443648,
            5504: 8200,
            5760: 270540808,
            6016: 270532608,
            6272: 270540800,
            6528: 270532616,
            6784: 8192,
            7040: 2105352,
            7296: 2097160,
            7552: 0,
            7808: 268435456,
            8064: 268443656,
          },
          {
            0: 1048576,
            16: 33555457,
            32: 1024,
            48: 1049601,
            64: 34604033,
            80: 0,
            96: 1,
            112: 34603009,
            128: 33555456,
            144: 1048577,
            160: 33554433,
            176: 34604032,
            192: 34603008,
            208: 1025,
            224: 1049600,
            240: 33554432,
            8: 34603009,
            24: 0,
            40: 33555457,
            56: 34604032,
            72: 1048576,
            88: 33554433,
            104: 33554432,
            120: 1025,
            136: 1049601,
            152: 33555456,
            168: 34603008,
            184: 1048577,
            200: 1024,
            216: 34604033,
            232: 1,
            248: 1049600,
            256: 33554432,
            272: 1048576,
            288: 33555457,
            304: 34603009,
            320: 1048577,
            336: 33555456,
            352: 34604032,
            368: 1049601,
            384: 1025,
            400: 34604033,
            416: 1049600,
            432: 1,
            448: 0,
            464: 34603008,
            480: 33554433,
            496: 1024,
            264: 1049600,
            280: 33555457,
            296: 34603009,
            312: 1,
            328: 33554432,
            344: 1048576,
            360: 1025,
            376: 34604032,
            392: 33554433,
            408: 34603008,
            424: 0,
            440: 34604033,
            456: 1049601,
            472: 1024,
            488: 33555456,
            504: 1048577,
          },
          {
            0: 134219808,
            1: 131072,
            2: 134217728,
            3: 32,
            4: 131104,
            5: 134350880,
            6: 134350848,
            7: 2048,
            8: 134348800,
            9: 134219776,
            10: 133120,
            11: 134348832,
            12: 2080,
            13: 0,
            14: 134217760,
            15: 133152,
            2147483648: 2048,
            2147483649: 134350880,
            2147483650: 134219808,
            2147483651: 134217728,
            2147483652: 134348800,
            2147483653: 133120,
            2147483654: 133152,
            2147483655: 32,
            2147483656: 134217760,
            2147483657: 2080,
            2147483658: 131104,
            2147483659: 134350848,
            2147483660: 0,
            2147483661: 134348832,
            2147483662: 134219776,
            2147483663: 131072,
            16: 133152,
            17: 134350848,
            18: 32,
            19: 2048,
            20: 134219776,
            21: 134217760,
            22: 134348832,
            23: 131072,
            24: 0,
            25: 131104,
            26: 134348800,
            27: 134219808,
            28: 134350880,
            29: 133120,
            30: 2080,
            31: 134217728,
            2147483664: 131072,
            2147483665: 2048,
            2147483666: 134348832,
            2147483667: 133152,
            2147483668: 32,
            2147483669: 134348800,
            2147483670: 134217728,
            2147483671: 134219808,
            2147483672: 134350880,
            2147483673: 134217760,
            2147483674: 134219776,
            2147483675: 0,
            2147483676: 133120,
            2147483677: 2080,
            2147483678: 131104,
            2147483679: 134350848,
          },
        ],
        c = [
          4160749569, 528482304, 33030144, 2064384, 129024, 8064, 504,
          2147483679,
        ],
        h = (r.DES = n.extend({
          _doReset: function () {
            for (var e = this._key.words, t = [], i = 0; i < 56; i++) {
              var n = a[i] - 1;
              t[i] = (e[n >>> 5] >>> (31 - (n % 32))) & 1;
            }
            for (var r = (this._subKeys = []), l = 0; l < 16; l++) {
              var c = (r[l] = []),
                h = o[l];
              for (i = 0; i < 24; i++)
                (c[(i / 6) | 0] |= t[(s[i] - 1 + h) % 28] << (31 - (i % 6))),
                  (c[4 + ((i / 6) | 0)] |=
                    t[28 + ((s[i + 24] - 1 + h) % 28)] << (31 - (i % 6)));
              c[0] = (c[0] << 1) | (c[0] >>> 31);
              for (i = 1; i < 7; i++) c[i] = c[i] >>> (4 * (i - 1) + 3);
              c[7] = (c[7] << 5) | (c[7] >>> 27);
            }
            var u = (this._invSubKeys = []);
            for (i = 0; i < 16; i++) u[i] = r[15 - i];
          },
          encryptBlock: function (e, t) {
            this._doCryptBlock(e, t, this._subKeys);
          },
          decryptBlock: function (e, t) {
            this._doCryptBlock(e, t, this._invSubKeys);
          },
          _doCryptBlock: function (e, t, i) {
            (this._lBlock = e[t]),
              (this._rBlock = e[t + 1]),
              u.call(this, 4, 252645135),
              u.call(this, 16, 65535),
              d.call(this, 2, 858993459),
              d.call(this, 8, 16711935),
              u.call(this, 1, 1431655765);
            for (var n = 0; n < 16; n++) {
              for (
                var r = i[n], a = this._lBlock, s = this._rBlock, o = 0, h = 0;
                h < 8;
                h++
              )
                o |= l[h][((s ^ r[h]) & c[h]) >>> 0];
              (this._lBlock = s), (this._rBlock = a ^ o);
            }
            var f = this._lBlock;
            (this._lBlock = this._rBlock),
              (this._rBlock = f),
              u.call(this, 1, 1431655765),
              d.call(this, 8, 16711935),
              d.call(this, 2, 858993459),
              u.call(this, 16, 65535),
              u.call(this, 4, 252645135),
              (e[t] = this._lBlock),
              (e[t + 1] = this._rBlock);
          },
          keySize: 2,
          ivSize: 2,
          blockSize: 2,
        }));
      function u(e, t) {
        var i = ((this._lBlock >>> e) ^ this._rBlock) & t;
        (this._rBlock ^= i), (this._lBlock ^= i << e);
      }
      function d(e, t) {
        var i = ((this._rBlock >>> e) ^ this._lBlock) & t;
        (this._lBlock ^= i), (this._rBlock ^= i << e);
      }
      e.DES = n._createHelper(h);
      var f = (r.TripleDES = n.extend({
        _doReset: function () {
          var e = this._key.words;
          if (2 !== e.length && 4 !== e.length && e.length < 6)
            throw new Error(
              "Invalid key length - 3DES requires the key length to be 64, 128, 192 or >192."
            );
          var t = e.slice(0, 2),
            n = e.length < 4 ? e.slice(0, 2) : e.slice(2, 4),
            r = e.length < 6 ? e.slice(0, 2) : e.slice(4, 6);
          (this._des1 = h.createEncryptor(i.create(t))),
            (this._des2 = h.createEncryptor(i.create(n))),
            (this._des3 = h.createEncryptor(i.create(r)));
        },
        encryptBlock: function (e, t) {
          this._des1.encryptBlock(e, t),
            this._des2.decryptBlock(e, t),
            this._des3.encryptBlock(e, t);
        },
        decryptBlock: function (e, t) {
          this._des3.decryptBlock(e, t),
            this._des2.encryptBlock(e, t),
            this._des1.decryptBlock(e, t);
        },
        keySize: 6,
        ivSize: 2,
        blockSize: 2,
      }));
      e.TripleDES = n._createHelper(f);
    })(),
    (function () {
      var e = Ce,
        t = e.lib.StreamCipher,
        i = e.algo,
        n = (i.RC4 = t.extend({
          _doReset: function () {
            for (
              var e = this._key,
                t = e.words,
                i = e.sigBytes,
                n = (this._S = []),
                r = 0;
              r < 256;
              r++
            )
              n[r] = r;
            r = 0;
            for (var a = 0; r < 256; r++) {
              var s = r % i,
                o = (t[s >>> 2] >>> (24 - (s % 4) * 8)) & 255;
              a = (a + n[r] + o) % 256;
              var l = n[r];
              (n[r] = n[a]), (n[a] = l);
            }
            this._i = this._j = 0;
          },
          _doProcessBlock: function (e, t) {
            e[t] ^= r.call(this);
          },
          keySize: 8,
          ivSize: 0,
        }));
      function r() {
        for (
          var e = this._S, t = this._i, i = this._j, n = 0, r = 0;
          r < 4;
          r++
        ) {
          i = (i + e[(t = (t + 1) % 256)]) % 256;
          var a = e[t];
          (e[t] = e[i]),
            (e[i] = a),
            (n |= e[(e[t] + e[i]) % 256] << (24 - 8 * r));
        }
        return (this._i = t), (this._j = i), n;
      }
      e.RC4 = t._createHelper(n);
      var a = (i.RC4Drop = n.extend({
        cfg: n.cfg.extend({ drop: 192 }),
        _doReset: function () {
          n._doReset.call(this);
          for (var e = this.cfg.drop; 0 < e; e--) r.call(this);
        },
      }));
      e.RC4Drop = t._createHelper(a);
    })(),
    (Ce.mode.CTRGladman =
      ((se = (ae = Ce.lib.BlockCipherMode.extend()).Encryptor =
        ae.extend({
          processBlock: function (e, t) {
            var i,
              n = this._cipher,
              r = n.blockSize,
              a = this._iv,
              s = this._counter;
            a && ((s = this._counter = a.slice(0)), (this._iv = void 0)),
              0 === ((i = s)[0] = Ie(i[0])) && (i[1] = Ie(i[1]));
            var o = s.slice(0);
            n.encryptBlock(o, 0);
            for (var l = 0; l < r; l++) e[t + l] ^= o[l];
          },
        })),
      (ae.Decryptor = se),
      ae)),
    (le = (oe = Ce).lib.StreamCipher),
    (ce = oe.algo),
    (he = []),
    (ue = []),
    (de = []),
    (fe = ce.Rabbit =
      le.extend({
        _doReset: function () {
          for (var e = this._key.words, t = this.cfg.iv, i = 0; i < 4; i++)
            e[i] =
              (16711935 & ((e[i] << 8) | (e[i] >>> 24))) |
              (4278255360 & ((e[i] << 24) | (e[i] >>> 8)));
          var n = (this._X = [
              e[0],
              (e[3] << 16) | (e[2] >>> 16),
              e[1],
              (e[0] << 16) | (e[3] >>> 16),
              e[2],
              (e[1] << 16) | (e[0] >>> 16),
              e[3],
              (e[2] << 16) | (e[1] >>> 16),
            ]),
            r = (this._C = [
              (e[2] << 16) | (e[2] >>> 16),
              (4294901760 & e[0]) | (65535 & e[1]),
              (e[3] << 16) | (e[3] >>> 16),
              (4294901760 & e[1]) | (65535 & e[2]),
              (e[0] << 16) | (e[0] >>> 16),
              (4294901760 & e[2]) | (65535 & e[3]),
              (e[1] << 16) | (e[1] >>> 16),
              (4294901760 & e[3]) | (65535 & e[0]),
            ]);
          for (i = this._b = 0; i < 4; i++) De.call(this);
          for (i = 0; i < 8; i++) r[i] ^= n[(i + 4) & 7];
          if (t) {
            var a = t.words,
              s = a[0],
              o = a[1],
              l =
                (16711935 & ((s << 8) | (s >>> 24))) |
                (4278255360 & ((s << 24) | (s >>> 8))),
              c =
                (16711935 & ((o << 8) | (o >>> 24))) |
                (4278255360 & ((o << 24) | (o >>> 8))),
              h = (l >>> 16) | (4294901760 & c),
              u = (c << 16) | (65535 & l);
            (r[0] ^= l),
              (r[1] ^= h),
              (r[2] ^= c),
              (r[3] ^= u),
              (r[4] ^= l),
              (r[5] ^= h),
              (r[6] ^= c),
              (r[7] ^= u);
            for (i = 0; i < 4; i++) De.call(this);
          }
        },
        _doProcessBlock: function (e, t) {
          var i = this._X;
          De.call(this),
            (he[0] = i[0] ^ (i[5] >>> 16) ^ (i[3] << 16)),
            (he[1] = i[2] ^ (i[7] >>> 16) ^ (i[5] << 16)),
            (he[2] = i[4] ^ (i[1] >>> 16) ^ (i[7] << 16)),
            (he[3] = i[6] ^ (i[3] >>> 16) ^ (i[1] << 16));
          for (var n = 0; n < 4; n++)
            (he[n] =
              (16711935 & ((he[n] << 8) | (he[n] >>> 24))) |
              (4278255360 & ((he[n] << 24) | (he[n] >>> 8)))),
              (e[t + n] ^= he[n]);
        },
        blockSize: 4,
        ivSize: 2,
      })),
    (oe.Rabbit = le._createHelper(fe)),
    (Ce.mode.CTR =
      ((ge = (pe = Ce.lib.BlockCipherMode.extend()).Encryptor =
        pe.extend({
          processBlock: function (e, t) {
            var i = this._cipher,
              n = i.blockSize,
              r = this._iv,
              a = this._counter;
            r && ((a = this._counter = r.slice(0)), (this._iv = void 0));
            var s = a.slice(0);
            i.encryptBlock(s, 0), (a[n - 1] = (a[n - 1] + 1) | 0);
            for (var o = 0; o < n; o++) e[t + o] ^= s[o];
          },
        })),
      (pe.Decryptor = ge),
      pe)),
    (ve = (me = Ce).lib.StreamCipher),
    (be = me.algo),
    (ye = []),
    (we = []),
    (xe = []),
    (ke = be.RabbitLegacy =
      ve.extend({
        _doReset: function () {
          for (
            var e = this._key.words,
              t = this.cfg.iv,
              i = (this._X = [
                e[0],
                (e[3] << 16) | (e[2] >>> 16),
                e[1],
                (e[0] << 16) | (e[3] >>> 16),
                e[2],
                (e[1] << 16) | (e[0] >>> 16),
                e[3],
                (e[2] << 16) | (e[1] >>> 16),
              ]),
              n = (this._C = [
                (e[2] << 16) | (e[2] >>> 16),
                (4294901760 & e[0]) | (65535 & e[1]),
                (e[3] << 16) | (e[3] >>> 16),
                (4294901760 & e[1]) | (65535 & e[2]),
                (e[0] << 16) | (e[0] >>> 16),
                (4294901760 & e[2]) | (65535 & e[3]),
                (e[1] << 16) | (e[1] >>> 16),
                (4294901760 & e[3]) | (65535 & e[0]),
              ]),
              r = (this._b = 0);
            r < 4;
            r++
          )
            Oe.call(this);
          for (r = 0; r < 8; r++) n[r] ^= i[(r + 4) & 7];
          if (t) {
            var a = t.words,
              s = a[0],
              o = a[1],
              l =
                (16711935 & ((s << 8) | (s >>> 24))) |
                (4278255360 & ((s << 24) | (s >>> 8))),
              c =
                (16711935 & ((o << 8) | (o >>> 24))) |
                (4278255360 & ((o << 24) | (o >>> 8))),
              h = (l >>> 16) | (4294901760 & c),
              u = (c << 16) | (65535 & l);
            (n[0] ^= l),
              (n[1] ^= h),
              (n[2] ^= c),
              (n[3] ^= u),
              (n[4] ^= l),
              (n[5] ^= h),
              (n[6] ^= c),
              (n[7] ^= u);
            for (r = 0; r < 4; r++) Oe.call(this);
          }
        },
        _doProcessBlock: function (e, t) {
          var i = this._X;
          Oe.call(this),
            (ye[0] = i[0] ^ (i[5] >>> 16) ^ (i[3] << 16)),
            (ye[1] = i[2] ^ (i[7] >>> 16) ^ (i[5] << 16)),
            (ye[2] = i[4] ^ (i[1] >>> 16) ^ (i[7] << 16)),
            (ye[3] = i[6] ^ (i[3] >>> 16) ^ (i[1] << 16));
          for (var n = 0; n < 4; n++)
            (ye[n] =
              (16711935 & ((ye[n] << 8) | (ye[n] >>> 24))) |
              (4278255360 & ((ye[n] << 24) | (ye[n] >>> 8)))),
              (e[t + n] ^= ye[n]);
        },
        blockSize: 4,
        ivSize: 2,
      })),
    (me.RabbitLegacy = ve._createHelper(ke)),
    (Ce.pad.ZeroPadding = {
      pad: function (e, t) {
        var i = 4 * t;
        e.clamp(), (e.sigBytes += i - (e.sigBytes % i || i));
      },
      unpad: function (e) {
        var t = e.words,
          i = e.sigBytes - 1;
        for (i = e.sigBytes - 1; 0 <= i; i--)
          if ((t[i >>> 2] >>> (24 - (i % 4) * 8)) & 255) {
            e.sigBytes = i + 1;
            break;
          }
      },
    }),
    Ce
  );
});
!(function (e, t) {
  "object" == typeof exports
    ? (module.exports = exports =
        t(
          require("./core"),
          require("./enc-base64"),
          require("./md5"),
          require("./evpkdf"),
          require("./cipher-core")
        ))
    : "function" == typeof define && define.amd
    ? define(
        ["./core", "./enc-base64", "./md5", "./evpkdf", "./cipher-core"],
        t
      )
    : t(e.CryptoJS);
})(this, function (e) {
  return (
    (function () {
      var t = e,
        i = t.lib.BlockCipher,
        n = t.algo,
        r = [],
        a = [],
        s = [],
        o = [],
        l = [],
        c = [],
        h = [],
        u = [],
        d = [],
        f = [];
      !(function () {
        for (var e = [], t = 0; t < 256; t++)
          e[t] = t < 128 ? t << 1 : (t << 1) ^ 283;
        var i = 0,
          n = 0;
        for (t = 0; t < 256; t++) {
          var p = n ^ (n << 1) ^ (n << 2) ^ (n << 3) ^ (n << 4);
          (p = (p >>> 8) ^ (255 & p) ^ 99), (r[i] = p);
          var g = e[(a[p] = i)],
            m = e[g],
            v = e[m],
            b = (257 * e[p]) ^ (16843008 * p);
          (s[i] = (b << 24) | (b >>> 8)),
            (o[i] = (b << 16) | (b >>> 16)),
            (l[i] = (b << 8) | (b >>> 24)),
            (c[i] = b);
          b = (16843009 * v) ^ (65537 * m) ^ (257 * g) ^ (16843008 * i);
          (h[p] = (b << 24) | (b >>> 8)),
            (u[p] = (b << 16) | (b >>> 16)),
            (d[p] = (b << 8) | (b >>> 24)),
            (f[p] = b),
            i ? ((i = g ^ e[e[e[v ^ g]]]), (n ^= e[e[n]])) : (i = n = 1);
        }
      })();
      var p = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54],
        g = (n.AES = i.extend({
          _doReset: function () {
            if (!this._nRounds || this._keyPriorReset !== this._key) {
              for (
                var e = (this._keyPriorReset = this._key),
                  t = e.words,
                  i = e.sigBytes / 4,
                  n = 4 * (1 + (this._nRounds = 6 + i)),
                  a = (this._keySchedule = []),
                  s = 0;
                s < n;
                s++
              )
                s < i
                  ? (a[s] = t[s])
                  : ((c = a[s - 1]),
                    s % i
                      ? 6 < i &&
                        s % i == 4 &&
                        (c =
                          (r[c >>> 24] << 24) |
                          (r[(c >>> 16) & 255] << 16) |
                          (r[(c >>> 8) & 255] << 8) |
                          r[255 & c])
                      : ((c =
                          (r[(c = (c << 8) | (c >>> 24)) >>> 24] << 24) |
                          (r[(c >>> 16) & 255] << 16) |
                          (r[(c >>> 8) & 255] << 8) |
                          r[255 & c]),
                        (c ^= p[(s / i) | 0] << 24)),
                    (a[s] = a[s - i] ^ c));
              for (var o = (this._invKeySchedule = []), l = 0; l < n; l++) {
                s = n - l;
                if (l % 4) var c = a[s];
                else c = a[s - 4];
                o[l] =
                  l < 4 || s <= 4
                    ? c
                    : h[r[c >>> 24]] ^
                      u[r[(c >>> 16) & 255]] ^
                      d[r[(c >>> 8) & 255]] ^
                      f[r[255 & c]];
              }
            }
          },
          encryptBlock: function (e, t) {
            this._doCryptBlock(e, t, this._keySchedule, s, o, l, c, r);
          },
          decryptBlock: function (e, t) {
            var i = e[t + 1];
            (e[t + 1] = e[t + 3]),
              (e[t + 3] = i),
              this._doCryptBlock(e, t, this._invKeySchedule, h, u, d, f, a);
            i = e[t + 1];
            (e[t + 1] = e[t + 3]), (e[t + 3] = i);
          },
          _doCryptBlock: function (e, t, i, n, r, a, s, o) {
            for (
              var l = this._nRounds,
                c = e[t] ^ i[0],
                h = e[t + 1] ^ i[1],
                u = e[t + 2] ^ i[2],
                d = e[t + 3] ^ i[3],
                f = 4,
                p = 1;
              p < l;
              p++
            ) {
              var g =
                  n[c >>> 24] ^
                  r[(h >>> 16) & 255] ^
                  a[(u >>> 8) & 255] ^
                  s[255 & d] ^
                  i[f++],
                m =
                  n[h >>> 24] ^
                  r[(u >>> 16) & 255] ^
                  a[(d >>> 8) & 255] ^
                  s[255 & c] ^
                  i[f++],
                v =
                  n[u >>> 24] ^
                  r[(d >>> 16) & 255] ^
                  a[(c >>> 8) & 255] ^
                  s[255 & h] ^
                  i[f++],
                b =
                  n[d >>> 24] ^
                  r[(c >>> 16) & 255] ^
                  a[(h >>> 8) & 255] ^
                  s[255 & u] ^
                  i[f++];
              (c = g), (h = m), (u = v), (d = b);
            }
            (g =
              ((o[c >>> 24] << 24) |
                (o[(h >>> 16) & 255] << 16) |
                (o[(u >>> 8) & 255] << 8) |
                o[255 & d]) ^
              i[f++]),
              (m =
                ((o[h >>> 24] << 24) |
                  (o[(u >>> 16) & 255] << 16) |
                  (o[(d >>> 8) & 255] << 8) |
                  o[255 & c]) ^
                i[f++]),
              (v =
                ((o[u >>> 24] << 24) |
                  (o[(d >>> 16) & 255] << 16) |
                  (o[(c >>> 8) & 255] << 8) |
                  o[255 & h]) ^
                i[f++]),
              (b =
                ((o[d >>> 24] << 24) |
                  (o[(c >>> 16) & 255] << 16) |
                  (o[(h >>> 8) & 255] << 8) |
                  o[255 & u]) ^
                i[f++]);
            (e[t] = g), (e[t + 1] = m), (e[t + 2] = v), (e[t + 3] = b);
          },
          keySize: 8,
        }));
      t.AES = i._createHelper(g);
    })(),
    e.AES
  );
});
function startConversionFromTemplate(e) {
  $("#inputUrl").val(e), startConversion();
}
function clearFileInput() {
  $(".upload-from-file-input").val("");
}
function clearFileUrlInput() {
  (fileUrl = null), $(".upload-from-url-input").val("");
}
function setUploadButtonsDisabled(e) {
  $(".bootstrap-filestyle").find("label.btn").toggleClass("disabled", e),
    $(".upload-initialize-element").prop("disabled", e);
}
function titleWithoutExtension(e) {
  return e.replace(/\.[^/.]+$/, "");
}
function buildErrorAlert(e) {
  return (
    '<div class="alert alert-danger"> ' +
    e +
    '<button type="button" class="close alert-close-btn " data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button></div>'
  );
}
function randomInteger(e, t) {
  var i = e - 0.5 + Math.random() * (t - e + 1);
  return Math.round(i);
}
function frame() {
  progressWidth >= 45
    ? clearInterval(progressInterval)
    : ((progressWidth += randomInteger(0, 3)),
      $("#progress-bar span").css("width", progressWidth + "%"));
}
function templateStatusIsValid() {
  return $("select.template-status-select").val() > 0 &&
    "false" === $("#user_can_upload_private").val()
    ? ($(".error-field")
        .show()
        .html(
          buildErrorAlert(
            'To create templates please please <strong><a href="/subscriptions">upgrade your subscription</a></strong>.'
          )
        ),
      !1)
    : ($(".error-field").hide().html(""), !0);
}
function escapeInput(e) {
  return String(e)
    .replace(/&/g, "&amp;")
    .replace(/"/g, "&quot;")
    .replace(/'/g, "&#39;")
    .replace(/</g, "&lt;")
    .replace(/>/g, "&gt;");
}
function onClickMeOnly() {
  if (authorize($(this).attr("id"))) {
    $(".choose-another").removeClass("hidden");
    $(".choose-another").on("click", function () {
      window.location.reload(!1);
    });
    $("#choose-mode, #document-preview-caption").addClass("hidden");
      editor.removeAddedFields(),
      editor.removeAddedElements(),
      editor.showPlacedElements(!0),
      editor.setInvitationMode(3);
    var e = parseJsonBlock($("#fields-data"));
    e
      ? (setPrefilledValues(e),
        assignFieldsToCurrentUser(e),
        editor.setFields(e),
        editor.reinitConfirmButton(function () {
          editor.sendCreateDocumentData();
        }),
        editor.removeAddedFields(),
        editor.unserializeFieldsForFilling(),
        editor.setMode("fill_fields"),
        editor.showInterface())
      : (editor.setMode("no_fields"), editor.showInterface()),
      editor.enableCertificateChoose();
  }
}
$(".cancel-selected-mode").on("click", function () {
  $("#choose-mode, #document-preview-caption").removeClass("hidden"),
    $("#document-title-wrapper").addClass("hidden"),
    $("#invite-list").addClass("hidden"),
    cancelMode.call(this);
}),
  $(".modify-parties").on("click", function () {
    modifyPartiesShow.call(this);
  }),
  $("#choose-mode").on("click", "#mode-sign-by-myself", onClickMeOnly),
  $("#choose-mode").on(
    "click",
    "#mode-sign-with-me-and-others, #mode-sign-with-others-only",
    function () {
      authorize($(this).attr("id")) &&
        ($("#invite-list").removeClass("hidden"),
        $("#choose-mode").addClass("hidden"),
        $("#document-title-wrapper").removeClass("hidden"),
        $("#invite-list .form-group:not(.example)")
          .find("input")
          .each(function () {
            if ("" === $(this).val()) return $(this).focus(), !1;
          }));
    }
  ),
  $("#mode-sign-with-me-and-others").on("click", function () {
    if (parseJsonBlock($("#fields-data")))
      $(".emails .new-input:not(.example)").remove(),
        $(".assign-me").removeClass("hidden");
    else {
      $(".emails .new-input:not(.example)").remove();
      var e = $(".emails .new-input.example").clone();
      e.removeClass("example").removeClass("hidden");
      var t = e.clone();
      t.find(".name-input").val($("#current-user-name").attr("data-name")),
        t.find(".email-input").val($("#current-user-email").attr("data-email")),
        $(".emails").append(t),
        $(".emails").append(e);
    }
  }),
  $("#invite-list").on("click", ".assign-me", function () {
    var e = $("#current-user-email").html(),
      t = $("#current-user-name").html();
    $(".emails .role-input:not(.example)").each(function () {
      $(this).find(".email-input").val() === e &&
        ($(this).find(".email-input").val(""),
        $(this).find(".name-input").val(""));
    }),
      $(this).closest(".form-group").find(".email-input").val(e),
      $(this).closest(".form-group").find(".name-input").val(t);
  }),
  $("#mode-sign-with-others-only").on("click", function () {
    if (
      ($(".emails .new-input:not(.example)").remove(),
      $(".assign-me").addClass("hidden"),
      !parseJsonBlock($("#fields-data")))
    ) {
      var e = $(".emails .new-input.example").clone();
      e.removeClass("example").removeClass("hidden"), $(".emails").append(e);
    }
  }),
  $("#invite-list").on("click", "#new-email", function () {
    var e = $(".emails .new-input.example").first().clone();
    $(".emails").append(e),
      e.removeClass("example").removeClass("hidden").find("input").val("");
  }),
  $("#invite-list").on("click", "#remove-email", function () {
    $(".emails .new-input:not(.example)").length < 2 ||
      $(".emails .new-input:not(.example)").last().remove();
  }),
  $("#invite-list").on("click", "#add-fields", function () {
    var e = new Array();
    editor.removeAddedElements(),
      editor.removeAddedFields(),
      parseJsonBlock($("#fields-data")) &&
        editor.setFields(
          parseJsonBlock($("#fields-data")),
          !0,
          !1,
          "copied" === source
        ),
      editor.showPlacedElements(!0),
      parseEmails(e) &&
        ($("#document-preview-caption").addClass("hidden"),
        $("#invite-list").addClass("hidden"),
        editor.setParties(e),
        assignPartiesToFieldsByRoles(),
        editor.setMode("edit_fields"),
        editor.showInterface(),
        $("#confirm-parties").addClass("hidden"),
        $("#confirm-modified-parties, .modify-parties-wrapper").removeClass(
          "hidden"
        ));
  }),
  $("#invite-list").on("click", "#send-without-fields", function () {
    var e = new Array();
    parseEmails(e) &&
      (initButtonLoading($(this)),
      editor.setParties(e),
      assignPartiesToFieldsByRoles(),
      editor.setMode("edit_fields"),
      editor.hideInterface(),
      $("#confirm-button").click());
  }),
  $("#confirm-modified-parties").on("click", function () {
    var e = new Array();
    parseEmails(e) &&
      ($("#invite-list").addClass("hidden"),
      editor.setPartiesToExistingFields(e));
  });
!(function (e, t) {
  if ("function" == typeof define && define.amd)
    define(["exports", "module"], t);
  else if ("undefined" != typeof exports && "undefined" != typeof module)
    t(exports, module);
  else {
    var i = { exports: {} };
    t(0, i);
    e.autosize = i.exports;
  }
})(this, function (e, t) {
  "use strict";
  var i,
    n,
    r =
      "function" == typeof Map
        ? new Map()
        : ((i = []),
          (n = []),
          {
            has: function (e) {
              return i.indexOf(e) > -1;
            },
            get: function (e) {
              return n[i.indexOf(e)];
            },
            set: function (e, t) {
              if (-1 === i.indexOf(e)) {
                i.push(e);
                n.push(t);
              }
            },
            delete: function (e) {
              var t = i.indexOf(e);
              if (t > -1) {
                i.splice(t, 1);
                n.splice(t, 1);
              }
            },
          }),
    a = function (e) {
      return new Event(e, { bubbles: !0 });
    };
  try {
    new Event("test");
  } catch (e) {
    a = function (e) {
      var t = document.createEvent("Event");
      t.initEvent(e, !0, !1);
      return t;
    };
  }
  function s(e) {
    var t = r.get(e);
    if (t) t.destroy();
  }
  function o(e) {
    var t = r.get(e);
    if (t) t.update();
  }
  var l = null;
  if (
    "undefined" == typeof window ||
    "function" != typeof window.getComputedStyle
  ) {
    (l = function (e) {
      return e;
    }).destroy = function (e) {
      return e;
    };
    l.update = function (e) {
      return e;
    };
  } else {
    (l = function (e, t) {
      if (e)
        Array.prototype.forEach.call(e.length ? e : [e], function (e) {
          return (function (e) {
            if (e && e.nodeName && "TEXTAREA" === e.nodeName && !r.has(e)) {
              var t = null,
                i = e.clientWidth,
                n = null,
                s = function () {
                  if (e.clientWidth !== i) h();
                },
                o = function (t) {
                  window.removeEventListener("resize", s, !1);
                  e.removeEventListener("input", h, !1);
                  e.removeEventListener("keyup", h, !1);
                  e.removeEventListener("autosize:destroy", o, !1);
                  e.removeEventListener("autosize:update", h, !1);
                  Object.keys(t).forEach(function (i) {
                    e.style[i] = t[i];
                  });
                  r.delete(e);
                }.bind(e, {
                  height: e.style.height,
                  resize: e.style.resize,
                  overflowY: e.style.overflowY,
                  overflowX: e.style.overflowX,
                  wordWrap: e.style.wordWrap,
                });
              e.addEventListener("autosize:destroy", o, !1);
              if ("onpropertychange" in e && "oninput" in e)
                e.addEventListener("keyup", h, !1);
              window.addEventListener("resize", s, !1);
              e.addEventListener("input", h, !1);
              e.addEventListener("autosize:update", h, !1);
              e.style.overflowX = "hidden";
              e.style.wordWrap = "break-word";
              r.set(e, { destroy: o, update: h });
              !(function () {
                var i = window.getComputedStyle(e, null);
                if ("vertical" === i.resize) e.style.resize = "none";
                else if ("both" === i.resize) e.style.resize = "horizontal";
                if ("content-box" === i.boxSizing)
                  t = -(parseFloat(i.paddingTop) + parseFloat(i.paddingBottom));
                else
                  t =
                    parseFloat(i.borderTopWidth) +
                    parseFloat(i.borderBottomWidth);
                if (isNaN(t)) t = 0;
                h();
              })();
            }
            function l(t) {
              var i = e.style.width;
              e.style.width = "0px";
              e.offsetWidth;
              e.style.width = i;
              e.style.overflowY = t;
            }
            function c() {
              var n = e.style.height,
                r = (function (e) {
                  for (
                    var t = [];
                    e && e.parentNode && e.parentNode instanceof Element;

                  ) {
                    if (e.parentNode.scrollTop)
                      t.push({
                        node: e.parentNode,
                        scrollTop: e.parentNode.scrollTop,
                      });
                    e = e.parentNode;
                  }
                  return t;
                })(e),
                a =
                  document.documentElement &&
                  document.documentElement.scrollTop;
              e.style.height = "";
              var s = e.scrollHeight + t;
              if (0 !== e.scrollHeight) {
                e.style.height = s + "px";
                i = e.clientWidth;
                r.forEach(function (e) {
                  e.node.scrollTop = e.scrollTop;
                });
                if (a) document.documentElement.scrollTop = a;
              } else e.style.height = n;
            }
            function h() {
              c();
              var t = Math.round(parseFloat(e.style.height)),
                i = window.getComputedStyle(e, null),
                r =
                  "content-box" === i.boxSizing
                    ? Math.round(parseFloat(i.height))
                    : e.offsetHeight;
              if (r !== t) {
                if ("hidden" === i.overflowY) {
                  l("scroll");
                  c();
                  r =
                    "content-box" === i.boxSizing
                      ? Math.round(
                          parseFloat(window.getComputedStyle(e, null).height)
                        )
                      : e.offsetHeight;
                }
              } else if ("hidden" !== i.overflowY) {
                l("hidden");
                c();
                r =
                  "content-box" === i.boxSizing
                    ? Math.round(
                        parseFloat(window.getComputedStyle(e, null).height)
                      )
                    : e.offsetHeight;
              }
              if (n !== r) {
                n = r;
                var s = a("autosize:resized");
                try {
                  e.dispatchEvent(s);
                } catch (e) {}
              }
            }
          })(e);
        });
      return e;
    }).destroy = function (e) {
      if (e) Array.prototype.forEach.call(e.length ? e : [e], s);
      return e;
    };
    l.update = function (e) {
      if (e) Array.prototype.forEach.call(e.length ? e : [e], o);
      return e;
    };
  }
  t.exports = l;
});
!(function (e) {
  "use strict";
  var t = 0,
    i = function (t, i) {
      this.options = i;
      this.$elementFilestyle = [];
      this.$element = e(t);
    };
  i.prototype = {
    clear: function () {
      this.$element.val("");
      this.$elementFilestyle.find(":text").val("");
      this.$elementFilestyle.find(".badge").remove();
    },
    destroy: function () {
      this.$element.removeAttr("style").removeData("filestyle");
      this.$elementFilestyle.remove();
    },
    disabled: function (e) {
      if (!0 === e || !1 === e) {
        this.options.disabled = e;
        this.$element.prop("disabled", this.options.disabled);
        this.$elementFilestyle
          .find("label")
          .prop("disabled", this.options.disabled);
        if (this.options.disabled)
          this.$elementFilestyle.find("label").css("opacity", "0.65");
        else this.$elementFilestyle.find("label").css("opacity", "1");
      } else return this.options.disabled;
    },
    dragdrop: function (e) {
      if (!0 === e || !1 === e) this.options.dragdrop = e;
      else return this.options.dragdrop;
    },
    buttonBefore: function (e) {
      if (!0 === e) {
        if (!this.options.buttonBefore) {
          this.options.buttonBefore = e;
          if (this.options.input) {
            this.$elementFilestyle.remove();
            this.constructor();
            this.pushNameFiles();
          }
        }
      } else if (!1 === e) {
        if (this.options.buttonBefore) {
          this.options.buttonBefore = e;
          if (this.options.input) {
            this.$elementFilestyle.remove();
            this.constructor();
            this.pushNameFiles();
          }
        }
      } else return this.options.buttonBefore;
    },
    input: function (e) {
      if (!0 === e) {
        if (!this.options.input) {
          this.options.input = e;
          if (this.options.buttonBefore)
            this.$elementFilestyle.append(this.htmlInput());
          else this.$elementFilestyle.prepend(this.htmlInput());
          this.pushNameFiles();
          this.$elementFilestyle
            .find(".group-span-filestyle")
            .addClass("input-group-btn");
        }
      } else if (!1 === e) {
        if (this.options.input) {
          this.options.input = e;
          this.$elementFilestyle.find(":text").remove();
          this.$elementFilestyle
            .find(".group-span-filestyle")
            .removeClass("input-group-btn");
        }
      } else return this.options.input;
    },
    size: function (e) {
      if (void 0 !== e) {
        this.options.size = e;
        var t = this.$elementFilestyle.find("label"),
          i = this.$elementFilestyle.find("input");
        t.removeClass("btn-lg btn-sm");
        i.removeClass("form-control-lg form-control-sm");
        if ("nr" != this.options.size) {
          t.addClass("btn-" + this.options.size);
          i.addClass("form-control-" + this.options.size);
        }
      } else return this.options.size;
    },
    placeholder: function (e) {
      if (void 0 !== e) {
        this.options.placeholder = e;
        this.$elementFilestyle.find("input").attr("placeholder", e);
      } else return this.options.placeholder;
    },
    text: function (e) {
      if (void 0 !== e) {
        this.options.text = e;
        this.$elementFilestyle.find("label .text").html(this.options.text);
      } else return this.options.text;
    },
    btnClass: function (e) {
      if (void 0 !== e) {
        this.options.btnClass = e;
        this.$elementFilestyle
          .find("label")
          .attr({
            class: "btn " + this.options.btnClass + " btn-" + this.options.size,
          });
      } else return this.options.btnClass;
    },
    badge: function (e) {
      if (!0 === e) {
        this.options.badge = e;
        var t = this.pushNameFiles();
        this.$elementFilestyle
          .find("label")
          .append(
            ' <span class="badge ' +
              this.options.badgeName +
              '">' +
              t.length +
              "</span>"
          );
      } else if (!1 === e) {
        this.options.badge = e;
        this.$elementFilestyle.find(".badge").remove();
      } else return this.options.badge;
    },
    badgeName: function (e) {
      if (void 0 !== e) {
        this.options.badgeName = e;
        this.$elementFilestyle
          .find(".badge")
          .attr({ class: "badge " + this.options.badgeName });
      } else return this.options.badgeName;
    },
    htmlIcon: function (e) {
      if (void 0 !== e) this.options.htmlIcon = e;
      return this.options.htmlIcon;
    },
    htmlInput: function () {
      if (this.options.input)
        return (
          '<input type="text" class="form-control ' +
          ("nr" == this.options.size
            ? ""
            : "form-control-" + this.options.size) +
          '" placeholder="' +
          this.options.placeholder +
          '" disabled> '
        );
      else return "";
    },
    pushNameFiles: function () {
      var e = "",
        t = [];
      if (void 0 === this.$element[0].files)
        t[0] = { name: this.$element[0] && this.$element[0].value };
      else t = this.$element[0].files;
      for (var i = 0; i < t.length; i++)
        e += t[i].name.split("\\").pop() + ", ";
      if ("" !== e)
        this.$elementFilestyle.find(":text").val(e.replace(/\, $/g, ""));
      else this.$elementFilestyle.find(":text").val("");
      return t;
    },
    constructor: function () {
      var i,
        n,
        r = this,
        a = r.$element.attr("id");
      if ("" === a || !a) {
        a = "filestyle-" + t;
        r.$element.attr({ id: a });
        t++;
      }
      n =
        '<span class="group-span-filestyle ' +
        (r.options.input ? "input-group-btn" : "") +
        '"><label for="' +
        a +
        '" style="margin-bottom: 0;" class="btn ' +
        r.options.btnClass +
        " " +
        ("nr" == r.options.size ? "" : "btn-" + r.options.size) +
        '" ' +
        (r.options.disabled || r.$element.attr("disabled")
          ? ' disabled="true"'
          : "") +
        ">" +
        r.htmlIcon() +
        '<span class="buttonText">' +
        r.options.text +
        "</span></label></span>";
      i = r.options.buttonBefore ? n + r.htmlInput() : r.htmlInput() + n;
      r.$elementFilestyle = e(
        '<div class="bootstrap-filestyle input-group"><div name="filedrag"></div>' +
          i +
          "</div>"
      );
      r.$elementFilestyle
        .find(".group-span-filestyle")
        .attr("tabindex", "0")
        .keypress(function (e) {
          if (13 === e.keyCode || 32 === e.charCode) {
            r.$elementFilestyle.find("label").click();
            return !1;
          }
        });
      r.$element
        .css({ position: "absolute", clip: "rect(0px 0px 0px 0px)" })
        .attr("tabindex", "-1")
        .after(r.$elementFilestyle);
      r.$elementFilestyle
        .find(r.options.buttonBefore ? "label" : ":input")
        .css({
          "border-top-left-radius": ".25rem",
          "border-bottom-left-radius": ".25rem",
        });
      r.$elementFilestyle
        .find('[name="filedrag"]')
        .css({
          position: "absolute",
          width: "100%",
          height: r.$elementFilestyle.height() + "px",
          "z-index": -1,
        });
      if (r.options.disabled || r.$element.attr("disabled")) {
        r.$element.attr("disabled", "true");
        if (r.options.disabled)
          r.$elementFilestyle.find("label").css("opacity", "0.65");
        else r.$elementFilestyle.find("label").css("opacity", "1");
      }
      r.$element.change(function () {
        var e = r.pushNameFiles();
        if (r.options.badge)
          if (0 == r.$elementFilestyle.find(".badge").length)
            r.$elementFilestyle
              .find("label")
              .append(
                ' <span class="badge ' +
                  r.options.badgeName +
                  '">' +
                  e.length +
                  "</span>"
              );
          else if (0 == e.length) r.$elementFilestyle.find(".badge").remove();
          else r.$elementFilestyle.find(".badge").html(e.length);
        else r.$elementFilestyle.find(".badge").remove();
        r.options.onChange(e);
      });
      if (window.navigator.userAgent.search(/firefox/i) > -1)
        r.$elementFilestyle.find("label").click(function () {
          r.$element.click();
          return !1;
        });
      e(document)
        .on("dragover", function (t) {
          t.preventDefault();
          t.stopPropagation();
          if (r.options.dragdrop) e('[name="filedrag"]').css("z-index", "9");
        })
        .on("drop", function (t) {
          t.preventDefault();
          t.stopPropagation();
          if (r.options.dragdrop) e('[name="filedrag"]').css("z-index", "-1");
        });
      r.$elementFilestyle
        .find('[name="filedrag"]')
        .on("dragover", function (e) {
          e.preventDefault();
          e.stopPropagation();
        })
        .on("dragenter", function (e) {
          e.preventDefault();
          e.stopPropagation();
        })
        .on("drop", function (t) {
          if (
            t.originalEvent.dataTransfer &&
            !r.options.disabled &&
            r.options.dragdrop
          )
            if (t.originalEvent.dataTransfer.files.length) {
              t.preventDefault();
              t.stopPropagation();
              r.$element[0].files = t.originalEvent.dataTransfer.files;
              var i = r.pushNameFiles();
              if (r.options.badge)
                if (0 == r.$elementFilestyle.find(".badge").length)
                  r.$elementFilestyle
                    .find("label")
                    .append(
                      ' <span class="badge ' +
                        r.options.badgeName +
                        '">' +
                        i.length +
                        "</span>"
                    );
                else if (0 == i.length)
                  r.$elementFilestyle.find(".badge").remove();
                else r.$elementFilestyle.find(".badge").html(i.length);
              else r.$elementFilestyle.find(".badge").remove();
              r.options.onChange(i);
              e('[name="filedrag"]').css("z-index", "-1");
            }
        });
    },
  };
  var n = e.fn.filestyle;
  e.fn.filestyle = function (t, n) {
    var r = "",
      a = this.each(function () {
        if ("file" === e(this).attr("type")) {
          var a = e(this),
            s = a.data("filestyle"),
            o = e.extend(
              {},
              e.fn.filestyle.defaults,
              t,
              "object" == typeof t && t
            );
          if (!s) {
            a.data("filestyle", (s = new i(this, o)));
            s.constructor();
          }
          if ("string" == typeof t) r = s[t](n);
        }
      });
    if (void 0 !== typeof r) return r;
    else return a;
  };
  e.fn.filestyle.defaults = {
    text: "Choose file",
    htmlIcon: "",
    btnClass: "btn-secondary",
    size: "nr",
    input: !0,
    badge: !1,
    badgeName: "badge-light",
    buttonBefore: !1,
    dragdrop: !0,
    disabled: !1,
    placeholder: "",
    onChange: function () {},
  };
  e.fn.filestyle.noConflict = function () {
    e.fn.filestyle = n;
    return this;
  };
  e(function () {
    e(".filestyle").each(function () {
      var t = e(this),
        i = {
          input: "false" !== t.attr("data-input"),
          htmlIcon: t.attr("data-icon"),
          buttonBefore: "true" === t.attr("data-buttonBefore"),
          disabled: "true" === t.attr("data-disabled"),
          size: t.attr("data-size"),
          text: t.attr("data-text"),
          btnClass: t.attr("data-btnClass"),
          badge: "true" === t.attr("data-badge"),
          dragdrop: "false" === t.attr("data-dragdrop"),
          badgeName: t.attr("data-badgeName"),
          placeholder: t.attr("data-placeholder"),
        };
      t.filestyle(i);
    });
  });
})(window.jQuery);
if ("undefined" == typeof jQuery)
  throw new Error("Bootstrap's JavaScript requires jQuery");
!(function (e) {
  "use strict";
  var t = jQuery.fn.jquery.split(" ")[0].split(".");
  if (
    (t[0] < 2 && t[1] < 9) ||
    (1 == t[0] && 9 == t[1] && t[2] < 1) ||
    t[0] > 3
  )
    throw new Error(
      "Bootstrap's JavaScript requires jQuery version 1.9.1 or higher, but lower than version 4"
    );
})(),
  (function (e) {
    "use strict";
    (e.fn.emulateTransitionEnd = function (t) {
      var i = !1,
        n = this;
      e(this).one("bsTransitionEnd", function () {
        i = !0;
      });
      return (
        setTimeout(function () {
          i || e(n).trigger(e.support.transition.end);
        }, t),
        this
      );
    }),
      e(function () {
        (e.support.transition = (function () {
          var e = document.createElement("bootstrap"),
            t = {
              WebkitTransition: "webkitTransitionEnd",
              MozTransition: "transitionend",
              OTransition: "oTransitionEnd otransitionend",
              transition: "transitionend",
            };
          for (var i in t) if (void 0 !== e.style[i]) return { end: t[i] };
          return !1;
        })()),
          e.support.transition &&
            (e.event.special.bsTransitionEnd = {
              bindType: e.support.transition.end,
              delegateType: e.support.transition.end,
              handle: function (t) {
                if (e(t.target).is(this))
                  return t.handleObj.handler.apply(this, arguments);
              },
            });
      });
  })(jQuery),
  (function (e) {
    "use strict";
    var t = '[data-dismiss="alert"]',
      i = function (i) {
        e(i).on("click", t, this.close);
      };
    (i.VERSION = "3.3.7"),
      (i.TRANSITION_DURATION = 150),
      (i.prototype.close = function (t) {
        function n() {
          s.detach().trigger("closed.bs.alert").remove();
        }
        var r = e(this),
          a = r.attr("data-target");
        a || (a = (a = r.attr("href")) && a.replace(/.*(?=#[^\s]*$)/, ""));
        var s = e("#" === a ? [] : a);
        t && t.preventDefault(),
          s.length || (s = r.closest(".alert")),
          s.trigger((t = e.Event("close.bs.alert"))),
          t.isDefaultPrevented() ||
            (s.removeClass("in"),
            e.support.transition && s.hasClass("fade")
              ? s
                  .one("bsTransitionEnd", n)
                  .emulateTransitionEnd(i.TRANSITION_DURATION)
              : n());
      });
    var n = e.fn.alert;
    (e.fn.alert = function (t) {
      return this.each(function () {
        var n = e(this),
          r = n.data("bs.alert");
        r || n.data("bs.alert", (r = new i(this))),
          "string" == typeof t && r[t].call(n);
      });
    }),
      (e.fn.alert.Constructor = i),
      (e.fn.alert.noConflict = function () {
        return (e.fn.alert = n), this;
      }),
      e(document).on("click.bs.alert.data-api", t, i.prototype.close);
  })(jQuery),
  (function (e) {
    "use strict";
    function t(t) {
      return this.each(function () {
        var n = e(this),
          r = n.data("bs.button"),
          a = "object" == typeof t && t;
        r || n.data("bs.button", (r = new i(this, a))),
          "toggle" == t ? r.toggle() : t && r.setState(t);
      });
    }
    var i = function (t, n) {
      (this.$element = e(t)),
        (this.options = e.extend({}, i.DEFAULTS, n)),
        (this.isLoading = !1);
    };
    (i.VERSION = "3.3.7"),
      (i.DEFAULTS = { loadingText: "loading..." }),
      (i.prototype.setState = function (t) {
        var i = "disabled",
          n = this.$element,
          r = n.is("input") ? "val" : "html",
          a = n.data();
        (t += "Text"),
          null == a.resetText && n.data("resetText", n[r]()),
          setTimeout(
            e.proxy(function () {
              n[r](null == a[t] ? this.options[t] : a[t]),
                "loadingText" == t
                  ? ((this.isLoading = !0),
                    n.addClass(i).attr(i, i).prop(i, !0))
                  : this.isLoading &&
                    ((this.isLoading = !1),
                    n.removeClass(i).removeAttr(i).prop(i, !1));
            }, this),
            0
          );
      }),
      (i.prototype.toggle = function () {
        var e = !0,
          t = this.$element.closest('[data-toggle="buttons"]');
        if (t.length) {
          var i = this.$element.find("input");
          "radio" == i.prop("type")
            ? (i.prop("checked") && (e = !1),
              t.find(".active").removeClass("active"),
              this.$element.addClass("active"))
            : "checkbox" == i.prop("type") &&
              (i.prop("checked") !== this.$element.hasClass("active") &&
                (e = !1),
              this.$element.toggleClass("active")),
            i.prop("checked", this.$element.hasClass("active")),
            e && i.trigger("change");
        } else
          this.$element.attr("aria-pressed", !this.$element.hasClass("active")),
            this.$element.toggleClass("active");
      });
    var n = e.fn.button;
    (e.fn.button = t),
      (e.fn.button.Constructor = i),
      (e.fn.button.noConflict = function () {
        return (e.fn.button = n), this;
      }),
      e(document)
        .on(
          "click.bs.button.data-api",
          '[data-toggle^="button"]',
          function (i) {
            var n = e(i.target).closest(".btn");
            t.call(n, "toggle"),
              e(i.target).is('input[type="radio"], input[type="checkbox"]') ||
                (i.preventDefault(),
                n.is("input,button")
                  ? n.trigger("focus")
                  : n
                      .find("input:visible,button:visible")
                      .first()
                      .trigger("focus"));
          }
        )
        .on(
          "focus.bs.button.data-api blur.bs.button.data-api",
          '[data-toggle^="button"]',
          function (t) {
            e(t.target)
              .closest(".btn")
              .toggleClass("focus", /^focus(in)?$/.test(t.type));
          }
        );
  })(jQuery),
  (function (e) {
    "use strict";
    function t(t) {
      return this.each(function () {
        var n = e(this),
          r = n.data("bs.carousel"),
          a = e.extend({}, i.DEFAULTS, n.data(), "object" == typeof t && t),
          s = "string" == typeof t ? t : a.slide;
        r || n.data("bs.carousel", (r = new i(this, a))),
          "number" == typeof t
            ? r.to(t)
            : s
            ? r[s]()
            : a.interval && r.pause().cycle();
      });
    }
    var i = function (t, i) {
      (this.$element = e(t)),
        (this.$indicators = this.$element.find(".carousel-indicators")),
        (this.options = i),
        (this.paused = null),
        (this.sliding = null),
        (this.interval = null),
        (this.$active = null),
        (this.$items = null),
        this.options.keyboard &&
          this.$element.on("keydown.bs.carousel", e.proxy(this.keydown, this)),
        "hover" == this.options.pause &&
          !("ontouchstart" in document.documentElement) &&
          this.$element
            .on("mouseenter.bs.carousel", e.proxy(this.pause, this))
            .on("mouseleave.bs.carousel", e.proxy(this.cycle, this));
    };
    (i.VERSION = "3.3.7"),
      (i.TRANSITION_DURATION = 600),
      (i.DEFAULTS = { interval: 5e3, pause: "hover", wrap: !0, keyboard: !0 }),
      (i.prototype.keydown = function (e) {
        if (!/input|textarea/i.test(e.target.tagName)) {
          switch (e.which) {
            case 37:
              this.prev();
              break;
            case 39:
              this.next();
              break;
            default:
              return;
          }
          e.preventDefault();
        }
      }),
      (i.prototype.cycle = function (t) {
        return (
          t || (this.paused = !1),
          this.interval && clearInterval(this.interval),
          this.options.interval &&
            !this.paused &&
            (this.interval = setInterval(
              e.proxy(this.next, this),
              this.options.interval
            )),
          this
        );
      }),
      (i.prototype.getItemIndex = function (e) {
        return (
          (this.$items = e.parent().children(".item")),
          this.$items.index(e || this.$active)
        );
      }),
      (i.prototype.getItemForDirection = function (e, t) {
        var i = this.getItemIndex(t);
        if (
          (("prev" == e && 0 === i) ||
            ("next" == e && i == this.$items.length - 1)) &&
          !this.options.wrap
        )
          return t;
        var n = (i + ("prev" == e ? -1 : 1)) % this.$items.length;
        return this.$items.eq(n);
      }),
      (i.prototype.to = function (e) {
        var t = this,
          i = this.getItemIndex(
            (this.$active = this.$element.find(".item.active"))
          );
        if (!(e > this.$items.length - 1 || e < 0))
          return this.sliding
            ? this.$element.one("slid.bs.carousel", function () {
                t.to(e);
              })
            : i == e
            ? this.pause().cycle()
            : this.slide(e > i ? "next" : "prev", this.$items.eq(e));
      }),
      (i.prototype.pause = function (t) {
        return (
          t || (this.paused = !0),
          this.$element.find(".next, .prev").length &&
            e.support.transition &&
            (this.$element.trigger(e.support.transition.end), this.cycle(!0)),
          (this.interval = clearInterval(this.interval)),
          this
        );
      }),
      (i.prototype.next = function () {
        if (!this.sliding) return this.slide("next");
      }),
      (i.prototype.prev = function () {
        if (!this.sliding) return this.slide("prev");
      }),
      (i.prototype.slide = function (t, n) {
        var r = this.$element.find(".item.active"),
          a = n || this.getItemForDirection(t, r),
          s = this.interval,
          o = "next" == t ? "left" : "right",
          l = this;
        if (a.hasClass("active")) return (this.sliding = !1);
        var c = a[0],
          h = e.Event("slide.bs.carousel", { relatedTarget: c, direction: o });
        if ((this.$element.trigger(h), !h.isDefaultPrevented())) {
          if (
            ((this.sliding = !0), s && this.pause(), this.$indicators.length)
          ) {
            this.$indicators.find(".active").removeClass("active");
            var u = e(this.$indicators.children()[this.getItemIndex(a)]);
            u && u.addClass("active");
          }
          var d = e.Event("slid.bs.carousel", {
            relatedTarget: c,
            direction: o,
          });
          return (
            e.support.transition && this.$element.hasClass("slide")
              ? (a.addClass(t),
                a[0].offsetWidth,
                r.addClass(o),
                a.addClass(o),
                r
                  .one("bsTransitionEnd", function () {
                    a.removeClass([t, o].join(" ")).addClass("active"),
                      r.removeClass(["active", o].join(" ")),
                      (l.sliding = !1),
                      setTimeout(function () {
                        l.$element.trigger(d);
                      }, 0);
                  })
                  .emulateTransitionEnd(i.TRANSITION_DURATION))
              : (r.removeClass("active"),
                a.addClass("active"),
                (this.sliding = !1),
                this.$element.trigger(d)),
            s && this.cycle(),
            this
          );
        }
      });
    var n = e.fn.carousel;
    (e.fn.carousel = t),
      (e.fn.carousel.Constructor = i),
      (e.fn.carousel.noConflict = function () {
        return (e.fn.carousel = n), this;
      });
    var r = function (i) {
      var n,
        r = e(this),
        a = e(
          r.attr("data-target") ||
            ((n = r.attr("href")) && n.replace(/.*(?=#[^\s]+$)/, ""))
        );
      if (a.hasClass("carousel")) {
        var s = e.extend({}, a.data(), r.data()),
          o = r.attr("data-slide-to");
        o && (s.interval = !1),
          t.call(a, s),
          o && a.data("bs.carousel").to(o),
          i.preventDefault();
      }
    };
    e(document)
      .on("click.bs.carousel.data-api", "[data-slide]", r)
      .on("click.bs.carousel.data-api", "[data-slide-to]", r),
      e(window).on("load", function () {
        e('[data-ride="carousel"]').each(function () {
          var i = e(this);
          t.call(i, i.data());
        });
      });
  })(jQuery),
  (function (e) {
    "use strict";
    function t(t) {
      var i,
        n =
          t.attr("data-target") ||
          ((i = t.attr("href")) && i.replace(/.*(?=#[^\s]+$)/, ""));
      return e(n);
    }
    function i(t) {
      return this.each(function () {
        var i = e(this),
          r = i.data("bs.collapse"),
          a = e.extend({}, n.DEFAULTS, i.data(), "object" == typeof t && t);
        !r && a.toggle && /show|hide/.test(t) && (a.toggle = !1),
          r || i.data("bs.collapse", (r = new n(this, a))),
          "string" == typeof t && r[t]();
      });
    }
    var n = function (t, i) {
      (this.$element = e(t)),
        (this.options = e.extend({}, n.DEFAULTS, i)),
        (this.$trigger = e(
          '[data-toggle="collapse"][href="#' +
            t.id +
            '"],[data-toggle="collapse"][data-target="#' +
            t.id +
            '"]'
        )),
        (this.transitioning = null),
        this.options.parent
          ? (this.$parent = this.getParent())
          : this.addAriaAndCollapsedClass(this.$element, this.$trigger),
        this.options.toggle && this.toggle();
    };
    (n.VERSION = "3.3.7"),
      (n.TRANSITION_DURATION = 350),
      (n.DEFAULTS = { toggle: !0 }),
      (n.prototype.dimension = function () {
        return this.$element.hasClass("width") ? "width" : "height";
      }),
      (n.prototype.show = function () {
        if (!this.transitioning && !this.$element.hasClass("in")) {
          var t,
            r =
              this.$parent &&
              this.$parent.children(".panel").children(".in, .collapsing");
          if (
            !(
              r &&
              r.length &&
              ((t = r.data("bs.collapse")), t && t.transitioning)
            )
          ) {
            var a = e.Event("show.bs.collapse");
            if ((this.$element.trigger(a), !a.isDefaultPrevented())) {
              r &&
                r.length &&
                (i.call(r, "hide"), t || r.data("bs.collapse", null));
              var s = this.dimension();
              this.$element
                .removeClass("collapse")
                .addClass("collapsing")
                [s](0)
                .attr("aria-expanded", !0),
                this.$trigger
                  .removeClass("collapsed")
                  .attr("aria-expanded", !0),
                (this.transitioning = 1);
              var o = function () {
                this.$element
                  .removeClass("collapsing")
                  .addClass("collapse in")
                  [s](""),
                  (this.transitioning = 0),
                  this.$element.trigger("shown.bs.collapse");
              };
              if (!e.support.transition) return o.call(this);
              var l = e.camelCase(["scroll", s].join("-"));
              this.$element
                .one("bsTransitionEnd", e.proxy(o, this))
                .emulateTransitionEnd(n.TRANSITION_DURATION)
                [s](this.$element[0][l]);
            }
          }
        }
      }),
      (n.prototype.hide = function () {
        if (!this.transitioning && this.$element.hasClass("in")) {
          var t = e.Event("hide.bs.collapse");
          if ((this.$element.trigger(t), !t.isDefaultPrevented())) {
            var i = this.dimension();
            this.$element[i](this.$element[i]())[0].offsetHeight,
              this.$element
                .addClass("collapsing")
                .removeClass("collapse in")
                .attr("aria-expanded", !1),
              this.$trigger.addClass("collapsed").attr("aria-expanded", !1),
              (this.transitioning = 1);
            var r = function () {
              (this.transitioning = 0),
                this.$element
                  .removeClass("collapsing")
                  .addClass("collapse")
                  .trigger("hidden.bs.collapse");
            };
            return e.support.transition
              ? void this.$element[i](0)
                  .one("bsTransitionEnd", e.proxy(r, this))
                  .emulateTransitionEnd(n.TRANSITION_DURATION)
              : r.call(this);
          }
        }
      }),
      (n.prototype.toggle = function () {
        this[this.$element.hasClass("in") ? "hide" : "show"]();
      }),
      (n.prototype.getParent = function () {
        return e(this.options.parent)
          .find(
            '[data-toggle="collapse"][data-parent="' +
              this.options.parent +
              '"]'
          )
          .each(
            e.proxy(function (i, n) {
              var r = e(n);
              this.addAriaAndCollapsedClass(t(r), r);
            }, this)
          )
          .end();
      }),
      (n.prototype.addAriaAndCollapsedClass = function (e, t) {
        var i = e.hasClass("in");
        e.attr("aria-expanded", i),
          t.toggleClass("collapsed", !i).attr("aria-expanded", i);
      });
    var r = e.fn.collapse;
    (e.fn.collapse = i),
      (e.fn.collapse.Constructor = n),
      (e.fn.collapse.noConflict = function () {
        return (e.fn.collapse = r), this;
      }),
      e(document).on(
        "click.bs.collapse.data-api",
        '[data-toggle="collapse"]',
        function (n) {
          var r = e(this);
          r.attr("data-target") || n.preventDefault();
          var a = t(r),
            s = a.data("bs.collapse") ? "toggle" : r.data();
          i.call(a, s);
        }
      );
  })(jQuery),
  (function (e) {
    "use strict";
    function t(t) {
      var i = t.attr("data-target");
      i ||
        (i =
          (i = t.attr("href")) &&
          /#[A-Za-z]/.test(i) &&
          i.replace(/.*(?=#[^\s]*$)/, ""));
      var n = i && e(i);
      return n && n.length ? n : t.parent();
    }
    function i(i) {
      (i && 3 === i.which) ||
        (e(n).remove(),
        e(r).each(function () {
          var n = e(this),
            r = t(n),
            a = { relatedTarget: this };
          r.hasClass("open") &&
            ((i &&
              "click" == i.type &&
              /input|textarea/i.test(i.target.tagName) &&
              e.contains(r[0], i.target)) ||
              (r.trigger((i = e.Event("hide.bs.dropdown", a))),
              i.isDefaultPrevented() ||
                (n.attr("aria-expanded", "false"),
                r
                  .removeClass("open")
                  .trigger(e.Event("hidden.bs.dropdown", a)))));
        }));
    }
    var n = ".dropdown-backdrop",
      r = '[data-toggle="dropdown"]',
      a = function (t) {
        e(t).on("click.bs.dropdown", this.toggle);
      };
    (a.VERSION = "3.3.7"),
      (a.prototype.toggle = function (n) {
        var r = e(this);
        if (!r.is(".disabled, :disabled")) {
          var a = t(r),
            s = a.hasClass("open");
          if ((i(), !s)) {
            "ontouchstart" in document.documentElement &&
              !a.closest(".navbar-nav").length &&
              e(document.createElement("div"))
                .addClass("dropdown-backdrop")
                .insertAfter(e(this))
                .on("click", i);
            var o = { relatedTarget: this };
            if (
              (a.trigger((n = e.Event("show.bs.dropdown", o))),
              n.isDefaultPrevented())
            )
              return;
            r.trigger("focus").attr("aria-expanded", "true"),
              a.toggleClass("open").trigger(e.Event("shown.bs.dropdown", o));
          }
          return !1;
        }
      }),
      (a.prototype.keydown = function (i) {
        if (
          /(38|40|27|32)/.test(i.which) &&
          !/input|textarea/i.test(i.target.tagName)
        ) {
          var n = e(this);
          if (
            (i.preventDefault(),
            i.stopPropagation(),
            !n.is(".disabled, :disabled"))
          ) {
            var a = t(n),
              s = a.hasClass("open");
            if ((!s && 27 != i.which) || (s && 27 == i.which))
              return (
                27 == i.which && a.find(r).trigger("focus"), n.trigger("click")
              );
            var o = a.find(".dropdown-menu li:not(.disabled):visible a");
            if (o.length) {
              var l = o.index(i.target);
              38 == i.which && l > 0 && l--,
                40 == i.which && l < o.length - 1 && l++,
                ~l || (l = 0),
                o.eq(l).trigger("focus");
            }
          }
        }
      });
    var s = e.fn.dropdown;
    (e.fn.dropdown = function (t) {
      return this.each(function () {
        var i = e(this),
          n = i.data("bs.dropdown");
        n || i.data("bs.dropdown", (n = new a(this))),
          "string" == typeof t && n[t].call(i);
      });
    }),
      (e.fn.dropdown.Constructor = a),
      (e.fn.dropdown.noConflict = function () {
        return (e.fn.dropdown = s), this;
      }),
      e(document)
        .on("click.bs.dropdown.data-api", i)
        .on("click.bs.dropdown.data-api", ".dropdown form", function (e) {
          e.stopPropagation();
        })
        .on("click.bs.dropdown.data-api", r, a.prototype.toggle)
        .on("keydown.bs.dropdown.data-api", r, a.prototype.keydown)
        .on(
          "keydown.bs.dropdown.data-api",
          ".dropdown-menu",
          a.prototype.keydown
        );
  })(jQuery),
  (function (e) {
    "use strict";
    function t(t, n) {
      return this.each(function () {
        var r = e(this),
          a = r.data("bs.modal"),
          s = e.extend({}, i.DEFAULTS, r.data(), "object" == typeof t && t);
        a || r.data("bs.modal", (a = new i(this, s))),
          "string" == typeof t ? a[t](n) : s.show && a.show(n);
      });
    }
    var i = function (t, i) {
      (this.options = i),
        (this.$body = e(document.body)),
        (this.$element = e(t)),
        (this.$dialog = this.$element.find(".modal-dialog")),
        (this.$backdrop = null),
        (this.isShown = null),
        (this.originalBodyPad = null),
        (this.scrollbarWidth = 0),
        (this.ignoreBackdropClick = !1),
        this.options.remote &&
          this.$element.find(".modal-content").load(
            this.options.remote,
            e.proxy(function () {
              this.$element.trigger("loaded.bs.modal");
            }, this)
          );
    };
    (i.VERSION = "3.3.7"),
      (i.TRANSITION_DURATION = 300),
      (i.BACKDROP_TRANSITION_DURATION = 150),
      (i.DEFAULTS = { backdrop: !0, keyboard: !0, show: !0 }),
      (i.prototype.toggle = function (e) {
        return this.isShown ? this.hide() : this.show(e);
      }),
      (i.prototype.show = function (t) {
        var n = this,
          r = e.Event("show.bs.modal", { relatedTarget: t });
        this.$element.trigger(r),
          this.isShown ||
            r.isDefaultPrevented() ||
            ((this.isShown = !0),
            this.checkScrollbar(),
            this.setScrollbar(),
            this.$body.addClass("modal-open"),
            this.escape(),
            this.resize(),
            this.$element.on(
              "click.dismiss.bs.modal",
              '[data-dismiss="modal"]',
              e.proxy(this.hide, this)
            ),
            this.$dialog.on("mousedown.dismiss.bs.modal", function () {
              n.$element.one("mouseup.dismiss.bs.modal", function (t) {
                e(t.target).is(n.$element) && (n.ignoreBackdropClick = !0);
              });
            }),
            this.backdrop(function () {
              var r = e.support.transition && n.$element.hasClass("fade");
              n.$element.parent().length || n.$element.appendTo(n.$body),
                n.$element.show().scrollTop(0),
                n.adjustDialog(),
                r && n.$element[0].offsetWidth,
                n.$element.addClass("in"),
                n.enforceFocus();
              var a = e.Event("shown.bs.modal", { relatedTarget: t });
              r
                ? n.$dialog
                    .one("bsTransitionEnd", function () {
                      n.$element.trigger("focus").trigger(a);
                    })
                    .emulateTransitionEnd(i.TRANSITION_DURATION)
                : n.$element.trigger("focus").trigger(a);
            }));
      }),
      (i.prototype.hide = function (t) {
        t && t.preventDefault(),
          (t = e.Event("hide.bs.modal")),
          this.$element.trigger(t),
          this.isShown &&
            !t.isDefaultPrevented() &&
            ((this.isShown = !1),
            this.escape(),
            this.resize(),
            e(document).off("focusin.bs.modal"),
            this.$element
              .removeClass("in")
              .off("click.dismiss.bs.modal")
              .off("mouseup.dismiss.bs.modal"),
            this.$dialog.off("mousedown.dismiss.bs.modal"),
            e.support.transition && this.$element.hasClass("fade")
              ? this.$element
                  .one("bsTransitionEnd", e.proxy(this.hideModal, this))
                  .emulateTransitionEnd(i.TRANSITION_DURATION)
              : this.hideModal());
      }),
      (i.prototype.enforceFocus = function () {
        e(document)
          .off("focusin.bs.modal")
          .on(
            "focusin.bs.modal",
            e.proxy(function (e) {
              document === e.target ||
                this.$element[0] === e.target ||
                this.$element.has(e.target).length ||
                this.$element.trigger("focus");
            }, this)
          );
      }),
      (i.prototype.escape = function () {
        this.isShown && this.options.keyboard
          ? this.$element.on(
              "keydown.dismiss.bs.modal",
              e.proxy(function (e) {
                27 == e.which && this.hide();
              }, this)
            )
          : this.isShown || this.$element.off("keydown.dismiss.bs.modal");
      }),
      (i.prototype.resize = function () {
        this.isShown
          ? e(window).on("resize.bs.modal", e.proxy(this.handleUpdate, this))
          : e(window).off("resize.bs.modal");
      }),
      (i.prototype.hideModal = function () {
        var e = this;
        this.$element.hide(),
          this.backdrop(function () {
            e.$body.removeClass("modal-open"),
              e.resetAdjustments(),
              e.resetScrollbar(),
              e.$element.trigger("hidden.bs.modal");
          });
      }),
      (i.prototype.removeBackdrop = function () {
        this.$backdrop && this.$backdrop.remove(), (this.$backdrop = null);
      }),
      (i.prototype.backdrop = function (t) {
        var n = this,
          r = this.$element.hasClass("fade") ? "fade" : "";
        if (this.isShown && this.options.backdrop) {
          var a = e.support.transition && r;
          if (
            ((this.$backdrop = e(document.createElement("div"))
              .addClass("modal-backdrop " + r)
              .appendTo(this.$body)),
            this.$element.on(
              "click.dismiss.bs.modal",
              e.proxy(function (e) {
                return this.ignoreBackdropClick
                  ? void (this.ignoreBackdropClick = !1)
                  : void (
                      e.target === e.currentTarget &&
                      ("static" == this.options.backdrop
                        ? this.$element[0].focus()
                        : this.hide())
                    );
              }, this)
            ),
            a && this.$backdrop[0].offsetWidth,
            this.$backdrop.addClass("in"),
            !t)
          )
            return;
          a
            ? this.$backdrop
                .one("bsTransitionEnd", t)
                .emulateTransitionEnd(i.BACKDROP_TRANSITION_DURATION)
            : t();
        } else if (!this.isShown && this.$backdrop) {
          this.$backdrop.removeClass("in");
          var s = function () {
            n.removeBackdrop(), t && t();
          };
          e.support.transition && this.$element.hasClass("fade")
            ? this.$backdrop
                .one("bsTransitionEnd", s)
                .emulateTransitionEnd(i.BACKDROP_TRANSITION_DURATION)
            : s();
        } else t && t();
      }),
      (i.prototype.handleUpdate = function () {
        this.adjustDialog();
      }),
      (i.prototype.adjustDialog = function () {
        var e =
          this.$element[0].scrollHeight > document.documentElement.clientHeight;
        this.$element.css({
          paddingLeft: !this.bodyIsOverflowing && e ? this.scrollbarWidth : "",
          paddingRight: this.bodyIsOverflowing && !e ? this.scrollbarWidth : "",
        });
      }),
      (i.prototype.resetAdjustments = function () {
        this.$element.css({ paddingLeft: "", paddingRight: "" });
      }),
      (i.prototype.checkScrollbar = function () {
        var e = window.innerWidth;
        if (!e) {
          var t = document.documentElement.getBoundingClientRect();
          e = t.right - Math.abs(t.left);
        }
        (this.bodyIsOverflowing = document.body.clientWidth < e),
          (this.scrollbarWidth = this.measureScrollbar());
      }),
      (i.prototype.setScrollbar = function () {
        var e = parseInt(this.$body.css("padding-right") || 0, 10);
        (this.originalBodyPad = document.body.style.paddingRight || ""),
          this.bodyIsOverflowing &&
            this.$body.css("padding-right", e + this.scrollbarWidth);
      }),
      (i.prototype.resetScrollbar = function () {
        this.$body.css("padding-right", this.originalBodyPad);
      }),
      (i.prototype.measureScrollbar = function () {
        var e = document.createElement("div");
        (e.className = "modal-scrollbar-measure"), this.$body.append(e);
        var t = e.offsetWidth - e.clientWidth;
        return this.$body[0].removeChild(e), t;
      });
    var n = e.fn.modal;
    (e.fn.modal = t),
      (e.fn.modal.Constructor = i),
      (e.fn.modal.noConflict = function () {
        return (e.fn.modal = n), this;
      }),
      e(document).on(
        "click.bs.modal.data-api",
        '[data-toggle="modal"]',
        function (i) {
          var n = e(this),
            r = n.attr("href"),
            a = e(
              n.attr("data-target") || (r && r.replace(/.*(?=#[^\s]+$)/, ""))
            ),
            s = a.data("bs.modal")
              ? "toggle"
              : e.extend({ remote: !/#/.test(r) && r }, a.data(), n.data());
          n.is("a") && i.preventDefault(),
            a.one("show.bs.modal", function (e) {
              e.isDefaultPrevented() ||
                a.one("hidden.bs.modal", function () {
                  n.is(":visible") && n.trigger("focus");
                });
            }),
            t.call(a, s, this);
        }
      );
  })(jQuery),
  (function (e) {
    "use strict";
    var t = function (e, t) {
      (this.type = null),
        (this.options = null),
        (this.enabled = null),
        (this.timeout = null),
        (this.hoverState = null),
        (this.$element = null),
        (this.inState = null),
        this.init("tooltip", e, t);
    };
    (t.VERSION = "3.3.7"),
      (t.TRANSITION_DURATION = 150),
      (t.DEFAULTS = {
        animation: !0,
        placement: "top",
        selector: !1,
        template:
          '<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',
        trigger: "hover focus",
        title: "",
        delay: 0,
        html: !1,
        container: !1,
        viewport: { selector: "body", padding: 0 },
      }),
      (t.prototype.init = function (t, i, n) {
        if (
          ((this.enabled = !0),
          (this.type = t),
          (this.$element = e(i)),
          (this.options = this.getOptions(n)),
          (this.$viewport =
            this.options.viewport &&
            e(
              e.isFunction(this.options.viewport)
                ? this.options.viewport.call(this, this.$element)
                : this.options.viewport.selector || this.options.viewport
            )),
          (this.inState = { click: !1, hover: !1, focus: !1 }),
          this.$element[0] instanceof document.constructor &&
            !this.options.selector)
        )
          throw new Error(
            "`selector` option must be specified when initializing " +
              this.type +
              " on the window.document object!"
          );
        for (var r = this.options.trigger.split(" "), a = r.length; a--; ) {
          var s = r[a];
          if ("click" == s)
            this.$element.on(
              "click." + this.type,
              this.options.selector,
              e.proxy(this.toggle, this)
            );
          else if ("manual" != s) {
            var o = "hover" == s ? "mouseenter" : "focusin",
              l = "hover" == s ? "mouseleave" : "focusout";
            this.$element.on(
              o + "." + this.type,
              this.options.selector,
              e.proxy(this.enter, this)
            ),
              this.$element.on(
                l + "." + this.type,
                this.options.selector,
                e.proxy(this.leave, this)
              );
          }
        }
        this.options.selector
          ? (this._options = e.extend({}, this.options, {
              trigger: "manual",
              selector: "",
            }))
          : this.fixTitle();
      }),
      (t.prototype.getDefaults = function () {
        return t.DEFAULTS;
      }),
      (t.prototype.getOptions = function (t) {
        return (
          (t = e.extend({}, this.getDefaults(), this.$element.data(), t))
            .delay &&
            "number" == typeof t.delay &&
            (t.delay = { show: t.delay, hide: t.delay }),
          t
        );
      }),
      (t.prototype.getDelegateOptions = function () {
        var t = {},
          i = this.getDefaults();
        return (
          this._options &&
            e.each(this._options, function (e, n) {
              i[e] != n && (t[e] = n);
            }),
          t
        );
      }),
      (t.prototype.enter = function (t) {
        var i =
          t instanceof this.constructor
            ? t
            : e(t.currentTarget).data("bs." + this.type);
        return (
          i ||
            ((i = new this.constructor(
              t.currentTarget,
              this.getDelegateOptions()
            )),
            e(t.currentTarget).data("bs." + this.type, i)),
          t instanceof e.Event &&
            (i.inState["focusin" == t.type ? "focus" : "hover"] = !0),
          i.tip().hasClass("in") || "in" == i.hoverState
            ? void (i.hoverState = "in")
            : (clearTimeout(i.timeout),
              (i.hoverState = "in"),
              i.options.delay && i.options.delay.show
                ? void (i.timeout = setTimeout(function () {
                    "in" == i.hoverState && i.show();
                  }, i.options.delay.show))
                : i.show())
        );
      }),
      (t.prototype.isInStateTrue = function () {
        for (var e in this.inState) if (this.inState[e]) return !0;
        return !1;
      }),
      (t.prototype.leave = function (t) {
        var i =
          t instanceof this.constructor
            ? t
            : e(t.currentTarget).data("bs." + this.type);
        if (
          (i ||
            ((i = new this.constructor(
              t.currentTarget,
              this.getDelegateOptions()
            )),
            e(t.currentTarget).data("bs." + this.type, i)),
          t instanceof e.Event &&
            (i.inState["focusout" == t.type ? "focus" : "hover"] = !1),
          !i.isInStateTrue())
        )
          return (
            clearTimeout(i.timeout),
            (i.hoverState = "out"),
            i.options.delay && i.options.delay.hide
              ? void (i.timeout = setTimeout(function () {
                  "out" == i.hoverState && i.hide();
                }, i.options.delay.hide))
              : i.hide()
          );
      }),
      (t.prototype.show = function () {
        var i = e.Event("show.bs." + this.type);
        if (this.hasContent() && this.enabled) {
          this.$element.trigger(i);
          var n = e.contains(
            this.$element[0].ownerDocument.documentElement,
            this.$element[0]
          );
          if (i.isDefaultPrevented() || !n) return;
          var r = this,
            a = this.tip(),
            s = this.getUID(this.type);
          this.setContent(),
            a.attr("id", s),
            this.$element.attr("aria-describedby", s),
            this.options.animation && a.addClass("fade");
          var o =
              "function" == typeof this.options.placement
                ? this.options.placement.call(this, a[0], this.$element[0])
                : this.options.placement,
            l = /\s?auto?\s?/i,
            c = l.test(o);
          c && (o = o.replace(l, "") || "top"),
            a
              .detach()
              .css({ top: 0, left: 0, display: "block" })
              .addClass(o)
              .data("bs." + this.type, this),
            this.options.container
              ? a.appendTo(this.options.container)
              : a.insertAfter(this.$element),
            this.$element.trigger("inserted.bs." + this.type);
          var h = this.getPosition(),
            u = a[0].offsetWidth,
            d = a[0].offsetHeight;
          if (c) {
            var f = o,
              p = this.getPosition(this.$viewport);
            (o =
              "bottom" == o && h.bottom + d > p.bottom
                ? "top"
                : "top" == o && h.top - d < p.top
                ? "bottom"
                : "right" == o && h.right + u > p.width
                ? "left"
                : "left" == o && h.left - u < p.left
                ? "right"
                : o),
              a.removeClass(f).addClass(o);
          }
          var g = this.getCalculatedOffset(o, h, u, d);
          this.applyPlacement(g, o);
          var m = function () {
            var e = r.hoverState;
            r.$element.trigger("shown.bs." + r.type),
              (r.hoverState = null),
              "out" == e && r.leave(r);
          };
          e.support.transition && this.$tip.hasClass("fade")
            ? a
                .one("bsTransitionEnd", m)
                .emulateTransitionEnd(t.TRANSITION_DURATION)
            : m();
        }
      }),
      (t.prototype.applyPlacement = function (t, i) {
        var n = this.tip(),
          r = n[0].offsetWidth,
          a = n[0].offsetHeight,
          s = parseInt(n.css("margin-top"), 10),
          o = parseInt(n.css("margin-left"), 10);
        isNaN(s) && (s = 0),
          isNaN(o) && (o = 0),
          (t.top += s),
          (t.left += o),
          e.offset.setOffset(
            n[0],
            e.extend(
              {
                using: function (e) {
                  n.css({ top: Math.round(e.top), left: Math.round(e.left) });
                },
              },
              t
            ),
            0
          ),
          n.addClass("in");
        var l = n[0].offsetWidth,
          c = n[0].offsetHeight;
        "top" == i && c != a && (t.top = t.top + a - c);
        var h = this.getViewportAdjustedDelta(i, t, l, c);
        h.left ? (t.left += h.left) : (t.top += h.top);
        var u = /top|bottom/.test(i),
          d = u ? 2 * h.left - r + l : 2 * h.top - a + c,
          f = u ? "offsetWidth" : "offsetHeight";
        n.offset(t), this.replaceArrow(d, n[0][f], u);
      }),
      (t.prototype.replaceArrow = function (e, t, i) {
        this.arrow()
          .css(i ? "left" : "top", 50 * (1 - e / t) + "%")
          .css(i ? "top" : "left", "");
      }),
      (t.prototype.setContent = function () {
        var e = this.tip(),
          t = this.getTitle();
        e.find(".tooltip-inner")[this.options.html ? "html" : "text"](t),
          e.removeClass("fade in top bottom left right");
      }),
      (t.prototype.hide = function (i) {
        function n() {
          "in" != r.hoverState && a.detach(),
            r.$element &&
              r.$element
                .removeAttr("aria-describedby")
                .trigger("hidden.bs." + r.type),
            i && i();
        }
        var r = this,
          a = e(this.$tip),
          s = e.Event("hide.bs." + this.type);
        if ((this.$element.trigger(s), !s.isDefaultPrevented()))
          return (
            a.removeClass("in"),
            e.support.transition && a.hasClass("fade")
              ? a
                  .one("bsTransitionEnd", n)
                  .emulateTransitionEnd(t.TRANSITION_DURATION)
              : n(),
            (this.hoverState = null),
            this
          );
      }),
      (t.prototype.fixTitle = function () {
        var e = this.$element;
        (e.attr("title") || "string" != typeof e.attr("data-original-title")) &&
          e
            .attr("data-original-title", e.attr("title") || "")
            .attr("title", "");
      }),
      (t.prototype.hasContent = function () {
        return this.getTitle();
      }),
      (t.prototype.getPosition = function (t) {
        var i = (t = t || this.$element)[0],
          n = "BODY" == i.tagName,
          r = i.getBoundingClientRect();
        null == r.width &&
          (r = e.extend({}, r, {
            width: r.right - r.left,
            height: r.bottom - r.top,
          }));
        var a = window.SVGElement && i instanceof window.SVGElement,
          s = n ? { top: 0, left: 0 } : a ? null : t.offset(),
          o = {
            scroll: n
              ? document.documentElement.scrollTop || document.body.scrollTop
              : t.scrollTop(),
          },
          l = n
            ? { width: e(window).width(), height: e(window).height() }
            : null;
        return e.extend({}, r, o, l, s);
      }),
      (t.prototype.getCalculatedOffset = function (e, t, i, n) {
        return "bottom" == e
          ? { top: t.top + t.height, left: t.left + t.width / 2 - i / 2 }
          : "top" == e
          ? { top: t.top - n, left: t.left + t.width / 2 - i / 2 }
          : "left" == e
          ? { top: t.top + t.height / 2 - n / 2, left: t.left - i }
          : { top: t.top + t.height / 2 - n / 2, left: t.left + t.width };
      }),
      (t.prototype.getViewportAdjustedDelta = function (e, t, i, n) {
        var r = { top: 0, left: 0 };
        if (!this.$viewport) return r;
        var a = (this.options.viewport && this.options.viewport.padding) || 0,
          s = this.getPosition(this.$viewport);
        if (/right|left/.test(e)) {
          var o = t.top - a - s.scroll,
            l = t.top + a - s.scroll + n;
          o < s.top
            ? (r.top = s.top - o)
            : l > s.top + s.height && (r.top = s.top + s.height - l);
        } else {
          var c = t.left - a,
            h = t.left + a + i;
          c < s.left
            ? (r.left = s.left - c)
            : h > s.right && (r.left = s.left + s.width - h);
        }
        return r;
      }),
      (t.prototype.getTitle = function () {
        var e = this.$element,
          t = this.options;
        return (
          e.attr("data-original-title") ||
          ("function" == typeof t.title ? t.title.call(e[0]) : t.title)
        );
      }),
      (t.prototype.getUID = function (e) {
        do {
          e += ~~(1e6 * Math.random());
        } while (document.getElementById(e));
        return e;
      }),
      (t.prototype.tip = function () {
        if (
          !this.$tip &&
          ((this.$tip = e(this.options.template)), 1 != this.$tip.length)
        )
          throw new Error(
            this.type +
              " `template` option must consist of exactly 1 top-level element!"
          );
        return this.$tip;
      }),
      (t.prototype.arrow = function () {
        return (this.$arrow = this.$arrow || this.tip().find(".tooltip-arrow"));
      }),
      (t.prototype.enable = function () {
        this.enabled = !0;
      }),
      (t.prototype.disable = function () {
        this.enabled = !1;
      }),
      (t.prototype.toggleEnabled = function () {
        this.enabled = !this.enabled;
      }),
      (t.prototype.toggle = function (t) {
        var i = this;
        t &&
          ((i = e(t.currentTarget).data("bs." + this.type)) ||
            ((i = new this.constructor(
              t.currentTarget,
              this.getDelegateOptions()
            )),
            e(t.currentTarget).data("bs." + this.type, i))),
          t
            ? ((i.inState.click = !i.inState.click),
              i.isInStateTrue() ? i.enter(i) : i.leave(i))
            : i.tip().hasClass("in")
            ? i.leave(i)
            : i.enter(i);
      }),
      (t.prototype.destroy = function () {
        var e = this;
        clearTimeout(this.timeout),
          this.hide(function () {
            e.$element.off("." + e.type).removeData("bs." + e.type),
              e.$tip && e.$tip.detach(),
              (e.$tip = null),
              (e.$arrow = null),
              (e.$viewport = null),
              (e.$element = null);
          });
      });
    var i = e.fn.tooltip;
    (e.fn.tooltip = function (i) {
      return this.each(function () {
        var n = e(this),
          r = n.data("bs.tooltip"),
          a = "object" == typeof i && i;
        (!r && /destroy|hide/.test(i)) ||
          (r || n.data("bs.tooltip", (r = new t(this, a))),
          "string" == typeof i && r[i]());
      });
    }),
      (e.fn.tooltip.Constructor = t),
      (e.fn.tooltip.noConflict = function () {
        return (e.fn.tooltip = i), this;
      });
  })(jQuery),
  (function (e) {
    "use strict";
    var t = function (e, t) {
      this.init("popover", e, t);
    };
    if (!e.fn.tooltip) throw new Error("Popover requires tooltip.js");
    (t.VERSION = "3.3.7"),
      (t.DEFAULTS = e.extend({}, e.fn.tooltip.Constructor.DEFAULTS, {
        placement: "right",
        trigger: "click",
        content: "",
        template:
          '<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>',
      })),
      ((t.prototype = e.extend(
        {},
        e.fn.tooltip.Constructor.prototype
      )).constructor = t),
      (t.prototype.getDefaults = function () {
        return t.DEFAULTS;
      }),
      (t.prototype.setContent = function () {
        var e = this.tip(),
          t = this.getTitle(),
          i = this.getContent();
        e.find(".popover-title")[this.options.html ? "html" : "text"](t),
          e
            .find(".popover-content")
            .children()
            .detach()
            .end()
            [
              this.options.html
                ? "string" == typeof i
                  ? "html"
                  : "append"
                : "text"
            ](i),
          e.removeClass("fade top bottom left right in"),
          e.find(".popover-title").html() || e.find(".popover-title").hide();
      }),
      (t.prototype.hasContent = function () {
        return this.getTitle() || this.getContent();
      }),
      (t.prototype.getContent = function () {
        var e = this.$element,
          t = this.options;
        return (
          e.attr("data-content") ||
          ("function" == typeof t.content ? t.content.call(e[0]) : t.content)
        );
      }),
      (t.prototype.arrow = function () {
        return (this.$arrow = this.$arrow || this.tip().find(".arrow"));
      });
    var i = e.fn.popover;
    (e.fn.popover = function (i) {
      return this.each(function () {
        var n = e(this),
          r = n.data("bs.popover"),
          a = "object" == typeof i && i;
        (!r && /destroy|hide/.test(i)) ||
          (r || n.data("bs.popover", (r = new t(this, a))),
          "string" == typeof i && r[i]());
      });
    }),
      (e.fn.popover.Constructor = t),
      (e.fn.popover.noConflict = function () {
        return (e.fn.popover = i), this;
      });
  })(jQuery),
  (function (e) {
    "use strict";
    function t(i, n) {
      (this.$body = e(document.body)),
        (this.$scrollElement = e(e(i).is(document.body) ? window : i)),
        (this.options = e.extend({}, t.DEFAULTS, n)),
        (this.selector = (this.options.target || "") + " .nav li > a"),
        (this.offsets = []),
        (this.targets = []),
        (this.activeTarget = null),
        (this.scrollHeight = 0),
        this.$scrollElement.on(
          "scroll.bs.scrollspy",
          e.proxy(this.process, this)
        ),
        this.refresh(),
        this.process();
    }
    function i(i) {
      return this.each(function () {
        var n = e(this),
          r = n.data("bs.scrollspy"),
          a = "object" == typeof i && i;
        r || n.data("bs.scrollspy", (r = new t(this, a))),
          "string" == typeof i && r[i]();
      });
    }
    (t.VERSION = "3.3.7"),
      (t.DEFAULTS = { offset: 10 }),
      (t.prototype.getScrollHeight = function () {
        return (
          this.$scrollElement[0].scrollHeight ||
          Math.max(
            this.$body[0].scrollHeight,
            document.documentElement.scrollHeight
          )
        );
      }),
      (t.prototype.refresh = function () {
        var t = this,
          i = "offset",
          n = 0;
        (this.offsets = []),
          (this.targets = []),
          (this.scrollHeight = this.getScrollHeight()),
          e.isWindow(this.$scrollElement[0]) ||
            ((i = "position"), (n = this.$scrollElement.scrollTop())),
          this.$body
            .find(this.selector)
            .map(function () {
              var t = e(this),
                r = t.data("target") || t.attr("href"),
                a = /^#./.test(r) && e(r);
              return (
                (a && a.length && a.is(":visible") && [[a[i]().top + n, r]]) ||
                null
              );
            })
            .sort(function (e, t) {
              return e[0] - t[0];
            })
            .each(function () {
              t.offsets.push(this[0]), t.targets.push(this[1]);
            });
      }),
      (t.prototype.process = function () {
        var e,
          t = this.$scrollElement.scrollTop() + this.options.offset,
          i = this.getScrollHeight(),
          n = this.options.offset + i - this.$scrollElement.height(),
          r = this.offsets,
          a = this.targets,
          s = this.activeTarget;
        if ((this.scrollHeight != i && this.refresh(), t >= n))
          return s != (e = a[a.length - 1]) && this.activate(e);
        if (s && t < r[0]) return (this.activeTarget = null), this.clear();
        for (e = r.length; e--; )
          s != a[e] &&
            t >= r[e] &&
            (void 0 === r[e + 1] || t < r[e + 1]) &&
            this.activate(a[e]);
      }),
      (t.prototype.activate = function (t) {
        (this.activeTarget = t), this.clear();
        var i =
            this.selector +
            '[data-target="' +
            t +
            '"],' +
            this.selector +
            '[href="' +
            t +
            '"]',
          n = e(i).parents("li").addClass("active");
        n.parent(".dropdown-menu").length &&
          (n = n.closest("li.dropdown").addClass("active")),
          n.trigger("activate.bs.scrollspy");
      }),
      (t.prototype.clear = function () {
        e(this.selector)
          .parentsUntil(this.options.target, ".active")
          .removeClass("active");
      });
    var n = e.fn.scrollspy;
    (e.fn.scrollspy = i),
      (e.fn.scrollspy.Constructor = t),
      (e.fn.scrollspy.noConflict = function () {
        return (e.fn.scrollspy = n), this;
      }),
      e(window).on("load.bs.scrollspy.data-api", function () {
        e('[data-spy="scroll"]').each(function () {
          var t = e(this);
          i.call(t, t.data());
        });
      });
  })(jQuery),
  (function (e) {
    "use strict";
    function t(t) {
      return this.each(function () {
        var n = e(this),
          r = n.data("bs.tab");
        r || n.data("bs.tab", (r = new i(this))),
          "string" == typeof t && r[t]();
      });
    }
    var i = function (t) {
      this.element = e(t);
    };
    (i.VERSION = "3.3.7"),
      (i.TRANSITION_DURATION = 150),
      (i.prototype.show = function () {
        var t = this.element,
          i = t.closest("ul:not(.dropdown-menu)"),
          n = t.data("target");
        if (
          (n || (n = (n = t.attr("href")) && n.replace(/.*(?=#[^\s]*$)/, "")),
          !t.parent("li").hasClass("active"))
        ) {
          var r = i.find(".active:last a"),
            a = e.Event("hide.bs.tab", { relatedTarget: t[0] }),
            s = e.Event("show.bs.tab", { relatedTarget: r[0] });
          if (
            (r.trigger(a),
            t.trigger(s),
            !s.isDefaultPrevented() && !a.isDefaultPrevented())
          ) {
            var o = e(n);
            this.activate(t.closest("li"), i),
              this.activate(o, o.parent(), function () {
                r.trigger({ type: "hidden.bs.tab", relatedTarget: t[0] }),
                  t.trigger({ type: "shown.bs.tab", relatedTarget: r[0] });
              });
          }
        }
      }),
      (i.prototype.activate = function (t, n, r) {
        function a() {
          s
            .removeClass("active")
            .find("> .dropdown-menu > .active")
            .removeClass("active")
            .end()
            .find('[data-toggle="tab"]')
            .attr("aria-expanded", !1),
            t
              .addClass("active")
              .find('[data-toggle="tab"]')
              .attr("aria-expanded", !0),
            o ? (t[0].offsetWidth, t.addClass("in")) : t.removeClass("fade"),
            t.parent(".dropdown-menu").length &&
              t
                .closest("li.dropdown")
                .addClass("active")
                .end()
                .find('[data-toggle="tab"]')
                .attr("aria-expanded", !0),
            r && r();
        }
        var s = n.find("> .active"),
          o =
            r &&
            e.support.transition &&
            ((s.length && s.hasClass("fade")) || !!n.find("> .fade").length);
        s.length && o
          ? s
              .one("bsTransitionEnd", a)
              .emulateTransitionEnd(i.TRANSITION_DURATION)
          : a(),
          s.removeClass("in");
      });
    var n = e.fn.tab;
    (e.fn.tab = t),
      (e.fn.tab.Constructor = i),
      (e.fn.tab.noConflict = function () {
        return (e.fn.tab = n), this;
      });
    var r = function (i) {
      i.preventDefault(), t.call(e(this), "show");
    };
    e(document)
      .on("click.bs.tab.data-api", '[data-toggle="tab"]', r)
      .on("click.bs.tab.data-api", '[data-toggle="pill"]', r);
  })(jQuery),
  (function (e) {
    "use strict";
    function t(t) {
      return this.each(function () {
        var n = e(this),
          r = n.data("bs.affix"),
          a = "object" == typeof t && t;
        r || n.data("bs.affix", (r = new i(this, a))),
          "string" == typeof t && r[t]();
      });
    }
    var i = function (t, n) {
      (this.options = e.extend({}, i.DEFAULTS, n)),
        (this.$target = e(this.options.target)
          .on("scroll.bs.affix.data-api", e.proxy(this.checkPosition, this))
          .on(
            "click.bs.affix.data-api",
            e.proxy(this.checkPositionWithEventLoop, this)
          )),
        (this.$element = e(t)),
        (this.affixed = null),
        (this.unpin = null),
        (this.pinnedOffset = null),
        this.checkPosition();
    };
    (i.VERSION = "3.3.7"),
      (i.RESET = "affix affix-top affix-bottom"),
      (i.DEFAULTS = { offset: 0, target: window }),
      (i.prototype.getState = function (e, t, i, n) {
        var r = this.$target.scrollTop(),
          a = this.$element.offset(),
          s = this.$target.height();
        if (null != i && "top" == this.affixed) return r < i && "top";
        if ("bottom" == this.affixed)
          return null != i
            ? !(r + this.unpin <= a.top) && "bottom"
            : !(r + s <= e - n) && "bottom";
        var o = null == this.affixed,
          l = o ? r : a.top;
        return null != i && r <= i
          ? "top"
          : null != n && l + (o ? s : t) >= e - n && "bottom";
      }),
      (i.prototype.getPinnedOffset = function () {
        if (this.pinnedOffset) return this.pinnedOffset;
        this.$element.removeClass(i.RESET).addClass("affix");
        var e = this.$target.scrollTop(),
          t = this.$element.offset();
        return (this.pinnedOffset = t.top - e);
      }),
      (i.prototype.checkPositionWithEventLoop = function () {
        setTimeout(e.proxy(this.checkPosition, this), 1);
      }),
      (i.prototype.checkPosition = function () {
        if (this.$element.is(":visible")) {
          var t = this.$element.height(),
            n = this.options.offset,
            r = n.top,
            a = n.bottom,
            s = Math.max(e(document).height(), e(document.body).height());
          "object" != typeof n && (a = r = n),
            "function" == typeof r && (r = n.top(this.$element)),
            "function" == typeof a && (a = n.bottom(this.$element));
          var o = this.getState(s, t, r, a);
          if (this.affixed != o) {
            null != this.unpin && this.$element.css("top", "");
            var l = "affix" + (o ? "-" + o : ""),
              c = e.Event(l + ".bs.affix");
            if ((this.$element.trigger(c), c.isDefaultPrevented())) return;
            (this.affixed = o),
              (this.unpin = "bottom" == o ? this.getPinnedOffset() : null),
              this.$element
                .removeClass(i.RESET)
                .addClass(l)
                .trigger(l.replace("affix", "affixed") + ".bs.affix");
          }
          "bottom" == o && this.$element.offset({ top: s - t - a });
        }
      });
    var n = e.fn.affix;
    (e.fn.affix = t),
      (e.fn.affix.Constructor = i),
      (e.fn.affix.noConflict = function () {
        return (e.fn.affix = n), this;
      }),
      e(window).on("load", function () {
        e('[data-spy="affix"]').each(function () {
          var i = e(this),
            n = i.data();
          (n.offset = n.offset || {}),
            null != n.offsetBottom && (n.offset.bottom = n.offsetBottom),
            null != n.offsetTop && (n.offset.top = n.offsetTop),
            t.call(i, n);
        });
      });
  })(jQuery);
!(function (e, t) {
  "object" == typeof exports && "object" == typeof module
    ? (module.exports = t())
    : "function" == typeof define && define.amd
    ? define([], t)
    : "object" == typeof exports
    ? (exports.ClipboardJS = t())
    : (e.ClipboardJS = t());
})(this, function () {
  return (function (e) {
    function t(n) {
      if (i[n]) return i[n].exports;
      var r = (i[n] = { i: n, l: !1, exports: {} });
      return e[n].call(r.exports, r, r.exports, t), (r.l = !0), r.exports;
    }
    var i = {};
    return (
      (t.m = e),
      (t.c = i),
      (t.i = function (e) {
        return e;
      }),
      (t.d = function (e, i, n) {
        t.o(e, i) ||
          Object.defineProperty(e, i, {
            configurable: !1,
            enumerable: !0,
            get: n,
          });
      }),
      (t.n = function (e) {
        var i =
          e && e.__esModule
            ? function () {
                return e.default;
              }
            : function () {
                return e;
              };
        return t.d(i, "a", i), i;
      }),
      (t.o = function (e, t) {
        return Object.prototype.hasOwnProperty.call(e, t);
      }),
      (t.p = ""),
      t((t.s = 3))
    );
  })([
    function (e, t, i) {
      var n, r, a;
      (r = [e, i(7)]),
        (n = function (e, t) {
          "use strict";
          var i = (function (e) {
              return e && e.__esModule ? e : { default: e };
            })(t),
            n =
              "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
                ? function (e) {
                    return typeof e;
                  }
                : function (e) {
                    return e &&
                      "function" == typeof Symbol &&
                      e.constructor === Symbol &&
                      e !== Symbol.prototype
                      ? "symbol"
                      : typeof e;
                  },
            r = (function () {
              function e(e, t) {
                for (var i = 0; i < t.length; i++) {
                  var n = t[i];
                  (n.enumerable = n.enumerable || !1),
                    (n.configurable = !0),
                    "value" in n && (n.writable = !0),
                    Object.defineProperty(e, n.key, n);
                }
              }
              return function (t, i, n) {
                return i && e(t.prototype, i), n && e(t, n), t;
              };
            })(),
            a = (function () {
              function e(t) {
                (function (e, t) {
                  if (!(e instanceof t))
                    throw new TypeError("Cannot call a class as a function");
                })(this, e),
                  this.resolveOptions(t),
                  this.initSelection();
              }
              return (
                r(e, [
                  {
                    key: "resolveOptions",
                    value: function () {
                      var e =
                        arguments.length > 0 && void 0 !== arguments[0]
                          ? arguments[0]
                          : {};
                      (this.action = e.action),
                        (this.container = e.container),
                        (this.emitter = e.emitter),
                        (this.target = e.target),
                        (this.text = e.text),
                        (this.trigger = e.trigger),
                        (this.selectedText = "");
                    },
                  },
                  {
                    key: "initSelection",
                    value: function () {
                      this.text
                        ? this.selectFake()
                        : this.target && this.selectTarget();
                    },
                  },
                  {
                    key: "selectFake",
                    value: function () {
                      var e = this,
                        t =
                          "rtl" == document.documentElement.getAttribute("dir");
                      this.removeFake(),
                        (this.fakeHandlerCallback = function () {
                          return e.removeFake();
                        }),
                        (this.fakeHandler =
                          this.container.addEventListener(
                            "click",
                            this.fakeHandlerCallback
                          ) || !0),
                        (this.fakeElem = document.createElement("textarea")),
                        (this.fakeElem.style.fontSize = "12pt"),
                        (this.fakeElem.style.border = "0"),
                        (this.fakeElem.style.padding = "0"),
                        (this.fakeElem.style.margin = "0"),
                        (this.fakeElem.style.position = "absolute"),
                        (this.fakeElem.style[t ? "right" : "left"] = "-9999px");
                      var n =
                        window.pageYOffset ||
                        document.documentElement.scrollTop;
                      (this.fakeElem.style.top = n + "px"),
                        this.fakeElem.setAttribute("readonly", ""),
                        (this.fakeElem.value = this.text),
                        this.container.appendChild(this.fakeElem),
                        (this.selectedText = (0, i.default)(this.fakeElem)),
                        this.copyText();
                    },
                  },
                  {
                    key: "removeFake",
                    value: function () {
                      this.fakeHandler &&
                        (this.container.removeEventListener(
                          "click",
                          this.fakeHandlerCallback
                        ),
                        (this.fakeHandler = null),
                        (this.fakeHandlerCallback = null)),
                        this.fakeElem &&
                          (this.container.removeChild(this.fakeElem),
                          (this.fakeElem = null));
                    },
                  },
                  {
                    key: "selectTarget",
                    value: function () {
                      (this.selectedText = (0, i.default)(this.target)),
                        this.copyText();
                    },
                  },
                  {
                    key: "copyText",
                    value: function () {
                      var e = void 0;
                      try {
                        e = document.execCommand(this.action);
                      } catch (t) {
                        e = !1;
                      }
                      this.handleResult(e);
                    },
                  },
                  {
                    key: "handleResult",
                    value: function (e) {
                      this.emitter.emit(e ? "success" : "error", {
                        action: this.action,
                        text: this.selectedText,
                        trigger: this.trigger,
                        clearSelection: this.clearSelection.bind(this),
                      });
                    },
                  },
                  {
                    key: "clearSelection",
                    value: function () {
                      this.trigger && this.trigger.focus(),
                        window.getSelection().removeAllRanges();
                    },
                  },
                  {
                    key: "destroy",
                    value: function () {
                      this.removeFake();
                    },
                  },
                  {
                    key: "action",
                    set: function () {
                      var e =
                        arguments.length > 0 && void 0 !== arguments[0]
                          ? arguments[0]
                          : "copy";
                      if (
                        ((this._action = e),
                        "copy" !== this._action && "cut" !== this._action)
                      )
                        throw new Error(
                          'Invalid "action" value, use either "copy" or "cut"'
                        );
                    },
                    get: function () {
                      return this._action;
                    },
                  },
                  {
                    key: "target",
                    set: function (e) {
                      if (void 0 !== e) {
                        if (
                          !e ||
                          "object" !== (void 0 === e ? "undefined" : n(e)) ||
                          1 !== e.nodeType
                        )
                          throw new Error(
                            'Invalid "target" value, use a valid Element'
                          );
                        if (
                          "copy" === this.action &&
                          e.hasAttribute("disabled")
                        )
                          throw new Error(
                            'Invalid "target" attribute. Please use "readonly" instead of "disabled" attribute'
                          );
                        if (
                          "cut" === this.action &&
                          (e.hasAttribute("readonly") ||
                            e.hasAttribute("disabled"))
                        )
                          throw new Error(
                            'Invalid "target" attribute. You can\'t cut text from elements with "readonly" or "disabled" attributes'
                          );
                        this._target = e;
                      }
                    },
                    get: function () {
                      return this._target;
                    },
                  },
                ]),
                e
              );
            })();
          e.exports = a;
        }),
        void 0 !== (a = 1 ? n.apply(t, r) : n) && (e.exports = a);
    },
    function (e, t, i) {
      var n = i(6),
        r = i(5);
      e.exports = function (e, t, i) {
        if (!e && !t && !i) throw new Error("Missing required arguments");
        if (!n.string(t))
          throw new TypeError("Second argument must be a String");
        if (!n.fn(i)) throw new TypeError("Third argument must be a Function");
        if (n.node(e))
          return (function (e, t, i) {
            return (
              e.addEventListener(t, i),
              {
                destroy: function () {
                  e.removeEventListener(t, i);
                },
              }
            );
          })(e, t, i);
        if (n.nodeList(e))
          return (function (e, t, i) {
            return (
              Array.prototype.forEach.call(e, function (e) {
                e.addEventListener(t, i);
              }),
              {
                destroy: function () {
                  Array.prototype.forEach.call(e, function (e) {
                    e.removeEventListener(t, i);
                  });
                },
              }
            );
          })(e, t, i);
        if (n.string(e))
          return (function (e, t, i) {
            return r(document.body, e, t, i);
          })(e, t, i);
        throw new TypeError(
          "First argument must be a String, HTMLElement, HTMLCollection, or NodeList"
        );
      };
    },
    function (e, t) {
      function i() {}
      (i.prototype = {
        on: function (e, t, i) {
          var n = this.e || (this.e = {});
          return (n[e] || (n[e] = [])).push({ fn: t, ctx: i }), this;
        },
        once: function (e, t, i) {
          function n() {
            r.off(e, n), t.apply(i, arguments);
          }
          var r = this;
          return (n._ = t), this.on(e, n, i);
        },
        emit: function (e) {
          for (
            var t = [].slice.call(arguments, 1),
              i = ((this.e || (this.e = {}))[e] || []).slice(),
              n = 0,
              r = i.length;
            n < r;
            n++
          )
            i[n].fn.apply(i[n].ctx, t);
          return this;
        },
        off: function (e, t) {
          var i = this.e || (this.e = {}),
            n = i[e],
            r = [];
          if (n && t)
            for (var a = 0, s = n.length; a < s; a++)
              n[a].fn !== t && n[a].fn._ !== t && r.push(n[a]);
          return r.length ? (i[e] = r) : delete i[e], this;
        },
      }),
        (e.exports = i);
    },
    function (e, t, i) {
      var n, r, a;
      (r = [e, i(0), i(2), i(1)]),
        (n = function (e, t, i, n) {
          "use strict";
          function r(e) {
            return e && e.__esModule ? e : { default: e };
          }
          function a(e, t) {
            var i = "data-clipboard-" + e;
            if (t.hasAttribute(i)) return t.getAttribute(i);
          }
          var s = r(t),
            o = r(i),
            l = r(n),
            c =
              "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
                ? function (e) {
                    return typeof e;
                  }
                : function (e) {
                    return e &&
                      "function" == typeof Symbol &&
                      e.constructor === Symbol &&
                      e !== Symbol.prototype
                      ? "symbol"
                      : typeof e;
                  },
            h = (function () {
              function e(e, t) {
                for (var i = 0; i < t.length; i++) {
                  var n = t[i];
                  (n.enumerable = n.enumerable || !1),
                    (n.configurable = !0),
                    "value" in n && (n.writable = !0),
                    Object.defineProperty(e, n.key, n);
                }
              }
              return function (t, i, n) {
                return i && e(t.prototype, i), n && e(t, n), t;
              };
            })(),
            u = (function (e) {
              function t(e, i) {
                !(function (e, t) {
                  if (!(e instanceof t))
                    throw new TypeError("Cannot call a class as a function");
                })(this, t);
                var n = (function (e, t) {
                  if (!e)
                    throw new ReferenceError(
                      "this hasn't been initialised - super() hasn't been called"
                    );
                  return !t || ("object" != typeof t && "function" != typeof t)
                    ? e
                    : t;
                })(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this));
                return n.resolveOptions(i), n.listenClick(e), n;
              }
              return (
                (function (e, t) {
                  if ("function" != typeof t && null !== t)
                    throw new TypeError(
                      "Super expression must either be null or a function, not " +
                        typeof t
                    );
                  (e.prototype = Object.create(t && t.prototype, {
                    constructor: {
                      value: e,
                      enumerable: !1,
                      writable: !0,
                      configurable: !0,
                    },
                  })),
                    t &&
                      (Object.setPrototypeOf
                        ? Object.setPrototypeOf(e, t)
                        : (e.__proto__ = t));
                })(t, e),
                h(
                  t,
                  [
                    {
                      key: "resolveOptions",
                      value: function () {
                        var e =
                          arguments.length > 0 && void 0 !== arguments[0]
                            ? arguments[0]
                            : {};
                        (this.action =
                          "function" == typeof e.action
                            ? e.action
                            : this.defaultAction),
                          (this.target =
                            "function" == typeof e.target
                              ? e.target
                              : this.defaultTarget),
                          (this.text =
                            "function" == typeof e.text
                              ? e.text
                              : this.defaultText),
                          (this.container =
                            "object" === c(e.container)
                              ? e.container
                              : document.body);
                      },
                    },
                    {
                      key: "listenClick",
                      value: function (e) {
                        var t = this;
                        this.listener = (0, l.default)(
                          e,
                          "click",
                          function (e) {
                            return t.onClick(e);
                          }
                        );
                      },
                    },
                    {
                      key: "onClick",
                      value: function (e) {
                        var t = e.delegateTarget || e.currentTarget;
                        this.clipboardAction && (this.clipboardAction = null),
                          (this.clipboardAction = new s.default({
                            action: this.action(t),
                            target: this.target(t),
                            text: this.text(t),
                            container: this.container,
                            trigger: t,
                            emitter: this,
                          }));
                      },
                    },
                    {
                      key: "defaultAction",
                      value: function (e) {
                        return a("action", e);
                      },
                    },
                    {
                      key: "defaultTarget",
                      value: function (e) {
                        var t = a("target", e);
                        if (t) return document.querySelector(t);
                      },
                    },
                    {
                      key: "defaultText",
                      value: function (e) {
                        return a("text", e);
                      },
                    },
                    {
                      key: "destroy",
                      value: function () {
                        this.listener.destroy(),
                          this.clipboardAction &&
                            (this.clipboardAction.destroy(),
                            (this.clipboardAction = null));
                      },
                    },
                  ],
                  [
                    {
                      key: "isSupported",
                      value: function () {
                        var e =
                            arguments.length > 0 && void 0 !== arguments[0]
                              ? arguments[0]
                              : ["copy", "cut"],
                          t = "string" == typeof e ? [e] : e,
                          i = !!document.queryCommandSupported;
                        return (
                          t.forEach(function (e) {
                            i = i && !!document.queryCommandSupported(e);
                          }),
                          i
                        );
                      },
                    },
                  ]
                ),
                t
              );
            })(o.default);
          e.exports = u;
        }),
        void 0 !== (a = 1 ? n.apply(t, r) : n) && (e.exports = a);
    },
    function (e, t) {
      if ("undefined" != typeof Element && !Element.prototype.matches) {
        var i = Element.prototype;
        i.matches =
          i.matchesSelector ||
          i.mozMatchesSelector ||
          i.msMatchesSelector ||
          i.oMatchesSelector ||
          i.webkitMatchesSelector;
      }
      e.exports = function (e, t) {
        for (; e && 9 !== e.nodeType; ) {
          if ("function" == typeof e.matches && e.matches(t)) return e;
          e = e.parentNode;
        }
      };
    },
    function (e, t, i) {
      function n(e, t, i, n, a) {
        var s = r.apply(this, arguments);
        return (
          e.addEventListener(i, s, a),
          {
            destroy: function () {
              e.removeEventListener(i, s, a);
            },
          }
        );
      }
      function r(e, t, i, n) {
        return function (i) {
          (i.delegateTarget = a(i.target, t)), i.delegateTarget && n.call(e, i);
        };
      }
      var a = i(4);
      e.exports = function (e, t, i, r, a) {
        return "function" == typeof e.addEventListener
          ? n.apply(null, arguments)
          : "function" == typeof i
          ? n.bind(null, document).apply(null, arguments)
          : ("string" == typeof e && (e = document.querySelectorAll(e)),
            Array.prototype.map.call(e, function (e) {
              return n(e, t, i, r, a);
            }));
      };
    },
    function (e, t) {
      (t.node = function (e) {
        return void 0 !== e && e instanceof HTMLElement && 1 === e.nodeType;
      }),
        (t.nodeList = function (e) {
          var i = Object.prototype.toString.call(e);
          return (
            void 0 !== e &&
            ("[object NodeList]" === i || "[object HTMLCollection]" === i) &&
            "length" in e &&
            (0 === e.length || t.node(e[0]))
          );
        }),
        (t.string = function (e) {
          return "string" == typeof e || e instanceof String;
        }),
        (t.fn = function (e) {
          return "[object Function]" === Object.prototype.toString.call(e);
        });
    },
    function (e, t) {
      e.exports = function (e) {
        var t;
        if ("SELECT" === e.nodeName) e.focus(), (t = e.value);
        else if ("INPUT" === e.nodeName || "TEXTAREA" === e.nodeName) {
          var i = e.hasAttribute("readonly");
          i || e.setAttribute("readonly", ""),
            e.select(),
            e.setSelectionRange(0, e.value.length),
            i || e.removeAttribute("readonly"),
            (t = e.value);
        } else {
          e.hasAttribute("contenteditable") && e.focus();
          var n = window.getSelection(),
            r = document.createRange();
          r.selectNodeContents(e),
            n.removeAllRanges(),
            n.addRange(r),
            (t = n.toString());
        }
        return t;
      };
    },
  ]);
});
$(function () {
  $(".js--large-image-modal").on("show.bs.modal", function (e) {
    var t = $(e.relatedTarget).data("largeSrc");
    $(this).find(".image-modal").attr("src", t);
  });
});
!(function (e) {
  "use strict";
  if ("function" == typeof define && define.amd) define(["jquery"], e);
  else if ("undefined" != typeof module && module.exports)
    module.exports = e(require("jquery"));
  else e(jQuery);
})(function (e) {
  var t = -1,
    i = -1,
    n = function (e) {
      return parseFloat(e) || 0;
    },
    r = function (t) {
      var i = e(t),
        r = null,
        a = [];
      i.each(function () {
        var t = e(this),
          i = t.offset().top - n(t.css("margin-top")),
          s = a.length > 0 ? a[a.length - 1] : null;
        if (null === s) a.push(t);
        else if (Math.floor(Math.abs(r - i)) <= 1) a[a.length - 1] = s.add(t);
        else a.push(t);
        r = i;
      });
      return a;
    },
    a = function (t) {
      var i = { byRow: !0, property: "height", target: null, remove: !1 };
      if ("object" == typeof t) return e.extend(i, t);
      if ("boolean" == typeof t) i.byRow = t;
      else if ("remove" === t) i.remove = !0;
      return i;
    },
    s = (e.fn.matchHeight = function (t) {
      var i = a(t);
      if (i.remove) {
        var n = this;
        this.css(i.property, "");
        e.each(s._groups, function (e, t) {
          t.elements = t.elements.not(n);
        });
        return this;
      }
      if (this.length <= 1 && !i.target) return this;
      s._groups.push({ elements: this, options: i });
      s._apply(this, i);
      return this;
    });
  s.version = "master";
  s._groups = [];
  s._throttle = 80;
  s._maintainScroll = !1;
  s._beforeUpdate = null;
  s._afterUpdate = null;
  s._rows = r;
  s._parse = n;
  s._parseOptions = a;
  s._apply = function (t, i) {
    var o = a(i),
      l = e(t),
      c = [l],
      h = e(window).scrollTop(),
      u = e("html").outerHeight(!0),
      d = l.parents().filter(":hidden");
    d.each(function () {
      var t = e(this);
      t.data("style-cache", t.attr("style"));
    });
    d.css("display", "block");
    if (o.byRow && !o.target) {
      l.each(function () {
        var t = e(this),
          i = t.css("display");
        if ("inline-block" !== i && "flex" !== i && "inline-flex" !== i)
          i = "block";
        t.data("style-cache", t.attr("style"));
        t.css({
          display: i,
          "padding-top": "0",
          "padding-bottom": "0",
          "margin-top": "0",
          "margin-bottom": "0",
          "border-top-width": "0",
          "border-bottom-width": "0",
          height: "100px",
          overflow: "hidden",
        });
      });
      c = r(l);
      l.each(function () {
        var t = e(this);
        t.attr("style", t.data("style-cache") || "");
      });
    }
    e.each(c, function (t, i) {
      var r = e(i),
        a = 0;
      if (!o.target) {
        if (o.byRow && r.length <= 1) {
          r.css(o.property, "");
          return;
        }
        r.each(function () {
          var t = e(this),
            i = t.attr("style"),
            n = t.css("display");
          if ("inline-block" !== n && "flex" !== n && "inline-flex" !== n)
            n = "block";
          var r = { display: n };
          r[o.property] = "";
          t.css(r);
          if (t.outerHeight(!1) > a) a = t.outerHeight(!1);
          if (i) t.attr("style", i);
          else t.css("display", "");
        });
      } else a = o.target.outerHeight(!1);
      r.each(function () {
        var t = e(this),
          i = 0;
        if (!o.target || !t.is(o.target)) {
          if ("border-box" !== t.css("box-sizing")) {
            i += n(t.css("border-top-width")) + n(t.css("border-bottom-width"));
            i += n(t.css("padding-top")) + n(t.css("padding-bottom"));
          }
          t.css(o.property, a - i + "px");
        }
      });
    });
    d.each(function () {
      var t = e(this);
      t.attr("style", t.data("style-cache") || null);
    });
    if (s._maintainScroll)
      e(window).scrollTop((h / u) * e("html").outerHeight(!0));
    return this;
  };
  s._applyDataApi = function () {
    var t = {};
    e("[data-match-height], [data-mh]").each(function () {
      var i = e(this),
        n = i.attr("data-mh") || i.attr("data-match-height");
      if (n in t) t[n] = t[n].add(i);
      else t[n] = i;
    });
    e.each(t, function () {
      this.matchHeight(!0);
    });
  };
  var o = function (t) {
    if (s._beforeUpdate) s._beforeUpdate(t, s._groups);
    e.each(s._groups, function () {
      s._apply(this.elements, this.options);
    });
    if (s._afterUpdate) s._afterUpdate(t, s._groups);
  };
  s._update = function (n, r) {
    if (r && "resize" === r.type) {
      var a = e(window).width();
      if (a === t) return;
      t = a;
    }
    if (!n) o(r);
    else if (-1 === i)
      i = setTimeout(function () {
        o(r);
        i = -1;
      }, s._throttle);
  };
  e(s._applyDataApi);
  e(window).bind("load", function (e) {
    s._update(!1, e);
  });
  e(window).bind("resize orientationchange", function (e) {
    s._update(!0, e);
  });
});
$(document).ready(function () {
  if ($("#previewer").length > 0) {
    var e = $("#previewer");
    $("#preview-url").val().trim();
    !(function (t) {
      pdfjsLib.disableWorker = !0;
      pdfjsLib.GlobalWorkerOptions.workerSrc = "pdf.worker.js";
      pdfjsLib.getDocument(arrBuffer).promise.then(function (t) {
        t.verbosity = pdfjsLib.VERBOSITY_LEVELS.ERRORS;
        t.getPage(1).then(function (t) {
          if (
            /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(
              navigator.userAgent
            )
          ) {
            $(e).append("<canvas height=212 width=149 class='preview' />");
            var i = 0.25;
          } else {
            $(e).append("<canvas height=800 width=650 class='preview' />");
            i = 1.06;
          }
          var n = t.getViewport({ scale: i }),
            r = {
              canvasContext: $(e).find("canvas.preview")[0].getContext("2d"),
              viewport: n,
            };
          t.render(r);
        });
      });
    })();
  }
});
function pdfViewer(e, t) {
  var i = this;
  this.url = e;
  if ("CANVAS" == t.tagName) {
    this.canvas = t;
    this.canvasContext = t.getContext("2d");
  } else {
    this.elem = t;
    this.initInterface(t);
  }
  this.currPageNumber = 1;
  this.currPageScale = 1;
  pdfjsLib.disableWorker = !0;
  pdfjsLib.GlobalWorkerOptions.workerSrc = "pdf.worker.js";
  this.initPromise = pdfjsLib.getDocument(e).promise.then(function (e) {
    i.doc = e;
    $(".total-pages").html("/" + i.doc.numPages);
  });
}
pdfViewer.prototype.renderPage = function (e, t, i) {
  if (!this.pageExists(e)) return t();
  var n = this;
  this.doc.getPage(e).then(function (r) {
    n.currPageNumber = e;
    var a = r.getViewport({ scale: 1 });
    n.originalViewportWidth = a.width;
    n.originalViewportHeight = a.height;
    var s = n.originalViewportWidth / parseFloat(n.originalViewportHeight),
      o = i || $(n.canvas.parentNode.parentNode).width(),
      l = o / parseFloat(s);
    n.canvas.width = o;
    n.canvas.height = l;
    if (
      navigator &&
      /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(
        navigator.userAgent
      )
    ) {
      $(n.canvas).css("width", "100%");
      $(n.canvas).css(
        "height",
        parseFloat($(n.canvas).parent().parent().outerWidth()) / s + "px"
      );
      $(n.canvas).attr("width", n.originalViewportWidth);
      $(n.canvas).attr("height", n.originalViewportHeight);
      n.currPageScale = 1;
    } else {
      n.canvas.width = o;
      n.canvas.height = l;
      n.currPageScale = o / parseFloat(n.originalViewportWidth);
    }
    a = r.getViewport({ scale: n.currPageScale });
    var c = { canvasContext: n.canvasContext, viewport: a };
    r.render(c).promise.then(t);
  });
};
pdfViewer.prototype.openNextPage = function (e) {
  if (this.currPageNumber < this.doc.numPages) {
    this.currPageNumber++;
    this.renderPage(this.currPageNumber, e);
  } else e();
};
pdfViewer.prototype.openPrevPage = function (e) {
  if (this.currPageNumber > 1) {
    this.currPageNumber--;
    this.renderPage(this.currPageNumber, e);
  } else e();
};
pdfViewer.prototype.pageExists = function (e) {
  return e >= 1 && e <= this.doc.numPages ? !0 : !1;
};
pdfViewer.prototype.initInterface = function (e) {
  var t = this,
    i = $(
      '<button type="button" class="btn btn-default btn-sm pdf-preview-prev-page"><i class="fa fa-long-arrow-alt-left fa-1" aria-hidden="true"></i></button>'
    ),
    n = $(
      '<button type="button" class="btn btn-default btn-sm pdf-preview-next-page"><i class="fa fa-long-arrow-alt-right fa-1" aria-hidden="true"></i></button>'
    ),
    r = $('<input type="text" value="1" class="pdf-preview-page">'),
    a = $('<span class="total-pages"></span>'),
    s = $('<div class="pdf-preview-ifc ifc-line"></div>');
  s.append(i).append(r).append(a).append(n);
  $(e).append(s);
  var o = $('<div id="preview-body"></div>');
  o.append(
    '<div id="preview-body-inner"><div><canvas id="pdf-preview-canvas"></canvas></div></div>'
  );
  $(e).append(o);
  this.canvas = document.getElementById("pdf-preview-canvas");
  this.canvasContext = this.canvas.getContext("2d");
  $(document).on("click", ".pdf-preview-prev-page", function () {
    $(".pdf-preview-ifc button").attr("disabled", !0);
    t.openPrevPage(function () {
      $(".pdf-preview-page").val(t.currPageNumber);
      $(".pdf-preview-ifc button").removeAttr("disabled");
    });
  });
  $(document).on("click", ".pdf-preview-next-page", function () {
    $(".pdf-preview-ifc button").attr("disabled", !0);
    t.openNextPage(function () {
      $(".pdf-preview-page").val(t.currPageNumber);
      $(".pdf-preview-ifc button").removeAttr("disabled");
    });
  });
  $(document).on("keyup", ".pdf-preview-page", function (e) {
    var i = parseFloat(parseInt($(this).val())),
      n = this;
    if (!isNaN(i) && isFinite(i)) {
      $(n).attr("disabled", !0);
      t.renderPage(i, function () {
        if (i != t.currPageNumber) $(n).val(t.currPageNumber);
        $(n).removeAttr("disabled");
        $(n).focus();
      });
    }
  });
};
$(".cancel-selected-mode").on("click", function () {
  $("#choose-mode, #document-preview-caption").removeClass("hidden");
  $("#document-title-wrapper").addClass("hidden");
  $("#invite-list").addClass("hidden");
  cancelMode.call(this);
});
$(".modify-parties").on("click", function () {
  modifyPartiesShow.call(this);
});
$("#choose-mode").on("click", "#mode-sign-by-myself", function () {
  if (authorize($(this).attr("id"))) {
    $(".cancel-selected-mode-wrapper").removeClass("hidden");
    $("#document-title-wrapper").removeClass("hidden");
    $("#choose-mode, #document-preview-caption").addClass("hidden");
    editor.removeAddedFields();
    editor.removeAddedElements();
    editor.showPlacedElements(!0);
    editor.setInvitationMode(3);
    var e = parseJsonBlock($("#fields-data"));
    if (e) {
      setPrefilledValues(e);
      assignFieldsToCurrentUser(e);
      editor.setFields(e);
      editor.reinitConfirmButton(function () {
        editor.sendCreateDocumentData();
      });
      editor.removeAddedFields();
      editor.unserializeFieldsForFilling();
      editor.setMode("fill_fields");
      editor.showInterface();
    } else {
      editor.setMode("no_fields");
      editor.showInterface();
    }
    editor.enableCertificateChoose();
  }
});
$("#choose-mode").on(
  "click",
  "#mode-sign-with-me-and-others, #mode-sign-with-others-only",
  function () {
    if (authorize($(this).attr("id"))) {
      $("#invite-list").removeClass("hidden");
      $("#choose-mode").addClass("hidden");
      $("#document-title-wrapper").removeClass("hidden");
      $("#invite-list .form-group:not(.example)")
        .find("input")
        .each(function () {
          if ("" === $(this).val()) {
            $(this).focus();
            return !1;
          }
        });
    }
  }
);
$("#mode-sign-with-me-and-others").on("click", function () {
  if (!parseJsonBlock($("#fields-data"))) {
    $(".emails .new-input:not(.example)").remove();
    var e = $(".emails .new-input.example").clone();
    e.removeClass("example").removeClass("hidden");
    var t = e.clone();
    t.find(".name-input").val($("#current-user-name").attr("data-name"));
    t.find(".email-input").val($("#current-user-email").attr("data-email"));
    $(".emails").append(t);
    $(".emails").append(e);
  } else {
    $(".emails .new-input:not(.example)").remove();
    $(".assign-me").removeClass("hidden");
  }
});
$("#invite-list").on("click", ".assign-me", function () {
  var e = $("#current-user-email").html(),
    t = $("#current-user-name").html();
  $(".emails .role-input:not(.example)").each(function () {
    if ($(this).find(".email-input").val() === e) {
      $(this).find(".email-input").val("");
      $(this).find(".name-input").val("");
    }
  });
  $(this).closest(".form-group").find(".email-input").val(e);
  $(this).closest(".form-group").find(".name-input").val(t);
});
$("#mode-sign-with-others-only").on("click", function () {
  $(".emails .new-input:not(.example)").remove();
  $(".assign-me").addClass("hidden");
  if (!parseJsonBlock($("#fields-data"))) {
    var e = $(".emails .new-input.example").clone();
    e.removeClass("example").removeClass("hidden");
    $(".emails").append(e);
  }
});
$("#invite-list").on("click", "#new-email", function () {
  var e = $(".emails .new-input.example").first().clone();
  $(".emails").append(e);
  e.removeClass("example").removeClass("hidden").find("input").val("");
});
$("#invite-list").on("click", "#remove-email", function () {
  if (!($(".emails .new-input:not(.example)").length < 2))
    $(".emails .new-input:not(.example)").last().remove();
});
$("#invite-list").on("click", "#add-fields", function () {
  var e = new Array();
  editor.removeAddedElements();
  editor.removeAddedFields();
  if (parseJsonBlock($("#fields-data")))
    editor.setFields(
      parseJsonBlock($("#fields-data")),
      !0,
      !1,
      "copied" === source
    );
  editor.showPlacedElements(!0);
  if (parseEmails(e)) {
    $("#document-preview-caption").addClass("hidden");
    $("#invite-list").addClass("hidden");
    editor.setParties(e);
    if ("copied" === source) assignPartiesToFieldsByRoles();
    else assignPartiesToFieldsByRoles();
    editor.setMode("edit_fields");
    editor.showInterface();
    $("#confirm-parties").addClass("hidden");
    $("#confirm-modified-parties, .modify-parties-wrapper").removeClass(
      "hidden"
    );
  }
});
$("#invite-list").on("click", "#send-without-fields", function () {
  var e = new Array();
  if (parseEmails(e)) {
    initButtonLoading($(this));
    editor.setParties(e);
    assignPartiesToFieldsByRoles();
    editor.setMode("edit_fields");
    editor.hideInterface();
    $("#confirm-button").click();
  }
});
$("#confirm-modified-parties").on("click", function () {
  var e = new Array();
  if (parseEmails(e)) {
    $("#invite-list").addClass("hidden");
    editor.setPartiesToExistingFields(e);
  }
});
function chooseScenario() {
  hideProgressBar();
  $("#choose-mode").removeClass("hidden");
  setFileTitle();
}
function setFileTitle() {
  var e = getFileNameFromUrl(pdfUrl).split(".").shift();
  if (0 === $("#document-name").val().length)
    $("#document-name").val(decodeURI(e));
}
function authorize(e) {
  if (loggedIn()) return !0;
  editor.unlockWindow();
  localStorage.setItem("file_url", pdfUrl);
  localStorage.setItem("editorModeButtonId", e);
}
function parseEmails(e) {
  var t;
  $("#invite-list .emails .form-group:not(.example)").each(function () {
    var i = $(this).find(".email-input").val(),
      n = $(this).find(".name-input").val(),
      r = !0;
    if (
      $("#invite-list .emails .form-group:not(.example)").length > 1 &&
      !$(this).hasClass("role-input") &&
      "" === i.trim() &&
      "" === n.trim()
    )
      return $(this).remove();
    if (0 === n.trim().length) {
      if (!t) t = $(this).find(".name-input");
      $(this).find(".name-input").addClass("wrong");
      r = !1;
    } else $(this).find(".name-input").removeClass("wrong");
    if (
      0 === i.length ||
      (i.length > 0 && !isEmail(i.trim())) ||
      emailIsIncluded(e, i)
    ) {
      if (!t) t = $(this).find(".email-input");
      $(this).find(".email-input").addClass("wrong");
      r = !1;
    } else $(this).find(".email-input").removeClass("wrong");
    if (r && i.length > 0) e.push({ email: i.trim(), name: n });
  });
  if (t) $(t).focus();
  return 0 == $("#invite-list .wrong").length;
}
function emailIsIncluded(e, t) {
  var i = !1;
  $.each(e, function () {
    if (this.email === t) {
      i = !0;
      return !1;
    }
  });
  return i;
}
function parseSavedSignatures() {
  if (
    "undefined" != typeof Storage &&
    localStorage.pdflitecosignpdfsignatureIds
  )
    return JSON.parse(localStorage.pdflitecosignpdfsignatureIds);
}
function parseSavedInitials() {
  if (0 !== $("#saved-initials-data").length) {
    var e = new Array();
    $(".saved-initial-data").each(function () {
      e.push($(this).text().trim());
    });
    return e;
  }
}
function createRolesInputs() {
  var e = parseJsonBlock($("#roles-data"));
  if (e)
    $.each(e.roles, function () {
      var e = $(".role-input.example").clone();
      e.removeClass("example hidden").find("strong").html(escapeInput(this));
      $("#invite-list .role-input").last().after(e);
    });
  if ("undefined" != typeof variable) {
    if (!fields[0].role) return createRolesByEmailsData(fields);
    for (var t = [], i = 0; i < fields.length; i++) {
      var n = fields[i];
      if (-1 === t.indexOf(n.role)) {
        t.push(n.role);
        var r = $(".role-input.example").clone();
        r.removeClass("example hidden")
          .find("strong")
          .html(escapeInput(n.role));
        $("#invite-list .role-input").last().after(r);
      }
    }
  }
}
function createRolesByEmailsData(e) {
  var t = [];
  $.each(e, function () {
    if (this.party_email)
      if (-1 === t.indexOf(this.party_email)) {
        t.push(this.party_email);
        var e = $(".role-input.example").clone();
        e.removeClass("example hidden")
          .find("strong")
          .html("Signer" + (t.indexOf(this.party_email) + 1));
        $("#invite-list .role-input").last().after(e);
      }
  });
}
function assignPartiesToFieldsByRoles() {
  roles = [];
  $("#invite-list .role-input:not(.example)").each(function () {
    roles.push({
      email: $(this).find(".email-input").val(),
      name: $(this).find(".name-input").val(),
      role: $(this).find("strong").html(),
    });
  });
  placeAssignedRoles(roles);
}
function placeAssignedRoles(e) {
  $(".party-field:not(.example)").each(function () {
    if ($(this).attr("data-role")) {
      var t = $(this).find(".field-for");
      e.forEach(function (e, i) {
        if (e.role === t.closest(".party-field").attr("data-role"))
          $(t).val(escapeInput(e.email));
      });
      editor.assignField(t);
    }
  });
}
function placedElements() {
  var e = { images: [], annotations: [] };
  $.each($("#changes-data .invited-change-json-item"), function () {
    if (0 !== $(this).html().trim().length) {
      var t = JSON.parse($(this).html());
      if (t.annotations && t.annotations.length > 0)
        e.annotations = e.annotations.concat(t.annotations);
      if (t.images && t.images.length > 0) e.images = e.images.concat(t.images);
    }
  });
  return e;
}
function assignFieldsToCurrentUser(e) {
  var t = $("#current-user-email").attr("data-email");
  $.each(e, function () {
    this.party_email = t;
  });
}
function setPrefilledValues(e) {
  var t = parseJsonBlock($("#parameters-data"));
  $.each(e, function () {
    if (this.name && t[this.name]) this.prefilled = t[this.name];
  });
}
function findHighlightedDocument() {
  if (0 !== $(".highlighted").length)
    $("body").animate({ scrollTop: $(".highlighted").offset().top }, 300);
}
function parseUserContacts() {
  var e = [];
  $(".saved-contact-json-data").each(function () {
    e.push(JSON.parse($(this).html().trim()));
  });
  setAutoSuggest(e, "#invite-list .emails input", ".form-group");
}
function getUrlAndUpload() {
  var e = decodeURIComponent(
    window.atob($("#referrer-url").html().trim().replace(/\n/g, ""))
  );
  $("#inputUrl").val(e);
  startConversion();
}
function assignPartiesToInputs(e) {
  var t = [];
  $.each(e, function () {
    var e = { party_name: this.party_name, party_email: this.party_email },
      i = !0;
    $.each(t, function () {
      if (this.party_email === e.party_email) {
        i = !1;
        return !1;
      }
    });
    if (i) t.push(e);
  });
  $.each(t, function (e) {
    var t = $("#invite-list .emails .role-input.example").clone();
    t.removeClass("hidden example")
      .find(".name-input")
      .val(escapeInput(this.party_name));
    t.find(".email-input").val(escapeInput(this.party_email));
    t.find("strong").html("Signer" + (e + 1));
    $("#invite-list .emails").append(t);
  });
}
function setCreatedFrom(e, t) {
  
  if ("copied" === e) t.setCreatedFrom("document_clone");
  else if ("template" === e) t.setCreatedFrom("template");
  else t.setCreatedFrom("upload");
}
function cancelMode() {
  $(this).closest("#document-title-wrapper").removeClass("hidden");
  $(this).closest(".cancel-selected-mode-wrapper").addClass("hidden");
  $(this).closest(".cancel-to-invite-list-wrapper").addClass("hidden");
  disableAddingTextByClick();
  editor.hideInterface();
  editor.removeAddedElements();
  editor.removeAddedFields();
  editor.setFields(parseJsonBlock($("#fields-data")));
  editor.showPlacedElements();
  editor.disableCertificateChoose();
}
function modifyPartiesShow() {
  $("#invite-list").removeClass("hidden");
}
function checkIfDocumentCopied() {
  if (
    $("#created-from").length > 0 &&
    $("#created-from").html().trim().length > 0
  )
    editor.setCreatedFrom($("#created-from").html().trim());
  if ("copied" === source);
}

var DocuemntoFirmaBase = "";
var DocumentoFirmado = "";
function FirmarDocumento(documento) {
    DocuemntoFirmaBase = documento;
    startConversion();
}

function generarDocumentoFirmado() {
    return new Promise((resolve) => {
        resolve(DocumentoFirmado);
    });
}

function devolverDocumentoFirmado() {
    return new Promise((resolve) => {
        resolve(DocumentoFirmado);
    });
}

var source = $("#function_source").html(),
  startConversion = function (documento) {
    
    hideError();
    if (editor) editor.resetInterface();
    window.scrollTo(0, 0);
    var e = $("#inputFile");
    
      var filebase = DocuemntoFirmaBase;
    //File Seteada
    var arr = filebase.split(','),
    mime = arr[0].match(/:(.*?);/)[1],
    bstr = atob(arr[1]), 
    n = bstr.length, 
    u8arr = new Uint8Array(n);
     
     while(n--){
      u8arr[n] = bstr.charCodeAt(n);
     }
    var file = new File([u8arr], "PALETA_DOS.pdf", {
      type: "application/pdf",
    });
    
    //
      showProgressBar();
      
      new FormData().append("file", file);
      initEditor(null, (localFile = file).name);
      

  };

$("#inputFile").on("change", startConversion);
$("#proceed-url").on("click", startConversion);
$("#iniciarconversion").on("click", startConversion);
$("#pdfEditor").ready(function () {
  $("#choose-mode button").attr("disabled", !0);
  defineMode();
});
$(document).ready(function () {
  initUnfinalizedDocumentsLoading();
  findHighlightedDocument();
});
$(document).on("click", "#start-over", function () {
  if (editor) editor.hideInterface();
});
function initEditor(e, t) {
  if (!t) return startConversion();
  pdfUrl = t;
  $("#pdfEditor, #document-preview-caption").removeClass("hidden");
  var i = {
    file: t,
    localFile: localFile,
    parsedSavedSignatures: parseSavedSignatures(),
    parsedSavedInitials: parseSavedInitials(),
    prefilledFields: parseJsonBlock($("#parameters-data")),
    elements: placedElements(),
    onEditorLoad: editorLoadedCallback,
  };
   
  if ("copied" === source) i.remote = !0;
  editor = new pdfEditor(i);
  parseUserContacts();
    
  chooseScenario();
    
  onClickMeOnly();
    
  setCreatedFrom(source, editor);
    
    
}
function defineMode() {
  if ("invite" === source) {
    hideInputBox();
    $("#pdfEditor").removeClass("hidden");
    var e = decodeURIComponent(
        window.atob($("#referrer-url").html().trim().replace(/\n/g, ""))
      ),
      t = placedElements(),
      i = parseJsonBlock($("#fields-data"));
    editor = new pdfEditor({
      file: e,
      localFile: localFile,
      elements: t,
      fields: i,
      mode: "fill_fields",
      endpoint:
        "/invite/" +
        ($("#changes-data").attr("data-token") || $("#referrer-token").html()),
      parsedSavedSignatures: parseSavedSignatures(),
      parsedSavedInitials: parseSavedInitials(),
    });
  } else if ("template" === source) {
    getUrlAndUpload();
    createRolesInputs(parseJsonBlock($("#fields-data")));
  } else if ("copied" === source) getUrlAndUpload();
  else if (localStorage.getItem("file_url") && loggedIn()) {
    hideInputBox();
    initEditor("link", localStorage.getItem("file_url"));
    $("#" + localStorage.getItem("editorModeButtonId")).click();
    localStorage.removeItem("file_url");
    localStorage.removeItem("editorModeButtonId");
  }
}
function editorLoadedCallback() {
  enableModeButtons();
  checkIfDocumentCopied();
}
function enableModeButtons() {
  $("#choose-mode button").removeAttr("disabled");
  editor.setFields(parseJsonBlock($("#fields-data")));
  if ("copied" === source) {
    $("#mode-sign-with-me-and-others").click();
    assignPartiesToInputs(parseJsonBlock($("#fields-data")));
  }
}
function initUnfinalizedDocumentsLoading() {
  $(".document-loading").each(function () {
    $(this).attr("data-document-token"), setInterval(function () {}, 5e3);
  });
}
!(function (e, t) {
  "function" == typeof define && define.amd
    ? define([], function () {
        return (e.SignaturePad = t());
      })
    : "object" == typeof exports
    ? (module.exports = t())
    : (e.SignaturePad = t());
})(this, function () {
  return (function (e) {
    "use strict";
    var t = function (e, t) {
      var i = this,
        n = t || {};
      (this.velocityFilterWeight = n.velocityFilterWeight || 0.7),
        (this.minWidth = n.minWidth || 0.5),
        (this.maxWidth = n.maxWidth || 2.5),
        (this.dotSize =
          n.dotSize ||
          function () {
            return (this.minWidth + this.maxWidth) / 2;
          }),
        (this.penColor = n.penColor || "black"),
        (this.backgroundColor = n.backgroundColor || "rgba(0,0,0,0)"),
        (this.onEnd = n.onEnd),
        (this.onBegin = n.onBegin),
        (this._canvas = e),
        (this._ctx = e.getContext("2d")),
        this.clear(),
        (this._handleMouseDown = function (e) {
          1 === e.which && ((i._mouseButtonDown = !0), i._strokeBegin(e));
        }),
        (this._handleMouseMove = function (e) {
          i._mouseButtonDown && i._strokeUpdate(e);
        }),
        (this._handleMouseUp = function (e) {
          1 === e.which &&
            i._mouseButtonDown &&
            ((i._mouseButtonDown = !1), i._strokeEnd(e));
        }),
        (this._handleTouchStart = function (e) {
          if (1 == e.targetTouches.length) {
            var t = e.changedTouches[0];
            i._strokeBegin(t);
          }
        }),
        (this._handleTouchMove = function (e) {
          e.preventDefault();
          var t = e.targetTouches[0];
          i._strokeUpdate(t);
        }),
        (this._handleTouchEnd = function (e) {
          e.target === i._canvas && (e.preventDefault(), i._strokeEnd(e));
        }),
        this._handleMouseEvents(),
        this._handleTouchEvents();
    };
    (t.prototype.clear = function () {
      var e = this._ctx,
        t = this._canvas;
      (e.fillStyle = this.backgroundColor),
        e.clearRect(0, 0, t.width, t.height),
        e.fillRect(0, 0, t.width, t.height),
        this._reset();
    }),
      (t.prototype.toDataURL = function () {
        var e = this._canvas;
        return e.toDataURL.apply(e, arguments);
      }),
      (t.prototype.fromDataURL = function (e) {
        var t = this,
          i = new Image(),
          n = window.devicePixelRatio || 1,
          r = this._canvas.width / n,
          a = this._canvas.height / n;
        this._reset(),
          (i.src = e),
          (i.onload = function () {
            t._ctx.drawImage(i, 0, 0, r, a);
          }),
          (this._isEmpty = !1);
      }),
      (t.prototype._strokeUpdate = function (e) {
        var t = this._createPoint(e);
        this._addPoint(t);
      }),
      (t.prototype._strokeBegin = function (e) {
        this._reset(),
          this._strokeUpdate(e),
          "function" == typeof this.onBegin && this.onBegin(e);
      }),
      (t.prototype._strokeDraw = function (e) {
        var t = this._ctx,
          i = "function" == typeof this.dotSize ? this.dotSize() : this.dotSize;
        t.beginPath(), this._drawPoint(e.x, e.y, i), t.closePath(), t.fill();
      }),
      (t.prototype._strokeEnd = function (e) {
        var t = this.points.length > 2,
          i = this.points[0];
        !t && i && this._strokeDraw(i),
          "function" == typeof this.onEnd && this.onEnd(e);
      }),
      (t.prototype._handleMouseEvents = function () {
        (this._mouseButtonDown = !1),
          this._canvas.addEventListener("mousedown", this._handleMouseDown),
          this._canvas.addEventListener("mousemove", this._handleMouseMove),
          e.addEventListener("mouseup", this._handleMouseUp);
      }),
      (t.prototype._handleTouchEvents = function () {
        (this._canvas.style.msTouchAction = "none"),
          (this._canvas.style.touchAction = "none"),
          this._canvas.addEventListener("touchstart", this._handleTouchStart),
          this._canvas.addEventListener("touchmove", this._handleTouchMove),
          this._canvas.addEventListener("touchend", this._handleTouchEnd);
      }),
      (t.prototype.on = function () {
        this._handleMouseEvents(), this._handleTouchEvents();
      }),
      (t.prototype.off = function () {
        this._canvas.removeEventListener("mousedown", this._handleMouseDown),
          this._canvas.removeEventListener("mousemove", this._handleMouseMove),
          e.removeEventListener("mouseup", this._handleMouseUp),
          this._canvas.removeEventListener(
            "touchstart",
            this._handleTouchStart
          ),
          this._canvas.removeEventListener("touchmove", this._handleTouchMove),
          this._canvas.removeEventListener("touchend", this._handleTouchEnd);
      }),
      (t.prototype.isEmpty = function () {
        return this._isEmpty;
      }),
      (t.prototype._reset = function () {
        (this.points = []),
          (this._lastVelocity = 0),
          (this._lastWidth = (this.minWidth + this.maxWidth) / 2),
          (this._isEmpty = !0),
          (this._ctx.fillStyle = this.penColor);
      }),
      (t.prototype._createPoint = function (e) {
        var t = this._canvas.getBoundingClientRect();
        return new i(e.clientX - t.left, e.clientY - t.top);
      }),
      (t.prototype._addPoint = function (e) {
        var t,
          i,
          r,
          a = this.points;
        a.push(e),
          a.length > 2 &&
            (3 === a.length && a.unshift(a[0]),
            (t = this._calculateCurveControlPoints(a[0], a[1], a[2]).c2),
            (i = this._calculateCurveControlPoints(a[1], a[2], a[3]).c1),
            (r = new n(a[1], t, i, a[2])),
            this._addCurve(r),
            a.shift());
      }),
      (t.prototype._calculateCurveControlPoints = function (e, t, n) {
        var r = e.x - t.x,
          a = e.y - t.y,
          s = t.x - n.x,
          o = t.y - n.y,
          l = (e.x + t.x) / 2,
          c = (e.y + t.y) / 2,
          h = (t.x + n.x) / 2,
          u = (t.y + n.y) / 2,
          d = Math.sqrt(r * r + a * a),
          f = Math.sqrt(s * s + o * o),
          p = f / (d + f),
          g = h + (l - h) * p,
          m = u + (c - u) * p,
          v = t.x - g,
          b = t.y - m;
        return { c1: new i(l + v, c + b), c2: new i(h + v, u + b) };
      }),
      (t.prototype._addCurve = function (e) {
        var t,
          i,
          n = e.startPoint;
        (t = e.endPoint.velocityFrom(n)),
          (t =
            this.velocityFilterWeight * t +
            (1 - this.velocityFilterWeight) * this._lastVelocity),
          (i = this._strokeWidth(t)),
          this._drawCurve(e, this._lastWidth, i),
          (this._lastVelocity = t),
          (this._lastWidth = i);
      }),
      (t.prototype._drawPoint = function (e, t, i) {
        var n = this._ctx;
        n.moveTo(e, t),
          n.arc(e, t, i, 0, 2 * Math.PI, !1),
          (this._isEmpty = !1);
      }),
      (t.prototype._drawCurve = function (e, t, i) {
        var n,
          r,
          a,
          s,
          o,
          l,
          c,
          h,
          u,
          d,
          f,
          p = this._ctx,
          g = i - t;
        for (n = Math.floor(e.length()), p.beginPath(), a = 0; n > a; a++)
          (l = (o = (s = a / n) * s) * s),
            (d = (u = (h = (c = 1 - s) * c) * c) * e.startPoint.x),
            (d += 3 * h * s * e.control1.x),
            (d += 3 * c * o * e.control2.x),
            (d += l * e.endPoint.x),
            (f = u * e.startPoint.y),
            (f += 3 * h * s * e.control1.y),
            (f += 3 * c * o * e.control2.y),
            (f += l * e.endPoint.y),
            (r = t + l * g),
            this._drawPoint(d, f, r);
        p.closePath(), p.fill();
      }),
      (t.prototype._strokeWidth = function (e) {
        return Math.max(this.maxWidth / (e + 1), this.minWidth);
      });
    var i = function (e, t, i) {
      (this.x = e), (this.y = t), (this.time = i || new Date().getTime());
    };
    (i.prototype.velocityFrom = function (e) {
      return this.time !== e.time
        ? this.distanceTo(e) / (this.time - e.time)
        : 1;
    }),
      (i.prototype.distanceTo = function (e) {
        return Math.sqrt(Math.pow(this.x - e.x, 2) + Math.pow(this.y - e.y, 2));
      });
    var n = function (e, t, i, n) {
      (this.startPoint = e),
        (this.control1 = t),
        (this.control2 = i),
        (this.endPoint = n);
    };
    return (
      (n.prototype.length = function () {
        var e,
          t,
          i,
          n,
          r,
          a,
          s,
          o,
          l = 0;
        for (e = 0; 10 >= e; e++)
          (t = e / 10),
            (i = this._point(
              t,
              this.startPoint.x,
              this.control1.x,
              this.control2.x,
              this.endPoint.x
            )),
            (n = this._point(
              t,
              this.startPoint.y,
              this.control1.y,
              this.control2.y,
              this.endPoint.y
            )),
            e > 0 &&
              ((s = i - r), (o = n - a), (l += Math.sqrt(s * s + o * o))),
            (r = i),
            (a = n);
        return l;
      }),
      (n.prototype._point = function (e, t, i, n, r) {
        return (
          t * (1 - e) * (1 - e) * (1 - e) +
          3 * i * (1 - e) * (1 - e) * e +
          3 * n * (1 - e) * e * e +
          r * e * e * e
        );
      }),
      t
    );
  })(document);
});
function parseAutoFoundFields(e) {
  if (null != e && null != e.document && 0 != e.document.length) {
    var t = new Array();
    if (Array.isArray(e.document.page))
      $.each(e.document.page, function (e, t) {
        if (1 != i(t, e));
      });
    else i(e.document.page, 0);
    return t;
  }
  function i(e, i) {
    if (null != e.row && 0 != e.row)
      $.each(e.row, function (e, n) {
        if (null == n.column || 0 == n.column) return 1;
        $.each(n.column, function (e, n) {
          if (null != n.control) {
            n.control.page = i + 1;
            t.push(n.control);
          }
        });
      });
  }
}
function searchFieldsVisually(e, t, i, n) {
  $("#apiProxyUrl").val().trim();
}
function parseVisuallyFoundFields(e) {
  $.each(e, function (e) {
    if (
      this.Rect &&
      this.Rect.split("Height=")[1] &&
      this.Rect.split("Width=")[1] &&
      this.Rect.split("X=")[1] &&
      this.Rect.split("Y=")[1]
    ) {
      this["@height"] = this.Rect.split("Height=")[1].split("}")[0];
      this["@width"] = this.Rect.split("Width=")[1].split(",")[0];
      this["@x"] = this.Rect.split("X=")[1].split(",")[0];
      this["@y"] = this.Rect.split("Y=")[1].split(",")[0];
      this.page = this.Page + 1;
      switch (this.TypeName) {
        case "UnderlinedField":
          this.type = "text";
          break;
        case "Checkbox":
          this.type = "checkbox";
      }
      editor.placeField(this);
    }
  });
  $("#auto-search-fields")
    .removeAttr("disabled")
    .find(".fa-spinner")
    .addClass("hidden")
    .siblings(".fa-search")
    .removeClass("hidden");
}
function setAutoSuggest(e, t, i) {
  var n = [];
  $("body").on("keyup", t, function () {
    var t = $(this).val();
    n = [];
    closeAutoSuggests();
    if ("" !== t) {
      $.each(e, function () {
        for (var e in this)
          if (this[e] && -1 != this[e].toLowerCase().indexOf(t.toLowerCase())) {
            n.push(this);
            break;
          }
      });
      var i = $("<div></div>").addClass("auto-suggest-wrapper"),
        r = $("<div></div>").addClass("auto-suggest tt-menu"),
        a = $("<div></div>").addClass("tt-dataset tt-dataset-contacts");
      r.append(a);
      i.append(r);
      $.each(n, function (e, t) {
        var i = $("<div></div>")
          .addClass("auto-suggest-item tt-suggestion tt-selectable")
          .attr("data-auto-suggest-index", e);
        for (var n in this) {
          var r =
            "email" === n
              ? '<span class="text-muted">' + this[n] + "</span>"
              : this[n];
          $(i).html($(i).html() + r + "<br />");
        }
        $(a).append(i);
      });
      $(this).after(i);
    }
  });
  $("body").on("click", ".auto-suggest-item", function () {
    var e = parseInt($(this).attr("data-auto-suggest-index"));
    $(this)
      .closest(i)
      .find("input")
      .each(function () {
        var t = $(this).attr("data-auto-suggest");
        $(this).val(n[e][t]);
      });
    closeAutoSuggests();
  });
  $("body").on("click", function () {
    if (
      !(
        $(this).closest(".auto-suggest-item").length > 0 ||
        $(this).hasClass("auto-suggest-item")
      )
    )
      closeAutoSuggests();
  });
}
function closeAutoSuggests() {
  $(".auto-suggest-wrapper").remove();
}
const USER_ID_SALT = "somesalt*&-";
function cropImageFromCanvas(e) {
  var t,
    i,
    n,
    r = e.getContext("2d"),
    a = e.width,
    s = e.height,
    o = { x: [], y: [] },
    l = r.getImageData(0, 0, e.width, e.height);
  for (i = 0; i < s; i++)
    for (t = 0; t < a; t++) {
      n = 4 * (i * a + t);
      if (l.data[n + 3] > 0) {
        o.x.push(t);
        o.y.push(i);
      }
    }
  o.x.sort(function (e, t) {
    return e - t;
  });
  o.y.sort(function (e, t) {
    return e - t;
  });
  var c = o.x.length - 1;
  a = o.x[c] - o.x[0];
  s = o.y[c] - o.y[0];
  var h = r.getImageData(o.x[0], o.y[0], a, s),
    u = getAdjustImageToCanvasSizes(a / s, e),
    d = $("<canvas>").attr("width", h.width).attr("height", h.height)[0];
  d.getContext("2d").putImageData(h, 0, 0);
  r.clearRect(0, 0, r.canvas.width, r.canvas.height);
  r.drawImage(d, 0, 0, u[0], u[1]);
  return { trimmed: d.toDataURL(), full: e.toDataURL() };
}
function getAdjustImageToCanvasSizes(e, t) {
  var i = t.width / t.height,
    n = "object" == typeof e ? e.width / e.height : e;
  if (n < i) return [t.height * n, t.height];
  else return [t.width, t.width / n];
}
function drawImageOnCanvases(e, t, i) {
  t.forEach(function (t, n) {
    if (i.fit) var r = getAdjustImageToCanvasSizes(e, t.canvas);
    else r = [t.canvas.width, t.canvas.height];
    t.clearRect(0, 0, t.canvas.width, t.canvas.height);
    t.drawImage(e, 0, 0, r[0], r[1]);
  });
}
function getDataUri(e, t) {
  var i = new Image();
  i.onload = function () {
    var e = document.createElement("canvas");
    e.width = this.naturalWidth;
    e.height = this.naturalHeight;
    e.getContext("2d").drawImage(this, 0, 0);
    t(e.toDataURL("image/png"));
  };
  i.crossOrigin = "Anonymous";
  i.src = e;
}
function getRandomToken() {
  var e = new Uint8Array(32);
  crypto.getRandomValues(e);
  for (var t = "", i = 0; i < e.length; ++i) t += e[i].toString(16);
  return t;
}
function getUniqueUserId() {
  var e = localStorage.getItem("pdflitecosignparam12345");
  if (!e) {
    e = getRandomToken();
    localStorage.setItem("pdflitecosignparam12345", e);
  }
  return e;
}
function saveSignature(e, t) {
  var i = $("<img>").attr("src", e);
  if (0);
  else {
    var n = $("#sign-modal .saved-signature").length;
    $("#sign-modal .saved-signatures").prepend(
      $('<div class="saved-signature" data-id="' + n + '">')
        .append(i)
        .append($("<a>x</a>").addClass("delete"))
    );
  }
  url = t && "initials" === t.type ? "/initials" : "/signatures";
  var r = localStorage.pdflitecosignpdfnextSignatureId
      ? parseInt(localStorage.pdflitecosignpdfnextSignatureId)
      : 0,
    a = localStorage.pdflitecosignpdfsignatureIds
      ? JSON.parse(localStorage.pdflitecosignpdfsignatureIds)
      : [],
    s = getUniqueUserId() + USER_ID_SALT,
    o = CryptoJS.AES.encrypt(e, s);
  localStorage.setItem("pdflitecosignpdfsignature" + r, o);
  a.push(r);
  localStorage.setItem("pdflitecosignpdfnextSignatureId", "" + (r + 1));
  localStorage.setItem("pdflitecosignpdfsignatureIds", JSON.stringify(a));
}
function updateCheckboxFieldState(e) {
  if ("unchecked" === $(e).attr("data-state")) uncheckCheckboxField(e);
  else checkCheckboxField(e);
}
function checkCheckboxField(e) {
  var t = $(e).find(".checkbox-field-image");
  getDataUri(
    $(
      '#predefined-images img[data-predefined-name="predefined-checkmark"]'
    ).attr("src"),
    function (e) {
      $(t).html($("<img>").attr("src", e));
      $(t).closest(".checkbox-field-created").attr("data-state", "checked");
    }
  );
}
function uncheckCheckboxField(e) {
  var t = $(e).find(".checkbox-field-image");
  t.html("");
  assignField($(t).closest(".party-field").find(".field-for"));
  $(t).closest(".checkbox-field-created").attr("data-state", "unchecked");
}
function updateFillableCheckboxField(e) {
  if ("checked" === $(e).attr("data-state"))
    getDataUri(
      $(
        '#predefined-images img[data-predefined-name="predefined-checkmark"]'
      ).attr("src"),
      function (t) {
        $(e).append($("<img>").attr("src", t));
      }
    );
  else $(e).find("img").remove();
}
$("#decline-document-modal").on("click", ".cancel-modal", function () {
  $("#continue-decline").removeClass("hidden");
  $("#decline-warning").removeClass("hidden");
  $("#decline-form").addClass("hidden");
  $("#proceed-decline").addClass("hidden");
  $("#decline-document-modal").modal("hide");
});
$("#decline-document-modal").on("click", "#continue-decline", function () {
  $("#continue-decline").addClass("hidden");
  $("#decline-warning").addClass("hidden");
  $("#decline-form").removeClass("hidden");
  $("#proceed-decline").removeClass("hidden");
});
$("#decline-document-modal").on("click", "#proceed-decline", function () {
  $("#decline-token").val(), $("#reason").val();
});
function setEventHandlers(e) {
  setCopyingEvents();
  setPlaceFieldEvents(e);
}
function setCopyingEvents() {
  $("#place-signature").on("click", ".editor-page", function (e) {
    if (e.shiftKey) {
      getLastAddedObject().find(".copy-object").click();
      var t = e.pageX - parseFloat($(this).offset().left),
        i = $("#place-signature .last-added-object").find("textarea");
      if (i.length > 0)
        var n =
          e.pageY -
          parseFloat($(this).offset().top) -
          parseFloat(i.css("line-height")) / 2;
      else if (
        $("#place-signature .last-added-object").hasClass("sign-image") ||
        $("#place-signature .last-added-object").hasClass(
          "checkbox-field-created"
        )
      )
        n =
          e.pageY -
          parseFloat($(this).offset().top) -
          $("#place-signature .last-added-object").outerHeight() / 2;
      else n = e.pageY - parseFloat($(this).offset().top);
      $("#place-signature .last-added-object").css({ left: t, top: n });
      i.focus();
    }
  });
  $("#place-signature").on(
    "click",
    ".text-addable .drag-image-on-canvas",
    function (e) {
      if (!e.shiftKey && $(e.target).hasClass("editor-page")) {
        removeEmptyTextObjects();
        $("#place-signature #sign-label").click();
        getLastAddedObject(!0)
          .css({
            left: e.pageX - parseFloat($(this).offset().left) - 1,
            top:
              e.pageY -
              parseFloat($(this).offset().top) -
              parseFloat($(this).find("textarea").css("line-height")) / 2,
          })
          .find("textarea")
          .focus();
      }
    }
  );
}
function setPlaceFieldEvents(e) {
  $("#place-signature").on("click", "#add-signature-field", function () {
    e.placeField("signature");
  });
  $("#place-signature").on("click", "#add-text-field", function () {
    e.placeField("text");
  });
  $("#place-signature").on("click", "#add-checkbox-field", function () {
    e.placeField("checkbox");
  });
  $("#place-signature").on("click", "#add-date-field", function () {
    e.placeField("date");
  });
  $("#place-signature").on("click", "#add-initials-field", function () {
    e.placeField("initials");
  });
  $("#place-signature").on("click", ".field-transparency", function () {
    var e = $(this).is(":checked");
    $(this).closest(".party-field").attr("data-transparent", e);
  });
}
function assignField(e, t, i, n) {
  var r = defineShowingType(e),
    a = $(e).closest(".party-field").attr("data-prefilled-value");
  if (a && a.length > 0)
    $(e).closest(".party-field").addClass("prefilled").find("textarea").val(a);
  if ("" !== $(e).val()) {
    var s = $(e).find("option:selected").text();
    if (!n)
      s = $(e).find("option:selected").text().split(" ").slice(0, -1).join(" ");
    s = escapeInput(s);
    $(e)
      .closest(".party-field")
      .find(".field-caption")
      .html(
        r +
          ": " +
          (s.length > 0 ? s : escapeInput($(e).find("option:selected").text()))
      );
    $(e).closest(".party-field").addClass("green").removeClass("red");
    $(e).closest(".party-field").attr("data-party-name", s);
  } else {
    var o = $(e).closest(".party-field").attr("data-role"),
      l = o ? r + " field: " + o : r + " field";
    $(e).closest(".party-field").find(".field-caption").html(l);
    $(e).closest(".party-field").addClass("red").removeClass("green");
  }
  if (!t || i) generateAndSetFieldName(e, i);
}
function defineShowingType(e) {
  return (
    $(e).closest(".party-field").attr("data-sub-type") ||
    $(e).closest(".party-field").attr("data-type")
  );
}
function generateAndSetFieldName(e, t) {
  var i =
      0 === $(e).find('[value=""]').length
        ? parseInt($(e).prop("selectedIndex")) + 1
        : $(e).prop("selectedIndex"),
    n = $(e).val() ? $(e).val().toLowerCase() : "",
    r = $(e).closest(".party-field").first(),
    a = r.find(".field-name");
  if (!t || "" === a.val().trim())
    if (a.hasClass("unedited") && n && 0 !== n.trim().length) {
      if ("date" === r.attr("data-sub-type")) var s = "d";
      else if ("initials" === r.attr("data-sub-type")) s = "i";
      else if ("text" === r.attr("data-type")) s = "t";
      else if ("signature" === r.attr("data-type")) s = "s";
      else if ("checkbox" === r.attr("data-type")) s = "c";
      for (
        var o = $(
            "." + $(r).attr("data-type") + "-field-created:not(.example)"
          ).filter(function () {
            return (
              $(this).find(".field-for").val() === $(e).val() &&
              $(this)[0] !== $(r)[0] &&
              r.attr("data-sub-type") === $(this).attr("data-sub-type")
            );
          }),
          l = 1;
        ;
        l++
      )
        if (
          0 ==
          o.filter(function () {
            return (
              parseInt($(this).attr("data-generated-field-name-index")) === l
            );
          }).length
        ) {
          var c = l;
          break;
        }
      a.val("s" + i + "_" + s + c);
      r.attr("data-generated-field-name-index", c);
    }
}
$("#place-signature").on("focus", ".field-name", function () {
  var e = $(this).val();
  $(this).on("blur", function () {
    if ("" === $(this).val()) $(this).addClass("unedited");
    else if ($(this).val !== e) {
      $(this).removeClass("unedited");
      $(this)
        .closest(".party-field")
        .removeAttr("data-generated-field-name-index");
    }
    $(this).off("blur");
  });
});
function prefillFields(e) {
  if (e)
    for (var t in e)
      $(".text-field-created:not(.example)").each(function () {
        if (
          $(this).find(".field-name").val() === t &&
          0 !== $(this).find(".field-name").val().trim().length
        ) {
          $(this).attr("data-prefilled-value", e[t]);
          assignField($(this).find(".field-for"));
        }
      });
}
function setFieldParties(e, t, i) {
  var n = e.find(".field-for");
  if ("edit_roles" === i) var r = t.roles;
  else r = t.parties || t.roles;
  if (r && 0 !== r.length) {
    var a = $(n).val();
    n.find("option").remove();
    if (1 === r.length) {
      appendPartyOrRoleOption(n, r[0]);
      assignField(n);
    } else {
      n.append('<option value="">Choose party</option>');
      r.forEach(function (e) {
        appendPartyOrRoleOption(n, e);
      });
      n.val(a);
    }
  }
}
function appendPartyOrRoleOption(e, t) {
  if (t.email)
    e.append(
      '<option value="' + t.email + '">' + t.name + " " + t.email + "</option>"
    );
  else e.append('<option value="' + t.name + '">' + t.name + " </option>");
}
function setFieldInteractivity(e, t, i) {
  e.find("> div")
    .resizable({ grid: t })
    .on("resize", function () {
      resizeField(this, !1);
    });
  e.draggable({ scroll: !0, containment: "parent" });
  e.find(".field-for").change(function () {
    assignField(this, null, null, i);
  });
}
function serializeFields(e) {
  var t = [];
  $(".party-field:not(.example)").each(function () {
    var i = {};
    if ("edit_fields" === e) i.party_email = $(this).find(".field-for").val();
    else if ("edit_roles" === e) i.role = $(this).find(".field-for").val();
    var n = $(this).parent(),
      r = parseFloat($(this).css("top")) / n.attr("data-height"),
      a = parseFloat($(this).css("left")) / n.attr("data-width"),
      s = parseFloat($(this).css("height")) / n.attr("data-height"),
      o = parseFloat($(this).css("width")) / n.attr("data-width");
    i.height = s * n.attr("data-viewport-height");
    i.width = o * n.attr("data-viewport-width");
    i.x = a * n.attr("data-viewport-width");
    i.y = r * n.attr("data-viewport-height");
    i.page = parseInt(n.attr("data-page")) - 1;
    i.type = $(this).attr("data-sub-type") || $(this).attr("data-type");
    i.name = $(this).find(".field-name").val();
    i.hint = $(this).find(".field-hint").val();
    i.prefilled = $(this).attr("data-prefilled-value");
    i.transparent = !("false" == $(this).attr("data-transparent"));
    if ("edit_roles" !== e) i.party_name = $(this).attr("data-party-name");
    if ($(this).attr("data-state")) i.state = $(this).attr("data-state");
    t.push(i);
  });
  return t;
}
function serializeTextObject(e) {
  var t = $(e).find("textarea");
  if (0 === t.val().length) return !1;
  var i = $(e).parent(),
    n = parseFloat($(e).css("top")) / i.attr("data-height"),
    r = parseFloat($(e).css("left")) / i.attr("data-width"),
    a = parseFloat($(e).css("height")) / i.attr("data-height"),
    s = parseFloat($(e).css("width")) / i.attr("data-width"),
    o = n * i.attr("data-viewport-height"),
    l = r * i.attr("data-viewport-width"),
    c =
      (parseFloat(t.css("font-size")) / i.attr("data-height")) *
      i.attr("data-viewport-height"),
    h = s * i.attr("data-viewport-width"),
    u = a * i.attr("data-viewport-height"),
    d = $(e).attr("data-name"),
    f = $(e).attr("data-email"),
    p = $(e).attr("data-transparent");
  return {
    party_email: f,
    text: t.val(),
    fontName: t.css("font-family").replace(/"/g, ""),
    color: rgbToHex(t.css("color")),
    pages: parseInt($(e).parent().attr("data-page")) - 1,
    x: l,
    y: o,
    size: c,
    width: h,
    height: u,
    name: d,
    transparent: p,
  };
}
function serializeImageObject(e, t) {
  var i = $(e).find("img").attr("src");
  if (i) {
    var n = base64ToBlob(
      i.replace(/^data:image\/(png|jpg|jpeg);base64,/, ""),
      "image/png"
    );
    imgSign = t ? { image: n } : { image: i };
    var r = $(e).parent(),
      a = parseFloat($(e).css("top")) / r.attr("data-height"),
      s = parseFloat($(e).css("left")) / r.attr("data-width"),
      o = parseFloat($(e).css("height")) / r.attr("data-height"),
      l = parseFloat($(e).css("width")) / r.attr("data-width");
    imgSign.height = o * r.attr("data-viewport-height");
    imgSign.width = l * r.attr("data-viewport-width");
    imgSign.x = s * r.attr("data-viewport-width");
    imgSign.y = a * r.attr("data-viewport-height");
    imgSign.pages = parseInt(r.attr("data-page")) - 1;
    if ($(e).attr("data-box-type")) imgSign.type = $(e).attr("data-box-type");
    if ($(e).attr("data-parse-state"))
      imgSign.state = parseInt($(e).attr("data-parse-state"));
    return imgSign;
  }
}

function serializeImageObjectSello(e, t) {
  var i = $(e).find(".sello").attr("src");
  if (i) {
    var n = base64ToBlob(
      i.replace(/^data:image\/(png|jpg|jpeg);base64,/, ""),
      "image/png"
    );
    imgSign = t ? { image: n } : { image: i };
    var r = $(e).parent(),
      a = parseFloat($(e).css("top")) / r.attr("data-height"),
      s = parseFloat($(e).css("left")) / r.attr("data-width"),
      o = parseFloat($(e).css("height")) / r.attr("data-height"),
      l = parseFloat($(e).css("width")) / r.attr("data-width");
    imgSign.height = o * r.attr("data-viewport-height")*0.4;
    imgSign.width = l * r.attr("data-viewport-width")*0.4;
    imgSign.x = s * r.attr("data-viewport-width");
    imgSign.y = a * r.attr("data-viewport-height");
    imgSign.pages = parseInt(r.attr("data-page")) - 1;
    if ($(e).attr("data-box-type")) imgSign.type = $(e).attr("data-box-type");
    if ($(e).attr("data-parse-state"))
      imgSign.state = parseInt($(e).attr("data-parse-state"));
    return imgSign;
  }
}

function unserializeFieldsForFilling(e, t, i, n) {
  if (e && 0 !== e.length)
    $.each(e, function () {
      if (this.party_email !== $("#current-user-email").attr("data-email"))
        return unserializeForeignField(this, t, i, n);
      disableElementsInteface();
      var e = checkPageContainer(t, i, this.page + 1),
        r = defineTypeBySubtype(this),
        a = $("." + r + "-field-fillable.example").clone();
      e.append(a);
      var s =
          (this.height / e.attr("data-viewport-height")) *
          e.attr("data-height"),
        o = (this.width / e.attr("data-viewport-width")) * e.attr("data-width"),
        l = s > o ? o : s;
      if (l > 100) l = 100;
      a.removeClass("example")
        .attr({
          "data-type": r,
          "data-sub-type": this.type,
          "data-email": this.party_email,
          "data-lines": 1,
          "data-default-font-size": 16,
          "data-state": this.state,
          "data-name": this.name,
          "data-hint": this.hint,
          "data-prefilled-value": this.prefilled,
          "data-transparent": this.transparent,
        })
        .css({
          top:
            (this.y / e.attr("data-viewport-height")) * e.attr("data-height") +
            "px",
          left:
            (this.x / e.attr("data-viewport-width")) * e.attr("data-width") +
            "px",
          height: s + "px",
          width: o + "px",
        });
      a.find("textarea")
        .css({ "font-size": l + "px", "line-height": l + "px" })
        .on("change keyup paste", function (e) {
          $(this)
            .closest(".field-fillable")
            .removeClass("red")
            .addClass("green");
          if ("" === $(this).val().trim())
            $(this)
              .closest(".field-fillable")
              .addClass("red")
              .removeClass("green");
          if (
            8 === e.keyCode &&
            parseFloat($(this).css("font-size")) + 1 <
              $(this).closest(".field-fillable").outerHeight()
          ) {
            $(this).css({
              "font-size": parseFloat($(this).css("font-size")) + 1 + "px",
              "line-height": parseFloat($(this).css("line-height")) + 1 + "px",
            });
            autosize.update(this);
          }
        })
        .on("blur", function () {
          if ("" === $(this).val())
            $(this)
              .closest(".field-fillable")
              .removeClass("edited")
              .find(".field-fillable-hint")
              .removeClass("hidden");
        })
        .each(function () {
          autosize(this);
        })
        .on("autosize:resized", adjustResizedTextareaFont);
      if ("checkbox" === r) updateFillableCheckboxField(a);
      if ("text" === r && a.attr("data-prefilled-value")) {
        a.find("textarea").val(a.attr("data-prefilled-value"));
        a.find(".field-fillable-hint").addClass("hidden");
        a.addClass("green").removeClass("red");
      }
      if (this.hint && this.hint.length > 0)
        $("<div/>", { class: "field-fillable-optional-hint", html: this.hint })
          .css({
            top: parseInt(a.css("top").split("px")[0], 10) - 20 + "px",
            left: a.css("left"),
            "max-width": a.css("width"),
          })
          .insertBefore(a);
      setTimeout(function () {
        autosize.update($(a.find("textarea")));
      }, 100);
      if (this.prefilled) autoSizeText(a.find("textarea"), o - 2, s - 2);
      else autoSizeText(a.find(".field-fillable-hint"), o - 2, s - 2);
      assignSubType(this, a);
    });
}
function assignSubType(e, t) {
  var i = e.sub_type || e.subType || e.type;
  if ("initials" === i || "date" === i) {
    $(t).attr("data-sub-type", i);
    if ("date" === i) {
      var n = new Date(),
        r = n.getDate(),
        a = n.getMonth(),
        s = n.getFullYear();
      if (r < 10) r = "0" + r;
      n =
        [
          "Jan",
          "Feb",
          "March",
          "Apr",
          "May",
          "Jun",
          "Jul",
          "Aug",
          "Sep",
          "Oct",
          "Nov",
          "Dec",
        ][a] +
        " " +
        r +
        ", " +
        s;
      t.find(".field-fillable-hint").addClass("hidden");
      t.removeClass("red").addClass("green");
      t.find("textarea").val(n);
    }
    if ("initials" === i) {
      t.attr("data-target", "#field-initials-modal");
      t.find(".field-fillable-hint").html(
        $("#click-to-add-initials-translate").html()
      );
    }
  }
}
function defineTypeBySubtype(e) {
  switch (e.type) {
    case "initials":
      return "signature";
    case "date":
      return "text";
    default:
      return e.type;
  }
}
function unserializeForeignField(e, t, i, n) {
  var r = !1,
    a = e.party_email;
  if (n.annotations)
    $.each(n.annotations, function () {
      if (this.party_email === a) {
        r = !0;
        return !1;
      }
    });
  if (n.images)
    $.each(n.images, function () {
      if (this.party_email === a) {
        r = !0;
        return !1;
      }
    });
  if (!r) unserializeFieldForEditing.call(e, null, t, i);
}
function unserializeFieldForEditing(e, t, i, n) {
  var r = checkPageContainer(t, i, this.page + 1),
    a = defineTypeBySubtype(this),
    s = $("." + a + "-field-created.example").clone();
  r.append(s);
  s.removeClass("example")
    .attr({
      "data-type": a,
      "data-sub-type": this.type,
      "data-role": this.role,
      "data-default-font-size": 16,
      "data-state": this.state,
      "data-transparent": this.transparent,
    })
    .css({
      top:
        (this.y / r.attr("data-viewport-height")) * r.attr("data-height") +
        "px",
      left:
        (this.x / r.attr("data-viewport-width")) * r.attr("data-width") + "px",
      height:
        (this.height / r.attr("data-viewport-height")) * r.attr("data-height") +
        "px",
      width:
        (this.width / r.attr("data-viewport-width")) * r.attr("data-width") +
        "px",
    })
    .find(".field-caption")
    .html(
      this.type +
        " field: " +
        (this.party_name || this.role || this.party_email || this.name)
    );
  if (n)
    s.attr({
      "data-previous-party-name": this.party_name,
      "data-previous-party-email": this.party_email,
    });
  s.find(".field-body").css({ height: "", width: "" });
  s.find(".field-name").val(this.name);
  s.find(".field-hint").val(this.hint);
  if ("checkbox" === a && e) updateCheckboxFieldState(s);
  if (e) setFieldInteractivity(s, gridWidth, !0);
  else {
    s.addClass("uneditable");
    s.find("textarea").prop("disabled", !0);
  }
  autoSizeText(
    s.find(".field-caption"),
    parseFloat($(s).css("width")) - 2,
    parseFloat($(s).css("height")) - 2
  );
  if (this.role) s.find(".field-for").val(this.role);
}
function unserializeRoles(e) {
  $("#roles-modal .roles-list .form-group:not(.example)").remove();
  $.each(e, function () {
    var e = $("#roles-modal .roles-list .form-group.example").clone();
    $("#roles-modal .roles-list").append(e.removeClass("hidden example"));
    e.find("input").val(this);
    (e = $("#assign-roles-modal .roles-list .form-group.example").clone())
      .removeClass("hidden example")
      .find(".role-name")
      .attr("data-role-name", this)
      .html(this);
    $("#assign-roles-modal .roles-list").append(e);
  });
  $("#save-roles").click();
}
function validateAllFieldsFilled() {
  var e = !0;
  $(".text-field-fillable:not(.example)").each(function () {
    e &= validateTextFieldFilled(this);
  });
  $(".signature-field-fillable:not(.example)").each(function () {
    e &= validateSignatureFieldFilled(this);
  });
  return e;
}
function validateTextFieldFilled(e) {
  if ("" === $(e).find("textarea").val().trim()) return !1;
  else return !0;
}
function validateSignatureFieldFilled(e) {
  if ("" === $(e).find("img").attr("src")) return !1;
  else return !0;
}
function validateAllFieldsAssigned() {
  var e = !0;
  $(".party-field:not(.example) .field-for").each(function () {
    if ("" === $(this).val()) {
      e = !1;
      return !1;
    }
  });
  return e;
}
function validateFieldNamesUniqueness() {
  var e = !0,
    t = [];
  $(".party-field:not(.example) .field-name").each(function () {
    var i = this;
    if ("" !== $(i).val()) {
      $(i).closest(".party-field").removeClass("wrong");
      t.forEach(function (t) {
        if (t.name === $(i).val()) {
          $(t.element).closest(".party-field").addClass("wrong");
          $(i).closest(".party-field").addClass("wrong");
          e = !1;
        }
      });
      t.push({ name: $(i).val(), element: i });
    }
  });
  return e;
}
function removeEmptyTextObjects() {
  $(".sign-text:not(.example)").each(function () {
    if ("" === $(this).find("textarea").val().trim()) $(this).remove();
  });
}
function validateDataPresent(e) {
  if ("no_fields" != e) return !0;
  else
    return (
      0 !==
      $(".sign-image:not(.example)").length +
        $(".sign-text:not(.example)").length
    );
}
function validateAllPartiesAssigned(e) {
  if (!e || 0 === e.length) return !0;
  var t = e.slice();
  $(".party-field").each(function () {
    var e = $(this).find(".field-for").val();
    $.each(t, function (i) {
      if (this.email === e) {
        t.splice(i, 1);
        return !1;
      }
    });
  });
  var i = "";
  $.each(t, function () {
    i += this.name + " <" + this.email + ">\n";
  });
  if (0 !== t.length && $(".party-field:not(.example)").length > 0) {
    alert(
      "You should assign at least one single field for these parties:\n" + i
    );
    return !1;
  }
  return !0;
}
function validateRolesUniqeness() {
  var e = [],
    t = !0;
  $("#roles-modal .roles-list .form-group:not(.example) input").each(
    function () {
      if (-1 !== e.indexOf($(this).val())) {
        t = !1;
        alert("Role names must be unique!");
        $(this).focus();
        return !1;
      }
      e.push($(this).val());
    }
  );
  return t;
}
function parseAutoFoundFields(e) {
  if (void 0 !== e && void 0 !== e.document && 0 !== e.document.length) {
    var t = new Array();
    if (Array.isArray(e.document.page))
      $.each(e.document.page, function (e, t) {
        if (1 != i(t, e));
      });
    else i(e.document.page, 0);
    return t;
  }
  function i(e, i) {
    if (void 0 !== e.row && 0 !== e.row)
      $.each(e.row, function (e, n) {
        if (void 0 === n.column || 0 === n.column) return 1;
        $.each(n.column, function (e, n) {
          if (void 0 !== n.control) {
            n.control.page = i + 1;
            t.push(n.control);
          }
        });
      });
  }
}
function prepareVisuallyFoundFields(e) {
  $.each(e, function () {
    this.page = this.Page;
    this.type = "text";
    this["@x"] = this.Rect.split(", ")[1];
    this["@y"] = this.Rect.split(", ")[0];
    this["@width"] = this.Rect.split(", ")[3];
    this["@height"] = this.Rect.split(", ")[2];
  });
  return e;
}
var gridWidth = 17;
function rgbToHex(e) {
  var t = e.split("(")[1].split(")")[0];
  return (
    "#" +
    (t = t.split(","))
      .map(function (e) {
        return 1 === (e = parseInt(e).toString(16)).length ? "0" + e : e;
      })
      .join("")
  );
}
function countPlacedElementTopPosition(e) {
  var t = $(".drag-image-on-canvas").offset().top,
    i =
      $(".drag-image-on-canvas").offset().top +
      $(".drag-image-on-canvas").height(),
    n = $(window).scrollTop() + $(window).height() / 2;
  if (n <= t) return 0;
  else if (n >= i - e) return $(".drag-image-on-canvas").height() - e;
  else return n - t;
}
function checkPageContainer(e, t, i) {
  if ("pdf" === e) var n = getPageContainer(i || t.currPageNumber);
  else if ("jpg" === e || "png" === e || "jpeg" === e) n = getPageContainer(1);
  return n;
}
function getPageContainer(e) {
  return $("#editor-page-" + e);
}
function getLastAddedObject(e) {
  var t;
  $("[data-element-count]").each(function () {
    if (
      (!t ||
        parseInt($(t).attr("data-element-count")) <
          $(this).attr("data-element-count")) &&
      (e ||
        !$(this).hasClass("sign-text") ||
        $(this).find("textarea").val().length > 0)
    )
      t = this;
  });
  return $(t);
}
function defineFieldType(e) {
  switch (e.constructor === Object ? e.type : e) {
    case "text":
    case "date":
      return "text";
    case "signature":
    case "initials":
      return "signature";
    case "checkbox":
      return "checkbox";
    default:
      return "text";
  }
}
function defineFieldSubType(e) {
  switch (e.constructor === Object ? e.type : e) {
    case "date":
      return "date";
    case "initials":
      return "initials";
    default:
      return;
  }
}
function standardAjaxQuery(e, t, i, n) {
  $.ajax({
    url: e,
    type: t,
    data: i,
    contentType: "application/json",
    timeout: 5e4,
    success: function () {
      var e = JSON.parse(i),
        t = "";
      if (e.document && e.document.isSign) {
        switch (e.document.invitation_mode) {
          case 1:
          case 2:
            t = "Signature request sent";
            break;
          case 3:
            t = "Sign PDF";
        }
        amplitudeTrack(t);
      }
      if (n) return n(result);
      $("#result").html("");
      $("#progress-bar span").css("width", "100%");
      hideWaitMessage();
    },
    error: function (r) {
      if (n) return n(r);
      $("#panel-error").toggleClass("hidden", !1).find("#retry").remove();
      $("#error-status-code").html(r.status);
      $("#error-list").html("");
      showConvertTempFileErrors("Ajax request error", function () {
        standardAjaxQuery(e, t, i, n);
      });
    },
  });
}
function stringToBlobPdf(e) {
  for (var t = new Array(e.length), i = 0; i < e.length; i++)
    t[i] = e.charCodeAt(i);
  var n = new Uint8Array(t);
  return (blob = new Blob([n], { type: "application/pdf" }));
}
function convertToBlob(e) {
  $.each(e, function () {
    var e = this.image.replace(/^data:image\/(png|jpg|jpeg);base64,/, "");
    this.image = base64ToBlob(e, "image/png");
  });
}
function resizeField(e, t) {
  $(e)
    .parent()
    .attr("data-lines", (t ? data["@height"] : $(e).outerHeight()) / 17);
  $(e)
    .parent()
    .css({
      height: $(e).outerHeight() + "px",
      width: $(e).outerWidth() + "px",
    });
  $(e).css({ left: 0, top: 0 });
  autoSizeText($(e).find(".field-caption"));
}
function adjustResizedTextareaFont(e) {
  var t = $(this).attr("data-resize-direction"),
    i = Math.floor(
      $(this).outerHeight() / parseFloat($(this).css("line-height"))
    ),
    n = parseFloat($(this).closest(".field-fillable").attr("data-lines"));
  if (
    $(this).outerHeight() > $(this).parent().outerHeight() &&
    "larger" !== t
  ) {
    $(this).css({
      "font-size": parseFloat($(this).css("font-size")) - 1 + "px",
      "line-height": parseFloat($(this).css("line-height")) - 1 + "px",
    });
    $(this).attr("data-resize-direction", "smaller");
    autosize.update(this);
  } else if (
    $(this).outerHeight() < $(this).parent().outerHeight() &&
    "smaller" !== t &&
    i > n
  ) {
    $(this).css({
      "font-size": parseFloat($(this).css("font-size")) + 1 + "px",
      "line-height": parseFloat($(this).css("line-height")) + 1 + "px",
    });
    $(this).attr("data-resize-direction", "larger");
    autosize.update(this);
  } else if (
    $(this).outerHeight() < $(this).parent().outerHeight() &&
    i <= n &&
    "smaller" !== t
  ) {
    $(this).css({
      "font-size": $(this).closest(".party-field").outerHeight() + "px",
      "line-height": $(this).closest(".party-field").outerHeight() + "px",
    });
    autosize.update(this);
  }
  if (
    "larger" === t &&
    $(this).outerHeight() > $(this).parent().outerHeight()
  ) {
    $(this).css({
      "font-size": parseFloat($(this).css("font-size")) - 1 + "px",
      "line-height": parseFloat($(this).css("line-height")) - 1 + "px",
    });
    $(this).attr("data-resize-direction", "smaller");
    autosize.update(this);
  }
  $(this).removeAttr("data-resize-direction");
}
function adjustTextObjectFontSize() {
  var e = $(this).closest(".sign-text");
  if (e.attr("data-decreasing-width")) {
    e.removeAttr("data-decreasing-width");
    changeTextObjectWidth(this, parseFloat($(this).css("font-size")));
    return autosize.update(this);
  }
  if (
    $(this).outerWidth() +
      parseFloat($(this).css("font-size")) +
      parseFloat(e.css("left")) >=
    $(".drag-image-on-canvas").outerWidth()
  ) {
    e.css({ height: $(this).outerHeight() });
    return e.attr("data-previous-height", e.outerHeight());
  }
  var t = Math.abs(
    e.attr("data-previous-height") - parseFloat($(this).css("height"))
  );
  if (
    !e.attr("data-additional-resize") &&
    (!e.attr("data-previous-height") ||
      (e.attr("data-previous-height") <= parseFloat($(this).css("height")) &&
        t > 3))
  ) {
    var i = $(this).outerHeight();
    changeTextObjectWidth(this, parseFloat($(this).css("font-size")));
    e.attr("data-previous-height", e.outerHeight());
    autosize.update(this);
    if (i === $(this).outerHeight()) {
      e.attr("data-additional-resize", "true");
      changeTextObjectWidth(this, parseFloat($(this).css("font-size")));
      autosize.update(this);
      e.removeAttr("data-additional-resize");
    }
  }
  e.css({ width: $(this).css("width"), height: $(this).outerHeight() });
  e.attr("data-previous-height", e.outerHeight());
}
function trimTextObjectWidth(e) {
  var t = $(this).closest(".sign-text");
  if ("" === $(this).val()) {
    $(this).css("width", 2 * parseFloat($(this).css("font-size")));
    return t
      .closest(".sign-text")
      .css({ width: $(this).css("width"), height: $(this).outerHeight() });
  }
  if (t.innerHeight() > parseFloat(t.find("textarea").css("line-height"))) {
    changeTextObjectWidth(this, $(t).closest(".editor-page").innerWidth());
    autosize.update(this);
    t.attr("data-decreasing-width", "true");
    for (var i = 0; i < 99999 && t.attr("data-decreasing-width"); ) {
      changeTextObjectWidth(this, -parseFloat($(this).css("font-size")));
      autosize.update(this);
      i += 1;
    }
  } else {
    t.attr("data-decreasing-width", "true");
    changeTextObjectWidth(this, -parseFloat($(this).css("font-size")));
    autosize.update(this);
  }
  t.removeAttr("data-decreasing-width");
}
function changeTextObjectWidth(e, t) {
  var i = 18;
  try {
    i = Math.max(18, -t, parseFloat($(e).css("width")) + t);
  } catch (e) {
    i = 18;
  }
  $(e).css("width", i);
  $(e)
    .closest(".sign-text")
    .css({ width: i, height: $(e).outerHeight() });
}
function saveImageSizes(e, t, i) {
  $("<img/>")
    .load(function () {
      if (t) {
        t.attr("data-original-width", this.width);
        t.attr("data-original-height", this.height);
      }
      if (i) i(this.width, this.height);
    })
    .attr("src", e);
}
function removeMultipleSpaces() {
  var e = $(this)
    .val()
    .replace(/ +(?= )/g, "");
  $(this).val(e);
}
function disableElementsInteface() {
  $("#elements-interface").addClass("hidden");
  $("#editor-header-text").addClass("hidden");
  $("#pdf-sign-preview-wrapper").removeClass("text-addable");
}
function enableAddingTextByClick() {
  $("#pdf-sign-preview-wrapper").addClass("text-addable");
}
function disableAddingTextByClick() {
  $("#pdf-sign-preview-wrapper").removeClass("text-addable");
}
function showPdfInterface() {
  $("#pdf-sign-preview").css("display", "block");
  $(".page-changing").css("display", "block");
  $("#picture-preview").css("display", "none");
}
function displayImageInterface() {
  $("#pdf-sign-preview").addClass("hidden");
  $(".page-changing").css("display", "block").find(".total-pages").html("/ 1");
  $(".page-changing").find("button, input").attr("disabled", !0);
  $("#picture-preview").css("display", "block");
}
function displayFirstEditorPage(e) {
  $(".pdf-preview-ifc").show(0).removeClass("hidden");
  $(".drag-image-on-canvas").slideDown();
  $(".editor-page").css("display", "none");
  $("#editor-page-1").css("display", "block");
  $(".pdf-preview-ifc button").removeAttr("disabled");
  if ("pdf" != e)
    $(".page-changing").find("button, input").attr("disabled", !0);
}
function stopConfirmButtonLoading() {
  $("#confirm-button").removeClass("hidden");
  $("#confirm-button + .loading-pic").remove();
}
function showPartiesList(e) {
  $("#parties-data").html("Parties:").removeClass("hidden");
  $.each(e, function (e) {
    $("#parties-data").append(
      "<br />" +
        (e + 1) +
        ". " +
        escapeInput(this.name) +
        " &lt;" +
        escapeInput(this.email) +
        "&gt;"
    );
  });
}
function enableCertificateChoose() {
  $(".confirm-buttons.button-expander").addClass("hidden");
  $(".choose-proceed-type").removeClass("hidden");
}
function disableCertificateChoose() {
  $(".choose-proceed-type").addClass("hidden");
}
function preventEditing() {
  $("#pdf-sign-preview-wrapper #prevent-editing").removeClass("hidden");
  $("#pdf-preview-ifc-wrapper button").attr("disabled", !0);
}
function enableEditing() {
  $("#pdf-sign-preview-wrapper #prevent-editing").addClass("hidden");
  $("#pdf-preview-ifc-wrapper button").removeAttr("disabled");
}
var pdfEditor = function (e) {
  var t,
    i,
    n,
    r,
    a,
    s,
    o,
    l,
    c,
    h,
    u,
    d,
    f,
    p,
    g,
    m,
    v,
    b = [],
    y = [],
    w = !1,
    x = !1,
    k = 0,
    C = 0,
    S = [],
    _ = [],
    A = this,
    F = 2,
    T = [],
    P = { mode: !1, text: "", fontSize: 60, fontFamily: "", color: "black" },
    E = {},
    I = 16;
  this.resetInterface = function () {
    t = void 0;
    i = void 0;
    n = void 0;
    r = void 0;
    a = void 0;
    b = [];
    y = [];
    s = void 0;
    w = !1;
    c = void 0;
    F = 2;
    f = void 0;
    E = {};
    v = void 0;
    $(".sign-image").remove();
    $(".sign-text").remove();
    $(".editor-page").remove();
    $("#picture-preview").css("display", "none");
    $("#pdf-sign-preview").css("display", "none");
    $(".page-changing").css("display", "block");
    $(".pdf-page").val(1);
    $("#panel-error").toggleClass("hidden", !0);
    $("#panel-result").toggleClass("hidden", !0);
    $("#progress-bar span").css("width", "0%");
    $("#sign-place").removeClass("hidden");
    $('[data-loading="true"] + .loading-pic').remove();
  };
  this.getParties = function () {
    return S;
  };
  this.getRoles = function () {
    return _;
  };
  this.getSource = function () {
    return l;
  };
  this.getViewer = function () {
    return n;
  };
  this.hideInterface = function () {
    $("#editor-header-text").addClass("hidden");
    $("#fields-editor-header-text").addClass("hidden");
    $(".editor-ifc").addClass("hidden");
    $(".preview-caption").removeClass("hidden");
    $(".confirm-buttons").addClass("hidden");
    $("#elements-interface")
      .addClass("hidden")
      .find("button")
      .removeClass("hidden");
  };
  this.lockWindow = function () {
    
  };
  this.unlockWindow = function () {
    
  };
  this.initialize = function (e) {
    l = e.mode;
    placedElements = e.elements;
    d = e.endpoint;
    S = e.parties;
    f = e.documentTemplateId;
    u = e.fields;
    m = e.onEditorLoad;
    E = e.prefilledFields;
    if (e.parsedSavedSignatures) k += e.parsedSavedSignatures.length;
    if (e.parsedSavedInitials) k += e.parsedSavedInitials.length;
    !(function (e, t) {
      $(".saved-signatures").on("click touch", "img", ee);
      $(".saved-signatures").on("click", ".delete", te);
      if (e) B(e.slice(), "signature");
      if (t) B(t.slice(), "initials");
    })(e.parsedSavedSignatures, e.parsedSavedInitials);
    !(function () {
      if (0 !== $("#signature-fonts-data").length) {
        $("#signature-fonts-data .signature-font").each(function () {
          T.push($(this).html().trim());
        });
        P.fontFamily = T[0];
      }
    })();
    if (e.localFile) r = e.localFile;
    else this.remote = !0;
    this.lockWindow();
    !(function (e) {
      if ("fill_fields" === l) {
        A.hideInterface();
        !(function () {
          $("#confirm-button").attr("id", "open-agreement");
          $("#agreement-confirm-button").attr("id", "confirm-button");
        })();
        !(function (e) {
          e.split("?")[0].split("/").pop();
          if (
            "invite" === l ||
            "template" === l ||
            "fast-sign" === l ||
            "edit-user-file" === l ||
            "fill_fields" == l
          ) {
            A.resetInterface();
            hideInputBox();
            w = !0;
            !(function () {
              $(
                "#invite-open, #emails-invite, #save-as-template, #sign-place"
              ).remove();
              $("#confirm-button").attr({
                id: "sign-place-" + l,
                "data-toggle": "",
                title: "",
              });
              $("#sign-draw").removeClass("hidden");
              $("#elements-interface").removeClass("hidden");
              $(".preview-caption").addClass("hidden");
              $(".confirm-buttons").removeClass("hidden");
              $("#pdf-sign-preview-wrapper").addClass("text-addable");
            })();
            z("link", e, !0);
          } else if ("cors_link" === l) {
            A.resetInterface();
            hideInputBox();
            z("link", e, !0);
          } else startConversion();
          hideInfoBlocks();
        })(e.file);
      } else if ("edit_fields" === l) {
        disableElementsInteface();
        N();
        $("#place-signature").on("click", "#confirm-button", function () {
          D(d);
        });
        L("link", e.file, A.remote);
      } else if ("no_fields" === l) {
        $("#place-signature").on("click", "#confirm-button", function () {
          D(d);
        });
        L("link", e.file, A.remote);
      } else {
        getFileNameFromUrl(e.file);
        L("link", e.file, A.remote);
      }
    })(e);
    setEventHandlers(this);
  };
  this.initialize(e);
  this.showInterface = function () {
    if ("edit_fields" == l) N();
    else if ("edit_roles" == l) {
      N();
      !(function () {
        $("#roles-interface").removeClass("hidden");
        $(".manage-roles").removeClass("hidden");
      })();
    } else if ("fill_fields" == l)
      $("#editor-header-text").removeClass("hidden");
    else {
      $("#elements-interface").removeClass("hidden");
      $("#editor-header-text").removeClass("hidden");
      $("#editor-header-text").text($("#inputFile").val().split("\\").pop());
    }
    $(".preview-caption").addClass("hidden");
    $(".confirm-buttons").removeClass("hidden");
    $('[data-tooltip="tooltip"]').tooltip();
  };
  this.getElements = function (e) {
    if (1 == e.onlyNew) ue(e.callback, !1, ".my-invited-change");
    else ue(e.callback);
  };
  this.getPdfUrl = function () {
    return i;
  };
  this.setParties = function (e) {
    S = e;
    $(".party-field:not(.example)").each(function () {
      if ($(this).attr("data-role")) {
        setFieldParties($(this), { parties: S }, l);
        setFieldInteractivity($(this), gridWidth);
      }
    });
  };
  this.setPartiesToExistingFields = function (e) {
    S = e;
    $(".party-field:not(.example)").each(function () {
      setFieldParties($(this), { parties: S }, l);
      setFieldInteractivity($(this), gridWidth);
    });
    showPartiesList(S);
  };
  this.setCreatedFrom = function (e) {
    v = e;
  };
  this.setMode = function (e) {
    l = e;
    $("#pdf-sign-preview-wrapper").removeClass("text-addable");
    if ("edit_fields" === e) {
      F = 2;
      disableElementsInteface();
      N();
      showPartiesList(S);
      enableAddingTextByClick();
      O(function () {
        D(d);
      });
    } else if ("no_fields" === e) {
      F = 3;
      enableAddingTextByClick();
      O(function () {
        D(d);
      });
    } else if ("edit_roles" === e) {
      N();
      enableAddingTextByClick();
      $("#fields-editor-header-text b").html("Edit Fields and Roles");
      O(function () {
        A.sendRolesData(d);
      });
    }
  };
  function D(e) {
    try {
      A.sendCreateDocumentData(e);
    } catch (e) {
      alert("Error occured");
      enableEditing();
      stopConfirmButtonLoading();
    }
  }
  this.setFields = function (e, t, i, r) {
    !(function (e, t, i, r) {
      unserializeRoles(_);
      if (e && 0 !== e.length) {
        se();
        $.each(e, function () {
          unserializeFieldForEditing.call(this, t, s, n, r);
        });
        J(!0, i);
        prefillFields(E);
      }
    })((u = e), t, i, r);
  };
  this.setCustomEndpoint = function (e) {
    d = e;
  };
  this.setInvitationMode = function (e) {
    F = e;
  };
  this.removeAddedElements = function () {
    $(".sign-text:not(.example), .sign-image:not(.example)").remove();
  };
  this.removeAddedFields = function () {
    $(".party-field:not(.example)").remove();
    $(".field-fillable:not(.example)").remove();
  };
  this.reinitConfirmButton = function (e) {
    O(e);
  };
  function O(e) {
    $("#place-signature").off(
      "click",
      "#confirm-button, #confirm-button-with-certificate, #confirm-button-without-certificate"
    );
    $("#place-signature").on(
      "click",
      "#confirm-button, #confirm-button-with-certificate, #confirm-button-without-certificate",
      function () {
        e();
      }
    );
  }
  function R(e) {
    if ((e = e || window.event)) e.returnValue = "Sure?";
    return "Sure?";
  }
  function N() {
    $("#fields-interface").removeClass("hidden");
    $("#fields-editor-header-text").removeClass("hidden");
    $("#elements-interface")
      .removeClass("hidden")
      .find("button")
      .addClass("hidden");
    $(
      "#elements-interface #sign-label, #elements-interface #predefined-checkmark"
    ).removeClass("hidden");
  }
  $("#roles-modal").on("shown.bs.modal", function (e) {
    $("#roles-modal .form-group:not(.example) input").each(function () {
      if ("" == $(this).val()) {
        $(this).focus();
        return !1;
      }
    });
  });
  $(".change-type-signature-font").on("click", function () {
    var e = T.indexOf(P.fontFamily) + 1;
    if (e === T.length) e = 0;
    P.fontFamily = T[e];
    M();
  });
  $(".type-signature-minus").on("click", function () {
    P.fontSize -= 4;
    M();
  });
  $(".type-signature-plus").on("click", function () {
    P.fontSize += 4;
    M();
  });
  $(".type-signature-button").on("click touch", function () {
    P.mode = !0;
  });
  $(".editor-modal .nav-tabs a:not(.type-signature-button)").on(
    "click touch",
    function () {
      P.mode = !1;
      P.text = "";
    }
  );
  $(window).on("keypress", function (e) {
    if (P.mode) {
      if (0 !== e.which && !e.ctrlKey && !e.metaKey && !e.altKey) {
        $(e.target)
          .closest(".modal")
          .find("canvas")
          .removeClass("using-saved-signature");
        P.text += String.fromCharCode(e.keyCode);
      }
      M();
    }
  });
  $(window).on("keydown", function (e) {
    if (P.mode && 8 === e.keyCode && "" !== P.text) {
      e.preventDefault();
      P.text = P.text.slice(0, -1);
      M();
    }
  });
  function M() {
    if (P.mode)
      if (t)
        !(function (e) {
          var t = (e = $(e)[0]).getContext("2d");
          t.clearRect(0, 0, e.width, e.height);
          t.font = P.fontSize + "px " + P.fontFamily;
          t.fillStyle = P.color;
          t.textAlign = "center";
          t.fillText(P.text, e.width / 2, e.height / 2);
        })(t._canvas);
  }
  function B(e, t, i) {
    i = i || 0;
    if (e.length === i)
      return (function (e, t) {
        if ("initials" === t)
          e.forEach(function (e) {
            $("#field-initials-modal .saved-signatures").append(e);
            C += 1;
          });
        else {
          e.forEach(function (e) {
            $("#field-sign-modal .saved-signatures").prepend(e);
            $("#sign-modal .saved-signatures").prepend(e.clone());
            C += 1;
          });
          x = !0;
        }
      })(e, t);
    (n = "pdflitecosignpdfsignature" + e[i]),
      (function (n) {
        var r = getUniqueUserId() + USER_ID_SALT;
        n = CryptoJS.AES.decrypt(n, r).toString(CryptoJS.enc.Utf8);
        var a = $("<img>").attr("src", n),
          s = $('<div class="delete">x</div>'),
          o = $('<div class="saved-signature is-' + t + '">')
            .attr("data-id", i)
            .append(a)
            .append(s);
        e[i] = o;
        B(e, t, i + 1);
      })(localStorage[n]);
    var n;
  }
  function L(e, t, i) {
    c = t;
    var n = t.split("?")[0].split(".").pop();
    $("#editor-loading").show();
    if (
      "doc" === n ||
      "docx" === n ||
      "rtf" === n ||
      "xls" === n ||
      "xlsx" === n ||
      "ppt" === n ||
      "pptx" === n ||
      "csv" === n ||
      "txt" === n
    ) {
      $("#editor-converting").removeClass("hidden");
      docToPdf(t, function (e, t) {
        $("#editor-converting").addClass("hidden");
        U(e, t, !0);
      });
    } else U(e, t, i);
  }
  function U(e, t, n) {
    !(function (e, t) {
      a = e;
      i = t;
    })(e, t);
    z(a, i, n);
  }
  function z(e, n, o) {
    $(".pdf-preview-ifc button").attr("disabled", !0);
    a = e;
    i = n;
    s = n.split("?")[0].split(".").pop();
    $("#place-signature").slideDown(200, function () {
      $("#editor-loading").show();
      if ("pdf" === s) {
        showPdfInterface();
        var e = document.querySelector("#pdf-sign-preview");
        if (window.FileReader && !o && r)
          !(function (e) {
            var t = new FileReader();
            t.onload = function () {
              var t = new Uint8Array(this.result);
              p = t;
              H(t, e);
            };
            t.readAsArrayBuffer(r);
          })(e);
        else H(n, e);
      } else if ("jpg" === s || "png" === s || "jpeg" === s) {
        displayImageInterface();
        o
          ? (function (e) {
              q(e);
            })(n)
          : (function (e) {
              var t = new FileReader();
              t.onload = function (e) {
                g = e.target.result;
                q(e.target.result);
              };
              t.readAsDataURL(r);
            })();
      }
    });
    !(function () {
      var e = document.querySelector("#signature-canvas");
      document.querySelector("#field-signature-canvas"),
        document.querySelector("#field-initials-canvas");
      t = new SignaturePad(e);
    })();
  }
  this.showPlacedElements = function (e) {
    j(e);
  };
  function j(e) {
    if (placedElements) {
      if (placedElements.annotations && placedElements.annotations.length > 0)
        !(function (e, t) {
          $.each(e, function () {
            var e = checkPageContainer(s, n, this.pages + 1);
            elem = $(".sign-text-example").clone();
            e.append(elem);
            elem.removeClass("sign-text-example").addClass("sign-text");
            if ("true" != $("#changes-data").attr("data-editable") && !t) {
              e.find(".sign-text").addClass("uneditable");
              elem.find("textarea").prop("disabled", !0);
            }
            var i = this.color,
              r = this.fontName;
            elem
              .find("textarea")
              .html(this.text)
              .css({
                "font-family": r,
                color: i,
                "font-size":
                  (this.size / e.attr("data-viewport-height")) *
                    e.attr("data-height") +
                  "px",
                "line-height":
                  (this.size / e.attr("data-viewport-height")) *
                    e.attr("data-height") +
                  "px",
                width: "100%",
                height: "100%",
              });
            autosize(elem.find("textarea"));
            if ("#ffffff" === i) elem.css("background", "rgba(0, 0, 0, 0.3)");
            elem
              .css({
                top:
                  (this.y / e.attr("data-viewport-height")) *
                    e.attr("data-height") +
                  "px",
                left:
                  (this.x / e.attr("data-viewport-width")) *
                    e.attr("data-width") +
                  "px",
                width:
                  (this.width / e.attr("data-viewport-width")) *
                    e.attr("data-width") +
                  "px",
                height:
                  (this.height / e.attr("data-viewport-height")) *
                    e.attr("data-height") +
                  "px",
              })
              .attr("data-height", elem.outerHeight());
            if (!elem.hasClass("uneditable"))
              elem.draggable({ scroll: !0, containment: "parent" });
          });
          $(
            ".sign-text.uneditable .sign-ifc, .sign-text.uneditable .sign-ifc-bottom"
          ).remove();
        })(placedElements.annotations, e);
      if (placedElements.images && placedElements.images.length > 0)
        !(function (e, t) {
          $.each(e, function () {
            var e = this,
              i = checkPageContainer(s, n, e.pages + 1),
              r = $(".sign-image-example").clone();
            i.append(r);
            r.removeClass("sign-image-example").addClass("sign-image");
            if ("true" != $("#changes-data").attr("data-editable") && !t) {
              r.addClass("uneditable");
              r.find("textarea").prop("disabled", !0);
            }
            r.attr(
              "data-height",
              (e.height / i.attr("data-viewport-height")) *
                i.attr("data-height")
            );
            var a = r.find("img");
            saveImageSizes(e.image, a);
            var o = i.attr("data-viewport-height") / i.attr("data-height"),
              l = i.attr("data-viewport-width") / i.attr("data-width");
            a.attr({ src: e.image, some: "asd" }).on("load", function () {
              r.css({
                height: e.height / o + "px",
                width: e.width / l + "px",
                top: e.y / o + "px",
                left: e.x / l + "px",
              });
              if (!r.hasClass("uneditable"))
                r.draggable({ scroll: !0, containment: "parent" });
            });
          });
          $(".sign-image.uneditable .sign-ifc").remove();
        })(placedElements.images, e);
    }
  }
  function q(e) {
    $("#picture-preview")
      .attr("src", e)
      .on("load", function () {
        $("#editor-loading").slideUp(100, function () {
          $(".pdf-preview-ifc").show(0).removeClass("hidden");
          $(".drag-image-on-canvas").slideDown();
          X(function () {
            if (placedElements) j();
            if (u) unserializeFieldsForFilling(u, s, n, placedElements);
            displayFirstEditorPage(s);
            if (m) m();
          });
        });
      });
  }
  function H(e, t) {
    (n = new pdfViewer(e, t)).initPromise.then(function () {
      $(".total-pages")
        .html("/" + n.doc.numPages)
        .css("margin-left", $(".total-pages").outerWidth - 20 + "px");
      $(".pdf-page").css(
        "padding-right",
        $(".total-pages").outerWidth + 20 + "px"
      );
      n.renderPage(1, function () {
        $("#editor-loading").slideUp(100, function () {
          X(function () {
            if (placedElements) j();
            if (u) unserializeFieldsForFilling(u, s, n, placedElements);
            displayFirstEditorPage(s);
            if (m) m();
            o = setInterval(function () {
              if (x && C === k) {
                clearInterval(o);
                !(function () {
                  var e = $(
                    "#field-sign-modal .saved-signatures .saved-signature.is-signature:first img"
                  );
                  if (0 !== e.length) {
                    var t = $('.signature-field-fillable[data-email=""]');
                    if (0 !== t.length)
                      t.each(function (t, i) {
                        $(i).addClass("editing");
                        $(".modal")
                          .find("ul.nav li:first-child")
                          .removeClass("active");
                        ee(0, e[0]);
                      });
                  }
                })();
              }
            }, 100);
          });
        });
      });
    });
  }
  $("#sign-modal").on("show.bs.modal", G);
  $("#field-sign-modal").on("show.bs.modal", G);
  $("#field-initials-modal").on("show.bs.modal", G);
  $("#sign-modal").on("hide.bs.modal", W);
  $("#field-sign-modal").on("hide.bs.modal", W);
  $("#field-initials-modal").on("hide.bs.modal", W);
  function W() {
    $(".signature-field-fillable").removeClass("editing");
  }
  function G() {
    t.clear();
    var e = this,
      i = $(e).find("canvas");
    setTimeout(function () {
      if ($(e).find(".saved-signature").length > 0)
        $(e).find(".saved-tab").click();
      else if ("field-initials-modal" == $(e).attr("id"))
        $(e).find(".type-signature-button").click();
      else $(e).find(".draw-tab").click();
      i.attr("width", i.closest(".tab-content").width());
      if (i.attr("data-width-on-height")) {
        var t = i.attr("width") / i.attr("data-width-on-height");
        i.attr("height", t);
      } else i.attr("height", 0.5 * i.attr("width"));
    }, 300);
  }
  $("#label-modal").on("show.bs.modal", function (e) {
    $(this).find(".sign-text-input").val("");
  });
  function V(e, t) {
    $(".drag-image-on-canvas").prepend(
      "<div class='editor-page' id='editor-page-" + e + "'></div>"
    );
    var i = $("#editor-page-" + e);
    i.attr("data-page", e);
    n.doc.getPage(e).then(function (r) {
      var a = r.getViewport({ scale: 1 }),
        s = parseFloat(a.height),
        o = parseFloat(a.width);
      i.attr("data-viewport-height", s);
      i.attr("data-viewport-width", o);
      var l = s / o;
      i.attr("data-width", $(".drag-image-on-canvas").innerWidth());
      i.attr("data-height", $(".drag-image-on-canvas").innerWidth() * l);
      i.css("height", i.attr("data-height") + "px");
      if (e < n.doc.numPages) V(e + 1, t);
      else t();
    });
  }
  function X(e) {
    if ("jpg" === s || "png" === s || "jpeg" === s) {
      $(".drag-image-on-canvas").prepend(
        "<div class='editor-page' id='editor-page-1'></div>"
      );
      var t = $("#editor-page-1");
      t.attr("data-page", 1);
      saveImageSizes(
        $("#picture-preview").attr("src"),
        $("#picture-preview"),
        function () {
          t.attr(
            "data-viewport-width",
            $("#picture-preview").data("original-width")
          );
          t.attr(
            "data-viewport-height",
            $("#picture-preview").data("original-height")
          );
          var i =
            t.attr("data-viewport-height") / t.attr("data-viewport-width");
          t.attr("data-width", $(".drag-image-on-canvas").innerWidth());
          t.attr("data-height", $(".drag-image-on-canvas").innerWidth() * i);
          if (e) e();
        }
      );
    }
    if ("pdf" === s) V(1, e);
  }
  $("#sign-add").on("click touch", function () {
    K.call(this, t, $("#signature-canvas"));
  });
  function K(e, t, i) {
    if (
      $(this).closest(".modal").find("ul.nav li:first-child").hasClass("active")
    ) {
      $(this)
        .closest(".modal")
        .find("ul.nav li:first-child")
        .removeClass("active");
      return ee.call(
        $(this).closest(".modal").find(".saved-signature.using").find("img")[0]
      );
    }
    if (!isCanvasBlank(e._canvas)) {
      !(function (e) {

        ////PONER AQUI IMAGEN Y ID FIRMA

        var canvas = document.getElementById("signature-canvas");
        var context = canvas.getContext("2d");

        context.fillStyle = "black";
        context.font = "bold 9px Arial";

        console.log(canvas.height);

        for (

          var t = $(e).find("canvas")[0].getContext("2d"),


            i = t.getImageData(0, 0, t.canvas.width, t.canvas.height),
            n = i.data,
            r = { r: 255, g: 255, b: 255, a: 0 },
            a = t.getImageData(0, t.canvas.height - 1, 1, 1),
            s = { r: a.data[0], g: a.data[1], b: a.data[2], a: a.data[3] },
            o = 0,
            l = n.length;
          o < l;
          o += 4
        ) {
          var c = n[o],
            h = n[o + 1],
            u = n[o + 2],
            d = n[o + 3];
          if (Y(c, s.r, 5) && Y(h, s.g, 5) && Y(u, s.b, 5) && Y(d, s.a, 5)) {
            n[o] = r.r;
            n[o + 1] = r.g;
            n[o + 2] = r.b;
            n[o + 3] = r.a;
          }
        }
        t.clearRect(0, 0, t.canvas.width - 1, t.canvas.height - 1);
        t.putImageData(i, 0, 0);
      })($(this).closest(".modal"));
      if ($(t).hasClass("using-saved-signature")) {
        !(function (e, t) {
          var i = $(e).find("img").attr("src");
          te.call(
            $(e).closest(".saved-signature").find(".delete"),
            null,
            function () {
              saveSignature(i, t);
            }
          );
        })($(this).closest(".modal").find(".saved-signature.using")[0], i);
        $(t).removeClass("using-saved-signature");
      } else saveSignature(e.toDataURL(), i);
      var r = cropImageFromCanvas(
        $(this).closest(".modal").find("canvas")[0]
      ).full;
      $(".upload-signature-file").each(function () {
        $(this).val("");
      });
      if ("sign-add" == $(this).attr("id")) placeImage(r, w, s, n);
      else
        !(function (e) {
          $(".signature-field-fillable.editing")
            .removeClass("editing")
            .addClass("edited")
            .css("background", "rgba(0,255,0,0.1)")
            .find("img")
            .css({ width: "auto", height: "auto" })
            .attr("src", e)
            .on("load", function () {
              $(this).css({
                height: $(this).outerHeight() + "px",
                width: $(this).outerWidth() + "px",
              });
            });
          $(".modal").modal("hide");
        })(r);
    }
  }
  function Y(e, t, i) {
    return e < t + i / 2 && e > t - i / 2;
  }
  $("#place-signature").on("click", "#asdasd", function () {
    $(this)
      .find(".fa-search")
      .addClass("hidden")
      .siblings(".fa-spinner")
      .removeClass("hidden");
    $("#auto-search-fields").attr("disabled", !0);
    searchFieldsVisually(
      i,
      ["UnderlinedField", "Checkbox"],
      parseInt(checkPageContainer(s, n).attr("data-page")) - 1,
      A
    );
  });
  $("#place-signature").on("click", "#detect-file-fields", function () {
    $(this)
      .closest(".dropdown")
      .find(".fa-search")
      .addClass("hidden")
      .siblings(".fa-spinner")
      .removeClass("hidden");
    $(this)
      .closest(".dropdown")
      .find("#auto-search-fields")
      .attr("disabled", !0);
  });
  $("#place-signature").on("click", "#detect-fields-visually", function () {
    Z.call(this, ["UnderlinedField"]);
  });
  $("#place-signature").on("click", "#detect-checkbox-fields", function () {
    Z.call(this, ["Checkbox"]);
  });
  $("#place-signature").on(
    "click",
    "#confirm-button-without-certificate, #confirm-button-with-certificate",
    function () {
      initButtonLoading($("#confirm-button-with-certificate"));
    }
  );
  function Z(e) {
    $(this)
      .closest(".dropdown")
      .find(".fa-search")
      .addClass("hidden")
      .siblings(".fa-spinner")
      .removeClass("hidden");
    $(this)
      .closest(".dropdown")
      .find("#auto-search-fields")
      .attr("disabled", !0);
    searchFieldsVisually(
      i,
      e,
      parseInt(checkPageContainer(s, n).attr("data-page")) - 1,
      A
    );
  }
  $("#place-signature").on("click", "#remove-unassigned-fields", function () {
    $(".party-field:not(.example) .field-for").each(function () {
      if ("" === $(this).val()) $(this).closest(".party-field").remove();
    });
  });
  $("#upload-image").click(function () {
    $("#uploaded-image input").click();
  });
  $("#place-signature").on("click", ".add-role", function () {
    var e = $(this).closest(".party-field").find(".role-name").val();
    if (0 != e.length) _.push(e);
  });
  $("#roles-modal").on("click", "#new-role", function () {
    var e = $("#roles-modal .roles-list .form-group.example").clone();
    $("#roles-modal .roles-list").append(e);
    e.removeClass("hidden example").find("input").focus();
  });
  $("#roles-modal").on("click", "#remove-role", function () {
    if (1 == $("#roles-modal .roles-list .form-group:not(.example)").length)
      $("#roles-modal .roles-list .form-group:not(.example) input").val("");
    else
      $("#roles-modal .roles-list .form-group:not(.example)").last().remove();
  });
  $("#roles-modal").on("click", "#save-roles", function () {
    if (validateRolesUniqeness()) {
      $(this).closest(".modal").modal("hide");
      J();
    }
  });
  $("#place-signature").on(
    "click",
    "#manage-roles, .manage-roles",
    function () {
      $("#roles-modal .roles-list .form-group:not(.example) input").each(
        function () {
          $(this).attr("data-old-name", $(this).val());
        }
      );
    }
  );
  this.setRoles = function (e) {
    if (e)
      try {
        _ = JSON.parse(e).roles;
      } catch (t) {
        _ = e.roles;
      }
    else _ = [];
  };
  function J(e, t) {
    _ = [];
    $("#roles-modal .roles-list .form-group:not(.example)").each(function () {
      if (0 === $(this).find("input").val().trim().length) $(this).remove();
      else {
        name = $(this).find("input").val();
        _.push({
          name: escapeInput(name),
          oldName: $(this).find("input").attr("data-old-name"),
        });
      }
    });
    !(function (e, t) {
      $(".party-field:not(.example)").each(function () {
        var i = $(this).find(".field-for"),
          n = i.find("option:selected").val();
        i.find("option").remove();
        i.append($('<option value="">Choose party</option>'));
        i.val("");
        _.forEach(function (e, t) {
          $(i).append(
            $('<option value="' + e.name + '">' + e.name + "</option>")
          );
          if (
            e.name === n ||
            (e.oldName && e.oldName.length > 0 && e.oldName == n)
          )
            $(i).val(escapeInput(e.name));
          if (e.name === $(i).closest(".party-field").attr("data-role"))
            $(i).val(escapeInput(e.name));
        });
        assignField(i, e, t, !0);
      });
    })(e, t);
  }
  function Q(e) {
    var t = { roles: [] };
    $.each(e, function () {
      t.roles.push(this.name);
    });
    return t;
  }
  $("#assign-roles-modal").on("click", ".assign-me", function () {
    var e = $("#current-user-email").html(),
      t = $("#current-user-name").html();
    $("#assign-roles-modal .roles-list .form-group:not(.example)").each(
      function () {
        if ($(this).find(".email-input").val() == e) {
          $(this).find(".email-input").val("");
          $(this).find(".name-input").val("");
        }
      }
    );
    $(this).closest(".form-group").find(".email-input").val(e);
    $(this).closest(".form-group").find(".name-input").val(t);
  });
  $("#assign-roles").on("click", function () {
    _ = [];
    $("#assign-roles-modal .roles-list .form-group:not(.example)").each(
      function () {
        _.push({
          email: $(this).find(".email-input").val(),
          name: $(this).find(".name-input").val(),
          role: $(this).find(".role-name").html(),
        });
      }
    );
    placeAssignedRoles();
  });
  function ee(e, i) {
    if (!i) i = this;
    $(i).closest(".saved-signature").addClass("using");
    t.clear();
    var n = $(i).closest(".modal").find("canvas");
    n.addClass("using-saved-signature");
    saveImageSizes($(i).attr("src"), null, function (e, t) {
      var r = parseFloat(e) / t;
      if (r < parseFloat(n[0].width) / n[0].height)
        n[0].getContext("2d").drawImage(i, 0, 0, n[0].height * r, n[0].height);
      else n[0].getContext("2d").drawImage(i, 0, 0, n[0].width, n[0].width / r);
      $(i)
        .closest(".modal")
        .find("#sign-add, #field-sign-add, #field-initials-add")
        .click();
    });
  }
  function te(e, t) {
    if (
      "undefined" != typeof Storage &&
      localStorage.pdflitecosignpdfsignatureIds
    ) {
      if (e) e.preventDefault();
      if (!e || confirm("Do you really want to delete this signature?")) {
        var i = $(this).closest(".saved-signature").attr("data-id");
        if (!i || "" == i) return $(this).closest(".saved-signature").remove();
        $(this)
          .closest(".saved-signatures")
          .find(".saved-signature")
          .each(function () {
            if ($(this).attr("data-id") > i)
              $(this).attr("data-id", $(this).attr("data-id") - 1);
          });
        if ("field-initials-modal" == $(this).closest(".modal").attr("id"));
        $(this).closest(".saved-signature").remove();
        var n = JSON.parse(localStorage.pdflitecosignpdfsignatureIds),
          r = i,
          a = n[i];
        n.splice(r, 1);
        localStorage.setItem("pdflitecosignpdfsignatureIds", JSON.stringify(n));
        localStorage.removeItem("pdflitecosignpdfsignature" + a);
        t && t({});
      }
    }
  }
  $("canvas").on("mousedown touchstart", function () {
    $(this).removeClass("using-saved-signature");
  });
  $("#place-signature").on("click", ".text-field-fillable", function () {
    var e = $(this).find(".field-fillable-hint");
    $(e)
      .addClass("hidden")
      .closest(".text-field-fillable")
      .addClass("edited")
      .find("textarea")
      .focus();
  });
  $("#place-signature").on(
    "focus",
    ".text-field-fillable textarea",
    function () {
      $(this)
        .closest(".text-field-fillable")
        .addClass("edited")
        .find(".field-fillable-hint")
        .addClass("hidden");
    }
  );
  $("#uploaded-image").on("change", "input", function () {
    var e = document.querySelector("#uploaded-image input").files[0],
      t = $("#uploaded-image input"),
      i = new FileReader();
    i.addEventListener(
      "load",
      function () {
        placeImage(i.result, w, s, n);
        t.replaceWith(t.val("").clone(!0));
      },
      !1
    );
    if (e) i.readAsDataURL(e);
  });
  this.placeField = function (e) {
    !(function (e) {
      var t = e.constructor == Object,
        i = t ? checkPageContainer(s, n, e.page) : checkPageContainer(s, n),
        r = defineFieldType(e),
        a = defineFieldSubType(e);
      elem = $("." + r + "-field-created.example").clone();
      i.append(elem);
      $("#place-signature .last-added-object").removeClass("last-added-object");
      var o = $("[data-element-count]").length;
      elem
        .removeClass("example")
        .addClass("last-added-object")
        .attr({ "data-type": r, "data-element-count": o });
      if (a) {
        elem.attr({ "data-sub-type": a });
        elem.find(".field-caption").html(a + " field");
      }
      var c = i.attr("data-viewport-height") / i.attr("data-height"),
        h = i.attr("data-viewport-width") / i.attr("data-width");
      elem.css({
        left:
          (t ? e["@x"] / h : i.attr("data-width") / 2 - elem.outerWidth() / 2) +
          "px",
        height: (t ? e["@height"] / c : elem.outerHeight()) + "px",
        width: (t ? e["@width"] / h : elem.outerWidth()) + "px",
      });
      var u = countPlacedElementTopPosition(parseFloat(elem.css("height")));
      elem.css({ top: (t ? e["@y"] / c : u) + "px" });
      elem
        .find(".field-body")
        .css({
          width: elem.outerWidth() + "px",
          height: elem.outerHeight() + "px",
        });
      setFieldParties(elem, { parties: S, roles: _ }, l);
      setFieldInteractivity(elem, gridWidth);
      autoSizeText($(elem).find(".field-caption")[0]);
      if (t)
        elem
          .find("textarea")
          .css({
            "font-family": e["@fontName"],
            "font-size": e["@fontSize"] / c + "px",
          });
      showTip("Copy object");
    })(e);
  };
  this.assignField = function (e) {
    assignField(e);
  };
  $("#sign-label").click(function () {
    addTextLabel(checkPageContainer(s, n), w, gridWidth, I);
  });
  $("#label-change").click(function () {
    labelChange(this);
  });
  $(".predefined-image").click(function () {
    addPredefinedImage.call(this, checkPageContainer(s, n), w);
  });
  $(".signature-clear").click(function (e) {
    e.preventDefault();
    t.clear();
  });
  $(".pdf-prev-page").click(function () {
    $(".pdf-preview-ifc button").attr("disabled", !0);
    n.openPrevPage(function () {
      $(".pdf-preview-ifc button").removeAttr("disabled");
      $(".pdf-page").val(n.currPageNumber);
      ie(n.currPageNumber);
    });
  });
  $(".pdf-next-page").click(function () {
    $(".pdf-preview-ifc button").attr("disabled", !0);
    n.openNextPage(function () {
      $(".pdf-preview-ifc button").removeAttr("disabled");
      $(".pdf-page").val(n.currPageNumber);
      ie(n.currPageNumber);
    });
  });
  $(".pdf-page").keyup(function (e) {
    var t = parseFloat(parseInt($(this).val())),
      i = this;
    if (!isNaN(t) && isFinite(t)) {
      $(i).attr("disabled", !0);
      if (t !== n.currPageNumber)
        n.renderPage(t, function () {
          $(i).val(n.currPageNumber);
          ie(n.currPageNumber);
          $(i).removeAttr("disabled");
          $(i).focus();
        });
      else {
        $(i).removeAttr("disabled");
        $(i).focus();
      }
    }
  });
  function ie(e) {
    $(".editor-page").hide(0);
    $("#editor-page-" + e).show(0);
  }
  $("#place-signature").on("touchstart click", ".sign-plus", function () {
    var e = $(this).closest(".sign-image");
    if (
      !(
        1.1 * e.outerWidth() > $(".drag-image-on-canvas").outerWidth() ||
        1.1 * e.outerHeight() > $(".drag-image-on-canvas").outerHeight()
      )
    ) {
      var t = e.outerWidth(),
        i = e.outerHeight();
      e.css("width", 1.1 * t + "px");
      e.css("height", 1.1 * i + "px");
      e.attr("data-height", 0.9 * i + "px");
    }
  });
  $("#place-signature").on("touchstart click", ".sign-minus", function () {
    var e = $(this).closest(".sign-image"),
      t = e.outerWidth(),
      i = e.outerHeight();
    e.css("width", 0.9 * t + "px");
    e.css("height", 0.9 * i + "px");
    e.attr("data-height", 0.9 * i + "px");
  });
  $("#place-signature").on("touchstart click", ".sign-text-plus", function () {
    var e = $(this).closest(".sign-text").find("textarea"),
      t = parseInt(parseFloat(e.css("font-size").replace("px", "")) + 0.5);
    e.css("font-size", t + 1 + "px");
    e.css("line-height", t + 1 + "px");
    I = parseInt(e.css("font-size"));
    autosize.update(e);
    $(this)
      .closest(".sign-text")
      .css({ width: e.outerWidth() + "px", height: e.outerHeight() + "px" })
      .attr("data-height", $(this).closest(".sign-text").outerHeight());
  });
  $("#place-signature").on("touchstart click", ".sign-text-minus", function () {
    var e = $(this).closest(".sign-text").find("textarea"),
      t = parseInt(parseFloat(e.css("font-size").replace("px", "")) + 0.5);
    e.css("font-size", t - 1 + "px");
    e.css("line-height", t - 1 + "px");
    I = parseInt(e.css("font-size"));
    autosize.update(e);
    $(this)
      .closest(".sign-text")
      .css({ width: e.outerWidth() + "px", height: e.outerHeight() + "px" })
      .attr("data-height", $(this).closest(".sign-text").outerHeight());
  });
  $("#place-signature").on(
    "touchstart click",
    ".party-field-plus",
    function () {
      $(this)
        .closest(".field-body")
        .css({
          width:
            parseFloat($(this).closest(".field-body").css("width")) +
            gridWidth +
            "px",
          height:
            parseFloat($(this).closest(".field-body").css("height")) +
            gridWidth +
            "px",
        })
        .closest(".party-field")
        .css({
          width: $(this).closest(".field-body").css("width"),
          height: $(this).closest(".field-body").css("height"),
        });
      autoSizeText($(this).closest(".field-body").find(".field-caption"));
    }
  );
  $("#place-signature").on(
    "touchstart click",
    ".party-field-minus",
    function () {
      if (
        !(
          parseFloat($(this).closest(".field-body").css("height")) <
          2 * gridWidth
        )
      ) {
        $(this)
          .closest(".field-body")
          .css({
            width:
              parseFloat($(this).closest(".field-body").css("width")) -
              gridWidth +
              "px",
            height:
              parseFloat($(this).closest(".field-body").css("height")) -
              gridWidth +
              "px",
          })
          .closest(".party-field")
          .css({
            width: $(this).closest(".field-body").css("width"),
            height: $(this).closest(".field-body").css("height"),
          });
        autoSizeText($(this).closest(".field-body").find(".field-caption"));
      }
    }
  );
  $("#place-signature").on(
    "touchstart click",
    ".sign-ifc .delete",
    function (e) {
      $(this).closest(".party-field").remove();
      $(this).closest(".sign-text").remove();
      $(this).closest(".sign-ifc").parent().remove();
    }
  );
  $("#place-signature").on(
    "touchstart click",
    ".sign-ifc .copy-object",
    function (e) {
      var t = $(this).closest(".sign-image, .sign-text, .party-field");
      $("#place-signature .last-added-object").removeClass("last-added-object");
      var i = t.clone();
      i.addClass("last-added-object");
      if (
        parseFloat(t.css("top")) + 2 * t.outerHeight() + 10 >
        t.closest(".editor-page").attr("data-height")
      )
        i.css("top", parseFloat(t.css("top")) - t.outerHeight() - 10 + "px");
      else i.css("top", parseFloat(t.css("top")) + t.outerHeight() + 10 + "px");
      if (
        parseFloat(t.css("left")) + t.outerWidth() + 20 <
        t.closest(".editor-page").attr("data-width")
      )
        i.css("left", parseFloat(t.css("left")) + 20 + "px");
      else i.css("left", parseFloat(t.css("left")) - 20 + "px");
      i.attr("data-element-count", $("[data-element-count]").length);
      i.find("textarea").val(t.find("textarea").val());
      t.after(i);
      i.draggable({ scroll: !0, containment: "parent" });
      if (t.hasClass("party-field")) {
        i.find(".ui-resizable-handle").remove();
        i.find(".field-for")
          .val(t.find(".field-for").val())
          .on("change", function () {
            assignField(this);
          });
        i.find(".field-name").val("");
        i.find(".field-hint").val("");
        assignField(i.find(".field-for"));
        i.find("> div")
          .resizable({ grid: gridWidth })
          .on("resize", function () {
            resizeField(this);
          });
      }
      if (t.hasClass("sign-text")) {
        textarea = i.find("textarea");
        autosize(textarea);
        textarea.on("autosize:resized", adjustTextObjectFontSize);
      }
    }
  );
  $("#place-signature").on(
    "click",
    ".sign-image[data-change-state] img",
    function () {
      var e = this,
        t = $(e).closest(".sign-image"),
        i = t.attr("data-change-state");
      getDataUri(
        $('img[data-predefined-name="predefined-' + i + '"]').attr("src"),
        function (n) {
          $(e).attr("src", n);
          t.attr({
            "data-change-state": t.attr("data-state"),
            "data-state": i,
            "data-parse-state": 0 === t.attr("data-parse-state") ? 1 : 0,
          });
        }
      );
    }
  );
  $("#place-signature").on("click", "#sign-place", function () {
    if ($(".sign-image").length > 0 || $(".sign-text").length > 0) {
      $("#place-signature").slideUp();
      $("#progress-bar span").css("width", "0%");
      showProgressBar();
      re(ne, !0);
    }
  });
  $("#place-signature").on("click", ".signature-field-fillable", function () {
    $(this).addClass("editing");
    var e =
      parseFloat($(this).css("width")) / parseFloat($(this).css("height"));
    $("#field-signature-canvas").attr("data-width-on-height", e);
    $("#field-initials-canvas").attr("data-width-on-height", e);
  });
  $("#place-signature").on("click", ".checkbox-field-fillable", function () {
    !(function (e) {
      if ("unchecked" == $(e).attr("data-state"))
        $(e).attr("data-state", "checked");
      else $(e).attr("data-state", "unchecked");
      updateFillableCheckboxField(e);
    })(this);
  });
  $("#place-signature").on("blur", ".sign-text textarea", function () {
    if ("" === $(this).val().trim()) $(this).closest(".sign-text").remove();
  });
  $(".upload-signature-file").on("change", function () {
    $(this)
      .closest(".modal")
      .find("canvas")
      .removeClass("using-saved-signature");
    var e = $(this)[0].files[0],
      i = new FileReader();
    i.addEventListener(
      "load",
      function () {
        t.clear();
        var e = new Image(),
          n = t._canvas.getContext("2d");
        e.addEventListener("load", function () {
          drawImageOnCanvases(e, [n], { fit: !0 });
        });
        e.src = i.result;
      },
      !1
    );
    if (e) i.readAsDataURL(e);
  });
  $(window).on("scroll", function (e) {
    if ($(this).scrollTop() > $("#place-signature").offset().top) {
      $(".pdf-preview-ifc").addClass(
        "col-xs-12 col-sm-12 col-md-10 col-md-offset-1 col-lg-10 col-lg-offset-1"
      );
      $("#pdf-preview-ifc-body").addClass("container");
      $("#pdf-preview-ifc-content").addClass("row");
      $("#pdf-preview-ifc-wrapper").addClass("fixed-interface");
    } else {
      $(".pdf-preview-ifc").removeClass(
        "col-xs-12 col-sm-12 col-md-10 col-md-offset-1 col-lg-10 col-lg-offset-1"
      );
      $("#pdf-preview-ifc-body").removeClass("container");
      $("#pdf-preview-ifc-content").removeClass("row");
      $("#pdf-preview-ifc-wrapper").removeClass("fixed-interface");
    }
  });
  $("#place-signature").on("click", ".edit-text-object", function () {
    elem = $(this).closest(".sign-text").find("textarea");
    $(elem).closest(".sign-text").addClass("editing");
    $("#label-modal-change").modal("show");
    var e = $("#label-modal-change").find(".sign-text-input"),
      t = e.closest(".modal");
    e.val($(elem).val());
    e.css("color", $(elem).css("color"));
    t.find(".color-icon").css("color", $(elem).css("color"));
    t.find(".color").val(rgbToHex($(elem).css("color")));
    var i = $(elem)
      .css("font-family")
      .toLowerCase()
      .replace(/ /g, "-")
      .replace(/"/g, "");
    if (
      0 ==
      t.find(".font-family option").filter(function () {
        return $(this).text() === $(elem).css("font-family").replace(/"/g, "");
      }).length
    ) {
      var n = $("<option>").html($(elem).css("font-family")).val(i);
      t.find(".font-family").append(n);
    }
    t.find(".font-family").val(
      $(elem)
        .css("font-family")
        .toLowerCase()
        .replace(/ /g, "-")
        .replace(/"/g, "")
    );
    t.find(".sign-text-input").css("font-family", $(elem).css("font-family"));
    e.css("background", $(elem).closest(".sign-text").css("background"));
  });
  function ne(e, t) {
    b = [];
    $(t || ".sign-text").each(function () {
      var e = serializeTextObject(this);
      if (e) b.push(e);
    });
  }
  function re(e, t, i) {
    y = [];
    $(i || ".sign-image").each(function () {
      y.push(serializeImageObject(this, t));
    });
    //$(i || ".sign-image").each(function () {
    //  y.push(serializeImageObjectSello(this, t));
    //});
    if (t) oe(y, 0, e, i);
    else e(t, i);
  }
  function ae() {
    $(".field-fillable").each(function () {
      if ("text" === $(this).attr("data-type")) {
        if (!(e = serializeTextObject(this))) return;
        b.push(e);
      } else if (
        "signature" === $(this).attr("data-type") ||
        "checkbox" === $(this).attr("data-type")
      ) {
        var e;
        if (!(e = serializeImageObject(this))) return;
        y.push(e);
      }
    });
  }
  this.unserializeFieldsForFilling = function () {
    unserializeFieldsForFilling(u, s, n, placedElements);
  };
  function se() {
    var e = [];
    $.each(u, function () {
      if (this.party_email) {
        if (-1 === e.indexOf(this.party_email)) e.push(this.party_email);
        this.role = "Signer" + (e.indexOf(this.party_email) + 1);
      }
    });
  }
  function oe(e, t, i, n) {
    if (t < e.length)
      uploadFileWithPresignedUrl(
        e[t].image,
        function (n, r) {
          delete e[t].image;
          e[t].url = r;
          oe(e, t + 1, i);
        },
        "signImage.png",
        null,
        "image/png"
      );
    else {
      $("#progress-bar span").css("width", "50%");
      i(!0, n);
    }
  }
  function le() {
    $(this)
      .closest(".modal")
      .find(".sign-text-input")
      .css("font-family", $(this).find("option:selected").text());
  }
  function ce() {
    $(this)
      .closest(".modal")
      .find(".sign-text-input")
      .css("color", $(this).find("option:selected").val());
    if ("#ffffff" == $(this).find("option:selected").val())
      $(this)
        .closest(".modal")
        .find(".sign-text-input")
        .css("background", "rgba(0, 0, 0, 0.2)");
    else
      $(this)
        .closest(".modal")
        .find(".sign-text-input")
        .css("background", "white");
    $(this)
      .closest(".modal")
      .find(".color-icon")
      .css("color", $(this).find("option:selected").val());
  }
  $("#pdfEditor").on("click", ".generate-date", function () {
    var e = new Date(),
      t = e.toDateString().split(" "),
      i =
        t[1] +
        " " +
        t[2] +
        ", " +
        t[3] +
        ", " +
        e.toLocaleTimeString("en-US", {
          hour12: !0,
          hour: "numeric",
          minute: "numeric",
        }),
      n = $(this).closest(".editor-modal").find(".sign-text-input");
    n.val(n.val() + " " + i);
  });
  $("#place-signature").ready(function () {
    $(".font-family").on("change", le);
    $(".color").on("change", ce);
    setProgressBar($("#inputFile"));
    convertWithUrl();
    if (0 !== $("#document-list").length) hideInfoBlocks();
  });
  $("#label-modal, #label-modal-change").on("shown.bs.modal", function () {
    $(this).find('input[type="text"]').first().focus();
  });
  $("#place-signature").on("click", "#invite-open", function () {
    $(".invite-buttons").toggle();
    $("#sign-place").toggle();
    $(this).find(".fa-caret-up, .fa-caret-down").toggle();
  });
  $("#invite-list, #roles-modal").on("keyup", "[data-enter]", function (e) {
    if (13 === e.keyCode && "" !== $(this).val().trim()) {
      var t = $(this).attr("data-enter");
      if (
        "" === $(this).closest(".form-group").next(".form-group").find(t).val()
      )
        $(this)
          .closest(".form-group")
          .next(".form-group")
          .find(t)
          .val()
          .click();
      else $(t).click();
      if ($(this).attr("data-enter-focus"))
        $($(this).attr("data-enter-focus")).each(function () {
          if ("" === $(this).val()) {
            $(this).focus();
            return !1;
          }
        });
    }
  });
  $("#roles-modal, #invite-list").on("keyup", "[data-backspace]", function (e) {
    if (8 !== e.keyCode || 0 !== $(this).val().length)
      return $(this).attr("data-count-backspace", 0);
    $(this).attr(
      "data-count-backspace",
      parseInt($(this).attr("data-count-backspace") || 0) + 1
    );
    if (2 === $(this).attr("data-count-backspace")) {
      $(this).attr("data-count-backspace", 0);
      var t = $(this).attr("data-backspace");
      $(t).click();
      if ($(this).attr("data-backspace-focus"))
        $($(this).attr("data-backspace-focus")).last().focus();
    }
  });
  this.enableCertificateChoose = function () {
    enableCertificateChoose();
  };
  this.disableCertificateChoose = function () {
    disableCertificateChoose();
  };

    


  this.sendCreateDocumentData = function (e) {
    removeEmptyTextObjects(l);
    if (!validateDataPresent(l))
      return alert("Debe agregar al menos un elemento al documento");
    if (!validateAllFieldsAssigned())
      return alert(
        "You need to assign all RED fields and signature boxes to a selected party first."
      );
    if (!validateFieldNamesUniqueness())
      return alert("Field names must be unique");
    if (validateAllPartiesAssigned(S)) {
      this.unlockWindow();
      preventEditing();
      initButtonLoading($("#confirm-button"));
      initButtonLoading($("#choose-proceed-type"));
      re(function () {
        ne();
        h = serializeFields(l);
        !(function () {
          if (!S || 0 === S.length) {
            S = [];
            _.forEach(function (e) {
              S.push({ email: e.email, name: e.name });
            });
          }
        })();
        ae();
        !(function (e) {
          $("#progress-bar span").css("width", "75%");
          if (
            this.event &&
            "confirm-button-without-certificate" ===
              $(this.event.target).attr("id")
          )
            var t = !0;
          var n = {
            document: {
              unconverted_file_url: c,
              original_file_url: i,
              emails: JSON.stringify(S),
              invitation_mode: F,
              opened_for_parties: !0,
              hide_signatures: !1,
              fields: JSON.stringify(h),
              dont_include_certificate: t,
              filename: $("#document-name").val() + "." + s,
              created_from: v || "upload",
              master_content: {},
              template_id: $("#document_template_id").val(),
              isSign: !0,
            },
          };
          if (y.length > 0) n.document.master_content.images = y;
          if (b.length > 0) n.document.master_content.annotations = b;
          if ($(".subject-input").val().length > 0)
            n.document.subject = $(".subject-input").val();
          if ($(".message-input").val().length > 0)
            n.document.message = $(".message-input").val();
          if (
            getParameterByName("copied_user_file_token", window.location.href)
          )
            n.document.copied_user_file_token = getParameterByName(
              "copied_user_file_token",
              window.location.href
            );
          if ($("#created-from-id").html().trim().length > 0)
            n.document.created_from_id = $("#created-from-id").html().trim();
          const r = n.document.master_content;
          n.document.master_content = JSON.stringify(n.document.master_content);
          let a;
          if (p) a = modifyPdfBytes(p, r);
          else {
            var o = $("#editor-page-1");
            const e =
                parseFloat(o.attr("data-viewport-width")) /
                parseFloat(o.attr("data-width")),
              t =
                parseFloat(o.attr("data-viewport-height")) /
                parseFloat(o.attr("data-height")),
              i = $("#picture-preview").width() * e,
              n = $("#picture-preview").height() * t;
            a = convertImageToPdfBytes(g, i, n, r);
          }
          a.then(function (e) {
            var t = new Date(),
              i = `${t.getDate()}-${t.toLocaleString("default", {
                month: "short",
              })}-${t.getFullYear()}-${t.getHours()}-${t.getMinutes()}`;
            !(function (e, t) {
              var reader = new window.FileReader();
              var blob =  new Blob([t], { type: "application/pdf" });
              reader.readAsDataURL(blob);
               reader.onloadend = function () {
              base64data = reader.result;
              console.log(base64data);

             DocumentoFirmado = base64data;
             console.log('Haciendo click');
                   document.getElementById('btnGuardarDocumento').click();
               }

              //var i = document.createElement("a");
             // i.href = window.URL.createObjectURL(
              //  new Blob([t], { type: "application/pdf" })
             // );
              //i.download = e;
             // i.click();
            })(
              //`${
              //  $("#inputFile").val().split("\\").pop().split(".")[0]
              //}-signed-${i}.pdf`,
              `Document-Signed_${i}.pdf`,
              e
            );
            enableEditing();
          }).catch(function (e) {
            enableEditing();
          });
        })();
      });
    }
  };
  this.sendRolesData = function (e) {
    if (!validateAllFieldsAssigned())
      return alert(
        "You need to assign all RED fields and signature boxes to a selected party first."
      );
    if (!validateFieldNamesUniqueness())
      return alert("Field names must be unique");
    this.unlockWindow();
    preventEditing();
    initButtonLoading($("#confirm-button"));
    re(function () {
      h = serializeFields(l);
      ne();
      !(function (e) {
        var t = "/t/" + f,
          i = {
            document_template: {
              fields: JSON.stringify(h),
              roles: JSON.stringify(Q(_)),
              master_content: {},
            },
          };
        if (y.length > 0) i.document_template.master_content.images = y;
        if (b.length > 0) i.document_template.master_content.annotations = b;
        i.document_template.master_content = JSON.stringify(
          i.document_template.master_content
        );
        standardAjaxQuery(t, "PUT", JSON.stringify(i));
      })();
    });
  };
  function he() {
    var e = d || "/invite/" + $("#changes-data").attr("data-token");
    $("#progress-bar span").css("width", "75%");
    var t = { change: { content: {} } };
    if (y.length > 0) t.change.content.images = y;
    if (b.length > 0) t.change.content.annotations = b;
    t.change.content = JSON.stringify(t.change.content);
    standardAjaxQuery(e, "PUT", JSON.stringify(t));
  }
  $(document).on("click", ".color-picker", function (e) {
    e.preventDefault();
    var i = $(this).css("background-color");
    if (t) t.penColor = i;
    P.color = i;
    M();
  });
  $("#place-signature").on(
    "click",
    "#sign-place-fill_fields, #sign-place-invite",
    function () {
      if (!validateAllFieldsFilled())
        return alert("You have to fill all RED fields to proceed");
      A.unlockWindow();
      preventEditing();
      initButtonLoading($(this));
      ue(he, !1, ".my-invited-change");
    }
  );
  $("#place-signature").on("click", "#return-to-editing", function () {
    $("#agreement").addClass("hidden");
    $("#pdf-preview-ifc-wrapper").removeClass("hidden");
  });
  $("#place-signature").on("click", "#open-agreement", function () {
    if (!validateAllFieldsFilled())
      return alert("You have to fill all RED fields to proceed");
    $("#agreement").removeClass("hidden");
    $("#pdf-preview-ifc-wrapper").addClass("hidden");
  });
  $("#place-signature").on(
    "click",
    ".checkbox-field-created:not(.uneditable) .checkbox-field-image, .checkbox-field-created:not(.uneditable) .field-caption",
    function () {
      var e = $(this).closest(".checkbox-field-created");
      if ("unchecked" === e.attr("data-state")) e.attr("data-state", "checked");
      else e.attr("data-state", "unchecked");
      updateCheckboxFieldState(e);
    }
  );
  function ue(e, t, i) {
    re(
      function () {
        ne(0, ".sign-text" + (i ? i : ""));
        ae();
        e({ images: y, annotations: b });
      },
      t,
      ".sign-image" + (i ? i : "")
    );
  }
};
function addTextLabel(e, t, i, n) {
  elem = $(".sign-text-example").clone();
  e.append(elem);
  elem.removeClass("sign-text-example").addClass("sign-text");
  if (t) elem.addClass("my-invited-change");
  var r = $("#label-modal-change").find(".color").val(),
    a = $("#label-modal-change").find(".font-family option:selected").text(),
    s = elem.find("textarea"),
    o = $("[data-element-count]").length;
  s.css({
    "font-family": a,
    color: r,
    "font-size": n + "px",
    "line-height": n + "px",
    height: n + "px",
    width: 2 * n + "px",
  }).attr({ cols: s.val().length, rows: 1 });
  if ("#ffffff" === r) elem.css("background", "rgba(0, 0, 0, 0.3)");
  elem.css("left", e.attr("data-width") / 2 - elem.outerWidth() / 2 + "px");
  elem.css({ height: s.outerHeight(), width: s.outerWidth() });
  var l = countPlacedElementTopPosition(parseFloat(elem.css("height")));
  elem.css("top", l + "px");
  elem.attr({
    "data-height": elem.outerHeight(),
    "data-previous-height": elem.outerHeight(),
    "data-element-count": o,
    "data-transparent": $("#label-transparency").is(":checked"),
  });
  elem.draggable({ scroll: !0, containment: "parent" });
  elem.find(".sign-text-body");
  autosize(s);
  s.on("autosize:resized", adjustTextObjectFontSize)
    .on("keyup", trimTextObjectWidth)
    .focus();
  $(".modal").modal("hide");
  showTip("Copy object");
}
function addPredefinedImage(e, t) {
  var i = $(".sign-image-example").clone();
  e.append(i);
  $("#place-signature .last-added-object").removeClass("last-added-object");
  i.removeClass("sign-image-example")
    .addClass("sign-image last-added-object")
    .css({ width: "46px", visibility: "hidden" });
  if (t) i.addClass("my-invited-change");
  var n = i.find("img"),
    r = $(this).attr("id").split("-")[$(this).attr("id").split("-").length - 1],
    a = $("[data-element-count]").length;
  i.attr({
    "data-parse-state": 1,
    "data-box-type": r,
    "data-element-count": a,
  });
  assignChangedState(i, r);
  getDataUri(
    $('img[data-predefined-name="' + $(this).attr("id") + '"]').attr("src"),
    function (t) {
      n.attr("src", t).on("load", function () {
        i.css("height", i.outerHeight());
        i.css({
          top: e.attr("data-height") / 2 - i.outerHeight() / 2 + "px",
          left: e.attr("data-width") / 2 - i.outerWidth() / 2 + "px",
          visibility: "visible",
        });
        var t = countPlacedElementTopPosition(parseFloat(i.css("height")));
        i.css("top", t + "px");
        $(this).off("load");
      });
      i.draggable({ scroll: !0, containment: "parent" });
    }
  );
  showTip("Copy object");
}
function assignChangedState(e, t) {
  e.attr("data-state", t);
  if ("checkmark" === t || "crossmark" === t)
    e.attr("data-change-state", "empty");
  else if ("radio" === t) e.attr("data-change-state", "empty-radio");
}
function labelChange(e) {
  var t = $(".sign-text.editing"),
    i = $(e).closest(".modal").find(".sign-text-input"),
    n = $(e).closest(".modal").find(".color").val(),
    r = $(e).closest(".modal").find(".font-family option:selected").text();
  t.find("textarea").val(i.val()).css({ "font-family": r, color: n });
  autosize.update(t.find("textarea"));
  i.val("");
  if ("#ffffff" == n) t.css("background", "rgba(0, 0, 0, 0.3)");
  t.attr(
    "data-transparent",
    $(e).closest(".modal").find("#label-transparency").is(":checked")
  );
  t.removeClass("editing");
  $(".modal").modal("hide");
}
function placeImage(e, t, i, n) {
  var r = checkPageContainer(i, n),
    a = $(".sign-image-example").clone();
  r.append(a);
  $("#place-signature .last-added-object").removeClass("last-added-object");
  a.removeClass("sign-image-example").addClass("sign-image last-added-object");
  if (t) a.addClass("my-invited-change");
  var s = a.find("img"),
    o = $("[data-element-count]").length;
  saveImageSizes(e, s);
  s.attr({ src: e }).on("load", function () {
    a.css({ height: a.outerHeight(), width: a.outerWidth() });
    a.css("left", r.attr("data-width") / 2 - a.outerWidth() / 2 + "px");
    var e = countPlacedElementTopPosition(parseFloat(a.css("height")));
    a.css("top", e + "px");
  });
  a.draggable({ scroll: !0, containment: "parent" }).attr({
    "data-element-count": o,
  });
  $(".modal").modal("hide");
  showTip("Copy object");
}
function showTip(e) {
  var t = $('.fixed-tips .fixed-tip[data-name="' + e + '"]');
  if (!0 !== t.attr("data-shown")) t.removeClass("hidden");
}
function hideTip() {
  $(this).closest(".fixed-tip").addClass("hidden");
  $(this).closest(".fixed-tip").attr("data-shown", "true");
}
$(document).on("click", ".fixed-tips .fixed-tip .close", hideTip);
!(function (e, t) {
  if ("object" == typeof exports && "object" == typeof module)
    module.exports = t();
  else if ("function" == typeof define && define.amd)
    define("pdfjs-dist/build/pdf", [], t);
  else if ("object" == typeof exports) exports["pdfjs-dist/build/pdf"] = t();
  else e["pdfjs-dist/build/pdf"] = e.pdfjsLib = t();
})(this, function () {
  return (() => {
    "use strict";
    var __webpack_modules__ = [
        (e, t, i) => {
          Object.defineProperty(t, "__esModule", { value: !0 });
          Object.defineProperty(t, "addLinkAttributes", {
            enumerable: !0,
            get: function () {
              return n.addLinkAttributes;
            },
          });
          Object.defineProperty(t, "getFilenameFromUrl", {
            enumerable: !0,
            get: function () {
              return n.getFilenameFromUrl;
            },
          });
          Object.defineProperty(t, "LinkTarget", {
            enumerable: !0,
            get: function () {
              return n.LinkTarget;
            },
          });
          Object.defineProperty(t, "loadScript", {
            enumerable: !0,
            get: function () {
              return n.loadScript;
            },
          });
          Object.defineProperty(t, "PDFDateString", {
            enumerable: !0,
            get: function () {
              return n.PDFDateString;
            },
          });
          Object.defineProperty(t, "RenderingCancelledException", {
            enumerable: !0,
            get: function () {
              return n.RenderingCancelledException;
            },
          });
          Object.defineProperty(t, "build", {
            enumerable: !0,
            get: function () {
              return r.build;
            },
          });
          Object.defineProperty(t, "getDocument", {
            enumerable: !0,
            get: function () {
              return r.getDocument;
            },
          });
          Object.defineProperty(t, "LoopbackPort", {
            enumerable: !0,
            get: function () {
              return r.LoopbackPort;
            },
          });
          Object.defineProperty(t, "PDFDataRangeTransport", {
            enumerable: !0,
            get: function () {
              return r.PDFDataRangeTransport;
            },
          });
          Object.defineProperty(t, "PDFWorker", {
            enumerable: !0,
            get: function () {
              return r.PDFWorker;
            },
          });
          Object.defineProperty(t, "version", {
            enumerable: !0,
            get: function () {
              return r.version;
            },
          });
          Object.defineProperty(t, "CMapCompressionType", {
            enumerable: !0,
            get: function () {
              return a.CMapCompressionType;
            },
          });
          Object.defineProperty(t, "createObjectURL", {
            enumerable: !0,
            get: function () {
              return a.createObjectURL;
            },
          });
          Object.defineProperty(t, "createPromiseCapability", {
            enumerable: !0,
            get: function () {
              return a.createPromiseCapability;
            },
          });
          Object.defineProperty(t, "createValidAbsoluteUrl", {
            enumerable: !0,
            get: function () {
              return a.createValidAbsoluteUrl;
            },
          });
          Object.defineProperty(t, "InvalidPDFException", {
            enumerable: !0,
            get: function () {
              return a.InvalidPDFException;
            },
          });
          Object.defineProperty(t, "MissingPDFException", {
            enumerable: !0,
            get: function () {
              return a.MissingPDFException;
            },
          });
          Object.defineProperty(t, "OPS", {
            enumerable: !0,
            get: function () {
              return a.OPS;
            },
          });
          Object.defineProperty(t, "PasswordResponses", {
            enumerable: !0,
            get: function () {
              return a.PasswordResponses;
            },
          });
          Object.defineProperty(t, "PermissionFlag", {
            enumerable: !0,
            get: function () {
              return a.PermissionFlag;
            },
          });
          Object.defineProperty(t, "removeNullCharacters", {
            enumerable: !0,
            get: function () {
              return a.removeNullCharacters;
            },
          });
          Object.defineProperty(t, "shadow", {
            enumerable: !0,
            get: function () {
              return a.shadow;
            },
          });
          Object.defineProperty(t, "UnexpectedResponseException", {
            enumerable: !0,
            get: function () {
              return a.UnexpectedResponseException;
            },
          });
          Object.defineProperty(t, "UNSUPPORTED_FEATURES", {
            enumerable: !0,
            get: function () {
              return a.UNSUPPORTED_FEATURES;
            },
          });
          Object.defineProperty(t, "Util", {
            enumerable: !0,
            get: function () {
              return a.Util;
            },
          });
          Object.defineProperty(t, "VerbosityLevel", {
            enumerable: !0,
            get: function () {
              return a.VerbosityLevel;
            },
          });
          Object.defineProperty(t, "AnnotationLayer", {
            enumerable: !0,
            get: function () {
              return s.AnnotationLayer;
            },
          });
          Object.defineProperty(t, "apiCompatibilityParams", {
            enumerable: !0,
            get: function () {
              return o.apiCompatibilityParams;
            },
          });
          Object.defineProperty(t, "GlobalWorkerOptions", {
            enumerable: !0,
            get: function () {
              return l.GlobalWorkerOptions;
            },
          });
          Object.defineProperty(t, "renderTextLayer", {
            enumerable: !0,
            get: function () {
              return c.renderTextLayer;
            },
          });
          Object.defineProperty(t, "SVGGraphics", {
            enumerable: !0,
            get: function () {
              return h.SVGGraphics;
            },
          });
          var n = i(1),
            r = i(5),
            a = i(2),
            s = i(19),
            o = i(9),
            l = i(12),
            c = i(21),
            h = i(22);
          {
            const { isNodeJS: e } = i(4);
            if (e) {
              const e = i(23).PDFNodeStream;
              (0, r.setPDFNetworkStreamFactory)((t) => new e(t));
            } else {
              const e = i(26).PDFNetworkStream;
              let t;
              if ((0, n.isFetchSupported)()) t = i(27).PDFFetchStream;
              (0, r.setPDFNetworkStreamFactory)((i) => {
                if (t && (0, n.isValidFetchUrl)(i.url)) return new t(i);
                else return new e(i);
              });
            }
          }
        },
        (e, t, i) => {
          Object.defineProperty(t, "__esModule", { value: !0 });
          t.addLinkAttributes = function (
            e,
            { url: t, target: i, rel: a, enabled: s = !0 } = {}
          ) {
            (0, n.assert)(
              t && "string" == typeof t,
              'addLinkAttributes: A valid "url" parameter must provided.'
            );
            const o = (0, n.removeNullCharacters)(t);
            if (s) e.href = e.title = o;
            else {
              e.href = "";
              e.title = `Disabled: ${o}`;
              e.onclick = () => !1;
            }
            let l = "";
            switch (i) {
              case h.NONE:
                break;
              case h.SELF:
                l = "_self";
                break;
              case h.BLANK:
                l = "_blank";
                break;
              case h.PARENT:
                l = "_parent";
                break;
              case h.TOP:
                l = "_top";
            }
            e.target = l;
            e.rel = "string" == typeof a ? a : r;
          };
          t.deprecated = function (e) {};
          t.getFilenameFromUrl = function (e) {
            const t = e.indexOf("#"),
              i = e.indexOf("?"),
              n = Math.min(t > 0 ? t : e.length, i > 0 ? i : e.length);
            return e.substring(e.lastIndexOf("/", n) + 1, n);
          };
          t.isFetchSupported = u;
          t.isValidFetchUrl = d;
          t.loadScript = function (e, t = !1) {
            return new Promise((i, n) => {
              const r = document.createElement("script");
              r.src = e;
              r.onload = function (e) {
                if (t) r.remove();
                i(e);
              };
              r.onerror = function () {
                n(new Error(`Cannot load script at: ${r.src}`));
              };
              (document.head || document.documentElement).appendChild(r);
            });
          };
          t.StatTimer =
            t.RenderingCancelledException =
            t.PDFDateString =
            t.PageViewport =
            t.LinkTarget =
            t.DOMSVGFactory =
            t.DOMCMapReaderFactory =
            t.DOMCanvasFactory =
            t.DEFAULT_LINK_REL =
            t.BaseCMapReaderFactory =
            t.BaseCanvasFactory =
              void 0;
          var n = i(2);
          const r = "noopener noreferrer nofollow";
          t.DEFAULT_LINK_REL = r;
          const a = "http://www.w3.org/2000/svg";
          class s {
            constructor() {
              if (this.constructor === s)
                (0, n.unreachable)("Cannot initialize BaseCanvasFactory.");
            }
            create(e, t) {
              (0, n.unreachable)("Abstract method `create` called.");
            }
            reset(e, t, i) {
              if (!e.canvas) throw new Error("Canvas is not specified");
              if (t <= 0 || i <= 0) throw new Error("Invalid canvas size");
              e.canvas.width = t;
              e.canvas.height = i;
            }
            destroy(e) {
              if (!e.canvas) throw new Error("Canvas is not specified");
              e.canvas.width = 0;
              e.canvas.height = 0;
              e.canvas = null;
              e.context = null;
            }
          }
          t.BaseCanvasFactory = s;
          t.DOMCanvasFactory = class extends s {
            constructor({ ownerDocument: e = globalThis.document } = {}) {
              super();
              this._document = e;
            }
            create(e, t) {
              if (e <= 0 || t <= 0) throw new Error("Invalid canvas size");
              const i = this._document.createElement("canvas"),
                n = i.getContext("2d");
              i.width = e;
              i.height = t;
              return { canvas: i, context: n };
            }
          };
          class o {
            constructor({ baseUrl: e = null, isCompressed: t = !1 }) {
              if (this.constructor === o)
                (0, n.unreachable)("Cannot initialize BaseCMapReaderFactory.");
              this.baseUrl = e;
              this.isCompressed = t;
            }
            async fetch({ name: e }) {
              if (!this.baseUrl)
                throw new Error(
                  'The CMap "baseUrl" parameter must be specified, ensure that the "cMapUrl" and "cMapPacked" API parameters are provided.'
                );
              if (!e) throw new Error("CMap name must be specified.");
              const t = this.baseUrl + e + (this.isCompressed ? ".bcmap" : ""),
                i = this.isCompressed
                  ? n.CMapCompressionType.BINARY
                  : n.CMapCompressionType.NONE;
              return this._fetchData(t, i).catch((e) => {
                throw new Error(
                  `Unable to load ${
                    this.isCompressed ? "binary " : ""
                  }CMap at: ${t}`
                );
              });
            }
            _fetchData(e, t) {
              (0, n.unreachable)("Abstract method `_fetchData` called.");
            }
          }
          t.BaseCMapReaderFactory = o;
          t.DOMCMapReaderFactory = class extends o {
            _fetchData(e, t) {
              if (u() && d(e, document.baseURI))
                return fetch(e).then(async (e) => {
                  if (!e.ok) throw new Error(e.statusText);
                  let i;
                  if (this.isCompressed)
                    i = new Uint8Array(await e.arrayBuffer());
                  else i = (0, n.stringToBytes)(await e.text());
                  return { cMapData: i, compressionType: t };
                });
              else
                return new Promise((i, r) => {
                  const a = new XMLHttpRequest();
                  a.open("GET", e, !0);
                  if (this.isCompressed) a.responseType = "arraybuffer";
                  a.onreadystatechange = () => {
                    if (a.readyState === XMLHttpRequest.DONE) {
                      if (200 === a.status || 0 === a.status) {
                        let e;
                        if (this.isCompressed && a.response)
                          e = new Uint8Array(a.response);
                        else if (!this.isCompressed && a.responseText)
                          e = (0, n.stringToBytes)(a.responseText);
                        if (e) {
                          i({ cMapData: e, compressionType: t });
                          return;
                        }
                      }
                      r(new Error(a.statusText));
                    }
                  };
                  a.send(null);
                });
            }
          };
          t.DOMSVGFactory = class {
            create(e, t) {
              (0, n.assert)(e > 0 && t > 0, "Invalid SVG dimensions");
              const i = document.createElementNS(a, "svg:svg");
              i.setAttribute("version", "1.1");
              i.setAttribute("width", e + "px");
              i.setAttribute("height", t + "px");
              i.setAttribute("preserveAspectRatio", "none");
              i.setAttribute("viewBox", "0 0 " + e + " " + t);
              return i;
            }
            createElement(e) {
              (0, n.assert)("string" == typeof e, "Invalid SVG element type");
              return document.createElementNS(a, e);
            }
          };
          class l {
            constructor({
              viewBox: e,
              scale: t,
              rotation: i,
              offsetX: n = 0,
              offsetY: r = 0,
              dontFlip: a = !1,
            }) {
              this.viewBox = e;
              this.scale = t;
              this.rotation = i;
              this.offsetX = n;
              this.offsetY = r;
              const s = (e[2] + e[0]) / 2,
                o = (e[3] + e[1]) / 2;
              let l, c, h, u, d, f, p, g;
              switch ((i = (i %= 360) < 0 ? i + 360 : i)) {
                case 180:
                  l = -1;
                  c = 0;
                  h = 0;
                  u = 1;
                  break;
                case 90:
                  l = 0;
                  c = 1;
                  h = 1;
                  u = 0;
                  break;
                case 270:
                  l = 0;
                  c = -1;
                  h = -1;
                  u = 0;
                  break;
                case 0:
                  l = 1;
                  c = 0;
                  h = 0;
                  u = -1;
                  break;
                default:
                  throw new Error(
                    "PageViewport: Invalid rotation, must be a multiple of 90 degrees."
                  );
              }
              if (a) {
                h = -h;
                u = -u;
              }
              if (0 === l) {
                d = Math.abs(o - e[1]) * t + n;
                f = Math.abs(s - e[0]) * t + r;
                p = Math.abs(e[3] - e[1]) * t;
                g = Math.abs(e[2] - e[0]) * t;
              } else {
                d = Math.abs(s - e[0]) * t + n;
                f = Math.abs(o - e[1]) * t + r;
                p = Math.abs(e[2] - e[0]) * t;
                g = Math.abs(e[3] - e[1]) * t;
              }
              this.transform = [
                l * t,
                c * t,
                h * t,
                u * t,
                d - l * t * s - h * t * o,
                f - c * t * s - u * t * o,
              ];
              this.width = p;
              this.height = g;
            }
            clone({
              scale: e = this.scale,
              rotation: t = this.rotation,
              offsetX: i = this.offsetX,
              offsetY: n = this.offsetY,
              dontFlip: r = !1,
            } = {}) {
              return new l({
                viewBox: this.viewBox.slice(),
                scale: e,
                rotation: t,
                offsetX: i,
                offsetY: n,
                dontFlip: r,
              });
            }
            convertToViewportPoint(e, t) {
              return n.Util.applyTransform([e, t], this.transform);
            }
            convertToViewportRectangle(e) {
              const t = n.Util.applyTransform([e[0], e[1]], this.transform),
                i = n.Util.applyTransform([e[2], e[3]], this.transform);
              return [t[0], t[1], i[0], i[1]];
            }
            convertToPdfPoint(e, t) {
              return n.Util.applyInverseTransform([e, t], this.transform);
            }
          }
          t.PageViewport = l;
          class c extends n.BaseException {
            constructor(e, t) {
              super(e);
              this.type = t;
            }
          }
          t.RenderingCancelledException = c;
          const h = { NONE: 0, SELF: 1, BLANK: 2, PARENT: 3, TOP: 4 };
          t.LinkTarget = h;
          t.StatTimer = class {
            constructor() {
              this.started = Object.create(null);
              this.times = [];
            }
            time(e) {
              if (e in this.started)
                (0, n.warn)(`Timer is already running for ${e}`);
              this.started[e] = Date.now();
            }
            timeEnd(e) {
              if (!(e in this.started))
                (0, n.warn)(`Timer has not been started for ${e}`);
              this.times.push({
                name: e,
                start: this.started[e],
                end: Date.now(),
              });
              delete this.started[e];
            }
            toString() {
              const e = [];
              let t = 0;
              for (const e of this.times) {
                const i = e.name;
                if (i.length > t) t = i.length;
              }
              for (const i of this.times) {
                const n = i.end - i.start;
                e.push(`${i.name.padEnd(t)} ${n}ms\n`);
              }
              return e.join("");
            }
          };
          function u() {
            return (
              "undefined" != typeof fetch &&
              "undefined" != typeof Response &&
              "body" in Response.prototype &&
              "undefined" != typeof ReadableStream
            );
          }
          function d(e, t) {
            try {
              const { protocol: i } = t ? new URL(e, t) : new URL(e);
              return "http:" === i || "https:" === i;
            } catch (e) {
              return !1;
            }
          }
          let f;
          t.PDFDateString = class {
            static toDateObject(e) {
              if (!e || !(0, n.isString)(e)) return null;
              if (!f)
                f = new RegExp(
                  "^D:(\\d{4})(\\d{2})?(\\d{2})?(\\d{2})?(\\d{2})?(\\d{2})?([Z|+|-])?(\\d{2})?'?(\\d{2})?'?"
                );
              const t = f.exec(e);
              if (!t) return null;
              const i = parseInt(t[1], 10);
              let r = parseInt(t[2], 10);
              r = r >= 1 && r <= 12 ? r - 1 : 0;
              let a = parseInt(t[3], 10);
              a = a >= 1 && a <= 31 ? a : 1;
              let s = parseInt(t[4], 10);
              s = s >= 0 && s <= 23 ? s : 0;
              let o = parseInt(t[5], 10);
              o = o >= 0 && o <= 59 ? o : 0;
              let l = parseInt(t[6], 10);
              l = l >= 0 && l <= 59 ? l : 0;
              const c = t[7] || "Z";
              let h = parseInt(t[8], 10);
              h = h >= 0 && h <= 23 ? h : 0;
              let u = parseInt(t[9], 10) || 0;
              u = u >= 0 && u <= 59 ? u : 0;
              if ("-" === c) {
                s += h;
                o += u;
              } else if ("+" === c) {
                s -= h;
                o -= u;
              }
              return new Date(Date.UTC(i, r, a, s, o, l));
            }
          };
        },
        (e, t, i) => {
          Object.defineProperty(t, "__esModule", { value: !0 });
          t.arrayByteLength = d;
          t.arraysToBytes = function (e) {
            const t = e.length;
            if (1 === t && e[0] instanceof Uint8Array) return e[0];
            let i = 0;
            for (let n = 0; n < t; n++) i += d(e[n]);
            let n = 0;
            const r = new Uint8Array(i);
            for (let i = 0; i < t; i++) {
              let t = e[i];
              if (!(t instanceof Uint8Array))
                if ("string" == typeof t) t = u(t);
                else t = new Uint8Array(t);
              const a = t.byteLength;
              r.set(t, n);
              n += a;
            }
            return r;
          };
          t.assert = o;
          t.bytesToString = function (e) {
            o(
              null !== e && "object" == typeof e && void 0 !== e.length,
              "Invalid argument for bytesToString"
            );
            const t = e.length,
              i = 8192;
            if (t < i) return String.fromCharCode.apply(null, e);
            const n = [];
            for (let r = 0; r < t; r += i) {
              const a = Math.min(r + i, t),
                s = e.subarray(r, a);
              n.push(String.fromCharCode.apply(null, s));
            }
            return n.join("");
          };
          t.createPromiseCapability = function () {
            const e = Object.create(null);
            let t = !1;
            Object.defineProperty(e, "settled", { get: () => t });
            e.promise = new Promise(function (i, n) {
              e.resolve = function (e) {
                t = !0;
                i(e);
              };
              e.reject = function (e) {
                t = !0;
                n(e);
              };
            });
            return e;
          };
          t.createValidAbsoluteUrl = function (e, t) {
            if (!e) return null;
            try {
              const i = t ? new URL(e, t) : new URL(e);
              if (
                (function (e) {
                  if (!e) return !1;
                  switch (e.protocol) {
                    case "http:":
                    case "https:":
                    case "ftp:":
                    case "mailto:":
                    case "tel:":
                      return !0;
                    default:
                      return !1;
                  }
                })(i)
              )
                return i;
            } catch (e) {}
            return null;
          };
          t.encodeToXmlString = function (e) {
            const t = [];
            let i = 0;
            for (let n = 0, r = e.length; n < r; n++) {
              const r = e.codePointAt(n);
              if (32 <= r && r <= 126) {
                const a = y[r];
                if (a) {
                  if (i < n) t.push(e.substring(i, n));
                  t.push(a);
                  i = n + 1;
                }
              } else {
                if (i < n) t.push(e.substring(i, n));
                t.push(`&#x${r.toString(16).toUpperCase()};`);
                if (r > 55295 && (r < 57344 || r > 65533)) n++;
                i = n + 1;
              }
            }
            if (0 === t.length) return e;
            if (i < e.length) t.push(e.substring(i, e.length));
            return t.join("");
          };
          t.escapeString = function (e) {
            return e.replace(/([()\\\n\r])/g, (e) => {
              if ("\n" === e) return "\\n";
              else if ("\r" === e) return "\\r";
              return `\\${e}`;
            });
          };
          t.getModificationDate = function (e = new Date()) {
            return [
              e.getUTCFullYear().toString(),
              (e.getUTCMonth() + 1).toString().padStart(2, "0"),
              e.getUTCDate().toString().padStart(2, "0"),
              e.getUTCHours().toString().padStart(2, "0"),
              e.getUTCMinutes().toString().padStart(2, "0"),
              e.getUTCSeconds().toString().padStart(2, "0"),
            ].join("");
          };
          t.getVerbosityLevel = function () {
            return r;
          };
          t.info = function (e) {
            if (r >= n.INFOS);
          };
          t.isArrayBuffer = function (e) {
            return (
              "object" == typeof e && null !== e && void 0 !== e.byteLength
            );
          };
          t.isArrayEqual = function (e, t) {
            if (e.length !== t.length) return !1;
            else
              return e.every(function (e, i) {
                return e === t[i];
              });
          };
          t.isAscii = function (e) {
            return /^[\x00-\x7F]*$/.test(e);
          };
          t.isBool = function (e) {
            return "boolean" == typeof e;
          };
          t.isNum = function (e) {
            return "number" == typeof e;
          };
          t.isSameOrigin = function (e, t) {
            let i;
            try {
              i = new URL(e);
              if (!i.origin || "null" === i.origin) return !1;
            } catch (e) {
              return !1;
            }
            const n = new URL(t, i);
            return i.origin === n.origin;
          };
          t.isString = function (e) {
            return "string" == typeof e;
          };
          t.objectFromEntries = function (e) {
            return Object.assign(Object.create(null), Object.fromEntries(e));
          };
          t.objectSize = function (e) {
            return Object.keys(e).length;
          };
          t.removeNullCharacters = function (e) {
            if ("string" != typeof e) {
              a();
              return e;
            }
            return e.replace(h, "");
          };
          t.setVerbosityLevel = function (e) {
            if (Number.isInteger(e)) r = e;
          };
          t.shadow = l;
          t.string32 = function (e) {
            return String.fromCharCode(
              (e >> 24) & 255,
              (e >> 16) & 255,
              (e >> 8) & 255,
              255 & e
            );
          };
          t.stringToBytes = u;
          t.stringToPDFString = function (e) {
            const t = e.length,
              i = [];
            if ("þ" === e[0] && "ÿ" === e[1])
              for (let n = 2; n < t; n += 2)
                i.push(
                  String.fromCharCode(
                    (e.charCodeAt(n) << 8) | e.charCodeAt(n + 1)
                  )
                );
            else if ("ÿ" === e[0] && "þ" === e[1])
              for (let n = 2; n < t; n += 2)
                i.push(
                  String.fromCharCode(
                    (e.charCodeAt(n + 1) << 8) | e.charCodeAt(n)
                  )
                );
            else
              for (let n = 0; n < t; ++n) {
                const t = v[e.charCodeAt(n)];
                i.push(t ? String.fromCharCode(t) : e.charAt(n));
              }
            return i.join("");
          };
          t.stringToUTF16BEString = function (e) {
            const t = ["þÿ"];
            for (let i = 0, n = e.length; i < n; i++) {
              const n = e.charCodeAt(i);
              t.push(String.fromCharCode((n >> 8) & 255));
              t.push(String.fromCharCode(255 & n));
            }
            return t.join("");
          };
          t.stringToUTF8String = function (e) {
            return decodeURIComponent(escape(e));
          };
          t.unreachable = s;
          t.utf8StringToString = function (e) {
            return unescape(encodeURIComponent(e));
          };
          t.warn = a;
          t.VerbosityLevel =
            t.Util =
            t.UNSUPPORTED_FEATURES =
            t.UnknownErrorException =
            t.UnexpectedResponseException =
            t.TextRenderingMode =
            t.StreamType =
            t.PermissionFlag =
            t.PasswordResponses =
            t.PasswordException =
            t.PageActionEventType =
            t.OPS =
            t.MissingPDFException =
            t.IsLittleEndianCached =
            t.IsEvalSupportedCached =
            t.InvalidPDFException =
            t.ImageKind =
            t.IDENTITY_MATRIX =
            t.FormatError =
            t.FontType =
            t.FONT_IDENTITY_MATRIX =
            t.DocumentActionEventType =
            t.createObjectURL =
            t.CMapCompressionType =
            t.BaseException =
            t.AnnotationType =
            t.AnnotationStateModelType =
            t.AnnotationReviewState =
            t.AnnotationReplyType =
            t.AnnotationMarkedState =
            t.AnnotationFlag =
            t.AnnotationFieldFlag =
            t.AnnotationBorderStyleType =
            t.AnnotationActionEventType =
            t.AbortException =
              void 0;
          i(3);
          t.IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];
          t.FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];
          t.PermissionFlag = {
            PRINT: 4,
            MODIFY_CONTENTS: 8,
            COPY: 16,
            MODIFY_ANNOTATIONS: 32,
            FILL_INTERACTIVE_FORMS: 256,
            COPY_FOR_ACCESSIBILITY: 512,
            ASSEMBLE: 1024,
            PRINT_HIGH_QUALITY: 2048,
          };
          t.TextRenderingMode = {
            FILL: 0,
            STROKE: 1,
            FILL_STROKE: 2,
            INVISIBLE: 3,
            FILL_ADD_TO_PATH: 4,
            STROKE_ADD_TO_PATH: 5,
            FILL_STROKE_ADD_TO_PATH: 6,
            ADD_TO_PATH: 7,
            FILL_STROKE_MASK: 3,
            ADD_TO_PATH_FLAG: 4,
          };
          t.ImageKind = { GRAYSCALE_1BPP: 1, RGB_24BPP: 2, RGBA_32BPP: 3 };
          t.AnnotationType = {
            TEXT: 1,
            LINK: 2,
            FREETEXT: 3,
            LINE: 4,
            SQUARE: 5,
            CIRCLE: 6,
            POLYGON: 7,
            POLYLINE: 8,
            HIGHLIGHT: 9,
            UNDERLINE: 10,
            SQUIGGLY: 11,
            STRIKEOUT: 12,
            STAMP: 13,
            CARET: 14,
            INK: 15,
            POPUP: 16,
            FILEATTACHMENT: 17,
            SOUND: 18,
            MOVIE: 19,
            WIDGET: 20,
            SCREEN: 21,
            PRINTERMARK: 22,
            TRAPNET: 23,
            WATERMARK: 24,
            THREED: 25,
            REDACT: 26,
          };
          t.AnnotationStateModelType = { MARKED: "Marked", REVIEW: "Review" };
          t.AnnotationMarkedState = { MARKED: "Marked", UNMARKED: "Unmarked" };
          t.AnnotationReviewState = {
            ACCEPTED: "Accepted",
            REJECTED: "Rejected",
            CANCELLED: "Cancelled",
            COMPLETED: "Completed",
            NONE: "None",
          };
          t.AnnotationReplyType = { GROUP: "Group", REPLY: "R" };
          t.AnnotationFlag = {
            INVISIBLE: 1,
            HIDDEN: 2,
            PRINT: 4,
            NOZOOM: 8,
            NOROTATE: 16,
            NOVIEW: 32,
            READONLY: 64,
            LOCKED: 128,
            TOGGLENOVIEW: 256,
            LOCKEDCONTENTS: 512,
          };
          t.AnnotationFieldFlag = {
            READONLY: 1,
            REQUIRED: 2,
            NOEXPORT: 4,
            MULTILINE: 4096,
            PASSWORD: 8192,
            NOTOGGLETOOFF: 16384,
            RADIO: 32768,
            PUSHBUTTON: 65536,
            COMBO: 131072,
            EDIT: 262144,
            SORT: 524288,
            FILESELECT: 1048576,
            MULTISELECT: 2097152,
            DONOTSPELLCHECK: 4194304,
            DONOTSCROLL: 8388608,
            COMB: 16777216,
            RICHTEXT: 33554432,
            RADIOSINUNISON: 33554432,
            COMMITONSELCHANGE: 67108864,
          };
          t.AnnotationBorderStyleType = {
            SOLID: 1,
            DASHED: 2,
            BEVELED: 3,
            INSET: 4,
            UNDERLINE: 5,
          };
          t.AnnotationActionEventType = {
            E: "Mouse Enter",
            X: "Mouse Exit",
            D: "Mouse Down",
            U: "Mouse Up",
            Fo: "Focus",
            Bl: "Blur",
            PO: "PageOpen",
            PC: "PageClose",
            PV: "PageVisible",
            PI: "PageInvisible",
            K: "Keystroke",
            F: "Format",
            V: "Validate",
            C: "Calculate",
          };
          t.DocumentActionEventType = {
            WC: "WillClose",
            WS: "WillSave",
            DS: "DidSave",
            WP: "WillPrint",
            DP: "DidPrint",
          };
          t.PageActionEventType = { O: "PageOpen", C: "PageClose" };
          t.StreamType = {
            UNKNOWN: "UNKNOWN",
            FLATE: "FLATE",
            LZW: "LZW",
            DCT: "DCT",
            JPX: "JPX",
            JBIG: "JBIG",
            A85: "A85",
            AHX: "AHX",
            CCF: "CCF",
            RLX: "RLX",
          };
          t.FontType = {
            UNKNOWN: "UNKNOWN",
            TYPE1: "TYPE1",
            TYPE1C: "TYPE1C",
            CIDFONTTYPE0: "CIDFONTTYPE0",
            CIDFONTTYPE0C: "CIDFONTTYPE0C",
            TRUETYPE: "TRUETYPE",
            CIDFONTTYPE2: "CIDFONTTYPE2",
            TYPE3: "TYPE3",
            OPENTYPE: "OPENTYPE",
            TYPE0: "TYPE0",
            MMTYPE1: "MMTYPE1",
          };
          const n = { ERRORS: 0, WARNINGS: 1, INFOS: 5 };
          t.VerbosityLevel = n;
          t.CMapCompressionType = { NONE: 0, BINARY: 1, STREAM: 2 };
          t.OPS = {
            dependency: 1,
            setLineWidth: 2,
            setLineCap: 3,
            setLineJoin: 4,
            setMiterLimit: 5,
            setDash: 6,
            setRenderingIntent: 7,
            setFlatness: 8,
            setGState: 9,
            save: 10,
            restore: 11,
            transform: 12,
            moveTo: 13,
            lineTo: 14,
            curveTo: 15,
            curveTo2: 16,
            curveTo3: 17,
            closePath: 18,
            rectangle: 19,
            stroke: 20,
            closeStroke: 21,
            fill: 22,
            eoFill: 23,
            fillStroke: 24,
            eoFillStroke: 25,
            closeFillStroke: 26,
            closeEOFillStroke: 27,
            endPath: 28,
            clip: 29,
            eoClip: 30,
            beginText: 31,
            endText: 32,
            setCharSpacing: 33,
            setWordSpacing: 34,
            setHScale: 35,
            setLeading: 36,
            setFont: 37,
            setTextRenderingMode: 38,
            setTextRise: 39,
            moveText: 40,
            setLeadingMoveText: 41,
            setTextMatrix: 42,
            nextLine: 43,
            showText: 44,
            showSpacedText: 45,
            nextLineShowText: 46,
            nextLineSetSpacingShowText: 47,
            setCharWidth: 48,
            setCharWidthAndBounds: 49,
            setStrokeColorSpace: 50,
            setFillColorSpace: 51,
            setStrokeColor: 52,
            setStrokeColorN: 53,
            setFillColor: 54,
            setFillColorN: 55,
            setStrokeGray: 56,
            setFillGray: 57,
            setStrokeRGBColor: 58,
            setFillRGBColor: 59,
            setStrokeCMYKColor: 60,
            setFillCMYKColor: 61,
            shadingFill: 62,
            beginInlineImage: 63,
            beginImageData: 64,
            endInlineImage: 65,
            paintXObject: 66,
            markPoint: 67,
            markPointProps: 68,
            beginMarkedContent: 69,
            beginMarkedContentProps: 70,
            endMarkedContent: 71,
            beginCompat: 72,
            endCompat: 73,
            paintFormXObjectBegin: 74,
            paintFormXObjectEnd: 75,
            beginGroup: 76,
            endGroup: 77,
            beginAnnotations: 78,
            endAnnotations: 79,
            beginAnnotation: 80,
            endAnnotation: 81,
            paintJpegXObject: 82,
            paintImageMaskXObject: 83,
            paintImageMaskXObjectGroup: 84,
            paintImageXObject: 85,
            paintInlineImageXObject: 86,
            paintInlineImageXObjectGroup: 87,
            paintImageXObjectRepeat: 88,
            paintImageMaskXObjectRepeat: 89,
            paintSolidColorImageMask: 90,
            constructPath: 91,
          };
          t.UNSUPPORTED_FEATURES = {
            unknown: "unknown",
            forms: "forms",
            javaScript: "javaScript",
            smask: "smask",
            shadingPattern: "shadingPattern",
            font: "font",
            errorTilingPattern: "errorTilingPattern",
            errorExtGState: "errorExtGState",
            errorXObject: "errorXObject",
            errorFontLoadType3: "errorFontLoadType3",
            errorFontState: "errorFontState",
            errorFontMissing: "errorFontMissing",
            errorFontTranslate: "errorFontTranslate",
            errorColorSpace: "errorColorSpace",
            errorOperatorList: "errorOperatorList",
            errorFontToUnicode: "errorFontToUnicode",
            errorFontLoadNative: "errorFontLoadNative",
            errorFontGetPath: "errorFontGetPath",
            errorMarkedContent: "errorMarkedContent",
          };
          t.PasswordResponses = { NEED_PASSWORD: 1, INCORRECT_PASSWORD: 2 };
          let r = n.WARNINGS;
          function a(e) {
            if (r >= n.WARNINGS);
          }
          function s(e) {
            throw new Error(e);
          }
          function o(e, t) {
            if (!e) s(t);
          }
          function l(e, t, i) {
            Object.defineProperty(e, t, {
              value: i,
              enumerable: !0,
              configurable: !0,
              writable: !1,
            });
            return i;
          }
          const c = (function () {
            function e(t) {
              if (this.constructor === e) s("Cannot initialize BaseException.");
              this.message = t;
              this.name = this.constructor.name;
            }
            e.prototype = new Error();
            e.constructor = e;
            return e;
          })();
          t.BaseException = c;
          t.PasswordException = class extends c {
            constructor(e, t) {
              super(e);
              this.code = t;
            }
          };
          t.UnknownErrorException = class extends c {
            constructor(e, t) {
              super(e);
              this.details = t;
            }
          };
          t.InvalidPDFException = class extends c {};
          t.MissingPDFException = class extends c {};
          t.UnexpectedResponseException = class extends c {
            constructor(e, t) {
              super(e);
              this.status = t;
            }
          };
          t.FormatError = class extends c {};
          t.AbortException = class extends c {};
          const h = /\x00/g;
          function u(e) {
            o("string" == typeof e, "Invalid argument for stringToBytes");
            const t = e.length,
              i = new Uint8Array(t);
            for (let n = 0; n < t; ++n) i[n] = 255 & e.charCodeAt(n);
            return i;
          }
          function d(e) {
            if (void 0 !== e.length) return e.length;
            o(void 0 !== e.byteLength, "arrayByteLength - invalid argument.");
            return e.byteLength;
          }
          const f = {
            get value() {
              return l(
                this,
                "value",
                (function () {
                  const e = new Uint8Array(4);
                  e[0] = 1;
                  return 1 === new Uint32Array(e.buffer, 0, 1)[0];
                })()
              );
            },
          };
          t.IsLittleEndianCached = f;
          const p = {
            get value() {
              return l(
                this,
                "value",
                (function () {
                  try {
                    new Function("");
                    return !0;
                  } catch (e) {
                    return !1;
                  }
                })()
              );
            },
          };
          t.IsEvalSupportedCached = p;
          const g = [...Array(256).keys()].map((e) =>
            e.toString(16).padStart(2, "0")
          );
          class m {
            static makeHexColor(e, t, i) {
              return `#${g[e]}${g[t]}${g[i]}`;
            }
            static transform(e, t) {
              return [
                e[0] * t[0] + e[2] * t[1],
                e[1] * t[0] + e[3] * t[1],
                e[0] * t[2] + e[2] * t[3],
                e[1] * t[2] + e[3] * t[3],
                e[0] * t[4] + e[2] * t[5] + e[4],
                e[1] * t[4] + e[3] * t[5] + e[5],
              ];
            }
            static applyTransform(e, t) {
              return [
                e[0] * t[0] + e[1] * t[2] + t[4],
                e[0] * t[1] + e[1] * t[3] + t[5],
              ];
            }
            static applyInverseTransform(e, t) {
              const i = t[0] * t[3] - t[1] * t[2];
              return [
                (e[0] * t[3] - e[1] * t[2] + t[2] * t[5] - t[4] * t[3]) / i,
                (-e[0] * t[1] + e[1] * t[0] + t[4] * t[1] - t[5] * t[0]) / i,
              ];
            }
            static getAxialAlignedBoundingBox(e, t) {
              const i = m.applyTransform(e, t),
                n = m.applyTransform(e.slice(2, 4), t),
                r = m.applyTransform([e[0], e[3]], t),
                a = m.applyTransform([e[2], e[1]], t);
              return [
                Math.min(i[0], n[0], r[0], a[0]),
                Math.min(i[1], n[1], r[1], a[1]),
                Math.max(i[0], n[0], r[0], a[0]),
                Math.max(i[1], n[1], r[1], a[1]),
              ];
            }
            static inverseTransform(e) {
              const t = e[0] * e[3] - e[1] * e[2];
              return [
                e[3] / t,
                -e[1] / t,
                -e[2] / t,
                e[0] / t,
                (e[2] * e[5] - e[4] * e[3]) / t,
                (e[4] * e[1] - e[5] * e[0]) / t,
              ];
            }
            static apply3dTransform(e, t) {
              return [
                e[0] * t[0] + e[1] * t[1] + e[2] * t[2],
                e[3] * t[0] + e[4] * t[1] + e[5] * t[2],
                e[6] * t[0] + e[7] * t[1] + e[8] * t[2],
              ];
            }
            static singularValueDecompose2dScale(e) {
              const t = [e[0], e[2], e[1], e[3]],
                i = e[0] * t[0] + e[1] * t[2],
                n = e[0] * t[1] + e[1] * t[3],
                r = e[2] * t[0] + e[3] * t[2],
                a = e[2] * t[1] + e[3] * t[3],
                s = (i + a) / 2,
                o = Math.sqrt((i + a) * (i + a) - 4 * (i * a - r * n)) / 2,
                l = s + o || 1,
                c = s - o || 1;
              return [Math.sqrt(l), Math.sqrt(c)];
            }
            static normalizeRect(e) {
              const t = e.slice(0);
              if (e[0] > e[2]) {
                t[0] = e[2];
                t[2] = e[0];
              }
              if (e[1] > e[3]) {
                t[1] = e[3];
                t[3] = e[1];
              }
              return t;
            }
            static intersect(e, t) {
              function i(e, t) {
                return e - t;
              }
              const n = [e[0], e[2], t[0], t[2]].sort(i),
                r = [e[1], e[3], t[1], t[3]].sort(i),
                a = [];
              e = m.normalizeRect(e);
              t = m.normalizeRect(t);
              if (
                (n[0] === e[0] && n[1] === t[0]) ||
                (n[0] === t[0] && n[1] === e[0])
              ) {
                a[0] = n[1];
                a[2] = n[2];
              } else return null;
              if (
                (r[0] === e[1] && r[1] === t[1]) ||
                (r[0] === t[1] && r[1] === e[1])
              ) {
                a[1] = r[1];
                a[3] = r[2];
              } else return null;
              return a;
            }
          }
          t.Util = m;
          const v = [
              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
              0, 0, 728, 711, 710, 729, 733, 731, 730, 732, 0, 0, 0, 0, 0, 0, 0,
              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
              0, 8226, 8224, 8225, 8230, 8212, 8211, 402, 8260, 8249, 8250,
              8722, 8240, 8222, 8220, 8221, 8216, 8217, 8218, 8482, 64257,
              64258, 321, 338, 352, 376, 381, 305, 322, 339, 353, 382, 0, 8364,
            ],
            b = (function () {
              const e =
                "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
              return function (t, i, n = !1) {
                if (!n && URL.createObjectURL) {
                  const e = new Blob([t], { type: i });
                  return URL.createObjectURL(e);
                }
                let r = `data:${i};base64,`;
                for (let i = 0, n = t.length; i < n; i += 3) {
                  const a = 255 & t[i],
                    s = 255 & t[i + 1],
                    o = 255 & t[i + 2];
                  r +=
                    e[a >> 2] +
                    e[((3 & a) << 4) | (s >> 4)] +
                    e[i + 1 < n ? ((15 & s) << 2) | (o >> 6) : 64] +
                    e[i + 2 < n ? 63 & o : 64];
                }
                return r;
              };
            })();
          t.createObjectURL = b;
          const y = {
            60: "&lt;",
            62: "&gt;",
            38: "&amp;",
            34: "&quot;",
            39: "&apos;",
          };
        },
        (e, t, i) => {
          i(4);
        },
        (e, t) => {
          Object.defineProperty(t, "__esModule", { value: !0 });
          t.isNodeJS = void 0;
          const i = !(
            "object" != typeof process ||
            process + "" != "[object process]" ||
            process.versions.nw ||
            (process.versions.electron &&
              process.type &&
              "browser" !== process.type)
          );
          t.isNodeJS = i;
        },
        (__unused_webpack_module, exports, __w_pdfjs_require__) => {
          Object.defineProperty(exports, "__esModule", { value: !0 });
          exports.getDocument = getDocument;
          exports.setPDFNetworkStreamFactory = setPDFNetworkStreamFactory;
          exports.version =
            exports.PDFWorker =
            exports.PDFPageProxy =
            exports.PDFDocumentProxy =
            exports.PDFDataRangeTransport =
            exports.LoopbackPort =
            exports.DefaultCMapReaderFactory =
            exports.DefaultCanvasFactory =
            exports.build =
              void 0;
          var _util = __w_pdfjs_require__(2),
            _display_utils = __w_pdfjs_require__(1),
            _font_loader = __w_pdfjs_require__(6),
            _node_utils = __w_pdfjs_require__(7),
            _annotation_storage = __w_pdfjs_require__(8),
            _api_compatibility = __w_pdfjs_require__(9),
            _canvas = __w_pdfjs_require__(10),
            _worker_options = __w_pdfjs_require__(12),
            _is_node = __w_pdfjs_require__(4),
            _message_handler = __w_pdfjs_require__(13),
            _metadata = __w_pdfjs_require__(14),
            _optional_content_config = __w_pdfjs_require__(16),
            _transport_stream = __w_pdfjs_require__(17),
            _webgl = __w_pdfjs_require__(18);
          const DEFAULT_RANGE_CHUNK_SIZE = 65536,
            RENDERING_CANCELLED_TIMEOUT = 100,
            DefaultCanvasFactory = _is_node.isNodeJS
              ? _node_utils.NodeCanvasFactory
              : _display_utils.DOMCanvasFactory;
          exports.DefaultCanvasFactory = DefaultCanvasFactory;
          const DefaultCMapReaderFactory = _is_node.isNodeJS
            ? _node_utils.NodeCMapReaderFactory
            : _display_utils.DOMCMapReaderFactory;
          exports.DefaultCMapReaderFactory = DefaultCMapReaderFactory;
          let createPDFNetworkStream;
          function setPDFNetworkStreamFactory(e) {
            createPDFNetworkStream = e;
          }
          function getDocument(e) {
            const t = new PDFDocumentLoadingTask();
            let i;
            if ("string" == typeof e) i = { url: e };
            else if ((0, _util.isArrayBuffer)(e)) i = { data: e };
            else if (e instanceof PDFDataRangeTransport) i = { range: e };
            else {
              if ("object" != typeof e)
                throw new Error(
                  "Invalid parameter in getDocument, need either Uint8Array, string or a parameter object"
                );
              if (!e.url && !e.data && !e.range)
                throw new Error(
                  "Invalid parameter object: need either .data, .range or .url"
                );
              i = e;
            }
            const n = Object.create(null);
            let r = null,
              a = null;
            for (const e in i)
              if ("url" !== e || "undefined" == typeof window) {
                if ("range" === e) {
                  r = i[e];
                  continue;
                } else if ("worker" === e) {
                  a = i[e];
                  continue;
                } else if ("data" === e && !(i[e] instanceof Uint8Array)) {
                  const t = i[e];
                  if ("string" == typeof t) n[e] = (0, _util.stringToBytes)(t);
                  else if (
                    "object" == typeof t &&
                    null !== t &&
                    !isNaN(t.length)
                  )
                    n[e] = new Uint8Array(t);
                  else if ((0, _util.isArrayBuffer)(t))
                    n[e] = new Uint8Array(t);
                  else
                    throw new Error(
                      "Invalid PDF binary data: either typed array, string or array-like object is expected in the data property."
                    );
                  continue;
                }
                n[e] = i[e];
              } else n[e] = new URL(i[e], window.location).href;
            n.rangeChunkSize = n.rangeChunkSize || DEFAULT_RANGE_CHUNK_SIZE;
            n.CMapReaderFactory =
              n.CMapReaderFactory || DefaultCMapReaderFactory;
            n.ignoreErrors = !0 !== n.stopAtErrors;
            n.fontExtraProperties = !0 === n.fontExtraProperties;
            n.pdfBug = !0 === n.pdfBug;
            if (!Number.isInteger(n.maxImageSize)) n.maxImageSize = -1;
            if ("boolean" != typeof n.isEvalSupported) n.isEvalSupported = !0;
            if ("boolean" != typeof n.disableFontFace)
              n.disableFontFace =
                _api_compatibility.apiCompatibilityParams.disableFontFace || !1;
            if (void 0 === n.ownerDocument)
              n.ownerDocument = globalThis.document;
            if ("boolean" != typeof n.disableRange) n.disableRange = !1;
            if ("boolean" != typeof n.disableStream) n.disableStream = !1;
            if ("boolean" != typeof n.disableAutoFetch) n.disableAutoFetch = !1;
            (0, _util.setVerbosityLevel)(n.verbosity);
            if (!a) {
              const e = {
                verbosity: n.verbosity,
                port: _worker_options.GlobalWorkerOptions.workerPort,
              };
              a = e.port ? PDFWorker.fromPort(e) : new PDFWorker(e);
              t._worker = a;
            }
            const s = t.docId;
            a.promise
              .then(function () {
                if (t.destroyed) throw new Error("Loading aborted");
                const e = _fetchDocument(a, n, r, s),
                  i = new Promise(function (e) {
                    let t;
                    if (r)
                      t = new _transport_stream.PDFDataTransportStream(
                        {
                          length: n.length,
                          initialData: n.initialData,
                          progressiveDone: n.progressiveDone,
                          disableRange: n.disableRange,
                          disableStream: n.disableStream,
                        },
                        r
                      );
                    else if (!n.data)
                      t = createPDFNetworkStream({
                        url: n.url,
                        length: n.length,
                        httpHeaders: n.httpHeaders,
                        withCredentials: n.withCredentials,
                        rangeChunkSize: n.rangeChunkSize,
                        disableRange: n.disableRange,
                        disableStream: n.disableStream,
                      });
                    e(t);
                  });
                return Promise.all([e, i]).then(function ([e, i]) {
                  if (t.destroyed) throw new Error("Loading aborted");
                  const r = new _message_handler.MessageHandler(s, e, a.port);
                  r.postMessageTransfers = a.postMessageTransfers;
                  const o = new WorkerTransport(r, t, i, n);
                  t._transport = o;
                  r.send("Ready", null);
                });
              })
              .catch(t._capability.reject);
            return t;
          }
          function _fetchDocument(e, t, i, n) {
            if (e.destroyed)
              return Promise.reject(new Error("Worker was destroyed"));
            if (i) {
              t.length = i.length;
              t.initialData = i.initialData;
              t.progressiveDone = i.progressiveDone;
            }
            return e.messageHandler
              .sendWithPromise("GetDocRequest", {
                docId: n,
                apiVersion: "2.7.570",
                source: {
                  data: t.data,
                  url: t.url,
                  password: t.password,
                  disableAutoFetch: t.disableAutoFetch,
                  rangeChunkSize: t.rangeChunkSize,
                  length: t.length,
                },
                maxImageSize: t.maxImageSize,
                disableFontFace: t.disableFontFace,
                postMessageTransfers: e.postMessageTransfers,
                docBaseUrl: t.docBaseUrl,
                ignoreErrors: t.ignoreErrors,
                isEvalSupported: t.isEvalSupported,
                fontExtraProperties: t.fontExtraProperties,
              })
              .then(function (t) {
                if (e.destroyed) throw new Error("Worker was destroyed");
                return t;
              });
          }
          const PDFDocumentLoadingTask = (function () {
            let e = 0;
            return class {
              constructor() {
                this._capability = (0, _util.createPromiseCapability)();
                this._transport = null;
                this._worker = null;
                this.docId = "d" + e++;
                this.destroyed = !1;
                this.onPassword = null;
                this.onProgress = null;
                this.onUnsupportedFeature = null;
              }
              get promise() {
                return this._capability.promise;
              }
              destroy() {
                this.destroyed = !0;
                return (
                  !this._transport
                    ? Promise.resolve()
                    : this._transport.destroy()
                ).then(() => {
                  this._transport = null;
                  if (this._worker) {
                    this._worker.destroy();
                    this._worker = null;
                  }
                });
              }
            };
          })();
          class PDFDataRangeTransport {
            constructor(e, t, i = !1) {
              this.length = e;
              this.initialData = t;
              this.progressiveDone = i;
              this._rangeListeners = [];
              this._progressListeners = [];
              this._progressiveReadListeners = [];
              this._progressiveDoneListeners = [];
              this._readyCapability = (0, _util.createPromiseCapability)();
            }
            addRangeListener(e) {
              this._rangeListeners.push(e);
            }
            addProgressListener(e) {
              this._progressListeners.push(e);
            }
            addProgressiveReadListener(e) {
              this._progressiveReadListeners.push(e);
            }
            addProgressiveDoneListener(e) {
              this._progressiveDoneListeners.push(e);
            }
            onDataRange(e, t) {
              for (const i of this._rangeListeners) i(e, t);
            }
            onDataProgress(e, t) {
              this._readyCapability.promise.then(() => {
                for (const i of this._progressListeners) i(e, t);
              });
            }
            onDataProgressiveRead(e) {
              this._readyCapability.promise.then(() => {
                for (const t of this._progressiveReadListeners) t(e);
              });
            }
            onDataProgressiveDone() {
              this._readyCapability.promise.then(() => {
                for (const e of this._progressiveDoneListeners) e();
              });
            }
            transportReady() {
              this._readyCapability.resolve();
            }
            requestDataRange(e, t) {
              (0, _util.unreachable)(
                "Abstract method PDFDataRangeTransport.requestDataRange"
              );
            }
            abort() {}
          }
          exports.PDFDataRangeTransport = PDFDataRangeTransport;
          class PDFDocumentProxy {
            constructor(e, t) {
              this._pdfInfo = e;
              this._transport = t;
            }
            get annotationStorage() {
              return (0, _util.shadow)(
                this,
                "annotationStorage",
                new _annotation_storage.AnnotationStorage()
              );
            }
            get numPages() {
              return this._pdfInfo.numPages;
            }
            get fingerprint() {
              return this._pdfInfo.fingerprint;
            }
            getPage(e) {
              return this._transport.getPage(e);
            }
            getPageIndex(e) {
              return this._transport.getPageIndex(e);
            }
            getDestinations() {
              return this._transport.getDestinations();
            }
            getDestination(e) {
              return this._transport.getDestination(e);
            }
            getPageLabels() {
              return this._transport.getPageLabels();
            }
            getPageLayout() {
              return this._transport.getPageLayout();
            }
            getPageMode() {
              return this._transport.getPageMode();
            }
            getViewerPreferences() {
              return this._transport.getViewerPreferences();
            }
            getOpenAction() {
              return this._transport.getOpenAction();
            }
            getAttachments() {
              return this._transport.getAttachments();
            }
            getJavaScript() {
              return this._transport.getJavaScript();
            }
            getJSActions() {
              return this._transport.getDocJSActions();
            }
            getOutline() {
              return this._transport.getOutline();
            }
            getOptionalContentConfig() {
              return this._transport.getOptionalContentConfig();
            }
            getPermissions() {
              return this._transport.getPermissions();
            }
            getMetadata() {
              return this._transport.getMetadata();
            }
            getMarkInfo() {
              return this._transport.getMarkInfo();
            }
            getData() {
              return this._transport.getData();
            }
            getDownloadInfo() {
              return this._transport.downloadInfoCapability.promise;
            }
            getStats() {
              return this._transport.getStats();
            }
            cleanup() {
              return this._transport.startCleanup();
            }
            destroy() {
              return this.loadingTask.destroy();
            }
            get loadingParams() {
              return this._transport.loadingParams;
            }
            get loadingTask() {
              return this._transport.loadingTask;
            }
            saveDocument(e) {
              return this._transport.saveDocument(e);
            }
            getFieldObjects() {
              return this._transport.getFieldObjects();
            }
            hasJSActions() {
              return this._transport.hasJSActions();
            }
            getCalculationOrderIds() {
              return this._transport.getCalculationOrderIds();
            }
          }
          exports.PDFDocumentProxy = PDFDocumentProxy;
          class PDFPageProxy {
            constructor(e, t, i, n, r = !1) {
              this._pageIndex = e;
              this._pageInfo = t;
              this._ownerDocument = n;
              this._transport = i;
              this._stats = r ? new _display_utils.StatTimer() : null;
              this._pdfBug = r;
              this.commonObjs = i.commonObjs;
              this.objs = new PDFObjects();
              this.cleanupAfterRender = !1;
              this.pendingCleanup = !1;
              this._intentStates = new Map();
              this.destroyed = !1;
            }
            get pageNumber() {
              return this._pageIndex + 1;
            }
            get rotate() {
              return this._pageInfo.rotate;
            }
            get ref() {
              return this._pageInfo.ref;
            }
            get userUnit() {
              return this._pageInfo.userUnit;
            }
            get view() {
              return this._pageInfo.view;
            }
            getViewport({
              scale: e,
              rotation: t = this.rotate,
              offsetX: i = 0,
              offsetY: n = 0,
              dontFlip: r = !1,
            } = {}) {
              return new _display_utils.PageViewport({
                viewBox: this.view,
                scale: e,
                rotation: t,
                offsetX: i,
                offsetY: n,
                dontFlip: r,
              });
            }
            getAnnotations({ intent: e = null } = {}) {
              if (!this.annotationsPromise || this.annotationsIntent !== e) {
                this.annotationsPromise = this._transport.getAnnotations(
                  this._pageIndex,
                  e
                );
                this.annotationsIntent = e;
              }
              return this.annotationsPromise;
            }
            getJSActions() {
              return (
                this._jsActionsPromise ||
                (this._jsActionsPromise = this._transport.getPageJSActions(
                  this._pageIndex
                ))
              );
            }
            render({
              canvasContext: e,
              viewport: t,
              intent: i = "display",
              enableWebGL: n = !1,
              renderInteractiveForms: r = !1,
              transform: a = null,
              imageLayer: s = null,
              canvasFactory: o = null,
              background: l = null,
              annotationStorage: c = null,
              optionalContentConfigPromise: h = null,
            }) {
              if (this._stats) this._stats.time("Overall");
              const u = "print" === i ? "print" : "display";
              this.pendingCleanup = !1;
              if (!h) h = this._transport.getOptionalContentConfig();
              let d = this._intentStates.get(u);
              if (!d) {
                d = Object.create(null);
                this._intentStates.set(u, d);
              }
              if (d.streamReaderCancelTimeout) {
                clearTimeout(d.streamReaderCancelTimeout);
                d.streamReaderCancelTimeout = null;
              }
              const f =
                  o ||
                  new DefaultCanvasFactory({
                    ownerDocument: this._ownerDocument,
                  }),
                p = new _webgl.WebGLContext({ enable: n });
              if (!d.displayReadyCapability) {
                d.displayReadyCapability = (0, _util.createPromiseCapability)();
                d.operatorList = { fnArray: [], argsArray: [], lastChunk: !1 };
                if (this._stats) this._stats.time("Page Request");
                this._pumpOperatorList({
                  pageIndex: this._pageIndex,
                  intent: u,
                  renderInteractiveForms: !0 === r,
                  annotationStorage: c?.getAll() || null,
                });
              }
              const g = (e) => {
                  const t = d.renderTasks.indexOf(m);
                  if (t >= 0) d.renderTasks.splice(t, 1);
                  if (this.cleanupAfterRender || "print" === u)
                    this.pendingCleanup = !0;
                  this._tryCleanup();
                  if (e) {
                    m.capability.reject(e);
                    this._abortOperatorList({ intentState: d, reason: e });
                  } else m.capability.resolve();
                  if (this._stats) {
                    this._stats.timeEnd("Rendering");
                    this._stats.timeEnd("Overall");
                  }
                },
                m = new InternalRenderTask({
                  callback: g,
                  params: {
                    canvasContext: e,
                    viewport: t,
                    transform: a,
                    imageLayer: s,
                    background: l,
                  },
                  objs: this.objs,
                  commonObjs: this.commonObjs,
                  operatorList: d.operatorList,
                  pageIndex: this._pageIndex,
                  canvasFactory: f,
                  webGLContext: p,
                  useRequestAnimationFrame: "print" !== u,
                  pdfBug: this._pdfBug,
                });
              if (!d.renderTasks) d.renderTasks = [];
              d.renderTasks.push(m);
              const v = m.task;
              Promise.all([d.displayReadyCapability.promise, h])
                .then(([e, t]) => {
                  if (!this.pendingCleanup) {
                    if (this._stats) this._stats.time("Rendering");
                    m.initializeGraphics({
                      transparency: e,
                      optionalContentConfig: t,
                    });
                    m.operatorListChanged();
                  } else g();
                })
                .catch(g);
              return v;
            }
            getOperatorList() {
              const e = "oplist";
              let t,
                i = this._intentStates.get(e);
              if (!i) {
                i = Object.create(null);
                this._intentStates.set(e, i);
              }
              if (!i.opListReadCapability) {
                t = Object.create(null);
                t.operatorListChanged = function () {
                  if (i.operatorList.lastChunk) {
                    i.opListReadCapability.resolve(i.operatorList);
                    const e = i.renderTasks.indexOf(t);
                    if (e >= 0) i.renderTasks.splice(e, 1);
                  }
                };
                i.opListReadCapability = (0, _util.createPromiseCapability)();
                i.renderTasks = [];
                i.renderTasks.push(t);
                i.operatorList = { fnArray: [], argsArray: [], lastChunk: !1 };
                if (this._stats) this._stats.time("Page Request");
                this._pumpOperatorList({
                  pageIndex: this._pageIndex,
                  intent: e,
                });
              }
              return i.opListReadCapability.promise;
            }
            streamTextContent({
              normalizeWhitespace: e = !1,
              disableCombineTextItems: t = !1,
            } = {}) {
              return this._transport.messageHandler.sendWithStream(
                "GetTextContent",
                {
                  pageIndex: this._pageIndex,
                  normalizeWhitespace: !0 === e,
                  combineTextItems: !0 !== t,
                },
                { highWaterMark: 100, size: (e) => e.items.length }
              );
            }
            getTextContent(e = {}) {
              const t = this.streamTextContent(e);
              return new Promise(function (e, i) {
                const n = t.getReader(),
                  r = { items: [], styles: Object.create(null) };
                !(function t() {
                  n.read().then(function ({ value: i, done: n }) {
                    if (!n) {
                      Object.assign(r.styles, i.styles);
                      r.items.push(...i.items);
                      t();
                    } else e(r);
                  }, i);
                })();
              });
            }
            _destroy() {
              this.destroyed = !0;
              this._transport.pageCache[this._pageIndex] = null;
              const e = [];
              for (const [t, i] of this._intentStates) {
                this._abortOperatorList({
                  intentState: i,
                  reason: new Error("Page was destroyed."),
                  force: !0,
                });
                if ("oplist" !== t)
                  for (const t of i.renderTasks) {
                    e.push(t.completed);
                    t.cancel();
                  }
              }
              this.objs.clear();
              this.annotationsPromise = null;
              this._jsActionsPromise = null;
              this.pendingCleanup = !1;
              return Promise.all(e);
            }
            cleanup(e = !1) {
              this.pendingCleanup = !0;
              return this._tryCleanup(e);
            }
            _tryCleanup(e = !1) {
              if (!this.pendingCleanup) return !1;
              for (const {
                renderTasks: e,
                operatorList: t,
              } of this._intentStates.values())
                if (0 !== e.length || !t.lastChunk) return !1;
              this._intentStates.clear();
              this.objs.clear();
              this.annotationsPromise = null;
              this._jsActionsPromise = null;
              if (e && this._stats)
                this._stats = new _display_utils.StatTimer();
              this.pendingCleanup = !1;
              return !0;
            }
            _startRenderPage(e, t) {
              const i = this._intentStates.get(t);
              if (i) {
                if (this._stats) this._stats.timeEnd("Page Request");
                if (i.displayReadyCapability)
                  i.displayReadyCapability.resolve(e);
              }
            }
            _renderPageChunk(e, t) {
              for (let i = 0, n = e.length; i < n; i++) {
                t.operatorList.fnArray.push(e.fnArray[i]);
                t.operatorList.argsArray.push(e.argsArray[i]);
              }
              t.operatorList.lastChunk = e.lastChunk;
              for (let e = 0; e < t.renderTasks.length; e++)
                t.renderTasks[e].operatorListChanged();
              if (e.lastChunk) this._tryCleanup();
            }
            _pumpOperatorList(e) {
              (0, _util.assert)(
                e.intent,
                'PDFPageProxy._pumpOperatorList: Expected "intent" argument.'
              );
              const t = this._transport.messageHandler
                  .sendWithStream("GetOperatorList", e)
                  .getReader(),
                i = this._intentStates.get(e.intent);
              i.streamReader = t;
              const n = () => {
                t.read().then(
                  ({ value: e, done: t }) => {
                    if (!t) {
                      if (!this._transport.destroyed) {
                        this._renderPageChunk(e, i);
                        n();
                      }
                    } else i.streamReader = null;
                  },
                  (e) => {
                    i.streamReader = null;
                    if (!this._transport.destroyed) {
                      if (i.operatorList) {
                        i.operatorList.lastChunk = !0;
                        for (let e = 0; e < i.renderTasks.length; e++)
                          i.renderTasks[e].operatorListChanged();
                        this._tryCleanup();
                      }
                      if (i.displayReadyCapability)
                        i.displayReadyCapability.reject(e);
                      else if (i.opListReadCapability)
                        i.opListReadCapability.reject(e);
                      else throw e;
                    }
                  }
                );
              };
              n();
            }
            _abortOperatorList({ intentState: e, reason: t, force: i = !1 }) {
              (0, _util.assert)(
                t instanceof Error || ("object" == typeof t && null !== t),
                'PDFPageProxy._abortOperatorList: Expected "reason" argument.'
              );
              if (e.streamReader) {
                if (!i) {
                  if (0 !== e.renderTasks.length) return;
                  if (t instanceof _display_utils.RenderingCancelledException) {
                    e.streamReaderCancelTimeout = setTimeout(() => {
                      this._abortOperatorList({
                        intentState: e,
                        reason: t,
                        force: !0,
                      });
                      e.streamReaderCancelTimeout = null;
                    }, RENDERING_CANCELLED_TIMEOUT);
                    return;
                  }
                }
                e.streamReader.cancel(new _util.AbortException(t?.message));
                e.streamReader = null;
                if (!this._transport.destroyed) {
                  for (const [t, i] of this._intentStates)
                    if (i === e) {
                      this._intentStates.delete(t);
                      break;
                    }
                  this.cleanup();
                }
              }
            }
            get stats() {
              return this._stats;
            }
          }
          exports.PDFPageProxy = PDFPageProxy;
          class LoopbackPort {
            constructor(e = !0) {
              this._listeners = [];
              this._defer = e;
              this._deferred = Promise.resolve(void 0);
            }
            postMessage(e, t) {
              if (!this._defer) {
                this._listeners.forEach((t) => {
                  t.call(this, { data: e });
                });
                return;
              }
              const i = new WeakMap(),
                n = {
                  data: (function e(n) {
                    if ("object" != typeof n || null === n) return n;
                    if (i.has(n)) return i.get(n);
                    let r, a;
                    if ((r = n.buffer) && (0, _util.isArrayBuffer)(r)) {
                      if (t?.includes(r))
                        a = new n.constructor(r, n.byteOffset, n.byteLength);
                      else a = new n.constructor(n);
                      i.set(n, a);
                      return a;
                    }
                    a = Array.isArray(n) ? [] : {};
                    i.set(n, a);
                    for (const t in n) {
                      let i,
                        r = n;
                      for (; !(i = Object.getOwnPropertyDescriptor(r, t)); )
                        r = Object.getPrototypeOf(r);
                      if (void 0 !== i.value)
                        if ("function" != typeof i.value) a[t] = e(i.value);
                        else if (n.hasOwnProperty && n.hasOwnProperty(t))
                          throw new Error(
                            `LoopbackPort.postMessage - cannot clone: ${n[t]}`
                          );
                    }
                    return a;
                  })(e),
                };
              this._deferred.then(() => {
                this._listeners.forEach((e) => {
                  e.call(this, n);
                });
              });
            }
            addEventListener(e, t) {
              this._listeners.push(t);
            }
            removeEventListener(e, t) {
              const i = this._listeners.indexOf(t);
              this._listeners.splice(i, 1);
            }
            terminate() {
              this._listeners.length = 0;
            }
          }
          exports.LoopbackPort = LoopbackPort;
          const PDFWorker = (function PDFWorkerClosure() {
            const pdfWorkerPorts = new WeakMap();
            let isWorkerDisabled = !1,
              fallbackWorkerSrc,
              nextFakeWorkerId = 0,
              fakeWorkerCapability;
            if (_is_node.isNodeJS && "function" == typeof require) {
              isWorkerDisabled = !0;
              fallbackWorkerSrc = "./pdf.worker.js";
            } else if (
              "object" == typeof document &&
              "currentScript" in document
            ) {
              const e = document.currentScript?.src;
              if (e)
                fallbackWorkerSrc = e.replace(
                  /(\.(?:min\.)?js)(\?.*)?$/i,
                  ".worker$1$2"
                );
            }
            function getWorkerSrc() {
              if (_worker_options.GlobalWorkerOptions.workerSrc)
                return _worker_options.GlobalWorkerOptions.workerSrc;
              if (void 0 !== fallbackWorkerSrc) {
                if (!_is_node.isNodeJS)
                  (0, _display_utils.deprecated)(
                    'No "GlobalWorkerOptions.workerSrc" specified.'
                  );
                return fallbackWorkerSrc;
              }
              throw new Error('No "GlobalWorkerOptions.workerSrc" specified.');
            }
            function getMainThreadWorkerMessageHandler() {
              let e;
              try {
                e = globalThis.pdfjsWorker?.WorkerMessageHandler;
              } catch (e) {}
              return e || null;
            }
            function setupFakeWorkerGlobal() {
              if (fakeWorkerCapability) return fakeWorkerCapability.promise;
              fakeWorkerCapability = (0, _util.createPromiseCapability)();
              const loader = async function () {
                const mainWorkerMessageHandler =
                  getMainThreadWorkerMessageHandler();
                if (mainWorkerMessageHandler) return mainWorkerMessageHandler;
                if (_is_node.isNodeJS && "function" == typeof require) {
                  const worker = eval("require")(getWorkerSrc());
                  return worker.WorkerMessageHandler;
                }
                await (0, _display_utils.loadScript)(getWorkerSrc());
                return window.pdfjsWorker.WorkerMessageHandler;
              };
              loader().then(
                fakeWorkerCapability.resolve,
                fakeWorkerCapability.reject
              );
              return fakeWorkerCapability.promise;
            }
            function createCDNWrapper(e) {
              const t = "importScripts('" + e + "');";
              return URL.createObjectURL(new Blob([t]));
            }
            class PDFWorker {
              constructor({
                name: e = null,
                port: t = null,
                verbosity: i = (0, _util.getVerbosityLevel)(),
              } = {}) {
                if (t && pdfWorkerPorts.has(t))
                  throw new Error(
                    "Cannot use more than one PDFWorker per port"
                  );
                this.name = e;
                this.destroyed = !1;
                this.postMessageTransfers = !0;
                this.verbosity = i;
                this._readyCapability = (0, _util.createPromiseCapability)();
                this._port = null;
                this._webWorker = null;
                this._messageHandler = null;
                if (!t) this._initialize();
                else {
                  pdfWorkerPorts.set(t, this);
                  this._initializeFromPort(t);
                }
              }
              get promise() {
                return this._readyCapability.promise;
              }
              get port() {
                return this._port;
              }
              get messageHandler() {
                return this._messageHandler;
              }
              _initializeFromPort(e) {
                this._port = e;
                this._messageHandler = new _message_handler.MessageHandler(
                  "main",
                  "worker",
                  e
                );
                this._messageHandler.on("ready", function () {});
                this._readyCapability.resolve();
              }
              _initialize() {
                if (
                  "undefined" != typeof Worker &&
                  !isWorkerDisabled &&
                  !getMainThreadWorkerMessageHandler()
                ) {
                  let e = getWorkerSrc();
                  try {
                    if (!(0, _util.isSameOrigin)(window.location.href, e))
                      e = createCDNWrapper(new URL(e, window.location).href);
                    const t = new Worker(e),
                      i = new _message_handler.MessageHandler(
                        "main",
                        "worker",
                        t
                      ),
                      n = () => {
                        t.removeEventListener("error", r);
                        i.destroy();
                        t.terminate();
                        if (this.destroyed)
                          this._readyCapability.reject(
                            new Error("Worker was destroyed")
                          );
                        else this._setupFakeWorker();
                      },
                      r = () => {
                        if (!this._webWorker) n();
                      };
                    t.addEventListener("error", r);
                    i.on("test", (e) => {
                      t.removeEventListener("error", r);
                      if (!this.destroyed)
                        if (e) {
                          this._messageHandler = i;
                          this._port = t;
                          this._webWorker = t;
                          if (!e.supportTransfers)
                            this.postMessageTransfers = !1;
                          this._readyCapability.resolve();
                          i.send("configure", { verbosity: this.verbosity });
                        } else {
                          this._setupFakeWorker();
                          i.destroy();
                          t.terminate();
                        }
                      else n();
                    });
                    i.on("ready", (e) => {
                      t.removeEventListener("error", r);
                      if (!this.destroyed)
                        try {
                          a();
                        } catch (e) {
                          this._setupFakeWorker();
                        }
                      else n();
                    });
                    const a = () => {
                      const e = new Uint8Array([
                        this.postMessageTransfers ? 255 : 0,
                      ]);
                      try {
                        i.send("test", e, [e.buffer]);
                      } catch (t) {
                        (0, _util.warn)("Cannot use postMessage transfers.");
                        e[0] = 0;
                        i.send("test", e);
                      }
                    };
                    a();
                    return;
                  } catch (e) {
                    (0, _util.info)("The worker has been disabled.");
                  }
                }
                this._setupFakeWorker();
              }
              _setupFakeWorker() {
                if (!isWorkerDisabled) {
                  (0, _util.warn)("Setting up fake worker.");
                  isWorkerDisabled = !0;
                }
                setupFakeWorkerGlobal()
                  .then((e) => {
                    if (this.destroyed) {
                      this._readyCapability.reject(
                        new Error("Worker was destroyed")
                      );
                      return;
                    }
                    const t = new LoopbackPort();
                    this._port = t;
                    const i = "fake" + nextFakeWorkerId++,
                      n = new _message_handler.MessageHandler(
                        i + "_worker",
                        i,
                        t
                      );
                    e.setup(n, t);
                    const r = new _message_handler.MessageHandler(
                      i,
                      i + "_worker",
                      t
                    );
                    this._messageHandler = r;
                    this._readyCapability.resolve();
                    r.send("configure", { verbosity: this.verbosity });
                  })
                  .catch((e) => {
                    this._readyCapability.reject(
                      new Error(
                        `Setting up fake worker failed: "${e.message}".`
                      )
                    );
                  });
              }
              destroy() {
                this.destroyed = !0;
                if (this._webWorker) {
                  this._webWorker.terminate();
                  this._webWorker = null;
                }
                pdfWorkerPorts.delete(this._port);
                this._port = null;
                if (this._messageHandler) {
                  this._messageHandler.destroy();
                  this._messageHandler = null;
                }
              }
              static fromPort(e) {
                if (!e || !e.port)
                  throw new Error(
                    "PDFWorker.fromPort - invalid method signature."
                  );
                if (pdfWorkerPorts.has(e.port))
                  return pdfWorkerPorts.get(e.port);
                else return new PDFWorker(e);
              }
              static getWorkerSrc() {
                return getWorkerSrc();
              }
            }
            return PDFWorker;
          })();
          exports.PDFWorker = PDFWorker;
          class WorkerTransport {
            constructor(e, t, i, n) {
              this.messageHandler = e;
              this.loadingTask = t;
              this.commonObjs = new PDFObjects();
              this.fontLoader = new _font_loader.FontLoader({
                docId: t.docId,
                onUnsupportedFeature: this._onUnsupportedFeature.bind(this),
                ownerDocument: n.ownerDocument,
              });
              this._params = n;
              this.CMapReaderFactory = new n.CMapReaderFactory({
                baseUrl: n.cMapUrl,
                isCompressed: n.cMapPacked,
              });
              this.destroyed = !1;
              this.destroyCapability = null;
              this._passwordCapability = null;
              this._networkStream = i;
              this._fullReader = null;
              this._lastProgress = null;
              this.pageCache = [];
              this.pagePromises = [];
              this.downloadInfoCapability = (0,
              _util.createPromiseCapability)();
              this.setupMessageHandler();
            }
            get loadingTaskSettled() {
              return this.loadingTask._capability.settled;
            }
            destroy() {
              if (this.destroyCapability) return this.destroyCapability.promise;
              this.destroyed = !0;
              this.destroyCapability = (0, _util.createPromiseCapability)();
              if (this._passwordCapability)
                this._passwordCapability.reject(
                  new Error("Worker was destroyed during onPassword callback")
                );
              const e = [];
              this.pageCache.forEach(function (t) {
                if (t) e.push(t._destroy());
              });
              this.pageCache.length = 0;
              this.pagePromises.length = 0;
              const t = this.messageHandler.sendWithPromise("Terminate", null);
              e.push(t);
              if (this.loadingTaskSettled) {
                const t = this.loadingTask.promise
                  .then((e) => {
                    if (e.hasOwnProperty("annotationStorage"))
                      e.annotationStorage.resetModified();
                  })
                  .catch(() => {});
                e.push(t);
              }
              Promise.all(e).then(() => {
                this.commonObjs.clear();
                this.fontLoader.clear();
                this._hasJSActionsPromise = null;
                if (this._networkStream)
                  this._networkStream.cancelAllRequests(
                    new _util.AbortException("Worker was terminated.")
                  );
                if (this.messageHandler) {
                  this.messageHandler.destroy();
                  this.messageHandler = null;
                }
                this.destroyCapability.resolve();
              }, this.destroyCapability.reject);
              return this.destroyCapability.promise;
            }
            setupMessageHandler() {
              const { messageHandler: e, loadingTask: t } = this;
              e.on("GetReader", (e, t) => {
                (0, _util.assert)(
                  this._networkStream,
                  "GetReader - no `IPDFStream` instance available."
                );
                this._fullReader = this._networkStream.getFullReader();
                this._fullReader.onProgress = (e) => {
                  this._lastProgress = { loaded: e.loaded, total: e.total };
                };
                t.onPull = () => {
                  this._fullReader
                    .read()
                    .then(function ({ value: e, done: i }) {
                      if (!i) {
                        (0, _util.assert)(
                          (0, _util.isArrayBuffer)(e),
                          "GetReader - expected an ArrayBuffer."
                        );
                        t.enqueue(new Uint8Array(e), 1, [e]);
                      } else t.close();
                    })
                    .catch((e) => {
                      t.error(e);
                    });
                };
                t.onCancel = (e) => {
                  this._fullReader.cancel(e);
                  t.ready.catch((e) => {
                    if (!this.destroyed) throw e;
                  });
                };
              });
              e.on("ReaderHeadersReady", (e) => {
                const i = (0, _util.createPromiseCapability)(),
                  n = this._fullReader;
                n.headersReady.then(() => {
                  if (!n.isStreamingSupported || !n.isRangeSupported) {
                    if (this._lastProgress && t.onProgress)
                      t.onProgress(this._lastProgress);
                    n.onProgress = (e) => {
                      if (t.onProgress)
                        t.onProgress({ loaded: e.loaded, total: e.total });
                    };
                  }
                  i.resolve({
                    isStreamingSupported: n.isStreamingSupported,
                    isRangeSupported: n.isRangeSupported,
                    contentLength: n.contentLength,
                  });
                }, i.reject);
                return i.promise;
              });
              e.on("GetRangeReader", (e, t) => {
                (0, _util.assert)(
                  this._networkStream,
                  "GetRangeReader - no `IPDFStream` instance available."
                );
                const i = this._networkStream.getRangeReader(e.begin, e.end);
                if (i) {
                  t.onPull = () => {
                    i.read()
                      .then(function ({ value: e, done: i }) {
                        if (!i) {
                          (0, _util.assert)(
                            (0, _util.isArrayBuffer)(e),
                            "GetRangeReader - expected an ArrayBuffer."
                          );
                          t.enqueue(new Uint8Array(e), 1, [e]);
                        } else t.close();
                      })
                      .catch((e) => {
                        t.error(e);
                      });
                  };
                  t.onCancel = (e) => {
                    i.cancel(e);
                    t.ready.catch((e) => {
                      if (!this.destroyed) throw e;
                    });
                  };
                } else t.close();
              });
              e.on("GetDoc", ({ pdfInfo: e }) => {
                this._numPages = e.numPages;
                t._capability.resolve(new PDFDocumentProxy(e, this));
              });
              e.on("DocException", function (e) {
                let i;
                switch (e.name) {
                  case "PasswordException":
                    i = new _util.PasswordException(e.message, e.code);
                    break;
                  case "InvalidPDFException":
                    i = new _util.InvalidPDFException(e.message);
                    break;
                  case "MissingPDFException":
                    i = new _util.MissingPDFException(e.message);
                    break;
                  case "UnexpectedResponseException":
                    i = new _util.UnexpectedResponseException(
                      e.message,
                      e.status
                    );
                    break;
                  case "UnknownErrorException":
                    i = new _util.UnknownErrorException(e.message, e.details);
                }
                if (!(i instanceof Error)) {
                  const e = "DocException - expected a valid Error.";
                  (0, _util.warn)(e);
                }
                t._capability.reject(i);
              });
              e.on("PasswordRequest", (e) => {
                this._passwordCapability = (0, _util.createPromiseCapability)();
                if (t.onPassword) {
                  const i = (e) => {
                    this._passwordCapability.resolve({ password: e });
                  };
                  try {
                    t.onPassword(i, e.code);
                  } catch (e) {
                    this._passwordCapability.reject(e);
                  }
                } else
                  this._passwordCapability.reject(
                    new _util.PasswordException(e.message, e.code)
                  );
                return this._passwordCapability.promise;
              });
              e.on("DataLoaded", (e) => {
                if (t.onProgress)
                  t.onProgress({ loaded: e.length, total: e.length });
                this.downloadInfoCapability.resolve(e);
              });
              e.on("StartRenderPage", (e) => {
                if (!this.destroyed)
                  this.pageCache[e.pageIndex]._startRenderPage(
                    e.transparency,
                    e.intent
                  );
              });
              e.on("commonobj", (t) => {
                if (this.destroyed) return;
                const [i, n, r] = t;
                if (!this.commonObjs.has(i))
                  switch (n) {
                    case "Font":
                      const t = this._params;
                      if ("error" in r) {
                        const e = r.error;
                        (0, _util.warn)(`Error during font loading: ${e}`);
                        this.commonObjs.resolve(i, e);
                        break;
                      }
                      let a = null;
                      if (t.pdfBug && globalThis.FontInspector?.enabled)
                        a = {
                          registerFont(e, t) {
                            globalThis.FontInspector.fontAdded(e, t);
                          },
                        };
                      const s = new _font_loader.FontFaceObject(r, {
                        isEvalSupported: t.isEvalSupported,
                        disableFontFace: t.disableFontFace,
                        ignoreErrors: t.ignoreErrors,
                        onUnsupportedFeature:
                          this._onUnsupportedFeature.bind(this),
                        fontRegistry: a,
                      });
                      this.fontLoader
                        .bind(s)
                        .catch((t) =>
                          e.sendWithPromise("FontFallback", { id: i })
                        )
                        .finally(() => {
                          if (!t.fontExtraProperties && s.data) s.data = null;
                          this.commonObjs.resolve(i, s);
                        });
                      break;
                    case "FontPath":
                    case "Image":
                      this.commonObjs.resolve(i, r);
                      break;
                    default:
                      throw new Error(`Got unknown common object type ${n}`);
                  }
              });
              e.on("obj", (e) => {
                if (this.destroyed) return;
                const [t, i, n, r] = e,
                  a = this.pageCache[i];
                if (!a.objs.has(t))
                  switch (n) {
                    case "Image":
                      a.objs.resolve(t, r);
                      const e = 8e6;
                      if (r?.data?.length > e) a.cleanupAfterRender = !0;
                      break;
                    default:
                      throw new Error(`Got unknown object type ${n}`);
                  }
              });
              e.on("DocProgress", (e) => {
                if (!this.destroyed)
                  if (t.onProgress)
                    t.onProgress({ loaded: e.loaded, total: e.total });
              });
              e.on("UnsupportedFeature", this._onUnsupportedFeature.bind(this));
              e.on("FetchBuiltInCMap", (e, t) => {
                if (this.destroyed) {
                  t.error(new Error("Worker was destroyed"));
                  return;
                }
                let i = !1;
                t.onPull = () => {
                  if (!i) {
                    i = !0;
                    this.CMapReaderFactory.fetch(e)
                      .then(function (e) {
                        t.enqueue(e, 1, [e.cMapData.buffer]);
                      })
                      .catch(function (e) {
                        t.error(e);
                      });
                  } else t.close();
                };
              });
            }
            _onUnsupportedFeature({ featureId: e }) {
              if (!this.destroyed)
                if (this.loadingTask.onUnsupportedFeature)
                  this.loadingTask.onUnsupportedFeature(e);
            }
            getData() {
              return this.messageHandler.sendWithPromise("GetData", null);
            }
            getPage(e) {
              if (!Number.isInteger(e) || e <= 0 || e > this._numPages)
                return Promise.reject(new Error("Invalid page request"));
              const t = e - 1;
              if (t in this.pagePromises) return this.pagePromises[t];
              const i = this.messageHandler
                .sendWithPromise("GetPage", { pageIndex: t })
                .then((e) => {
                  if (this.destroyed) throw new Error("Transport destroyed");
                  const i = new PDFPageProxy(
                    t,
                    e,
                    this,
                    this._params.ownerDocument,
                    this._params.pdfBug
                  );
                  this.pageCache[t] = i;
                  return i;
                });
              this.pagePromises[t] = i;
              return i;
            }
            getPageIndex(e) {
              return this.messageHandler
                .sendWithPromise("GetPageIndex", { ref: e })
                .catch(function (e) {
                  return Promise.reject(new Error(e));
                });
            }
            getAnnotations(e, t) {
              return this.messageHandler.sendWithPromise("GetAnnotations", {
                pageIndex: e,
                intent: t,
              });
            }
            saveDocument(e) {
              return this.messageHandler
                .sendWithPromise("SaveDocument", {
                  numPages: this._numPages,
                  annotationStorage: e?.getAll() || null,
                  filename: this._fullReader?.filename ?? null,
                })
                .finally(() => {
                  if (e) e.resetModified();
                });
            }
            getFieldObjects() {
              return this.messageHandler.sendWithPromise(
                "GetFieldObjects",
                null
              );
            }
            hasJSActions() {
              return (
                this._hasJSActionsPromise ||
                (this._hasJSActionsPromise =
                  this.messageHandler.sendWithPromise("HasJSActions", null))
              );
            }
            getCalculationOrderIds() {
              return this.messageHandler.sendWithPromise(
                "GetCalculationOrderIds",
                null
              );
            }
            getDestinations() {
              return this.messageHandler.sendWithPromise(
                "GetDestinations",
                null
              );
            }
            getDestination(e) {
              if ("string" != typeof e)
                return Promise.reject(
                  new Error("Invalid destination request.")
                );
              else
                return this.messageHandler.sendWithPromise("GetDestination", {
                  id: e,
                });
            }
            getPageLabels() {
              return this.messageHandler.sendWithPromise("GetPageLabels", null);
            }
            getPageLayout() {
              return this.messageHandler.sendWithPromise("GetPageLayout", null);
            }
            getPageMode() {
              return this.messageHandler.sendWithPromise("GetPageMode", null);
            }
            getViewerPreferences() {
              return this.messageHandler.sendWithPromise(
                "GetViewerPreferences",
                null
              );
            }
            getOpenAction() {
              return this.messageHandler.sendWithPromise("GetOpenAction", null);
            }
            getAttachments() {
              return this.messageHandler.sendWithPromise(
                "GetAttachments",
                null
              );
            }
            getJavaScript() {
              return this.messageHandler.sendWithPromise("GetJavaScript", null);
            }
            getDocJSActions() {
              return this.messageHandler.sendWithPromise(
                "GetDocJSActions",
                null
              );
            }
            getPageJSActions(e) {
              return this.messageHandler.sendWithPromise("GetPageJSActions", {
                pageIndex: e,
              });
            }
            getOutline() {
              return this.messageHandler.sendWithPromise("GetOutline", null);
            }
            getOptionalContentConfig() {
              return this.messageHandler
                .sendWithPromise("GetOptionalContentConfig", null)
                .then(
                  (e) => new _optional_content_config.OptionalContentConfig(e)
                );
            }
            getPermissions() {
              return this.messageHandler.sendWithPromise(
                "GetPermissions",
                null
              );
            }
            getMetadata() {
              return this.messageHandler
                .sendWithPromise("GetMetadata", null)
                .then((e) => ({
                  info: e[0],
                  metadata: e[1] ? new _metadata.Metadata(e[1]) : null,
                  contentDispositionFilename:
                    this._fullReader?.filename ?? null,
                  contentLength: this._fullReader?.contentLength ?? null,
                }));
            }
            getMarkInfo() {
              return this.messageHandler.sendWithPromise("GetMarkInfo", null);
            }
            getStats() {
              return this.messageHandler.sendWithPromise("GetStats", null);
            }
            startCleanup() {
              return this.messageHandler
                .sendWithPromise("Cleanup", null)
                .then(() => {
                  for (let e = 0, t = this.pageCache.length; e < t; e++) {
                    const t = this.pageCache[e];
                    if (t)
                      if (!t.cleanup())
                        throw new Error(
                          `startCleanup: Page ${e + 1} is currently rendering.`
                        );
                  }
                  this.commonObjs.clear();
                  this.fontLoader.clear();
                  this._hasJSActionsPromise = null;
                });
            }
            get loadingParams() {
              const e = this._params;
              return (0, _util.shadow)(this, "loadingParams", {
                disableAutoFetch: e.disableAutoFetch,
                disableFontFace: e.disableFontFace,
              });
            }
          }
          class PDFObjects {
            constructor() {
              this._objs = Object.create(null);
            }
            _ensureObj(e) {
              if (this._objs[e]) return this._objs[e];
              else
                return (this._objs[e] = {
                  capability: (0, _util.createPromiseCapability)(),
                  data: null,
                  resolved: !1,
                });
            }
            get(e, t = null) {
              if (t) {
                this._ensureObj(e).capability.promise.then(t);
                return null;
              }
              const i = this._objs[e];
              if (!i || !i.resolved)
                throw new Error(
                  `Requesting object that isn't resolved yet ${e}.`
                );
              return i.data;
            }
            has(e) {
              return this._objs[e]?.resolved || !1;
            }
            resolve(e, t) {
              const i = this._ensureObj(e);
              i.resolved = !0;
              i.data = t;
              i.capability.resolve(t);
            }
            clear() {
              this._objs = Object.create(null);
            }
          }
          class RenderTask {
            constructor(e) {
              this._internalRenderTask = e;
              this.onContinue = null;
            }
            get promise() {
              return this._internalRenderTask.capability.promise;
            }
            cancel() {
              this._internalRenderTask.cancel();
            }
          }
          const InternalRenderTask = (function () {
              const e = new WeakSet();
              return class {
                constructor({
                  callback: e,
                  params: t,
                  objs: i,
                  commonObjs: n,
                  operatorList: r,
                  pageIndex: a,
                  canvasFactory: s,
                  webGLContext: o,
                  useRequestAnimationFrame: l = !1,
                  pdfBug: c = !1,
                }) {
                  this.callback = e;
                  this.params = t;
                  this.objs = i;
                  this.commonObjs = n;
                  this.operatorListIdx = null;
                  this.operatorList = r;
                  this._pageIndex = a;
                  this.canvasFactory = s;
                  this.webGLContext = o;
                  this._pdfBug = c;
                  this.running = !1;
                  this.graphicsReadyCallback = null;
                  this.graphicsReady = !1;
                  this._useRequestAnimationFrame =
                    !0 === l && "undefined" != typeof window;
                  this.cancelled = !1;
                  this.capability = (0, _util.createPromiseCapability)();
                  this.task = new RenderTask(this);
                  this._continueBound = this._continue.bind(this);
                  this._scheduleNextBound = this._scheduleNext.bind(this);
                  this._nextBound = this._next.bind(this);
                  this._canvas = t.canvasContext.canvas;
                }
                get completed() {
                  return this.capability.promise.catch(function () {});
                }
                initializeGraphics({
                  transparency: t = !1,
                  optionalContentConfig: i,
                }) {
                  if (this.cancelled) return;
                  if (this._canvas) {
                    if (e.has(this._canvas))
                      throw new Error(
                        "Cannot use the same canvas during multiple render() operations. Use different canvas or ensure previous operations were cancelled or completed."
                      );
                    e.add(this._canvas);
                  }
                  if (this._pdfBug && globalThis.StepperManager?.enabled) {
                    this.stepper = globalThis.StepperManager.create(
                      this._pageIndex
                    );
                    this.stepper.init(this.operatorList);
                    this.stepper.nextBreakPoint =
                      this.stepper.getNextBreakPoint();
                  }
                  const {
                    canvasContext: n,
                    viewport: r,
                    transform: a,
                    imageLayer: s,
                    background: o,
                  } = this.params;
                  this.gfx = new _canvas.CanvasGraphics(
                    n,
                    this.commonObjs,
                    this.objs,
                    this.canvasFactory,
                    this.webGLContext,
                    s,
                    i
                  );
                  this.gfx.beginDrawing({
                    transform: a,
                    viewport: r,
                    transparency: t,
                    background: o,
                  });
                  this.operatorListIdx = 0;
                  this.graphicsReady = !0;
                  if (this.graphicsReadyCallback) this.graphicsReadyCallback();
                }
                cancel(t = null) {
                  this.running = !1;
                  this.cancelled = !0;
                  if (this.gfx) this.gfx.endDrawing();
                  if (this._canvas) e.delete(this._canvas);
                  this.callback(
                    t ||
                      new _display_utils.RenderingCancelledException(
                        `Rendering cancelled, page ${this._pageIndex + 1}`,
                        "canvas"
                      )
                  );
                }
                operatorListChanged() {
                  if (this.graphicsReady) {
                    if (this.stepper)
                      this.stepper.updateOperatorList(this.operatorList);
                    if (!this.running) this._continue();
                  } else if (!this.graphicsReadyCallback)
                    this.graphicsReadyCallback = this._continueBound;
                }
                _continue() {
                  this.running = !0;
                  if (!this.cancelled)
                    if (this.task.onContinue)
                      this.task.onContinue(this._scheduleNextBound);
                    else this._scheduleNext();
                }
                _scheduleNext() {
                  if (this._useRequestAnimationFrame)
                    window.requestAnimationFrame(() => {
                      this._nextBound().catch(this.cancel.bind(this));
                    });
                  else
                    Promise.resolve()
                      .then(this._nextBound)
                      .catch(this.cancel.bind(this));
                }
                async _next() {
                  if (!this.cancelled) {
                    this.operatorListIdx = this.gfx.executeOperatorList(
                      this.operatorList,
                      this.operatorListIdx,
                      this._continueBound,
                      this.stepper
                    );
                    if (
                      this.operatorListIdx ===
                      this.operatorList.argsArray.length
                    ) {
                      this.running = !1;
                      if (this.operatorList.lastChunk) {
                        this.gfx.endDrawing();
                        if (this._canvas) e.delete(this._canvas);
                        this.callback();
                      }
                    }
                  }
                }
              };
            })(),
            version = "2.7.570";
          exports.version = version;
          const build = "f2c7338b0";
          exports.build = build;
        },
        (e, t, i) => {
          Object.defineProperty(t, "__esModule", { value: !0 });
          t.FontLoader = t.FontFaceObject = void 0;
          var n = i(2);
          class r {
            constructor({
              docId: e,
              onUnsupportedFeature: t,
              ownerDocument: i = globalThis.document,
            }) {
              if (this.constructor === r)
                (0, n.unreachable)("Cannot initialize BaseFontLoader.");
              this.docId = e;
              this._onUnsupportedFeature = t;
              this._document = i;
              this.nativeFontFaces = [];
              this.styleElement = null;
            }
            addNativeFontFace(e) {
              this.nativeFontFaces.push(e);
              this._document.fonts.add(e);
            }
            insertRule(e) {
              let t = this.styleElement;
              if (!t) {
                t = this.styleElement = this._document.createElement("style");
                t.id = `PDFJS_FONT_STYLE_TAG_${this.docId}`;
                this._document.documentElement
                  .getElementsByTagName("head")[0]
                  .appendChild(t);
              }
              const i = t.sheet;
              i.insertRule(e, i.cssRules.length);
            }
            clear() {
              this.nativeFontFaces.forEach((e) => {
                this._document.fonts.delete(e);
              });
              this.nativeFontFaces.length = 0;
              if (this.styleElement) {
                this.styleElement.remove();
                this.styleElement = null;
              }
            }
            async bind(e) {
              if (e.attached || e.missingFile) return;
              e.attached = !0;
              if (this.isFontLoadingAPISupported) {
                const t = e.createNativeFontFace();
                if (t) {
                  this.addNativeFontFace(t);
                  try {
                    await t.loaded;
                  } catch (i) {
                    this._onUnsupportedFeature({
                      featureId: n.UNSUPPORTED_FEATURES.errorFontLoadNative,
                    });
                    (0, n.warn)(`Failed to load font '${t.family}': '${i}'.`);
                    e.disableFontFace = !0;
                    throw i;
                  }
                }
                return;
              }
              const t = e.createFontFaceRule();
              if (t) {
                this.insertRule(t);
                if (this.isSyncFontLoadingSupported) return;
                await new Promise((i) => {
                  const n = this._queueLoadingCallback(i);
                  this._prepareFontLoadEvent([t], [e], n);
                });
              }
            }
            _queueLoadingCallback(e) {
              (0, n.unreachable)("Abstract method `_queueLoadingCallback`.");
            }
            get isFontLoadingAPISupported() {
              return (0, n.shadow)(
                this,
                "isFontLoadingAPISupported",
                !!this._document?.fonts
              );
            }
            get isSyncFontLoadingSupported() {
              (0, n.unreachable)(
                "Abstract method `isSyncFontLoadingSupported`."
              );
            }
            get _loadTestFont() {
              (0, n.unreachable)("Abstract method `_loadTestFont`.");
            }
            _prepareFontLoadEvent(e, t, i) {
              (0, n.unreachable)("Abstract method `_prepareFontLoadEvent`.");
            }
          }
          let a;
          t.FontLoader = a;
          t.FontLoader = a = class extends r {
            constructor(e) {
              super(e);
              this.loadingContext = { requests: [], nextRequestId: 0 };
              this.loadTestFontId = 0;
            }
            get isSyncFontLoadingSupported() {
              let e = !1;
              if ("undefined" == typeof navigator) e = !0;
              else if (
                /Mozilla\/5.0.*?rv:(\d+).*? Gecko/.exec(
                  navigator.userAgent
                )?.[1] >= 14
              )
                e = !0;
              return (0, n.shadow)(this, "isSyncFontLoadingSupported", e);
            }
            _queueLoadingCallback(e) {
              const t = this.loadingContext,
                i = {
                  id: "pdfjs-font-loading-" + t.nextRequestId++,
                  done: !1,
                  complete: function () {
                    (0, n.assert)(
                      !i.done,
                      "completeRequest() cannot be called twice."
                    );
                    i.done = !0;
                    for (; t.requests.length > 0 && t.requests[0].done; ) {
                      const e = t.requests.shift();
                      setTimeout(e.callback, 0);
                    }
                  },
                  callback: e,
                };
              t.requests.push(i);
              return i;
            }
            get _loadTestFont() {
              return (0, n.shadow)(
                this,
                "_loadTestFont",
                atob(
                  "T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQAFQAABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAAALwAAAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgAAAAGbmFtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1AAsD6AAAAADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD6AAAAAAD6AABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACMAooCvAAAAeAAMQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4DIP84AFoDIQAAAAAAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAAAAEAAQAAAAEAAAAAAAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUAAQAAAAEAAAAAAAYAAQAAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgABAAMAAQQJAAMAAgABAAMAAQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABYAAAAAAAAAwAAAAMAAAAcAAEAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAAAC7////TAAEAAAAAAAABBgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAAAAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgcA/gXBIwMAYuL+nz5tQXkD5j3CBLnEQACAQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYAAABAQAADwACAQEEE/t3Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQAAAAAAAABAAAAAMmJbzEAAAAAzgTjFQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAgABAAAAAAAAAAAD6AAAAAAAAA=="
                )
              );
            }
            _prepareFontLoadEvent(e, t, i) {
              function r(e, t) {
                return (
                  (e.charCodeAt(t) << 24) |
                  (e.charCodeAt(t + 1) << 16) |
                  (e.charCodeAt(t + 2) << 8) |
                  (255 & e.charCodeAt(t + 3))
                );
              }
              function a(e, t, i, n) {
                return e.substring(0, t) + n + e.substring(t + i);
              }
              let s, o;
              const l = this._document.createElement("canvas");
              l.width = 1;
              l.height = 1;
              const c = l.getContext("2d");
              let h = 0;
              const u = `lt${Date.now()}${this.loadTestFontId++}`;
              let d = this._loadTestFont;
              d = a(d, 976, u.length, u);
              const f = 1482184792;
              let p = r(d, 16);
              for (s = 0, o = u.length - 3; s < o; s += 4)
                p = (p - f + r(u, s)) | 0;
              if (s < u.length) p = (p - f + r(u + "XXX", s)) | 0;
              d = a(d, 16, 4, (0, n.string32)(p));
              const g = `@font-face {font-family:"${u}";src:url(data:font/opentype;base64,${btoa(
                d
              )});}`;
              this.insertRule(g);
              const m = [];
              for (s = 0, o = t.length; s < o; s++) m.push(t[s].loadedName);
              m.push(u);
              const v = this._document.createElement("div");
              v.style.visibility = "hidden";
              v.style.width = v.style.height = "10px";
              v.style.position = "absolute";
              v.style.top = v.style.left = "0px";
              for (s = 0, o = m.length; s < o; ++s) {
                const e = this._document.createElement("span");
                e.textContent = "Hi";
                e.style.fontFamily = m[s];
                v.appendChild(e);
              }
              this._document.body.appendChild(v);
              !(function e(t, i) {
                h++;
                if (!(h > 30)) {
                  c.font = "30px " + t;
                  c.fillText(".", 0, 20);
                  if (!(c.getImageData(0, 0, 1, 1).data[3] > 0))
                    setTimeout(e.bind(null, t, i));
                  else i();
                } else {
                  (0, n.warn)("Load test font never loaded.");
                  i();
                }
              })(u, () => {
                this._document.body.removeChild(v);
                i.complete();
              });
            }
          };
          t.FontFaceObject = class {
            constructor(
              e,
              {
                isEvalSupported: t = !0,
                disableFontFace: i = !1,
                ignoreErrors: n = !1,
                onUnsupportedFeature: r = null,
                fontRegistry: a = null,
              }
            ) {
              this.compiledGlyphs = Object.create(null);
              for (const t in e) this[t] = e[t];
              this.isEvalSupported = !1 !== t;
              this.disableFontFace = !0 === i;
              this.ignoreErrors = !0 === n;
              this._onUnsupportedFeature = r;
              this.fontRegistry = a;
            }
            createNativeFontFace() {
              if (!this.data || this.disableFontFace) return null;
              const e = new FontFace(this.loadedName, this.data, {});
              if (this.fontRegistry) this.fontRegistry.registerFont(this);
              return e;
            }
            createFontFaceRule() {
              if (!this.data || this.disableFontFace) return null;
              const e = (0, n.bytesToString)(new Uint8Array(this.data)),
                t = `url(data:${this.mimetype};base64,${btoa(e)});`,
                i = `@font-face {font-family:"${this.loadedName}";src:${t}}`;
              if (this.fontRegistry) this.fontRegistry.registerFont(this, t);
              return i;
            }
            getPathGenerator(e, t) {
              if (void 0 !== this.compiledGlyphs[t])
                return this.compiledGlyphs[t];
              let i, r;
              try {
                i = e.get(this.loadedName + "_path_" + t);
              } catch (e) {
                if (!this.ignoreErrors) throw e;
                if (this._onUnsupportedFeature)
                  this._onUnsupportedFeature({
                    featureId: n.UNSUPPORTED_FEATURES.errorFontGetPath,
                  });
                (0, n.warn)(`getPathGenerator - ignoring character: "${e}".`);
                return (this.compiledGlyphs[t] = function (e, t) {});
              }
              if (this.isEvalSupported && n.IsEvalSupportedCached.value) {
                let e,
                  n = "";
                for (let t = 0, a = i.length; t < a; t++) {
                  r = i[t];
                  if (void 0 !== r.args) e = r.args.join(",");
                  else e = "";
                  n += "c." + r.cmd + "(" + e + ");\n";
                }
                return (this.compiledGlyphs[t] = new Function("c", "size", n));
              }
              return (this.compiledGlyphs[t] = function (e, t) {
                for (let n = 0, a = i.length; n < a; n++) {
                  r = i[n];
                  if ("scale" === r.cmd) r.args = [t, -t];
                  e[r.cmd].apply(e, r.args);
                }
              });
            }
          };
        },
        (e, t, i) => {
          Object.defineProperty(t, "__esModule", { value: !0 });
          t.NodeCMapReaderFactory = t.NodeCanvasFactory = void 0;
          var n = i(1),
            r = i(4),
            a = i(2);
          let s = class {
            constructor() {
              (0, a.unreachable)("Not implemented: NodeCanvasFactory");
            }
          };
          t.NodeCanvasFactory = s;
          let o = class {
            constructor() {
              (0, a.unreachable)("Not implemented: NodeCMapReaderFactory");
            }
          };
          t.NodeCMapReaderFactory = o;
          if (r.isNodeJS) {
            t.NodeCanvasFactory = s = class extends n.BaseCanvasFactory {
              create(e, t) {
                if (e <= 0 || t <= 0) throw new Error("Invalid canvas size");
                const i = require("canvas").createCanvas(e, t);
                return { canvas: i, context: i.getContext("2d") };
              }
            };
            t.NodeCMapReaderFactory = o = class extends (
              n.BaseCMapReaderFactory
            ) {
              _fetchData(e, t) {
                return new Promise((i, n) => {
                  require("fs").readFile(e, (e, r) => {
                    if (!e && r)
                      i({ cMapData: new Uint8Array(r), compressionType: t });
                    else n(new Error(e));
                  });
                });
              }
            };
          }
        },
        (e, t, i) => {
          Object.defineProperty(t, "__esModule", { value: !0 });
          t.AnnotationStorage = void 0;
          var n = i(2);
          t.AnnotationStorage = class {
            constructor() {
              this._storage = new Map();
              this._modified = !1;
              this.onSetModified = null;
              this.onResetModified = null;
            }
            getOrCreateValue(e, t) {
              if (this._storage.has(e)) return this._storage.get(e);
              this._storage.set(e, t);
              return t;
            }
            setValue(e, t) {
              const i = this._storage.get(e);
              let n = !1;
              if (void 0 !== i) {
                for (const [e, r] of Object.entries(t))
                  if (i[e] !== r) {
                    n = !0;
                    i[e] = r;
                  }
              } else {
                this._storage.set(e, t);
                n = !0;
              }
              if (n) this._setModified();
            }
            getAll() {
              if (0 === this._storage.size) return null;
              else return (0, n.objectFromEntries)(this._storage);
            }
            get size() {
              return this._storage.size;
            }
            _setModified() {
              if (!this._modified) {
                this._modified = !0;
                if ("function" == typeof this.onSetModified)
                  this.onSetModified();
              }
            }
            resetModified() {
              if (this._modified) {
                this._modified = !1;
                if ("function" == typeof this.onResetModified)
                  this.onResetModified();
              }
            }
          };
        },
        (e, t, i) => {
          Object.defineProperty(t, "__esModule", { value: !0 });
          t.apiCompatibilityParams = void 0;
          var n = i(4);
          const r = Object.create(null);
          !(function () {
            if (n.isNodeJS) r.disableFontFace = !0;
          })();
          const a = Object.freeze(r);
          t.apiCompatibilityParams = a;
        },
        (e, t, i) => {
          Object.defineProperty(t, "__esModule", { value: !0 });
          t.CanvasGraphics = void 0;
          var n = i(2),
            r = i(11);
          const a = 4096,
            s = 16;
          function o(e) {
            if (!e.mozCurrentTransform) {
              e._originalSave = e.save;
              e._originalRestore = e.restore;
              e._originalRotate = e.rotate;
              e._originalScale = e.scale;
              e._originalTranslate = e.translate;
              e._originalTransform = e.transform;
              e._originalSetTransform = e.setTransform;
              e._transformMatrix = e._transformMatrix || [1, 0, 0, 1, 0, 0];
              e._transformStack = [];
              Object.defineProperty(e, "mozCurrentTransform", {
                get: function () {
                  return this._transformMatrix;
                },
              });
              Object.defineProperty(e, "mozCurrentTransformInverse", {
                get: function () {
                  const e = this._transformMatrix,
                    t = e[0],
                    i = e[1],
                    n = e[2],
                    r = e[3],
                    a = e[4],
                    s = e[5],
                    o = t * r - i * n,
                    l = i * n - t * r;
                  return [
                    r / o,
                    i / l,
                    n / l,
                    t / o,
                    (r * a - n * s) / l,
                    (i * a - t * s) / o,
                  ];
                },
              });
              e.save = function () {
                const e = this._transformMatrix;
                this._transformStack.push(e);
                this._transformMatrix = e.slice(0, 6);
                this._originalSave();
              };
              e.restore = function () {
                const e = this._transformStack.pop();
                if (e) {
                  this._transformMatrix = e;
                  this._originalRestore();
                }
              };
              e.translate = function (e, t) {
                const i = this._transformMatrix;
                i[4] = i[0] * e + i[2] * t + i[4];
                i[5] = i[1] * e + i[3] * t + i[5];
                this._originalTranslate(e, t);
              };
              e.scale = function (e, t) {
                const i = this._transformMatrix;
                i[0] = i[0] * e;
                i[1] = i[1] * e;
                i[2] = i[2] * t;
                i[3] = i[3] * t;
                this._originalScale(e, t);
              };
              e.transform = function (t, i, n, r, a, s) {
                const o = this._transformMatrix;
                this._transformMatrix = [
                  o[0] * t + o[2] * i,
                  o[1] * t + o[3] * i,
                  o[0] * n + o[2] * r,
                  o[1] * n + o[3] * r,
                  o[0] * a + o[2] * s + o[4],
                  o[1] * a + o[3] * s + o[5],
                ];
                e._originalTransform(t, i, n, r, a, s);
              };
              e.setTransform = function (t, i, n, r, a, s) {
                this._transformMatrix = [t, i, n, r, a, s];
                e._originalSetTransform(t, i, n, r, a, s);
              };
              e.rotate = function (e) {
                const t = Math.cos(e),
                  i = Math.sin(e),
                  n = this._transformMatrix;
                this._transformMatrix = [
                  n[0] * t + n[2] * i,
                  n[1] * t + n[3] * i,
                  n[0] * -i + n[2] * t,
                  n[1] * -i + n[3] * t,
                  n[4],
                  n[5],
                ];
                this._originalRotate(e);
              };
            }
          }
          const l = (function () {
              function e(e) {
                this.canvasFactory = e;
                this.cache = Object.create(null);
              }
              e.prototype = {
                getCanvas: function (e, t, i, n) {
                  let r;
                  if (void 0 !== this.cache[e]) {
                    r = this.cache[e];
                    this.canvasFactory.reset(r, t, i);
                    r.context.setTransform(1, 0, 0, 1, 0, 0);
                  } else {
                    r = this.canvasFactory.create(t, i);
                    this.cache[e] = r;
                  }
                  if (n) o(r.context);
                  return r;
                },
                clear() {
                  for (const e in this.cache) {
                    const t = this.cache[e];
                    this.canvasFactory.destroy(t);
                    delete this.cache[e];
                  }
                },
              };
              return e;
            })(),
            c = (function () {
              function e() {
                this.alphaIsShape = !1;
                this.fontSize = 0;
                this.fontSizeScale = 1;
                this.textMatrix = n.IDENTITY_MATRIX;
                this.textMatrixScale = 1;
                this.fontMatrix = n.FONT_IDENTITY_MATRIX;
                this.leading = 0;
                this.x = 0;
                this.y = 0;
                this.lineX = 0;
                this.lineY = 0;
                this.charSpacing = 0;
                this.wordSpacing = 0;
                this.textHScale = 1;
                this.textRenderingMode = n.TextRenderingMode.FILL;
                this.textRise = 0;
                this.fillColor = "#000000";
                this.strokeColor = "#000000";
                this.patternFill = !1;
                this.fillAlpha = 1;
                this.strokeAlpha = 1;
                this.lineWidth = 1;
                this.activeSMask = null;
                this.resumeSMaskCtx = null;
                this.transferMaps = null;
              }
              e.prototype = {
                clone: function () {
                  return Object.create(this);
                },
                setCurrentPoint: function (e, t) {
                  this.x = e;
                  this.y = t;
                },
              };
              return e;
            })(),
            h = (function () {
              function e(e, t, i, n, r, a, s) {
                this.ctx = e;
                this.current = new c();
                this.stateStack = [];
                this.pendingClip = null;
                this.pendingEOFill = !1;
                this.res = null;
                this.xobjs = null;
                this.commonObjs = t;
                this.objs = i;
                this.canvasFactory = n;
                this.webGLContext = r;
                this.imageLayer = a;
                this.groupStack = [];
                this.processingType3 = null;
                this.baseTransform = null;
                this.baseTransformStack = [];
                this.groupLevel = 0;
                this.smaskStack = [];
                this.smaskCounter = 0;
                this.tempSMask = null;
                this.contentVisible = !0;
                this.markedContentStack = [];
                this.optionalContentConfig = s;
                this.cachedCanvases = new l(this.canvasFactory);
                if (e) o(e);
                this._cachedGetSinglePixelWidth = null;
              }
              function t(e, t, i = null) {
                if ("undefined" != typeof ImageData && t instanceof ImageData) {
                  e.putImageData(t, 0, 0);
                  return;
                }
                const r = t.height,
                  a = t.width,
                  o = r % s,
                  l = (r - o) / s,
                  c = 0 === o ? l : l + 1,
                  h = e.createImageData(a, s);
                let u,
                  d = 0;
                const f = t.data,
                  p = h.data;
                let g, m, v, b, y, w, x, k;
                if (i)
                  switch (i.length) {
                    case 1:
                      y = i[0];
                      w = i[0];
                      x = i[0];
                      k = i[0];
                      break;
                    case 4:
                      y = i[0];
                      w = i[1];
                      x = i[2];
                      k = i[3];
                  }
                if (t.kind === n.ImageKind.GRAYSCALE_1BPP) {
                  const t = f.byteLength,
                    i = new Uint32Array(p.buffer, 0, p.byteLength >> 2),
                    r = i.length,
                    b = (a + 7) >> 3;
                  let y = 4294967295,
                    w = n.IsLittleEndianCached.value ? 4278190080 : 255;
                  if (k) if (255 === k[0] && 0 === k[255]) [y, w] = [w, y];
                  for (g = 0; g < c; g++) {
                    v = g < l ? s : o;
                    u = 0;
                    for (m = 0; m < v; m++) {
                      const e = t - d;
                      let n = 0;
                      const r = e > b ? a : 8 * e - 7,
                        s = -8 & r;
                      let o = 0,
                        l = 0;
                      for (; n < s; n += 8) {
                        l = f[d++];
                        i[u++] = 128 & l ? y : w;
                        i[u++] = 64 & l ? y : w;
                        i[u++] = 32 & l ? y : w;
                        i[u++] = 16 & l ? y : w;
                        i[u++] = 8 & l ? y : w;
                        i[u++] = 4 & l ? y : w;
                        i[u++] = 2 & l ? y : w;
                        i[u++] = 1 & l ? y : w;
                      }
                      for (; n < r; n++) {
                        if (0 === o) {
                          l = f[d++];
                          o = 128;
                        }
                        i[u++] = l & o ? y : w;
                        o >>= 1;
                      }
                    }
                    for (; u < r; ) i[u++] = 0;
                    e.putImageData(h, 0, g * s);
                  }
                } else if (t.kind === n.ImageKind.RGBA_32BPP) {
                  const t = !!(y || w || x);
                  m = 0;
                  b = a * s * 4;
                  for (g = 0; g < l; g++) {
                    p.set(f.subarray(d, d + b));
                    d += b;
                    if (t)
                      for (let e = 0; e < b; e += 4) {
                        if (y) p[e + 0] = y[p[e + 0]];
                        if (w) p[e + 1] = w[p[e + 1]];
                        if (x) p[e + 2] = x[p[e + 2]];
                      }
                    e.putImageData(h, 0, m);
                    m += s;
                  }
                  if (g < c) {
                    b = a * o * 4;
                    p.set(f.subarray(d, d + b));
                    if (t)
                      for (let e = 0; e < b; e += 4) {
                        if (y) p[e + 0] = y[p[e + 0]];
                        if (w) p[e + 1] = w[p[e + 1]];
                        if (x) p[e + 2] = x[p[e + 2]];
                      }
                    e.putImageData(h, 0, m);
                  }
                } else if (t.kind === n.ImageKind.RGB_24BPP) {
                  const t = !!(y || w || x);
                  v = s;
                  b = a * v;
                  for (g = 0; g < c; g++) {
                    if (g >= l) {
                      v = o;
                      b = a * v;
                    }
                    u = 0;
                    for (m = b; m--; ) {
                      p[u++] = f[d++];
                      p[u++] = f[d++];
                      p[u++] = f[d++];
                      p[u++] = 255;
                    }
                    if (t)
                      for (let e = 0; e < u; e += 4) {
                        if (y) p[e + 0] = y[p[e + 0]];
                        if (w) p[e + 1] = w[p[e + 1]];
                        if (x) p[e + 2] = x[p[e + 2]];
                      }
                    e.putImageData(h, 0, g * s);
                  }
                } else throw new Error(`bad image kind: ${t.kind}`);
              }
              function i(e, t) {
                const i = t.height,
                  n = t.width,
                  r = i % s,
                  a = (i - r) / s,
                  o = 0 === r ? a : a + 1,
                  l = e.createImageData(n, s);
                let c = 0;
                const h = t.data,
                  u = l.data;
                for (let t = 0; t < o; t++) {
                  const i = t < a ? s : r;
                  let o = 3;
                  for (let e = 0; e < i; e++) {
                    let e,
                      t = 0;
                    for (let i = 0; i < n; i++) {
                      if (!t) {
                        e = h[c++];
                        t = 128;
                      }
                      u[o] = e & t ? 0 : 255;
                      o += 4;
                      t >>= 1;
                    }
                  }
                  e.putImageData(l, 0, t * s);
                }
              }
              function h(e, t) {
                const i = [
                  "strokeStyle",
                  "fillStyle",
                  "fillRule",
                  "globalAlpha",
                  "lineWidth",
                  "lineCap",
                  "lineJoin",
                  "miterLimit",
                  "globalCompositeOperation",
                  "font",
                ];
                for (let n = 0, r = i.length; n < r; n++) {
                  const r = i[n];
                  if (void 0 !== e[r]) t[r] = e[r];
                }
                if (void 0 !== e.setLineDash) {
                  t.setLineDash(e.getLineDash());
                  t.lineDashOffset = e.lineDashOffset;
                }
              }
              function u(e) {
                e.strokeStyle = "#000000";
                e.fillStyle = "#000000";
                e.fillRule = "nonzero";
                e.globalAlpha = 1;
                e.lineWidth = 1;
                e.lineCap = "butt";
                e.lineJoin = "miter";
                e.miterLimit = 10;
                e.globalCompositeOperation = "source-over";
                e.font = "10px sans-serif";
                if (void 0 !== e.setLineDash) {
                  e.setLineDash([]);
                  e.lineDashOffset = 0;
                }
              }
              function d(e, t, i, n) {
                const r = e.length;
                for (let a = 3; a < r; a += 4) {
                  const r = e[a];
                  if (0 === r) {
                    e[a - 3] = t;
                    e[a - 2] = i;
                    e[a - 1] = n;
                  } else if (r < 255) {
                    const s = 255 - r;
                    e[a - 3] = (e[a - 3] * r + t * s) >> 8;
                    e[a - 2] = (e[a - 2] * r + i * s) >> 8;
                    e[a - 1] = (e[a - 1] * r + n * s) >> 8;
                  }
                }
              }
              function f(e, t, i) {
                const n = e.length;
                for (let r = 3; r < n; r += 4) {
                  const n = i ? i[e[r]] : e[r];
                  t[r] = (t[r] * n * 0.00392156862745098) | 0;
                }
              }
              function p(e, t, i) {
                const n = e.length;
                for (let r = 3; r < n; r += 4) {
                  const n = 77 * e[r - 3] + 152 * e[r - 2] + 28 * e[r - 1];
                  t[r] = i ? (t[r] * i[n >> 8]) >> 8 : (t[r] * n) >> 16;
                }
              }
              function g(e, t, i, n) {
                const r = t.canvas,
                  a = t.context;
                e.setTransform(t.scaleX, 0, 0, t.scaleY, t.offsetX, t.offsetY);
                const s = t.backdrop || null;
                if (t.transferMap || !n.isEnabled) {
                  !(function (e, t, i, n, r, a, s) {
                    const o = !!a,
                      l = o ? a[0] : 0,
                      c = o ? a[1] : 0,
                      h = o ? a[2] : 0;
                    let u;
                    if ("Luminosity" === r) u = p;
                    else u = f;
                    const g = Math.min(n, Math.ceil(1048576 / i));
                    for (let r = 0; r < n; r += g) {
                      const a = Math.min(g, n - r),
                        f = e.getImageData(0, r, i, a),
                        p = t.getImageData(0, r, i, a);
                      if (o) d(f.data, l, c, h);
                      u(f.data, p.data, s);
                      e.putImageData(p, 0, r);
                    }
                  })(a, i, r.width, r.height, t.subtype, s, t.transferMap);
                  e.drawImage(r, 0, 0);
                } else {
                  const a = n.composeSMask({
                    layer: i.canvas,
                    mask: r,
                    properties: { subtype: t.subtype, backdrop: s },
                  });
                  e.setTransform(1, 0, 0, 1, 0, 0);
                  e.drawImage(a, t.offsetX, t.offsetY);
                }
              }
              const m = ["butt", "round", "square"],
                v = ["miter", "round", "bevel"],
                b = {},
                y = {};
              e.prototype = {
                beginDrawing({
                  transform: e,
                  viewport: t,
                  transparency: i = !1,
                  background: n = null,
                }) {
                  const r = this.ctx.canvas.width,
                    a = this.ctx.canvas.height;
                  this.ctx.save();
                  this.ctx.fillStyle = n || "rgb(255, 255, 255)";
                  this.ctx.fillRect(0, 0, r, a);
                  this.ctx.restore();
                  if (i) {
                    const e = this.cachedCanvases.getCanvas(
                      "transparent",
                      r,
                      a,
                      !0
                    );
                    this.compositeCtx = this.ctx;
                    this.transparentCanvas = e.canvas;
                    this.ctx = e.context;
                    this.ctx.save();
                    this.ctx.transform.apply(
                      this.ctx,
                      this.compositeCtx.mozCurrentTransform
                    );
                  }
                  this.ctx.save();
                  u(this.ctx);
                  if (e) this.ctx.transform.apply(this.ctx, e);
                  this.ctx.transform.apply(this.ctx, t.transform);
                  this.baseTransform = this.ctx.mozCurrentTransform.slice();
                  this._combinedScaleFactor = Math.hypot(
                    this.baseTransform[0],
                    this.baseTransform[2]
                  );
                  if (this.imageLayer) this.imageLayer.beginLayout();
                },
                executeOperatorList: function (e, t, i, r) {
                  const a = e.argsArray,
                    s = e.fnArray;
                  let o = t || 0;
                  const l = a.length;
                  if (l === o) return o;
                  const c = l - o > 10 && "function" == typeof i,
                    h = c ? Date.now() + 15 : 0;
                  let u = 0;
                  const d = this.commonObjs,
                    f = this.objs;
                  let p;
                  for (;;) {
                    if (void 0 !== r && o === r.nextBreakPoint) {
                      r.breakIt(o, i);
                      return o;
                    }
                    p = s[o];
                    if (p !== n.OPS.dependency) this[p].apply(this, a[o]);
                    else
                      for (const e of a[o]) {
                        const t = e.startsWith("g_") ? d : f;
                        if (!t.has(e)) {
                          t.get(e, i);
                          return o;
                        }
                      }
                    o++;
                    if (o === l) return o;
                    if (c && ++u > 10) {
                      if (Date.now() > h) {
                        i();
                        return o;
                      }
                      u = 0;
                    }
                  }
                },
                endDrawing: function () {
                  for (
                    ;
                    this.stateStack.length || null !== this.current.activeSMask;

                  )
                    this.restore();
                  this.ctx.restore();
                  if (this.transparentCanvas) {
                    this.ctx = this.compositeCtx;
                    this.ctx.save();
                    this.ctx.setTransform(1, 0, 0, 1, 0, 0);
                    this.ctx.drawImage(this.transparentCanvas, 0, 0);
                    this.ctx.restore();
                    this.transparentCanvas = null;
                  }
                  this.cachedCanvases.clear();
                  this.webGLContext.clear();
                  if (this.imageLayer) this.imageLayer.endLayout();
                },
                setLineWidth: function (e) {
                  this.current.lineWidth = e;
                  this.ctx.lineWidth = e;
                },
                setLineCap: function (e) {
                  this.ctx.lineCap = m[e];
                },
                setLineJoin: function (e) {
                  this.ctx.lineJoin = v[e];
                },
                setMiterLimit: function (e) {
                  this.ctx.miterLimit = e;
                },
                setDash: function (e, t) {
                  const i = this.ctx;
                  if (void 0 !== i.setLineDash) {
                    i.setLineDash(e);
                    i.lineDashOffset = t;
                  }
                },
                setRenderingIntent(e) {},
                setFlatness(e) {},
                setGState: function (e) {
                  for (let t = 0, i = e.length; t < i; t++) {
                    const i = e[t],
                      n = i[0],
                      r = i[1];
                    switch (n) {
                      case "LW":
                        this.setLineWidth(r);
                        break;
                      case "LC":
                        this.setLineCap(r);
                        break;
                      case "LJ":
                        this.setLineJoin(r);
                        break;
                      case "ML":
                        this.setMiterLimit(r);
                        break;
                      case "D":
                        this.setDash(r[0], r[1]);
                        break;
                      case "RI":
                        this.setRenderingIntent(r);
                        break;
                      case "FL":
                        this.setFlatness(r);
                        break;
                      case "Font":
                        this.setFont(r[0], r[1]);
                        break;
                      case "CA":
                        this.current.strokeAlpha = i[1];
                        break;
                      case "ca":
                        this.current.fillAlpha = i[1];
                        this.ctx.globalAlpha = i[1];
                        break;
                      case "BM":
                        this.ctx.globalCompositeOperation = r;
                        break;
                      case "SMask":
                        if (this.current.activeSMask)
                          if (
                            this.stateStack.length > 0 &&
                            this.stateStack[this.stateStack.length - 1]
                              .activeSMask === this.current.activeSMask
                          )
                            this.suspendSMaskGroup();
                          else this.endSMaskGroup();
                        this.current.activeSMask = r ? this.tempSMask : null;
                        if (this.current.activeSMask) this.beginSMaskGroup();
                        this.tempSMask = null;
                        break;
                      case "TR":
                        this.current.transferMaps = r;
                    }
                  }
                },
                beginSMaskGroup: function () {
                  const e = this.current.activeSMask,
                    t = e.canvas.width,
                    i = e.canvas.height,
                    n = "smaskGroupAt" + this.groupLevel,
                    r = this.cachedCanvases.getCanvas(n, t, i, !0),
                    a = this.ctx,
                    s = a.mozCurrentTransform;
                  this.ctx.save();
                  const o = r.context;
                  o.scale(1 / e.scaleX, 1 / e.scaleY);
                  o.translate(-e.offsetX, -e.offsetY);
                  o.transform.apply(o, s);
                  e.startTransformInverse = o.mozCurrentTransformInverse;
                  h(a, o);
                  this.ctx = o;
                  this.setGState([
                    ["BM", "source-over"],
                    ["ca", 1],
                    ["CA", 1],
                  ]);
                  this.groupStack.push(a);
                  this.groupLevel++;
                },
                suspendSMaskGroup: function () {
                  const e = this.ctx;
                  this.groupLevel--;
                  this.ctx = this.groupStack.pop();
                  g(this.ctx, this.current.activeSMask, e, this.webGLContext);
                  this.ctx.restore();
                  this.ctx.save();
                  h(e, this.ctx);
                  this.current.resumeSMaskCtx = e;
                  const t = n.Util.transform(
                    this.current.activeSMask.startTransformInverse,
                    e.mozCurrentTransform
                  );
                  this.ctx.transform.apply(this.ctx, t);
                  e.save();
                  e.setTransform(1, 0, 0, 1, 0, 0);
                  e.clearRect(0, 0, e.canvas.width, e.canvas.height);
                  e.restore();
                },
                resumeSMaskGroup: function () {
                  const e = this.current.resumeSMaskCtx,
                    t = this.ctx;
                  this.ctx = e;
                  this.groupStack.push(t);
                  this.groupLevel++;
                },
                endSMaskGroup: function () {
                  const e = this.ctx;
                  this.groupLevel--;
                  this.ctx = this.groupStack.pop();
                  g(this.ctx, this.current.activeSMask, e, this.webGLContext);
                  this.ctx.restore();
                  h(e, this.ctx);
                  const t = n.Util.transform(
                    this.current.activeSMask.startTransformInverse,
                    e.mozCurrentTransform
                  );
                  this.ctx.transform.apply(this.ctx, t);
                },
                save: function () {
                  this.ctx.save();
                  const e = this.current;
                  this.stateStack.push(e);
                  this.current = e.clone();
                  this.current.resumeSMaskCtx = null;
                },
                restore: function () {
                  if (this.current.resumeSMaskCtx) this.resumeSMaskGroup();
                  if (
                    null !== this.current.activeSMask &&
                    (0 === this.stateStack.length ||
                      this.stateStack[this.stateStack.length - 1]
                        .activeSMask !== this.current.activeSMask)
                  )
                    this.endSMaskGroup();
                  if (0 !== this.stateStack.length) {
                    this.current = this.stateStack.pop();
                    this.ctx.restore();
                    this.pendingClip = null;
                    this._cachedGetSinglePixelWidth = null;
                  } else this.current.activeSMask = null;
                },
                transform: function (e, t, i, n, r, a) {
                  this.ctx.transform(e, t, i, n, r, a);
                  this._cachedGetSinglePixelWidth = null;
                },
                constructPath: function (e, t) {
                  const i = this.ctx,
                    r = this.current;
                  let a = r.x,
                    s = r.y;
                  for (let r = 0, o = 0, l = e.length; r < l; r++)
                    switch (0 | e[r]) {
                      case n.OPS.rectangle:
                        a = t[o++];
                        s = t[o++];
                        const e = t[o++],
                          r = t[o++],
                          l = a + e,
                          c = s + r;
                        i.moveTo(a, s);
                        if (0 === e || 0 === r) i.lineTo(l, c);
                        else {
                          i.lineTo(l, s);
                          i.lineTo(l, c);
                          i.lineTo(a, c);
                        }
                        i.closePath();
                        break;
                      case n.OPS.moveTo:
                        a = t[o++];
                        s = t[o++];
                        i.moveTo(a, s);
                        break;
                      case n.OPS.lineTo:
                        a = t[o++];
                        s = t[o++];
                        i.lineTo(a, s);
                        break;
                      case n.OPS.curveTo:
                        a = t[o + 4];
                        s = t[o + 5];
                        i.bezierCurveTo(
                          t[o],
                          t[o + 1],
                          t[o + 2],
                          t[o + 3],
                          a,
                          s
                        );
                        o += 6;
                        break;
                      case n.OPS.curveTo2:
                        i.bezierCurveTo(
                          a,
                          s,
                          t[o],
                          t[o + 1],
                          t[o + 2],
                          t[o + 3]
                        );
                        a = t[o + 2];
                        s = t[o + 3];
                        o += 4;
                        break;
                      case n.OPS.curveTo3:
                        a = t[o + 2];
                        s = t[o + 3];
                        i.bezierCurveTo(t[o], t[o + 1], a, s, a, s);
                        o += 4;
                        break;
                      case n.OPS.closePath:
                        i.closePath();
                    }
                  r.setCurrentPoint(a, s);
                },
                closePath: function () {
                  this.ctx.closePath();
                },
                stroke: function (e) {
                  e = void 0 !== e ? e : !0;
                  const t = this.ctx,
                    i = this.current.strokeColor;
                  t.globalAlpha = this.current.strokeAlpha;
                  if (this.contentVisible)
                    if ("object" == typeof i && i?.getPattern) {
                      t.save();
                      const e = t.mozCurrentTransform,
                        r = n.Util.singularValueDecompose2dScale(e)[0];
                      t.strokeStyle = i.getPattern(t, this);
                      const a = this.getSinglePixelWidth(),
                        s = this.current.lineWidth * r;
                      if (a < 0 && -a >= s) {
                        t.resetTransform();
                        t.lineWidth = Math.round(this._combinedScaleFactor);
                      } else t.lineWidth = Math.max(a, s);
                      t.stroke();
                      t.restore();
                    } else {
                      const e = this.getSinglePixelWidth();
                      if (e < 0 && -e >= this.current.lineWidth) {
                        t.save();
                        t.resetTransform();
                        t.lineWidth = Math.round(this._combinedScaleFactor);
                        t.stroke();
                        t.restore();
                      } else {
                        t.lineWidth = Math.max(e, this.current.lineWidth);
                        t.stroke();
                      }
                    }
                  if (e) this.consumePath();
                  t.globalAlpha = this.current.fillAlpha;
                },
                closeStroke: function () {
                  this.closePath();
                  this.stroke();
                },
                fill: function (e) {
                  e = void 0 !== e ? e : !0;
                  const t = this.ctx,
                    i = this.current.fillColor;
                  let n = !1;
                  if (this.current.patternFill) {
                    t.save();
                    if (this.baseTransform)
                      t.setTransform.apply(t, this.baseTransform);
                    t.fillStyle = i.getPattern(t, this);
                    n = !0;
                  }
                  if (this.contentVisible)
                    if (this.pendingEOFill) {
                      t.fill("evenodd");
                      this.pendingEOFill = !1;
                    } else t.fill();
                  if (n) t.restore();
                  if (e) this.consumePath();
                },
                eoFill: function () {
                  this.pendingEOFill = !0;
                  this.fill();
                },
                fillStroke: function () {
                  this.fill(!1);
                  this.stroke(!1);
                  this.consumePath();
                },
                eoFillStroke: function () {
                  this.pendingEOFill = !0;
                  this.fillStroke();
                },
                closeFillStroke: function () {
                  this.closePath();
                  this.fillStroke();
                },
                closeEOFillStroke: function () {
                  this.pendingEOFill = !0;
                  this.closePath();
                  this.fillStroke();
                },
                endPath: function () {
                  this.consumePath();
                },
                clip: function () {
                  this.pendingClip = b;
                },
                eoClip: function () {
                  this.pendingClip = y;
                },
                beginText: function () {
                  this.current.textMatrix = n.IDENTITY_MATRIX;
                  this.current.textMatrixScale = 1;
                  this.current.x = this.current.lineX = 0;
                  this.current.y = this.current.lineY = 0;
                },
                endText: function () {
                  const e = this.pendingTextPaths,
                    t = this.ctx;
                  if (void 0 !== e) {
                    t.save();
                    t.beginPath();
                    for (let i = 0; i < e.length; i++) {
                      const n = e[i];
                      t.setTransform.apply(t, n.transform);
                      t.translate(n.x, n.y);
                      n.addToPath(t, n.fontSize);
                    }
                    t.restore();
                    t.clip();
                    t.beginPath();
                    delete this.pendingTextPaths;
                  } else t.beginPath();
                },
                setCharSpacing: function (e) {
                  this.current.charSpacing = e;
                },
                setWordSpacing: function (e) {
                  this.current.wordSpacing = e;
                },
                setHScale: function (e) {
                  this.current.textHScale = e / 100;
                },
                setLeading: function (e) {
                  this.current.leading = -e;
                },
                setFont: function (e, t) {
                  const i = this.commonObjs.get(e),
                    r = this.current;
                  if (!i) throw new Error(`Can't find font for ${e}`);
                  r.fontMatrix = i.fontMatrix || n.FONT_IDENTITY_MATRIX;
                  if (0 === r.fontMatrix[0] || 0 === r.fontMatrix[3])
                    (0, n.warn)("Invalid font matrix for font " + e);
                  if (t < 0) {
                    t = -t;
                    r.fontDirection = -1;
                  } else r.fontDirection = 1;
                  this.current.font = i;
                  this.current.fontSize = t;
                  if (i.isType3Font) return;
                  const a = i.loadedName || "sans-serif";
                  let s = "normal";
                  if (i.black) s = "900";
                  else if (i.bold) s = "bold";
                  const o = i.italic ? "italic" : "normal",
                    l = `"${a}", ${i.fallbackName}`;
                  let c = t;
                  if (t < 16) c = 16;
                  else if (t > 100) c = 100;
                  this.current.fontSizeScale = t / c;
                  this.ctx.font = `${o} ${s} ${c}px ${l}`;
                },
                setTextRenderingMode: function (e) {
                  this.current.textRenderingMode = e;
                },
                setTextRise: function (e) {
                  this.current.textRise = e;
                },
                moveText: function (e, t) {
                  this.current.x = this.current.lineX += e;
                  this.current.y = this.current.lineY += t;
                },
                setLeadingMoveText: function (e, t) {
                  this.setLeading(-t);
                  this.moveText(e, t);
                },
                setTextMatrix: function (e, t, i, n, r, a) {
                  this.current.textMatrix = [e, t, i, n, r, a];
                  this.current.textMatrixScale = Math.sqrt(e * e + t * t);
                  this.current.x = this.current.lineX = 0;
                  this.current.y = this.current.lineY = 0;
                },
                nextLine: function () {
                  this.moveText(0, this.current.leading);
                },
                paintChar(e, t, i, r, a) {
                  const s = this.ctx,
                    o = this.current,
                    l = o.font,
                    c = o.textRenderingMode,
                    h = o.fontSize / o.fontSizeScale,
                    u = c & n.TextRenderingMode.FILL_STROKE_MASK,
                    d = !!(c & n.TextRenderingMode.ADD_TO_PATH_FLAG),
                    f = o.patternFill && !l.missingFile;
                  let p;
                  if (l.disableFontFace || d || f)
                    p = l.getPathGenerator(this.commonObjs, e);
                  if (l.disableFontFace || f) {
                    s.save();
                    s.translate(t, i);
                    s.beginPath();
                    p(s, h);
                    if (r) s.setTransform.apply(s, r);
                    if (
                      u === n.TextRenderingMode.FILL ||
                      u === n.TextRenderingMode.FILL_STROKE
                    )
                      s.fill();
                    if (
                      u === n.TextRenderingMode.STROKE ||
                      u === n.TextRenderingMode.FILL_STROKE
                    ) {
                      if (a) {
                        s.resetTransform();
                        s.lineWidth = Math.round(this._combinedScaleFactor);
                      }
                      s.stroke();
                    }
                    s.restore();
                  } else {
                    if (
                      u === n.TextRenderingMode.FILL ||
                      u === n.TextRenderingMode.FILL_STROKE
                    )
                      s.fillText(e, t, i);
                    if (
                      u === n.TextRenderingMode.STROKE ||
                      u === n.TextRenderingMode.FILL_STROKE
                    )
                      if (a) {
                        s.save();
                        s.moveTo(t, i);
                        s.resetTransform();
                        s.lineWidth = Math.round(this._combinedScaleFactor);
                        s.strokeText(e, 0, 0);
                        s.restore();
                      } else s.strokeText(e, t, i);
                  }
                  if (d)
                    (
                      this.pendingTextPaths || (this.pendingTextPaths = [])
                    ).push({
                      transform: s.mozCurrentTransform,
                      x: t,
                      y: i,
                      fontSize: h,
                      addToPath: p,
                    });
                },
                get isFontSubpixelAAEnabled() {
                  const { context: e } = this.cachedCanvases.getCanvas(
                    "isFontSubpixelAAEnabled",
                    10,
                    10
                  );
                  e.scale(1.5, 1);
                  e.fillText("I", 0, 10);
                  const t = e.getImageData(0, 0, 10, 10).data;
                  let i = !1;
                  for (let e = 3; e < t.length; e += 4)
                    if (t[e] > 0 && t[e] < 255) {
                      i = !0;
                      break;
                    }
                  return (0, n.shadow)(this, "isFontSubpixelAAEnabled", i);
                },
                showText: function (e) {
                  const t = this.current,
                    i = t.font;
                  if (i.isType3Font) return this.showType3Text(e);
                  const r = t.fontSize;
                  if (0 === r) return;
                  const a = this.ctx,
                    s = t.fontSizeScale,
                    o = t.charSpacing,
                    l = t.wordSpacing,
                    c = t.fontDirection,
                    h = t.textHScale * c,
                    u = e.length,
                    d = i.vertical,
                    f = d ? 1 : -1,
                    p = i.defaultVMetrics,
                    g = r * t.fontMatrix[0],
                    m =
                      t.textRenderingMode === n.TextRenderingMode.FILL &&
                      !i.disableFontFace &&
                      !t.patternFill;
                  a.save();
                  let v;
                  if (t.patternFill) {
                    a.save();
                    const e = t.fillColor.getPattern(a, this);
                    v = a.mozCurrentTransform;
                    a.restore();
                    a.fillStyle = e;
                  }
                  a.transform.apply(a, t.textMatrix);
                  a.translate(t.x, t.y + t.textRise);
                  if (c > 0) a.scale(h, -1);
                  else a.scale(h, 1);
                  let b = t.lineWidth,
                    y = !1;
                  const w = t.textMatrixScale;
                  if (0 === w || 0 === b) {
                    const e =
                      t.textRenderingMode &
                      n.TextRenderingMode.FILL_STROKE_MASK;
                    if (
                      e === n.TextRenderingMode.STROKE ||
                      e === n.TextRenderingMode.FILL_STROKE
                    ) {
                      this._cachedGetSinglePixelWidth = null;
                      b = this.getSinglePixelWidth();
                      y = b < 0;
                    }
                  } else b /= w;
                  if (1 !== s) {
                    a.scale(s, s);
                    b /= s;
                  }
                  a.lineWidth = b;
                  let x,
                    k = 0;
                  for (x = 0; x < u; ++x) {
                    const t = e[x];
                    if ((0, n.isNum)(t)) {
                      k += (f * t * r) / 1e3;
                      continue;
                    }
                    let h = !1;
                    const u = (t.isSpace ? l : 0) + o,
                      b = t.fontChar,
                      w = t.accent;
                    let C,
                      S,
                      _,
                      A = t.width;
                    if (d) {
                      const e = t.vmetric || p,
                        i = -(t.vmetric ? e[1] : 0.5 * A) * g,
                        n = e[2] * g;
                      A = e ? -e[0] : A;
                      C = i / s;
                      S = (k + n) / s;
                    } else {
                      C = k / s;
                      S = 0;
                    }
                    if (i.remeasure && A > 0) {
                      const e = ((1e3 * a.measureText(b).width) / r) * s;
                      if (A < e && this.isFontSubpixelAAEnabled) {
                        const t = A / e;
                        h = !0;
                        a.save();
                        a.scale(t, 1);
                        C /= t;
                      } else if (A !== e) C += (((A - e) / 2e3) * r) / s;
                    }
                    if (this.contentVisible && (t.isInFont || i.missingFile))
                      if (m && !w) a.fillText(b, C, S);
                      else {
                        this.paintChar(b, C, S, v, y);
                        if (w) {
                          const e = C + (r * w.offset.x) / s,
                            t = S - (r * w.offset.y) / s;
                          this.paintChar(w.fontChar, e, t, v, y);
                        }
                      }
                    if (d) _ = A * g - u * c;
                    else _ = A * g + u * c;
                    k += _;
                    if (h) a.restore();
                  }
                  if (d) t.y -= k;
                  else t.x += k * h;
                  a.restore();
                },
                showType3Text: function (e) {
                  const t = this.ctx,
                    i = this.current,
                    r = i.font,
                    a = i.fontSize,
                    s = i.fontDirection,
                    o = r.vertical ? 1 : -1,
                    l = i.charSpacing,
                    c = i.wordSpacing,
                    h = i.textHScale * s,
                    u = i.fontMatrix || n.FONT_IDENTITY_MATRIX,
                    d = e.length;
                  let f, p, g, m;
                  if (
                    i.textRenderingMode !== n.TextRenderingMode.INVISIBLE &&
                    0 !== a
                  ) {
                    this._cachedGetSinglePixelWidth = null;
                    t.save();
                    t.transform.apply(t, i.textMatrix);
                    t.translate(i.x, i.y);
                    t.scale(h, s);
                    for (f = 0; f < d; ++f) {
                      p = e[f];
                      if ((0, n.isNum)(p)) {
                        m = (o * p * a) / 1e3;
                        this.ctx.translate(m, 0);
                        i.x += m * h;
                        continue;
                      }
                      const s = (p.isSpace ? c : 0) + l,
                        d = r.charProcOperatorList[p.operatorListId];
                      if (d) {
                        if (this.contentVisible) {
                          this.processingType3 = p;
                          this.save();
                          t.scale(a, a);
                          t.transform.apply(t, u);
                          this.executeOperatorList(d);
                          this.restore();
                        }
                        g = n.Util.applyTransform([p.width, 0], u)[0] * a + s;
                        t.translate(g, 0);
                        i.x += g * h;
                      } else
                        (0, n.warn)(
                          `Type3 character "${p.operatorListId}" is not available.`
                        );
                    }
                    t.restore();
                    this.processingType3 = null;
                  }
                },
                setCharWidth: function (e, t) {},
                setCharWidthAndBounds: function (e, t, i, n, r, a) {
                  this.ctx.rect(i, n, r - i, a - n);
                  this.clip();
                  this.endPath();
                },
                getColorN_Pattern: function (t) {
                  let i;
                  if ("TilingPattern" === t[0]) {
                    const n = t[1],
                      a =
                        this.baseTransform ||
                        this.ctx.mozCurrentTransform.slice(),
                      s = {
                        createCanvasGraphics: (t) =>
                          new e(
                            t,
                            this.commonObjs,
                            this.objs,
                            this.canvasFactory,
                            this.webGLContext
                          ),
                      };
                    i = new r.TilingPattern(t, n, this.ctx, s, a);
                  } else i = (0, r.getShadingPatternFromIR)(t);
                  return i;
                },
                setStrokeColorN: function () {
                  this.current.strokeColor = this.getColorN_Pattern(arguments);
                },
                setFillColorN: function () {
                  this.current.fillColor = this.getColorN_Pattern(arguments);
                  this.current.patternFill = !0;
                },
                setStrokeRGBColor: function (e, t, i) {
                  const r = n.Util.makeHexColor(e, t, i);
                  this.ctx.strokeStyle = r;
                  this.current.strokeColor = r;
                },
                setFillRGBColor: function (e, t, i) {
                  const r = n.Util.makeHexColor(e, t, i);
                  this.ctx.fillStyle = r;
                  this.current.fillColor = r;
                  this.current.patternFill = !1;
                },
                shadingFill: function (e) {
                  if (!this.contentVisible) return;
                  const t = this.ctx;
                  this.save();
                  const i = (0, r.getShadingPatternFromIR)(e);
                  t.fillStyle = i.getPattern(t, this, !0);
                  const a = t.mozCurrentTransformInverse;
                  if (a) {
                    const e = t.canvas,
                      i = e.width,
                      r = e.height,
                      s = n.Util.applyTransform([0, 0], a),
                      o = n.Util.applyTransform([0, r], a),
                      l = n.Util.applyTransform([i, 0], a),
                      c = n.Util.applyTransform([i, r], a),
                      h = Math.min(s[0], o[0], l[0], c[0]),
                      u = Math.min(s[1], o[1], l[1], c[1]),
                      d = Math.max(s[0], o[0], l[0], c[0]),
                      f = Math.max(s[1], o[1], l[1], c[1]);
                    this.ctx.fillRect(h, u, d - h, f - u);
                  } else this.ctx.fillRect(-1e10, -1e10, 2e10, 2e10);
                  this.restore();
                },
                beginInlineImage: function () {
                  (0, n.unreachable)("Should not call beginInlineImage");
                },
                beginImageData: function () {
                  (0, n.unreachable)("Should not call beginImageData");
                },
                paintFormXObjectBegin: function (e, t) {
                  if (this.contentVisible) {
                    this.save();
                    this.baseTransformStack.push(this.baseTransform);
                    if (Array.isArray(e) && 6 === e.length)
                      this.transform.apply(this, e);
                    this.baseTransform = this.ctx.mozCurrentTransform;
                    if (t) {
                      const e = t[2] - t[0],
                        i = t[3] - t[1];
                      this.ctx.rect(t[0], t[1], e, i);
                      this.clip();
                      this.endPath();
                    }
                  }
                },
                paintFormXObjectEnd: function () {
                  if (this.contentVisible) {
                    this.restore();
                    this.baseTransform = this.baseTransformStack.pop();
                  }
                },
                beginGroup: function (e) {
                  if (!this.contentVisible) return;
                  this.save();
                  const t = this.ctx;
                  if (!e.isolated)
                    (0, n.info)("TODO: Support non-isolated groups.");
                  if (e.knockout) (0, n.warn)("Knockout groups not supported.");
                  const i = t.mozCurrentTransform;
                  if (e.matrix) t.transform.apply(t, e.matrix);
                  if (!e.bbox) throw new Error("Bounding box is required.");
                  let r = n.Util.getAxialAlignedBoundingBox(
                    e.bbox,
                    t.mozCurrentTransform
                  );
                  const s = [0, 0, t.canvas.width, t.canvas.height];
                  r = n.Util.intersect(r, s) || [0, 0, 0, 0];
                  const o = Math.floor(r[0]),
                    l = Math.floor(r[1]);
                  let c = Math.max(Math.ceil(r[2]) - o, 1),
                    u = Math.max(Math.ceil(r[3]) - l, 1),
                    d = 1,
                    f = 1;
                  if (c > a) {
                    d = c / a;
                    c = a;
                  }
                  if (u > a) {
                    f = u / a;
                    u = a;
                  }
                  let p = "groupAt" + this.groupLevel;
                  if (e.smask) p += "_smask_" + (this.smaskCounter++ % 2);
                  const g = this.cachedCanvases.getCanvas(p, c, u, !0),
                    m = g.context;
                  m.scale(1 / d, 1 / f);
                  m.translate(-o, -l);
                  m.transform.apply(m, i);
                  if (e.smask)
                    this.smaskStack.push({
                      canvas: g.canvas,
                      context: m,
                      offsetX: o,
                      offsetY: l,
                      scaleX: d,
                      scaleY: f,
                      subtype: e.smask.subtype,
                      backdrop: e.smask.backdrop,
                      transferMap: e.smask.transferMap || null,
                      startTransformInverse: null,
                    });
                  else {
                    t.setTransform(1, 0, 0, 1, 0, 0);
                    t.translate(o, l);
                    t.scale(d, f);
                  }
                  h(t, m);
                  this.ctx = m;
                  this.setGState([
                    ["BM", "source-over"],
                    ["ca", 1],
                    ["CA", 1],
                  ]);
                  this.groupStack.push(t);
                  this.groupLevel++;
                  this.current.activeSMask = null;
                },
                endGroup: function (e) {
                  if (!this.contentVisible) return;
                  this.groupLevel--;
                  const t = this.ctx;
                  this.ctx = this.groupStack.pop();
                  if (void 0 !== this.ctx.imageSmoothingEnabled)
                    this.ctx.imageSmoothingEnabled = !1;
                  else this.ctx.mozImageSmoothingEnabled = !1;
                  if (e.smask) this.tempSMask = this.smaskStack.pop();
                  else this.ctx.drawImage(t.canvas, 0, 0);
                  this.restore();
                },
                beginAnnotations: function () {
                  this.save();
                  if (this.baseTransform)
                    this.ctx.setTransform.apply(this.ctx, this.baseTransform);
                },
                endAnnotations: function () {
                  this.restore();
                },
                beginAnnotation: function (e, t, i) {
                  this.save();
                  u(this.ctx);
                  this.current = new c();
                  if (Array.isArray(e) && 4 === e.length) {
                    const t = e[2] - e[0],
                      i = e[3] - e[1];
                    this.ctx.rect(e[0], e[1], t, i);
                    this.clip();
                    this.endPath();
                  }
                  this.transform.apply(this, t);
                  this.transform.apply(this, i);
                },
                endAnnotation: function () {
                  this.restore();
                },
                paintImageMaskXObject: function (e) {
                  if (!this.contentVisible) return;
                  const t = this.ctx,
                    n = e.width,
                    r = e.height,
                    a = this.current.fillColor,
                    s = this.current.patternFill,
                    o = this.processingType3;
                  if (o && void 0 === o.compiled)
                    if (n <= 1e3 && r <= 1e3)
                      o.compiled = (function (e) {
                        const t = e.width,
                          i = e.height,
                          n = t + 1;
                        let r, a, s, o;
                        const l = new Uint8Array(n * (i + 1)),
                          c = new Uint8Array([
                            0, 2, 4, 0, 1, 0, 5, 4, 8, 10, 0, 8, 0, 2, 1, 0,
                          ]),
                          h = (t + 7) & -8,
                          u = e.data,
                          d = new Uint8Array(h * i);
                        let f = 0;
                        for (r = 0, a = u.length; r < a; r++) {
                          const e = u[r];
                          let t = 128;
                          for (; t > 0; ) {
                            d[f++] = e & t ? 0 : 255;
                            t >>= 1;
                          }
                        }
                        let p = 0;
                        f = 0;
                        if (0 !== d[f]) {
                          l[0] = 1;
                          ++p;
                        }
                        for (s = 1; s < t; s++) {
                          if (d[f] !== d[f + 1]) {
                            l[s] = d[f] ? 2 : 1;
                            ++p;
                          }
                          f++;
                        }
                        if (0 !== d[f]) {
                          l[s] = 2;
                          ++p;
                        }
                        for (r = 1; r < i; r++) {
                          f = r * h;
                          o = r * n;
                          if (d[f - h] !== d[f]) {
                            l[o] = d[f] ? 1 : 8;
                            ++p;
                          }
                          let e = (d[f] ? 4 : 0) + (d[f - h] ? 8 : 0);
                          for (s = 1; s < t; s++) {
                            e =
                              (e >> 2) +
                              (d[f + 1] ? 4 : 0) +
                              (d[f - h + 1] ? 8 : 0);
                            if (c[e]) {
                              l[o + s] = c[e];
                              ++p;
                            }
                            f++;
                          }
                          if (d[f - h] !== d[f]) {
                            l[o + s] = d[f] ? 2 : 4;
                            ++p;
                          }
                          if (p > 1e3) return null;
                        }
                        f = h * (i - 1);
                        o = r * n;
                        if (0 !== d[f]) {
                          l[o] = 8;
                          ++p;
                        }
                        for (s = 1; s < t; s++) {
                          if (d[f] !== d[f + 1]) {
                            l[o + s] = d[f] ? 4 : 8;
                            ++p;
                          }
                          f++;
                        }
                        if (0 !== d[f]) {
                          l[o + s] = 4;
                          ++p;
                        }
                        if (p > 1e3) return null;
                        const g = new Int32Array([0, n, -1, 0, -n, 0, 0, 0, 1]),
                          m = [];
                        for (r = 0; p && r <= i; r++) {
                          let e = r * n;
                          const i = e + t;
                          for (; e < i && !l[e]; ) e++;
                          if (e === i) continue;
                          const a = [e % n, r],
                            s = e;
                          let o = l[e];
                          do {
                            const t = g[o];
                            do {
                              e += t;
                            } while (!l[e]);
                            const i = l[e];
                            if (5 !== i && 10 !== i) {
                              o = i;
                              l[e] = 0;
                            } else {
                              o = i & ((51 * o) >> 4);
                              l[e] &= (o >> 2) | (o << 2);
                            }
                            a.push(e % n);
                            a.push((e / n) | 0);
                            if (!l[e]) --p;
                          } while (s !== e);
                          m.push(a);
                          --r;
                        }
                        return function (e) {
                          e.save();
                          e.scale(1 / t, -1 / i);
                          e.translate(0, -i);
                          e.beginPath();
                          for (let t = 0, i = m.length; t < i; t++) {
                            const i = m[t];
                            e.moveTo(i[0], i[1]);
                            for (let t = 2, n = i.length; t < n; t += 2)
                              e.lineTo(i[t], i[t + 1]);
                          }
                          e.fill();
                          e.beginPath();
                          e.restore();
                        };
                      })({ data: e.data, width: n, height: r });
                    else o.compiled = null;
                  if (o?.compiled) {
                    o.compiled(t);
                    return;
                  }
                  const l = this.cachedCanvases.getCanvas("maskCanvas", n, r),
                    c = l.context;
                  c.save();
                  i(c, e);
                  c.globalCompositeOperation = "source-in";
                  c.fillStyle = s ? a.getPattern(c, this) : a;
                  c.fillRect(0, 0, n, r);
                  c.restore();
                  this.paintInlineImageXObject(l.canvas);
                },
                paintImageMaskXObjectRepeat(e, t, n = 0, r = 0, a, s) {
                  if (!this.contentVisible) return;
                  const o = e.width,
                    l = e.height,
                    c = this.current.fillColor,
                    h = this.current.patternFill,
                    u = this.cachedCanvases.getCanvas("maskCanvas", o, l),
                    d = u.context;
                  d.save();
                  i(d, e);
                  d.globalCompositeOperation = "source-in";
                  d.fillStyle = h ? c.getPattern(d, this) : c;
                  d.fillRect(0, 0, o, l);
                  d.restore();
                  const f = this.ctx;
                  for (let e = 0, i = s.length; e < i; e += 2) {
                    f.save();
                    f.transform(t, n, r, a, s[e], s[e + 1]);
                    f.scale(1, -1);
                    f.drawImage(u.canvas, 0, 0, o, l, 0, -1, 1, 1);
                    f.restore();
                  }
                },
                paintImageMaskXObjectGroup: function (e) {
                  if (!this.contentVisible) return;
                  const t = this.ctx,
                    n = this.current.fillColor,
                    r = this.current.patternFill;
                  for (let a = 0, s = e.length; a < s; a++) {
                    const s = e[a],
                      o = s.width,
                      l = s.height,
                      c = this.cachedCanvases.getCanvas("maskCanvas", o, l),
                      h = c.context;
                    h.save();
                    i(h, s);
                    h.globalCompositeOperation = "source-in";
                    h.fillStyle = r ? n.getPattern(h, this) : n;
                    h.fillRect(0, 0, o, l);
                    h.restore();
                    t.save();
                    t.transform.apply(t, s.transform);
                    t.scale(1, -1);
                    t.drawImage(c.canvas, 0, 0, o, l, 0, -1, 1, 1);
                    t.restore();
                  }
                },
                paintImageXObject: function (e) {
                  if (!this.contentVisible) return;
                  const t = e.startsWith("g_")
                    ? this.commonObjs.get(e)
                    : this.objs.get(e);
                  if (t) this.paintInlineImageXObject(t);
                  else (0, n.warn)("Dependent image isn't ready yet");
                },
                paintImageXObjectRepeat: function (e, t, i, r) {
                  if (!this.contentVisible) return;
                  const a = e.startsWith("g_")
                    ? this.commonObjs.get(e)
                    : this.objs.get(e);
                  if (!a) {
                    (0, n.warn)("Dependent image isn't ready yet");
                    return;
                  }
                  const s = a.width,
                    o = a.height,
                    l = [];
                  for (let e = 0, n = r.length; e < n; e += 2)
                    l.push({
                      transform: [t, 0, 0, i, r[e], r[e + 1]],
                      x: 0,
                      y: 0,
                      w: s,
                      h: o,
                    });
                  this.paintInlineImageXObjectGroup(a, l);
                },
                paintInlineImageXObject: function (e) {
                  if (!this.contentVisible) return;
                  const i = e.width,
                    n = e.height,
                    r = this.ctx;
                  this.save();
                  r.scale(1 / i, -1 / n);
                  const a = r.mozCurrentTransformInverse,
                    s = a[0],
                    o = a[1];
                  let l = Math.max(Math.sqrt(s * s + o * o), 1);
                  const c = a[2],
                    h = a[3];
                  let u,
                    d,
                    f,
                    p = Math.max(Math.sqrt(c * c + h * h), 1);
                  if (
                    ("function" == typeof HTMLElement &&
                      e instanceof HTMLElement) ||
                    !e.data
                  )
                    u = e;
                  else {
                    d = this.cachedCanvases.getCanvas("inlineImage", i, n);
                    f = d.context;
                    t(f, e, this.current.transferMaps);
                    u = d.canvas;
                  }
                  let g = i,
                    m = n,
                    v = "prescale1";
                  for (; (l > 2 && g > 1) || (p > 2 && m > 1); ) {
                    let e = g,
                      t = m;
                    if (l > 2 && g > 1) {
                      e = Math.ceil(g / 2);
                      l /= g / e;
                    }
                    if (p > 2 && m > 1) {
                      t = Math.ceil(m / 2);
                      p /= m / t;
                    }
                    d = this.cachedCanvases.getCanvas(v, e, t);
                    f = d.context;
                    f.clearRect(0, 0, e, t);
                    f.drawImage(u, 0, 0, g, m, 0, 0, e, t);
                    u = d.canvas;
                    g = e;
                    m = t;
                    v = "prescale1" === v ? "prescale2" : "prescale1";
                  }
                  r.drawImage(u, 0, 0, g, m, 0, -n, i, n);
                  if (this.imageLayer) {
                    const t = this.getCanvasPosition(0, -n);
                    this.imageLayer.appendImage({
                      imgData: e,
                      left: t[0],
                      top: t[1],
                      width: i / a[0],
                      height: n / a[3],
                    });
                  }
                  this.restore();
                },
                paintInlineImageXObjectGroup: function (e, i) {
                  if (!this.contentVisible) return;
                  const n = this.ctx,
                    r = e.width,
                    a = e.height,
                    s = this.cachedCanvases.getCanvas("inlineImage", r, a);
                  t(s.context, e, this.current.transferMaps);
                  for (let t = 0, o = i.length; t < o; t++) {
                    const o = i[t];
                    n.save();
                    n.transform.apply(n, o.transform);
                    n.scale(1, -1);
                    n.drawImage(s.canvas, o.x, o.y, o.w, o.h, 0, -1, 1, 1);
                    if (this.imageLayer) {
                      const t = this.getCanvasPosition(o.x, o.y);
                      this.imageLayer.appendImage({
                        imgData: e,
                        left: t[0],
                        top: t[1],
                        width: r,
                        height: a,
                      });
                    }
                    n.restore();
                  }
                },
                paintSolidColorImageMask: function () {
                  if (this.contentVisible) this.ctx.fillRect(0, 0, 1, 1);
                },
                markPoint: function (e) {},
                markPointProps: function (e, t) {},
                beginMarkedContent: function (e) {
                  this.markedContentStack.push({ visible: !0 });
                },
                beginMarkedContentProps: function (e, t) {
                  if ("OC" === e)
                    this.markedContentStack.push({
                      visible: this.optionalContentConfig.isVisible(t),
                    });
                  else this.markedContentStack.push({ visible: !0 });
                  this.contentVisible = this.isContentVisible();
                },
                endMarkedContent: function () {
                  this.markedContentStack.pop();
                  this.contentVisible = this.isContentVisible();
                },
                beginCompat: function () {},
                endCompat: function () {},
                consumePath: function () {
                  const e = this.ctx;
                  if (this.pendingClip) {
                    if (this.pendingClip === y) e.clip("evenodd");
                    else e.clip();
                    this.pendingClip = null;
                  }
                  e.beginPath();
                },
                getSinglePixelWidth() {
                  if (null === this._cachedGetSinglePixelWidth) {
                    const e = this.ctx.mozCurrentTransform,
                      t = Math.abs(e[0] * e[3] - e[2] * e[1]),
                      i = e[0] ** 2 + e[2] ** 2,
                      n = e[1] ** 2 + e[3] ** 2,
                      r = Math.sqrt(Math.max(i, n)) / t;
                    if (i !== n && this._combinedScaleFactor * r > 1)
                      this._cachedGetSinglePixelWidth =
                        -this._combinedScaleFactor * r;
                    else if (t > Number.EPSILON)
                      this._cachedGetSinglePixelWidth = 1.0000001 * r;
                    else this._cachedGetSinglePixelWidth = 1;
                  }
                  return this._cachedGetSinglePixelWidth;
                },
                getCanvasPosition: function (e, t) {
                  const i = this.ctx.mozCurrentTransform;
                  return [
                    i[0] * e + i[2] * t + i[4],
                    i[1] * e + i[3] * t + i[5],
                  ];
                },
                isContentVisible: function () {
                  for (let e = this.markedContentStack.length - 1; e >= 0; e--)
                    if (!this.markedContentStack[e].visible) return !1;
                  return !0;
                },
              };
              for (const t in n.OPS) e.prototype[n.OPS[t]] = e.prototype[t];
              return e;
            })();
          t.CanvasGraphics = h;
        },
        (e, t, i) => {
          Object.defineProperty(t, "__esModule", { value: !0 });
          t.getShadingPatternFromIR = function (e) {
            const t = r[e[0]];
            if (!t) throw new Error(`Unknown IR type: ${e[0]}`);
            return t.fromIR(e);
          };
          t.TilingPattern = void 0;
          var n = i(2);
          const r = {};
          function a(e, t) {
            if (!t || "undefined" == typeof Path2D) return;
            const i = t[2] - t[0],
              n = t[3] - t[1],
              r = new Path2D();
            r.rect(t[0], t[1], i, n);
            e.clip(r);
          }
          r.RadialAxial = {
            fromIR: function (e) {
              const t = e[1],
                i = e[2],
                n = e[3],
                r = e[4],
                s = e[5],
                o = e[6],
                l = e[7];
              return {
                getPattern: function (e) {
                  a(e, i);
                  let c;
                  if ("axial" === t)
                    c = e.createLinearGradient(r[0], r[1], s[0], s[1]);
                  else if ("radial" === t)
                    c = e.createRadialGradient(r[0], r[1], o, s[0], s[1], l);
                  for (let e = 0, t = n.length; e < t; ++e) {
                    const t = n[e];
                    c.addColorStop(t[0], t[1]);
                  }
                  return c;
                },
              };
            },
          };
          const s = (function () {
            function e(e, t, i, n, r, a, s, o) {
              const l = t.coords,
                c = t.colors,
                h = e.data,
                u = 4 * e.width;
              let d;
              if (l[i + 1] > l[n + 1]) {
                d = i;
                i = n;
                n = d;
                d = a;
                a = s;
                s = d;
              }
              if (l[n + 1] > l[r + 1]) {
                d = n;
                n = r;
                r = d;
                d = s;
                s = o;
                o = d;
              }
              if (l[i + 1] > l[n + 1]) {
                d = i;
                i = n;
                n = d;
                d = a;
                a = s;
                s = d;
              }
              const f = (l[i] + t.offsetX) * t.scaleX,
                p = (l[i + 1] + t.offsetY) * t.scaleY,
                g = (l[n] + t.offsetX) * t.scaleX,
                m = (l[n + 1] + t.offsetY) * t.scaleY,
                v = (l[r] + t.offsetX) * t.scaleX,
                b = (l[r + 1] + t.offsetY) * t.scaleY;
              if (p >= b) return;
              const y = c[a],
                w = c[a + 1],
                x = c[a + 2],
                k = c[s],
                C = c[s + 1],
                S = c[s + 2],
                _ = c[o],
                A = c[o + 1],
                F = c[o + 2],
                T = Math.round(p),
                P = Math.round(b);
              let E, I, D, O, R, N, M, B;
              for (let e = T; e <= P; e++) {
                if (e < m) {
                  let t;
                  if (e < p) t = 0;
                  else if (p === m) t = 1;
                  else t = (p - e) / (p - m);
                  E = f - (f - g) * t;
                  I = y - (y - k) * t;
                  D = w - (w - C) * t;
                  O = x - (x - S) * t;
                } else {
                  let t;
                  if (e > b) t = 1;
                  else if (m === b) t = 0;
                  else t = (m - e) / (m - b);
                  E = g - (g - v) * t;
                  I = k - (k - _) * t;
                  D = C - (C - A) * t;
                  O = S - (S - F) * t;
                }
                let t;
                if (e < p) t = 0;
                else if (e > b) t = 1;
                else t = (p - e) / (p - b);
                R = f - (f - v) * t;
                N = y - (y - _) * t;
                M = w - (w - A) * t;
                B = x - (x - F) * t;
                const i = Math.round(Math.min(E, R)),
                  n = Math.round(Math.max(E, R));
                let r = u * e + 4 * i;
                for (let e = i; e <= n; e++) {
                  t = (E - e) / (E - R);
                  if (t < 0) t = 0;
                  else if (t > 1) t = 1;
                  h[r++] = (I - (I - N) * t) | 0;
                  h[r++] = (D - (D - M) * t) | 0;
                  h[r++] = (O - (O - B) * t) | 0;
                  h[r++] = 255;
                }
              }
            }
            function t(t, i, n) {
              const r = i.coords,
                a = i.colors;
              let s, o;
              switch (i.type) {
                case "lattice":
                  const l = i.verticesPerRow,
                    c = Math.floor(r.length / l) - 1,
                    h = l - 1;
                  for (s = 0; s < c; s++) {
                    let i = s * l;
                    for (let s = 0; s < h; s++, i++) {
                      e(
                        t,
                        n,
                        r[i],
                        r[i + 1],
                        r[i + l],
                        a[i],
                        a[i + 1],
                        a[i + l]
                      );
                      e(
                        t,
                        n,
                        r[i + l + 1],
                        r[i + 1],
                        r[i + l],
                        a[i + l + 1],
                        a[i + 1],
                        a[i + l]
                      );
                    }
                  }
                  break;
                case "triangles":
                  for (s = 0, o = r.length; s < o; s += 3)
                    e(t, n, r[s], r[s + 1], r[s + 2], a[s], a[s + 1], a[s + 2]);
                  break;
                default:
                  throw new Error("illegal figure");
              }
            }
            return function (e, i, n, r, a, s, o, l) {
              const c = Math.floor(e[0]),
                h = Math.floor(e[1]),
                u = Math.ceil(e[2]) - c,
                d = Math.ceil(e[3]) - h,
                f = Math.min(Math.ceil(Math.abs(u * i[0] * 1.1)), 3e3),
                p = Math.min(Math.ceil(Math.abs(d * i[1] * 1.1)), 3e3),
                g = u / f,
                m = d / p,
                v = {
                  coords: n,
                  colors: r,
                  offsetX: -c,
                  offsetY: -h,
                  scaleX: 1 / g,
                  scaleY: 1 / m,
                },
                b = f + 4,
                y = p + 4;
              let w, x, k, C;
              if (l.isEnabled) {
                w = l.drawFigures({
                  width: f,
                  height: p,
                  backgroundColor: s,
                  figures: a,
                  context: v,
                });
                x = o.getCanvas("mesh", b, y, !1);
                x.context.drawImage(w, 2, 2);
                w = x.canvas;
              } else {
                x = o.getCanvas("mesh", b, y, !1);
                const e = x.context,
                  i = e.createImageData(f, p);
                if (s) {
                  const e = i.data;
                  for (k = 0, C = e.length; k < C; k += 4) {
                    e[k] = s[0];
                    e[k + 1] = s[1];
                    e[k + 2] = s[2];
                    e[k + 3] = 255;
                  }
                }
                for (k = 0; k < a.length; k++) t(i, a[k], v);
                e.putImageData(i, 2, 2);
                w = x.canvas;
              }
              return {
                canvas: w,
                offsetX: c - 2 * g,
                offsetY: h - 2 * m,
                scaleX: g,
                scaleY: m,
              };
            };
          })();
          r.Mesh = {
            fromIR: function (e) {
              const t = e[2],
                i = e[3],
                r = e[4],
                o = e[5],
                l = e[6],
                c = e[7],
                h = e[8];
              return {
                getPattern: function (e, u, d) {
                  a(e, c);
                  let f;
                  if (d)
                    f = n.Util.singularValueDecompose2dScale(
                      e.mozCurrentTransform
                    );
                  else {
                    f = n.Util.singularValueDecompose2dScale(u.baseTransform);
                    if (l) {
                      const e = n.Util.singularValueDecompose2dScale(l);
                      f = [f[0] * e[0], f[1] * e[1]];
                    }
                  }
                  const p = s(
                    o,
                    f,
                    t,
                    i,
                    r,
                    d ? null : h,
                    u.cachedCanvases,
                    u.webGLContext
                  );
                  if (!d) {
                    e.setTransform.apply(e, u.baseTransform);
                    if (l) e.transform.apply(e, l);
                  }
                  e.translate(p.offsetX, p.offsetY);
                  e.scale(p.scaleX, p.scaleY);
                  return e.createPattern(p.canvas, "no-repeat");
                },
              };
            },
          };
          r.Dummy = {
            fromIR: function () {
              return {
                getPattern: function () {
                  return "hotpink";
                },
              };
            },
          };
          const o = (function () {
            function e(e, t, i, n, r) {
              this.operatorList = e[2];
              this.matrix = e[3] || [1, 0, 0, 1, 0, 0];
              this.bbox = e[4];
              this.xstep = e[5];
              this.ystep = e[6];
              this.paintType = e[7];
              this.tilingType = e[8];
              this.color = t;
              this.canvasGraphicsFactory = n;
              this.baseTransform = r;
              this.ctx = i;
            }
            e.prototype = {
              createPatternCanvas: function (e) {
                const t = this.operatorList,
                  i = this.bbox,
                  r = this.xstep,
                  a = this.ystep,
                  s = this.paintType,
                  o = this.tilingType,
                  l = this.color,
                  c = this.canvasGraphicsFactory;
                (0, n.info)("TilingType: " + o);
                const h = i[0],
                  u = i[1],
                  d = i[2],
                  f = i[3],
                  p = n.Util.singularValueDecompose2dScale(this.matrix),
                  g = n.Util.singularValueDecompose2dScale(this.baseTransform),
                  m = [p[0] * g[0], p[1] * g[1]],
                  v = this.getSizeAndScale(r, this.ctx.canvas.width, m[0]),
                  b = this.getSizeAndScale(a, this.ctx.canvas.height, m[1]),
                  y = e.cachedCanvases.getCanvas("pattern", v.size, b.size, !0),
                  w = y.context,
                  x = c.createCanvasGraphics(w);
                x.groupLevel = e.groupLevel;
                this.setFillAndStrokeStyleToContext(x, s, l);
                x.transform(v.scale, 0, 0, b.scale, 0, 0);
                x.transform(1, 0, 0, 1, -h, -u);
                this.clipBbox(x, i, h, u, d, f);
                x.executeOperatorList(t);
                this.ctx.transform(1, 0, 0, 1, h, u);
                this.ctx.scale(1 / v.scale, 1 / b.scale);
                return y.canvas;
              },
              getSizeAndScale: function (e, t, i) {
                e = Math.abs(e);
                const n = Math.max(3e3, t);
                let r = Math.ceil(e * i);
                if (r >= n) r = n;
                else i = r / e;
                return { scale: i, size: r };
              },
              clipBbox: function (e, t, i, n, r, a) {
                if (Array.isArray(t) && 4 === t.length) {
                  const t = r - i,
                    s = a - n;
                  e.ctx.rect(i, n, t, s);
                  e.clip();
                  e.endPath();
                }
              },
              setFillAndStrokeStyleToContext: function (e, t, i) {
                const r = e.ctx,
                  a = e.current;
                switch (t) {
                  case 1:
                    const e = this.ctx;
                    r.fillStyle = e.fillStyle;
                    r.strokeStyle = e.strokeStyle;
                    a.fillColor = e.fillStyle;
                    a.strokeColor = e.strokeStyle;
                    break;
                  case 2:
                    const s = n.Util.makeHexColor(i[0], i[1], i[2]);
                    r.fillStyle = s;
                    r.strokeStyle = s;
                    a.fillColor = s;
                    a.strokeColor = s;
                    break;
                  default:
                    throw new n.FormatError(`Unsupported paint type: ${t}`);
                }
              },
              getPattern: function (e, t) {
                (e = this.ctx).setTransform.apply(e, this.baseTransform);
                e.transform.apply(e, this.matrix);
                const i = this.createPatternCanvas(t);
                return e.createPattern(i, "repeat");
              },
            };
            return e;
          })();
          t.TilingPattern = o;
        },
        (e, t) => {
          Object.defineProperty(t, "__esModule", { value: !0 });
          t.GlobalWorkerOptions = void 0;
          const i = Object.create(null);
          t.GlobalWorkerOptions = i;
          i.workerPort = void 0 === i.workerPort ? null : i.workerPort;
          i.workerSrc = void 0 === i.workerSrc ? "" : i.workerSrc;
        },
        (e, t, i) => {
          Object.defineProperty(t, "__esModule", { value: !0 });
          t.MessageHandler = void 0;
          var n = i(2);
          function r(e) {
            if ("object" != typeof e || null === e) return e;
            switch (e.name) {
              case "AbortException":
                return new n.AbortException(e.message);
              case "MissingPDFException":
                return new n.MissingPDFException(e.message);
              case "UnexpectedResponseException":
                return new n.UnexpectedResponseException(e.message, e.status);
              case "UnknownErrorException":
                return new n.UnknownErrorException(e.message, e.details);
              default:
                return new n.UnknownErrorException(e.message, e.toString());
            }
          }
          t.MessageHandler = class {
            constructor(e, t, i) {
              this.sourceName = e;
              this.targetName = t;
              this.comObj = i;
              this.callbackId = 1;
              this.streamId = 1;
              this.postMessageTransfers = !0;
              this.streamSinks = Object.create(null);
              this.streamControllers = Object.create(null);
              this.callbackCapabilities = Object.create(null);
              this.actionHandler = Object.create(null);
              this._onComObjOnMessage = (e) => {
                const t = e.data;
                if (t.targetName !== this.sourceName) return;
                if (t.stream) {
                  this._processStreamMessage(t);
                  return;
                }
                if (t.callback) {
                  const e = t.callbackId,
                    i = this.callbackCapabilities[e];
                  if (!i) throw new Error(`Cannot resolve callback ${e}`);
                  delete this.callbackCapabilities[e];
                  if (1 === t.callback) i.resolve(t.data);
                  else if (2 === t.callback) i.reject(r(t.reason));
                  else throw new Error("Unexpected callback case");
                  return;
                }
                const n = this.actionHandler[t.action];
                if (!n)
                  throw new Error(`Unknown action from worker: ${t.action}`);
                if (!t.callbackId)
                  if (!t.streamId) n(t.data);
                  else this._createStreamSink(t);
                else {
                  const e = this.sourceName,
                    a = t.sourceName;
                  new Promise(function (e) {
                    e(n(t.data));
                  }).then(
                    function (n) {
                      i.postMessage({
                        sourceName: e,
                        targetName: a,
                        callback: 1,
                        callbackId: t.callbackId,
                        data: n,
                      });
                    },
                    function (n) {
                      i.postMessage({
                        sourceName: e,
                        targetName: a,
                        callback: 2,
                        callbackId: t.callbackId,
                        reason: r(n),
                      });
                    }
                  );
                }
              };
              i.addEventListener("message", this._onComObjOnMessage);
            }
            on(e, t) {
              const i = this.actionHandler;
              if (i[e])
                throw new Error(`There is already an actionName called "${e}"`);
              i[e] = t;
            }
            send(e, t, i) {
              this._postMessage(
                {
                  sourceName: this.sourceName,
                  targetName: this.targetName,
                  action: e,
                  data: t,
                },
                i
              );
            }
            sendWithPromise(e, t, i) {
              const r = this.callbackId++,
                a = (0, n.createPromiseCapability)();
              this.callbackCapabilities[r] = a;
              try {
                this._postMessage(
                  {
                    sourceName: this.sourceName,
                    targetName: this.targetName,
                    action: e,
                    callbackId: r,
                    data: t,
                  },
                  i
                );
              } catch (e) {
                a.reject(e);
              }
              return a.promise;
            }
            sendWithStream(e, t, i, a) {
              const s = this.streamId++,
                o = this.sourceName,
                l = this.targetName,
                c = this.comObj;
              return new ReadableStream(
                {
                  start: (i) => {
                    const r = (0, n.createPromiseCapability)();
                    this.streamControllers[s] = {
                      controller: i,
                      startCall: r,
                      pullCall: null,
                      cancelCall: null,
                      isClosed: !1,
                    };
                    this._postMessage(
                      {
                        sourceName: o,
                        targetName: l,
                        action: e,
                        streamId: s,
                        data: t,
                        desiredSize: i.desiredSize,
                      },
                      a
                    );
                    return r.promise;
                  },
                  pull: (e) => {
                    const t = (0, n.createPromiseCapability)();
                    this.streamControllers[s].pullCall = t;
                    c.postMessage({
                      sourceName: o,
                      targetName: l,
                      stream: 6,
                      streamId: s,
                      desiredSize: e.desiredSize,
                    });
                    return t.promise;
                  },
                  cancel: (e) => {
                    (0, n.assert)(
                      e instanceof Error,
                      "cancel must have a valid reason"
                    );
                    const t = (0, n.createPromiseCapability)();
                    this.streamControllers[s].cancelCall = t;
                    this.streamControllers[s].isClosed = !0;
                    c.postMessage({
                      sourceName: o,
                      targetName: l,
                      stream: 1,
                      streamId: s,
                      reason: r(e),
                    });
                    return t.promise;
                  },
                },
                i
              );
            }
            _createStreamSink(e) {
              const t = this,
                i = this.actionHandler[e.action],
                a = e.streamId,
                s = this.sourceName,
                o = e.sourceName,
                l = this.comObj,
                c = {
                  enqueue(e, i = 1, r) {
                    if (this.isCancelled) return;
                    const l = this.desiredSize;
                    this.desiredSize -= i;
                    if (l > 0 && this.desiredSize <= 0) {
                      this.sinkCapability = (0, n.createPromiseCapability)();
                      this.ready = this.sinkCapability.promise;
                    }
                    t._postMessage(
                      {
                        sourceName: s,
                        targetName: o,
                        stream: 4,
                        streamId: a,
                        chunk: e,
                      },
                      r
                    );
                  },
                  close() {
                    if (!this.isCancelled) {
                      this.isCancelled = !0;
                      l.postMessage({
                        sourceName: s,
                        targetName: o,
                        stream: 3,
                        streamId: a,
                      });
                      delete t.streamSinks[a];
                    }
                  },
                  error(e) {
                    (0, n.assert)(
                      e instanceof Error,
                      "error must have a valid reason"
                    );
                    if (!this.isCancelled) {
                      this.isCancelled = !0;
                      l.postMessage({
                        sourceName: s,
                        targetName: o,
                        stream: 5,
                        streamId: a,
                        reason: r(e),
                      });
                    }
                  },
                  sinkCapability: (0, n.createPromiseCapability)(),
                  onPull: null,
                  onCancel: null,
                  isCancelled: !1,
                  desiredSize: e.desiredSize,
                  ready: null,
                };
              c.sinkCapability.resolve();
              c.ready = c.sinkCapability.promise;
              this.streamSinks[a] = c;
              new Promise(function (t) {
                t(i(e.data, c));
              }).then(
                function () {
                  l.postMessage({
                    sourceName: s,
                    targetName: o,
                    stream: 8,
                    streamId: a,
                    success: !0,
                  });
                },
                function (e) {
                  l.postMessage({
                    sourceName: s,
                    targetName: o,
                    stream: 8,
                    streamId: a,
                    reason: r(e),
                  });
                }
              );
            }
            _processStreamMessage(e) {
              const t = e.streamId,
                i = this.sourceName,
                a = e.sourceName,
                s = this.comObj;
              switch (e.stream) {
                case 8:
                  if (e.success) this.streamControllers[t].startCall.resolve();
                  else this.streamControllers[t].startCall.reject(r(e.reason));
                  break;
                case 7:
                  if (e.success) this.streamControllers[t].pullCall.resolve();
                  else this.streamControllers[t].pullCall.reject(r(e.reason));
                  break;
                case 6:
                  if (!this.streamSinks[t]) {
                    s.postMessage({
                      sourceName: i,
                      targetName: a,
                      stream: 7,
                      streamId: t,
                      success: !0,
                    });
                    break;
                  }
                  if (this.streamSinks[t].desiredSize <= 0 && e.desiredSize > 0)
                    this.streamSinks[t].sinkCapability.resolve();
                  this.streamSinks[t].desiredSize = e.desiredSize;
                  const { onPull: o } = this.streamSinks[e.streamId];
                  new Promise(function (e) {
                    e(o && o());
                  }).then(
                    function () {
                      s.postMessage({
                        sourceName: i,
                        targetName: a,
                        stream: 7,
                        streamId: t,
                        success: !0,
                      });
                    },
                    function (e) {
                      s.postMessage({
                        sourceName: i,
                        targetName: a,
                        stream: 7,
                        streamId: t,
                        reason: r(e),
                      });
                    }
                  );
                  break;
                case 4:
                  (0, n.assert)(
                    this.streamControllers[t],
                    "enqueue should have stream controller"
                  );
                  if (this.streamControllers[t].isClosed) break;
                  this.streamControllers[t].controller.enqueue(e.chunk);
                  break;
                case 3:
                  (0, n.assert)(
                    this.streamControllers[t],
                    "close should have stream controller"
                  );
                  if (this.streamControllers[t].isClosed) break;
                  this.streamControllers[t].isClosed = !0;
                  this.streamControllers[t].controller.close();
                  this._deleteStreamController(t);
                  break;
                case 5:
                  (0, n.assert)(
                    this.streamControllers[t],
                    "error should have stream controller"
                  );
                  this.streamControllers[t].controller.error(r(e.reason));
                  this._deleteStreamController(t);
                  break;
                case 2:
                  if (e.success) this.streamControllers[t].cancelCall.resolve();
                  else this.streamControllers[t].cancelCall.reject(r(e.reason));
                  this._deleteStreamController(t);
                  break;
                case 1:
                  if (!this.streamSinks[t]) break;
                  const { onCancel: l } = this.streamSinks[e.streamId];
                  new Promise(function (t) {
                    t(l && l(r(e.reason)));
                  }).then(
                    function () {
                      s.postMessage({
                        sourceName: i,
                        targetName: a,
                        stream: 2,
                        streamId: t,
                        success: !0,
                      });
                    },
                    function (e) {
                      s.postMessage({
                        sourceName: i,
                        targetName: a,
                        stream: 2,
                        streamId: t,
                        reason: r(e),
                      });
                    }
                  );
                  this.streamSinks[t].sinkCapability.reject(r(e.reason));
                  this.streamSinks[t].isCancelled = !0;
                  delete this.streamSinks[t];
                  break;
                default:
                  throw new Error("Unexpected stream case");
              }
            }
            async _deleteStreamController(e) {
              await Promise.allSettled(
                [
                  this.streamControllers[e].startCall,
                  this.streamControllers[e].pullCall,
                  this.streamControllers[e].cancelCall,
                ].map(function (e) {
                  return e && e.promise;
                })
              );
              delete this.streamControllers[e];
            }
            _postMessage(e, t) {
              if (t && this.postMessageTransfers) this.comObj.postMessage(e, t);
              else this.comObj.postMessage(e);
            }
            destroy() {
              this.comObj.removeEventListener(
                "message",
                this._onComObjOnMessage
              );
            }
          };
        },
        (e, t, i) => {
          Object.defineProperty(t, "__esModule", { value: !0 });
          t.Metadata = void 0;
          var n = i(2),
            r = i(15);
          t.Metadata = class {
            constructor(e) {
              (0, n.assert)(
                "string" == typeof e,
                "Metadata: input is not a string"
              );
              e = this._repair(e);
              const t = new r.SimpleXMLParser({
                lowerCaseName: !0,
              }).parseFromString(e);
              this._metadataMap = new Map();
              if (t) this._parse(t);
              this._data = e;
            }
            _repair(e) {
              return e
                .replace(/^[^<]+/, "")
                .replace(/>\\376\\377([^<]+)/g, function (e, t) {
                  const i = t
                    .replace(/\\([0-3])([0-7])([0-7])/g, function (e, t, i, n) {
                      return String.fromCharCode(64 * t + 8 * i + 1 * n);
                    })
                    .replace(/&(amp|apos|gt|lt|quot);/g, function (e, t) {
                      switch (t) {
                        case "amp":
                          return "&";
                        case "apos":
                          return "'";
                        case "gt":
                          return ">";
                        case "lt":
                          return "<";
                        case "quot":
                          return '"';
                      }
                      throw new Error(`_repair: ${t} isn't defined.`);
                    });
                  let n = "";
                  for (let e = 0, t = i.length; e < t; e += 2) {
                    const t = 256 * i.charCodeAt(e) + i.charCodeAt(e + 1);
                    if (t >= 32 && t < 127 && 60 !== t && 62 !== t && 38 !== t)
                      n += String.fromCharCode(t);
                    else
                      n += "&#x" + (65536 + t).toString(16).substring(1) + ";";
                  }
                  return ">" + n;
                });
            }
            _getSequence(e) {
              const t = e.nodeName;
              if ("rdf:bag" !== t && "rdf:seq" !== t && "rdf:alt" !== t)
                return null;
              else return e.childNodes.filter((e) => "rdf:li" === e.nodeName);
            }
            _getCreators(e) {
              if ("dc:creator" !== e.nodeName) return !1;
              if (!e.hasChildNodes()) return !0;
              const t = e.childNodes[0],
                i = this._getSequence(t) || [];
              this._metadataMap.set(
                e.nodeName,
                i.map((e) => e.textContent.trim())
              );
              return !0;
            }
            _parse(e) {
              let t = e.documentElement;
              if ("rdf:rdf" !== t.nodeName) {
                t = t.firstChild;
                for (; t && "rdf:rdf" !== t.nodeName; ) t = t.nextSibling;
              }
              if (t && "rdf:rdf" === t.nodeName && t.hasChildNodes())
                for (const e of t.childNodes)
                  if ("rdf:description" === e.nodeName)
                    for (const t of e.childNodes) {
                      const e = t.nodeName;
                      if ("#text" !== e)
                        if (!this._getCreators(t))
                          this._metadataMap.set(e, t.textContent.trim());
                    }
            }
            getRaw() {
              return this._data;
            }
            get(e) {
              return this._metadataMap.get(e) ?? null;
            }
            getAll() {
              return (0, n.objectFromEntries)(this._metadataMap);
            }
            has(e) {
              return this._metadataMap.has(e);
            }
          };
        },
        (e, t, i) => {
          Object.defineProperty(t, "__esModule", { value: !0 });
          t.SimpleXMLParser = t.SimpleDOMNode = void 0;
          var n = i(2);
          function r(e, t) {
            const i = e[t];
            return " " === i || "\n" === i || "\r" === i || "\t" === i;
          }
          class a {
            constructor(e, t) {
              this.nodeName = e;
              this.nodeValue = t;
              Object.defineProperty(this, "parentNode", {
                value: null,
                writable: !0,
              });
            }
            get firstChild() {
              return this.childNodes && this.childNodes[0];
            }
            get nextSibling() {
              const e = this.parentNode.childNodes;
              if (!e) return;
              const t = e.indexOf(this);
              if (-1 !== t) return e[t + 1];
              else return;
            }
            get textContent() {
              if (!this.childNodes) return this.nodeValue || "";
              else
                return this.childNodes
                  .map(function (e) {
                    return e.textContent;
                  })
                  .join("");
            }
            hasChildNodes() {
              return this.childNodes && this.childNodes.length > 0;
            }
            searchNode(e, t) {
              if (t >= e.length) return this;
              const i = e[t],
                n = [];
              let r = this;
              for (;;) {
                if (i.name === r.nodeName)
                  if (0 === i.pos) {
                    const i = r.searchNode(e, t + 1);
                    if (null !== i) return i;
                  } else if (0 === n.length) return null;
                  else {
                    const [a] = n.pop();
                    let s = 0;
                    for (const n of a.childNodes)
                      if (i.name === n.nodeName) {
                        if (s === i.pos) return n.searchNode(e, t + 1);
                        s++;
                      }
                    return r.searchNode(e, t + 1);
                  }
                if (r.childNodes && 0 !== r.childNodes.length) {
                  n.push([r, 0]);
                  r = r.childNodes[0];
                } else if (0 === n.length) return null;
                else {
                  for (; 0 !== n.length; ) {
                    const [e, t] = n.pop(),
                      i = t + 1;
                    if (i < e.childNodes.length) {
                      n.push([e, i]);
                      r = e.childNodes[i];
                      break;
                    }
                  }
                  if (0 === n.length) return null;
                }
              }
            }
            dump(e) {
              if ("#text" !== this.nodeName) {
                e.push(`<${this.nodeName}`);
                if (this.attributes)
                  for (const t of this.attributes)
                    e.push(` ${t.name}="${(0, n.encodeToXmlString)(t.value)}"`);
                if (this.hasChildNodes()) {
                  e.push(">");
                  for (const t of this.childNodes) t.dump(e);
                  e.push(`</${this.nodeName}>`);
                } else if (this.nodeValue)
                  e.push(
                    `>${(0, n.encodeToXmlString)(this.nodeValue)}</${
                      this.nodeName
                    }>`
                  );
                else e.push("/>");
              } else e.push((0, n.encodeToXmlString)(this.nodeValue));
            }
          }
          t.SimpleDOMNode = a;
          t.SimpleXMLParser = class extends (
            class {
              _resolveEntities(e) {
                return e.replace(/&([^;]+);/g, (e, t) => {
                  if ("#x" === t.substring(0, 2))
                    return String.fromCodePoint(parseInt(t.substring(2), 16));
                  else if ("#" === t.substring(0, 1))
                    return String.fromCodePoint(parseInt(t.substring(1), 10));
                  switch (t) {
                    case "lt":
                      return "<";
                    case "gt":
                      return ">";
                    case "amp":
                      return "&";
                    case "quot":
                      return '"';
                  }
                  return this.onResolveEntity(t);
                });
              }
              _parseContent(e, t) {
                const i = [];
                let n = t;
                function a() {
                  for (; n < e.length && r(e, n); ) ++n;
                }
                for (
                  ;
                  n < e.length && !r(e, n) && ">" !== e[n] && "/" !== e[n];

                )
                  ++n;
                const s = e.substring(t, n);
                a();
                for (
                  ;
                  n < e.length && ">" !== e[n] && "/" !== e[n] && "?" !== e[n];

                ) {
                  a();
                  let t = "",
                    s = "";
                  for (; n < e.length && !r(e, n) && "=" !== e[n]; ) {
                    t += e[n];
                    ++n;
                  }
                  a();
                  if ("=" !== e[n]) return null;
                  ++n;
                  a();
                  const o = e[n];
                  if ('"' !== o && "'" !== o) return null;
                  const l = e.indexOf(o, ++n);
                  if (l < 0) return null;
                  s = e.substring(n, l);
                  i.push({ name: t, value: this._resolveEntities(s) });
                  n = l + 1;
                  a();
                }
                return { name: s, attributes: i, parsed: n - t };
              }
              _parseProcessingInstruction(e, t) {
                let i = t;
                for (
                  ;
                  i < e.length && !r(e, i) && ">" !== e[i] && "/" !== e[i];

                )
                  ++i;
                const n = e.substring(t, i);
                !(function () {
                  for (; i < e.length && r(e, i); ) ++i;
                })();
                const a = i;
                for (; i < e.length && ("?" !== e[i] || ">" !== e[i + 1]); )
                  ++i;
                return { name: n, value: e.substring(a, i), parsed: i - t };
              }
              parseXml(e) {
                let t = 0;
                for (; t < e.length; ) {
                  let i = t;
                  if ("<" === e[t]) {
                    ++i;
                    let t;
                    switch (e[i]) {
                      case "/":
                        ++i;
                        t = e.indexOf(">", i);
                        if (t < 0) {
                          this.onError(-9);
                          return;
                        }
                        this.onEndElement(e.substring(i, t));
                        i = t + 1;
                        break;
                      case "?":
                        ++i;
                        const n = this._parseProcessingInstruction(e, i);
                        if (
                          "?>" !== e.substring(i + n.parsed, i + n.parsed + 2)
                        ) {
                          this.onError(-3);
                          return;
                        }
                        this.onPi(n.name, n.value);
                        i += n.parsed + 2;
                        break;
                      case "!":
                        if ("--" === e.substring(i + 1, i + 3)) {
                          t = e.indexOf("--\x3e", i + 3);
                          if (t < 0) {
                            this.onError(-5);
                            return;
                          }
                          this.onComment(e.substring(i + 3, t));
                          i = t + 3;
                        } else if ("[CDATA[" === e.substring(i + 1, i + 8)) {
                          t = e.indexOf("]]>", i + 8);
                          if (t < 0) {
                            this.onError(-2);
                            return;
                          }
                          this.onCdata(e.substring(i + 8, t));
                          i = t + 3;
                        } else if ("DOCTYPE" === e.substring(i + 1, i + 8)) {
                          const n = e.indexOf("[", i + 8);
                          let r = !1;
                          t = e.indexOf(">", i + 8);
                          if (t < 0) {
                            this.onError(-4);
                            return;
                          }
                          if (n > 0 && t > n) {
                            t = e.indexOf("]>", i + 8);
                            if (t < 0) {
                              this.onError(-4);
                              return;
                            }
                            r = !0;
                          }
                          const a = e.substring(i + 8, t + (r ? 1 : 0));
                          this.onDoctype(a);
                          i = t + (r ? 2 : 1);
                        } else {
                          this.onError(-6);
                          return;
                        }
                        break;
                      default:
                        const r = this._parseContent(e, i);
                        if (null === r) {
                          this.onError(-6);
                          return;
                        }
                        let a = !1;
                        if (
                          "/>" === e.substring(i + r.parsed, i + r.parsed + 2)
                        )
                          a = !0;
                        else if (
                          ">" !== e.substring(i + r.parsed, i + r.parsed + 1)
                        ) {
                          this.onError(-9);
                          return;
                        }
                        this.onBeginElement(r.name, r.attributes, a);
                        i += r.parsed + (a ? 2 : 1);
                    }
                  } else {
                    for (; i < e.length && "<" !== e[i]; ) i++;
                    const n = e.substring(t, i);
                    this.onText(this._resolveEntities(n));
                  }
                  t = i;
                }
              }
              onResolveEntity(e) {
                return `&${e};`;
              }
              onPi(e, t) {}
              onComment(e) {}
              onCdata(e) {}
              onDoctype(e) {}
              onText(e) {}
              onBeginElement(e, t, i) {}
              onEndElement(e) {}
              onError(e) {}
            }
          ) {
            constructor({ hasAttributes: e = !1, lowerCaseName: t = !1 }) {
              super();
              this._currentFragment = null;
              this._stack = null;
              this._errorCode = 0;
              this._hasAttributes = e;
              this._lowerCaseName = t;
            }
            parseFromString(e) {
              this._currentFragment = [];
              this._stack = [];
              this._errorCode = 0;
              this.parseXml(e);
              if (0 !== this._errorCode) return;
              const [t] = this._currentFragment;
              if (t) return { documentElement: t };
              else return;
            }
            onResolveEntity(e) {
              switch (e) {
                case "apos":
                  return "'";
              }
              return super.onResolveEntity(e);
            }
            onText(e) {
              if (
                (function (e) {
                  for (let t = 0, i = e.length; t < i; t++)
                    if (!r(e, t)) return !1;
                  return !0;
                })(e)
              )
                return;
              const t = new a("#text", e);
              this._currentFragment.push(t);
            }
            onCdata(e) {
              const t = new a("#text", e);
              this._currentFragment.push(t);
            }
            onBeginElement(e, t, i) {
              if (this._lowerCaseName) e = e.toLowerCase();
              const n = new a(e);
              n.childNodes = [];
              if (this._hasAttributes) n.attributes = t;
              this._currentFragment.push(n);
              if (!i) {
                this._stack.push(this._currentFragment);
                this._currentFragment = n.childNodes;
              }
            }
            onEndElement(e) {
              this._currentFragment = this._stack.pop() || [];
              const t = this._currentFragment[this._currentFragment.length - 1];
              if (t)
                for (let e = 0, i = t.childNodes.length; e < i; e++)
                  t.childNodes[e].parentNode = t;
            }
            onError(e) {
              this._errorCode = e;
            }
          };
        },
        (e, t, i) => {
          Object.defineProperty(t, "__esModule", { value: !0 });
          t.OptionalContentConfig = void 0;
          var n = i(2);
          class r {
            constructor(e, t) {
              this.visible = !0;
              this.name = e;
              this.intent = t;
            }
          }
          t.OptionalContentConfig = class {
            constructor(e) {
              this.name = null;
              this.creator = null;
              this._order = null;
              this._groups = new Map();
              if (null !== e) {
                this.name = e.name;
                this.creator = e.creator;
                this._order = e.order;
                for (const t of e.groups)
                  this._groups.set(t.id, new r(t.name, t.intent));
                if ("OFF" === e.baseState)
                  for (const e of this._groups) e.visible = !1;
                for (const t of e.on) this._groups.get(t).visible = !0;
                for (const t of e.off) this._groups.get(t).visible = !1;
              }
            }
            isVisible(e) {
              if ("OCG" === e.type) {
                if (!this._groups.has(e.id)) {
                  (0, n.warn)(`Optional content group not found: ${e.id}`);
                  return !0;
                }
                return this._groups.get(e.id).visible;
              } else if ("OCMD" === e.type) {
                if (e.expression)
                  (0, n.warn)("Visibility expression not supported yet.");
                if (!e.policy || "AnyOn" === e.policy) {
                  for (const t of e.ids) {
                    if (!this._groups.has(t)) {
                      (0, n.warn)(`Optional content group not found: ${t}`);
                      return !0;
                    }
                    if (this._groups.get(t).visible) return !0;
                  }
                  return !1;
                } else if ("AllOn" === e.policy) {
                  for (const t of e.ids) {
                    if (!this._groups.has(t)) {
                      (0, n.warn)(`Optional content group not found: ${t}`);
                      return !0;
                    }
                    if (!this._groups.get(t).visible) return !1;
                  }
                  return !0;
                } else if ("AnyOff" === e.policy) {
                  for (const t of e.ids) {
                    if (!this._groups.has(t)) {
                      (0, n.warn)(`Optional content group not found: ${t}`);
                      return !0;
                    }
                    if (!this._groups.get(t).visible) return !0;
                  }
                  return !1;
                } else if ("AllOff" === e.policy) {
                  for (const t of e.ids) {
                    if (!this._groups.has(t)) {
                      (0, n.warn)(`Optional content group not found: ${t}`);
                      return !0;
                    }
                    if (this._groups.get(t).visible) return !1;
                  }
                  return !0;
                }
                (0, n.warn)(`Unknown optional content policy ${e.policy}.`);
                return !0;
              }
              (0, n.warn)(`Unknown group type ${e.type}.`);
              return !0;
            }
            setVisibility(e, t = !0) {
              if (this._groups.has(e)) this._groups.get(e).visible = !!t;
              else (0, n.warn)(`Optional content group not found: ${e}`);
            }
            getOrder() {
              if (!this._groups.size) return null;
              if (this._order) return this._order.slice();
              else return Array.from(this._groups.keys());
            }
            getGroups() {
              if (!this._groups.size) return null;
              else return (0, n.objectFromEntries)(this._groups);
            }
            getGroup(e) {
              return this._groups.get(e) || null;
            }
          };
        },
        (e, t, i) => {
          Object.defineProperty(t, "__esModule", { value: !0 });
          t.PDFDataTransportStream = void 0;
          var n = i(2);
          t.PDFDataTransportStream = class {
            constructor(e, t) {
              (0, n.assert)(
                t,
                'PDFDataTransportStream - missing required "pdfDataRangeTransport" argument.'
              );
              this._queuedChunks = [];
              this._progressiveDone = e.progressiveDone || !1;
              const i = e.initialData;
              if (i?.length > 0) {
                const e = new Uint8Array(i).buffer;
                this._queuedChunks.push(e);
              }
              this._pdfDataRangeTransport = t;
              this._isStreamingSupported = !e.disableStream;
              this._isRangeSupported = !e.disableRange;
              this._contentLength = e.length;
              this._fullRequestReader = null;
              this._rangeReaders = [];
              this._pdfDataRangeTransport.addRangeListener((e, t) => {
                this._onReceiveData({ begin: e, chunk: t });
              });
              this._pdfDataRangeTransport.addProgressListener((e, t) => {
                this._onProgress({ loaded: e, total: t });
              });
              this._pdfDataRangeTransport.addProgressiveReadListener((e) => {
                this._onReceiveData({ chunk: e });
              });
              this._pdfDataRangeTransport.addProgressiveDoneListener(() => {
                this._onProgressiveDone();
              });
              this._pdfDataRangeTransport.transportReady();
            }
            _onReceiveData(e) {
              const t = new Uint8Array(e.chunk).buffer;
              if (void 0 === e.begin)
                if (this._fullRequestReader)
                  this._fullRequestReader._enqueue(t);
                else this._queuedChunks.push(t);
              else {
                const i = this._rangeReaders.some(function (i) {
                  if (i._begin !== e.begin) return !1;
                  i._enqueue(t);
                  return !0;
                });
                (0, n.assert)(
                  i,
                  "_onReceiveData - no `PDFDataTransportStreamRangeReader` instance found."
                );
              }
            }
            get _progressiveDataLength() {
              return this._fullRequestReader?._loaded ?? 0;
            }
            _onProgress(e) {
              if (void 0 === e.total) {
                const t = this._rangeReaders[0];
                if (t?.onProgress) t.onProgress({ loaded: e.loaded });
              } else {
                const t = this._fullRequestReader;
                if (t?.onProgress)
                  t.onProgress({ loaded: e.loaded, total: e.total });
              }
            }
            _onProgressiveDone() {
              if (this._fullRequestReader)
                this._fullRequestReader.progressiveDone();
              this._progressiveDone = !0;
            }
            _removeRangeReader(e) {
              const t = this._rangeReaders.indexOf(e);
              if (t >= 0) this._rangeReaders.splice(t, 1);
            }
            getFullReader() {
              (0, n.assert)(
                !this._fullRequestReader,
                "PDFDataTransportStream.getFullReader can only be called once."
              );
              const e = this._queuedChunks;
              this._queuedChunks = null;
              return new r(this, e, this._progressiveDone);
            }
            getRangeReader(e, t) {
              if (t <= this._progressiveDataLength) return null;
              const i = new a(this, e, t);
              this._pdfDataRangeTransport.requestDataRange(e, t);
              this._rangeReaders.push(i);
              return i;
            }
            cancelAllRequests(e) {
              if (this._fullRequestReader) this._fullRequestReader.cancel(e);
              this._rangeReaders.slice(0).forEach(function (t) {
                t.cancel(e);
              });
              this._pdfDataRangeTransport.abort();
            }
          };
          class r {
            constructor(e, t, i = !1) {
              this._stream = e;
              this._done = i || !1;
              this._filename = null;
              this._queuedChunks = t || [];
              this._loaded = 0;
              for (const e of this._queuedChunks) this._loaded += e.byteLength;
              this._requests = [];
              this._headersReady = Promise.resolve();
              e._fullRequestReader = this;
              this.onProgress = null;
            }
            _enqueue(e) {
              if (!this._done) {
                if (this._requests.length > 0)
                  this._requests.shift().resolve({ value: e, done: !1 });
                else this._queuedChunks.push(e);
                this._loaded += e.byteLength;
              }
            }
            get headersReady() {
              return this._headersReady;
            }
            get filename() {
              return this._filename;
            }
            get isRangeSupported() {
              return this._stream._isRangeSupported;
            }
            get isStreamingSupported() {
              return this._stream._isStreamingSupported;
            }
            get contentLength() {
              return this._stream._contentLength;
            }
            async read() {
              if (this._queuedChunks.length > 0)
                return { value: this._queuedChunks.shift(), done: !1 };
              if (this._done) return { value: void 0, done: !0 };
              const e = (0, n.createPromiseCapability)();
              this._requests.push(e);
              return e.promise;
            }
            cancel(e) {
              this._done = !0;
              this._requests.forEach(function (e) {
                e.resolve({ value: void 0, done: !0 });
              });
              this._requests = [];
            }
            progressiveDone() {
              if (!this._done) this._done = !0;
            }
          }
          class a {
            constructor(e, t, i) {
              this._stream = e;
              this._begin = t;
              this._end = i;
              this._queuedChunk = null;
              this._requests = [];
              this._done = !1;
              this.onProgress = null;
            }
            _enqueue(e) {
              if (!this._done) {
                if (0 === this._requests.length) this._queuedChunk = e;
                else {
                  this._requests.shift().resolve({ value: e, done: !1 });
                  this._requests.forEach(function (e) {
                    e.resolve({ value: void 0, done: !0 });
                  });
                  this._requests = [];
                }
                this._done = !0;
                this._stream._removeRangeReader(this);
              }
            }
            get isStreamingSupported() {
              return !1;
            }
            async read() {
              if (this._queuedChunk) {
                const e = this._queuedChunk;
                this._queuedChunk = null;
                return { value: e, done: !1 };
              }
              if (this._done) return { value: void 0, done: !0 };
              const e = (0, n.createPromiseCapability)();
              this._requests.push(e);
              return e.promise;
            }
            cancel(e) {
              this._done = !0;
              this._requests.forEach(function (e) {
                e.resolve({ value: void 0, done: !0 });
              });
              this._requests = [];
              this._stream._removeRangeReader(this);
            }
          }
        },
        (e, t, i) => {
          Object.defineProperty(t, "__esModule", { value: !0 });
          t.WebGLContext = void 0;
          var n = i(2);
          t.WebGLContext = class {
            constructor({ enable: e = !1 }) {
              this._enabled = !0 === e;
            }
            get isEnabled() {
              let e = this._enabled;
              if (e) e = r.tryInitGL();
              return (0, n.shadow)(this, "isEnabled", e);
            }
            composeSMask({ layer: e, mask: t, properties: i }) {
              return r.composeSMask(e, t, i);
            }
            drawFigures({
              width: e,
              height: t,
              backgroundColor: i,
              figures: n,
              context: a,
            }) {
              return r.drawFigures(e, t, i, n, a);
            }
            clear() {
              r.cleanup();
            }
          };
          const r = (function () {
            function e(e, t, i) {
              const n = e.createShader(i);
              e.shaderSource(n, t);
              e.compileShader(n);
              if (!e.getShaderParameter(n, e.COMPILE_STATUS)) {
                const t = e.getShaderInfoLog(n);
                throw new Error("Error during shader compilation: " + t);
              }
              return n;
            }
            function t(t, i) {
              return e(t, i, t.VERTEX_SHADER);
            }
            function i(t, i) {
              return e(t, i, t.FRAGMENT_SHADER);
            }
            function n(e, t) {
              const i = e.createProgram();
              for (let n = 0, r = t.length; n < r; ++n) e.attachShader(i, t[n]);
              e.linkProgram(i);
              if (!e.getProgramParameter(i, e.LINK_STATUS)) {
                const t = e.getProgramInfoLog(i);
                throw new Error("Error during program linking: " + t);
              }
              return i;
            }
            function r(e, t, i) {
              e.activeTexture(i);
              const n = e.createTexture();
              e.bindTexture(e.TEXTURE_2D, n);
              e.texParameteri(e.TEXTURE_2D, e.TEXTURE_WRAP_S, e.CLAMP_TO_EDGE);
              e.texParameteri(e.TEXTURE_2D, e.TEXTURE_WRAP_T, e.CLAMP_TO_EDGE);
              e.texParameteri(e.TEXTURE_2D, e.TEXTURE_MIN_FILTER, e.NEAREST);
              e.texParameteri(e.TEXTURE_2D, e.TEXTURE_MAG_FILTER, e.NEAREST);
              e.texImage2D(e.TEXTURE_2D, 0, e.RGBA, e.RGBA, e.UNSIGNED_BYTE, t);
              return n;
            }
            let a, s;
            function o() {
              if (!a) {
                s = document.createElement("canvas");
                a = s.getContext("webgl", { premultipliedalpha: !1 });
              }
            }
            let l = null,
              c = null;
            return {
              tryInitGL() {
                try {
                  o();
                  return !!a;
                } catch (e) {}
                return !1;
              },
              composeSMask: function (e, c, h) {
                const u = e.width,
                  d = e.height;
                if (!l)
                  !(function () {
                    o();
                    const e = s;
                    s = null;
                    const r = a;
                    a = null;
                    const c = n(r, [
                      t(
                        r,
                        "  attribute vec2 a_position;                                      attribute vec2 a_texCoord;                                                                                                      uniform vec2 u_resolution;                                                                                                      varying vec2 v_texCoord;                                                                                                        void main() {                                                     vec2 clipSpace = (a_position / u_resolution) * 2.0 - 1.0;       gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);                                                                              v_texCoord = a_texCoord;                                      }                                                             "
                      ),
                      i(
                        r,
                        "  precision mediump float;                                                                                                        uniform vec4 u_backdrop;                                        uniform int u_subtype;                                          uniform sampler2D u_image;                                      uniform sampler2D u_mask;                                                                                                       varying vec2 v_texCoord;                                                                                                        void main() {                                                     vec4 imageColor = texture2D(u_image, v_texCoord);               vec4 maskColor = texture2D(u_mask, v_texCoord);                 if (u_backdrop.a > 0.0) {                                         maskColor.rgb = maskColor.rgb * maskColor.a +                                   u_backdrop.rgb * (1.0 - maskColor.a);         }                                                               float lum;                                                      if (u_subtype == 0) {                                             lum = maskColor.a;                                            } else {                                                          lum = maskColor.r * 0.3 + maskColor.g * 0.59 +                        maskColor.b * 0.11;                                     }                                                               imageColor.a *= lum;                                            imageColor.rgb *= imageColor.a;                                 gl_FragColor = imageColor;                                    }                                                             "
                      ),
                    ]);
                    r.useProgram(c);
                    const h = {};
                    h.gl = r;
                    h.canvas = e;
                    h.resolutionLocation = r.getUniformLocation(
                      c,
                      "u_resolution"
                    );
                    h.positionLocation = r.getAttribLocation(c, "a_position");
                    h.backdropLocation = r.getUniformLocation(c, "u_backdrop");
                    h.subtypeLocation = r.getUniformLocation(c, "u_subtype");
                    const u = r.getAttribLocation(c, "a_texCoord"),
                      d = r.getUniformLocation(c, "u_image"),
                      f = r.getUniformLocation(c, "u_mask"),
                      p = r.createBuffer();
                    r.bindBuffer(r.ARRAY_BUFFER, p);
                    r.bufferData(
                      r.ARRAY_BUFFER,
                      new Float32Array([0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1]),
                      r.STATIC_DRAW
                    );
                    r.enableVertexAttribArray(u);
                    r.vertexAttribPointer(u, 2, r.FLOAT, !1, 0, 0);
                    r.uniform1i(d, 0);
                    r.uniform1i(f, 1);
                    l = h;
                  })();
                const f = l,
                  p = f.canvas,
                  g = f.gl;
                p.width = u;
                p.height = d;
                g.viewport(0, 0, g.drawingBufferWidth, g.drawingBufferHeight);
                g.uniform2f(f.resolutionLocation, u, d);
                if (h.backdrop)
                  g.uniform4f(
                    f.resolutionLocation,
                    h.backdrop[0],
                    h.backdrop[1],
                    h.backdrop[2],
                    1
                  );
                else g.uniform4f(f.resolutionLocation, 0, 0, 0, 0);
                g.uniform1i(
                  f.subtypeLocation,
                  "Luminosity" === h.subtype ? 1 : 0
                );
                const m = r(g, e, g.TEXTURE0),
                  v = r(g, c, g.TEXTURE1),
                  b = g.createBuffer();
                g.bindBuffer(g.ARRAY_BUFFER, b);
                g.bufferData(
                  g.ARRAY_BUFFER,
                  new Float32Array([0, 0, u, 0, 0, d, 0, d, u, 0, u, d]),
                  g.STATIC_DRAW
                );
                g.enableVertexAttribArray(f.positionLocation);
                g.vertexAttribPointer(f.positionLocation, 2, g.FLOAT, !1, 0, 0);
                g.clearColor(0, 0, 0, 0);
                g.enable(g.BLEND);
                g.blendFunc(g.ONE, g.ONE_MINUS_SRC_ALPHA);
                g.clear(g.COLOR_BUFFER_BIT);
                g.drawArrays(g.TRIANGLES, 0, 6);
                g.flush();
                g.deleteTexture(m);
                g.deleteTexture(v);
                g.deleteBuffer(b);
                return p;
              },
              drawFigures: function (e, r, l, h, u) {
                if (!c)
                  !(function () {
                    o();
                    const e = s;
                    s = null;
                    const r = a;
                    a = null;
                    const l = n(r, [
                      t(
                        r,
                        "  attribute vec2 a_position;                                      attribute vec3 a_color;                                                                                                         uniform vec2 u_resolution;                                      uniform vec2 u_scale;                                           uniform vec2 u_offset;                                                                                                          varying vec4 v_color;                                                                                                           void main() {                                                     vec2 position = (a_position + u_offset) * u_scale;              vec2 clipSpace = (position / u_resolution) * 2.0 - 1.0;         gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);                                                                              v_color = vec4(a_color / 255.0, 1.0);                         }                                                             "
                      ),
                      i(
                        r,
                        "  precision mediump float;                                                                                                        varying vec4 v_color;                                                                                                           void main() {                                                     gl_FragColor = v_color;                                       }                                                             "
                      ),
                    ]);
                    r.useProgram(l);
                    const h = {};
                    h.gl = r;
                    h.canvas = e;
                    h.resolutionLocation = r.getUniformLocation(
                      l,
                      "u_resolution"
                    );
                    h.scaleLocation = r.getUniformLocation(l, "u_scale");
                    h.offsetLocation = r.getUniformLocation(l, "u_offset");
                    h.positionLocation = r.getAttribLocation(l, "a_position");
                    h.colorLocation = r.getAttribLocation(l, "a_color");
                    c = h;
                  })();
                const d = c,
                  f = d.canvas,
                  p = d.gl;
                f.width = e;
                f.height = r;
                p.viewport(0, 0, p.drawingBufferWidth, p.drawingBufferHeight);
                p.uniform2f(d.resolutionLocation, e, r);
                let g = 0;
                for (let e = 0, t = h.length; e < t; e++)
                  switch (h[e].type) {
                    case "lattice":
                      g +=
                        (((h[e].coords.length / h[e].verticesPerRow) | 0) - 1) *
                        (h[e].verticesPerRow - 1) *
                        6;
                      break;
                    case "triangles":
                      g += h[e].coords.length;
                  }
                const m = new Float32Array(2 * g),
                  v = new Uint8Array(3 * g),
                  b = u.coords,
                  y = u.colors;
                let w = 0,
                  x = 0;
                for (let e = 0, t = h.length; e < t; e++) {
                  const t = h[e],
                    i = t.coords,
                    n = t.colors;
                  switch (t.type) {
                    case "lattice":
                      const e = t.verticesPerRow,
                        r = (i.length / e) | 0;
                      for (let t = 1; t < r; t++) {
                        let r = t * e + 1;
                        for (let t = 1; t < e; t++, r++) {
                          m[w] = b[i[r - e - 1]];
                          m[w + 1] = b[i[r - e - 1] + 1];
                          m[w + 2] = b[i[r - e]];
                          m[w + 3] = b[i[r - e] + 1];
                          m[w + 4] = b[i[r - 1]];
                          m[w + 5] = b[i[r - 1] + 1];
                          v[x] = y[n[r - e - 1]];
                          v[x + 1] = y[n[r - e - 1] + 1];
                          v[x + 2] = y[n[r - e - 1] + 2];
                          v[x + 3] = y[n[r - e]];
                          v[x + 4] = y[n[r - e] + 1];
                          v[x + 5] = y[n[r - e] + 2];
                          v[x + 6] = y[n[r - 1]];
                          v[x + 7] = y[n[r - 1] + 1];
                          v[x + 8] = y[n[r - 1] + 2];
                          m[w + 6] = m[w + 2];
                          m[w + 7] = m[w + 3];
                          m[w + 8] = m[w + 4];
                          m[w + 9] = m[w + 5];
                          m[w + 10] = b[i[r]];
                          m[w + 11] = b[i[r] + 1];
                          v[x + 9] = v[x + 3];
                          v[x + 10] = v[x + 4];
                          v[x + 11] = v[x + 5];
                          v[x + 12] = v[x + 6];
                          v[x + 13] = v[x + 7];
                          v[x + 14] = v[x + 8];
                          v[x + 15] = y[n[r]];
                          v[x + 16] = y[n[r] + 1];
                          v[x + 17] = y[n[r] + 2];
                          w += 12;
                          x += 18;
                        }
                      }
                      break;
                    case "triangles":
                      for (let e = 0, t = i.length; e < t; e++) {
                        m[w] = b[i[e]];
                        m[w + 1] = b[i[e] + 1];
                        v[x] = y[n[e]];
                        v[x + 1] = y[n[e] + 1];
                        v[x + 2] = y[n[e] + 2];
                        w += 2;
                        x += 3;
                      }
                  }
                }
                if (l) p.clearColor(l[0] / 255, l[1] / 255, l[2] / 255, 1);
                else p.clearColor(0, 0, 0, 0);
                p.clear(p.COLOR_BUFFER_BIT);
                const k = p.createBuffer();
                p.bindBuffer(p.ARRAY_BUFFER, k);
                p.bufferData(p.ARRAY_BUFFER, m, p.STATIC_DRAW);
                p.enableVertexAttribArray(d.positionLocation);
                p.vertexAttribPointer(d.positionLocation, 2, p.FLOAT, !1, 0, 0);
                const C = p.createBuffer();
                p.bindBuffer(p.ARRAY_BUFFER, C);
                p.bufferData(p.ARRAY_BUFFER, v, p.STATIC_DRAW);
                p.enableVertexAttribArray(d.colorLocation);
                p.vertexAttribPointer(
                  d.colorLocation,
                  3,
                  p.UNSIGNED_BYTE,
                  !1,
                  0,
                  0
                );
                p.uniform2f(d.scaleLocation, u.scaleX, u.scaleY);
                p.uniform2f(d.offsetLocation, u.offsetX, u.offsetY);
                p.drawArrays(p.TRIANGLES, 0, g);
                p.flush();
                p.deleteBuffer(k);
                p.deleteBuffer(C);
                return f;
              },
              cleanup() {
                if (l?.canvas) {
                  l.canvas.width = 0;
                  l.canvas.height = 0;
                }
                if (c?.canvas) {
                  c.canvas.width = 0;
                  c.canvas.height = 0;
                }
                l = null;
                c = null;
              },
            };
          })();
        },
        (e, t, i) => {
          Object.defineProperty(t, "__esModule", { value: !0 });
          t.AnnotationLayer = void 0;
          var n = i(1),
            r = i(2),
            a = i(8),
            s = i(20);
          class o {
            static create(e) {
              switch (e.data.annotationType) {
                case r.AnnotationType.LINK:
                  return new c(e);
                case r.AnnotationType.TEXT:
                  return new h(e);
                case r.AnnotationType.WIDGET:
                  switch (e.data.fieldType) {
                    case "Tx":
                      return new d(e);
                    case "Btn":
                      if (e.data.radioButton) return new p(e);
                      else if (e.data.checkBox) return new f(e);
                      return new g(e);
                    case "Ch":
                      return new m(e);
                  }
                  return new u(e);
                case r.AnnotationType.POPUP:
                  return new v(e);
                case r.AnnotationType.FREETEXT:
                  return new y(e);
                case r.AnnotationType.LINE:
                  return new w(e);
                case r.AnnotationType.SQUARE:
                  return new x(e);
                case r.AnnotationType.CIRCLE:
                  return new k(e);
                case r.AnnotationType.POLYLINE:
                  return new C(e);
                case r.AnnotationType.CARET:
                  return new _(e);
                case r.AnnotationType.INK:
                  return new A(e);
                case r.AnnotationType.POLYGON:
                  return new S(e);
                case r.AnnotationType.HIGHLIGHT:
                  return new F(e);
                case r.AnnotationType.UNDERLINE:
                  return new T(e);
                case r.AnnotationType.SQUIGGLY:
                  return new P(e);
                case r.AnnotationType.STRIKEOUT:
                  return new E(e);
                case r.AnnotationType.STAMP:
                  return new I(e);
                case r.AnnotationType.FILEATTACHMENT:
                  return new D(e);
                default:
                  return new l(e);
              }
            }
          }
          class l {
            constructor(
              e,
              {
                isRenderable: t = !1,
                ignoreBorder: i = !1,
                createQuadrilaterals: n = !1,
              } = {}
            ) {
              this.isRenderable = t;
              this.data = e.data;
              this.layer = e.layer;
              this.page = e.page;
              this.viewport = e.viewport;
              this.linkService = e.linkService;
              this.downloadManager = e.downloadManager;
              this.imageResourcesPath = e.imageResourcesPath;
              this.renderInteractiveForms = e.renderInteractiveForms;
              this.svgFactory = e.svgFactory;
              this.annotationStorage = e.annotationStorage;
              this.enableScripting = e.enableScripting;
              this.hasJSActions = e.hasJSActions;
              this._mouseState = e.mouseState;
              if (t) this.container = this._createContainer(i);
              if (n) this.quadrilaterals = this._createQuadrilaterals(i);
            }
            _createContainer(e = !1) {
              const t = this.data,
                i = this.page,
                n = this.viewport,
                a = document.createElement("section");
              let s = t.rect[2] - t.rect[0],
                o = t.rect[3] - t.rect[1];
              a.setAttribute("data-annotation-id", t.id);
              const l = r.Util.normalizeRect([
                t.rect[0],
                i.view[3] - t.rect[1] + i.view[1],
                t.rect[2],
                i.view[3] - t.rect[3] + i.view[1],
              ]);
              a.style.transform = `matrix(${n.transform.join(",")})`;
              a.style.transformOrigin = `${-l[0]}px ${-l[1]}px`;
              if (!e && t.borderStyle.width > 0) {
                a.style.borderWidth = `${t.borderStyle.width}px`;
                if (
                  t.borderStyle.style !== r.AnnotationBorderStyleType.UNDERLINE
                ) {
                  s -= 2 * t.borderStyle.width;
                  o -= 2 * t.borderStyle.width;
                }
                const e = t.borderStyle.horizontalCornerRadius,
                  i = t.borderStyle.verticalCornerRadius;
                if (e > 0 || i > 0) {
                  const t = `${e}px / ${i}px`;
                  a.style.borderRadius = t;
                }
                switch (t.borderStyle.style) {
                  case r.AnnotationBorderStyleType.SOLID:
                    a.style.borderStyle = "solid";
                    break;
                  case r.AnnotationBorderStyleType.DASHED:
                    a.style.borderStyle = "dashed";
                    break;
                  case r.AnnotationBorderStyleType.BEVELED:
                    (0, r.warn)("Unimplemented border style: beveled");
                    break;
                  case r.AnnotationBorderStyleType.INSET:
                    (0, r.warn)("Unimplemented border style: inset");
                    break;
                  case r.AnnotationBorderStyleType.UNDERLINE:
                    a.style.borderBottomStyle = "solid";
                }
                if (t.color)
                  a.style.borderColor = r.Util.makeHexColor(
                    0 | t.color[0],
                    0 | t.color[1],
                    0 | t.color[2]
                  );
                else a.style.borderWidth = 0;
              }
              a.style.left = `${l[0]}px`;
              a.style.top = `${l[1]}px`;
              a.style.width = `${s}px`;
              a.style.height = `${o}px`;
              return a;
            }
            _createQuadrilaterals(e = !1) {
              if (!this.data.quadPoints) return null;
              const t = [],
                i = this.data.rect;
              for (const i of this.data.quadPoints) {
                this.data.rect = [i[2].x, i[2].y, i[1].x, i[1].y];
                t.push(this._createContainer(e));
              }
              this.data.rect = i;
              return t;
            }
            _createPopup(e, t) {
              let i = this.container;
              if (this.quadrilaterals) {
                e = e || this.quadrilaterals;
                i = this.quadrilaterals[0];
              }
              if (!e) {
                (e = document.createElement("div")).style.height =
                  i.style.height;
                e.style.width = i.style.width;
                i.appendChild(e);
              }
              const n = new b({
                container: i,
                trigger: e,
                color: t.color,
                title: t.title,
                modificationDate: t.modificationDate,
                contents: t.contents,
                hideWrapper: !0,
              }).render();
              n.style.left = i.style.width;
              i.appendChild(n);
            }
            _renderQuadrilaterals(e) {
              this.quadrilaterals.forEach((t) => {
                t.className = e;
              });
              return this.quadrilaterals;
            }
            render() {
              (0, r.unreachable)(
                "Abstract method `AnnotationElement.render` called"
              );
            }
          }
          class c extends l {
            constructor(e) {
              super(e, {
                isRenderable: !!(
                  e.data.url ||
                  e.data.dest ||
                  e.data.action ||
                  e.data.isTooltipOnly ||
                  (e.data.actions &&
                    (e.data.actions.Action ||
                      e.data.actions["Mouse Up"] ||
                      e.data.actions["Mouse Down"]))
                ),
                createQuadrilaterals: !0,
              });
            }
            render() {
              const { data: e, linkService: t } = this,
                i = document.createElement("a");
              if (e.url)
                (0, n.addLinkAttributes)(i, {
                  url: e.url,
                  target: e.newWindow
                    ? n.LinkTarget.BLANK
                    : t.externalLinkTarget,
                  rel: t.externalLinkRel,
                  enabled: t.externalLinkEnabled,
                });
              else if (e.action) this._bindNamedAction(i, e.action);
              else if (e.dest) this._bindLink(i, e.dest);
              else if (
                e.actions &&
                (e.actions.Action ||
                  e.actions["Mouse Up"] ||
                  e.actions["Mouse Down"]) &&
                this.enableScripting &&
                this.hasJSActions
              )
                this._bindJSAction(i, e);
              else this._bindLink(i, "");
              if (this.quadrilaterals)
                return this._renderQuadrilaterals("linkAnnotation").map(
                  (e, t) => {
                    const n = 0 === t ? i : i.cloneNode();
                    e.appendChild(n);
                    return e;
                  }
                );
              this.container.className = "linkAnnotation";
              this.container.appendChild(i);
              return this.container;
            }
            _bindLink(e, t) {
              e.href = this.linkService.getDestinationHash(t);
              e.onclick = () => {
                if (t) this.linkService.goToDestination(t);
                return !1;
              };
              if (t || "" === t) e.className = "internalLink";
            }
            _bindNamedAction(e, t) {
              e.href = this.linkService.getAnchorUrl("");
              e.onclick = () => {
                this.linkService.executeNamedAction(t);
                return !1;
              };
              e.className = "internalLink";
            }
            _bindJSAction(e, t) {
              e.href = this.linkService.getAnchorUrl("");
              const i = new Map([
                ["Action", "onclick"],
                ["Mouse Up", "onmouseup"],
                ["Mouse Down", "onmousedown"],
              ]);
              for (const n of Object.keys(t.actions)) {
                const r = i.get(n);
                if (r)
                  e[r] = () => {
                    this.linkService.eventBus?.dispatch(
                      "dispatcheventinsandbox",
                      { source: this, detail: { id: t.id, name: n } }
                    );
                    return !1;
                  };
              }
              e.className = "internalLink";
            }
          }
          class h extends l {
            constructor(e) {
              super(e, {
                isRenderable: !!(
                  e.data.hasPopup ||
                  e.data.title ||
                  e.data.contents
                ),
              });
            }
            render() {
              this.container.className = "textAnnotation";
              const e = document.createElement("img");
              e.style.height = this.container.style.height;
              e.style.width = this.container.style.width;
              e.src =
                this.imageResourcesPath +
                "annotation-" +
                this.data.name.toLowerCase() +
                ".svg";
              e.alt = "[{{type}} Annotation]";
              e.dataset.l10nId = "text_annotation_type";
              e.dataset.l10nArgs = JSON.stringify({ type: this.data.name });
              if (!this.data.hasPopup) this._createPopup(e, this.data);
              this.container.appendChild(e);
              return this.container;
            }
          }
          class u extends l {
            render() {
              if (this.data.alternativeText)
                this.container.title = this.data.alternativeText;
              return this.container;
            }
            _getKeyModifier(e) {
              return (
                (navigator.platform.includes("Win") && e.ctrlKey) ||
                (navigator.platform.includes("Mac") && e.metaKey)
              );
            }
            _setEventListener(e, t, i, n) {
              if (t.includes("mouse"))
                e.addEventListener(t, (e) => {
                  this.linkService.eventBus?.dispatch(
                    "dispatcheventinsandbox",
                    {
                      source: this,
                      detail: {
                        id: this.data.id,
                        name: i,
                        value: n(e),
                        shift: e.shiftKey,
                        modifier: this._getKeyModifier(e),
                      },
                    }
                  );
                });
              else
                e.addEventListener(t, (e) => {
                  this.linkService.eventBus?.dispatch(
                    "dispatcheventinsandbox",
                    {
                      source: this,
                      detail: {
                        id: this.data.id,
                        name: i,
                        value: e.target.checked,
                      },
                    }
                  );
                });
            }
            _setEventListeners(e, t, i) {
              for (const [n, r] of t)
                if ("Action" === r || this.data.actions?.[r])
                  this._setEventListener(e, n, r, i);
            }
          }
          class d extends u {
            constructor(e) {
              super(e, {
                isRenderable:
                  e.renderInteractiveForms ||
                  (!e.data.hasAppearance && !!e.data.fieldValue),
              });
            }
            render() {
              const e = this.annotationStorage,
                t = this.data.id;
              this.container.className = "textWidgetAnnotation";
              let i = null;
              if (this.renderInteractiveForms) {
                const n = e.getOrCreateValue(t, {
                    value: this.data.fieldValue,
                  }).value,
                  r = {
                    userValue: null,
                    formattedValue: null,
                    beforeInputSelectionRange: null,
                    beforeInputValue: null,
                  };
                if (this.data.multiLine) {
                  i = document.createElement("textarea");
                  i.textContent = n;
                } else {
                  i = document.createElement("input");
                  i.type = "text";
                  i.setAttribute("value", n);
                }
                r.userValue = n;
                i.setAttribute("id", t);
                i.addEventListener("input", function (i) {
                  e.setValue(t, { value: i.target.value });
                });
                let a = (e) => {
                  if (r.formattedValue) e.target.value = r.formattedValue;
                  e.target.setSelectionRange(0, 0);
                  r.beforeInputSelectionRange = null;
                };
                if (this.enableScripting && this.hasJSActions) {
                  i.addEventListener("focus", (e) => {
                    if (r.userValue) e.target.value = r.userValue;
                  });
                  i.addEventListener("updatefromsandbox", function (i) {
                    const { detail: n } = i,
                      a = {
                        value() {
                          r.userValue = n.value || "";
                          e.setValue(t, { value: r.userValue.toString() });
                          if (!r.formattedValue) i.target.value = r.userValue;
                        },
                        valueAsString() {
                          r.formattedValue = n.valueAsString || "";
                          if (i.target !== document.activeElement)
                            i.target.value = r.formattedValue;
                          e.setValue(t, { formattedValue: r.formattedValue });
                        },
                        focus() {
                          setTimeout(
                            () => i.target.focus({ preventScroll: !1 }),
                            0
                          );
                        },
                        userName() {
                          i.target.title = n.userName;
                        },
                        hidden() {
                          i.target.style.visibility = n.hidden
                            ? "hidden"
                            : "visible";
                          e.setValue(t, { hidden: n.hidden });
                        },
                        editable() {
                          i.target.disabled = !n.editable;
                        },
                        selRange() {
                          const [e, t] = n.selRange;
                          if (e >= 0 && t < i.target.value.length)
                            i.target.setSelectionRange(e, t);
                        },
                        strokeColor() {
                          const e = n.strokeColor;
                          i.target.style.color = s.ColorConverters[
                            `${e[0]}_HTML`
                          ](e.slice(1));
                        },
                      };
                    Object.keys(n)
                      .filter((e) => e in a)
                      .forEach((e) => a[e]());
                  });
                  if (this.data.actions) {
                    i.addEventListener("keydown", (e) => {
                      r.beforeInputValue = e.target.value;
                      let i = -1;
                      if ("Escape" === e.key) i = 0;
                      else if ("Enter" === e.key) i = 2;
                      else if ("Tab" === e.key) i = 3;
                      if (-1 !== i) {
                        r.userValue = e.target.value;
                        this.linkService.eventBus?.dispatch(
                          "dispatcheventinsandbox",
                          {
                            source: this,
                            detail: {
                              id: t,
                              name: "Keystroke",
                              value: e.target.value,
                              willCommit: !0,
                              commitKey: i,
                              selStart: e.target.selectionStart,
                              selEnd: e.target.selectionEnd,
                            },
                          }
                        );
                      }
                    });
                    const e = a;
                    a = null;
                    i.addEventListener("blur", (i) => {
                      if (this._mouseState.isDown) {
                        r.userValue = i.target.value;
                        this.linkService.eventBus?.dispatch(
                          "dispatcheventinsandbox",
                          {
                            source: this,
                            detail: {
                              id: t,
                              name: "Keystroke",
                              value: i.target.value,
                              willCommit: !0,
                              commitKey: 1,
                              selStart: i.target.selectionStart,
                              selEnd: i.target.selectionEnd,
                            },
                          }
                        );
                      }
                      e(i);
                    });
                    i.addEventListener("mousedown", (e) => {
                      r.beforeInputValue = e.target.value;
                      r.beforeInputSelectionRange = null;
                    });
                    i.addEventListener("keyup", (e) => {
                      if (e.target.selectionStart === e.target.selectionEnd)
                        r.beforeInputSelectionRange = null;
                    });
                    i.addEventListener("select", (e) => {
                      r.beforeInputSelectionRange = [
                        e.target.selectionStart,
                        e.target.selectionEnd,
                      ];
                    });
                    if ("Keystroke" in this.data.actions)
                      i.addEventListener("input", (e) => {
                        let i = -1,
                          n = -1;
                        if (r.beforeInputSelectionRange)
                          [i, n] = r.beforeInputSelectionRange;
                        this.linkService.eventBus?.dispatch(
                          "dispatcheventinsandbox",
                          {
                            source: this,
                            detail: {
                              id: t,
                              name: "Keystroke",
                              value: r.beforeInputValue,
                              change: e.data,
                              willCommit: !1,
                              selStart: i,
                              selEnd: n,
                            },
                          }
                        );
                      });
                    this._setEventListeners(
                      i,
                      [
                        ["focus", "Focus"],
                        ["blur", "Blur"],
                        ["mousedown", "Mouse Down"],
                        ["mouseenter", "Mouse Enter"],
                        ["mouseleave", "Mouse Exit"],
                        ["mouseup", "Mouse Up"],
                      ],
                      (e) => e.target.value
                    );
                  }
                }
                if (a) i.addEventListener("blur", a);
                i.disabled = this.data.readOnly;
                i.name = this.data.fieldName;
                if (null !== this.data.maxLen) i.maxLength = this.data.maxLen;
                if (this.data.comb) {
                  const e =
                    (this.data.rect[2] - this.data.rect[0]) / this.data.maxLen;
                  i.classList.add("comb");
                  i.style.letterSpacing = `calc(${e}px - 1ch)`;
                }
              } else {
                i = document.createElement("div");
                i.textContent = this.data.fieldValue;
                i.style.verticalAlign = "middle";
                i.style.display = "table-cell";
              }
              this._setTextStyle(i);
              this.container.appendChild(i);
              return this.container;
            }
            _setTextStyle(e) {
              const { fontSize: t, fontColor: i } =
                  this.data.defaultAppearanceData,
                n = e.style;
              if (t) n.fontSize = `${t}px`;
              n.color = r.Util.makeHexColor(i[0], i[1], i[2]);
              if (null !== this.data.textAlignment)
                n.textAlign = ["left", "center", "right"][
                  this.data.textAlignment
                ];
            }
          }
          class f extends u {
            constructor(e) {
              super(e, { isRenderable: e.renderInteractiveForms });
            }
            render() {
              const e = this.annotationStorage,
                t = this.data,
                i = t.id,
                n = e.getOrCreateValue(i, {
                  value: t.fieldValue && "Off" !== t.fieldValue,
                }).value;
              this.container.className = "buttonWidgetAnnotation checkBox";
              const r = document.createElement("input");
              r.disabled = t.readOnly;
              r.type = "checkbox";
              r.name = this.data.fieldName;
              if (n) r.setAttribute("checked", !0);
              r.setAttribute("id", i);
              r.addEventListener("change", function (t) {
                const n = t.target.name;
                for (const i of document.getElementsByName(n))
                  if (i !== t.target) {
                    i.checked = !1;
                    e.setValue(
                      i.parentNode.getAttribute("data-annotation-id"),
                      { value: !1 }
                    );
                  }
                e.setValue(i, { value: t.target.checked });
              });
              if (this.enableScripting && this.hasJSActions) {
                r.addEventListener("updatefromsandbox", (t) => {
                  const { detail: n } = t,
                    r = {
                      value() {
                        t.target.checked = "Off" !== n.value;
                        e.setValue(i, { value: t.target.checked });
                      },
                      focus() {
                        setTimeout(
                          () => t.target.focus({ preventScroll: !1 }),
                          0
                        );
                      },
                      hidden() {
                        t.target.style.visibility = n.hidden
                          ? "hidden"
                          : "visible";
                        e.setValue(i, { hidden: n.hidden });
                      },
                      editable() {
                        t.target.disabled = !n.editable;
                      },
                    };
                  Object.keys(n)
                    .filter((e) => e in r)
                    .forEach((e) => r[e]());
                });
                this._setEventListeners(
                  r,
                  [
                    ["change", "Validate"],
                    ["change", "Action"],
                    ["focus", "Focus"],
                    ["blur", "Blur"],
                    ["mousedown", "Mouse Down"],
                    ["mouseenter", "Mouse Enter"],
                    ["mouseleave", "Mouse Exit"],
                    ["mouseup", "Mouse Up"],
                  ],
                  (e) => e.target.checked
                );
              }
              this.container.appendChild(r);
              return this.container;
            }
          }
          class p extends u {
            constructor(e) {
              super(e, { isRenderable: e.renderInteractiveForms });
            }
            render() {
              this.container.className = "buttonWidgetAnnotation radioButton";
              const e = this.annotationStorage,
                t = this.data,
                i = t.id,
                n = e.getOrCreateValue(i, {
                  value: t.fieldValue === t.buttonValue,
                }).value,
                r = document.createElement("input");
              r.disabled = t.readOnly;
              r.type = "radio";
              r.name = t.fieldName;
              if (n) r.setAttribute("checked", !0);
              r.setAttribute("pdfButtonValue", t.buttonValue);
              r.setAttribute("id", i);
              r.addEventListener("change", function (t) {
                const { target: n } = t;
                for (const t of document.getElementsByName(n.name))
                  if (t !== n) e.setValue(t.getAttribute("id"), { value: !1 });
                e.setValue(i, { value: n.checked });
              });
              if (this.enableScripting && this.hasJSActions) {
                r.addEventListener("updatefromsandbox", (t) => {
                  const { detail: n } = t,
                    r = {
                      value() {
                        const i = n.value;
                        for (const n of document.getElementsByName(
                          t.target.name
                        )) {
                          const t = n.getAttribute("id");
                          if (i === n.getAttribute("pdfButtonValue")) {
                            n.setAttribute("checked", !0);
                            e.setValue(t, { value: !0 });
                          } else e.setValue(t, { value: !1 });
                        }
                      },
                      focus() {
                        setTimeout(
                          () => t.target.focus({ preventScroll: !1 }),
                          0
                        );
                      },
                      hidden() {
                        t.target.style.visibility = n.hidden
                          ? "hidden"
                          : "visible";
                        e.setValue(i, { hidden: n.hidden });
                      },
                      editable() {
                        t.target.disabled = !n.editable;
                      },
                    };
                  Object.keys(n)
                    .filter((e) => e in r)
                    .forEach((e) => r[e]());
                });
                this._setEventListeners(
                  r,
                  [
                    ["change", "Validate"],
                    ["change", "Action"],
                    ["focus", "Focus"],
                    ["blur", "Blur"],
                    ["mousedown", "Mouse Down"],
                    ["mouseenter", "Mouse Enter"],
                    ["mouseleave", "Mouse Exit"],
                    ["mouseup", "Mouse Up"],
                  ],
                  (e) => e.target.checked
                );
              }
              this.container.appendChild(r);
              return this.container;
            }
          }
          class g extends c {
            render() {
              const e = super.render();
              e.className = "buttonWidgetAnnotation pushButton";
              if (this.data.alternativeText)
                e.title = this.data.alternativeText;
              return e;
            }
          }
          class m extends u {
            constructor(e) {
              super(e, { isRenderable: e.renderInteractiveForms });
            }
            render() {
              this.container.className = "choiceWidgetAnnotation";
              const e = this.annotationStorage,
                t = this.data.id;
              e.getOrCreateValue(t, {
                value:
                  this.data.fieldValue.length > 0
                    ? this.data.fieldValue[0]
                    : void 0,
              });
              const i = document.createElement("select");
              i.disabled = this.data.readOnly;
              i.name = this.data.fieldName;
              i.setAttribute("id", t);
              if (!this.data.combo) {
                i.size = this.data.options.length;
                if (this.data.multiSelect) i.multiple = !0;
              }
              for (const e of this.data.options) {
                const t = document.createElement("option");
                t.textContent = e.displayValue;
                t.value = e.exportValue;
                if (this.data.fieldValue.includes(e.exportValue))
                  t.setAttribute("selected", !0);
                i.appendChild(t);
              }
              function n(e) {
                const t = e.target.options;
                return t[t.selectedIndex].value;
              }
              if (this.enableScripting && this.hasJSActions) {
                i.addEventListener("updatefromsandbox", (i) => {
                  const { detail: n } = i,
                    r = {
                      value() {
                        const r = i.target.options,
                          a = n.value,
                          s = r.indexOf(a);
                        if (-1 !== s) {
                          r.selectedIndex = s;
                          e.setValue(t, { value: a });
                        }
                      },
                      focus() {
                        setTimeout(
                          () => i.target.focus({ preventScroll: !1 }),
                          0
                        );
                      },
                      hidden() {
                        i.target.style.visibility = n.hidden
                          ? "hidden"
                          : "visible";
                        e.setValue(t, { hidden: n.hidden });
                      },
                      editable() {
                        i.target.disabled = !n.editable;
                      },
                    };
                  Object.keys(n)
                    .filter((e) => e in r)
                    .forEach((e) => r[e]());
                });
                i.addEventListener("input", (i) => {
                  const r = n(i);
                  e.setValue(t, { value: r });
                  this.linkService.eventBus?.dispatch(
                    "dispatcheventinsandbox",
                    {
                      source: this,
                      detail: {
                        id: t,
                        name: "Keystroke",
                        changeEx: r,
                        willCommit: !0,
                        commitKey: 1,
                        keyDown: !1,
                      },
                    }
                  );
                });
                this._setEventListeners(
                  i,
                  [
                    ["focus", "Focus"],
                    ["blur", "Blur"],
                    ["mousedown", "Mouse Down"],
                    ["mouseenter", "Mouse Enter"],
                    ["mouseleave", "Mouse Exit"],
                    ["mouseup", "Mouse Up"],
                  ],
                  (e) => e.target.checked
                );
              } else
                i.addEventListener("input", function (i) {
                  e.setValue(t, { value: n(i) });
                });
              this.container.appendChild(i);
              return this.container;
            }
          }
          class v extends l {
            constructor(e) {
              super(e, { isRenderable: !(!e.data.title && !e.data.contents) });
            }
            render() {
              this.container.className = "popupAnnotation";
              if (
                [
                  "Line",
                  "Square",
                  "Circle",
                  "PolyLine",
                  "Polygon",
                  "Ink",
                ].includes(this.data.parentType)
              )
                return this.container;
              const e = `[data-annotation-id="${this.data.parentId}"]`,
                t = this.layer.querySelectorAll(e);
              if (0 === t.length) return this.container;
              const i = new b({
                  container: this.container,
                  trigger: Array.from(t),
                  color: this.data.color,
                  title: this.data.title,
                  modificationDate: this.data.modificationDate,
                  contents: this.data.contents,
                }),
                n = this.page,
                a = r.Util.normalizeRect([
                  this.data.parentRect[0],
                  n.view[3] - this.data.parentRect[1] + n.view[1],
                  this.data.parentRect[2],
                  n.view[3] - this.data.parentRect[3] + n.view[1],
                ]),
                s = a[0] + this.data.parentRect[2] - this.data.parentRect[0],
                o = a[1];
              this.container.style.transformOrigin = `${-s}px ${-o}px`;
              this.container.style.left = `${s}px`;
              this.container.style.top = `${o}px`;
              this.container.appendChild(i.render());
              return this.container;
            }
          }
          class b {
            constructor(e) {
              this.container = e.container;
              this.trigger = e.trigger;
              this.color = e.color;
              this.title = e.title;
              this.modificationDate = e.modificationDate;
              this.contents = e.contents;
              this.hideWrapper = e.hideWrapper || !1;
              this.pinned = !1;
            }
            render() {
              const e = document.createElement("div");
              e.className = "popupWrapper";
              this.hideElement = this.hideWrapper ? e : this.container;
              this.hideElement.setAttribute("hidden", !0);
              const t = document.createElement("div");
              t.className = "popup";
              const i = this.color;
              if (i) {
                const e = 0.7 * (255 - i[0]) + i[0],
                  n = 0.7 * (255 - i[1]) + i[1],
                  a = 0.7 * (255 - i[2]) + i[2];
                t.style.backgroundColor = r.Util.makeHexColor(
                  0 | e,
                  0 | n,
                  0 | a
                );
              }
              const a = document.createElement("h1");
              a.textContent = this.title;
              t.appendChild(a);
              const s = n.PDFDateString.toDateObject(this.modificationDate);
              if (s) {
                const e = document.createElement("span");
                e.textContent = "{{date}}, {{time}}";
                e.dataset.l10nId = "annotation_date_string";
                e.dataset.l10nArgs = JSON.stringify({
                  date: s.toLocaleDateString(),
                  time: s.toLocaleTimeString(),
                });
                t.appendChild(e);
              }
              const o = this._formatContents(this.contents);
              t.appendChild(o);
              if (!Array.isArray(this.trigger)) this.trigger = [this.trigger];
              this.trigger.forEach((e) => {
                e.addEventListener("click", this._toggle.bind(this));
                e.addEventListener("mouseover", this._show.bind(this, !1));
                e.addEventListener("mouseout", this._hide.bind(this, !1));
              });
              t.addEventListener("click", this._hide.bind(this, !0));
              e.appendChild(t);
              return e;
            }
            _formatContents(e) {
              const t = document.createElement("p"),
                i = e.split(/(?:\r\n?|\n)/);
              for (let e = 0, n = i.length; e < n; ++e) {
                const r = i[e];
                t.appendChild(document.createTextNode(r));
                if (e < n - 1) t.appendChild(document.createElement("br"));
              }
              return t;
            }
            _toggle() {
              if (this.pinned) this._hide(!0);
              else this._show(!0);
            }
            _show(e = !1) {
              if (e) this.pinned = !0;
              if (this.hideElement.hasAttribute("hidden")) {
                this.hideElement.removeAttribute("hidden");
                this.container.style.zIndex += 1;
              }
            }
            _hide(e = !0) {
              if (e) this.pinned = !1;
              if (!this.hideElement.hasAttribute("hidden") && !this.pinned) {
                this.hideElement.setAttribute("hidden", !0);
                this.container.style.zIndex -= 1;
              }
            }
          }
          class y extends l {
            constructor(e) {
              super(e, {
                isRenderable: !!(
                  e.data.hasPopup ||
                  e.data.title ||
                  e.data.contents
                ),
                ignoreBorder: !0,
              });
            }
            render() {
              this.container.className = "freeTextAnnotation";
              if (!this.data.hasPopup) this._createPopup(null, this.data);
              return this.container;
            }
          }
          class w extends l {
            constructor(e) {
              super(e, {
                isRenderable: !!(
                  e.data.hasPopup ||
                  e.data.title ||
                  e.data.contents
                ),
                ignoreBorder: !0,
              });
            }
            render() {
              this.container.className = "lineAnnotation";
              const e = this.data,
                t = e.rect[2] - e.rect[0],
                i = e.rect[3] - e.rect[1],
                n = this.svgFactory.create(t, i),
                r = this.svgFactory.createElement("svg:line");
              r.setAttribute("x1", e.rect[2] - e.lineCoordinates[0]);
              r.setAttribute("y1", e.rect[3] - e.lineCoordinates[1]);
              r.setAttribute("x2", e.rect[2] - e.lineCoordinates[2]);
              r.setAttribute("y2", e.rect[3] - e.lineCoordinates[3]);
              r.setAttribute("stroke-width", e.borderStyle.width || 1);
              r.setAttribute("stroke", "transparent");
              n.appendChild(r);
              this.container.append(n);
              this._createPopup(r, e);
              return this.container;
            }
          }
          class x extends l {
            constructor(e) {
              super(e, {
                isRenderable: !!(
                  e.data.hasPopup ||
                  e.data.title ||
                  e.data.contents
                ),
                ignoreBorder: !0,
              });
            }
            render() {
              this.container.className = "squareAnnotation";
              const e = this.data,
                t = e.rect[2] - e.rect[0],
                i = e.rect[3] - e.rect[1],
                n = this.svgFactory.create(t, i),
                r = e.borderStyle.width,
                a = this.svgFactory.createElement("svg:rect");
              a.setAttribute("x", r / 2);
              a.setAttribute("y", r / 2);
              a.setAttribute("width", t - r);
              a.setAttribute("height", i - r);
              a.setAttribute("stroke-width", r || 1);
              a.setAttribute("stroke", "transparent");
              a.setAttribute("fill", "none");
              n.appendChild(a);
              this.container.append(n);
              this._createPopup(a, e);
              return this.container;
            }
          }
          class k extends l {
            constructor(e) {
              super(e, {
                isRenderable: !!(
                  e.data.hasPopup ||
                  e.data.title ||
                  e.data.contents
                ),
                ignoreBorder: !0,
              });
            }
            render() {
              this.container.className = "circleAnnotation";
              const e = this.data,
                t = e.rect[2] - e.rect[0],
                i = e.rect[3] - e.rect[1],
                n = this.svgFactory.create(t, i),
                r = e.borderStyle.width,
                a = this.svgFactory.createElement("svg:ellipse");
              a.setAttribute("cx", t / 2);
              a.setAttribute("cy", i / 2);
              a.setAttribute("rx", t / 2 - r / 2);
              a.setAttribute("ry", i / 2 - r / 2);
              a.setAttribute("stroke-width", r || 1);
              a.setAttribute("stroke", "transparent");
              a.setAttribute("fill", "none");
              n.appendChild(a);
              this.container.append(n);
              this._createPopup(a, e);
              return this.container;
            }
          }
          class C extends l {
            constructor(e) {
              super(e, {
                isRenderable: !!(
                  e.data.hasPopup ||
                  e.data.title ||
                  e.data.contents
                ),
                ignoreBorder: !0,
              });
              this.containerClassName = "polylineAnnotation";
              this.svgElementName = "svg:polyline";
            }
            render() {
              this.container.className = this.containerClassName;
              const e = this.data,
                t = e.rect[2] - e.rect[0],
                i = e.rect[3] - e.rect[1],
                n = this.svgFactory.create(t, i);
              let r = [];
              for (const t of e.vertices) {
                const i = t.x - e.rect[0],
                  n = e.rect[3] - t.y;
                r.push(i + "," + n);
              }
              r = r.join(" ");
              const a = this.svgFactory.createElement(this.svgElementName);
              a.setAttribute("points", r);
              a.setAttribute("stroke-width", e.borderStyle.width || 1);
              a.setAttribute("stroke", "transparent");
              a.setAttribute("fill", "none");
              n.appendChild(a);
              this.container.append(n);
              this._createPopup(a, e);
              return this.container;
            }
          }
          class S extends C {
            constructor(e) {
              super(e);
              this.containerClassName = "polygonAnnotation";
              this.svgElementName = "svg:polygon";
            }
          }
          class _ extends l {
            constructor(e) {
              super(e, {
                isRenderable: !!(
                  e.data.hasPopup ||
                  e.data.title ||
                  e.data.contents
                ),
                ignoreBorder: !0,
              });
            }
            render() {
              this.container.className = "caretAnnotation";
              if (!this.data.hasPopup) this._createPopup(null, this.data);
              return this.container;
            }
          }
          class A extends l {
            constructor(e) {
              super(e, {
                isRenderable: !!(
                  e.data.hasPopup ||
                  e.data.title ||
                  e.data.contents
                ),
                ignoreBorder: !0,
              });
              this.containerClassName = "inkAnnotation";
              this.svgElementName = "svg:polyline";
            }
            render() {
              this.container.className = this.containerClassName;
              const e = this.data,
                t = e.rect[2] - e.rect[0],
                i = e.rect[3] - e.rect[1],
                n = this.svgFactory.create(t, i);
              for (const t of e.inkLists) {
                let i = [];
                for (const n of t) {
                  const t = n.x - e.rect[0],
                    r = e.rect[3] - n.y;
                  i.push(`${t},${r}`);
                }
                i = i.join(" ");
                const r = this.svgFactory.createElement(this.svgElementName);
                r.setAttribute("points", i);
                r.setAttribute("stroke-width", e.borderStyle.width || 1);
                r.setAttribute("stroke", "transparent");
                r.setAttribute("fill", "none");
                this._createPopup(r, e);
                n.appendChild(r);
              }
              this.container.append(n);
              return this.container;
            }
          }
          class F extends l {
            constructor(e) {
              super(e, {
                isRenderable: !!(
                  e.data.hasPopup ||
                  e.data.title ||
                  e.data.contents
                ),
                ignoreBorder: !0,
                createQuadrilaterals: !0,
              });
            }
            render() {
              if (!this.data.hasPopup) this._createPopup(null, this.data);
              if (this.quadrilaterals)
                return this._renderQuadrilaterals("highlightAnnotation");
              this.container.className = "highlightAnnotation";
              return this.container;
            }
          }
          class T extends l {
            constructor(e) {
              super(e, {
                isRenderable: !!(
                  e.data.hasPopup ||
                  e.data.title ||
                  e.data.contents
                ),
                ignoreBorder: !0,
                createQuadrilaterals: !0,
              });
            }
            render() {
              if (!this.data.hasPopup) this._createPopup(null, this.data);
              if (this.quadrilaterals)
                return this._renderQuadrilaterals("underlineAnnotation");
              this.container.className = "underlineAnnotation";
              return this.container;
            }
          }
          class P extends l {
            constructor(e) {
              super(e, {
                isRenderable: !!(
                  e.data.hasPopup ||
                  e.data.title ||
                  e.data.contents
                ),
                ignoreBorder: !0,
                createQuadrilaterals: !0,
              });
            }
            render() {
              if (!this.data.hasPopup) this._createPopup(null, this.data);
              if (this.quadrilaterals)
                return this._renderQuadrilaterals("squigglyAnnotation");
              this.container.className = "squigglyAnnotation";
              return this.container;
            }
          }
          class E extends l {
            constructor(e) {
              super(e, {
                isRenderable: !!(
                  e.data.hasPopup ||
                  e.data.title ||
                  e.data.contents
                ),
                ignoreBorder: !0,
                createQuadrilaterals: !0,
              });
            }
            render() {
              if (!this.data.hasPopup) this._createPopup(null, this.data);
              if (this.quadrilaterals)
                return this._renderQuadrilaterals("strikeoutAnnotation");
              this.container.className = "strikeoutAnnotation";
              return this.container;
            }
          }
          class I extends l {
            constructor(e) {
              super(e, {
                isRenderable: !!(
                  e.data.hasPopup ||
                  e.data.title ||
                  e.data.contents
                ),
                ignoreBorder: !0,
              });
            }
            render() {
              this.container.className = "stampAnnotation";
              if (!this.data.hasPopup) this._createPopup(null, this.data);
              return this.container;
            }
          }
          class D extends l {
            constructor(e) {
              super(e, { isRenderable: !0 });
              const { filename: t, content: i } = this.data.file;
              this.filename = (0, n.getFilenameFromUrl)(t);
              this.content = i;
              this.linkService.eventBus?.dispatch("fileattachmentannotation", {
                source: this,
                id: (0, r.stringToPDFString)(t),
                filename: t,
                content: i,
              });
            }
            render() {
              this.container.className = "fileAttachmentAnnotation";
              const e = document.createElement("div");
              e.style.height = this.container.style.height;
              e.style.width = this.container.style.width;
              e.addEventListener("dblclick", this._download.bind(this));
              if (
                !this.data.hasPopup &&
                (this.data.title || this.data.contents)
              )
                this._createPopup(e, this.data);
              this.container.appendChild(e);
              return this.container;
            }
            _download() {
              if (this.downloadManager)
                this.downloadManager.downloadData(
                  this.content,
                  this.filename,
                  ""
                );
              else
                (0, r.warn)(
                  "Download cannot be started due to unavailable download manager"
                );
            }
          }
          t.AnnotationLayer = class {
            static render(e) {
              const t = [],
                i = [];
              for (const n of e.annotations)
                if (n)
                  if (n.annotationType !== r.AnnotationType.POPUP) t.push(n);
                  else i.push(n);
              if (i.length) t.push(...i);
              for (const i of t) {
                const t = o.create({
                  data: i,
                  layer: e.div,
                  page: e.page,
                  viewport: e.viewport,
                  linkService: e.linkService,
                  downloadManager: e.downloadManager,
                  imageResourcesPath: e.imageResourcesPath || "",
                  renderInteractiveForms:
                    "boolean" == typeof e.renderInteractiveForms
                      ? e.renderInteractiveForms
                      : !0,
                  svgFactory: new n.DOMSVGFactory(),
                  annotationStorage:
                    e.annotationStorage || new a.AnnotationStorage(),
                  enableScripting: e.enableScripting,
                  hasJSActions: e.hasJSActions,
                  mouseState: e.mouseState || { isDown: !1 },
                });
                if (t.isRenderable) {
                  const n = t.render();
                  if (i.hidden) n.style.visibility = "hidden";
                  if (Array.isArray(n)) for (const t of n) e.div.appendChild(t);
                  else if (t instanceof v) e.div.prepend(n);
                  else e.div.appendChild(n);
                }
              }
            }
            static update(e) {
              const t = `matrix(${e.viewport.transform.join(",")})`;
              for (const i of e.annotations) {
                const n = e.div.querySelectorAll(
                  `[data-annotation-id="${i.id}"]`
                );
                if (n)
                  n.forEach((e) => {
                    e.style.transform = t;
                  });
              }
              e.div.removeAttribute("hidden");
            }
          };
        },
        (e, t) => {
          Object.defineProperty(t, "__esModule", { value: !0 });
          t.ColorConverters = void 0;
          function i(e) {
            return Math.floor(255 * Math.max(0, Math.min(1, e)))
              .toString(16)
              .padStart(2, "0");
          }
          t.ColorConverters = class {
            static CMYK_G([e, t, i, n]) {
              return ["G", 1 - Math.min(1, 0.3 * e + 0.59 * i + 0.11 * t + n)];
            }
            static G_CMYK([e]) {
              return ["CMYK", 0, 0, 0, 1 - e];
            }
            static G_RGB([e]) {
              return ["RGB", e, e, e];
            }
            static G_HTML([e]) {
              const t = i(e);
              return `#${t}${t}${t}`;
            }
            static RGB_G([e, t, i]) {
              return ["G", 0.3 * e + 0.59 * t + 0.11 * i];
            }
            static RGB_HTML([e, t, n]) {
              return `#${i(e)}${i(t)}${i(n)}`;
            }
            static T_HTML() {
              return "#00000000";
            }
            static CMYK_RGB([e, t, i, n]) {
              return [
                "RGB",
                1 - Math.min(1, e + n),
                1 - Math.min(1, i + n),
                1 - Math.min(1, t + n),
              ];
            }
            static CMYK_HTML(e) {
              return this.RGB_HTML(this.CMYK_RGB(e));
            }
            static RGB_CMYK([e, t, i]) {
              const n = 1 - e,
                r = 1 - t,
                a = 1 - i;
              return ["CMYK", n, r, a, Math.min(n, r, a)];
            }
          };
        },
        (e, t, i) => {
          Object.defineProperty(t, "__esModule", { value: !0 });
          t.renderTextLayer = void 0;
          var n = i(2);
          const r = (function () {
            const e = /\S/;
            function t(t, i, r) {
              const a = document.createElement("span"),
                s = {
                  angle: 0,
                  canvasWidth: 0,
                  isWhitespace: !1,
                  originalTransform: null,
                  paddingBottom: 0,
                  paddingLeft: 0,
                  paddingRight: 0,
                  paddingTop: 0,
                  scale: 1,
                };
              t._textDivs.push(a);
              if (((o = i.str), !e.test(o))) {
                s.isWhitespace = !0;
                t._textDivProperties.set(a, s);
                return;
              }
              var o;
              const l = n.Util.transform(t._viewport.transform, i.transform);
              let c = Math.atan2(l[1], l[0]);
              const h = r[i.fontName];
              if (h.vertical) c += Math.PI / 2;
              const u = Math.sqrt(l[2] * l[2] + l[3] * l[3]);
              let d,
                f,
                p = u;
              if (h.ascent) p = h.ascent * p;
              else if (h.descent) p = (1 + h.descent) * p;
              if (0 === c) {
                d = l[4];
                f = l[5] - p;
              } else {
                d = l[4] + p * Math.sin(c);
                f = l[5] - p * Math.cos(c);
              }
              a.style.left = `${d}px`;
              a.style.top = `${f}px`;
              a.style.fontSize = `${u}px`;
              a.style.fontFamily = h.fontFamily;
              a.textContent = i.str;
              if (t._fontInspectorEnabled) a.dataset.fontName = i.fontName;
              if (0 !== c) s.angle = c * (180 / Math.PI);
              let g = !1;
              if (i.str.length > 1) g = !0;
              else if (i.transform[0] !== i.transform[3]) {
                const e = Math.abs(i.transform[0]),
                  t = Math.abs(i.transform[3]);
                if (e !== t && Math.max(e, t) / Math.min(e, t) > 1.5) g = !0;
              }
              if (g)
                if (h.vertical) s.canvasWidth = i.height * t._viewport.scale;
                else s.canvasWidth = i.width * t._viewport.scale;
              t._textDivProperties.set(a, s);
              if (t._textContentStream) t._layoutText(a);
              if (t._enhanceTextSelection) {
                let e = 1,
                  r = 0;
                if (0 !== c) {
                  e = Math.cos(c);
                  r = Math.sin(c);
                }
                const s = (h.vertical ? i.height : i.width) * t._viewport.scale,
                  o = u;
                let l, p;
                if (0 !== c) {
                  l = [e, r, -r, e, d, f];
                  p = n.Util.getAxialAlignedBoundingBox([0, 0, s, o], l);
                } else p = [d, f, d + s, f + o];
                t._bounds.push({
                  left: p[0],
                  top: p[1],
                  right: p[2],
                  bottom: p[3],
                  div: a,
                  size: [s, o],
                  m: l,
                });
              }
            }
            function i(e) {
              if (e._canceled) return;
              const t = e._textDivs,
                i = e._capability,
                n = t.length;
              if (!(n > 1e5)) {
                if (!e._textContentStream)
                  for (let i = 0; i < n; i++) e._layoutText(t[i]);
                e._renderingDone = !0;
                i.resolve();
              } else {
                e._renderingDone = !0;
                i.resolve();
              }
            }
            function r(e, t, i) {
              let n = 0;
              for (let r = 0; r < i; r++) {
                const i = e[t++];
                if (i > 0) n = n ? Math.min(i, n) : i;
              }
              return n;
            }
            function a(e, t) {
              t.sort(function (e, t) {
                return e.x1 - t.x1 || e.index - t.index;
              });
              const i = [
                {
                  start: -1 / 0,
                  end: 1 / 0,
                  boundary: {
                    x1: -1 / 0,
                    y1: -1 / 0,
                    x2: 0,
                    y2: 1 / 0,
                    index: -1,
                    x1New: 0,
                    x2New: 0,
                  },
                },
              ];
              t.forEach(function (e) {
                let t = 0;
                for (; t < i.length && i[t].end <= e.y1; ) t++;
                let n,
                  r,
                  a = i.length - 1;
                for (; a >= 0 && i[a].start >= e.y2; ) a--;
                let s,
                  o,
                  l = -1 / 0;
                for (s = t; s <= a; s++) {
                  n = i[s];
                  r = n.boundary;
                  let t;
                  if (r.x2 > e.x1) t = r.index > e.index ? r.x1New : e.x1;
                  else if (void 0 === r.x2New) t = (r.x2 + e.x1) / 2;
                  else t = r.x2New;
                  if (t > l) l = t;
                }
                e.x1New = l;
                for (s = t; s <= a; s++) {
                  n = i[s];
                  r = n.boundary;
                  if (void 0 === r.x2New)
                    if (r.x2 > e.x1) {
                      if (r.index > e.index) r.x2New = r.x2;
                    } else r.x2New = l;
                  else if (r.x2New > l) r.x2New = Math.max(l, r.x2);
                }
                const c = [];
                let h = null;
                for (s = t; s <= a; s++) {
                  n = i[s];
                  r = n.boundary;
                  const t = r.x2 > e.x2 ? r : e;
                  if (h === t) c[c.length - 1].end = n.end;
                  else {
                    c.push({ start: n.start, end: n.end, boundary: t });
                    h = t;
                  }
                }
                if (i[t].start < e.y1) {
                  c[0].start = e.y1;
                  c.unshift({
                    start: i[t].start,
                    end: e.y1,
                    boundary: i[t].boundary,
                  });
                }
                if (e.y2 < i[a].end) {
                  c[c.length - 1].end = e.y2;
                  c.push({
                    start: e.y2,
                    end: i[a].end,
                    boundary: i[a].boundary,
                  });
                }
                for (s = t; s <= a; s++) {
                  n = i[s];
                  r = n.boundary;
                  if (void 0 !== r.x2New) continue;
                  let e = !1;
                  for (o = t - 1; !e && o >= 0 && i[o].start >= r.y1; o--)
                    e = i[o].boundary === r;
                  for (o = a + 1; !e && o < i.length && i[o].end <= r.y2; o++)
                    e = i[o].boundary === r;
                  for (o = 0; !e && o < c.length; o++) e = c[o].boundary === r;
                  if (!e) r.x2New = l;
                }
                Array.prototype.splice.apply(i, [t, a - t + 1].concat(c));
              });
              i.forEach(function (t) {
                const i = t.boundary;
                if (void 0 === i.x2New) i.x2New = Math.max(e, i.x2);
              });
            }
            function s({
              textContent: e,
              textContentStream: t,
              container: i,
              viewport: r,
              textDivs: a,
              textContentItemsStr: s,
              enhanceTextSelection: o,
            }) {
              this._textContent = e;
              this._textContentStream = t;
              this._container = i;
              this._document = i.ownerDocument;
              this._viewport = r;
              this._textDivs = a || [];
              this._textContentItemsStr = s || [];
              this._enhanceTextSelection = !!o;
              this._fontInspectorEnabled = !!globalThis.FontInspector?.enabled;
              this._reader = null;
              this._layoutTextLastFontSize = null;
              this._layoutTextLastFontFamily = null;
              this._layoutTextCtx = null;
              this._textDivProperties = new WeakMap();
              this._renderingDone = !1;
              this._canceled = !1;
              this._capability = (0, n.createPromiseCapability)();
              this._renderTimer = null;
              this._bounds = [];
              this._capability.promise
                .finally(() => {
                  if (this._layoutTextCtx) {
                    this._layoutTextCtx.canvas.width = 0;
                    this._layoutTextCtx.canvas.height = 0;
                    this._layoutTextCtx = null;
                  }
                })
                .catch(() => {});
            }
            s.prototype = {
              get promise() {
                return this._capability.promise;
              },
              cancel: function () {
                this._canceled = !0;
                if (this._reader) {
                  this._reader.cancel(
                    new n.AbortException("TextLayer task cancelled.")
                  );
                  this._reader = null;
                }
                if (null !== this._renderTimer) {
                  clearTimeout(this._renderTimer);
                  this._renderTimer = null;
                }
                this._capability.reject(new Error("TextLayer task cancelled."));
              },
              _processItems(e, i) {
                for (let n = 0, r = e.length; n < r; n++) {
                  this._textContentItemsStr.push(e[n].str);
                  t(this, e[n], i);
                }
              },
              _layoutText(e) {
                const t = this._textDivProperties.get(e);
                if (t.isWhitespace) return;
                let i = "";
                if (0 !== t.canvasWidth) {
                  const { fontSize: n, fontFamily: r } = e.style;
                  if (
                    n !== this._layoutTextLastFontSize ||
                    r !== this._layoutTextLastFontFamily
                  ) {
                    this._layoutTextCtx.font = `${n} ${r}`;
                    this._layoutTextLastFontSize = n;
                    this._layoutTextLastFontFamily = r;
                  }
                  const { width: a } = this._layoutTextCtx.measureText(
                    e.textContent
                  );
                  if (a > 0) {
                    t.scale = t.canvasWidth / a;
                    i = `scaleX(${t.scale})`;
                  }
                }
                if (0 !== t.angle) i = `rotate(${t.angle}deg) ${i}`;
                if (i.length > 0) {
                  if (this._enhanceTextSelection) t.originalTransform = i;
                  e.style.transform = i;
                }
                this._textDivProperties.set(e, t);
                this._container.appendChild(e);
              },
              _render: function (e) {
                const t = (0, n.createPromiseCapability)();
                let r = Object.create(null);
                const a = this._document.createElement("canvas");
                a.mozOpaque = !0;
                this._layoutTextCtx = a.getContext("2d", { alpha: !1 });
                if (this._textContent) {
                  const e = this._textContent.items,
                    i = this._textContent.styles;
                  this._processItems(e, i);
                  t.resolve();
                } else if (this._textContentStream) {
                  const e = () => {
                    this._reader.read().then(({ value: i, done: n }) => {
                      if (!n) {
                        Object.assign(r, i.styles);
                        this._processItems(i.items, r);
                        e();
                      } else t.resolve();
                    }, t.reject);
                  };
                  this._reader = this._textContentStream.getReader();
                  e();
                } else
                  throw new Error(
                    'Neither "textContent" nor "textContentStream" parameters specified.'
                  );
                t.promise.then(() => {
                  r = null;
                  if (!e) i(this);
                  else
                    this._renderTimer = setTimeout(() => {
                      i(this);
                      this._renderTimer = null;
                    }, e);
                }, this._capability.reject);
              },
              expandTextDivs: function (e) {
                if (!this._enhanceTextSelection || !this._renderingDone) return;
                if (null !== this._bounds) {
                  !(function (e) {
                    const t = e._bounds,
                      i = e._viewport,
                      s = (function (e, t, i) {
                        const n = i.map(function (e, t) {
                          return {
                            x1: e.left,
                            y1: e.top,
                            x2: e.right,
                            y2: e.bottom,
                            index: t,
                            x1New: void 0,
                            x2New: void 0,
                          };
                        });
                        a(e, n);
                        const r = new Array(i.length);
                        n.forEach(function (e) {
                          const t = e.index;
                          r[t] = {
                            left: e.x1New,
                            top: 0,
                            right: e.x2New,
                            bottom: 0,
                          };
                        });
                        i.map(function (t, i) {
                          const a = r[i],
                            s = n[i];
                          s.x1 = t.top;
                          s.y1 = e - a.right;
                          s.x2 = t.bottom;
                          s.y2 = e - a.left;
                          s.index = i;
                          s.x1New = void 0;
                          s.x2New = void 0;
                        });
                        a(t, n);
                        n.forEach(function (e) {
                          const t = e.index;
                          r[t].top = e.x1New;
                          r[t].bottom = e.x2New;
                        });
                        return r;
                      })(i.width, i.height, t);
                    for (let i = 0; i < s.length; i++) {
                      const a = t[i].div,
                        o = e._textDivProperties.get(a);
                      if (0 === o.angle) {
                        o.paddingLeft = t[i].left - s[i].left;
                        o.paddingTop = t[i].top - s[i].top;
                        o.paddingRight = s[i].right - t[i].right;
                        o.paddingBottom = s[i].bottom - t[i].bottom;
                        e._textDivProperties.set(a, o);
                        continue;
                      }
                      const l = s[i],
                        c = t[i],
                        h = c.m,
                        u = h[0],
                        d = h[1],
                        f = [[0, 0], [0, c.size[1]], [c.size[0], 0], c.size],
                        p = new Float64Array(64);
                      f.forEach(function (e, t) {
                        const i = n.Util.applyTransform(e, h);
                        p[t + 0] = u && (l.left - i[0]) / u;
                        p[t + 4] = d && (l.top - i[1]) / d;
                        p[t + 8] = u && (l.right - i[0]) / u;
                        p[t + 12] = d && (l.bottom - i[1]) / d;
                        p[t + 16] = d && (l.left - i[0]) / -d;
                        p[t + 20] = u && (l.top - i[1]) / u;
                        p[t + 24] = d && (l.right - i[0]) / -d;
                        p[t + 28] = u && (l.bottom - i[1]) / u;
                        p[t + 32] = u && (l.left - i[0]) / -u;
                        p[t + 36] = d && (l.top - i[1]) / -d;
                        p[t + 40] = u && (l.right - i[0]) / -u;
                        p[t + 44] = d && (l.bottom - i[1]) / -d;
                        p[t + 48] = d && (l.left - i[0]) / d;
                        p[t + 52] = u && (l.top - i[1]) / -u;
                        p[t + 56] = d && (l.right - i[0]) / d;
                        p[t + 60] = u && (l.bottom - i[1]) / -u;
                      });
                      const g = 1 + Math.min(Math.abs(u), Math.abs(d));
                      o.paddingLeft = r(p, 32, 16) / g;
                      o.paddingTop = r(p, 48, 16) / g;
                      o.paddingRight = r(p, 0, 16) / g;
                      o.paddingBottom = r(p, 16, 16) / g;
                      e._textDivProperties.set(a, o);
                    }
                  })(this);
                  this._bounds = null;
                }
                const t = [],
                  i = [];
                for (let n = 0, r = this._textDivs.length; n < r; n++) {
                  const r = this._textDivs[n],
                    a = this._textDivProperties.get(r);
                  if (!a.isWhitespace)
                    if (e) {
                      t.length = 0;
                      i.length = 0;
                      if (a.originalTransform) t.push(a.originalTransform);
                      if (a.paddingTop > 0) {
                        i.push(`${a.paddingTop}px`);
                        t.push(`translateY(${-a.paddingTop}px)`);
                      } else i.push(0);
                      if (a.paddingRight > 0)
                        i.push(a.paddingRight / a.scale + "px");
                      else i.push(0);
                      if (a.paddingBottom > 0) i.push(`${a.paddingBottom}px`);
                      else i.push(0);
                      if (a.paddingLeft > 0) {
                        i.push(a.paddingLeft / a.scale + "px");
                        t.push(`translateX(${-a.paddingLeft / a.scale}px)`);
                      } else i.push(0);
                      r.style.padding = i.join(" ");
                      if (t.length) r.style.transform = t.join(" ");
                    } else {
                      r.style.padding = null;
                      r.style.transform = a.originalTransform;
                    }
                }
              },
            };
            return function (e) {
              const t = new s({
                textContent: e.textContent,
                textContentStream: e.textContentStream,
                container: e.container,
                viewport: e.viewport,
                textDivs: e.textDivs,
                textContentItemsStr: e.textContentItemsStr,
                enhanceTextSelection: e.enhanceTextSelection,
              });
              t._render(e.timeout);
              return t;
            };
          })();
          t.renderTextLayer = r;
        },
        (e, t, i) => {
          Object.defineProperty(t, "__esModule", { value: !0 });
          t.SVGGraphics = void 0;
          var n = i(2),
            r = i(1),
            a = i(4);
          let s = function () {
            throw new Error("Not implemented: SVGGraphics");
          };
          t.SVGGraphics = s;
          {
            const e = {
                fontStyle: "normal",
                fontWeight: "normal",
                fillColor: "#000000",
              },
              i = "http://www.w3.org/XML/1998/namespace",
              c = "http://www.w3.org/1999/xlink",
              h = ["butt", "round", "square"],
              u = ["miter", "round", "bevel"],
              d = (function () {
                const e = new Uint8Array([137, 80, 78, 71, 13, 10, 26, 10]),
                  t = new Int32Array(256);
                for (let e = 0; e < 256; e++) {
                  let i = e;
                  for (let e = 0; e < 8; e++)
                    if (1 & i) i = 3988292384 ^ ((i >> 1) & 2147483647);
                    else i = (i >> 1) & 2147483647;
                  t[e] = i;
                }
                function i(e, i, n, r) {
                  let a = r;
                  const s = i.length;
                  n[a] = (s >> 24) & 255;
                  n[a + 1] = (s >> 16) & 255;
                  n[a + 2] = (s >> 8) & 255;
                  n[a + 3] = 255 & s;
                  a += 4;
                  n[a] = 255 & e.charCodeAt(0);
                  n[a + 1] = 255 & e.charCodeAt(1);
                  n[a + 2] = 255 & e.charCodeAt(2);
                  n[a + 3] = 255 & e.charCodeAt(3);
                  a += 4;
                  n.set(i, a);
                  a += i.length;
                  const o = (function (e, i, n) {
                    let r = -1;
                    for (let a = i; a < n; a++) {
                      const i = 255 & (r ^ e[a]);
                      r = (r >>> 8) ^ t[i];
                    }
                    return -1 ^ r;
                  })(n, r + 4, a);
                  n[a] = (o >> 24) & 255;
                  n[a + 1] = (o >> 16) & 255;
                  n[a + 2] = (o >> 8) & 255;
                  n[a + 3] = 255 & o;
                }
                function r(e) {
                  let t = e.length;
                  const i = 65535,
                    n = Math.ceil(t / i),
                    r = new Uint8Array(2 + t + 5 * n + 4);
                  let a = 0;
                  r[a++] = 120;
                  r[a++] = 156;
                  let s = 0;
                  for (; t > i; ) {
                    r[a++] = 0;
                    r[a++] = 255;
                    r[a++] = 255;
                    r[a++] = 0;
                    r[a++] = 0;
                    r.set(e.subarray(s, s + i), a);
                    a += i;
                    s += i;
                    t -= i;
                  }
                  r[a++] = 1;
                  r[a++] = 255 & t;
                  r[a++] = (t >> 8) & 255;
                  r[a++] = 255 & ~t;
                  r[a++] = ((65535 & ~t) >> 8) & 255;
                  r.set(e.subarray(s), a);
                  a += e.length - s;
                  const o = (function (e, t, i) {
                    let n = 1,
                      r = 0;
                    for (let t = 0; t < i; ++t) {
                      n = (n + (255 & e[t])) % 65521;
                      r = (r + n) % 65521;
                    }
                    return (r << 16) | n;
                  })(e, 0, e.length);
                  r[a++] = (o >> 24) & 255;
                  r[a++] = (o >> 16) & 255;
                  r[a++] = (o >> 8) & 255;
                  r[a++] = 255 & o;
                  return r;
                }
                return function (t, s, o) {
                  return (function (t, s, o, l) {
                    const c = t.width,
                      h = t.height;
                    let u, d, f;
                    const p = t.data;
                    switch (s) {
                      case n.ImageKind.GRAYSCALE_1BPP:
                        d = 0;
                        u = 1;
                        f = (c + 7) >> 3;
                        break;
                      case n.ImageKind.RGB_24BPP:
                        d = 2;
                        u = 8;
                        f = 3 * c;
                        break;
                      case n.ImageKind.RGBA_32BPP:
                        d = 6;
                        u = 8;
                        f = 4 * c;
                        break;
                      default:
                        throw new Error("invalid format");
                    }
                    const g = new Uint8Array((1 + f) * h);
                    let m = 0,
                      v = 0;
                    for (let e = 0; e < h; ++e) {
                      g[m++] = 0;
                      g.set(p.subarray(v, v + f), m);
                      v += f;
                      m += f;
                    }
                    if (s === n.ImageKind.GRAYSCALE_1BPP && l) {
                      m = 0;
                      for (let e = 0; e < h; e++) {
                        m++;
                        for (let e = 0; e < f; e++) g[m++] ^= 255;
                      }
                    }
                    const b = new Uint8Array([
                        (c >> 24) & 255,
                        (c >> 16) & 255,
                        (c >> 8) & 255,
                        255 & c,
                        (h >> 24) & 255,
                        (h >> 16) & 255,
                        (h >> 8) & 255,
                        255 & h,
                        u,
                        d,
                        0,
                        0,
                        0,
                      ]),
                      y = (function (e) {
                        if (!a.isNodeJS) return r(e);
                        try {
                          let t;
                          if (parseInt(process.versions.node) >= 8) t = e;
                          else t = Buffer.from(e);
                          const i = require("zlib").deflateSync(t, {
                            level: 9,
                          });
                          return i instanceof Uint8Array
                            ? i
                            : new Uint8Array(i);
                        } catch (e) {
                          (0, n.warn)(
                            "Not compressing PNG because zlib.deflateSync is unavailable: " +
                              e
                          );
                        }
                        return r(e);
                      })(g),
                      w = e.length + 36 + b.length + y.length,
                      x = new Uint8Array(w);
                    let k = 0;
                    x.set(e, k);
                    k += e.length;
                    i("IHDR", b, x, k);
                    k += 12 + b.length;
                    i("IDATA", y, x, k);
                    k += 12 + y.length;
                    i("IEND", new Uint8Array(0), x, k);
                    return (0, n.createObjectURL)(x, "image/png", o);
                  })(
                    t,
                    void 0 === t.kind ? n.ImageKind.GRAYSCALE_1BPP : t.kind,
                    s,
                    o
                  );
                };
              })();
            class f {
              constructor() {
                this.fontSizeScale = 1;
                this.fontWeight = e.fontWeight;
                this.fontSize = 0;
                this.textMatrix = n.IDENTITY_MATRIX;
                this.fontMatrix = n.FONT_IDENTITY_MATRIX;
                this.leading = 0;
                this.textRenderingMode = n.TextRenderingMode.FILL;
                this.textMatrixScale = 1;
                this.x = 0;
                this.y = 0;
                this.lineX = 0;
                this.lineY = 0;
                this.charSpacing = 0;
                this.wordSpacing = 0;
                this.textHScale = 1;
                this.textRise = 0;
                this.fillColor = e.fillColor;
                this.strokeColor = "#000000";
                this.fillAlpha = 1;
                this.strokeAlpha = 1;
                this.lineWidth = 1;
                this.lineJoin = "";
                this.lineCap = "";
                this.miterLimit = 0;
                this.dashArray = [];
                this.dashPhase = 0;
                this.dependencies = [];
                this.activeClipUrl = null;
                this.clipGroup = null;
                this.maskId = "";
              }
              clone() {
                return Object.create(this);
              }
              setCurrentPoint(e, t) {
                this.x = e;
                this.y = t;
              }
            }
            function o(e) {
              if (Number.isInteger(e)) return e.toString();
              const t = e.toFixed(10);
              let i = t.length - 1;
              if ("0" !== t[i]) return t;
              do {
                i--;
              } while ("0" === t[i]);
              return t.substring(0, "." === t[i] ? i : i + 1);
            }
            function l(e) {
              if (0 === e[4] && 0 === e[5]) {
                if (0 === e[1] && 0 === e[2])
                  if (1 === e[0] && 1 === e[3]) return "";
                  else return `scale(${o(e[0])} ${o(e[3])})`;
                if (e[0] === e[3] && e[1] === -e[2])
                  return `rotate(${o((180 * Math.acos(e[0])) / Math.PI)})`;
              } else if (1 === e[0] && 0 === e[1] && 0 === e[2] && 1 === e[3])
                return `translate(${o(e[4])} ${o(e[5])})`;
              return `matrix(${o(e[0])} ${o(e[1])} ${o(e[2])} ${o(e[3])} ${o(
                e[4]
              )} ${o(e[5])})`;
            }
            let p = 0,
              g = 0,
              m = 0;
            t.SVGGraphics = s = class {
              constructor(e, t, i = !1) {
                this.svgFactory = new r.DOMSVGFactory();
                this.current = new f();
                this.transformMatrix = n.IDENTITY_MATRIX;
                this.transformStack = [];
                this.extraStack = [];
                this.commonObjs = e;
                this.objs = t;
                this.pendingClip = null;
                this.pendingEOFill = !1;
                this.embedFonts = !1;
                this.embeddedFonts = Object.create(null);
                this.cssStyle = null;
                this.forceDataSchema = !!i;
                this._operatorIdMapping = [];
                for (const e in n.OPS) this._operatorIdMapping[n.OPS[e]] = e;
              }
              save() {
                this.transformStack.push(this.transformMatrix);
                const e = this.current;
                this.extraStack.push(e);
                this.current = e.clone();
              }
              restore() {
                this.transformMatrix = this.transformStack.pop();
                this.current = this.extraStack.pop();
                this.pendingClip = null;
                this.tgrp = null;
              }
              group(e) {
                this.save();
                this.executeOpTree(e);
                this.restore();
              }
              loadDependencies(e) {
                const t = e.fnArray,
                  i = e.argsArray;
                for (let e = 0, r = t.length; e < r; e++)
                  if (t[e] === n.OPS.dependency)
                    for (const t of i[e]) {
                      const e = t.startsWith("g_")
                          ? this.commonObjs
                          : this.objs,
                        i = new Promise((i) => {
                          e.get(t, i);
                        });
                      this.current.dependencies.push(i);
                    }
                return Promise.all(this.current.dependencies);
              }
              transform(e, t, i, r, a, s) {
                const o = [e, t, i, r, a, s];
                this.transformMatrix = n.Util.transform(
                  this.transformMatrix,
                  o
                );
                this.tgrp = null;
              }
              getSVG(e, t) {
                this.viewport = t;
                const i = this._initialize(t);
                return this.loadDependencies(e).then(() => {
                  this.transformMatrix = n.IDENTITY_MATRIX;
                  this.executeOpTree(this.convertOpList(e));
                  return i;
                });
              }
              convertOpList(e) {
                const t = this._operatorIdMapping,
                  i = e.argsArray,
                  n = e.fnArray,
                  r = [];
                for (let e = 0, a = n.length; e < a; e++) {
                  const a = n[e];
                  r.push({ fnId: a, fn: t[a], args: i[e] });
                }
                return (function (e) {
                  let t = [];
                  const i = [];
                  for (const n of e)
                    if ("save" !== n.fn)
                      if ("restore" === n.fn) t = i.pop();
                      else t.push(n);
                    else {
                      t.push({ fnId: 92, fn: "group", items: [] });
                      i.push(t);
                      t = t[t.length - 1].items;
                    }
                  return t;
                })(r);
              }
              executeOpTree(e) {
                for (const t of e) {
                  const e = t.fn,
                    i = t.fnId,
                    r = t.args;
                  switch (0 | i) {
                    case n.OPS.beginText:
                      this.beginText();
                      break;
                    case n.OPS.dependency:
                      break;
                    case n.OPS.setLeading:
                      this.setLeading(r);
                      break;
                    case n.OPS.setLeadingMoveText:
                      this.setLeadingMoveText(r[0], r[1]);
                      break;
                    case n.OPS.setFont:
                      this.setFont(r);
                      break;
                    case n.OPS.showText:
                    case n.OPS.showSpacedText:
                      this.showText(r[0]);
                      break;
                    case n.OPS.endText:
                      this.endText();
                      break;
                    case n.OPS.moveText:
                      this.moveText(r[0], r[1]);
                      break;
                    case n.OPS.setCharSpacing:
                      this.setCharSpacing(r[0]);
                      break;
                    case n.OPS.setWordSpacing:
                      this.setWordSpacing(r[0]);
                      break;
                    case n.OPS.setHScale:
                      this.setHScale(r[0]);
                      break;
                    case n.OPS.setTextMatrix:
                      this.setTextMatrix(r[0], r[1], r[2], r[3], r[4], r[5]);
                      break;
                    case n.OPS.setTextRise:
                      this.setTextRise(r[0]);
                      break;
                    case n.OPS.setTextRenderingMode:
                      this.setTextRenderingMode(r[0]);
                      break;
                    case n.OPS.setLineWidth:
                      this.setLineWidth(r[0]);
                      break;
                    case n.OPS.setLineJoin:
                      this.setLineJoin(r[0]);
                      break;
                    case n.OPS.setLineCap:
                      this.setLineCap(r[0]);
                      break;
                    case n.OPS.setMiterLimit:
                      this.setMiterLimit(r[0]);
                      break;
                    case n.OPS.setFillRGBColor:
                      this.setFillRGBColor(r[0], r[1], r[2]);
                      break;
                    case n.OPS.setStrokeRGBColor:
                      this.setStrokeRGBColor(r[0], r[1], r[2]);
                      break;
                    case n.OPS.setStrokeColorN:
                      this.setStrokeColorN(r);
                      break;
                    case n.OPS.setFillColorN:
                      this.setFillColorN(r);
                      break;
                    case n.OPS.shadingFill:
                      this.shadingFill(r[0]);
                      break;
                    case n.OPS.setDash:
                      this.setDash(r[0], r[1]);
                      break;
                    case n.OPS.setRenderingIntent:
                      this.setRenderingIntent(r[0]);
                      break;
                    case n.OPS.setFlatness:
                      this.setFlatness(r[0]);
                      break;
                    case n.OPS.setGState:
                      this.setGState(r[0]);
                      break;
                    case n.OPS.fill:
                      this.fill();
                      break;
                    case n.OPS.eoFill:
                      this.eoFill();
                      break;
                    case n.OPS.stroke:
                      this.stroke();
                      break;
                    case n.OPS.fillStroke:
                      this.fillStroke();
                      break;
                    case n.OPS.eoFillStroke:
                      this.eoFillStroke();
                      break;
                    case n.OPS.clip:
                      this.clip("nonzero");
                      break;
                    case n.OPS.eoClip:
                      this.clip("evenodd");
                      break;
                    case n.OPS.paintSolidColorImageMask:
                      this.paintSolidColorImageMask();
                      break;
                    case n.OPS.paintImageXObject:
                      this.paintImageXObject(r[0]);
                      break;
                    case n.OPS.paintInlineImageXObject:
                      this.paintInlineImageXObject(r[0]);
                      break;
                    case n.OPS.paintImageMaskXObject:
                      this.paintImageMaskXObject(r[0]);
                      break;
                    case n.OPS.paintFormXObjectBegin:
                      this.paintFormXObjectBegin(r[0], r[1]);
                      break;
                    case n.OPS.paintFormXObjectEnd:
                      this.paintFormXObjectEnd();
                      break;
                    case n.OPS.closePath:
                      this.closePath();
                      break;
                    case n.OPS.closeStroke:
                      this.closeStroke();
                      break;
                    case n.OPS.closeFillStroke:
                      this.closeFillStroke();
                      break;
                    case n.OPS.closeEOFillStroke:
                      this.closeEOFillStroke();
                      break;
                    case n.OPS.nextLine:
                      this.nextLine();
                      break;
                    case n.OPS.transform:
                      this.transform(r[0], r[1], r[2], r[3], r[4], r[5]);
                      break;
                    case n.OPS.constructPath:
                      this.constructPath(r[0], r[1]);
                      break;
                    case n.OPS.endPath:
                      this.endPath();
                      break;
                    case 92:
                      this.group(t.items);
                      break;
                    default:
                      (0, n.warn)(`Unimplemented operator ${e}`);
                  }
                }
              }
              setWordSpacing(e) {
                this.current.wordSpacing = e;
              }
              setCharSpacing(e) {
                this.current.charSpacing = e;
              }
              nextLine() {
                this.moveText(0, this.current.leading);
              }
              setTextMatrix(e, t, i, n, r, a) {
                const s = this.current;
                s.textMatrix = s.lineMatrix = [e, t, i, n, r, a];
                s.textMatrixScale = Math.sqrt(e * e + t * t);
                s.x = s.lineX = 0;
                s.y = s.lineY = 0;
                s.xcoords = [];
                s.ycoords = [];
                s.tspan = this.svgFactory.createElement("svg:tspan");
                s.tspan.setAttributeNS(null, "font-family", s.fontFamily);
                s.tspan.setAttributeNS(null, "font-size", `${o(s.fontSize)}px`);
                s.tspan.setAttributeNS(null, "y", o(-s.y));
                s.txtElement = this.svgFactory.createElement("svg:text");
                s.txtElement.appendChild(s.tspan);
              }
              beginText() {
                const e = this.current;
                e.x = e.lineX = 0;
                e.y = e.lineY = 0;
                e.textMatrix = n.IDENTITY_MATRIX;
                e.lineMatrix = n.IDENTITY_MATRIX;
                e.textMatrixScale = 1;
                e.tspan = this.svgFactory.createElement("svg:tspan");
                e.txtElement = this.svgFactory.createElement("svg:text");
                e.txtgrp = this.svgFactory.createElement("svg:g");
                e.xcoords = [];
                e.ycoords = [];
              }
              moveText(e, t) {
                const i = this.current;
                i.x = i.lineX += e;
                i.y = i.lineY += t;
                i.xcoords = [];
                i.ycoords = [];
                i.tspan = this.svgFactory.createElement("svg:tspan");
                i.tspan.setAttributeNS(null, "font-family", i.fontFamily);
                i.tspan.setAttributeNS(null, "font-size", `${o(i.fontSize)}px`);
                i.tspan.setAttributeNS(null, "y", o(-i.y));
              }
              showText(t) {
                const r = this.current,
                  a = r.font,
                  s = r.fontSize;
                if (0 === s) return;
                const c = r.fontSizeScale,
                  h = r.charSpacing,
                  u = r.wordSpacing,
                  d = r.fontDirection,
                  f = r.textHScale * d,
                  p = a.vertical,
                  g = p ? 1 : -1,
                  m = a.defaultVMetrics,
                  v = s * r.fontMatrix[0];
                let b = 0;
                for (const e of t) {
                  if (null === e) {
                    b += d * u;
                    continue;
                  } else if ((0, n.isNum)(e)) {
                    b += (g * e * s) / 1e3;
                    continue;
                  }
                  const t = (e.isSpace ? u : 0) + h,
                    i = e.fontChar;
                  let o,
                    l,
                    f,
                    y = e.width;
                  if (p) {
                    let t;
                    const i = e.vmetric || m;
                    t = e.vmetric ? i[1] : 0.5 * y;
                    t = -t * v;
                    const n = i[2] * v;
                    y = i ? -i[0] : y;
                    o = t / c;
                    l = (b + n) / c;
                  } else {
                    o = b / c;
                    l = 0;
                  }
                  if (e.isInFont || a.missingFile) {
                    r.xcoords.push(r.x + o);
                    if (p) r.ycoords.push(-r.y + l);
                    r.tspan.textContent += i;
                  }
                  if (p) f = y * v - t * d;
                  else f = y * v + t * d;
                  b += f;
                }
                r.tspan.setAttributeNS(null, "x", r.xcoords.map(o).join(" "));
                if (p)
                  r.tspan.setAttributeNS(null, "y", r.ycoords.map(o).join(" "));
                else r.tspan.setAttributeNS(null, "y", o(-r.y));
                if (p) r.y -= b;
                else r.x += b * f;
                r.tspan.setAttributeNS(null, "font-family", r.fontFamily);
                r.tspan.setAttributeNS(null, "font-size", `${o(r.fontSize)}px`);
                if (r.fontStyle !== e.fontStyle)
                  r.tspan.setAttributeNS(null, "font-style", r.fontStyle);
                if (r.fontWeight !== e.fontWeight)
                  r.tspan.setAttributeNS(null, "font-weight", r.fontWeight);
                const y =
                  r.textRenderingMode & n.TextRenderingMode.FILL_STROKE_MASK;
                if (
                  y === n.TextRenderingMode.FILL ||
                  y === n.TextRenderingMode.FILL_STROKE
                ) {
                  if (r.fillColor !== e.fillColor)
                    r.tspan.setAttributeNS(null, "fill", r.fillColor);
                  if (r.fillAlpha < 1)
                    r.tspan.setAttributeNS(null, "fill-opacity", r.fillAlpha);
                } else if (
                  r.textRenderingMode === n.TextRenderingMode.ADD_TO_PATH
                )
                  r.tspan.setAttributeNS(null, "fill", "transparent");
                else r.tspan.setAttributeNS(null, "fill", "none");
                if (
                  y === n.TextRenderingMode.STROKE ||
                  y === n.TextRenderingMode.FILL_STROKE
                ) {
                  const e = 1 / (r.textMatrixScale || 1);
                  this._setStrokeAttributes(r.tspan, e);
                }
                let w = r.textMatrix;
                if (0 !== r.textRise) {
                  w = w.slice();
                  w[5] += r.textRise;
                }
                r.txtElement.setAttributeNS(
                  null,
                  "transform",
                  `${l(w)} scale(${o(f)}, -1)`
                );
                r.txtElement.setAttributeNS(i, "xml:space", "preserve");
                r.txtElement.appendChild(r.tspan);
                r.txtgrp.appendChild(r.txtElement);
                this._ensureTransformGroup().appendChild(r.txtElement);
              }
              setLeadingMoveText(e, t) {
                this.setLeading(-t);
                this.moveText(e, t);
              }
              addFontStyle(e) {
                if (!e.data)
                  throw new Error(
                    'addFontStyle: No font data available, ensure that the "fontExtraProperties" API parameter is set.'
                  );
                if (!this.cssStyle) {
                  this.cssStyle = this.svgFactory.createElement("svg:style");
                  this.cssStyle.setAttributeNS(null, "type", "text/css");
                  this.defs.appendChild(this.cssStyle);
                }
                const t = (0, n.createObjectURL)(
                  e.data,
                  e.mimetype,
                  this.forceDataSchema
                );
                this.cssStyle.textContent += `@font-face { font-family: "${e.loadedName}"; src: url(${t}); }\n`;
              }
              setFont(e) {
                const t = this.current,
                  i = this.commonObjs.get(e[0]);
                let r = e[1];
                t.font = i;
                if (
                  this.embedFonts &&
                  !i.missingFile &&
                  !this.embeddedFonts[i.loadedName]
                ) {
                  this.addFontStyle(i);
                  this.embeddedFonts[i.loadedName] = i;
                }
                t.fontMatrix = i.fontMatrix || n.FONT_IDENTITY_MATRIX;
                let a = "normal";
                if (i.black) a = "900";
                else if (i.bold) a = "bold";
                const s = i.italic ? "italic" : "normal";
                if (r < 0) {
                  r = -r;
                  t.fontDirection = -1;
                } else t.fontDirection = 1;
                t.fontSize = r;
                t.fontFamily = i.loadedName;
                t.fontWeight = a;
                t.fontStyle = s;
                t.tspan = this.svgFactory.createElement("svg:tspan");
                t.tspan.setAttributeNS(null, "y", o(-t.y));
                t.xcoords = [];
                t.ycoords = [];
              }
              endText() {
                const e = this.current;
                if (
                  e.textRenderingMode & n.TextRenderingMode.ADD_TO_PATH_FLAG &&
                  e.txtElement?.hasChildNodes()
                ) {
                  e.element = e.txtElement;
                  this.clip("nonzero");
                  this.endPath();
                }
              }
              setLineWidth(e) {
                if (e > 0) this.current.lineWidth = e;
              }
              setLineCap(e) {
                this.current.lineCap = h[e];
              }
              setLineJoin(e) {
                this.current.lineJoin = u[e];
              }
              setMiterLimit(e) {
                this.current.miterLimit = e;
              }
              setStrokeAlpha(e) {
                this.current.strokeAlpha = e;
              }
              setStrokeRGBColor(e, t, i) {
                this.current.strokeColor = n.Util.makeHexColor(e, t, i);
              }
              setFillAlpha(e) {
                this.current.fillAlpha = e;
              }
              setFillRGBColor(e, t, i) {
                this.current.fillColor = n.Util.makeHexColor(e, t, i);
                this.current.tspan = this.svgFactory.createElement("svg:tspan");
                this.current.xcoords = [];
                this.current.ycoords = [];
              }
              setStrokeColorN(e) {
                this.current.strokeColor = this._makeColorN_Pattern(e);
              }
              setFillColorN(e) {
                this.current.fillColor = this._makeColorN_Pattern(e);
              }
              shadingFill(e) {
                const t = this.viewport.width,
                  i = this.viewport.height,
                  r = n.Util.inverseTransform(this.transformMatrix),
                  a = n.Util.applyTransform([0, 0], r),
                  s = n.Util.applyTransform([0, i], r),
                  o = n.Util.applyTransform([t, 0], r),
                  l = n.Util.applyTransform([t, i], r),
                  c = Math.min(a[0], s[0], o[0], l[0]),
                  h = Math.min(a[1], s[1], o[1], l[1]),
                  u = Math.max(a[0], s[0], o[0], l[0]),
                  d = Math.max(a[1], s[1], o[1], l[1]),
                  f = this.svgFactory.createElement("svg:rect");
                f.setAttributeNS(null, "x", c);
                f.setAttributeNS(null, "y", h);
                f.setAttributeNS(null, "width", u - c);
                f.setAttributeNS(null, "height", d - h);
                f.setAttributeNS(null, "fill", this._makeShadingPattern(e));
                if (this.current.fillAlpha < 1)
                  f.setAttributeNS(
                    null,
                    "fill-opacity",
                    this.current.fillAlpha
                  );
                this._ensureTransformGroup().appendChild(f);
              }
              _makeColorN_Pattern(e) {
                if ("TilingPattern" === e[0]) return this._makeTilingPattern(e);
                else return this._makeShadingPattern(e);
              }
              _makeTilingPattern(e) {
                const t = e[1],
                  i = e[2],
                  r = e[3] || n.IDENTITY_MATRIX,
                  [a, s, o, l] = e[4],
                  c = e[5],
                  h = e[6],
                  u = e[7],
                  d = "shading" + m++,
                  [f, p] = n.Util.applyTransform([a, s], r),
                  [g, v] = n.Util.applyTransform([o, l], r),
                  [b, y] = n.Util.singularValueDecompose2dScale(r),
                  w = c * b,
                  x = h * y,
                  k = this.svgFactory.createElement("svg:pattern");
                k.setAttributeNS(null, "id", d);
                k.setAttributeNS(null, "patternUnits", "userSpaceOnUse");
                k.setAttributeNS(null, "width", w);
                k.setAttributeNS(null, "height", x);
                k.setAttributeNS(null, "x", `${f}`);
                k.setAttributeNS(null, "y", `${p}`);
                const C = this.svg,
                  S = this.transformMatrix,
                  _ = this.current.fillColor,
                  A = this.current.strokeColor,
                  F = this.svgFactory.create(g - f, v - p);
                this.svg = F;
                this.transformMatrix = r;
                if (2 === u) {
                  const e = n.Util.makeHexColor(...t);
                  this.current.fillColor = e;
                  this.current.strokeColor = e;
                }
                this.executeOpTree(this.convertOpList(i));
                this.svg = C;
                this.transformMatrix = S;
                this.current.fillColor = _;
                this.current.strokeColor = A;
                k.appendChild(F.childNodes[0]);
                this.defs.appendChild(k);
                return `url(#${d})`;
              }
              _makeShadingPattern(e) {
                switch (e[0]) {
                  case "RadialAxial":
                    const t = "shading" + m++,
                      i = e[3];
                    let r;
                    switch (e[1]) {
                      case "axial":
                        const i = e[4],
                          n = e[5];
                        r = this.svgFactory.createElement("svg:linearGradient");
                        r.setAttributeNS(null, "id", t);
                        r.setAttributeNS(
                          null,
                          "gradientUnits",
                          "userSpaceOnUse"
                        );
                        r.setAttributeNS(null, "x1", i[0]);
                        r.setAttributeNS(null, "y1", i[1]);
                        r.setAttributeNS(null, "x2", n[0]);
                        r.setAttributeNS(null, "y2", n[1]);
                        break;
                      case "radial":
                        const a = e[4],
                          s = e[5],
                          o = e[6],
                          l = e[7];
                        r = this.svgFactory.createElement("svg:radialGradient");
                        r.setAttributeNS(null, "id", t);
                        r.setAttributeNS(
                          null,
                          "gradientUnits",
                          "userSpaceOnUse"
                        );
                        r.setAttributeNS(null, "cx", s[0]);
                        r.setAttributeNS(null, "cy", s[1]);
                        r.setAttributeNS(null, "r", l);
                        r.setAttributeNS(null, "fx", a[0]);
                        r.setAttributeNS(null, "fy", a[1]);
                        r.setAttributeNS(null, "fr", o);
                        break;
                      default:
                        throw new Error(`Unknown RadialAxial type: ${e[1]}`);
                    }
                    for (const e of i) {
                      const t = this.svgFactory.createElement("svg:stop");
                      t.setAttributeNS(null, "offset", e[0]);
                      t.setAttributeNS(null, "stop-color", e[1]);
                      r.appendChild(t);
                    }
                    this.defs.appendChild(r);
                    return `url(#${t})`;
                  case "Mesh":
                    (0, n.warn)("Unimplemented pattern Mesh");
                    return null;
                  case "Dummy":
                    return "hotpink";
                  default:
                    throw new Error(`Unknown IR type: ${e[0]}`);
                }
              }
              setDash(e, t) {
                this.current.dashArray = e;
                this.current.dashPhase = t;
              }
              constructPath(e, t) {
                const i = this.current;
                let r = i.x,
                  a = i.y,
                  s = [],
                  l = 0;
                for (const i of e)
                  switch (0 | i) {
                    case n.OPS.rectangle:
                      r = t[l++];
                      a = t[l++];
                      const e = r + t[l++],
                        i = a + t[l++];
                      s.push(
                        "M",
                        o(r),
                        o(a),
                        "L",
                        o(e),
                        o(a),
                        "L",
                        o(e),
                        o(i),
                        "L",
                        o(r),
                        o(i),
                        "Z"
                      );
                      break;
                    case n.OPS.moveTo:
                      r = t[l++];
                      a = t[l++];
                      s.push("M", o(r), o(a));
                      break;
                    case n.OPS.lineTo:
                      r = t[l++];
                      a = t[l++];
                      s.push("L", o(r), o(a));
                      break;
                    case n.OPS.curveTo:
                      r = t[l + 4];
                      a = t[l + 5];
                      s.push(
                        "C",
                        o(t[l]),
                        o(t[l + 1]),
                        o(t[l + 2]),
                        o(t[l + 3]),
                        o(r),
                        o(a)
                      );
                      l += 6;
                      break;
                    case n.OPS.curveTo2:
                      s.push(
                        "C",
                        o(r),
                        o(a),
                        o(t[l]),
                        o(t[l + 1]),
                        o(t[l + 2]),
                        o(t[l + 3])
                      );
                      r = t[l + 2];
                      a = t[l + 3];
                      l += 4;
                      break;
                    case n.OPS.curveTo3:
                      r = t[l + 2];
                      a = t[l + 3];
                      s.push("C", o(t[l]), o(t[l + 1]), o(r), o(a), o(r), o(a));
                      l += 4;
                      break;
                    case n.OPS.closePath:
                      s.push("Z");
                  }
                s = s.join(" ");
                if (
                  i.path &&
                  e.length > 0 &&
                  e[0] !== n.OPS.rectangle &&
                  e[0] !== n.OPS.moveTo
                )
                  s = i.path.getAttributeNS(null, "d") + s;
                else {
                  i.path = this.svgFactory.createElement("svg:path");
                  this._ensureTransformGroup().appendChild(i.path);
                }
                i.path.setAttributeNS(null, "d", s);
                i.path.setAttributeNS(null, "fill", "none");
                i.element = i.path;
                i.setCurrentPoint(r, a);
              }
              endPath() {
                const e = this.current;
                e.path = null;
                if (!this.pendingClip) return;
                if (!e.element) {
                  this.pendingClip = null;
                  return;
                }
                const t = "clippath" + p++,
                  i = this.svgFactory.createElement("svg:clipPath");
                i.setAttributeNS(null, "id", t);
                i.setAttributeNS(null, "transform", l(this.transformMatrix));
                const n = e.element.cloneNode(!0);
                if ("evenodd" === this.pendingClip)
                  n.setAttributeNS(null, "clip-rule", "evenodd");
                else n.setAttributeNS(null, "clip-rule", "nonzero");
                this.pendingClip = null;
                i.appendChild(n);
                this.defs.appendChild(i);
                if (e.activeClipUrl) {
                  e.clipGroup = null;
                  this.extraStack.forEach(function (e) {
                    e.clipGroup = null;
                  });
                  i.setAttributeNS(null, "clip-path", e.activeClipUrl);
                }
                e.activeClipUrl = `url(#${t})`;
                this.tgrp = null;
              }
              clip(e) {
                this.pendingClip = e;
              }
              closePath() {
                const e = this.current;
                if (e.path) {
                  const t = `${e.path.getAttributeNS(null, "d")}Z`;
                  e.path.setAttributeNS(null, "d", t);
                }
              }
              setLeading(e) {
                this.current.leading = -e;
              }
              setTextRise(e) {
                this.current.textRise = e;
              }
              setTextRenderingMode(e) {
                this.current.textRenderingMode = e;
              }
              setHScale(e) {
                this.current.textHScale = e / 100;
              }
              setRenderingIntent(e) {}
              setFlatness(e) {}
              setGState(e) {
                for (const [t, i] of e)
                  switch (t) {
                    case "LW":
                      this.setLineWidth(i);
                      break;
                    case "LC":
                      this.setLineCap(i);
                      break;
                    case "LJ":
                      this.setLineJoin(i);
                      break;
                    case "ML":
                      this.setMiterLimit(i);
                      break;
                    case "D":
                      this.setDash(i[0], i[1]);
                      break;
                    case "RI":
                      this.setRenderingIntent(i);
                      break;
                    case "FL":
                      this.setFlatness(i);
                      break;
                    case "Font":
                      this.setFont(i);
                      break;
                    case "CA":
                      this.setStrokeAlpha(i);
                      break;
                    case "ca":
                      this.setFillAlpha(i);
                      break;
                    default:
                      (0, n.warn)(`Unimplemented graphic state operator ${t}`);
                  }
              }
              fill() {
                const e = this.current;
                if (e.element) {
                  e.element.setAttributeNS(null, "fill", e.fillColor);
                  e.element.setAttributeNS(null, "fill-opacity", e.fillAlpha);
                  this.endPath();
                }
              }
              stroke() {
                const e = this.current;
                if (e.element) {
                  this._setStrokeAttributes(e.element);
                  e.element.setAttributeNS(null, "fill", "none");
                  this.endPath();
                }
              }
              _setStrokeAttributes(e, t = 1) {
                const i = this.current;
                let n = i.dashArray;
                if (1 !== t && n.length > 0)
                  n = n.map(function (e) {
                    return t * e;
                  });
                e.setAttributeNS(null, "stroke", i.strokeColor);
                e.setAttributeNS(null, "stroke-opacity", i.strokeAlpha);
                e.setAttributeNS(null, "stroke-miterlimit", o(i.miterLimit));
                e.setAttributeNS(null, "stroke-linecap", i.lineCap);
                e.setAttributeNS(null, "stroke-linejoin", i.lineJoin);
                e.setAttributeNS(
                  null,
                  "stroke-width",
                  o(t * i.lineWidth) + "px"
                );
                e.setAttributeNS(null, "stroke-dasharray", n.map(o).join(" "));
                e.setAttributeNS(
                  null,
                  "stroke-dashoffset",
                  o(t * i.dashPhase) + "px"
                );
              }
              eoFill() {
                if (this.current.element)
                  this.current.element.setAttributeNS(
                    null,
                    "fill-rule",
                    "evenodd"
                  );
                this.fill();
              }
              fillStroke() {
                this.stroke();
                this.fill();
              }
              eoFillStroke() {
                if (this.current.element)
                  this.current.element.setAttributeNS(
                    null,
                    "fill-rule",
                    "evenodd"
                  );
                this.fillStroke();
              }
              closeStroke() {
                this.closePath();
                this.stroke();
              }
              closeFillStroke() {
                this.closePath();
                this.fillStroke();
              }
              closeEOFillStroke() {
                this.closePath();
                this.eoFillStroke();
              }
              paintSolidColorImageMask() {
                const e = this.svgFactory.createElement("svg:rect");
                e.setAttributeNS(null, "x", "0");
                e.setAttributeNS(null, "y", "0");
                e.setAttributeNS(null, "width", "1px");
                e.setAttributeNS(null, "height", "1px");
                e.setAttributeNS(null, "fill", this.current.fillColor);
                this._ensureTransformGroup().appendChild(e);
              }
              paintImageXObject(e) {
                const t = e.startsWith("g_")
                  ? this.commonObjs.get(e)
                  : this.objs.get(e);
                if (t) this.paintInlineImageXObject(t);
                else
                  (0, n.warn)(
                    `Dependent image with object ID ${e} is not ready yet`
                  );
              }
              paintInlineImageXObject(e, t) {
                const i = e.width,
                  n = e.height,
                  r = d(e, this.forceDataSchema, !!t),
                  a = this.svgFactory.createElement("svg:rect");
                a.setAttributeNS(null, "x", "0");
                a.setAttributeNS(null, "y", "0");
                a.setAttributeNS(null, "width", o(i));
                a.setAttributeNS(null, "height", o(n));
                this.current.element = a;
                this.clip("nonzero");
                const s = this.svgFactory.createElement("svg:image");
                s.setAttributeNS(c, "xlink:href", r);
                s.setAttributeNS(null, "x", "0");
                s.setAttributeNS(null, "y", o(-n));
                s.setAttributeNS(null, "width", o(i) + "px");
                s.setAttributeNS(null, "height", o(n) + "px");
                s.setAttributeNS(
                  null,
                  "transform",
                  `scale(${o(1 / i)} ${o(-1 / n)})`
                );
                if (t) t.appendChild(s);
                else this._ensureTransformGroup().appendChild(s);
              }
              paintImageMaskXObject(e) {
                const t = this.current,
                  i = e.width,
                  n = e.height,
                  r = t.fillColor;
                t.maskId = "mask" + g++;
                const a = this.svgFactory.createElement("svg:mask");
                a.setAttributeNS(null, "id", t.maskId);
                const s = this.svgFactory.createElement("svg:rect");
                s.setAttributeNS(null, "x", "0");
                s.setAttributeNS(null, "y", "0");
                s.setAttributeNS(null, "width", o(i));
                s.setAttributeNS(null, "height", o(n));
                s.setAttributeNS(null, "fill", r);
                s.setAttributeNS(null, "mask", `url(#${t.maskId})`);
                this.defs.appendChild(a);
                this._ensureTransformGroup().appendChild(s);
                this.paintInlineImageXObject(e, a);
              }
              paintFormXObjectBegin(e, t) {
                if (Array.isArray(e) && 6 === e.length)
                  this.transform(e[0], e[1], e[2], e[3], e[4], e[5]);
                if (t) {
                  const e = t[2] - t[0],
                    i = t[3] - t[1],
                    n = this.svgFactory.createElement("svg:rect");
                  n.setAttributeNS(null, "x", t[0]);
                  n.setAttributeNS(null, "y", t[1]);
                  n.setAttributeNS(null, "width", o(e));
                  n.setAttributeNS(null, "height", o(i));
                  this.current.element = n;
                  this.clip("nonzero");
                  this.endPath();
                }
              }
              paintFormXObjectEnd() {}
              _initialize(e) {
                const t = this.svgFactory.create(e.width, e.height),
                  i = this.svgFactory.createElement("svg:defs");
                t.appendChild(i);
                this.defs = i;
                const n = this.svgFactory.createElement("svg:g");
                n.setAttributeNS(null, "transform", l(e.transform));
                t.appendChild(n);
                this.svg = n;
                return t;
              }
              _ensureClipGroup() {
                if (!this.current.clipGroup) {
                  const e = this.svgFactory.createElement("svg:g");
                  e.setAttributeNS(
                    null,
                    "clip-path",
                    this.current.activeClipUrl
                  );
                  this.svg.appendChild(e);
                  this.current.clipGroup = e;
                }
                return this.current.clipGroup;
              }
              _ensureTransformGroup() {
                if (!this.tgrp) {
                  this.tgrp = this.svgFactory.createElement("svg:g");
                  this.tgrp.setAttributeNS(
                    null,
                    "transform",
                    l(this.transformMatrix)
                  );
                  if (this.current.activeClipUrl)
                    this._ensureClipGroup().appendChild(this.tgrp);
                  else this.svg.appendChild(this.tgrp);
                }
                return this.tgrp;
              }
            };
          }
        },
        (e, t, i) => {
          Object.defineProperty(t, "__esModule", { value: !0 });
          t.PDFNodeStream = void 0;
          var n = i(2),
            r = i(24);
          const a = require("fs"),
            s = require("http"),
            o = require("https"),
            l = require("url"),
            c = /^file:\/\/\/[a-zA-Z]:\//;
          t.PDFNodeStream = class {
            constructor(e) {
              this.source = e;
              this.url = (function (e) {
                const t = l.parse(e);
                if ("file:" === t.protocol || t.host) return t;
                if (/^[a-z]:[/\\]/i.test(e)) return l.parse(`file:///${e}`);
                if (!t.host) t.protocol = "file:";
                return t;
              })(e.url);
              this.isHttp =
                "http:" === this.url.protocol || "https:" === this.url.protocol;
              this.isFsUrl = "file:" === this.url.protocol;
              this.httpHeaders = (this.isHttp && e.httpHeaders) || {};
              this._fullRequestReader = null;
              this._rangeRequestReaders = [];
            }
            get _progressiveDataLength() {
              return this._fullRequestReader?._loaded ?? 0;
            }
            getFullReader() {
              (0, n.assert)(
                !this._fullRequestReader,
                "PDFNodeStream.getFullReader can only be called once."
              );
              this._fullRequestReader = this.isFsUrl
                ? new g(this)
                : new f(this);
              return this._fullRequestReader;
            }
            getRangeReader(e, t) {
              if (t <= this._progressiveDataLength) return null;
              const i = this.isFsUrl ? new m(this, e, t) : new p(this, e, t);
              this._rangeRequestReaders.push(i);
              return i;
            }
            cancelAllRequests(e) {
              if (this._fullRequestReader) this._fullRequestReader.cancel(e);
              this._rangeRequestReaders.slice(0).forEach(function (t) {
                t.cancel(e);
              });
            }
          };
          class h {
            constructor(e) {
              this._url = e.url;
              this._done = !1;
              this._storedError = null;
              this.onProgress = null;
              const t = e.source;
              this._contentLength = t.length;
              this._loaded = 0;
              this._filename = null;
              this._disableRange = t.disableRange || !1;
              this._rangeChunkSize = t.rangeChunkSize;
              if (!this._rangeChunkSize && !this._disableRange)
                this._disableRange = !0;
              this._isStreamingSupported = !t.disableStream;
              this._isRangeSupported = !t.disableRange;
              this._readableStream = null;
              this._readCapability = (0, n.createPromiseCapability)();
              this._headersCapability = (0, n.createPromiseCapability)();
            }
            get headersReady() {
              return this._headersCapability.promise;
            }
            get filename() {
              return this._filename;
            }
            get contentLength() {
              return this._contentLength;
            }
            get isRangeSupported() {
              return this._isRangeSupported;
            }
            get isStreamingSupported() {
              return this._isStreamingSupported;
            }
            async read() {
              await this._readCapability.promise;
              if (this._done) return { value: void 0, done: !0 };
              if (this._storedError) throw this._storedError;
              const e = this._readableStream.read();
              if (null === e) {
                this._readCapability = (0, n.createPromiseCapability)();
                return this.read();
              }
              this._loaded += e.length;
              if (this.onProgress)
                this.onProgress({
                  loaded: this._loaded,
                  total: this._contentLength,
                });
              return { value: new Uint8Array(e).buffer, done: !1 };
            }
            cancel(e) {
              if (this._readableStream) this._readableStream.destroy(e);
              else this._error(e);
            }
            _error(e) {
              this._storedError = e;
              this._readCapability.resolve();
            }
            _setReadableStream(e) {
              this._readableStream = e;
              e.on("readable", () => {
                this._readCapability.resolve();
              });
              e.on("end", () => {
                e.destroy();
                this._done = !0;
                this._readCapability.resolve();
              });
              e.on("error", (e) => {
                this._error(e);
              });
              if (!this._isStreamingSupported && this._isRangeSupported)
                this._error(new n.AbortException("streaming is disabled"));
              if (this._storedError)
                this._readableStream.destroy(this._storedError);
            }
          }
          class u {
            constructor(e) {
              this._url = e.url;
              this._done = !1;
              this._storedError = null;
              this.onProgress = null;
              this._loaded = 0;
              this._readableStream = null;
              this._readCapability = (0, n.createPromiseCapability)();
              const t = e.source;
              this._isStreamingSupported = !t.disableStream;
            }
            get isStreamingSupported() {
              return this._isStreamingSupported;
            }
            async read() {
              await this._readCapability.promise;
              if (this._done) return { value: void 0, done: !0 };
              if (this._storedError) throw this._storedError;
              const e = this._readableStream.read();
              if (null === e) {
                this._readCapability = (0, n.createPromiseCapability)();
                return this.read();
              }
              this._loaded += e.length;
              if (this.onProgress) this.onProgress({ loaded: this._loaded });
              return { value: new Uint8Array(e).buffer, done: !1 };
            }
            cancel(e) {
              if (this._readableStream) this._readableStream.destroy(e);
              else this._error(e);
            }
            _error(e) {
              this._storedError = e;
              this._readCapability.resolve();
            }
            _setReadableStream(e) {
              this._readableStream = e;
              e.on("readable", () => {
                this._readCapability.resolve();
              });
              e.on("end", () => {
                e.destroy();
                this._done = !0;
                this._readCapability.resolve();
              });
              e.on("error", (e) => {
                this._error(e);
              });
              if (this._storedError)
                this._readableStream.destroy(this._storedError);
            }
          }
          function d(e, t) {
            return {
              protocol: e.protocol,
              auth: e.auth,
              host: e.hostname,
              port: e.port,
              path: e.path,
              method: "GET",
              headers: t,
            };
          }
          class f extends h {
            constructor(e) {
              super(e);
              const t = (t) => {
                if (404 === t.statusCode) {
                  const e = new n.MissingPDFException(
                    `Missing PDF "${this._url}".`
                  );
                  this._storedError = e;
                  this._headersCapability.reject(e);
                  return;
                }
                this._headersCapability.resolve();
                this._setReadableStream(t);
                const i = (e) => this._readableStream.headers[e.toLowerCase()],
                  { allowRangeRequests: a, suggestedLength: s } = (0,
                  r.validateRangeRequestCapabilities)({
                    getResponseHeader: i,
                    isHttp: e.isHttp,
                    rangeChunkSize: this._rangeChunkSize,
                    disableRange: this._disableRange,
                  });
                this._isRangeSupported = a;
                this._contentLength = s || this._contentLength;
                this._filename = (0, r.extractFilenameFromHeader)(i);
              };
              this._request = null;
              if ("http:" === this._url.protocol)
                this._request = s.request(d(this._url, e.httpHeaders), t);
              else this._request = o.request(d(this._url, e.httpHeaders), t);
              this._request.on("error", (e) => {
                this._storedError = e;
                this._headersCapability.reject(e);
              });
              this._request.end();
            }
          }
          class p extends u {
            constructor(e, t, i) {
              super(e);
              this._httpHeaders = {};
              for (const t in e.httpHeaders) {
                const i = e.httpHeaders[t];
                if (void 0 !== i) this._httpHeaders[t] = i;
              }
              this._httpHeaders.Range = `bytes=${t}-${i - 1}`;
              const r = (e) => {
                if (404 !== e.statusCode) this._setReadableStream(e);
                else {
                  const e = new n.MissingPDFException(
                    `Missing PDF "${this._url}".`
                  );
                  this._storedError = e;
                }
              };
              this._request = null;
              if ("http:" === this._url.protocol)
                this._request = s.request(d(this._url, this._httpHeaders), r);
              else
                this._request = o.request(d(this._url, this._httpHeaders), r);
              this._request.on("error", (e) => {
                this._storedError = e;
              });
              this._request.end();
            }
          }
          class g extends h {
            constructor(e) {
              super(e);
              let t = decodeURIComponent(this._url.path);
              if (c.test(this._url.href)) t = t.replace(/^\//, "");
              a.lstat(t, (e, i) => {
                if (!e) {
                  this._contentLength = i.size;
                  this._setReadableStream(a.createReadStream(t));
                  this._headersCapability.resolve();
                } else {
                  if ("ENOENT" === e.code)
                    e = new n.MissingPDFException(`Missing PDF "${t}".`);
                  this._storedError = e;
                  this._headersCapability.reject(e);
                }
              });
            }
          }
          class m extends u {
            constructor(e, t, i) {
              super(e);
              let n = decodeURIComponent(this._url.path);
              if (c.test(this._url.href)) n = n.replace(/^\//, "");
              this._setReadableStream(
                a.createReadStream(n, { start: t, end: i - 1 })
              );
            }
          }
        },
        (e, t, i) => {
          Object.defineProperty(t, "__esModule", { value: !0 });
          t.createResponseStatusError = function (e, t) {
            if (404 === e || (0 === e && t.startsWith("file:")))
              return new n.MissingPDFException('Missing PDF "' + t + '".');
            else
              return new n.UnexpectedResponseException(
                "Unexpected server response (" +
                  e +
                  ') while retrieving PDF "' +
                  t +
                  '".',
                e
              );
          };
          t.extractFilenameFromHeader = function (e) {
            const t = e("Content-Disposition");
            if (t) {
              let e = (0, r.getFilenameFromContentDispositionHeader)(t);
              if (e.includes("%"))
                try {
                  e = decodeURIComponent(e);
                } catch (e) {}
              if (/\.pdf$/i.test(e)) return e;
            }
            return null;
          };
          t.validateRangeRequestCapabilities = function ({
            getResponseHeader: e,
            isHttp: t,
            rangeChunkSize: i,
            disableRange: r,
          }) {
            (0, n.assert)(i > 0, "Range chunk size must be larger than zero");
            const a = { allowRangeRequests: !1, suggestedLength: void 0 },
              s = parseInt(e("Content-Length"), 10);
            if (!Number.isInteger(s)) return a;
            a.suggestedLength = s;
            if (s <= 2 * i) return a;
            if (r || !t) return a;
            if ("bytes" !== e("Accept-Ranges")) return a;
            if ("identity" !== (e("Content-Encoding") || "identity")) return a;
            a.allowRangeRequests = !0;
            return a;
          };
          t.validateResponseStatus = function (e) {
            return 200 === e || 206 === e;
          };
          var n = i(2),
            r = i(25);
        },
        (e, t) => {
          Object.defineProperty(t, "__esModule", { value: !0 });
          t.getFilenameFromContentDispositionHeader = function (e) {
            let t = !0,
              i = n("filename\\*", "i").exec(e);
            if (i) {
              i = i[1];
              let e = s(i);
              e = unescape(e);
              e = o(e);
              e = l(e);
              return a(e);
            }
            i = (function (e) {
              const t = [];
              let i;
              const r = n("filename\\*((?!0\\d)\\d+)(\\*?)", "ig");
              for (; null !== (i = r.exec(e)); ) {
                let [, e, n, r] = i;
                e = parseInt(e, 10);
                if (!(e in t)) t[e] = [n, r];
                else if (0 === e) break;
              }
              const a = [];
              for (let e = 0; e < t.length && e in t; ++e) {
                let [i, n] = t[e];
                n = s(n);
                if (i) {
                  n = unescape(n);
                  if (0 === e) n = o(n);
                }
                a.push(n);
              }
              return a.join("");
            })(e);
            if (i) return a(l(i));
            i = n("filename", "i").exec(e);
            if (i) {
              i = i[1];
              let e = s(i);
              e = l(e);
              return a(e);
            }
            function n(e, t) {
              return new RegExp(
                "(?:^|;)\\s*" +
                  e +
                  '\\s*=\\s*([^";\\s][^;\\s]*|"(?:[^"\\\\]|\\\\"?)+"?)',
                t
              );
            }
            function r(e, i) {
              if (e) {
                if (!/^[\x00-\xFF]+$/.test(i)) return i;
                try {
                  const n = new TextDecoder(e, { fatal: !0 }),
                    r = Array.from(i, function (e) {
                      return 255 & e.charCodeAt(0);
                    });
                  i = n.decode(new Uint8Array(r));
                  t = !1;
                } catch (n) {
                  if (/^utf-?8$/i.test(e))
                    try {
                      i = decodeURIComponent(escape(i));
                      t = !1;
                    } catch (e) {}
                }
              }
              return i;
            }
            function a(e) {
              if (t && /[\x80-\xff]/.test(e)) {
                e = r("utf-8", e);
                if (t) e = r("iso-8859-1", e);
              }
              return e;
            }
            function s(e) {
              if (e.startsWith('"')) {
                const t = e.slice(1).split('\\"');
                for (let e = 0; e < t.length; ++e) {
                  const i = t[e].indexOf('"');
                  if (-1 !== i) {
                    t[e] = t[e].slice(0, i);
                    t.length = e + 1;
                  }
                  t[e] = t[e].replace(/\\(.)/g, "$1");
                }
                e = t.join('"');
              }
              return e;
            }
            function o(e) {
              const t = e.indexOf("'");
              if (-1 === t) return e;
              else
                return r(e.slice(0, t), e.slice(t + 1).replace(/^[^']*'/, ""));
            }
            function l(e) {
              if (!e.startsWith("=?") || /[\x00-\x19\x80-\xff]/.test(e))
                return e;
              else
                return e.replace(
                  /=\?([\w-]*)\?([QqBb])\?((?:[^?]|\?(?!=))*)\?=/g,
                  function (e, t, i, n) {
                    if ("q" === i || "Q" === i)
                      return r(
                        t,
                        (n = (n = n.replace(/_/g, " ")).replace(
                          /=([0-9a-fA-F]{2})/g,
                          function (e, t) {
                            return String.fromCharCode(parseInt(t, 16));
                          }
                        ))
                      );
                    try {
                      n = atob(n);
                    } catch (e) {}
                    return r(t, n);
                  }
                );
            }
            return "";
          };
        },
        (e, t, i) => {
          Object.defineProperty(t, "__esModule", { value: !0 });
          t.PDFNetworkStream = void 0;
          var n = i(2),
            r = i(24);
          class a {
            constructor(e, t) {
              this.url = e;
              t = t || {};
              this.isHttp = /^https?:/i.test(e);
              this.httpHeaders = (this.isHttp && t.httpHeaders) || {};
              this.withCredentials = t.withCredentials || !1;
              this.getXhr =
                t.getXhr ||
                function () {
                  return new XMLHttpRequest();
                };
              this.currXhrId = 0;
              this.pendingRequests = Object.create(null);
            }
            requestRange(e, t, i) {
              const n = { begin: e, end: t };
              for (const e in i) n[e] = i[e];
              return this.request(n);
            }
            requestFull(e) {
              return this.request(e);
            }
            request(e) {
              const t = this.getXhr(),
                i = this.currXhrId++,
                n = (this.pendingRequests[i] = { xhr: t });
              t.open("GET", this.url);
              t.withCredentials = this.withCredentials;
              for (const e in this.httpHeaders) {
                const i = this.httpHeaders[e];
                if (void 0 !== i) t.setRequestHeader(e, i);
              }
              if (this.isHttp && "begin" in e && "end" in e) {
                t.setRequestHeader("Range", `bytes=${e.begin}-${e.end - 1}`);
                n.expectedStatus = 206;
              } else n.expectedStatus = 200;
              t.responseType = "arraybuffer";
              if (e.onError)
                t.onerror = function (i) {
                  e.onError(t.status);
                };
              t.onreadystatechange = this.onStateChange.bind(this, i);
              t.onprogress = this.onProgress.bind(this, i);
              n.onHeadersReceived = e.onHeadersReceived;
              n.onDone = e.onDone;
              n.onError = e.onError;
              n.onProgress = e.onProgress;
              t.send(null);
              return i;
            }
            onProgress(e, t) {
              const i = this.pendingRequests[e];
              if (i) if (i.onProgress) i.onProgress(t);
            }
            onStateChange(e, t) {
              const i = this.pendingRequests[e];
              if (!i) return;
              const r = i.xhr;
              if (r.readyState >= 2 && i.onHeadersReceived) {
                i.onHeadersReceived();
                delete i.onHeadersReceived;
              }
              if (4 !== r.readyState) return;
              if (!(e in this.pendingRequests)) return;
              delete this.pendingRequests[e];
              if (0 === r.status && this.isHttp) {
                if (i.onError) i.onError(r.status);
                return;
              }
              const a = r.status || 200;
              if (
                (200 !== a || 206 !== i.expectedStatus) &&
                a !== i.expectedStatus
              ) {
                if (i.onError) i.onError(r.status);
                return;
              }
              const s = (function (e) {
                const t = e.response;
                if ("string" != typeof t) return t;
                else return (0, n.stringToBytes)(t).buffer;
              })(r);
              if (206 === a) {
                const e = r.getResponseHeader("Content-Range"),
                  t = /bytes (\d+)-(\d+)\/(\d+)/.exec(e);
                i.onDone({ begin: parseInt(t[1], 10), chunk: s });
              } else if (s) i.onDone({ begin: 0, chunk: s });
              else if (i.onError) i.onError(r.status);
            }
            getRequestXhr(e) {
              return this.pendingRequests[e].xhr;
            }
            isPendingRequest(e) {
              return e in this.pendingRequests;
            }
            abortRequest(e) {
              const t = this.pendingRequests[e].xhr;
              delete this.pendingRequests[e];
              t.abort();
            }
          }
          t.PDFNetworkStream = class {
            constructor(e) {
              this._source = e;
              this._manager = new a(e.url, {
                httpHeaders: e.httpHeaders,
                withCredentials: e.withCredentials,
              });
              this._rangeChunkSize = e.rangeChunkSize;
              this._fullRequestReader = null;
              this._rangeRequestReaders = [];
            }
            _onRangeRequestReaderClosed(e) {
              const t = this._rangeRequestReaders.indexOf(e);
              if (t >= 0) this._rangeRequestReaders.splice(t, 1);
            }
            getFullReader() {
              (0, n.assert)(
                !this._fullRequestReader,
                "PDFNetworkStream.getFullReader can only be called once."
              );
              this._fullRequestReader = new s(this._manager, this._source);
              return this._fullRequestReader;
            }
            getRangeReader(e, t) {
              const i = new o(this._manager, e, t);
              i.onClosed = this._onRangeRequestReaderClosed.bind(this);
              this._rangeRequestReaders.push(i);
              return i;
            }
            cancelAllRequests(e) {
              if (this._fullRequestReader) this._fullRequestReader.cancel(e);
              this._rangeRequestReaders.slice(0).forEach(function (t) {
                t.cancel(e);
              });
            }
          };
          class s {
            constructor(e, t) {
              this._manager = e;
              const i = {
                onHeadersReceived: this._onHeadersReceived.bind(this),
                onDone: this._onDone.bind(this),
                onError: this._onError.bind(this),
                onProgress: this._onProgress.bind(this),
              };
              this._url = t.url;
              this._fullRequestId = e.requestFull(i);
              this._headersReceivedCapability = (0,
              n.createPromiseCapability)();
              this._disableRange = t.disableRange || !1;
              this._contentLength = t.length;
              this._rangeChunkSize = t.rangeChunkSize;
              if (!this._rangeChunkSize && !this._disableRange)
                this._disableRange = !0;
              this._isStreamingSupported = !1;
              this._isRangeSupported = !1;
              this._cachedChunks = [];
              this._requests = [];
              this._done = !1;
              this._storedError = void 0;
              this._filename = null;
              this.onProgress = null;
            }
            _onHeadersReceived() {
              const e = this._fullRequestId,
                t = this._manager.getRequestXhr(e),
                i = (e) => t.getResponseHeader(e),
                { allowRangeRequests: n, suggestedLength: a } = (0,
                r.validateRangeRequestCapabilities)({
                  getResponseHeader: i,
                  isHttp: this._manager.isHttp,
                  rangeChunkSize: this._rangeChunkSize,
                  disableRange: this._disableRange,
                });
              if (n) this._isRangeSupported = !0;
              this._contentLength = a || this._contentLength;
              this._filename = (0, r.extractFilenameFromHeader)(i);
              if (this._isRangeSupported) this._manager.abortRequest(e);
              this._headersReceivedCapability.resolve();
            }
            _onDone(e) {
              if (e)
                if (this._requests.length > 0)
                  this._requests.shift().resolve({ value: e.chunk, done: !1 });
                else this._cachedChunks.push(e.chunk);
              this._done = !0;
              if (!(this._cachedChunks.length > 0)) {
                this._requests.forEach(function (e) {
                  e.resolve({ value: void 0, done: !0 });
                });
                this._requests = [];
              }
            }
            _onError(e) {
              const t = this._url,
                i = (0, r.createResponseStatusError)(e, t);
              this._storedError = i;
              this._headersReceivedCapability.reject(i);
              this._requests.forEach(function (e) {
                e.reject(i);
              });
              this._requests = [];
              this._cachedChunks = [];
            }
            _onProgress(e) {
              if (this.onProgress)
                this.onProgress({
                  loaded: e.loaded,
                  total: e.lengthComputable ? e.total : this._contentLength,
                });
            }
            get filename() {
              return this._filename;
            }
            get isRangeSupported() {
              return this._isRangeSupported;
            }
            get isStreamingSupported() {
              return this._isStreamingSupported;
            }
            get contentLength() {
              return this._contentLength;
            }
            get headersReady() {
              return this._headersReceivedCapability.promise;
            }
            async read() {
              if (this._storedError) throw this._storedError;
              if (this._cachedChunks.length > 0)
                return { value: this._cachedChunks.shift(), done: !1 };
              if (this._done) return { value: void 0, done: !0 };
              const e = (0, n.createPromiseCapability)();
              this._requests.push(e);
              return e.promise;
            }
            cancel(e) {
              this._done = !0;
              this._headersReceivedCapability.reject(e);
              this._requests.forEach(function (e) {
                e.resolve({ value: void 0, done: !0 });
              });
              this._requests = [];
              if (this._manager.isPendingRequest(this._fullRequestId))
                this._manager.abortRequest(this._fullRequestId);
              this._fullRequestReader = null;
            }
          }
          class o {
            constructor(e, t, i) {
              this._manager = e;
              const n = {
                onDone: this._onDone.bind(this),
                onProgress: this._onProgress.bind(this),
              };
              this._requestId = e.requestRange(t, i, n);
              this._requests = [];
              this._queuedChunk = null;
              this._done = !1;
              this.onProgress = null;
              this.onClosed = null;
            }
            _close() {
              if (this.onClosed) this.onClosed(this);
            }
            _onDone(e) {
              const t = e.chunk;
              if (this._requests.length > 0)
                this._requests.shift().resolve({ value: t, done: !1 });
              else this._queuedChunk = t;
              this._done = !0;
              this._requests.forEach(function (e) {
                e.resolve({ value: void 0, done: !0 });
              });
              this._requests = [];
              this._close();
            }
            _onProgress(e) {
              if (!this.isStreamingSupported && this.onProgress)
                this.onProgress({ loaded: e.loaded });
            }
            get isStreamingSupported() {
              return !1;
            }
            async read() {
              if (null !== this._queuedChunk) {
                const e = this._queuedChunk;
                this._queuedChunk = null;
                return { value: e, done: !1 };
              }
              if (this._done) return { value: void 0, done: !0 };
              const e = (0, n.createPromiseCapability)();
              this._requests.push(e);
              return e.promise;
            }
            cancel(e) {
              this._done = !0;
              this._requests.forEach(function (e) {
                e.resolve({ value: void 0, done: !0 });
              });
              this._requests = [];
              if (this._manager.isPendingRequest(this._requestId))
                this._manager.abortRequest(this._requestId);
              this._close();
            }
          }
        },
        (e, t, i) => {
          Object.defineProperty(t, "__esModule", { value: !0 });
          t.PDFFetchStream = void 0;
          var n = i(2),
            r = i(24);
          function a(e, t, i) {
            return {
              method: "GET",
              headers: e,
              signal: i?.signal,
              mode: "cors",
              credentials: t ? "include" : "same-origin",
              redirect: "follow",
            };
          }
          function s(e) {
            const t = new Headers();
            for (const i in e) {
              const n = e[i];
              if (void 0 !== n) t.append(i, n);
            }
            return t;
          }
          t.PDFFetchStream = class {
            constructor(e) {
              this.source = e;
              this.isHttp = /^https?:/i.test(e.url);
              this.httpHeaders = (this.isHttp && e.httpHeaders) || {};
              this._fullRequestReader = null;
              this._rangeRequestReaders = [];
            }
            get _progressiveDataLength() {
              return this._fullRequestReader?._loaded ?? 0;
            }
            getFullReader() {
              (0, n.assert)(
                !this._fullRequestReader,
                "PDFFetchStream.getFullReader can only be called once."
              );
              this._fullRequestReader = new o(this);
              return this._fullRequestReader;
            }
            getRangeReader(e, t) {
              if (t <= this._progressiveDataLength) return null;
              const i = new l(this, e, t);
              this._rangeRequestReaders.push(i);
              return i;
            }
            cancelAllRequests(e) {
              if (this._fullRequestReader) this._fullRequestReader.cancel(e);
              this._rangeRequestReaders.slice(0).forEach(function (t) {
                t.cancel(e);
              });
            }
          };
          class o {
            constructor(e) {
              this._stream = e;
              this._reader = null;
              this._loaded = 0;
              this._filename = null;
              const t = e.source;
              this._withCredentials = t.withCredentials || !1;
              this._contentLength = t.length;
              this._headersCapability = (0, n.createPromiseCapability)();
              this._disableRange = t.disableRange || !1;
              this._rangeChunkSize = t.rangeChunkSize;
              if (!this._rangeChunkSize && !this._disableRange)
                this._disableRange = !0;
              if ("undefined" != typeof AbortController)
                this._abortController = new AbortController();
              this._isStreamingSupported = !t.disableStream;
              this._isRangeSupported = !t.disableRange;
              this._headers = s(this._stream.httpHeaders);
              const i = t.url;
              fetch(
                i,
                a(this._headers, this._withCredentials, this._abortController)
              )
                .then((e) => {
                  if (!(0, r.validateResponseStatus)(e.status))
                    throw (0, r.createResponseStatusError)(e.status, i);
                  this._reader = e.body.getReader();
                  this._headersCapability.resolve();
                  const t = (t) => e.headers.get(t),
                    { allowRangeRequests: a, suggestedLength: s } = (0,
                    r.validateRangeRequestCapabilities)({
                      getResponseHeader: t,
                      isHttp: this._stream.isHttp,
                      rangeChunkSize: this._rangeChunkSize,
                      disableRange: this._disableRange,
                    });
                  this._isRangeSupported = a;
                  this._contentLength = s || this._contentLength;
                  this._filename = (0, r.extractFilenameFromHeader)(t);
                  if (!this._isStreamingSupported && this._isRangeSupported)
                    this.cancel(new n.AbortException("Streaming is disabled."));
                })
                .catch(this._headersCapability.reject);
              this.onProgress = null;
            }
            get headersReady() {
              return this._headersCapability.promise;
            }
            get filename() {
              return this._filename;
            }
            get contentLength() {
              return this._contentLength;
            }
            get isRangeSupported() {
              return this._isRangeSupported;
            }
            get isStreamingSupported() {
              return this._isStreamingSupported;
            }
            async read() {
              await this._headersCapability.promise;
              const { value: e, done: t } = await this._reader.read();
              if (t) return { value: e, done: t };
              this._loaded += e.byteLength;
              if (this.onProgress)
                this.onProgress({
                  loaded: this._loaded,
                  total: this._contentLength,
                });
              return { value: new Uint8Array(e).buffer, done: !1 };
            }
            cancel(e) {
              if (this._reader) this._reader.cancel(e);
              if (this._abortController) this._abortController.abort();
            }
          }
          class l {
            constructor(e, t, i) {
              this._stream = e;
              this._reader = null;
              this._loaded = 0;
              const o = e.source;
              this._withCredentials = o.withCredentials || !1;
              this._readCapability = (0, n.createPromiseCapability)();
              this._isStreamingSupported = !o.disableStream;
              if ("undefined" != typeof AbortController)
                this._abortController = new AbortController();
              this._headers = s(this._stream.httpHeaders);
              this._headers.append("Range", `bytes=${t}-${i - 1}`);
              const l = o.url;
              fetch(
                l,
                a(this._headers, this._withCredentials, this._abortController)
              )
                .then((e) => {
                  if (!(0, r.validateResponseStatus)(e.status))
                    throw (0, r.createResponseStatusError)(e.status, l);
                  this._readCapability.resolve();
                  this._reader = e.body.getReader();
                })
                .catch((e) => {
                  if ("AbortError" !== e?.name) throw e;
                });
              this.onProgress = null;
            }
            get isStreamingSupported() {
              return this._isStreamingSupported;
            }
            async read() {
              await this._readCapability.promise;
              const { value: e, done: t } = await this._reader.read();
              if (t) return { value: e, done: t };
              this._loaded += e.byteLength;
              if (this.onProgress) this.onProgress({ loaded: this._loaded });
              return { value: new Uint8Array(e).buffer, done: !1 };
            }
            cancel(e) {
              if (this._reader) this._reader.cancel(e);
              if (this._abortController) this._abortController.abort();
            }
          }
        },
      ],
      __webpack_module_cache__ = {};
    function __w_pdfjs_require__(e) {
      if (__webpack_module_cache__[e])
        return __webpack_module_cache__[e].exports;
      var t = (__webpack_module_cache__[e] = { exports: {} });
      __webpack_modules__[e](t, t.exports, __w_pdfjs_require__);
      return t.exports;
    }
    return __w_pdfjs_require__(0);
  })();
});
!(function (e, t) {
  if ("object" == typeof exports && "object" == typeof module)
    module.exports = t();
  else if ("function" == typeof define && define.amd)
    define("pdfjs-dist/build/pdf.worker", [], t);
  else if ("object" == typeof exports)
    exports["pdfjs-dist/build/pdf.worker"] = t();
  else e["pdfjs-dist/build/pdf.worker"] = e.pdfjsWorker = t();
})(this, function () {
  return (() => {
    "use strict";
    var e = [
        (e, t, i) => {
          Object.defineProperty(t, "__esModule", { value: !0 });
          Object.defineProperty(t, "WorkerMessageHandler", {
            enumerable: !0,
            get: function () {
              return n.WorkerMessageHandler;
            },
          });
          var n = i(1);
        },
        (e, t, i) => {
          Object.defineProperty(t, "__esModule", { value: !0 });
          t.WorkerTask = t.WorkerMessageHandler = void 0;
          var n,
            r = i(2),
            a = i(5),
            s = i(6),
            o = i(46),
            l = i(4),
            c = i(48),
            h = i(49),
            u = i(8);
          class d {
            constructor(e) {
              this.name = e;
              this.terminated = !1;
              this._capability = (0, r.createPromiseCapability)();
            }
            get finished() {
              return this._capability.promise;
            }
            finish() {
              this._capability.resolve();
            }
            terminate() {
              this.terminated = !0;
            }
            ensureNotTerminated() {
              if (this.terminated)
                throw new Error("Worker task was terminated");
            }
          }
          t.WorkerTask = d;
          class f {
            static setup(e, t) {
              var i = !1;
              e.on("test", function (t) {
                if (i) return;
                i = !0;
                if (!(t instanceof Uint8Array)) {
                  e.send("test", null);
                  return;
                }
                const n = 255 === t[0];
                e.postMessageTransfers = n;
                e.send("test", { supportTransfers: n });
              });
              e.on("configure", function (e) {
                (0, r.setVerbosityLevel)(e.verbosity);
              });
              e.on("GetDocRequest", function (e) {
                return f.createDocumentHandler(e, t);
              });
            }
            static createDocumentHandler(e, t) {
              var i,
                n = !1,
                l = null,
                f = [];
              const p = (0, r.getVerbosityLevel)(),
                g = e.apiVersion;
              if ("2.7.570" !== g)
                throw new Error(
                  `The API version "${g}" does not match the Worker version "2.7.570".`
                );
              const m = [];
              for (const e in []) m.push(e);
              if (m.length)
                throw new Error(
                  "The `Array.prototype` contains unexpected enumerable properties: " +
                    m.join(", ") +
                    "; thus breaking e.g. `for...in` iteration of `Array`s."
                );
              if ("undefined" == typeof ReadableStream)
                throw new Error(
                  "The browser/environment lacks native support for critical functionality used by the PDF.js library (e.g. `ReadableStream`); please use an `es5`-build instead."
                );
              var v = e.docId,
                b = e.docBaseUrl,
                y = e.docId + "_worker",
                w = new c.MessageHandler(y, v, t);
              w.postMessageTransfers = e.postMessageTransfers;
              function x() {
                if (n) throw new Error("Worker was terminated");
              }
              function k(e) {
                f.push(e);
              }
              function C(e) {
                e.finish();
                var t = f.indexOf(e);
                f.splice(t, 1);
              }
              async function S(e) {
                await i.ensureDoc("checkHeader");
                await i.ensureDoc("parseStartXRef");
                await i.ensureDoc("parse", [e]);
                if (!e) await i.ensureDoc("checkFirstPage");
                const [t, n] = await Promise.all([
                  i.ensureDoc("numPages"),
                  i.ensureDoc("fingerprint"),
                ]);
                return { numPages: t, fingerprint: n };
              }
              w.on("GetPage", function (e) {
                return i.getPage(e.pageIndex).then(function (e) {
                  return Promise.all([
                    i.ensure(e, "rotate"),
                    i.ensure(e, "ref"),
                    i.ensure(e, "userUnit"),
                    i.ensure(e, "view"),
                  ]).then(function ([e, t, i, n]) {
                    return { rotate: e, ref: t, userUnit: i, view: n };
                  });
                });
              });
              w.on("GetPageIndex", function ({ ref: e }) {
                const t = a.Ref.get(e.num, e.gen);
                return i.ensureCatalog("getPageIndex", [t]);
              });
              w.on("GetDestinations", function (e) {
                return i.ensureCatalog("destinations");
              });
              w.on("GetDestination", function (e) {
                return i.ensureCatalog("getDestination", [e.id]);
              });
              w.on("GetPageLabels", function (e) {
                return i.ensureCatalog("pageLabels");
              });
              w.on("GetPageLayout", function (e) {
                return i.ensureCatalog("pageLayout");
              });
              w.on("GetPageMode", function (e) {
                return i.ensureCatalog("pageMode");
              });
              w.on("GetViewerPreferences", function (e) {
                return i.ensureCatalog("viewerPreferences");
              });
              w.on("GetOpenAction", function (e) {
                return i.ensureCatalog("openAction");
              });
              w.on("GetAttachments", function (e) {
                return i.ensureCatalog("attachments");
              });
              w.on("GetJavaScript", function (e) {
                return i.ensureCatalog("javaScript");
              });
              w.on("GetDocJSActions", function (e) {
                return i.ensureCatalog("jsActions");
              });
              w.on("GetPageJSActions", function ({ pageIndex: e }) {
                return i.getPage(e).then(function (e) {
                  return e.jsActions;
                });
              });
              w.on("GetOutline", function (e) {
                return i.ensureCatalog("documentOutline");
              });
              w.on("GetOptionalContentConfig", function (e) {
                return i.ensureCatalog("optionalContentConfig");
              });
              w.on("GetPermissions", function (e) {
                return i.ensureCatalog("permissions");
              });
              w.on("GetMetadata", function (e) {
                return Promise.all([
                  i.ensureDoc("documentInfo"),
                  i.ensureCatalog("metadata"),
                ]);
              });
              w.on("GetMarkInfo", function (e) {
                return i.ensureCatalog("markInfo");
              });
              w.on("GetData", function (e) {
                i.requestLoadedStream();
                return i.onLoadedStream().then(function (e) {
                  return e.bytes;
                });
              });
              w.on("GetStats", function (e) {
                return i.ensureXRef("stats");
              });
              w.on("GetAnnotations", function ({ pageIndex: e, intent: t }) {
                return i.getPage(e).then(function (e) {
                  return e.getAnnotationsData(t);
                });
              });
              w.on("GetFieldObjects", function (e) {
                return i.ensureDoc("fieldObjects");
              });
              w.on("HasJSActions", function (e) {
                return i.ensureDoc("hasJSActions");
              });
              w.on("GetCalculationOrderIds", function (e) {
                return i.ensureDoc("calculationOrderIds");
              });
              w.on(
                "SaveDocument",
                function ({ numPages: e, annotationStorage: t, filename: n }) {
                  i.requestLoadedStream();
                  const s = [
                    i.onLoadedStream(),
                    i.ensureCatalog("acroForm"),
                    i.ensureDoc("xref"),
                    i.ensureDoc("startXRef"),
                  ];
                  for (let n = 0; n < e; n++)
                    s.push(
                      i.getPage(n).then(function (e) {
                        const i = new d(`Save: page ${n}`);
                        k(i);
                        return e.save(w, i, t).finally(function () {
                          C(i);
                        });
                      })
                    );
                  return Promise.all(s).then(function ([e, t, i, s, ...l]) {
                    let c = [];
                    for (const e of l)
                      c = e
                        .filter((e) => null !== e)
                        .reduce((e, t) => e.concat(t), c);
                    if (0 === c.length) return e.bytes;
                    const h = (t instanceof a.Dict && t.get("XFA")) || [];
                    let u = null;
                    if (Array.isArray(h)) {
                      for (let e = 0, t = h.length; e < t; e += 2)
                        if ("datasets" === h[e]) u = h[e + 1];
                    } else (0, r.warn)("Unsupported XFA type.");
                    let d = Object.create(null);
                    if (i.trailer) {
                      const e = Object.create(null),
                        t = i.trailer.get("Info") || null;
                      if (t instanceof a.Dict)
                        t.forEach((t, i) => {
                          if ((0, r.isString)(t) && (0, r.isString)(i))
                            e[t] = (0, r.stringToPDFString)(i);
                        });
                      d = {
                        rootRef: i.trailer.getRaw("Root") || null,
                        encrypt: i.trailer.getRaw("Encrypt") || null,
                        newRef: i.getNewRef(),
                        infoRef: i.trailer.getRaw("Info") || null,
                        info: e,
                        fileIds: i.trailer.getRaw("ID") || null,
                        startXRef: s,
                        filename: n,
                      };
                    }
                    i.resetNewRef();
                    return (0,
                    o.incrementalUpdate)({ originalData: e.bytes, xrefInfo: d, newRefs: c, xref: i, datasetsRef: u });
                  });
                }
              );
              w.on("GetOperatorList", function (e, t) {
                var n = e.pageIndex;
                i.getPage(n).then(function (i) {
                  var a = new d(`GetOperatorList: page ${n}`);
                  k(a);
                  const s = p >= r.VerbosityLevel.INFOS ? Date.now() : 0;
                  i.getOperatorList({
                    handler: w,
                    sink: t,
                    task: a,
                    intent: e.intent,
                    renderInteractiveForms: e.renderInteractiveForms,
                    annotationStorage: e.annotationStorage,
                  }).then(
                    function (e) {
                      C(a);
                      if (s)
                        (0, r.info)(
                          `page=${n + 1} - getOperatorList: time=${
                            Date.now() - s
                          }ms, len=${e.length}`
                        );
                      t.close();
                    },
                    function (e) {
                      C(a);
                      if (!a.terminated) {
                        w.send("UnsupportedFeature", {
                          featureId: r.UNSUPPORTED_FEATURES.errorOperatorList,
                        });
                        t.error(e);
                      }
                    }
                  );
                });
              });
              w.on("GetTextContent", function (e, t) {
                var n = e.pageIndex;
                t.onPull = function (e) {};
                t.onCancel = function (e) {};
                i.getPage(n).then(function (i) {
                  var a = new d("GetTextContent: page " + n);
                  k(a);
                  const s = p >= r.VerbosityLevel.INFOS ? Date.now() : 0;
                  i.extractTextContent({
                    handler: w,
                    task: a,
                    sink: t,
                    normalizeWhitespace: e.normalizeWhitespace,
                    combineTextItems: e.combineTextItems,
                  }).then(
                    function () {
                      C(a);
                      if (s)
                        (0, r.info)(
                          `page=${n + 1} - getTextContent: time=` +
                            (Date.now() - s) +
                            "ms"
                        );
                      t.close();
                    },
                    function (e) {
                      C(a);
                      if (!a.terminated) t.error(e);
                    }
                  );
                });
              });
              w.on("FontFallback", function (e) {
                return i.fontFallback(e.id, w);
              });
              w.on("Cleanup", function (e) {
                return i.cleanup(!0);
              });
              w.on("Terminate", function (e) {
                n = !0;
                const t = [];
                if (i) {
                  i.terminate(new r.AbortException("Worker was terminated."));
                  const e = i.cleanup();
                  t.push(e);
                  i = null;
                } else (0, a.clearPrimitiveCaches)();
                if (l) l(new r.AbortException("Worker was terminated."));
                f.forEach(function (e) {
                  t.push(e.finished);
                  e.terminate();
                });
                return Promise.all(t).then(function () {
                  w.destroy();
                  w = null;
                });
              });
              w.on("Ready", function (t) {
                !(function (e) {
                  function t(e) {
                    x();
                    w.send("GetDoc", { pdfInfo: e });
                  }
                  function a(e) {
                    x();
                    if (e instanceof r.PasswordException) {
                      var t = new d(`PasswordException: response ${e.code}`);
                      k(t);
                      w.sendWithPromise("PasswordRequest", e)
                        .then(function ({ password: e }) {
                          C(t);
                          i.updatePassword(e);
                          o();
                        })
                        .catch(function () {
                          C(t);
                          w.send("DocException", e);
                        });
                    } else if (
                      e instanceof r.InvalidPDFException ||
                      e instanceof r.MissingPDFException ||
                      e instanceof r.UnexpectedResponseException ||
                      e instanceof r.UnknownErrorException
                    )
                      w.send("DocException", e);
                    else
                      w.send(
                        "DocException",
                        new r.UnknownErrorException(e.message, e.toString())
                      );
                  }
                  function o() {
                    x();
                    S(!1).then(t, function (e) {
                      x();
                      if (e instanceof u.XRefParseException) {
                        i.requestLoadedStream();
                        i.onLoadedStream().then(function () {
                          x();
                          S(!0).then(t, a);
                        });
                      } else a(e);
                    });
                  }
                  x();
                  (function (e, t) {
                    var i = (0, r.createPromiseCapability)();
                    let n;
                    var a = e.source;
                    if (a.data) {
                      try {
                        n = new s.LocalPdfManager(v, a.data, a.password, t, b);
                        i.resolve(n);
                      } catch (e) {
                        i.reject(e);
                      }
                      return i.promise;
                    }
                    var o,
                      c = [];
                    try {
                      o = new h.PDFWorkerStream(w);
                    } catch (e) {
                      i.reject(e);
                      return i.promise;
                    }
                    var u = o.getFullReader();
                    u.headersReady
                      .then(function () {
                        if (u.isRangeSupported) {
                          var e = a.disableAutoFetch || u.isStreamingSupported;
                          n = new s.NetworkPdfManager(
                            v,
                            o,
                            {
                              msgHandler: w,
                              password: a.password,
                              length: u.contentLength,
                              disableAutoFetch: e,
                              rangeChunkSize: a.rangeChunkSize,
                            },
                            t,
                            b
                          );
                          for (let e = 0; e < c.length; e++)
                            n.sendProgressiveData(c[e]);
                          c = [];
                          i.resolve(n);
                          l = null;
                        }
                      })
                      .catch(function (e) {
                        i.reject(e);
                        l = null;
                      });
                    var d = 0;
                    new Promise(function (e, o) {
                      var h = function ({ value: e, done: f }) {
                        try {
                          x();
                          if (f) {
                            if (!n)
                              !(function () {
                                var e = (0, r.arraysToBytes)(c);
                                if (a.length && e.length !== a.length)
                                  (0, r.warn)(
                                    "reported HTTP length is different from actual"
                                  );
                                try {
                                  n = new s.LocalPdfManager(
                                    v,
                                    e,
                                    a.password,
                                    t,
                                    b
                                  );
                                  i.resolve(n);
                                } catch (e) {
                                  i.reject(e);
                                }
                                c = [];
                              })();
                            l = null;
                            return;
                          }
                          d += (0, r.arrayByteLength)(e);
                          if (!u.isStreamingSupported)
                            w.send("DocProgress", {
                              loaded: d,
                              total: Math.max(d, u.contentLength || 0),
                            });
                          if (n) n.sendProgressiveData(e);
                          else c.push(e);
                          u.read().then(h, o);
                        } catch (e) {
                          o(e);
                        }
                      };
                      u.read().then(h, o);
                    }).catch(function (e) {
                      i.reject(e);
                      l = null;
                    });
                    l = function (e) {
                      o.cancelAllRequests(e);
                    };
                    return i.promise;
                  })(e, {
                    maxImageSize: e.maxImageSize,
                    disableFontFace: e.disableFontFace,
                    ignoreErrors: e.ignoreErrors,
                    isEvalSupported: e.isEvalSupported,
                    fontExtraProperties: e.fontExtraProperties,
                  })
                    .then(function (e) {
                      if (n) {
                        e.terminate(
                          new r.AbortException("Worker was terminated.")
                        );
                        throw new Error("Worker was terminated");
                      }
                      (i = e).onLoadedStream().then(function (e) {
                        w.send("DataLoaded", { length: e.bytes.byteLength });
                      });
                    })
                    .then(o, a);
                })(e);
                e = null;
              });
              return y;
            }
            static initializeFromPort(e) {
              var t = new c.MessageHandler("worker", "main", e);
              f.setup(t, e);
              t.send("ready", null);
            }
          }
          t.WorkerMessageHandler = f;
          if (
            "undefined" == typeof window &&
            !l.isNodeJS &&
            "undefined" != typeof self &&
            "function" == typeof (n = self).postMessage &&
            "onmessage" in n
          )
            f.initializeFromPort(self);
        },
        (e, t, i) => {
          Object.defineProperty(t, "__esModule", { value: !0 });
          t.arrayByteLength = d;
          t.arraysToBytes = function (e) {
            const t = e.length;
            if (1 === t && e[0] instanceof Uint8Array) return e[0];
            let i = 0;
            for (let n = 0; n < t; n++) i += d(e[n]);
            let n = 0;
            const r = new Uint8Array(i);
            for (let i = 0; i < t; i++) {
              let t = e[i];
              if (!(t instanceof Uint8Array))
                if ("string" == typeof t) t = u(t);
                else t = new Uint8Array(t);
              const a = t.byteLength;
              r.set(t, n);
              n += a;
            }
            return r;
          };
          t.assert = o;
          t.bytesToString = function (e) {
            o(
              null !== e && "object" == typeof e && void 0 !== e.length,
              "Invalid argument for bytesToString"
            );
            const t = e.length,
              i = 8192;
            if (t < i) return String.fromCharCode.apply(null, e);
            const n = [];
            for (let r = 0; r < t; r += i) {
              const a = Math.min(r + i, t),
                s = e.subarray(r, a);
              n.push(String.fromCharCode.apply(null, s));
            }
            return n.join("");
          };
          t.createPromiseCapability = function () {
            const e = Object.create(null);
            let t = !1;
            Object.defineProperty(e, "settled", { get: () => t });
            e.promise = new Promise(function (i, n) {
              e.resolve = function (e) {
                t = !0;
                i(e);
              };
              e.reject = function (e) {
                t = !0;
                n(e);
              };
            });
            return e;
          };
          t.createValidAbsoluteUrl = function (e, t) {
            if (!e) return null;
            try {
              const i = t ? new URL(e, t) : new URL(e);
              if (
                (function (e) {
                  if (!e) return !1;
                  switch (e.protocol) {
                    case "http:":
                    case "https:":
                    case "ftp:":
                    case "mailto:":
                    case "tel:":
                      return !0;
                    default:
                      return !1;
                  }
                })(i)
              )
                return i;
            } catch (e) {}
            return null;
          };
          t.encodeToXmlString = function (e) {
            const t = [];
            let i = 0;
            for (let n = 0, r = e.length; n < r; n++) {
              const r = e.codePointAt(n);
              if (32 <= r && r <= 126) {
                const a = y[r];
                if (a) {
                  if (i < n) t.push(e.substring(i, n));
                  t.push(a);
                  i = n + 1;
                }
              } else {
                if (i < n) t.push(e.substring(i, n));
                t.push(`&#x${r.toString(16).toUpperCase()};`);
                if (r > 55295 && (r < 57344 || r > 65533)) n++;
                i = n + 1;
              }
            }
            if (0 === t.length) return e;
            if (i < e.length) t.push(e.substring(i, e.length));
            return t.join("");
          };
          t.escapeString = function (e) {
            return e.replace(/([()\\\n\r])/g, (e) => {
              if ("\n" === e) return "\\n";
              else if ("\r" === e) return "\\r";
              return `\\${e}`;
            });
          };
          t.getModificationDate = function (e = new Date()) {
            return [
              e.getUTCFullYear().toString(),
              (e.getUTCMonth() + 1).toString().padStart(2, "0"),
              e.getUTCDate().toString().padStart(2, "0"),
              e.getUTCHours().toString().padStart(2, "0"),
              e.getUTCMinutes().toString().padStart(2, "0"),
              e.getUTCSeconds().toString().padStart(2, "0"),
            ].join("");
          };
          t.getVerbosityLevel = function () {
            return r;
          };
          t.info = function (e) {
            if (r >= n.INFOS);
          };
          t.isArrayBuffer = function (e) {
            return (
              "object" == typeof e && null !== e && void 0 !== e.byteLength
            );
          };
          t.isArrayEqual = function (e, t) {
            if (e.length !== t.length) return !1;
            else
              return e.every(function (e, i) {
                return e === t[i];
              });
          };
          t.isAscii = function (e) {
            return /^[\x00-\x7F]*$/.test(e);
          };
          t.isBool = function (e) {
            return "boolean" == typeof e;
          };
          t.isNum = function (e) {
            return "number" == typeof e;
          };
          t.isSameOrigin = function (e, t) {
            let i;
            try {
              i = new URL(e);
              if (!i.origin || "null" === i.origin) return !1;
            } catch (e) {
              return !1;
            }
            const n = new URL(t, i);
            return i.origin === n.origin;
          };
          t.isString = function (e) {
            return "string" == typeof e;
          };
          t.objectFromEntries = function (e) {
            return Object.assign(Object.create(null), Object.fromEntries(e));
          };
          t.objectSize = function (e) {
            return Object.keys(e).length;
          };
          t.removeNullCharacters = function (e) {
            if ("string" != typeof e) {
              a();
              return e;
            }
            return e.replace(h, "");
          };
          t.setVerbosityLevel = function (e) {
            if (Number.isInteger(e)) r = e;
          };
          t.shadow = l;
          t.string32 = function (e) {
            return String.fromCharCode(
              (e >> 24) & 255,
              (e >> 16) & 255,
              (e >> 8) & 255,
              255 & e
            );
          };
          t.stringToBytes = u;
          t.stringToPDFString = function (e) {
            const t = e.length,
              i = [];
            if ("þ" === e[0] && "ÿ" === e[1])
              for (let n = 2; n < t; n += 2)
                i.push(
                  String.fromCharCode(
                    (e.charCodeAt(n) << 8) | e.charCodeAt(n + 1)
                  )
                );
            else if ("ÿ" === e[0] && "þ" === e[1])
              for (let n = 2; n < t; n += 2)
                i.push(
                  String.fromCharCode(
                    (e.charCodeAt(n + 1) << 8) | e.charCodeAt(n)
                  )
                );
            else
              for (let n = 0; n < t; ++n) {
                const t = v[e.charCodeAt(n)];
                i.push(t ? String.fromCharCode(t) : e.charAt(n));
              }
            return i.join("");
          };
          t.stringToUTF16BEString = function (e) {
            const t = ["þÿ"];
            for (let i = 0, n = e.length; i < n; i++) {
              const n = e.charCodeAt(i);
              t.push(String.fromCharCode((n >> 8) & 255));
              t.push(String.fromCharCode(255 & n));
            }
            return t.join("");
          };
          t.stringToUTF8String = function (e) {
            return decodeURIComponent(escape(e));
          };
          t.unreachable = s;
          t.utf8StringToString = function (e) {
            return unescape(encodeURIComponent(e));
          };
          t.warn = a;
          t.VerbosityLevel =
            t.Util =
            t.UNSUPPORTED_FEATURES =
            t.UnknownErrorException =
            t.UnexpectedResponseException =
            t.TextRenderingMode =
            t.StreamType =
            t.PermissionFlag =
            t.PasswordResponses =
            t.PasswordException =
            t.PageActionEventType =
            t.OPS =
            t.MissingPDFException =
            t.IsLittleEndianCached =
            t.IsEvalSupportedCached =
            t.InvalidPDFException =
            t.ImageKind =
            t.IDENTITY_MATRIX =
            t.FormatError =
            t.FontType =
            t.FONT_IDENTITY_MATRIX =
            t.DocumentActionEventType =
            t.createObjectURL =
            t.CMapCompressionType =
            t.BaseException =
            t.AnnotationType =
            t.AnnotationStateModelType =
            t.AnnotationReviewState =
            t.AnnotationReplyType =
            t.AnnotationMarkedState =
            t.AnnotationFlag =
            t.AnnotationFieldFlag =
            t.AnnotationBorderStyleType =
            t.AnnotationActionEventType =
            t.AbortException =
              void 0;
          i(3);
          t.IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];
          t.FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];
          t.PermissionFlag = {
            PRINT: 4,
            MODIFY_CONTENTS: 8,
            COPY: 16,
            MODIFY_ANNOTATIONS: 32,
            FILL_INTERACTIVE_FORMS: 256,
            COPY_FOR_ACCESSIBILITY: 512,
            ASSEMBLE: 1024,
            PRINT_HIGH_QUALITY: 2048,
          };
          t.TextRenderingMode = {
            FILL: 0,
            STROKE: 1,
            FILL_STROKE: 2,
            INVISIBLE: 3,
            FILL_ADD_TO_PATH: 4,
            STROKE_ADD_TO_PATH: 5,
            FILL_STROKE_ADD_TO_PATH: 6,
            ADD_TO_PATH: 7,
            FILL_STROKE_MASK: 3,
            ADD_TO_PATH_FLAG: 4,
          };
          t.ImageKind = { GRAYSCALE_1BPP: 1, RGB_24BPP: 2, RGBA_32BPP: 3 };
          t.AnnotationType = {
            TEXT: 1,
            LINK: 2,
            FREETEXT: 3,
            LINE: 4,
            SQUARE: 5,
            CIRCLE: 6,
            POLYGON: 7,
            POLYLINE: 8,
            HIGHLIGHT: 9,
            UNDERLINE: 10,
            SQUIGGLY: 11,
            STRIKEOUT: 12,
            STAMP: 13,
            CARET: 14,
            INK: 15,
            POPUP: 16,
            FILEATTACHMENT: 17,
            SOUND: 18,
            MOVIE: 19,
            WIDGET: 20,
            SCREEN: 21,
            PRINTERMARK: 22,
            TRAPNET: 23,
            WATERMARK: 24,
            THREED: 25,
            REDACT: 26,
          };
          t.AnnotationStateModelType = { MARKED: "Marked", REVIEW: "Review" };
          t.AnnotationMarkedState = { MARKED: "Marked", UNMARKED: "Unmarked" };
          t.AnnotationReviewState = {
            ACCEPTED: "Accepted",
            REJECTED: "Rejected",
            CANCELLED: "Cancelled",
            COMPLETED: "Completed",
            NONE: "None",
          };
          t.AnnotationReplyType = { GROUP: "Group", REPLY: "R" };
          t.AnnotationFlag = {
            INVISIBLE: 1,
            HIDDEN: 2,
            PRINT: 4,
            NOZOOM: 8,
            NOROTATE: 16,
            NOVIEW: 32,
            READONLY: 64,
            LOCKED: 128,
            TOGGLENOVIEW: 256,
            LOCKEDCONTENTS: 512,
          };
          t.AnnotationFieldFlag = {
            READONLY: 1,
            REQUIRED: 2,
            NOEXPORT: 4,
            MULTILINE: 4096,
            PASSWORD: 8192,
            NOTOGGLETOOFF: 16384,
            RADIO: 32768,
            PUSHBUTTON: 65536,
            COMBO: 131072,
            EDIT: 262144,
            SORT: 524288,
            FILESELECT: 1048576,
            MULTISELECT: 2097152,
            DONOTSPELLCHECK: 4194304,
            DONOTSCROLL: 8388608,
            COMB: 16777216,
            RICHTEXT: 33554432,
            RADIOSINUNISON: 33554432,
            COMMITONSELCHANGE: 67108864,
          };
          t.AnnotationBorderStyleType = {
            SOLID: 1,
            DASHED: 2,
            BEVELED: 3,
            INSET: 4,
            UNDERLINE: 5,
          };
          t.AnnotationActionEventType = {
            E: "Mouse Enter",
            X: "Mouse Exit",
            D: "Mouse Down",
            U: "Mouse Up",
            Fo: "Focus",
            Bl: "Blur",
            PO: "PageOpen",
            PC: "PageClose",
            PV: "PageVisible",
            PI: "PageInvisible",
            K: "Keystroke",
            F: "Format",
            V: "Validate",
            C: "Calculate",
          };
          t.DocumentActionEventType = {
            WC: "WillClose",
            WS: "WillSave",
            DS: "DidSave",
            WP: "WillPrint",
            DP: "DidPrint",
          };
          t.PageActionEventType = { O: "PageOpen", C: "PageClose" };
          t.StreamType = {
            UNKNOWN: "UNKNOWN",
            FLATE: "FLATE",
            LZW: "LZW",
            DCT: "DCT",
            JPX: "JPX",
            JBIG: "JBIG",
            A85: "A85",
            AHX: "AHX",
            CCF: "CCF",
            RLX: "RLX",
          };
          t.FontType = {
            UNKNOWN: "UNKNOWN",
            TYPE1: "TYPE1",
            TYPE1C: "TYPE1C",
            CIDFONTTYPE0: "CIDFONTTYPE0",
            CIDFONTTYPE0C: "CIDFONTTYPE0C",
            TRUETYPE: "TRUETYPE",
            CIDFONTTYPE2: "CIDFONTTYPE2",
            TYPE3: "TYPE3",
            OPENTYPE: "OPENTYPE",
            TYPE0: "TYPE0",
            MMTYPE1: "MMTYPE1",
          };
          const n = { ERRORS: 0, WARNINGS: 1, INFOS: 5 };
          t.VerbosityLevel = n;
          t.CMapCompressionType = { NONE: 0, BINARY: 1, STREAM: 2 };
          t.OPS = {
            dependency: 1,
            setLineWidth: 2,
            setLineCap: 3,
            setLineJoin: 4,
            setMiterLimit: 5,
            setDash: 6,
            setRenderingIntent: 7,
            setFlatness: 8,
            setGState: 9,
            save: 10,
            restore: 11,
            transform: 12,
            moveTo: 13,
            lineTo: 14,
            curveTo: 15,
            curveTo2: 16,
            curveTo3: 17,
            closePath: 18,
            rectangle: 19,
            stroke: 20,
            closeStroke: 21,
            fill: 22,
            eoFill: 23,
            fillStroke: 24,
            eoFillStroke: 25,
            closeFillStroke: 26,
            closeEOFillStroke: 27,
            endPath: 28,
            clip: 29,
            eoClip: 30,
            beginText: 31,
            endText: 32,
            setCharSpacing: 33,
            setWordSpacing: 34,
            setHScale: 35,
            setLeading: 36,
            setFont: 37,
            setTextRenderingMode: 38,
            setTextRise: 39,
            moveText: 40,
            setLeadingMoveText: 41,
            setTextMatrix: 42,
            nextLine: 43,
            showText: 44,
            showSpacedText: 45,
            nextLineShowText: 46,
            nextLineSetSpacingShowText: 47,
            setCharWidth: 48,
            setCharWidthAndBounds: 49,
            setStrokeColorSpace: 50,
            setFillColorSpace: 51,
            setStrokeColor: 52,
            setStrokeColorN: 53,
            setFillColor: 54,
            setFillColorN: 55,
            setStrokeGray: 56,
            setFillGray: 57,
            setStrokeRGBColor: 58,
            setFillRGBColor: 59,
            setStrokeCMYKColor: 60,
            setFillCMYKColor: 61,
            shadingFill: 62,
            beginInlineImage: 63,
            beginImageData: 64,
            endInlineImage: 65,
            paintXObject: 66,
            markPoint: 67,
            markPointProps: 68,
            beginMarkedContent: 69,
            beginMarkedContentProps: 70,
            endMarkedContent: 71,
            beginCompat: 72,
            endCompat: 73,
            paintFormXObjectBegin: 74,
            paintFormXObjectEnd: 75,
            beginGroup: 76,
            endGroup: 77,
            beginAnnotations: 78,
            endAnnotations: 79,
            beginAnnotation: 80,
            endAnnotation: 81,
            paintJpegXObject: 82,
            paintImageMaskXObject: 83,
            paintImageMaskXObjectGroup: 84,
            paintImageXObject: 85,
            paintInlineImageXObject: 86,
            paintInlineImageXObjectGroup: 87,
            paintImageXObjectRepeat: 88,
            paintImageMaskXObjectRepeat: 89,
            paintSolidColorImageMask: 90,
            constructPath: 91,
          };
          t.UNSUPPORTED_FEATURES = {
            unknown: "unknown",
            forms: "forms",
            javaScript: "javaScript",
            smask: "smask",
            shadingPattern: "shadingPattern",
            font: "font",
            errorTilingPattern: "errorTilingPattern",
            errorExtGState: "errorExtGState",
            errorXObject: "errorXObject",
            errorFontLoadType3: "errorFontLoadType3",
            errorFontState: "errorFontState",
            errorFontMissing: "errorFontMissing",
            errorFontTranslate: "errorFontTranslate",
            errorColorSpace: "errorColorSpace",
            errorOperatorList: "errorOperatorList",
            errorFontToUnicode: "errorFontToUnicode",
            errorFontLoadNative: "errorFontLoadNative",
            errorFontGetPath: "errorFontGetPath",
            errorMarkedContent: "errorMarkedContent",
          };
          t.PasswordResponses = { NEED_PASSWORD: 1, INCORRECT_PASSWORD: 2 };
          let r = n.WARNINGS;
          function a(e) {
            if (r >= n.WARNINGS);
          }
          function s(e) {
            throw new Error(e);
          }
          function o(e, t) {
            if (!e) s(t);
          }
          function l(e, t, i) {
            Object.defineProperty(e, t, {
              value: i,
              enumerable: !0,
              configurable: !0,
              writable: !1,
            });
            return i;
          }
          const c = (function () {
            function e(t) {
              if (this.constructor === e) s("Cannot initialize BaseException.");
              this.message = t;
              this.name = this.constructor.name;
            }
            e.prototype = new Error();
            e.constructor = e;
            return e;
          })();
          t.BaseException = c;
          t.PasswordException = class extends c {
            constructor(e, t) {
              super(e);
              this.code = t;
            }
          };
          t.UnknownErrorException = class extends c {
            constructor(e, t) {
              super(e);
              this.details = t;
            }
          };
          t.InvalidPDFException = class extends c {};
          t.MissingPDFException = class extends c {};
          t.UnexpectedResponseException = class extends c {
            constructor(e, t) {
              super(e);
              this.status = t;
            }
          };
          t.FormatError = class extends c {};
          t.AbortException = class extends c {};
          const h = /\x00/g;
          function u(e) {
            o("string" == typeof e, "Invalid argument for stringToBytes");
            const t = e.length,
              i = new Uint8Array(t);
            for (let n = 0; n < t; ++n) i[n] = 255 & e.charCodeAt(n);
            return i;
          }
          function d(e) {
            if (void 0 !== e.length) return e.length;
            o(void 0 !== e.byteLength, "arrayByteLength - invalid argument.");
            return e.byteLength;
          }
          const f = {
            get value() {
              return l(
                this,
                "value",
                (function () {
                  const e = new Uint8Array(4);
                  e[0] = 1;
                  return 1 === new Uint32Array(e.buffer, 0, 1)[0];
                })()
              );
            },
          };
          t.IsLittleEndianCached = f;
          const p = {
            get value() {
              return l(
                this,
                "value",
                (function () {
                  try {
                    new Function("");
                    return !0;
                  } catch (e) {
                    return !1;
                  }
                })()
              );
            },
          };
          t.IsEvalSupportedCached = p;
          const g = [...Array(256).keys()].map((e) =>
            e.toString(16).padStart(2, "0")
          );
          class m {
            static makeHexColor(e, t, i) {
              return `#${g[e]}${g[t]}${g[i]}`;
            }
            static transform(e, t) {
              return [
                e[0] * t[0] + e[2] * t[1],
                e[1] * t[0] + e[3] * t[1],
                e[0] * t[2] + e[2] * t[3],
                e[1] * t[2] + e[3] * t[3],
                e[0] * t[4] + e[2] * t[5] + e[4],
                e[1] * t[4] + e[3] * t[5] + e[5],
              ];
            }
            static applyTransform(e, t) {
              return [
                e[0] * t[0] + e[1] * t[2] + t[4],
                e[0] * t[1] + e[1] * t[3] + t[5],
              ];
            }
            static applyInverseTransform(e, t) {
              const i = t[0] * t[3] - t[1] * t[2];
              return [
                (e[0] * t[3] - e[1] * t[2] + t[2] * t[5] - t[4] * t[3]) / i,
                (-e[0] * t[1] + e[1] * t[0] + t[4] * t[1] - t[5] * t[0]) / i,
              ];
            }
            static getAxialAlignedBoundingBox(e, t) {
              const i = m.applyTransform(e, t),
                n = m.applyTransform(e.slice(2, 4), t),
                r = m.applyTransform([e[0], e[3]], t),
                a = m.applyTransform([e[2], e[1]], t);
              return [
                Math.min(i[0], n[0], r[0], a[0]),
                Math.min(i[1], n[1], r[1], a[1]),
                Math.max(i[0], n[0], r[0], a[0]),
                Math.max(i[1], n[1], r[1], a[1]),
              ];
            }
            static inverseTransform(e) {
              const t = e[0] * e[3] - e[1] * e[2];
              return [
                e[3] / t,
                -e[1] / t,
                -e[2] / t,
                e[0] / t,
                (e[2] * e[5] - e[4] * e[3]) / t,
                (e[4] * e[1] - e[5] * e[0]) / t,
              ];
            }
            static apply3dTransform(e, t) {
              return [
                e[0] * t[0] + e[1] * t[1] + e[2] * t[2],
                e[3] * t[0] + e[4] * t[1] + e[5] * t[2],
                e[6] * t[0] + e[7] * t[1] + e[8] * t[2],
              ];
            }
            static singularValueDecompose2dScale(e) {
              const t = [e[0], e[2], e[1], e[3]],
                i = e[0] * t[0] + e[1] * t[2],
                n = e[0] * t[1] + e[1] * t[3],
                r = e[2] * t[0] + e[3] * t[2],
                a = e[2] * t[1] + e[3] * t[3],
                s = (i + a) / 2,
                o = Math.sqrt((i + a) * (i + a) - 4 * (i * a - r * n)) / 2,
                l = s + o || 1,
                c = s - o || 1;
              return [Math.sqrt(l), Math.sqrt(c)];
            }
            static normalizeRect(e) {
              const t = e.slice(0);
              if (e[0] > e[2]) {
                t[0] = e[2];
                t[2] = e[0];
              }
              if (e[1] > e[3]) {
                t[1] = e[3];
                t[3] = e[1];
              }
              return t;
            }
            static intersect(e, t) {
              function i(e, t) {
                return e - t;
              }
              const n = [e[0], e[2], t[0], t[2]].sort(i),
                r = [e[1], e[3], t[1], t[3]].sort(i),
                a = [];
              e = m.normalizeRect(e);
              t = m.normalizeRect(t);
              if (
                (n[0] === e[0] && n[1] === t[0]) ||
                (n[0] === t[0] && n[1] === e[0])
              ) {
                a[0] = n[1];
                a[2] = n[2];
              } else return null;
              if (
                (r[0] === e[1] && r[1] === t[1]) ||
                (r[0] === t[1] && r[1] === e[1])
              ) {
                a[1] = r[1];
                a[3] = r[2];
              } else return null;
              return a;
            }
          }
          t.Util = m;
          const v = [
              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
              0, 0, 728, 711, 710, 729, 733, 731, 730, 732, 0, 0, 0, 0, 0, 0, 0,
              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
              0, 8226, 8224, 8225, 8230, 8212, 8211, 402, 8260, 8249, 8250,
              8722, 8240, 8222, 8220, 8221, 8216, 8217, 8218, 8482, 64257,
              64258, 321, 338, 352, 376, 381, 305, 322, 339, 353, 382, 0, 8364,
            ],
            b = (function () {
              const e =
                "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
              return function (t, i, n = !1) {
                if (!n && URL.createObjectURL) {
                  const e = new Blob([t], { type: i });
                  return URL.createObjectURL(e);
                }
                let r = `data:${i};base64,`;
                for (let i = 0, n = t.length; i < n; i += 3) {
                  const a = 255 & t[i],
                    s = 255 & t[i + 1],
                    o = 255 & t[i + 2];
                  r +=
                    e[a >> 2] +
                    e[((3 & a) << 4) | (s >> 4)] +
                    e[i + 1 < n ? ((15 & s) << 2) | (o >> 6) : 64] +
                    e[i + 2 < n ? 63 & o : 64];
                }
                return r;
              };
            })();
          t.createObjectURL = b;
          const y = {
            60: "&lt;",
            62: "&gt;",
            38: "&amp;",
            34: "&quot;",
            39: "&apos;",
          };
        },
        (e, t, i) => {
          i(4);
        },
        (e, t) => {
          Object.defineProperty(t, "__esModule", { value: !0 });
          t.isNodeJS = void 0;
          const i = !(
            "object" != typeof process ||
            process + "" != "[object process]" ||
            process.versions.nw ||
            (process.versions.electron &&
              process.type &&
              "browser" !== process.type)
          );
          t.isNodeJS = i;
        },
        (e, t, i) => {
          Object.defineProperty(t, "__esModule", { value: !0 });
          t.clearPrimitiveCaches = function () {
            s._clearCache();
            a._clearCache();
            l._clearCache();
          };
          t.isCmd = function (e, t) {
            return e instanceof s && (void 0 === t || e.cmd === t);
          };
          t.isDict = function (e, t) {
            return e instanceof o && (void 0 === t || c(e.get("Type"), t));
          };
          t.isEOF = function (e) {
            return e === r;
          };
          t.isName = c;
          t.isRef = function (e) {
            return e instanceof l;
          };
          t.isRefsEqual = function (e, t) {
            return e.num === t.num && e.gen === t.gen;
          };
          t.isStream = function (e) {
            return "object" == typeof e && null !== e && void 0 !== e.getBytes;
          };
          t.RefSetCache =
            t.RefSet =
            t.Ref =
            t.Name =
            t.EOF =
            t.Dict =
            t.Cmd =
              void 0;
          var n = i(2),
            r = {};
          t.EOF = r;
          var a = (function () {
            let e = Object.create(null);
            function t(e) {
              this.name = e;
            }
            t.prototype = {};
            t.get = function (i) {
              var n = e[i];
              return n ? n : (e[i] = new t(i));
            };
            t._clearCache = function () {
              e = Object.create(null);
            };
            return t;
          })();
          t.Name = a;
          var s = (function () {
            let e = Object.create(null);
            function t(e) {
              this.cmd = e;
            }
            t.prototype = {};
            t.get = function (i) {
              var n = e[i];
              return n ? n : (e[i] = new t(i));
            };
            t._clearCache = function () {
              e = Object.create(null);
            };
            return t;
          })();
          t.Cmd = s;
          var o = (function () {
            var e = function () {
              return e;
            };
            function t(t) {
              this._map = Object.create(null);
              this.xref = t;
              this.objId = null;
              this.suppressEncryption = !1;
              this.__nonSerializable__ = e;
            }
            t.prototype = {
              assignXref: function (e) {
                this.xref = e;
              },
              get size() {
                return Object.keys(this._map).length;
              },
              get(e, t, i) {
                let n = this._map[e];
                if (void 0 === n && void 0 !== t) {
                  n = this._map[t];
                  if (void 0 === n && void 0 !== i) n = this._map[i];
                }
                if (n instanceof l && this.xref)
                  return this.xref.fetch(n, this.suppressEncryption);
                else return n;
              },
              async getAsync(e, t, i) {
                let n = this._map[e];
                if (void 0 === n && void 0 !== t) {
                  n = this._map[t];
                  if (void 0 === n && void 0 !== i) n = this._map[i];
                }
                if (n instanceof l && this.xref)
                  return this.xref.fetchAsync(n, this.suppressEncryption);
                else return n;
              },
              getArray(e, t, i) {
                let n = this.get(e, t, i);
                if (!Array.isArray(n) || !this.xref) return n;
                n = n.slice();
                for (let e = 0, t = n.length; e < t; e++)
                  if (n[e] instanceof l)
                    n[e] = this.xref.fetch(n[e], this.suppressEncryption);
                return n;
              },
              getRaw: function (e) {
                return this._map[e];
              },
              getKeys: function () {
                return Object.keys(this._map);
              },
              getRawValues: function () {
                return Object.values(this._map);
              },
              set: function (e, t) {
                this._map[e] = t;
              },
              has: function (e) {
                return void 0 !== this._map[e];
              },
              forEach: function (e) {
                for (var t in this._map) e(t, this.get(t));
              },
            };
            t.empty = (function () {
              const e = new t(null);
              e.set = (e, t) => {
                (0, n.unreachable)(
                  "Should not call `set` on the empty dictionary."
                );
              };
              return e;
            })();
            t.merge = function ({
              xref: e,
              dictArray: i,
              mergeSubDicts: n = !1,
            }) {
              const r = new t(e);
              if (!n) {
                for (const e of i)
                  if (e instanceof t)
                    for (const [t, i] of Object.entries(e._map))
                      if (void 0 === r._map[t]) r._map[t] = i;
                return r.size > 0 ? r : t.empty;
              }
              const a = new Map();
              for (const e of i)
                if (e instanceof t)
                  for (const [t, i] of Object.entries(e._map)) {
                    let e = a.get(t);
                    if (void 0 === e) {
                      e = [];
                      a.set(t, e);
                    }
                    e.push(i);
                  }
              for (const [i, n] of a) {
                if (1 === n.length || !(n[0] instanceof t)) {
                  r._map[i] = n[0];
                  continue;
                }
                const a = new t(e);
                for (const e of n)
                  if (e instanceof t)
                    for (const [t, i] of Object.entries(e._map))
                      if (void 0 === a._map[t]) a._map[t] = i;
                if (a.size > 0) r._map[i] = a;
              }
              a.clear();
              return r.size > 0 ? r : t.empty;
            };
            return t;
          })();
          t.Dict = o;
          var l = (function () {
            let e = Object.create(null);
            function t(e, t) {
              this.num = e;
              this.gen = t;
            }
            t.prototype = {
              toString: function () {
                if (0 === this.gen) return `${this.num}R`;
                else return `${this.num}R${this.gen}`;
              },
            };
            t.get = function (i, n) {
              const r = 0 === n ? `${i}R` : `${i}R${n}`,
                a = e[r];
              return a ? a : (e[r] = new t(i, n));
            };
            t._clearCache = function () {
              e = Object.create(null);
            };
            return t;
          })();
          t.Ref = l;
          t.RefSet = class {
            constructor(e = null) {
              this._set = new Set(e && e._set);
            }
            has(e) {
              return this._set.has(e.toString());
            }
            put(e) {
              this._set.add(e.toString());
            }
            remove(e) {
              this._set.delete(e.toString());
            }
            forEach(e) {
              for (const t of this._set.values()) e(t);
            }
            clear() {
              this._set.clear();
            }
          };
          t.RefSetCache = class {
            constructor() {
              this._map = new Map();
            }
            get size() {
              return this._map.size;
            }
            get(e) {
              return this._map.get(e.toString());
            }
            has(e) {
              return this._map.has(e.toString());
            }
            put(e, t) {
              this._map.set(e.toString(), t);
            }
            putAlias(e, t) {
              this._map.set(e.toString(), this.get(t));
            }
            forEach(e) {
              for (const t of this._map.values()) e(t);
            }
            clear() {
              this._map.clear();
            }
          };
          function c(e, t) {
            return e instanceof a && (void 0 === t || e.name === t);
          }
        },
        (e, t, i) => {
          Object.defineProperty(t, "__esModule", { value: !0 });
          t.NetworkPdfManager = t.LocalPdfManager = void 0;
          var n = i(2),
            r = i(7),
            a = i(8),
            s = i(9),
            o = i(12);
          class l {
            constructor() {
              if (this.constructor === l)
                (0, n.unreachable)("Cannot initialize BasePdfManager.");
            }
            get docId() {
              return this._docId;
            }
            get password() {
              return this._password;
            }
            get docBaseUrl() {
              let e = null;
              if (this._docBaseUrl) {
                const t = (0, n.createValidAbsoluteUrl)(this._docBaseUrl);
                if (t) e = t.href;
                else
                  (0, n.warn)(
                    `Invalid absolute docBaseUrl: "${this._docBaseUrl}".`
                  );
              }
              return (0, n.shadow)(this, "docBaseUrl", e);
            }
            onLoadedStream() {
              (0, n.unreachable)("Abstract method `onLoadedStream` called");
            }
            ensureDoc(e, t) {
              return this.ensure(this.pdfDocument, e, t);
            }
            ensureXRef(e, t) {
              return this.ensure(this.pdfDocument.xref, e, t);
            }
            ensureCatalog(e, t) {
              return this.ensure(this.pdfDocument.catalog, e, t);
            }
            getPage(e) {
              return this.pdfDocument.getPage(e);
            }
            fontFallback(e, t) {
              return this.pdfDocument.fontFallback(e, t);
            }
            cleanup(e = !1) {
              return this.pdfDocument.cleanup(e);
            }
            async ensure(e, t, i) {
              (0, n.unreachable)("Abstract method `ensure` called");
            }
            requestRange(e, t) {
              (0, n.unreachable)("Abstract method `requestRange` called");
            }
            requestLoadedStream() {
              (0, n.unreachable)(
                "Abstract method `requestLoadedStream` called"
              );
            }
            sendProgressiveData(e) {
              (0, n.unreachable)(
                "Abstract method `sendProgressiveData` called"
              );
            }
            updatePassword(e) {
              this._password = e;
            }
            terminate(e) {
              (0, n.unreachable)("Abstract method `terminate` called");
            }
          }
          t.LocalPdfManager = class extends l {
            constructor(e, t, i, n, r) {
              super();
              this._docId = e;
              this._password = i;
              this._docBaseUrl = r;
              this.evaluatorOptions = n;
              const a = new o.Stream(t);
              this.pdfDocument = new s.PDFDocument(this, a);
              this._loadedStreamPromise = Promise.resolve(a);
            }
            async ensure(e, t, i) {
              const n = e[t];
              if ("function" == typeof n) return n.apply(e, i);
              else return n;
            }
            requestRange(e, t) {
              return Promise.resolve();
            }
            requestLoadedStream() {}
            onLoadedStream() {
              return this._loadedStreamPromise;
            }
            terminate(e) {}
          };
          t.NetworkPdfManager = class extends l {
            constructor(e, t, i, n, a) {
              super();
              this._docId = e;
              this._password = i.password;
              this._docBaseUrl = a;
              this.msgHandler = i.msgHandler;
              this.evaluatorOptions = n;
              this.streamManager = new r.ChunkedStreamManager(t, {
                msgHandler: i.msgHandler,
                length: i.length,
                disableAutoFetch: i.disableAutoFetch,
                rangeChunkSize: i.rangeChunkSize,
              });
              this.pdfDocument = new s.PDFDocument(
                this,
                this.streamManager.getStream()
              );
            }
            async ensure(e, t, i) {
              try {
                const n = e[t];
                if ("function" == typeof n) return n.apply(e, i);
                else return n;
              } catch (n) {
                if (!(n instanceof a.MissingDataException)) throw n;
                await this.requestRange(n.begin, n.end);
                return this.ensure(e, t, i);
              }
            }
            requestRange(e, t) {
              return this.streamManager.requestRange(e, t);
            }
            requestLoadedStream() {
              this.streamManager.requestAllChunks();
            }
            sendProgressiveData(e) {
              this.streamManager.onReceiveData({ chunk: e });
            }
            onLoadedStream() {
              return this.streamManager.onLoadedStream();
            }
            terminate(e) {
              this.streamManager.abort(e);
            }
          };
        },
        (e, t, i) => {
          Object.defineProperty(t, "__esModule", { value: !0 });
          t.ChunkedStreamManager = t.ChunkedStream = void 0;
          var n = i(2),
            r = i(8);
          class a {
            constructor(e, t, i) {
              this.bytes = new Uint8Array(e);
              this.start = 0;
              this.pos = 0;
              this.end = e;
              this.chunkSize = t;
              this._loadedChunks = new Set();
              this.numChunks = Math.ceil(e / t);
              this.manager = i;
              this.progressiveDataLength = 0;
              this.lastSuccessfulEnsureByteChunk = -1;
            }
            getMissingChunks() {
              const e = [];
              for (let t = 0, i = this.numChunks; t < i; ++t)
                if (!this._loadedChunks.has(t)) e.push(t);
              return e;
            }
            getBaseStreams() {
              return [this];
            }
            get numChunksLoaded() {
              return this._loadedChunks.size;
            }
            allChunksLoaded() {
              return this.numChunksLoaded === this.numChunks;
            }
            onReceiveData(e, t) {
              const i = this.chunkSize;
              if (e % i != 0) throw new Error(`Bad begin offset: ${e}`);
              const n = e + t.byteLength;
              if (n % i != 0 && n !== this.bytes.length)
                throw new Error(`Bad end offset: ${n}`);
              this.bytes.set(new Uint8Array(t), e);
              const r = Math.floor(e / i),
                a = Math.floor((n - 1) / i) + 1;
              for (let e = r; e < a; ++e) this._loadedChunks.add(e);
            }
            onReceiveProgressiveData(e) {
              let t = this.progressiveDataLength;
              const i = Math.floor(t / this.chunkSize);
              this.bytes.set(new Uint8Array(e), t);
              t += e.byteLength;
              this.progressiveDataLength = t;
              const n =
                t >= this.end ? this.numChunks : Math.floor(t / this.chunkSize);
              for (let e = i; e < n; ++e) this._loadedChunks.add(e);
            }
            ensureByte(e) {
              if (e < this.progressiveDataLength) return;
              const t = Math.floor(e / this.chunkSize);
              if (t !== this.lastSuccessfulEnsureByteChunk) {
                if (!this._loadedChunks.has(t))
                  throw new r.MissingDataException(e, e + 1);
                this.lastSuccessfulEnsureByteChunk = t;
              }
            }
            ensureRange(e, t) {
              if (e >= t) return;
              if (t <= this.progressiveDataLength) return;
              const i = this.chunkSize,
                n = Math.floor(e / i),
                a = Math.floor((t - 1) / i) + 1;
              for (let i = n; i < a; ++i)
                if (!this._loadedChunks.has(i))
                  throw new r.MissingDataException(e, t);
            }
            nextEmptyChunk(e) {
              const t = this.numChunks;
              for (let i = 0; i < t; ++i) {
                const n = (e + i) % t;
                if (!this._loadedChunks.has(n)) return n;
              }
              return null;
            }
            hasChunk(e) {
              return this._loadedChunks.has(e);
            }
            get length() {
              return this.end - this.start;
            }
            get isEmpty() {
              return 0 === this.length;
            }
            getByte() {
              const e = this.pos;
              if (e >= this.end) return -1;
              if (e >= this.progressiveDataLength) this.ensureByte(e);
              return this.bytes[this.pos++];
            }
            getUint16() {
              const e = this.getByte(),
                t = this.getByte();
              if (-1 === e || -1 === t) return -1;
              else return (e << 8) + t;
            }
            getInt32() {
              return (
                (this.getByte() << 24) +
                (this.getByte() << 16) +
                (this.getByte() << 8) +
                this.getByte()
              );
            }
            getBytes(e, t = !1) {
              const i = this.bytes,
                n = this.pos,
                r = this.end;
              if (!e) {
                if (r > this.progressiveDataLength) this.ensureRange(n, r);
                const e = i.subarray(n, r);
                return t ? new Uint8ClampedArray(e) : e;
              }
              let a = n + e;
              if (a > r) a = r;
              if (a > this.progressiveDataLength) this.ensureRange(n, a);
              this.pos = a;
              const s = i.subarray(n, a);
              return t ? new Uint8ClampedArray(s) : s;
            }
            peekByte() {
              const e = this.getByte();
              if (-1 !== e) this.pos--;
              return e;
            }
            peekBytes(e, t = !1) {
              const i = this.getBytes(e, t);
              this.pos -= i.length;
              return i;
            }
            getByteRange(e, t) {
              if (e < 0) e = 0;
              if (t > this.end) t = this.end;
              if (t > this.progressiveDataLength) this.ensureRange(e, t);
              return this.bytes.subarray(e, t);
            }
            skip(e) {
              if (!e) e = 1;
              this.pos += e;
            }
            reset() {
              this.pos = this.start;
            }
            moveStart() {
              this.start = this.pos;
            }
            makeSubStream(e, t, i) {
              if (t) {
                if (e + t > this.progressiveDataLength)
                  this.ensureRange(e, e + t);
              } else if (e >= this.progressiveDataLength) this.ensureByte(e);
              function n() {}
              n.prototype = Object.create(this);
              n.prototype.getMissingChunks = function () {
                const e = this.chunkSize,
                  t = Math.floor(this.start / e),
                  i = Math.floor((this.end - 1) / e) + 1,
                  n = [];
                for (let e = t; e < i; ++e)
                  if (!this._loadedChunks.has(e)) n.push(e);
                return n;
              };
              n.prototype.allChunksLoaded = function () {
                if (this.numChunksLoaded === this.numChunks) return !0;
                else return 0 === this.getMissingChunks().length;
              };
              const r = new n();
              r.pos = r.start = e;
              r.end = e + t || this.end;
              r.dict = i;
              return r;
            }
          }
          t.ChunkedStream = a;
          t.ChunkedStreamManager = class {
            constructor(e, t) {
              this.length = t.length;
              this.chunkSize = t.rangeChunkSize;
              this.stream = new a(this.length, this.chunkSize, this);
              this.pdfNetworkStream = e;
              this.disableAutoFetch = t.disableAutoFetch;
              this.msgHandler = t.msgHandler;
              this.currRequestId = 0;
              this._chunksNeededByRequest = new Map();
              this._requestsByChunk = new Map();
              this._promisesByRequest = new Map();
              this.progressiveDataLength = 0;
              this.aborted = !1;
              this._loadedStreamCapability = (0, n.createPromiseCapability)();
            }
            onLoadedStream() {
              return this._loadedStreamCapability.promise;
            }
            sendRequest(e, t) {
              const i = this.pdfNetworkStream.getRangeReader(e, t);
              if (!i.isStreamingSupported)
                i.onProgress = this.onProgress.bind(this);
              let r = [],
                a = 0;
              new Promise((e, t) => {
                const s = (o) => {
                  try {
                    if (!o.done) {
                      const e = o.value;
                      r.push(e);
                      a += (0, n.arrayByteLength)(e);
                      if (i.isStreamingSupported)
                        this.onProgress({ loaded: a });
                      i.read().then(s, t);
                      return;
                    }
                    const l = (0, n.arraysToBytes)(r);
                    r = null;
                    e(l);
                  } catch (e) {
                    t(e);
                  }
                };
                i.read().then(s, t);
              }).then((t) => {
                if (!this.aborted) this.onReceiveData({ chunk: t, begin: e });
              });
            }
            requestAllChunks() {
              const e = this.stream.getMissingChunks();
              this._requestChunks(e);
              return this._loadedStreamCapability.promise;
            }
            _requestChunks(e) {
              const t = this.currRequestId++,
                i = new Set();
              this._chunksNeededByRequest.set(t, i);
              for (const t of e) if (!this.stream.hasChunk(t)) i.add(t);
              if (0 === i.size) return Promise.resolve();
              const r = (0, n.createPromiseCapability)();
              this._promisesByRequest.set(t, r);
              const a = [];
              for (const e of i) {
                let i = this._requestsByChunk.get(e);
                if (!i) {
                  i = [];
                  this._requestsByChunk.set(e, i);
                  a.push(e);
                }
                i.push(t);
              }
              if (a.length > 0) {
                const e = this.groupChunks(a);
                for (const t of e) {
                  const e = t.beginChunk * this.chunkSize,
                    i = Math.min(t.endChunk * this.chunkSize, this.length);
                  this.sendRequest(e, i);
                }
              }
              return r.promise.catch((e) => {
                if (!this.aborted) throw e;
              });
            }
            getStream() {
              return this.stream;
            }
            requestRange(e, t) {
              t = Math.min(t, this.length);
              const i = this.getBeginChunk(e),
                n = this.getEndChunk(t),
                r = [];
              for (let e = i; e < n; ++e) r.push(e);
              return this._requestChunks(r);
            }
            requestRanges(e = []) {
              const t = [];
              for (const i of e) {
                const e = this.getBeginChunk(i.begin),
                  n = this.getEndChunk(i.end);
                for (let i = e; i < n; ++i) if (!t.includes(i)) t.push(i);
              }
              t.sort(function (e, t) {
                return e - t;
              });
              return this._requestChunks(t);
            }
            groupChunks(e) {
              const t = [];
              let i = -1,
                n = -1;
              for (let r = 0, a = e.length; r < a; ++r) {
                const a = e[r];
                if (i < 0) i = a;
                if (n >= 0 && n + 1 !== a) {
                  t.push({ beginChunk: i, endChunk: n + 1 });
                  i = a;
                }
                if (r + 1 === e.length)
                  t.push({ beginChunk: i, endChunk: a + 1 });
                n = a;
              }
              return t;
            }
            onProgress(e) {
              this.msgHandler.send("DocProgress", {
                loaded: this.stream.numChunksLoaded * this.chunkSize + e.loaded,
                total: this.length,
              });
            }
            onReceiveData(e) {
              const t = e.chunk,
                i = void 0 === e.begin,
                n = i ? this.progressiveDataLength : e.begin,
                r = n + t.byteLength,
                a = Math.floor(n / this.chunkSize),
                s =
                  r < this.length
                    ? Math.floor(r / this.chunkSize)
                    : Math.ceil(r / this.chunkSize);
              if (i) {
                this.stream.onReceiveProgressiveData(t);
                this.progressiveDataLength = r;
              } else this.stream.onReceiveData(n, t);
              if (this.stream.allChunksLoaded())
                this._loadedStreamCapability.resolve(this.stream);
              const o = [];
              for (let e = a; e < s; ++e) {
                const t = this._requestsByChunk.get(e);
                if (t) {
                  this._requestsByChunk.delete(e);
                  for (const i of t) {
                    const t = this._chunksNeededByRequest.get(i);
                    if (t.has(e)) t.delete(e);
                    if (!(t.size > 0)) o.push(i);
                  }
                }
              }
              if (!this.disableAutoFetch && 0 === this._requestsByChunk.size) {
                let e;
                if (1 === this.stream.numChunksLoaded) {
                  const t = this.stream.numChunks - 1;
                  if (!this.stream.hasChunk(t)) e = t;
                } else e = this.stream.nextEmptyChunk(s);
                if (Number.isInteger(e)) this._requestChunks([e]);
              }
              for (const e of o) {
                const t = this._promisesByRequest.get(e);
                this._promisesByRequest.delete(e);
                t.resolve();
              }
              this.msgHandler.send("DocProgress", {
                loaded: this.stream.numChunksLoaded * this.chunkSize,
                total: this.length,
              });
            }
            onError(e) {
              this._loadedStreamCapability.reject(e);
            }
            getBeginChunk(e) {
              return Math.floor(e / this.chunkSize);
            }
            getEndChunk(e) {
              return Math.floor((e - 1) / this.chunkSize) + 1;
            }
            abort(e) {
              this.aborted = !0;
              if (this.pdfNetworkStream)
                this.pdfNetworkStream.cancelAllRequests(e);
              for (const t of this._promisesByRequest.values()) t.reject(e);
            }
          };
        },
        (e, t, i) => {
          Object.defineProperty(t, "__esModule", { value: !0 });
          t.collectActions = function (e, t, i) {
            const a = Object.create(null);
            if (t.has("AA")) {
              const n = t.get("AA");
              for (const t of n.getKeys()) {
                const s = i[t];
                if (!s) continue;
                const o = [];
                c(n.getRaw(t), e, o, new r.RefSet());
                if (o.length > 0) a[s] = o;
              }
            }
            if (t.has("A")) {
              const i = [];
              c(t.get("A"), e, i, new r.RefSet());
              if (i.length > 0) a.Action = i;
            }
            return (0, n.objectSize)(a) > 0 ? a : null;
          };
          t.escapePDFName = function (e) {
            const t = [];
            let i = 0;
            for (let n = 0, r = e.length; n < r; n++) {
              const r = e.charCodeAt(n);
              if (
                r < 33 ||
                r > 126 ||
                35 === r ||
                40 === r ||
                41 === r ||
                60 === r ||
                62 === r ||
                91 === r ||
                93 === r ||
                123 === r ||
                125 === r ||
                47 === r ||
                37 === r
              ) {
                if (i < n) t.push(e.substring(i, n));
                t.push(`#${r.toString(16)}`);
                i = n + 1;
              }
            }
            if (0 === t.length) return e;
            if (i < e.length) t.push(e.substring(i, e.length));
            return t.join("");
          };
          t.getArrayLookupTableFactory = function (e) {
            let t;
            return function () {
              if (e) {
                let i = e();
                e = null;
                t = Object.create(null);
                for (let e = 0, n = i.length; e < n; e += 2) t[i[e]] = i[e + 1];
                i = null;
              }
              return t;
            };
          };
          t.getInheritableProperty = function ({
            dict: e,
            key: t,
            getArray: i = !1,
            stopWhenFound: r = !0,
          }) {
            let a,
              s = 0;
            for (; e; ) {
              const o = i ? e.getArray(t) : e.get(t);
              if (void 0 !== o) {
                if (r) return o;
                if (!a) a = [];
                a.push(o);
              }
              if (++s > 100) {
                (0, n.warn)(
                  `getInheritableProperty: maximum loop count exceeded for "${t}"`
                );
                break;
              }
              e = e.get("Parent");
            }
            return a;
          };
          t.getLookupTableFactory = function (e) {
            let t;
            return function () {
              if (e) {
                t = Object.create(null);
                e(t);
                e = null;
              }
              return t;
            };
          };
          t.isWhiteSpace = function (e) {
            return 32 === e || 9 === e || 13 === e || 10 === e;
          };
          t.log2 = function (e) {
            if (e <= 0) return 0;
            else return Math.ceil(Math.log2(e));
          };
          t.parseXFAPath = function (e) {
            const t = /(.+)\[([0-9]+)\]$/;
            return e.split(".").map((e) => {
              const i = e.match(t);
              if (i) return { name: i[1], pos: parseInt(i[2], 10) };
              else return { name: e, pos: 0 };
            });
          };
          t.readInt8 = function (e, t) {
            return (e[t] << 24) >> 24;
          };
          t.readUint16 = function (e, t) {
            return (e[t] << 8) | e[t + 1];
          };
          t.readUint32 = function (e, t) {
            return (
              ((e[t] << 24) | (e[t + 1] << 16) | (e[t + 2] << 8) | e[t + 3]) >>>
              0
            );
          };
          t.toRomanNumerals = function (e, t = !1) {
            (0, n.assert)(
              Number.isInteger(e) && e > 0,
              "The number should be a positive integer."
            );
            const i = [];
            let r;
            for (; e >= 1e3; ) {
              e -= 1e3;
              i.push("M");
            }
            r = (e / 100) | 0;
            e %= 100;
            i.push(l[r]);
            r = (e / 10) | 0;
            e %= 10;
            i.push(l[10 + r]);
            i.push(l[20 + e]);
            const a = i.join("");
            return t ? a.toLowerCase() : a;
          };
          t.XRefParseException =
            t.XRefEntryException =
            t.MissingDataException =
              void 0;
          var n = i(2),
            r = i(5);
          class a extends n.BaseException {
            constructor(e, t) {
              super(`Missing data [${e}, ${t})`);
              this.begin = e;
              this.end = t;
            }
          }
          t.MissingDataException = a;
          class s extends n.BaseException {}
          t.XRefEntryException = s;
          class o extends n.BaseException {}
          t.XRefParseException = o;
          const l = [
            "",
            "C",
            "CC",
            "CCC",
            "CD",
            "D",
            "DC",
            "DCC",
            "DCCC",
            "CM",
            "",
            "X",
            "XX",
            "XXX",
            "XL",
            "L",
            "LX",
            "LXX",
            "LXXX",
            "XC",
            "",
            "I",
            "II",
            "III",
            "IV",
            "V",
            "VI",
            "VII",
            "VIII",
            "IX",
          ];
          function c(e, t, i, a) {
            if (!e) return;
            let s = null;
            if ((0, r.isRef)(e)) {
              if (a.has(e)) return;
              s = e;
              a.put(s);
              e = t.fetch(e);
            }
            if (Array.isArray(e)) for (const n of e) c(n, t, i, a);
            else if (e instanceof r.Dict) {
              if ((0, r.isName)(e.get("S"), "JavaScript") && e.has("JS")) {
                const t = e.get("JS");
                let a;
                if ((0, r.isStream)(t)) a = (0, n.bytesToString)(t.getBytes());
                else a = t;
                a = (0, n.stringToPDFString)(a);
                if (a) i.push(a);
              }
              c(e.getRaw("Next"), t, i, a);
            }
            if (s) a.remove(s);
          }
        },
        (e, t, i) => {
          Object.defineProperty(t, "__esModule", { value: !0 });
          t.PDFDocument = t.Page = void 0;
          var n = i(2),
            r = i(10),
            a = i(5),
            s = i(8),
            o = i(12),
            l = i(25),
            c = i(22),
            h = i(11),
            u = i(44),
            d = i(27);
          const f = [0, 0, 612, 792];
          function p(e, t) {
            return (
              ("display" === t && e.viewable) || ("print" === t && e.printable)
            );
          }
          class g {
            constructor({
              pdfManager: e,
              xref: t,
              pageIndex: i,
              pageDict: n,
              ref: r,
              globalIdFactory: a,
              fontCache: s,
              builtInCMapCache: o,
              globalImageCache: l,
              nonBlendModesSet: c,
            }) {
              this.pdfManager = e;
              this.pageIndex = i;
              this.pageDict = n;
              this.xref = t;
              this.ref = r;
              this.fontCache = s;
              this.builtInCMapCache = o;
              this.globalImageCache = l;
              this.nonBlendModesSet = c;
              this.evaluatorOptions = e.evaluatorOptions;
              this.resourcesPromise = null;
              const h = { obj: 0 };
              this._localIdFactory = class extends a {
                static createObjId() {
                  return `p${i}_${++h.obj}`;
                }
              };
            }
            _getInheritableProperty(e, t = !1) {
              const i = (0, s.getInheritableProperty)({
                dict: this.pageDict,
                key: e,
                getArray: t,
                stopWhenFound: !1,
              });
              if (!Array.isArray(i)) return i;
              if (1 === i.length || !(0, a.isDict)(i[0])) return i[0];
              else return a.Dict.merge({ xref: this.xref, dictArray: i });
            }
            get content() {
              return this.pageDict.get("Contents");
            }
            get resources() {
              return (0, n.shadow)(
                this,
                "resources",
                this._getInheritableProperty("Resources") || a.Dict.empty
              );
            }
            _getBoundingBox(e) {
              const t = this._getInheritableProperty(e, !0);
              if (Array.isArray(t) && 4 === t.length) {
                if (t[2] - t[0] != 0 && t[3] - t[1] != 0) return t;
                (0, n.warn)(`Empty /${e} entry.`);
              }
              return null;
            }
            get mediaBox() {
              return (0, n.shadow)(
                this,
                "mediaBox",
                this._getBoundingBox("MediaBox") || f
              );
            }
            get cropBox() {
              return (0, n.shadow)(
                this,
                "cropBox",
                this._getBoundingBox("CropBox") || this.mediaBox
              );
            }
            get userUnit() {
              let e = this.pageDict.get("UserUnit");
              if (!(0, n.isNum)(e) || e <= 0) e = 1;
              return (0, n.shadow)(this, "userUnit", e);
            }
            get view() {
              const { cropBox: e, mediaBox: t } = this;
              let i;
              if (e === t || (0, n.isArrayEqual)(e, t)) i = t;
              else {
                const r = n.Util.intersect(e, t);
                if (r && r[2] - r[0] != 0 && r[3] - r[1] != 0) i = r;
                else (0, n.warn)("Empty /CropBox and /MediaBox intersection.");
              }
              return (0, n.shadow)(this, "view", i || t);
            }
            get rotate() {
              let e = this._getInheritableProperty("Rotate") || 0;
              if (e % 90 != 0) e = 0;
              else if (e >= 360) e %= 360;
              else if (e < 0) e = ((e % 360) + 360) % 360;
              return (0, n.shadow)(this, "rotate", e);
            }
            getContentStream() {
              const e = this.content;
              let t;
              if (Array.isArray(e)) {
                const i = this.xref,
                  n = [];
                for (const t of e) n.push(i.fetchIfRef(t));
                t = new o.StreamsSequenceStream(n);
              } else if ((0, a.isStream)(e)) t = e;
              else t = new o.NullStream();
              return t;
            }
            save(e, t, i) {
              const r = new d.PartialEvaluator({
                xref: this.xref,
                handler: e,
                pageIndex: this.pageIndex,
                idFactory: this._localIdFactory,
                fontCache: this.fontCache,
                builtInCMapCache: this.builtInCMapCache,
                globalImageCache: this.globalImageCache,
                options: this.evaluatorOptions,
              });
              return this._parsedAnnotations.then(function (e) {
                const a = [];
                for (const s of e)
                  if (p(s, "print"))
                    a.push(
                      s.save(r, t, i).catch(function (e) {
                        (0,
                        n.warn)(`save - ignoring annotation data during "${t.name}" task: "${e}".`);
                        return null;
                      })
                    );
                return Promise.all(a);
              });
            }
            loadResources(e) {
              if (!this.resourcesPromise)
                this.resourcesPromise = this.pdfManager.ensure(
                  this,
                  "resources"
                );
              return this.resourcesPromise.then(() =>
                new r.ObjectLoader(this.resources, e, this.xref).load()
              );
            }
            getOperatorList({
              handler: e,
              sink: t,
              task: i,
              intent: r,
              renderInteractiveForms: a,
              annotationStorage: s,
            }) {
              const o = this.pdfManager.ensure(this, "getContentStream"),
                l = this.loadResources([
                  "ExtGState",
                  "ColorSpace",
                  "Pattern",
                  "Shading",
                  "XObject",
                  "Font",
                ]),
                c = new d.PartialEvaluator({
                  xref: this.xref,
                  handler: e,
                  pageIndex: this.pageIndex,
                  idFactory: this._localIdFactory,
                  fontCache: this.fontCache,
                  builtInCMapCache: this.builtInCMapCache,
                  globalImageCache: this.globalImageCache,
                  options: this.evaluatorOptions,
                }),
                h = Promise.all([o, l]).then(([n]) => {
                  const a = new u.OperatorList(r, t);
                  e.send("StartRenderPage", {
                    transparency: c.hasBlendModes(
                      this.resources,
                      this.nonBlendModesSet
                    ),
                    pageIndex: this.pageIndex,
                    intent: r,
                  });
                  return c
                    .getOperatorList({
                      stream: n,
                      task: i,
                      resources: this.resources,
                      operatorList: a,
                    })
                    .then(function () {
                      return a;
                    });
                });
              return Promise.all([h, this._parsedAnnotations]).then(function ([
                e,
                t,
              ]) {
                if (0 === t.length) {
                  e.flush(!0);
                  return { length: e.totalLength };
                }
                const o = [];
                for (const e of t)
                  if (p(e, r) && !e.isHidden(s))
                    o.push(
                      e.getOperatorList(c, i, a, s).catch(function (e) {
                        (0,
                        n.warn)(`getOperatorList - ignoring annotation data during "${i.name}" task: "${e}".`);
                        return null;
                      })
                    );
                return Promise.all(o).then(function (t) {
                  e.addOp(n.OPS.beginAnnotations, []);
                  for (const i of t) e.addOpList(i);
                  e.addOp(n.OPS.endAnnotations, []);
                  e.flush(!0);
                  return { length: e.totalLength };
                });
              });
            }
            extractTextContent({
              handler: e,
              task: t,
              normalizeWhitespace: i,
              sink: n,
              combineTextItems: r,
            }) {
              const a = this.pdfManager.ensure(this, "getContentStream"),
                s = this.loadResources(["ExtGState", "XObject", "Font"]);
              return Promise.all([a, s]).then(([a]) =>
                new d.PartialEvaluator({
                  xref: this.xref,
                  handler: e,
                  pageIndex: this.pageIndex,
                  idFactory: this._localIdFactory,
                  fontCache: this.fontCache,
                  builtInCMapCache: this.builtInCMapCache,
                  globalImageCache: this.globalImageCache,
                  options: this.evaluatorOptions,
                }).getTextContent({
                  stream: a,
                  task: t,
                  resources: this.resources,
                  normalizeWhitespace: i,
                  combineTextItems: r,
                  sink: n,
                })
              );
            }
            getAnnotationsData(e) {
              return this._parsedAnnotations.then(function (t) {
                const i = [];
                for (let n = 0, r = t.length; n < r; n++)
                  if (!e || p(t[n], e)) i.push(t[n].data);
                return i;
              });
            }
            get annotations() {
              const e = this._getInheritableProperty("Annots");
              return (0, n.shadow)(
                this,
                "annotations",
                Array.isArray(e) ? e : []
              );
            }
            get _parsedAnnotations() {
              const e = this.pdfManager.ensure(this, "annotations").then(() => {
                const e = [];
                for (const t of this.annotations)
                  e.push(
                    l.AnnotationFactory.create(
                      this.xref,
                      t,
                      this.pdfManager,
                      this._localIdFactory
                    ).catch(function (e) {
                      (0, n.warn)(`_parsedAnnotations: "${e}".`);
                      return null;
                    })
                  );
                return Promise.all(e).then(function (e) {
                  return e.filter((e) => !!e);
                });
              });
              return (0, n.shadow)(this, "_parsedAnnotations", e);
            }
            get jsActions() {
              const e = (0, s.collectActions)(
                this.xref,
                this.pageDict,
                n.PageActionEventType
              );
              return (0, n.shadow)(this, "jsActions", e);
            }
          }
          t.Page = g;
          const m = new Uint8Array([37, 80, 68, 70, 45]),
            v = new Uint8Array([115, 116, 97, 114, 116, 120, 114, 101, 102]),
            b = new Uint8Array([101, 110, 100, 111, 98, 106]),
            y = /^[1-9]\.[0-9]$/;
          function w(e, t, i = 1024, n = !1) {
            const r = t.length,
              a = e.peekBytes(i),
              s = a.length - r;
            if (s <= 0) return !1;
            if (n) {
              const i = r - 1;
              let n = a.length - 1;
              for (; n >= i; ) {
                let s = 0;
                for (; s < r && a[n - s] === t[i - s]; ) s++;
                if (s >= r) {
                  e.pos += n - i;
                  return !0;
                }
                n--;
              }
            } else {
              let i = 0;
              for (; i <= s; ) {
                let n = 0;
                for (; n < r && a[i + n] === t[n]; ) n++;
                if (n >= r) {
                  e.pos += i;
                  return !0;
                }
                i++;
              }
            }
            return !1;
          }
          t.PDFDocument = class {
            constructor(e, t) {
              let i;
              if ((0, a.isStream)(t)) i = t;
              else if ((0, n.isArrayBuffer)(t)) i = new o.Stream(t);
              else throw new Error("PDFDocument: Unknown argument type");
              if (i.length <= 0)
                throw new n.InvalidPDFException(
                  "The PDF file is empty, i.e. its size is zero bytes."
                );
              this.pdfManager = e;
              this.stream = i;
              this.xref = new r.XRef(i, e);
              this._pagePromises = [];
              this._version = null;
              const s = { font: 0 };
              this._globalIdFactory = class {
                static getDocId() {
                  return `g_${e.docId}`;
                }
                static createFontId() {
                  return "f" + ++s.font;
                }
                static createObjId() {
                  (0, n.unreachable)("Abstract method `createObjId` called.");
                }
              };
            }
            parse(e) {
              this.xref.parse(e);
              this.catalog = new r.Catalog(this.pdfManager, this.xref);
              if (this.catalog.version) this._version = this.catalog.version;
            }
            get linearization() {
              let e = null;
              try {
                e = h.Linearization.create(this.stream);
              } catch (e) {
                if (e instanceof s.MissingDataException) throw e;
                (0, n.info)(e);
              }
              return (0, n.shadow)(this, "linearization", e);
            }
            get startXRef() {
              const e = this.stream;
              let t = 0;
              if (this.linearization) {
                e.reset();
                if (w(e, b)) t = e.pos + 6 - e.start;
              } else {
                const i = 1024,
                  n = v.length;
                let r = !1,
                  a = e.end;
                for (; !r && a > 0; ) {
                  a -= i - n;
                  if (a < 0) a = 0;
                  e.pos = a;
                  r = w(e, v, i, !0);
                }
                if (r) {
                  e.skip(9);
                  let i;
                  do {
                    i = e.getByte();
                  } while ((0, s.isWhiteSpace)(i));
                  let n = "";
                  for (; i >= 32 && i <= 57; ) {
                    n += String.fromCharCode(i);
                    i = e.getByte();
                  }
                  t = parseInt(n, 10);
                  if (isNaN(t)) t = 0;
                }
              }
              return (0, n.shadow)(this, "startXRef", t);
            }
            checkHeader() {
              const e = this.stream;
              e.reset();
              if (!w(e, m)) return;
              e.moveStart();
              let t,
                i = "";
              for (; (t = e.getByte()) > 32 && !(i.length >= 12); )
                i += String.fromCharCode(t);
              if (!this._version) this._version = i.substring(5);
            }
            parseStartXRef() {
              this.xref.setStartXRef(this.startXRef);
            }
            get numPages() {
              const e = this.linearization,
                t = e ? e.numPages : this.catalog.numPages;
              return (0, n.shadow)(this, "numPages", t);
            }
            _hasOnlyDocumentSignatures(e, t = 0) {
              if (!Array.isArray(e)) return !1;
              else
                return e.every((e) => {
                  if (!((e = this.xref.fetchIfRef(e)) instanceof a.Dict))
                    return !1;
                  if (e.has("Kids")) {
                    if (++t > 10) {
                      (0, n.warn)(
                        "_hasOnlyDocumentSignatures: maximum recursion depth reached"
                      );
                      return !1;
                    }
                    return this._hasOnlyDocumentSignatures(e.get("Kids"), t);
                  }
                  const i = (0, a.isName)(e.get("FT"), "Sig"),
                    r = e.get("Rect"),
                    s = Array.isArray(r) && r.every((e) => 0 === e);
                  return i && s;
                });
            }
            get formInfo() {
              const e = { hasFields: !1, hasAcroForm: !1, hasXfa: !1 },
                t = this.catalog.acroForm;
              if (!t) return (0, n.shadow)(this, "formInfo", e);
              try {
                const i = t.get("Fields"),
                  n = Array.isArray(i) && i.length > 0;
                e.hasFields = n;
                const r = t.get("XFA");
                e.hasXfa =
                  (Array.isArray(r) && r.length > 0) ||
                  ((0, a.isStream)(r) && !r.isEmpty);
                const s =
                  !!(1 & t.get("SigFlags")) &&
                  this._hasOnlyDocumentSignatures(i);
                e.hasAcroForm = n && !s;
              } catch (e) {
                if (e instanceof s.MissingDataException) throw e;
                (0, n.warn)(`Cannot fetch form information: "${e}".`);
              }
              return (0, n.shadow)(this, "formInfo", e);
            }
            get documentInfo() {
              const e = {
                Title: n.isString,
                Author: n.isString,
                Subject: n.isString,
                Keywords: n.isString,
                Creator: n.isString,
                Producer: n.isString,
                CreationDate: n.isString,
                ModDate: n.isString,
                Trapped: a.isName,
              };
              let t = this._version;
              if ("string" != typeof t || !y.test(t)) {
                (0, n.warn)(`Invalid PDF header version number: ${t}`);
                t = null;
              }
              const i = {
                PDFFormatVersion: t,
                IsLinearized: !!this.linearization,
                IsAcroFormPresent: this.formInfo.hasAcroForm,
                IsXFAPresent: this.formInfo.hasXfa,
                IsCollectionPresent: !!this.catalog.collection,
              };
              let r;
              try {
                r = this.xref.trailer.get("Info");
              } catch (e) {
                if (e instanceof s.MissingDataException) throw e;
                (0, n.info)("The document information dictionary is invalid.");
              }
              if ((0, a.isDict)(r))
                for (const t of r.getKeys()) {
                  const s = r.get(t);
                  if (e[t])
                    if (e[t](s))
                      i[t] =
                        "string" != typeof s ? s : (0, n.stringToPDFString)(s);
                    else (0, n.info)(`Bad value in document info for "${t}".`);
                  else if ("string" == typeof t) {
                    let e;
                    if ((0, n.isString)(s)) e = (0, n.stringToPDFString)(s);
                    else if (
                      (0, a.isName)(s) ||
                      (0, n.isNum)(s) ||
                      (0, n.isBool)(s)
                    )
                      e = s;
                    else {
                      (0, n.info)(
                        `Unsupported value in document info for (custom) "${t}".`
                      );
                      continue;
                    }
                    if (!i.Custom) i.Custom = Object.create(null);
                    i.Custom[t] = e;
                  }
                }
              return (0, n.shadow)(this, "documentInfo", i);
            }
            get fingerprint() {
              let e;
              const t = this.xref.trailer.get("ID");
              if (
                Array.isArray(t) &&
                t[0] &&
                (0, n.isString)(t[0]) &&
                "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0" !== t[0]
              )
                e = (0, n.stringToBytes)(t[0]);
              else
                e = (0, c.calculateMD5)(
                  this.stream.getByteRange(0, 1024),
                  0,
                  1024
                );
              const i = [];
              for (let t = 0, n = e.length; t < n; t++) {
                const n = e[t].toString(16);
                i.push(n.padStart(2, "0"));
              }
              return (0, n.shadow)(this, "fingerprint", i.join(""));
            }
            _getLinearizationPage(e) {
              const { catalog: t, linearization: i } = this,
                r = a.Ref.get(i.objectNumberFirst, 0);
              return this.xref
                .fetchAsync(r)
                .then((e) => {
                  if (
                    (0, a.isDict)(e, "Page") ||
                    ((0, a.isDict)(e) && !e.has("Type") && e.has("Contents"))
                  ) {
                    if (r && !t.pageKidsCountCache.has(r))
                      t.pageKidsCountCache.put(r, 1);
                    return [e, r];
                  }
                  throw new n.FormatError(
                    "The Linearization dictionary doesn't point to a valid Page dictionary."
                  );
                })
                .catch((i) => {
                  (0, n.info)(i);
                  return t.getPageDict(e);
                });
            }
            getPage(e) {
              if (void 0 !== this._pagePromises[e])
                return this._pagePromises[e];
              const { catalog: t, linearization: i } = this,
                n =
                  i && i.pageFirst === e
                    ? this._getLinearizationPage(e)
                    : t.getPageDict(e);
              return (this._pagePromises[e] = n.then(
                ([i, n]) =>
                  new g({
                    pdfManager: this.pdfManager,
                    xref: this.xref,
                    pageIndex: e,
                    pageDict: i,
                    ref: n,
                    globalIdFactory: this._globalIdFactory,
                    fontCache: t.fontCache,
                    builtInCMapCache: t.builtInCMapCache,
                    globalImageCache: t.globalImageCache,
                    nonBlendModesSet: t.nonBlendModesSet,
                  })
              ));
            }
            checkFirstPage() {
              return this.getPage(0).catch(async (e) => {
                if (e instanceof s.XRefEntryException) {
                  this._pagePromises.length = 0;
                  await this.cleanup();
                  throw new s.XRefParseException();
                }
              });
            }
            fontFallback(e, t) {
              return this.catalog.fontFallback(e, t);
            }
            async cleanup(e = !1) {
              return this.catalog
                ? this.catalog.cleanup(e)
                : (0, a.clearPrimitiveCaches)();
            }
            _collectFieldObjects(e, t, i) {
              const r = this.xref.fetchIfRef(t);
              if (r.has("T")) {
                const t = (0, n.stringToPDFString)(r.get("T"));
                if ("" === e) e = t;
                else e = `${e}.${t}`;
              }
              if (!i.has(e)) i.set(e, []);
              i.get(e).push(
                l.AnnotationFactory.create(
                  this.xref,
                  t,
                  this.pdfManager,
                  this._localIdFactory
                )
                  .then((e) => e && e.getFieldObject())
                  .catch(function (e) {
                    (0, n.warn)(`_collectFieldObjects: "${e}".`);
                    return null;
                  })
              );
              if (r.has("Kids")) {
                const t = r.get("Kids");
                for (const n of t) this._collectFieldObjects(e, n, i);
              }
            }
            get fieldObjects() {
              if (!this.formInfo.hasFields)
                return (0, n.shadow)(
                  this,
                  "fieldObjects",
                  Promise.resolve(null)
                );
              const e = Object.create(null),
                t = new Map();
              for (const e of this.catalog.acroForm.get("Fields"))
                this._collectFieldObjects("", e, t);
              const i = [];
              for (const [n, r] of t)
                i.push(
                  Promise.all(r).then((t) => {
                    if ((t = t.filter((e) => !!e)).length > 0) e[n] = t;
                  })
                );
              return (0, n.shadow)(
                this,
                "fieldObjects",
                Promise.all(i).then(() => e)
              );
            }
            get hasJSActions() {
              return (0, n.shadow)(
                this,
                "hasJSActions",
                this.fieldObjects.then(
                  (e) =>
                    (null !== e &&
                      Object.values(e).some((e) =>
                        e.some((e) => null !== e.actions)
                      )) ||
                    !!this.catalog.jsActions
                )
              );
            }
            get calculationOrderIds() {
              const e = this.catalog.acroForm;
              if (!e || !e.has("CO"))
                return (0, n.shadow)(this, "calculationOrderIds", null);
              const t = e.get("CO");
              if (!Array.isArray(t) || 0 === t.length)
                return (0, n.shadow)(this, "calculationOrderIds", null);
              const i = t.filter(a.isRef).map((e) => e.toString());
              if (0 === i.length)
                return (0, n.shadow)(this, "calculationOrderIds", null);
              else return (0, n.shadow)(this, "calculationOrderIds", i);
            }
          };
        },
        (e, t, i) => {
          Object.defineProperty(t, "__esModule", { value: !0 });
          t.XRef = t.ObjectLoader = t.FileSpec = t.Catalog = void 0;
          var n = i(2),
            r = i(5),
            a = i(8),
            s = i(11),
            o = i(22),
            l = i(23),
            c = i(24);
          function h(e) {
            return (0, r.isDict)(e) ? e.get("D") : e;
          }
          class u {
            constructor(e, t) {
              this.pdfManager = e;
              this.xref = t;
              this._catDict = t.getCatalogObj();
              if (!(0, r.isDict)(this._catDict))
                throw new n.FormatError("Catalog object is not a dictionary.");
              this.fontCache = new r.RefSetCache();
              this.builtInCMapCache = new Map();
              this.globalImageCache = new c.GlobalImageCache();
              this.pageKidsCountCache = new r.RefSetCache();
              this.nonBlendModesSet = new r.RefSet();
            }
            get version() {
              const e = this._catDict.get("Version");
              if (!(0, r.isName)(e))
                return (0, n.shadow)(this, "version", null);
              else return (0, n.shadow)(this, "version", e.name);
            }
            get collection() {
              let e = null;
              try {
                const t = this._catDict.get("Collection");
                if ((0, r.isDict)(t) && t.size > 0) e = t;
              } catch (e) {
                if (e instanceof a.MissingDataException) throw e;
                (0, n.info)(
                  "Cannot fetch Collection entry; assuming no collection is present."
                );
              }
              return (0, n.shadow)(this, "collection", e);
            }
            get acroForm() {
              let e = null;
              try {
                const t = this._catDict.get("AcroForm");
                if ((0, r.isDict)(t) && t.size > 0) e = t;
              } catch (e) {
                if (e instanceof a.MissingDataException) throw e;
                (0, n.info)(
                  "Cannot fetch AcroForm entry; assuming no forms are present."
                );
              }
              return (0, n.shadow)(this, "acroForm", e);
            }
            get metadata() {
              const e = this._catDict.getRaw("Metadata");
              if (!(0, r.isRef)(e))
                return (0, n.shadow)(this, "metadata", null);
              const t = !(
                  this.xref.encrypt && this.xref.encrypt.encryptMetadata
                ),
                i = this.xref.fetch(e, t);
              let s;
              if (i && (0, r.isDict)(i.dict)) {
                const e = i.dict.get("Type"),
                  t = i.dict.get("Subtype");
                if ((0, r.isName)(e, "Metadata") && (0, r.isName)(t, "XML"))
                  try {
                    s = (0, n.stringToUTF8String)(
                      (0, n.bytesToString)(i.getBytes())
                    );
                  } catch (e) {
                    if (e instanceof a.MissingDataException) throw e;
                    (0, n.info)("Skipping invalid metadata.");
                  }
              }
              return (0, n.shadow)(this, "metadata", s);
            }
            get markInfo() {
              let e = null;
              try {
                e = this._readMarkInfo();
              } catch (e) {
                if (e instanceof a.MissingDataException) throw e;
                (0, n.warn)("Unable to read mark info.");
              }
              return (0, n.shadow)(this, "markInfo", e);
            }
            _readMarkInfo() {
              const e = this._catDict.get("MarkInfo");
              if (!(0, r.isDict)(e)) return null;
              const t = Object.assign(Object.create(null), {
                Marked: !1,
                UserProperties: !1,
                Suspects: !1,
              });
              for (const i in t) {
                if (!e.has(i)) continue;
                const r = e.get(i);
                if ((0, n.isBool)(r)) t[i] = r;
              }
              return t;
            }
            get toplevelPagesDict() {
              const e = this._catDict.get("Pages");
              if (!(0, r.isDict)(e))
                throw new n.FormatError("Invalid top-level pages dictionary.");
              return (0, n.shadow)(this, "toplevelPagesDict", e);
            }
            get documentOutline() {
              let e = null;
              try {
                e = this._readDocumentOutline();
              } catch (e) {
                if (e instanceof a.MissingDataException) throw e;
                (0, n.warn)("Unable to read document outline.");
              }
              return (0, n.shadow)(this, "documentOutline", e);
            }
            _readDocumentOutline() {
              let e = this._catDict.get("Outlines");
              if (!(0, r.isDict)(e)) return null;
              e = e.getRaw("First");
              if (!(0, r.isRef)(e)) return null;
              const t = { items: [] },
                i = [{ obj: e, parent: t }],
                a = new r.RefSet();
              a.put(e);
              const s = this.xref,
                o = new Uint8ClampedArray(3);
              for (; i.length > 0; ) {
                const t = i.shift(),
                  c = s.fetchIfRef(t.obj);
                if (null === c) continue;
                if (!c.has("Title"))
                  throw new n.FormatError("Invalid outline item encountered.");
                const h = { url: null, dest: null };
                u.parseDestDictionary({
                  destDict: c,
                  resultObj: h,
                  docBaseUrl: this.pdfManager.docBaseUrl,
                });
                const d = c.get("Title"),
                  f = c.get("F") || 0,
                  p = c.getArray("C"),
                  g = c.get("Count");
                let m = o;
                if (
                  Array.isArray(p) &&
                  3 === p.length &&
                  (0 !== p[0] || 0 !== p[1] || 0 !== p[2])
                )
                  m = l.ColorSpace.singletons.rgb.getRgb(p, 0);
                const v = {
                  dest: h.dest,
                  url: h.url,
                  unsafeUrl: h.unsafeUrl,
                  newWindow: h.newWindow,
                  title: (0, n.stringToPDFString)(d),
                  color: m,
                  count: Number.isInteger(g) ? g : void 0,
                  bold: !!(2 & f),
                  italic: !!(1 & f),
                  items: [],
                };
                t.parent.items.push(v);
                e = c.getRaw("First");
                if ((0, r.isRef)(e) && !a.has(e)) {
                  i.push({ obj: e, parent: v });
                  a.put(e);
                }
                e = c.getRaw("Next");
                if ((0, r.isRef)(e) && !a.has(e)) {
                  i.push({ obj: e, parent: t.parent });
                  a.put(e);
                }
              }
              return t.items.length > 0 ? t.items : null;
            }
            get permissions() {
              let e = null;
              try {
                e = this._readPermissions();
              } catch (e) {
                if (e instanceof a.MissingDataException) throw e;
                (0, n.warn)("Unable to read permissions.");
              }
              return (0, n.shadow)(this, "permissions", e);
            }
            _readPermissions() {
              const e = this.xref.trailer.get("Encrypt");
              if (!(0, r.isDict)(e)) return null;
              let t = e.get("P");
              if (!(0, n.isNum)(t)) return null;
              t += 2 ** 32;
              const i = [];
              for (const e in n.PermissionFlag) {
                const r = n.PermissionFlag[e];
                if (t & r) i.push(r);
              }
              return i;
            }
            get optionalContentConfig() {
              let e = null;
              try {
                const t = this._catDict.get("OCProperties");
                if (!t)
                  return (0, n.shadow)(this, "optionalContentConfig", null);
                const i = t.get("D");
                if (!i)
                  return (0, n.shadow)(this, "optionalContentConfig", null);
                const a = t.get("OCGs");
                if (!Array.isArray(a))
                  return (0, n.shadow)(this, "optionalContentConfig", null);
                const s = [],
                  o = [];
                for (const e of a) {
                  if (!(0, r.isRef)(e)) continue;
                  o.push(e);
                  const t = this.xref.fetchIfRef(e);
                  s.push({
                    id: e.toString(),
                    name: (0, n.isString)(t.get("Name"))
                      ? (0, n.stringToPDFString)(t.get("Name"))
                      : null,
                    intent: (0, n.isString)(t.get("Intent"))
                      ? (0, n.stringToPDFString)(t.get("Intent"))
                      : null,
                  });
                }
                e = this._readOptionalContentConfig(i, o);
                e.groups = s;
              } catch (e) {
                if (e instanceof a.MissingDataException) throw e;
                (0, n.warn)(`Unable to read optional content config: ${e}`);
              }
              return (0, n.shadow)(this, "optionalContentConfig", e);
            }
            _readOptionalContentConfig(e, t) {
              function i(e) {
                const i = [];
                if (Array.isArray(e))
                  for (const n of e)
                    if ((0, r.isRef)(n))
                      if (t.includes(n)) i.push(n.toString());
                return i;
              }
              function a(e, i = 0) {
                if (!Array.isArray(e)) return null;
                const n = [];
                for (const a of e) {
                  if ((0, r.isRef)(a) && t.includes(a)) {
                    l.put(a);
                    n.push(a.toString());
                    continue;
                  }
                  const e = s(a, i);
                  if (e) n.push(e);
                }
                if (i > 0) return n;
                const a = [];
                for (const e of t) if (!l.has(e)) a.push(e.toString());
                if (a.length) n.push({ name: null, order: a });
                return n;
              }
              function s(e, t) {
                if (++t > c) {
                  (0, n.warn)("parseNestedOrder - reached MAX_NESTED_LEVELS.");
                  return null;
                }
                const i = o.fetchIfRef(e);
                if (!Array.isArray(i)) return null;
                const r = o.fetchIfRef(i[0]);
                if ("string" != typeof r) return null;
                const s = a(i.slice(1), t);
                if (!s || !s.length) return null;
                else return { name: (0, n.stringToPDFString)(r), order: s };
              }
              const o = this.xref,
                l = new r.RefSet(),
                c = 10;
              return {
                name: (0, n.isString)(e.get("Name"))
                  ? (0, n.stringToPDFString)(e.get("Name"))
                  : null,
                creator: (0, n.isString)(e.get("Creator"))
                  ? (0, n.stringToPDFString)(e.get("Creator"))
                  : null,
                baseState: (0, r.isName)(e.get("BaseState"))
                  ? e.get("BaseState").name
                  : null,
                on: i(e.get("ON")),
                off: i(e.get("OFF")),
                order: a(e.get("Order")),
                groups: null,
              };
            }
            get numPages() {
              const e = this.toplevelPagesDict.get("Count");
              if (!Number.isInteger(e))
                throw new n.FormatError(
                  "Page count in top-level pages dictionary is not an integer."
                );
              return (0, n.shadow)(this, "numPages", e);
            }
            get destinations() {
              const e = this._readDests(),
                t = Object.create(null);
              if (e instanceof p) {
                const i = e.getAll();
                for (const e in i) t[e] = h(i[e]);
              } else if (e instanceof r.Dict)
                e.forEach(function (e, i) {
                  if (i) t[e] = h(i);
                });
              return (0, n.shadow)(this, "destinations", t);
            }
            getDestination(e) {
              const t = this._readDests();
              if (t instanceof p || t instanceof r.Dict)
                return h(t.get(e) || null);
              else return null;
            }
            _readDests() {
              const e = this._catDict.get("Names");
              if (e && e.has("Dests"))
                return new p(e.getRaw("Dests"), this.xref);
              else if (this._catDict.has("Dests"))
                return this._catDict.get("Dests");
            }
            get pageLabels() {
              let e = null;
              try {
                e = this._readPageLabels();
              } catch (e) {
                if (e instanceof a.MissingDataException) throw e;
                (0, n.warn)("Unable to read page labels.");
              }
              return (0, n.shadow)(this, "pageLabels", e);
            }
            _readPageLabels() {
              const e = this._catDict.getRaw("PageLabels");
              if (!e) return null;
              const t = new Array(this.numPages);
              let i = null,
                s = "";
              const o = new g(e, this.xref).getAll();
              let l = "",
                c = 1;
              for (let e = 0, h = this.numPages; e < h; e++) {
                if (e in o) {
                  const t = o[e];
                  if (!(0, r.isDict)(t))
                    throw new n.FormatError("PageLabel is not a dictionary.");
                  if (
                    t.has("Type") &&
                    !(0, r.isName)(t.get("Type"), "PageLabel")
                  )
                    throw new n.FormatError(
                      "Invalid type in PageLabel dictionary."
                    );
                  if (t.has("S")) {
                    const e = t.get("S");
                    if (!(0, r.isName)(e))
                      throw new n.FormatError(
                        "Invalid style in PageLabel dictionary."
                      );
                    i = e.name;
                  } else i = null;
                  if (t.has("P")) {
                    const e = t.get("P");
                    if (!(0, n.isString)(e))
                      throw new n.FormatError(
                        "Invalid prefix in PageLabel dictionary."
                      );
                    s = (0, n.stringToPDFString)(e);
                  } else s = "";
                  if (t.has("St")) {
                    const e = t.get("St");
                    if (!(Number.isInteger(e) && e >= 1))
                      throw new n.FormatError(
                        "Invalid start in PageLabel dictionary."
                      );
                    c = e;
                  } else c = 1;
                }
                switch (i) {
                  case "D":
                    l = c;
                    break;
                  case "R":
                  case "r":
                    l = (0, a.toRomanNumerals)(c, "r" === i);
                    break;
                  case "A":
                  case "a":
                    const e = 26,
                      t = 65,
                      r = 97,
                      s = "a" === i ? r : t,
                      o = c - 1,
                      h = String.fromCharCode(s + (o % e)),
                      u = [];
                    for (let t = 0, i = (o / e) | 0; t <= i; t++) u.push(h);
                    l = u.join("");
                    break;
                  default:
                    if (i)
                      throw new n.FormatError(
                        `Invalid style "${i}" in PageLabel dictionary.`
                      );
                    l = "";
                }
                t[e] = s + l;
                c++;
              }
              return t;
            }
            get pageLayout() {
              const e = this._catDict.get("PageLayout");
              let t = "";
              if ((0, r.isName)(e))
                switch (e.name) {
                  case "SinglePage":
                  case "OneColumn":
                  case "TwoColumnLeft":
                  case "TwoColumnRight":
                  case "TwoPageLeft":
                  case "TwoPageRight":
                    t = e.name;
                }
              return (0, n.shadow)(this, "pageLayout", t);
            }
            get pageMode() {
              const e = this._catDict.get("PageMode");
              let t = "UseNone";
              if ((0, r.isName)(e))
                switch (e.name) {
                  case "UseNone":
                  case "UseOutlines":
                  case "UseThumbs":
                  case "FullScreen":
                  case "UseOC":
                  case "UseAttachments":
                    t = e.name;
                }
              return (0, n.shadow)(this, "pageMode", t);
            }
            get viewerPreferences() {
              const e = {
                  HideToolbar: n.isBool,
                  HideMenubar: n.isBool,
                  HideWindowUI: n.isBool,
                  FitWindow: n.isBool,
                  CenterWindow: n.isBool,
                  DisplayDocTitle: n.isBool,
                  NonFullScreenPageMode: r.isName,
                  Direction: r.isName,
                  ViewArea: r.isName,
                  ViewClip: r.isName,
                  PrintArea: r.isName,
                  PrintClip: r.isName,
                  PrintScaling: r.isName,
                  Duplex: r.isName,
                  PickTrayByPDFSize: n.isBool,
                  PrintPageRange: Array.isArray,
                  NumCopies: Number.isInteger,
                },
                t = this._catDict.get("ViewerPreferences");
              let i = null;
              if ((0, r.isDict)(t))
                for (const r in e) {
                  if (!t.has(r)) continue;
                  const a = t.get(r);
                  if (!e[r](a)) {
                    (0, n.info)(`Bad value in ViewerPreferences for "${r}".`);
                    continue;
                  }
                  let s;
                  switch (r) {
                    case "NonFullScreenPageMode":
                      switch (a.name) {
                        case "UseNone":
                        case "UseOutlines":
                        case "UseThumbs":
                        case "UseOC":
                          s = a.name;
                          break;
                        default:
                          s = "UseNone";
                      }
                      break;
                    case "Direction":
                      switch (a.name) {
                        case "L2R":
                        case "R2L":
                          s = a.name;
                          break;
                        default:
                          s = "L2R";
                      }
                      break;
                    case "ViewArea":
                    case "ViewClip":
                    case "PrintArea":
                    case "PrintClip":
                      switch (a.name) {
                        case "MediaBox":
                        case "CropBox":
                        case "BleedBox":
                        case "TrimBox":
                        case "ArtBox":
                          s = a.name;
                          break;
                        default:
                          s = "CropBox";
                      }
                      break;
                    case "PrintScaling":
                      switch (a.name) {
                        case "None":
                        case "AppDefault":
                          s = a.name;
                          break;
                        default:
                          s = "AppDefault";
                      }
                      break;
                    case "Duplex":
                      switch (a.name) {
                        case "Simplex":
                        case "DuplexFlipShortEdge":
                        case "DuplexFlipLongEdge":
                          s = a.name;
                          break;
                        default:
                          s = "None";
                      }
                      break;
                    case "PrintPageRange":
                      if (a.length % 2 != 0) break;
                      if (
                        a.every(
                          (e, t, i) =>
                            Number.isInteger(e) &&
                            e > 0 &&
                            (0 === t || e >= i[t - 1]) &&
                            e <= this.numPages
                        )
                      )
                        s = a;
                      break;
                    case "NumCopies":
                      if (a > 0) s = a;
                      break;
                    default:
                      if ("boolean" != typeof a)
                        throw new n.FormatError(
                          `viewerPreferences - expected a boolean value for: ${r}`
                        );
                      s = a;
                  }
                  if (void 0 !== s) {
                    if (!i) i = Object.create(null);
                    i[r] = s;
                  } else
                    (0, n.info)(`Bad value in ViewerPreferences for "${r}".`);
                }
              return (0, n.shadow)(this, "viewerPreferences", i);
            }
            get openAction() {
              const e = this._catDict.get("OpenAction"),
                t = Object.create(null);
              if ((0, r.isDict)(e)) {
                const i = new r.Dict(this.xref);
                i.set("A", e);
                const n = { url: null, dest: null, action: null };
                u.parseDestDictionary({ destDict: i, resultObj: n });
                if (Array.isArray(n.dest)) t.dest = n.dest;
                else if (n.action) t.action = n.action;
              } else if (Array.isArray(e)) t.dest = e;
              return (0, n.shadow)(
                this,
                "openAction",
                (0, n.objectSize)(t) > 0 ? t : null
              );
            }
            get attachments() {
              const e = this._catDict.get("Names");
              let t = null;
              if (e && e.has("EmbeddedFiles")) {
                const i = new p(e.getRaw("EmbeddedFiles"), this.xref).getAll();
                for (const e in i) {
                  const r = new m(i[e], this.xref);
                  if (!t) t = Object.create(null);
                  t[(0, n.stringToPDFString)(e)] = r.serializable;
                }
              }
              return (0, n.shadow)(this, "attachments", t);
            }
            _collectJavaScript() {
              const e = this._catDict.get("Names");
              let t = null;
              function i(e, i) {
                const a = i.get("S");
                if (!(0, r.isName)(a, "JavaScript")) return;
                let s = i.get("JS");
                if ((0, r.isStream)(s)) s = (0, n.bytesToString)(s.getBytes());
                else if (!(0, n.isString)(s)) return;
                if (null === t) t = Object.create(null);
                t[e] = (0, n.stringToPDFString)(s);
              }
              if (e && e.has("JavaScript")) {
                const t = new p(e.getRaw("JavaScript"), this.xref).getAll();
                for (const e in t) {
                  const n = t[e];
                  if ((0, r.isDict)(n)) i(e, n);
                }
              }
              const a = this._catDict.get("OpenAction");
              if ((0, r.isDict)(a) && (0, r.isName)(a.get("S"), "JavaScript"))
                i("OpenAction", a);
              return t;
            }
            get javaScript() {
              const e = this._collectJavaScript();
              return (0, n.shadow)(
                this,
                "javaScript",
                e ? Object.values(e) : null
              );
            }
            get jsActions() {
              const e = this._collectJavaScript();
              let t = (0, a.collectActions)(
                this.xref,
                this._catDict,
                n.DocumentActionEventType
              );
              if (!t && e) t = Object.create(null);
              if (t && e)
                for (const [i, n] of Object.entries(e))
                  if (i in t) t[i].push(n);
                  else t[i] = [n];
              return (0, n.shadow)(this, "jsActions", t);
            }
            fontFallback(e, t) {
              const i = [];
              this.fontCache.forEach(function (e) {
                i.push(e);
              });
              return Promise.all(i).then((i) => {
                for (const n of i)
                  if (n.loadedName === e) {
                    n.fallback(t);
                    return;
                  }
              });
            }
            cleanup(e = !1) {
              (0, r.clearPrimitiveCaches)();
              this.globalImageCache.clear(e);
              this.pageKidsCountCache.clear();
              this.nonBlendModesSet.clear();
              const t = [];
              this.fontCache.forEach(function (e) {
                t.push(e);
              });
              return Promise.all(t).then((e) => {
                for (const { dict: t } of e) delete t.cacheKey;
                this.fontCache.clear();
                this.builtInCMapCache.clear();
              });
            }
            getPageDict(e) {
              const t = (0, n.createPromiseCapability)(),
                i = [this._catDict.getRaw("Pages")],
                a = new r.RefSet(),
                s = this.xref,
                o = this.pageKidsCountCache;
              let l,
                c = 0;
              !(function h() {
                for (; i.length; ) {
                  const u = i.pop();
                  if ((0, r.isRef)(u)) {
                    l = o.get(u);
                    if (l > 0 && c + l < e) {
                      c += l;
                      continue;
                    }
                    if (a.has(u)) {
                      t.reject(
                        new n.FormatError(
                          "Pages tree contains circular reference."
                        )
                      );
                      return;
                    }
                    a.put(u);
                    s.fetchAsync(u).then(function (n) {
                      if (
                        !(
                          (0, r.isDict)(n, "Page") ||
                          ((0, r.isDict)(n) && !n.has("Kids"))
                        )
                      ) {
                        i.push(n);
                        h();
                      } else if (e === c) {
                        if (u && !o.has(u)) o.put(u, 1);
                        t.resolve([n, u]);
                      } else {
                        c++;
                        h();
                      }
                    }, t.reject);
                    return;
                  }
                  if (!(0, r.isDict)(u)) {
                    t.reject(
                      new n.FormatError(
                        "Page dictionary kid reference points to wrong type of object."
                      )
                    );
                    return;
                  }
                  l = u.get("Count");
                  if (Number.isInteger(l) && l >= 0) {
                    const t = u.objId;
                    if (t && !o.has(t)) o.put(t, l);
                    if (c + l <= e) {
                      c += l;
                      continue;
                    }
                  }
                  const d = u.get("Kids");
                  if (!Array.isArray(d)) {
                    if (
                      (0, r.isName)(u.get("Type"), "Page") ||
                      (!u.has("Type") && u.has("Contents"))
                    ) {
                      if (c === e) {
                        t.resolve([u, null]);
                        return;
                      }
                      c++;
                      continue;
                    }
                    t.reject(
                      new n.FormatError(
                        "Page dictionary kids object is not an array."
                      )
                    );
                    return;
                  }
                  for (let e = d.length - 1; e >= 0; e--) i.push(d[e]);
                }
                t.reject(new Error(`Page index ${e} not found.`));
              })();
              return t.promise;
            }
            getPageIndex(e) {
              const t = this.xref;
              let i = 0;
              return (function a(s) {
                return (function (i) {
                  let a,
                    s = 0;
                  return t
                    .fetchAsync(i)
                    .then(function (t) {
                      if (
                        (0, r.isRefsEqual)(i, e) &&
                        !(0, r.isDict)(t, "Page") &&
                        (!(0, r.isDict)(t) ||
                          t.has("Type") ||
                          !t.has("Contents"))
                      )
                        throw new n.FormatError(
                          "The reference does not point to a /Page dictionary."
                        );
                      if (!t) return null;
                      if (!(0, r.isDict)(t))
                        throw new n.FormatError("Node must be a dictionary.");
                      a = t.getRaw("Parent");
                      return t.getAsync("Parent");
                    })
                    .then(function (e) {
                      if (!e) return null;
                      if (!(0, r.isDict)(e))
                        throw new n.FormatError("Parent must be a dictionary.");
                      return e.getAsync("Kids");
                    })
                    .then(function (e) {
                      if (!e) return null;
                      const o = [];
                      let l = !1;
                      for (let a = 0, c = e.length; a < c; a++) {
                        const c = e[a];
                        if (!(0, r.isRef)(c))
                          throw new n.FormatError("Kid must be a reference.");
                        if ((0, r.isRefsEqual)(c, i)) {
                          l = !0;
                          break;
                        }
                        o.push(
                          t.fetchAsync(c).then(function (e) {
                            if (!(0, r.isDict)(e))
                              throw new n.FormatError(
                                "Kid node must be a dictionary."
                              );
                            if (e.has("Count")) s += e.get("Count");
                            else s++;
                          })
                        );
                      }
                      if (!l)
                        throw new n.FormatError(
                          "Kid reference not found in parent's kids."
                        );
                      return Promise.all(o).then(function () {
                        return [s, a];
                      });
                    });
                })(s).then(function (e) {
                  if (!e) return i;
                  const [t, n] = e;
                  i += t;
                  return a(n);
                });
              })(e);
            }
            static parseDestDictionary(e) {
              const t = e.destDict;
              if (!(0, r.isDict)(t)) {
                (0, n.warn)(
                  "parseDestDictionary: `destDict` must be a dictionary."
                );
                return;
              }
              const i = e.resultObj;
              if ("object" != typeof i) {
                (0, n.warn)(
                  "parseDestDictionary: `resultObj` must be an object."
                );
                return;
              }
              const a = e.docBaseUrl || null;
              let s,
                o,
                l = t.get("A");
              if (!(0, r.isDict)(l))
                if (t.has("Dest")) l = t.get("Dest");
                else {
                  l = t.get("AA");
                  if ((0, r.isDict)(l))
                    if (l.has("D")) l = l.get("D");
                    else if (l.has("U")) l = l.get("U");
                }
              if ((0, r.isDict)(l)) {
                const e = l.get("S");
                if (!(0, r.isName)(e)) {
                  (0, n.warn)(
                    "parseDestDictionary: Invalid type in Action dictionary."
                  );
                  return;
                }
                const t = e.name;
                switch (t) {
                  case "URI":
                    s = l.get("URI");
                    if ((0, r.isName)(s)) s = "/" + s.name;
                    else if ((0, n.isString)(s))
                      s = (function (e) {
                        return e.startsWith("www.") ? `http://${e}` : e;
                      })(s);
                    break;
                  case "GoTo":
                    o = l.get("D");
                    break;
                  case "Launch":
                  case "GoToR":
                    const e = l.get("F");
                    if ((0, r.isDict)(e)) s = e.get("F") || null;
                    else if ((0, n.isString)(e)) s = e;
                    let a = l.get("D");
                    if (a) {
                      if ((0, r.isName)(a)) a = a.name;
                      if ((0, n.isString)(s)) {
                        const e = s.split("#")[0];
                        if ((0, n.isString)(a)) s = e + "#" + a;
                        else if (Array.isArray(a))
                          s = e + "#" + JSON.stringify(a);
                      }
                    }
                    const c = l.get("NewWindow");
                    if ((0, n.isBool)(c)) i.newWindow = c;
                    break;
                  case "Named":
                    const h = l.get("N");
                    if ((0, r.isName)(h)) i.action = h.name;
                    break;
                  case "JavaScript":
                    const u = l.get("JS");
                    let d;
                    if ((0, r.isStream)(u))
                      d = (0, n.bytesToString)(u.getBytes());
                    else if ((0, n.isString)(u)) d = u;
                    if (d) {
                      const e = new RegExp(
                        "^\\s*(" +
                          ["app.launchURL", "window.open"]
                            .join("|")
                            .split(".")
                            .join("\\.") +
                          ")\\((?:'|\")([^'\"]*)(?:'|\")(?:,\\s*(\\w+)\\)|\\))",
                        "i"
                      ).exec((0, n.stringToPDFString)(d));
                      if (e && e[2]) {
                        s = e[2];
                        if ("true" === e[3] && "app.launchURL" === e[1])
                          i.newWindow = !0;
                        break;
                      }
                    }
                  default:
                    (0, n.warn)(
                      `parseDestDictionary: unsupported action type "${t}".`
                    );
                }
              } else if (t.has("Dest")) o = t.get("Dest");
              if ((0, n.isString)(s)) {
                s = (function (e) {
                  try {
                    return (0, n.stringToUTF8String)(e);
                  } catch (t) {
                    return e;
                  }
                })(s);
                const e = (0, n.createValidAbsoluteUrl)(s, a);
                if (e) i.url = e.href;
                i.unsafeUrl = s;
              }
              if (o) {
                if ((0, r.isName)(o)) o = o.name;
                if ((0, n.isString)(o) || Array.isArray(o)) i.dest = o;
              }
            }
          }
          t.Catalog = u;
          var d = (function () {
            function e(e, t) {
              this.stream = e;
              this.pdfManager = t;
              this.entries = [];
              this.xrefstms = Object.create(null);
              this._cacheMap = new Map();
              this.stats = {
                streamTypes: Object.create(null),
                fontTypes: Object.create(null),
              };
              this._newRefNum = null;
            }
            e.prototype = {
              getNewRef: function () {
                if (null === this._newRefNum)
                  this._newRefNum = this.entries.length;
                return r.Ref.get(this._newRefNum++, 0);
              },
              resetNewRef: function () {
                this._newRefNum = null;
              },
              setStartXRef: function (e) {
                this.startXRefQueue = [e];
              },
              parse: function (e) {
                var t;
                if (!e) t = this.readXRef();
                else {
                  (0, n.warn)("Indexing all PDF objects");
                  t = this.indexObjects();
                }
                t.assignXref(this);
                this.trailer = t;
                let i, s;
                try {
                  i = t.get("Encrypt");
                } catch (e) {
                  if (e instanceof a.MissingDataException) throw e;
                  (0, n.warn)(
                    `XRef.parse - Invalid "Encrypt" reference: "${e}".`
                  );
                }
                if ((0, r.isDict)(i)) {
                  var l = t.get("ID"),
                    c = l && l.length ? l[0] : "";
                  i.suppressEncryption = !0;
                  this.encrypt = new o.CipherTransformFactory(
                    i,
                    c,
                    this.pdfManager.password
                  );
                }
                try {
                  s = t.get("Root");
                } catch (e) {
                  if (e instanceof a.MissingDataException) throw e;
                  (0, n.warn)(`XRef.parse - Invalid "Root" reference: "${e}".`);
                }
                if ((0, r.isDict)(s) && s.has("Pages")) this.root = s;
                else {
                  if (!e) throw new a.XRefParseException();
                  throw new n.FormatError("Invalid root reference");
                }
              },
              processXRefTable: function (e) {
                if (!("tableState" in this))
                  this.tableState = {
                    entryNum: 0,
                    streamPos: e.lexer.stream.pos,
                    parserBuf1: e.buf1,
                    parserBuf2: e.buf2,
                  };
                var t = this.readXRefTable(e);
                if (!(0, r.isCmd)(t, "trailer"))
                  throw new n.FormatError(
                    "Invalid XRef table: could not find trailer dictionary"
                  );
                var i = e.getObj();
                if (!(0, r.isDict)(i) && i.dict) i = i.dict;
                if (!(0, r.isDict)(i))
                  throw new n.FormatError(
                    "Invalid XRef table: could not parse trailer dictionary"
                  );
                delete this.tableState;
                return i;
              },
              readXRefTable: function (e) {
                var t,
                  i = e.lexer.stream,
                  a = this.tableState;
                i.pos = a.streamPos;
                e.buf1 = a.parserBuf1;
                e.buf2 = a.parserBuf2;
                for (;;) {
                  if (!("firstEntryNum" in a) || !("entryCount" in a)) {
                    if ((0, r.isCmd)((t = e.getObj()), "trailer")) break;
                    a.firstEntryNum = t;
                    a.entryCount = e.getObj();
                  }
                  var s = a.firstEntryNum,
                    o = a.entryCount;
                  if (!Number.isInteger(s) || !Number.isInteger(o))
                    throw new n.FormatError(
                      "Invalid XRef table: wrong types in subsection header"
                    );
                  for (var l = a.entryNum; l < o; l++) {
                    a.streamPos = i.pos;
                    a.entryNum = l;
                    a.parserBuf1 = e.buf1;
                    a.parserBuf2 = e.buf2;
                    var c = {};
                    c.offset = e.getObj();
                    c.gen = e.getObj();
                    var h = e.getObj();
                    if (h instanceof r.Cmd)
                      switch (h.cmd) {
                        case "f":
                          c.free = !0;
                          break;
                        case "n":
                          c.uncompressed = !0;
                      }
                    if (
                      !Number.isInteger(c.offset) ||
                      !Number.isInteger(c.gen) ||
                      (!c.free && !c.uncompressed)
                    )
                      throw new n.FormatError(
                        `Invalid entry in XRef subsection: ${s}, ${o}`
                      );
                    if (0 === l && c.free && 1 === s) s = 0;
                    if (!this.entries[l + s]) this.entries[l + s] = c;
                  }
                  a.entryNum = 0;
                  a.streamPos = i.pos;
                  a.parserBuf1 = e.buf1;
                  a.parserBuf2 = e.buf2;
                  delete a.firstEntryNum;
                  delete a.entryCount;
                }
                if (this.entries[0] && !this.entries[0].free)
                  throw new n.FormatError(
                    "Invalid XRef table: unexpected first object"
                  );
                return t;
              },
              processXRefStream: function (e) {
                if (!("streamState" in this)) {
                  var t = e.dict,
                    i = t.get("W"),
                    n = t.get("Index");
                  if (!n) n = [0, t.get("Size")];
                  this.streamState = {
                    entryRanges: n,
                    byteWidths: i,
                    entryNum: 0,
                    streamPos: e.pos,
                  };
                }
                this.readXRefStream(e);
                delete this.streamState;
                return e.dict;
              },
              readXRefStream: function (e) {
                var t,
                  i,
                  r = this.streamState;
                e.pos = r.streamPos;
                for (
                  var a = r.byteWidths,
                    s = a[0],
                    o = a[1],
                    l = a[2],
                    c = r.entryRanges;
                  c.length > 0;

                ) {
                  var h = c[0],
                    u = c[1];
                  if (!Number.isInteger(h) || !Number.isInteger(u))
                    throw new n.FormatError(
                      `Invalid XRef range fields: ${h}, ${u}`
                    );
                  if (
                    !Number.isInteger(s) ||
                    !Number.isInteger(o) ||
                    !Number.isInteger(l)
                  )
                    throw new n.FormatError(
                      `Invalid XRef entry fields length: ${h}, ${u}`
                    );
                  for (t = r.entryNum; t < u; ++t) {
                    r.entryNum = t;
                    r.streamPos = e.pos;
                    var d = 0,
                      f = 0,
                      p = 0;
                    for (i = 0; i < s; ++i) d = (d << 8) | e.getByte();
                    if (0 === s) d = 1;
                    for (i = 0; i < o; ++i) f = (f << 8) | e.getByte();
                    for (i = 0; i < l; ++i) p = (p << 8) | e.getByte();
                    var g = {};
                    g.offset = f;
                    g.gen = p;
                    switch (d) {
                      case 0:
                        g.free = !0;
                        break;
                      case 1:
                        g.uncompressed = !0;
                        break;
                      case 2:
                        break;
                      default:
                        throw new n.FormatError(
                          `Invalid XRef entry type: ${d}`
                        );
                    }
                    if (!this.entries[h + t]) this.entries[h + t] = g;
                  }
                  r.entryNum = 0;
                  r.streamPos = e.pos;
                  c.splice(0, 2);
                }
              },
              indexObjects: function () {
                function e(e, t) {
                  for (
                    var i = "", n = e[t];
                    10 !== n && 13 !== n && 60 !== n && !(++t >= e.length);

                  ) {
                    i += String.fromCharCode(n);
                    n = e[t];
                  }
                  return i;
                }
                function t(e, t, i) {
                  for (var n = i.length, r = e.length, a = 0; t < r; ) {
                    for (var s = 0; s < n && e[t + s] === i[s]; ) ++s;
                    if (s >= n) break;
                    t++;
                    a++;
                  }
                  return a;
                }
                var i = /^(\d+)\s+(\d+)\s+obj\b/;
                const o = /\bendobj[\b\s]$/,
                  l = /\s+(\d+\s+\d+\s+obj[\b\s<])$/;
                var c = new Uint8Array([116, 114, 97, 105, 108, 101, 114]),
                  h = new Uint8Array([
                    115, 116, 97, 114, 116, 120, 114, 101, 102,
                  ]);
                const u = new Uint8Array([111, 98, 106]);
                var d = new Uint8Array([47, 88, 82, 101, 102]);
                this.entries.length = 0;
                var f = this.stream;
                f.pos = 0;
                for (
                  var p = f.getBytes(),
                    g = f.start,
                    m = p.length,
                    v = [],
                    b = [];
                  g < m;

                ) {
                  var y = p[g];
                  if (9 !== y && 10 !== y && 13 !== y && 32 !== y)
                    if (37 !== y) {
                      var w,
                        x = e(p, g);
                      if (
                        x.startsWith("xref") &&
                        (4 === x.length || /\s/.test(x[4]))
                      ) {
                        g += t(p, g, c);
                        v.push(g);
                        g += t(p, g, h);
                      } else if ((w = i.exec(x))) {
                        const e = 0 | w[1],
                          i = 0 | w[2];
                        if (!this.entries[e] || this.entries[e].gen === i)
                          this.entries[e] = {
                            offset: g - f.start,
                            gen: i,
                            uncompressed: !0,
                          };
                        let r,
                          a = g + x.length;
                        for (; a < p.length; ) {
                          const e = a + t(p, a, u) + 4;
                          r = e - g;
                          const i = Math.max(e - 25, a),
                            s = (0, n.bytesToString)(p.subarray(i, e));
                          if (o.test(s)) break;
                          else {
                            const e = l.exec(s);
                            if (e && e[1]) {
                              (0, n.warn)(
                                'indexObjects: Found new "obj" inside of another "obj", caused by missing "endobj" -- trying to recover.'
                              );
                              r -= e[1].length;
                              break;
                            }
                          }
                          a = e;
                        }
                        const s = p.subarray(g, g + r);
                        var k = t(s, 0, d);
                        if (k < r && s[k + 5] < 64) {
                          b.push(g - f.start);
                          this.xrefstms[g - f.start] = 1;
                        }
                        g += r;
                      } else if (
                        x.startsWith("trailer") &&
                        (7 === x.length || /\s/.test(x[7]))
                      ) {
                        v.push(g);
                        g += t(p, g, h);
                      } else g += x.length + 1;
                    } else
                      do {
                        if (++g >= m) break;
                        y = p[g];
                      } while (10 !== y && 13 !== y);
                  else ++g;
                }
                for (let e = 0, t = b.length; e < t; ++e) {
                  this.startXRefQueue.push(b[e]);
                  this.readXRef(!0);
                }
                let C;
                for (let e = 0, t = v.length; e < t; ++e) {
                  f.pos = v[e];
                  const t = new s.Parser({
                    lexer: new s.Lexer(f),
                    xref: this,
                    allowStreams: !0,
                    recoveryMode: !0,
                  });
                  var S = t.getObj();
                  if (!(0, r.isCmd)(S, "trailer")) continue;
                  const i = t.getObj();
                  if ((0, r.isDict)(i)) {
                    try {
                      const e = i.get("Root");
                      if (!(e instanceof r.Dict)) continue;
                      const t = e.get("Pages");
                      if (!(t instanceof r.Dict)) continue;
                      const n = t.get("Count");
                      if (!Number.isInteger(n)) continue;
                    } catch (e) {
                      if (e instanceof a.MissingDataException) throw e;
                      continue;
                    }
                    if (i.has("ID")) return i;
                    C = i;
                  }
                }
                if (C) return C;
                throw new n.InvalidPDFException("Invalid PDF structure.");
              },
              readXRef: function (e) {
                var t = this.stream;
                const i = Object.create(null);
                try {
                  for (; this.startXRefQueue.length; ) {
                    var o = this.startXRefQueue[0];
                    if (i[o]) {
                      (0, n.warn)(
                        "readXRef - skipping XRef table since it was already parsed."
                      );
                      this.startXRefQueue.shift();
                      continue;
                    }
                    i[o] = !0;
                    t.pos = o + t.start;
                    const e = new s.Parser({
                      lexer: new s.Lexer(t),
                      xref: this,
                      allowStreams: !0,
                    });
                    var l,
                      c = e.getObj();
                    if ((0, r.isCmd)(c, "xref")) {
                      l = this.processXRefTable(e);
                      if (!this.topDict) this.topDict = l;
                      c = l.get("XRefStm");
                      if (Number.isInteger(c)) {
                        var h = c;
                        if (!(h in this.xrefstms)) {
                          this.xrefstms[h] = 1;
                          this.startXRefQueue.push(h);
                        }
                      }
                    } else if (Number.isInteger(c)) {
                      if (
                        !Number.isInteger(e.getObj()) ||
                        !(0, r.isCmd)(e.getObj(), "obj") ||
                        !(0, r.isStream)((c = e.getObj()))
                      )
                        throw new n.FormatError("Invalid XRef stream");
                      l = this.processXRefStream(c);
                      if (!this.topDict) this.topDict = l;
                      if (!l)
                        throw new n.FormatError("Failed to read XRef stream");
                    } else
                      throw new n.FormatError("Invalid XRef stream header");
                    c = l.get("Prev");
                    if (Number.isInteger(c)) this.startXRefQueue.push(c);
                    else if ((0, r.isRef)(c)) this.startXRefQueue.push(c.num);
                    this.startXRefQueue.shift();
                  }
                  return this.topDict;
                } catch (e) {
                  if (e instanceof a.MissingDataException) throw e;
                  (0, n.info)("(while reading XRef): " + e);
                }
                if (!e) throw new a.XRefParseException();
              },
              getEntry: function (e) {
                var t = this.entries[e];
                if (t && !t.free && t.offset) return t;
                else return null;
              },
              fetchIfRef: function (e, t) {
                if (e instanceof r.Ref) return this.fetch(e, t);
                else return e;
              },
              fetch: function (e, t) {
                if (!(e instanceof r.Ref))
                  throw new Error("ref object is not a reference");
                const i = e.num,
                  n = this._cacheMap.get(i);
                if (void 0 !== n) {
                  if (n instanceof r.Dict && !n.objId) n.objId = e.toString();
                  return n;
                }
                let a = this.getEntry(i);
                if (null === a) {
                  this._cacheMap.set(i, a);
                  return a;
                }
                if (a.uncompressed) a = this.fetchUncompressed(e, a, t);
                else a = this.fetchCompressed(e, a, t);
                if ((0, r.isDict)(a)) a.objId = e.toString();
                else if ((0, r.isStream)(a)) a.dict.objId = e.toString();
                return a;
              },
              fetchUncompressed(e, t, i = !1) {
                var n = e.gen,
                  o = e.num;
                if (t.gen !== n)
                  throw new a.XRefEntryException(
                    `Inconsistent generation in XRef: ${e}`
                  );
                var l = this.stream.makeSubStream(t.offset + this.stream.start);
                const c = new s.Parser({
                  lexer: new s.Lexer(l),
                  xref: this,
                  allowStreams: !0,
                });
                var h = c.getObj(),
                  u = c.getObj(),
                  d = c.getObj();
                if (h !== o || u !== n || !(d instanceof r.Cmd))
                  throw new a.XRefEntryException(
                    `Bad (uncompressed) XRef entry: ${e}`
                  );
                if ("obj" !== d.cmd) {
                  if (d.cmd.startsWith("obj")) {
                    o = parseInt(d.cmd.substring(3), 10);
                    if (!Number.isNaN(o)) return o;
                  }
                  throw new a.XRefEntryException(
                    `Bad (uncompressed) XRef entry: ${e}`
                  );
                }
                if (this.encrypt && !i)
                  t = c.getObj(this.encrypt.createCipherTransform(o, n));
                else t = c.getObj();
                if (!(0, r.isStream)(t)) this._cacheMap.set(o, t);
                return t;
              },
              fetchCompressed(e, t, i = !1) {
                const o = t.offset,
                  l = this.fetch(r.Ref.get(o, 0));
                if (!(0, r.isStream)(l))
                  throw new n.FormatError("bad ObjStm stream");
                const c = l.dict.get("First"),
                  h = l.dict.get("N");
                if (!Number.isInteger(c) || !Number.isInteger(h))
                  throw new n.FormatError(
                    "invalid first and n parameters for ObjStm stream"
                  );
                const u = new s.Parser({
                    lexer: new s.Lexer(l),
                    xref: this,
                    allowStreams: !0,
                  }),
                  d = new Array(h);
                for (let e = 0; e < h; ++e) {
                  const t = u.getObj();
                  if (!Number.isInteger(t))
                    throw new n.FormatError(
                      `invalid object number in the ObjStm stream: ${t}`
                    );
                  const i = u.getObj();
                  if (!Number.isInteger(i))
                    throw new n.FormatError(
                      `invalid object offset in the ObjStm stream: ${i}`
                    );
                  d[e] = t;
                }
                const f = new Array(h);
                for (let e = 0; e < h; ++e) {
                  const t = u.getObj();
                  f[e] = t;
                  if (u.buf1 instanceof r.Cmd && "endobj" === u.buf1.cmd)
                    u.shift();
                  if ((0, r.isStream)(t)) continue;
                  const i = d[e],
                    n = this.entries[i];
                  if (n && n.offset === o && n.gen === e)
                    this._cacheMap.set(i, t);
                }
                if (void 0 === (t = f[t.gen]))
                  throw new a.XRefEntryException(
                    `Bad (compressed) XRef entry: ${e}`
                  );
                return t;
              },
              async fetchIfRefAsync(e, t) {
                if (e instanceof r.Ref) return this.fetchAsync(e, t);
                else return e;
              },
              async fetchAsync(e, t) {
                try {
                  return this.fetch(e, t);
                } catch (i) {
                  if (!(i instanceof a.MissingDataException)) throw i;
                  await this.pdfManager.requestRange(i.begin, i.end);
                  return this.fetchAsync(e, t);
                }
              },
              getCatalogObj: function () {
                return this.root;
              },
            };
            return e;
          })();
          t.XRef = d;
          class f {
            constructor(e, t, i) {
              if (this.constructor === f)
                (0, n.unreachable)("Cannot initialize NameOrNumberTree.");
              this.root = e;
              this.xref = t;
              this._type = i;
            }
            getAll() {
              const e = Object.create(null);
              if (!this.root) return e;
              const t = this.xref,
                i = new r.RefSet();
              i.put(this.root);
              const a = [this.root];
              for (; a.length > 0; ) {
                const s = t.fetchIfRef(a.shift());
                if (!(0, r.isDict)(s)) continue;
                if (s.has("Kids")) {
                  const e = s.get("Kids");
                  for (let t = 0, r = e.length; t < r; t++) {
                    const r = e[t];
                    if (i.has(r))
                      throw new n.FormatError(
                        `Duplicate entry in "${this._type}" tree.`
                      );
                    a.push(r);
                    i.put(r);
                  }
                  continue;
                }
                const o = s.get(this._type);
                if (Array.isArray(o))
                  for (let i = 0, n = o.length; i < n; i += 2)
                    e[t.fetchIfRef(o[i])] = t.fetchIfRef(o[i + 1]);
              }
              return e;
            }
            get(e) {
              if (!this.root) return null;
              const t = this.xref;
              let i = t.fetchIfRef(this.root),
                r = 0;
              for (; i.has("Kids"); ) {
                if (++r > 10) {
                  (0, n.warn)(
                    `Search depth limit reached for "${this._type}" tree.`
                  );
                  return null;
                }
                const a = i.get("Kids");
                if (!Array.isArray(a)) return null;
                let s = 0,
                  o = a.length - 1;
                for (; s <= o; ) {
                  const n = (s + o) >> 1,
                    r = t.fetchIfRef(a[n]).get("Limits");
                  if (e < t.fetchIfRef(r[0])) o = n - 1;
                  else if (e > t.fetchIfRef(r[1])) s = n + 1;
                  else {
                    i = t.fetchIfRef(a[n]);
                    break;
                  }
                }
                if (s > o) return null;
              }
              const a = i.get(this._type);
              if (Array.isArray(a)) {
                let i = 0,
                  r = a.length - 2;
                for (; i <= r; ) {
                  const n = (i + r) >> 1,
                    s = n + (1 & n),
                    o = t.fetchIfRef(a[s]);
                  if (e < o) r = s - 2;
                  else if (e > o) i = s + 2;
                  else return t.fetchIfRef(a[s + 1]);
                }
                (0, n.info)(
                  `Falling back to an exhaustive search, for key "${e}", in "${this._type}" tree.`
                );
                for (let i = 0, r = a.length; i < r; i += 2)
                  if (t.fetchIfRef(a[i]) === e) {
                    (0, n.warn)(
                      `The "${e}" key was found at an incorrect, i.e. out-of-order, position in "${this._type}" tree.`
                    );
                    return t.fetchIfRef(a[i + 1]);
                  }
              }
              return null;
            }
          }
          class p extends f {
            constructor(e, t) {
              super(e, t, "Names");
            }
          }
          class g extends f {
            constructor(e, t) {
              super(e, t, "Nums");
            }
          }
          var m = (function () {
            function e(e, t) {
              if (e && (0, r.isDict)(e)) {
                this.xref = t;
                this.root = e;
                if (e.has("FS")) this.fs = e.get("FS");
                this.description = e.has("Desc")
                  ? (0, n.stringToPDFString)(e.get("Desc"))
                  : "";
                if (e.has("RF"))
                  (0, n.warn)("Related file specifications are not supported");
                this.contentAvailable = !0;
                if (!e.has("EF")) {
                  this.contentAvailable = !1;
                  (0, n.warn)(
                    "Non-embedded file specifications are not supported"
                  );
                }
              }
            }
            function t(e) {
              if (e.has("UF")) return e.get("UF");
              else if (e.has("F")) return e.get("F");
              else if (e.has("Unix")) return e.get("Unix");
              else if (e.has("Mac")) return e.get("Mac");
              else if (e.has("DOS")) return e.get("DOS");
              return null;
            }
            e.prototype = {
              get filename() {
                if (!this._filename && this.root) {
                  var e = t(this.root) || "unnamed";
                  this._filename = (0, n.stringToPDFString)(e)
                    .replace(/\\\\/g, "\\")
                    .replace(/\\\//g, "/")
                    .replace(/\\/g, "/");
                }
                return this._filename;
              },
              get content() {
                if (!this.contentAvailable) return null;
                if (!this.contentRef && this.root)
                  this.contentRef = t(this.root.get("EF"));
                var e = null;
                if (this.contentRef) {
                  var i = this.xref.fetchIfRef(this.contentRef);
                  if (i && (0, r.isStream)(i)) e = i.getBytes();
                  else
                    (0, n.warn)(
                      "Embedded file specification points to non-existing/invalid content"
                    );
                } else
                  (0, n.warn)(
                    "Embedded file specification does not have a content"
                  );
                return e;
              },
              get serializable() {
                return { filename: this.filename, content: this.content };
              },
            };
            return e;
          })();
          t.FileSpec = m;
          const v = (function () {
            function e(e, t) {
              if (e instanceof r.Dict) e = e.getRawValues();
              else if ((0, r.isStream)(e)) e = e.dict.getRawValues();
              else if (!Array.isArray(e)) return;
              for (const n of e)
                if (
                  (i = n) instanceof r.Ref ||
                  i instanceof r.Dict ||
                  Array.isArray(i) ||
                  (0, r.isStream)(i)
                )
                  t.push(n);
              var i;
            }
            function t(e, t, i) {
              this.dict = e;
              this.keys = t;
              this.xref = i;
              this.refSet = null;
            }
            t.prototype = {
              async load() {
                if (
                  !this.xref.stream.allChunksLoaded ||
                  this.xref.stream.allChunksLoaded()
                )
                  return;
                const { keys: e, dict: t } = this;
                this.refSet = new r.RefSet();
                const i = [];
                for (let n = 0, r = e.length; n < r; n++) {
                  const r = t.getRaw(e[n]);
                  if (void 0 !== r) i.push(r);
                }
                return this._walk(i);
              },
              async _walk(t) {
                const i = [],
                  n = [];
                for (; t.length; ) {
                  let s = t.pop();
                  if (s instanceof r.Ref) {
                    if (this.refSet.has(s)) continue;
                    try {
                      this.refSet.put(s);
                      s = this.xref.fetch(s);
                    } catch (e) {
                      if (!(e instanceof a.MissingDataException)) throw e;
                      i.push(s);
                      n.push({ begin: e.begin, end: e.end });
                    }
                  }
                  if (s && s.getBaseStreams) {
                    const e = s.getBaseStreams();
                    let t = !1;
                    for (let i = 0, r = e.length; i < r; i++) {
                      const r = e[i];
                      if (r.allChunksLoaded && !r.allChunksLoaded()) {
                        t = !0;
                        n.push({ begin: r.start, end: r.end });
                      }
                    }
                    if (t) i.push(s);
                  }
                  e(s, t);
                }
                if (n.length) {
                  await this.xref.stream.manager.requestRanges(n);
                  for (let e = 0, t = i.length; e < t; e++) {
                    const t = i[e];
                    if (t instanceof r.Ref) this.refSet.remove(t);
                  }
                  return this._walk(i);
                }
                this.refSet = null;
              },
            };
            return t;
          })();
          t.ObjectLoader = v;
        },
        (e, t, i) => {
          Object.defineProperty(t, "__esModule", { value: !0 });
          t.Parser = t.Linearization = t.Lexer = void 0;
          var n = i(12),
            r = i(2),
            a = i(5),
            s = i(8),
            o = i(13),
            l = i(15),
            c = i(18),
            h = i(20);
          function u(e) {
            const t = e.length;
            let i = 1,
              n = 0;
            for (let r = 0; r < t; ++r) {
              i += 255 & e[r];
              n += i;
            }
            return (n % 65521 << 16) | i % 65521;
          }
          class d {
            constructor({
              lexer: e,
              xref: t,
              allowStreams: i = !1,
              recoveryMode: n = !1,
            }) {
              this.lexer = e;
              this.xref = t;
              this.allowStreams = i;
              this.recoveryMode = n;
              this.imageCache = Object.create(null);
              this.refill();
            }
            refill() {
              this.buf1 = this.lexer.getObj();
              this.buf2 = this.lexer.getObj();
            }
            shift() {
              if (this.buf2 instanceof a.Cmd && "ID" === this.buf2.cmd) {
                this.buf1 = this.buf2;
                this.buf2 = null;
              } else {
                this.buf1 = this.buf2;
                this.buf2 = this.lexer.getObj();
              }
            }
            tryShift() {
              try {
                this.shift();
                return !0;
              } catch (e) {
                if (e instanceof s.MissingDataException) throw e;
                return !1;
              }
            }
            getObj(e = null) {
              const t = this.buf1;
              this.shift();
              if (t instanceof a.Cmd)
                switch (t.cmd) {
                  case "BI":
                    return this.makeInlineImage(e);
                  case "[":
                    const i = [];
                    for (
                      ;
                      !(0, a.isCmd)(this.buf1, "]") && !(0, a.isEOF)(this.buf1);

                    )
                      i.push(this.getObj(e));
                    if ((0, a.isEOF)(this.buf1)) {
                      if (!this.recoveryMode)
                        throw new r.FormatError("End of file inside array");
                      return i;
                    }
                    this.shift();
                    return i;
                  case "<<":
                    const n = new a.Dict(this.xref);
                    for (
                      ;
                      !(0, a.isCmd)(this.buf1, ">>") &&
                      !(0, a.isEOF)(this.buf1);

                    ) {
                      if (!(0, a.isName)(this.buf1)) {
                        (0, r.info)(
                          "Malformed dictionary: key must be a name object"
                        );
                        this.shift();
                        continue;
                      }
                      const t = this.buf1.name;
                      this.shift();
                      if ((0, a.isEOF)(this.buf1)) break;
                      n.set(t, this.getObj(e));
                    }
                    if ((0, a.isEOF)(this.buf1)) {
                      if (!this.recoveryMode)
                        throw new r.FormatError(
                          "End of file inside dictionary"
                        );
                      return n;
                    }
                    if ((0, a.isCmd)(this.buf2, "stream"))
                      return this.allowStreams ? this.makeStream(n, e) : n;
                    this.shift();
                    return n;
                  default:
                    return t;
                }
              if (Number.isInteger(t)) {
                if (
                  Number.isInteger(this.buf1) &&
                  (0, a.isCmd)(this.buf2, "R")
                ) {
                  const e = a.Ref.get(t, this.buf1);
                  this.shift();
                  this.shift();
                  return e;
                }
                return t;
              }
              if ("string" == typeof t)
                if (e) return e.decryptString(t);
                else return t;
              return t;
            }
            findDefaultInlineStreamEnd(e) {
              const t = this.lexer,
                i = e.pos;
              let n,
                o,
                l = 0;
              for (; -1 !== (n = e.getByte()); )
                if (0 === l) l = 69 === n ? 1 : 0;
                else if (1 === l) l = 73 === n ? 2 : 0;
                else {
                  (0, r.assert)(
                    2 === l,
                    "findDefaultInlineStreamEnd - invalid state."
                  );
                  if (32 === n || 10 === n || 13 === n) {
                    o = e.pos;
                    const i = e.peekBytes(10);
                    for (let e = 0, t = i.length; e < t; e++) {
                      n = i[e];
                      if (0 !== n || 0 === i[e + 1])
                        if (10 !== n && 13 !== n && (n < 32 || n > 127)) {
                          l = 0;
                          break;
                        }
                    }
                    if (2 !== l) continue;
                    if (t.knownCommands) {
                      const e = t.peekObj();
                      if (e instanceof a.Cmd && !t.knownCommands[e.cmd]) l = 0;
                    } else
                      (0, r.warn)(
                        "findDefaultInlineStreamEnd - `lexer.knownCommands` is undefined."
                      );
                    if (2 === l) break;
                  } else l = 0;
                }
              if (-1 === n) {
                (0, r.warn)(
                  "findDefaultInlineStreamEnd: Reached the end of the stream without finding a valid EI marker"
                );
                if (o) {
                  (0, r.warn)(
                    '... trying to recover by using the last "EI" occurrence.'
                  );
                  e.skip(-(e.pos - o));
                }
              }
              let c = 4;
              e.skip(-c);
              n = e.peekByte();
              e.skip(c);
              if (!(0, s.isWhiteSpace)(n)) c--;
              return e.pos - c - i;
            }
            findDCTDecodeInlineStreamEnd(e) {
              const t = e.pos;
              let i,
                n,
                a = !1;
              for (; -1 !== (i = e.getByte()); )
                if (255 === i) {
                  switch (e.getByte()) {
                    case 0:
                      break;
                    case 255:
                      e.skip(-1);
                      break;
                    case 217:
                      a = !0;
                      break;
                    case 192:
                    case 193:
                    case 194:
                    case 195:
                    case 197:
                    case 198:
                    case 199:
                    case 201:
                    case 202:
                    case 203:
                    case 205:
                    case 206:
                    case 207:
                    case 196:
                    case 204:
                    case 218:
                    case 219:
                    case 220:
                    case 221:
                    case 222:
                    case 223:
                    case 224:
                    case 225:
                    case 226:
                    case 227:
                    case 228:
                    case 229:
                    case 230:
                    case 231:
                    case 232:
                    case 233:
                    case 234:
                    case 235:
                    case 236:
                    case 237:
                    case 238:
                    case 239:
                    case 254:
                      n = e.getUint16();
                      if (n > 2) e.skip(n - 2);
                      else e.skip(-2);
                  }
                  if (a) break;
                }
              const s = e.pos - t;
              if (-1 === i) {
                (0, r.warn)(
                  "Inline DCTDecode image stream: EOI marker not found, searching for /EI/ instead."
                );
                e.skip(-s);
                return this.findDefaultInlineStreamEnd(e);
              }
              this.inlineStreamSkipEI(e);
              return s;
            }
            findASCII85DecodeInlineStreamEnd(e) {
              const t = e.pos;
              let i;
              for (; -1 !== (i = e.getByte()); )
                if (126 === i) {
                  const t = e.pos;
                  i = e.peekByte();
                  for (; (0, s.isWhiteSpace)(i); ) {
                    e.skip();
                    i = e.peekByte();
                  }
                  if (62 === i) {
                    e.skip();
                    break;
                  }
                  if (e.pos > t) {
                    const t = e.peekBytes(2);
                    if (69 === t[0] && 73 === t[1]) break;
                  }
                }
              const n = e.pos - t;
              if (-1 === i) {
                (0, r.warn)(
                  "Inline ASCII85Decode image stream: EOD marker not found, searching for /EI/ instead."
                );
                e.skip(-n);
                return this.findDefaultInlineStreamEnd(e);
              }
              this.inlineStreamSkipEI(e);
              return n;
            }
            findASCIIHexDecodeInlineStreamEnd(e) {
              const t = e.pos;
              let i;
              for (; -1 !== (i = e.getByte()) && 62 !== i; );
              const n = e.pos - t;
              if (-1 === i) {
                (0, r.warn)(
                  "Inline ASCIIHexDecode image stream: EOD marker not found, searching for /EI/ instead."
                );
                e.skip(-n);
                return this.findDefaultInlineStreamEnd(e);
              }
              this.inlineStreamSkipEI(e);
              return n;
            }
            inlineStreamSkipEI(e) {
              let t,
                i = 0;
              for (; -1 !== (t = e.getByte()); )
                if (0 === i) i = 69 === t ? 1 : 0;
                else if (1 === i) i = 73 === t ? 2 : 0;
                else if (2 === i) break;
            }
            makeInlineImage(e) {
              const t = this.lexer,
                i = t.stream,
                n = new a.Dict(this.xref);
              let s;
              for (
                ;
                !(0, a.isCmd)(this.buf1, "ID") && !(0, a.isEOF)(this.buf1);

              ) {
                if (!(0, a.isName)(this.buf1))
                  throw new r.FormatError(
                    "Dictionary key must be a name object"
                  );
                const t = this.buf1.name;
                this.shift();
                if ((0, a.isEOF)(this.buf1)) break;
                n.set(t, this.getObj(e));
              }
              if (-1 !== t.beginInlineImagePos)
                s = i.pos - t.beginInlineImagePos;
              const o = n.get("Filter", "F");
              let l;
              if ((0, a.isName)(o)) l = o.name;
              else if (Array.isArray(o)) {
                const e = this.xref.fetchIfRef(o[0]);
                if ((0, a.isName)(e)) l = e.name;
              }
              const c = i.pos;
              let h;
              if ("DCTDecode" === l || "DCT" === l)
                h = this.findDCTDecodeInlineStreamEnd(i);
              else if ("ASCII85Decode" === l || "A85" === l)
                h = this.findASCII85DecodeInlineStreamEnd(i);
              else if ("ASCIIHexDecode" === l || "AHx" === l)
                h = this.findASCIIHexDecodeInlineStreamEnd(i);
              else h = this.findDefaultInlineStreamEnd(i);
              let d,
                f = i.makeSubStream(c, h, n);
              if (h < 1e3 && s < 5552) {
                const e = f.getBytes();
                f.reset();
                const n = i.pos;
                i.pos = t.beginInlineImagePos;
                const r = i.getBytes(s);
                i.pos = n;
                d = u(e) + "_" + u(r);
                const o = this.imageCache[d];
                if (void 0 !== o) {
                  this.buf2 = a.Cmd.get("EI");
                  this.shift();
                  o.reset();
                  return o;
                }
              }
              if (e) f = e.createStream(f, h);
              f = this.filter(f, n, h);
              f.dict = n;
              if (void 0 !== d) {
                f.cacheKey = `inline_${h}_${d}`;
                this.imageCache[d] = f;
              }
              this.buf2 = a.Cmd.get("EI");
              this.shift();
              return f;
            }
            _findStreamLength(e, t) {
              const { stream: i } = this.lexer;
              i.pos = e;
              const n = t.length;
              for (; i.pos < i.end; ) {
                const r = i.peekBytes(2048),
                  a = r.length - n;
                if (a <= 0) break;
                let s = 0;
                for (; s < a; ) {
                  let a = 0;
                  for (; a < n && r[s + a] === t[a]; ) a++;
                  if (a >= n) {
                    i.pos += s;
                    return i.pos - e;
                  }
                  s++;
                }
                i.pos += a;
              }
              return -1;
            }
            makeStream(e, t) {
              const i = this.lexer;
              let n = i.stream;
              i.skipToNextLine();
              const o = n.pos - 1;
              let l = e.get("Length");
              if (!Number.isInteger(l)) {
                (0, r.info)(`Bad length "${l}" in stream`);
                l = 0;
              }
              n.pos = o + l;
              i.nextChar();
              if (this.tryShift() && (0, a.isCmd)(this.buf2, "endstream"))
                this.shift();
              else {
                const e = new Uint8Array([
                  101, 110, 100, 115, 116, 114, 101, 97, 109,
                ]);
                let t = this._findStreamLength(o, e);
                if (t < 0) {
                  const i = 1;
                  for (let a = 1; a <= i; a++) {
                    const i = e.length - a,
                      l = e.slice(0, i),
                      c = this._findStreamLength(o, l);
                    if (c >= 0) {
                      const e = n.peekBytes(i + 1)[i];
                      if (!(0, s.isWhiteSpace)(e)) break;
                      (0, r.info)(
                        `Found "${(0, r.bytesToString)(
                          l
                        )}" when searching for endstream command.`
                      );
                      t = c;
                      break;
                    }
                  }
                  if (t < 0)
                    throw new r.FormatError("Missing endstream command.");
                }
                l = t;
                i.nextChar();
                this.shift();
                this.shift();
              }
              this.shift();
              n = n.makeSubStream(o, l, e);
              if (t) n = t.createStream(n, l);
              n = this.filter(n, e, l);
              n.dict = e;
              return n;
            }
            filter(e, t, i) {
              let n = t.get("Filter", "F"),
                s = t.get("DecodeParms", "DP");
              if ((0, a.isName)(n)) {
                if (Array.isArray(s))
                  (0, r.warn)(
                    "/DecodeParms should not contain an Array, when /Filter contains a Name."
                  );
                return this.makeFilter(e, n.name, i, s);
              }
              let o = i;
              if (Array.isArray(n)) {
                const t = n,
                  i = s;
                for (let l = 0, c = t.length; l < c; ++l) {
                  n = this.xref.fetchIfRef(t[l]);
                  if (!(0, a.isName)(n))
                    throw new r.FormatError(`Bad filter name "${n}"`);
                  s = null;
                  if (Array.isArray(i) && l in i)
                    s = this.xref.fetchIfRef(i[l]);
                  e = this.makeFilter(e, n.name, o, s);
                  o = null;
                }
              }
              return e;
            }
            makeFilter(e, t, i, a) {
              if (0 === i) {
                (0, r.warn)(`Empty "${t}" stream.`);
                return new n.NullStream();
              }
              try {
                const s = this.xref.stats.streamTypes;
                if ("FlateDecode" === t || "Fl" === t) {
                  s[r.StreamType.FLATE] = !0;
                  if (a)
                    return new n.PredictorStream(new n.FlateStream(e, i), i, a);
                  else return new n.FlateStream(e, i);
                }
                if ("LZWDecode" === t || "LZW" === t) {
                  s[r.StreamType.LZW] = !0;
                  let t = 1;
                  if (a) {
                    if (a.has("EarlyChange")) t = a.get("EarlyChange");
                    return new n.PredictorStream(
                      new n.LZWStream(e, i, t),
                      i,
                      a
                    );
                  }
                  return new n.LZWStream(e, i, t);
                }
                if ("DCTDecode" === t || "DCT" === t) {
                  s[r.StreamType.DCT] = !0;
                  return new c.JpegStream(e, i, e.dict, a);
                }
                if ("JPXDecode" === t || "JPX" === t) {
                  s[r.StreamType.JPX] = !0;
                  return new h.JpxStream(e, i, e.dict, a);
                }
                if ("ASCII85Decode" === t || "A85" === t) {
                  s[r.StreamType.A85] = !0;
                  return new n.Ascii85Stream(e, i);
                }
                if ("ASCIIHexDecode" === t || "AHx" === t) {
                  s[r.StreamType.AHX] = !0;
                  return new n.AsciiHexStream(e, i);
                }
                if ("CCITTFaxDecode" === t || "CCF" === t) {
                  s[r.StreamType.CCF] = !0;
                  return new o.CCITTFaxStream(e, i, a);
                }
                if ("RunLengthDecode" === t || "RL" === t) {
                  s[r.StreamType.RLX] = !0;
                  return new n.RunLengthStream(e, i);
                }
                if ("JBIG2Decode" === t) {
                  s[r.StreamType.JBIG] = !0;
                  return new l.Jbig2Stream(e, i, e.dict, a);
                }
                (0, r.warn)(`Filter "${t}" is not supported.`);
                return e;
              } catch (e) {
                if (e instanceof s.MissingDataException) throw e;
                (0, r.warn)(`Invalid stream: "${e}"`);
                return new n.NullStream();
              }
            }
          }
          t.Parser = d;
          const f = [
            1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 0, 0, 2, 2, 0, 0, 0, 0,
            0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2,
            0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0,
          ];
          function p(e) {
            if (e >= 48 && e <= 57) return 15 & e;
            if ((e >= 65 && e <= 70) || (e >= 97 && e <= 102))
              return 9 + (15 & e);
            else return -1;
          }
          class g {
            constructor(e, t = null) {
              this.stream = e;
              this.nextChar();
              this.strBuf = [];
              this.knownCommands = t;
              this._hexStringNumWarn = 0;
              this.beginInlineImagePos = -1;
            }
            nextChar() {
              return (this.currentChar = this.stream.getByte());
            }
            peekChar() {
              return this.stream.peekByte();
            }
            getNumber() {
              let e = this.currentChar,
                t = !1,
                i = 0,
                n = 0;
              if (45 === e) {
                n = -1;
                e = this.nextChar();
                if (45 === e) e = this.nextChar();
              } else if (43 === e) {
                n = 1;
                e = this.nextChar();
              }
              if (10 === e || 13 === e)
                do {
                  e = this.nextChar();
                } while (10 === e || 13 === e);
              if (46 === e) {
                i = 10;
                e = this.nextChar();
              }
              if (e < 48 || e > 57) {
                if (
                  10 === i &&
                  0 === n &&
                  ((0, s.isWhiteSpace)(e) || -1 === e)
                ) {
                  (0, r.warn)(
                    "Lexer.getNumber - treating a single decimal point as zero."
                  );
                  return 0;
                }
                throw new r.FormatError(
                  `Invalid number: ${String.fromCharCode(e)} (charCode ${e})`
                );
              }
              n = n || 1;
              let a = e - 48,
                o = 0,
                l = 1;
              for (; (e = this.nextChar()) >= 0; )
                if (e >= 48 && e <= 57) {
                  const n = e - 48;
                  if (t) o = 10 * o + n;
                  else {
                    if (0 !== i) i *= 10;
                    a = 10 * a + n;
                  }
                } else if (46 === e)
                  if (0 === i) i = 1;
                  else break;
                else if (45 === e)
                  (0, r.warn)(
                    "Badly formatted number: minus sign in the middle"
                  );
                else if (69 === e || 101 === e) {
                  e = this.peekChar();
                  if (43 === e || 45 === e) {
                    l = 45 === e ? -1 : 1;
                    this.nextChar();
                  } else if (e < 48 || e > 57) break;
                  t = !0;
                } else break;
              if (0 !== i) a /= i;
              if (t) a *= 10 ** (l * o);
              return n * a;
            }
            getString() {
              let e = 1,
                t = !1;
              const i = this.strBuf;
              i.length = 0;
              let n = this.nextChar();
              for (;;) {
                let a = !1;
                switch (0 | n) {
                  case -1:
                    (0, r.warn)("Unterminated string");
                    t = !0;
                    break;
                  case 40:
                    ++e;
                    i.push("(");
                    break;
                  case 41:
                    if (0 == --e) {
                      this.nextChar();
                      t = !0;
                    } else i.push(")");
                    break;
                  case 92:
                    n = this.nextChar();
                    switch (n) {
                      case -1:
                        (0, r.warn)("Unterminated string");
                        t = !0;
                        break;
                      case 110:
                        i.push("\n");
                        break;
                      case 114:
                        i.push("\r");
                        break;
                      case 116:
                        i.push("\t");
                        break;
                      case 98:
                        i.push("\b");
                        break;
                      case 102:
                        i.push("\f");
                        break;
                      case 92:
                      case 40:
                      case 41:
                        i.push(String.fromCharCode(n));
                        break;
                      case 48:
                      case 49:
                      case 50:
                      case 51:
                      case 52:
                      case 53:
                      case 54:
                      case 55:
                        let e = 15 & n;
                        n = this.nextChar();
                        a = !0;
                        if (n >= 48 && n <= 55) {
                          e = (e << 3) + (15 & n);
                          n = this.nextChar();
                          if (n >= 48 && n <= 55) {
                            a = !1;
                            e = (e << 3) + (15 & n);
                          }
                        }
                        i.push(String.fromCharCode(e));
                        break;
                      case 13:
                        if (10 === this.peekChar()) this.nextChar();
                        break;
                      case 10:
                        break;
                      default:
                        i.push(String.fromCharCode(n));
                    }
                    break;
                  default:
                    i.push(String.fromCharCode(n));
                }
                if (t) break;
                if (!a) n = this.nextChar();
              }
              return i.join("");
            }
            getName() {
              let e, t;
              const i = this.strBuf;
              i.length = 0;
              for (; (e = this.nextChar()) >= 0 && !f[e]; )
                if (35 === e) {
                  e = this.nextChar();
                  if (f[e]) {
                    (0, r.warn)(
                      "Lexer_getName: NUMBER SIGN (#) should be followed by a hexadecimal number."
                    );
                    i.push("#");
                    break;
                  }
                  const n = p(e);
                  if (-1 !== n) {
                    t = e;
                    e = this.nextChar();
                    const a = p(e);
                    if (-1 === a) {
                      (0, r.warn)(
                        `Lexer_getName: Illegal digit (${String.fromCharCode(
                          e
                        )}) in hexadecimal number.`
                      );
                      i.push("#", String.fromCharCode(t));
                      if (f[e]) break;
                      i.push(String.fromCharCode(e));
                      continue;
                    }
                    i.push(String.fromCharCode((n << 4) | a));
                  } else i.push("#", String.fromCharCode(e));
                } else i.push(String.fromCharCode(e));
              if (i.length > 127)
                (0, r.warn)(
                  `Name token is longer than allowed by the spec: ${i.length}`
                );
              return a.Name.get(i.join(""));
            }
            _hexStringWarn(e) {
              if (5 != this._hexStringNumWarn++) {
                if (!(this._hexStringNumWarn > 5))
                  (0, r.warn)(
                    `getHexString - ignoring invalid character: ${e}`
                  );
              } else
                (0, r.warn)(
                  "getHexString - ignoring additional invalid characters."
                );
            }
            getHexString() {
              const e = this.strBuf;
              e.length = 0;
              let t,
                i,
                n = this.currentChar,
                a = !0;
              this._hexStringNumWarn = 0;
              for (;;)
                if (n < 0) {
                  (0, r.warn)("Unterminated hex string");
                  break;
                } else if (62 === n) {
                  this.nextChar();
                  break;
                } else if (1 === f[n]) {
                  n = this.nextChar();
                  continue;
                } else {
                  if (a) {
                    t = p(n);
                    if (-1 === t) {
                      this._hexStringWarn(n);
                      n = this.nextChar();
                      continue;
                    }
                  } else {
                    i = p(n);
                    if (-1 === i) {
                      this._hexStringWarn(n);
                      n = this.nextChar();
                      continue;
                    }
                    e.push(String.fromCharCode((t << 4) | i));
                  }
                  a = !a;
                  n = this.nextChar();
                }
              return e.join("");
            }
            getObj() {
              let e = !1,
                t = this.currentChar;
              for (;;) {
                if (t < 0) return a.EOF;
                if (e) {
                  if (10 === t || 13 === t) e = !1;
                } else if (37 === t) e = !0;
                else if (1 !== f[t]) break;
                t = this.nextChar();
              }
              switch (0 | t) {
                case 48:
                case 49:
                case 50:
                case 51:
                case 52:
                case 53:
                case 54:
                case 55:
                case 56:
                case 57:
                case 43:
                case 45:
                case 46:
                  return this.getNumber();
                case 40:
                  return this.getString();
                case 47:
                  return this.getName();
                case 91:
                  this.nextChar();
                  return a.Cmd.get("[");
                case 93:
                  this.nextChar();
                  return a.Cmd.get("]");
                case 60:
                  t = this.nextChar();
                  if (60 === t) {
                    this.nextChar();
                    return a.Cmd.get("<<");
                  }
                  return this.getHexString();
                case 62:
                  t = this.nextChar();
                  if (62 === t) {
                    this.nextChar();
                    return a.Cmd.get(">>");
                  }
                  return a.Cmd.get(">");
                case 123:
                  this.nextChar();
                  return a.Cmd.get("{");
                case 125:
                  this.nextChar();
                  return a.Cmd.get("}");
                case 41:
                  this.nextChar();
                  throw new r.FormatError(`Illegal character: ${t}`);
              }
              let i = String.fromCharCode(t);
              const n = this.knownCommands;
              let s = n && void 0 !== n[i];
              for (; (t = this.nextChar()) >= 0 && !f[t]; ) {
                const e = i + String.fromCharCode(t);
                if (s && void 0 === n[e]) break;
                if (128 === i.length)
                  throw new r.FormatError(
                    `Command token too long: ${i.length}`
                  );
                i = e;
                s = n && void 0 !== n[i];
              }
              if ("true" === i) return !0;
              if ("false" === i) return !1;
              if ("null" === i) return null;
              if ("BI" === i) this.beginInlineImagePos = this.stream.pos;
              return a.Cmd.get(i);
            }
            peekObj() {
              const e = this.stream.pos,
                t = this.currentChar,
                i = this.beginInlineImagePos;
              let n;
              try {
                n = this.getObj();
              } catch (e) {
                if (e instanceof s.MissingDataException) throw e;
                (0, r.warn)(`peekObj: ${e}`);
              }
              this.stream.pos = e;
              this.currentChar = t;
              this.beginInlineImagePos = i;
              return n;
            }
            skipToNextLine() {
              let e = this.currentChar;
              for (; e >= 0; ) {
                if (13 === e) {
                  e = this.nextChar();
                  if (10 === e) this.nextChar();
                  break;
                } else if (10 === e) {
                  this.nextChar();
                  break;
                }
                e = this.nextChar();
              }
            }
          }
          t.Lexer = g;
          t.Linearization = class {
            static create(e) {
              function t(e, t, i = !1) {
                const n = e.get(t);
                if (Number.isInteger(n) && (i ? n >= 0 : n > 0)) return n;
                throw new Error(
                  `The "${t}" parameter in the linearization dictionary is invalid.`
                );
              }
              const i = new d({ lexer: new g(e), xref: null }),
                n = i.getObj(),
                s = i.getObj(),
                o = i.getObj(),
                l = i.getObj();
              let c, h;
              if (
                !(
                  Number.isInteger(n) &&
                  Number.isInteger(s) &&
                  (0, a.isCmd)(o, "obj") &&
                  (0, a.isDict)(l) &&
                  (0, r.isNum)((c = l.get("Linearized"))) &&
                  c > 0
                )
              )
                return null;
              else if ((h = t(l, "L")) !== e.length)
                throw new Error(
                  'The "L" parameter in the linearization dictionary does not equal the stream length.'
                );
              return {
                length: h,
                hints: (function (e) {
                  const t = e.get("H");
                  let i;
                  if (Array.isArray(t) && (2 === (i = t.length) || 4 === i)) {
                    for (let e = 0; e < i; e++) {
                      const i = t[e];
                      if (!(Number.isInteger(i) && i > 0))
                        throw new Error(
                          `Hint (${e}) in the linearization dictionary is invalid.`
                        );
                    }
                    return t;
                  }
                  throw new Error(
                    "Hint array in the linearization dictionary is invalid."
                  );
                })(l),
                objectNumberFirst: t(l, "O"),
                endFirst: t(l, "E"),
                numPages: t(l, "N"),
                mainXRefEntriesOffset: t(l, "T"),
                pageFirst: l.has("P") ? t(l, "P", !0) : 0,
              };
            }
          };
        },
        (e, t, i) => {
          Object.defineProperty(t, "__esModule", { value: !0 });
          t.StringStream =
            t.StreamsSequenceStream =
            t.Stream =
            t.RunLengthStream =
            t.PredictorStream =
            t.NullStream =
            t.LZWStream =
            t.FlateStream =
            t.DecryptStream =
            t.DecodeStream =
            t.AsciiHexStream =
            t.Ascii85Stream =
              void 0;
          var n = i(2),
            r = i(5),
            a = i(8),
            s = (function () {
              function e(e, t, i, n) {
                this.bytes = e instanceof Uint8Array ? e : new Uint8Array(e);
                this.start = t || 0;
                this.pos = this.start;
                this.end = t + i || this.bytes.length;
                this.dict = n;
              }
              e.prototype = {
                get length() {
                  return this.end - this.start;
                },
                get isEmpty() {
                  return 0 === this.length;
                },
                getByte: function () {
                  if (this.pos >= this.end) return -1;
                  else return this.bytes[this.pos++];
                },
                getUint16: function () {
                  var e = this.getByte(),
                    t = this.getByte();
                  if (-1 === e || -1 === t) return -1;
                  else return (e << 8) + t;
                },
                getInt32: function () {
                  return (
                    (this.getByte() << 24) +
                    (this.getByte() << 16) +
                    (this.getByte() << 8) +
                    this.getByte()
                  );
                },
                getBytes(e, t = !1) {
                  var i = this.bytes,
                    n = this.pos,
                    r = this.end;
                  if (!e) {
                    const e = i.subarray(n, r);
                    return t ? new Uint8ClampedArray(e) : e;
                  }
                  var a = n + e;
                  if (a > r) a = r;
                  this.pos = a;
                  const s = i.subarray(n, a);
                  return t ? new Uint8ClampedArray(s) : s;
                },
                peekByte: function () {
                  var e = this.getByte();
                  if (-1 !== e) this.pos--;
                  return e;
                },
                peekBytes(e, t = !1) {
                  var i = this.getBytes(e, t);
                  this.pos -= i.length;
                  return i;
                },
                getByteRange(e, t) {
                  if (e < 0) e = 0;
                  if (t > this.end) t = this.end;
                  return this.bytes.subarray(e, t);
                },
                skip: function (e) {
                  if (!e) e = 1;
                  this.pos += e;
                },
                reset: function () {
                  this.pos = this.start;
                },
                moveStart: function () {
                  this.start = this.pos;
                },
                makeSubStream: function (t, i, n) {
                  return new e(this.bytes.buffer, t, i, n);
                },
              };
              return e;
            })();
          t.Stream = s;
          var o = (function () {
            function e(e) {
              const t = (0, n.stringToBytes)(e);
              s.call(this, t);
            }
            e.prototype = s.prototype;
            return e;
          })();
          t.StringStream = o;
          var l = (function () {
            var e = new Uint8Array(0);
            function t(t) {
              this._rawMinBufferLength = t || 0;
              this.pos = 0;
              this.bufferLength = 0;
              this.eof = !1;
              this.buffer = e;
              this.minBufferLength = 512;
              if (t)
                for (; this.minBufferLength < t; ) this.minBufferLength *= 2;
            }
            t.prototype = {
              get length() {
                (0, n.unreachable)("Should not access DecodeStream.length");
              },
              get isEmpty() {
                for (; !this.eof && 0 === this.bufferLength; ) this.readBlock();
                return 0 === this.bufferLength;
              },
              ensureBuffer: function (e) {
                var t = this.buffer;
                if (e <= t.byteLength) return t;
                for (var i = this.minBufferLength; i < e; ) i *= 2;
                var n = new Uint8Array(i);
                n.set(t);
                return (this.buffer = n);
              },
              getByte: function () {
                for (var e = this.pos; this.bufferLength <= e; ) {
                  if (this.eof) return -1;
                  this.readBlock();
                }
                return this.buffer[this.pos++];
              },
              getUint16: function () {
                var e = this.getByte(),
                  t = this.getByte();
                if (-1 === e || -1 === t) return -1;
                else return (e << 8) + t;
              },
              getInt32: function () {
                return (
                  (this.getByte() << 24) +
                  (this.getByte() << 16) +
                  (this.getByte() << 8) +
                  this.getByte()
                );
              },
              getBytes(e, t = !1) {
                var i,
                  n = this.pos;
                if (e) {
                  this.ensureBuffer(n + e);
                  i = n + e;
                  for (; !this.eof && this.bufferLength < i; ) this.readBlock();
                  var r = this.bufferLength;
                  if (i > r) i = r;
                } else {
                  for (; !this.eof; ) this.readBlock();
                  i = this.bufferLength;
                }
                this.pos = i;
                const a = this.buffer.subarray(n, i);
                return t && !(a instanceof Uint8ClampedArray)
                  ? new Uint8ClampedArray(a)
                  : a;
              },
              peekByte: function () {
                var e = this.getByte();
                if (-1 !== e) this.pos--;
                return e;
              },
              peekBytes(e, t = !1) {
                var i = this.getBytes(e, t);
                this.pos -= i.length;
                return i;
              },
              makeSubStream: function (e, t, i) {
                for (var n = e + t; this.bufferLength <= n && !this.eof; )
                  this.readBlock();
                return new s(this.buffer, e, t, i);
              },
              getByteRange(e, t) {
                (0, n.unreachable)("Should not call DecodeStream.getByteRange");
              },
              skip: function (e) {
                if (!e) e = 1;
                this.pos += e;
              },
              reset: function () {
                this.pos = 0;
              },
              getBaseStreams: function () {
                if (this.str && this.str.getBaseStreams)
                  return this.str.getBaseStreams();
                else return [];
              },
            };
            return t;
          })();
          t.DecodeStream = l;
          var c = (function () {
            function e(e) {
              this.streams = e;
              let t = 0;
              for (let i = 0, n = e.length; i < n; i++) {
                const n = e[i];
                if (n instanceof l) t += n._rawMinBufferLength;
                else t += n.length;
              }
              l.call(this, t);
            }
            e.prototype = Object.create(l.prototype);
            e.prototype.readBlock = function () {
              var e = this.streams;
              if (0 !== e.length) {
                var t = e.shift().getBytes(),
                  i = this.bufferLength,
                  n = i + t.length;
                this.ensureBuffer(n).set(t, i);
                this.bufferLength = n;
              } else this.eof = !0;
            };
            e.prototype.getBaseStreams = function () {
              for (var e = [], t = 0, i = this.streams.length; t < i; t++) {
                var n = this.streams[t];
                if (n.getBaseStreams) e.push(...n.getBaseStreams());
              }
              return e;
            };
            return e;
          })();
          t.StreamsSequenceStream = c;
          var h = (function () {
            var e = new Int32Array([
                16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1,
                15,
              ]),
              t = new Int32Array([
                3, 4, 5, 6, 7, 8, 9, 10, 65547, 65549, 65551, 65553, 131091,
                131095, 131099, 131103, 196643, 196651, 196659, 196667, 262211,
                262227, 262243, 262259, 327811, 327843, 327875, 327907, 258,
                258, 258,
              ]),
              i = new Int32Array([
                1, 2, 3, 4, 65541, 65543, 131081, 131085, 196625, 196633,
                262177, 262193, 327745, 327777, 393345, 393409, 459009, 459137,
                524801, 525057, 590849, 591361, 657409, 658433, 724993, 727041,
                794625, 798721, 868353, 876545,
              ]),
              r = [
                new Int32Array([
                  459008, 524368, 524304, 524568, 459024, 524400, 524336,
                  590016, 459016, 524384, 524320, 589984, 524288, 524416,
                  524352, 590048, 459012, 524376, 524312, 589968, 459028,
                  524408, 524344, 590032, 459020, 524392, 524328, 59e4, 524296,
                  524424, 524360, 590064, 459010, 524372, 524308, 524572,
                  459026, 524404, 524340, 590024, 459018, 524388, 524324,
                  589992, 524292, 524420, 524356, 590056, 459014, 524380,
                  524316, 589976, 459030, 524412, 524348, 590040, 459022,
                  524396, 524332, 590008, 524300, 524428, 524364, 590072,
                  459009, 524370, 524306, 524570, 459025, 524402, 524338,
                  590020, 459017, 524386, 524322, 589988, 524290, 524418,
                  524354, 590052, 459013, 524378, 524314, 589972, 459029,
                  524410, 524346, 590036, 459021, 524394, 524330, 590004,
                  524298, 524426, 524362, 590068, 459011, 524374, 524310,
                  524574, 459027, 524406, 524342, 590028, 459019, 524390,
                  524326, 589996, 524294, 524422, 524358, 590060, 459015,
                  524382, 524318, 589980, 459031, 524414, 524350, 590044,
                  459023, 524398, 524334, 590012, 524302, 524430, 524366,
                  590076, 459008, 524369, 524305, 524569, 459024, 524401,
                  524337, 590018, 459016, 524385, 524321, 589986, 524289,
                  524417, 524353, 590050, 459012, 524377, 524313, 589970,
                  459028, 524409, 524345, 590034, 459020, 524393, 524329,
                  590002, 524297, 524425, 524361, 590066, 459010, 524373,
                  524309, 524573, 459026, 524405, 524341, 590026, 459018,
                  524389, 524325, 589994, 524293, 524421, 524357, 590058,
                  459014, 524381, 524317, 589978, 459030, 524413, 524349,
                  590042, 459022, 524397, 524333, 590010, 524301, 524429,
                  524365, 590074, 459009, 524371, 524307, 524571, 459025,
                  524403, 524339, 590022, 459017, 524387, 524323, 589990,
                  524291, 524419, 524355, 590054, 459013, 524379, 524315,
                  589974, 459029, 524411, 524347, 590038, 459021, 524395,
                  524331, 590006, 524299, 524427, 524363, 590070, 459011,
                  524375, 524311, 524575, 459027, 524407, 524343, 590030,
                  459019, 524391, 524327, 589998, 524295, 524423, 524359,
                  590062, 459015, 524383, 524319, 589982, 459031, 524415,
                  524351, 590046, 459023, 524399, 524335, 590014, 524303,
                  524431, 524367, 590078, 459008, 524368, 524304, 524568,
                  459024, 524400, 524336, 590017, 459016, 524384, 524320,
                  589985, 524288, 524416, 524352, 590049, 459012, 524376,
                  524312, 589969, 459028, 524408, 524344, 590033, 459020,
                  524392, 524328, 590001, 524296, 524424, 524360, 590065,
                  459010, 524372, 524308, 524572, 459026, 524404, 524340,
                  590025, 459018, 524388, 524324, 589993, 524292, 524420,
                  524356, 590057, 459014, 524380, 524316, 589977, 459030,
                  524412, 524348, 590041, 459022, 524396, 524332, 590009,
                  524300, 524428, 524364, 590073, 459009, 524370, 524306,
                  524570, 459025, 524402, 524338, 590021, 459017, 524386,
                  524322, 589989, 524290, 524418, 524354, 590053, 459013,
                  524378, 524314, 589973, 459029, 524410, 524346, 590037,
                  459021, 524394, 524330, 590005, 524298, 524426, 524362,
                  590069, 459011, 524374, 524310, 524574, 459027, 524406,
                  524342, 590029, 459019, 524390, 524326, 589997, 524294,
                  524422, 524358, 590061, 459015, 524382, 524318, 589981,
                  459031, 524414, 524350, 590045, 459023, 524398, 524334,
                  590013, 524302, 524430, 524366, 590077, 459008, 524369,
                  524305, 524569, 459024, 524401, 524337, 590019, 459016,
                  524385, 524321, 589987, 524289, 524417, 524353, 590051,
                  459012, 524377, 524313, 589971, 459028, 524409, 524345,
                  590035, 459020, 524393, 524329, 590003, 524297, 524425,
                  524361, 590067, 459010, 524373, 524309, 524573, 459026,
                  524405, 524341, 590027, 459018, 524389, 524325, 589995,
                  524293, 524421, 524357, 590059, 459014, 524381, 524317,
                  589979, 459030, 524413, 524349, 590043, 459022, 524397,
                  524333, 590011, 524301, 524429, 524365, 590075, 459009,
                  524371, 524307, 524571, 459025, 524403, 524339, 590023,
                  459017, 524387, 524323, 589991, 524291, 524419, 524355,
                  590055, 459013, 524379, 524315, 589975, 459029, 524411,
                  524347, 590039, 459021, 524395, 524331, 590007, 524299,
                  524427, 524363, 590071, 459011, 524375, 524311, 524575,
                  459027, 524407, 524343, 590031, 459019, 524391, 524327,
                  589999, 524295, 524423, 524359, 590063, 459015, 524383,
                  524319, 589983, 459031, 524415, 524351, 590047, 459023,
                  524399, 524335, 590015, 524303, 524431, 524367, 590079,
                ]),
                9,
              ],
              a = [
                new Int32Array([
                  327680, 327696, 327688, 327704, 327684, 327700, 327692,
                  327708, 327682, 327698, 327690, 327706, 327686, 327702,
                  327694, 0, 327681, 327697, 327689, 327705, 327685, 327701,
                  327693, 327709, 327683, 327699, 327691, 327707, 327687,
                  327703, 327695, 0,
                ]),
                5,
              ];
            function s(e, t) {
              this.str = e;
              this.dict = e.dict;
              var i = e.getByte(),
                r = e.getByte();
              if (-1 === i || -1 === r)
                throw new n.FormatError(
                  `Invalid header in flate stream: ${i}, ${r}`
                );
              if (8 != (15 & i))
                throw new n.FormatError(
                  `Unknown compression method in flate stream: ${i}, ${r}`
                );
              if (((i << 8) + r) % 31 != 0)
                throw new n.FormatError(
                  `Bad FCHECK in flate stream: ${i}, ${r}`
                );
              if (32 & r)
                throw new n.FormatError(
                  `FDICT bit set in flate stream: ${i}, ${r}`
                );
              this.codeSize = 0;
              this.codeBuf = 0;
              l.call(this, t);
            }
            s.prototype = Object.create(l.prototype);
            s.prototype.getBits = function (e) {
              for (
                var t, i = this.str, r = this.codeSize, a = this.codeBuf;
                r < e;

              ) {
                if (-1 === (t = i.getByte()))
                  throw new n.FormatError("Bad encoding in flate stream");
                a |= t << r;
                r += 8;
              }
              t = a & ((1 << e) - 1);
              this.codeBuf = a >> e;
              this.codeSize = r -= e;
              return t;
            };
            s.prototype.getCode = function (e) {
              for (
                var t,
                  i = this.str,
                  r = e[0],
                  a = e[1],
                  s = this.codeSize,
                  o = this.codeBuf;
                s < a && -1 !== (t = i.getByte());

              ) {
                o |= t << s;
                s += 8;
              }
              var l = r[o & ((1 << a) - 1)],
                c = l >> 16,
                h = 65535 & l;
              if (c < 1 || s < c)
                throw new n.FormatError("Bad encoding in flate stream");
              this.codeBuf = o >> c;
              this.codeSize = s - c;
              return h;
            };
            s.prototype.generateHuffmanTable = function (e) {
              var t,
                i = e.length,
                n = 0;
              for (t = 0; t < i; ++t) if (e[t] > n) n = e[t];
              for (
                var r = 1 << n, a = new Int32Array(r), s = 1, o = 0, l = 2;
                s <= n;
                ++s, o <<= 1, l <<= 1
              )
                for (var c = 0; c < i; ++c)
                  if (e[c] === s) {
                    var h = 0,
                      u = o;
                    for (t = 0; t < s; ++t) {
                      h = (h << 1) | (1 & u);
                      u >>= 1;
                    }
                    for (t = h; t < r; t += l) a[t] = (s << 16) | c;
                    ++o;
                  }
              return [a, n];
            };
            s.prototype.readBlock = function () {
              var s,
                o,
                l = this.str,
                c = this.getBits(3);
              if (1 & c) this.eof = !0;
              if (0 != (c >>= 1)) {
                var h, u;
                if (1 === c) {
                  h = r;
                  u = a;
                } else if (2 === c) {
                  var d,
                    f = this.getBits(5) + 257,
                    p = this.getBits(5) + 1,
                    g = this.getBits(4) + 4,
                    m = new Uint8Array(e.length);
                  for (d = 0; d < g; ++d) m[e[d]] = this.getBits(3);
                  var v = this.generateHuffmanTable(m);
                  o = 0;
                  d = 0;
                  for (var b, y, w, x = f + p, k = new Uint8Array(x); d < x; ) {
                    var C = this.getCode(v);
                    if (16 === C) {
                      b = 2;
                      y = 3;
                      w = o;
                    } else if (17 === C) {
                      b = 3;
                      y = 3;
                      w = o = 0;
                    } else if (18 === C) {
                      b = 7;
                      y = 11;
                      w = o = 0;
                    } else {
                      k[d++] = o = C;
                      continue;
                    }
                    for (var S = this.getBits(b) + y; S-- > 0; ) k[d++] = w;
                  }
                  h = this.generateHuffmanTable(k.subarray(0, f));
                  u = this.generateHuffmanTable(k.subarray(f, x));
                } else
                  throw new n.FormatError("Unknown block type in flate stream");
                for (
                  var _ = (s = this.buffer) ? s.length : 0,
                    A = this.bufferLength;
                  ;

                ) {
                  var F = this.getCode(h);
                  if (!(F < 256)) {
                    if (256 === F) {
                      this.bufferLength = A;
                      return;
                    }
                    var T = (F = t[(F -= 257)]) >> 16;
                    if (T > 0) T = this.getBits(T);
                    o = (65535 & F) + T;
                    F = this.getCode(u);
                    if ((T = (F = i[F]) >> 16) > 0) T = this.getBits(T);
                    var P = (65535 & F) + T;
                    if (A + o >= _) _ = (s = this.ensureBuffer(A + o)).length;
                    for (var E = 0; E < o; ++E, ++A) s[A] = s[A - P];
                  } else {
                    if (A + 1 >= _) _ = (s = this.ensureBuffer(A + 1)).length;
                    s[A++] = F;
                  }
                }
              } else {
                var I;
                if (-1 === (I = l.getByte()))
                  throw new n.FormatError("Bad block header in flate stream");
                var D = I;
                if (-1 === (I = l.getByte()))
                  throw new n.FormatError("Bad block header in flate stream");
                D |= I << 8;
                if (-1 === (I = l.getByte()))
                  throw new n.FormatError("Bad block header in flate stream");
                var O = I;
                if (-1 === (I = l.getByte()))
                  throw new n.FormatError("Bad block header in flate stream");
                if ((O |= I << 8) != (65535 & ~D) && (0 !== D || 0 !== O))
                  throw new n.FormatError(
                    "Bad uncompressed block length in flate stream"
                  );
                this.codeBuf = 0;
                this.codeSize = 0;
                const e = this.bufferLength,
                  t = e + D;
                s = this.ensureBuffer(t);
                this.bufferLength = t;
                if (0 === D) {
                  if (-1 === l.peekByte()) this.eof = !0;
                } else {
                  const t = l.getBytes(D);
                  s.set(t, e);
                  if (t.length < D) this.eof = !0;
                }
              }
            };
            return s;
          })();
          t.FlateStream = h;
          var u = (function () {
            function e(e, t, i) {
              if (!(0, r.isDict)(i)) return e;
              var a = (this.predictor = i.get("Predictor") || 1);
              if (a <= 1) return e;
              if (2 !== a && (a < 10 || a > 15))
                throw new n.FormatError(`Unsupported predictor: ${a}`);
              if (2 === a) this.readBlock = this.readBlockTiff;
              else this.readBlock = this.readBlockPng;
              this.str = e;
              this.dict = e.dict;
              var s = (this.colors = i.get("Colors") || 1),
                o = (this.bits = i.get("BitsPerComponent") || 8),
                c = (this.columns = i.get("Columns") || 1);
              this.pixBytes = (s * o + 7) >> 3;
              this.rowBytes = (c * s * o + 7) >> 3;
              l.call(this, t);
              return this;
            }
            e.prototype = Object.create(l.prototype);
            e.prototype.readBlockTiff = function () {
              var e = this.rowBytes,
                t = this.bufferLength,
                i = this.ensureBuffer(t + e),
                n = this.bits,
                r = this.colors,
                a = this.str.getBytes(e);
              this.eof = !a.length;
              if (!this.eof) {
                var s,
                  o = 0,
                  l = 0,
                  c = 0,
                  h = 0,
                  u = t;
                if (1 === n && 1 === r)
                  for (s = 0; s < e; ++s) {
                    var d = a[s] ^ o;
                    d ^= d >> 1;
                    d ^= d >> 2;
                    o = (1 & (d ^= d >> 4)) << 7;
                    i[u++] = d;
                  }
                else if (8 === n) {
                  for (s = 0; s < r; ++s) i[u++] = a[s];
                  for (; s < e; ++s) {
                    i[u] = i[u - r] + a[s];
                    u++;
                  }
                } else if (16 === n) {
                  var f = 2 * r;
                  for (s = 0; s < f; ++s) i[u++] = a[s];
                  for (; s < e; s += 2) {
                    var p =
                      ((255 & a[s]) << 8) +
                      (255 & a[s + 1]) +
                      ((255 & i[u - f]) << 8) +
                      (255 & i[u - f + 1]);
                    i[u++] = (p >> 8) & 255;
                    i[u++] = 255 & p;
                  }
                } else {
                  var g = new Uint8Array(r + 1),
                    m = (1 << n) - 1,
                    v = 0,
                    b = t,
                    y = this.columns;
                  for (s = 0; s < y; ++s)
                    for (var w = 0; w < r; ++w) {
                      if (c < n) {
                        o = (o << 8) | (255 & a[v++]);
                        c += 8;
                      }
                      g[w] = (g[w] + (o >> (c - n))) & m;
                      c -= n;
                      l = (l << n) | g[w];
                      if ((h += n) >= 8) {
                        i[b++] = (l >> (h - 8)) & 255;
                        h -= 8;
                      }
                    }
                  if (h > 0)
                    i[b++] = (l << (8 - h)) + (o & ((1 << (8 - h)) - 1));
                }
                this.bufferLength += e;
              }
            };
            e.prototype.readBlockPng = function () {
              var e = this.rowBytes,
                t = this.pixBytes,
                i = this.str.getByte(),
                r = this.str.getBytes(e);
              this.eof = !r.length;
              if (!this.eof) {
                var a = this.bufferLength,
                  s = this.ensureBuffer(a + e),
                  o = s.subarray(a - e, a);
                if (0 === o.length) o = new Uint8Array(e);
                var l,
                  c,
                  h,
                  u = a;
                switch (i) {
                  case 0:
                    for (l = 0; l < e; ++l) s[u++] = r[l];
                    break;
                  case 1:
                    for (l = 0; l < t; ++l) s[u++] = r[l];
                    for (; l < e; ++l) {
                      s[u] = (s[u - t] + r[l]) & 255;
                      u++;
                    }
                    break;
                  case 2:
                    for (l = 0; l < e; ++l) s[u++] = (o[l] + r[l]) & 255;
                    break;
                  case 3:
                    for (l = 0; l < t; ++l) s[u++] = (o[l] >> 1) + r[l];
                    for (; l < e; ++l) {
                      s[u] = (((o[l] + s[u - t]) >> 1) + r[l]) & 255;
                      u++;
                    }
                    break;
                  case 4:
                    for (l = 0; l < t; ++l) {
                      c = o[l];
                      h = r[l];
                      s[u++] = c + h;
                    }
                    for (; l < e; ++l) {
                      c = o[l];
                      var d = o[l - t],
                        f = s[u - t],
                        p = f + c - d,
                        g = p - f;
                      if (g < 0) g = -g;
                      var m = p - c;
                      if (m < 0) m = -m;
                      var v = p - d;
                      if (v < 0) v = -v;
                      h = r[l];
                      if (g <= m && g <= v) s[u++] = f + h;
                      else if (m <= v) s[u++] = c + h;
                      else s[u++] = d + h;
                    }
                    break;
                  default:
                    throw new n.FormatError(`Unsupported predictor: ${i}`);
                }
                this.bufferLength += e;
              }
            };
            return e;
          })();
          t.PredictorStream = u;
          var d = (function () {
            function e(e, t, i) {
              this.str = e;
              this.dict = e.dict;
              this.decrypt = i;
              this.nextChunk = null;
              this.initialized = !1;
              l.call(this, t);
            }
            e.prototype = Object.create(l.prototype);
            e.prototype.readBlock = function () {
              var e;
              if (this.initialized) e = this.nextChunk;
              else {
                e = this.str.getBytes(512);
                this.initialized = !0;
              }
              if (e && 0 !== e.length) {
                this.nextChunk = this.str.getBytes(512);
                var t = this.nextChunk && this.nextChunk.length > 0;
                e = (0, this.decrypt)(e, !t);
                var i,
                  n = this.bufferLength,
                  r = e.length,
                  a = this.ensureBuffer(n + r);
                for (i = 0; i < r; i++) a[n++] = e[i];
                this.bufferLength = n;
              } else this.eof = !0;
            };
            return e;
          })();
          t.DecryptStream = d;
          var f = (function () {
            function e(e, t) {
              this.str = e;
              this.dict = e.dict;
              this.input = new Uint8Array(5);
              if (t) t *= 0.8;
              l.call(this, t);
            }
            e.prototype = Object.create(l.prototype);
            e.prototype.readBlock = function () {
              for (var e = this.str, t = e.getByte(); (0, a.isWhiteSpace)(t); )
                t = e.getByte();
              if (-1 !== t && 126 !== t) {
                var i,
                  n,
                  r = this.bufferLength;
                if (122 === t) {
                  i = this.ensureBuffer(r + 4);
                  for (n = 0; n < 4; ++n) i[r + n] = 0;
                  this.bufferLength += 4;
                } else {
                  var s = this.input;
                  s[0] = t;
                  for (n = 1; n < 5; ++n) {
                    t = e.getByte();
                    for (; (0, a.isWhiteSpace)(t); ) t = e.getByte();
                    s[n] = t;
                    if (-1 === t || 126 === t) break;
                  }
                  i = this.ensureBuffer(r + n - 1);
                  this.bufferLength += n - 1;
                  if (n < 5) {
                    for (; n < 5; ++n) s[n] = 117;
                    this.eof = !0;
                  }
                  var o = 0;
                  for (n = 0; n < 5; ++n) o = 85 * o + (s[n] - 33);
                  for (n = 3; n >= 0; --n) {
                    i[r + n] = 255 & o;
                    o >>= 8;
                  }
                }
              } else this.eof = !0;
            };
            return e;
          })();
          t.Ascii85Stream = f;
          var p = (function () {
            function e(e, t) {
              this.str = e;
              this.dict = e.dict;
              this.firstDigit = -1;
              if (t) t *= 0.5;
              l.call(this, t);
            }
            e.prototype = Object.create(l.prototype);
            e.prototype.readBlock = function () {
              var e = this.str.getBytes(8e3);
              if (e.length) {
                for (
                  var t = (e.length + 1) >> 1,
                    i = this.ensureBuffer(this.bufferLength + t),
                    n = this.bufferLength,
                    r = this.firstDigit,
                    a = 0,
                    s = e.length;
                  a < s;
                  a++
                ) {
                  var o,
                    l = e[a];
                  if (l >= 48 && l <= 57) o = 15 & l;
                  else if ((l >= 65 && l <= 70) || (l >= 97 && l <= 102))
                    o = 9 + (15 & l);
                  else if (62 === l) {
                    this.eof = !0;
                    break;
                  } else continue;
                  if (r < 0) r = o;
                  else {
                    i[n++] = (r << 4) | o;
                    r = -1;
                  }
                }
                if (r >= 0 && this.eof) {
                  i[n++] = r << 4;
                  r = -1;
                }
                this.firstDigit = r;
                this.bufferLength = n;
              } else this.eof = !0;
            };
            return e;
          })();
          t.AsciiHexStream = p;
          var g = (function () {
            function e(e, t) {
              this.str = e;
              this.dict = e.dict;
              l.call(this, t);
            }
            e.prototype = Object.create(l.prototype);
            e.prototype.readBlock = function () {
              var e = this.str.getBytes(2);
              if (e && !(e.length < 2) && 128 !== e[0]) {
                var t,
                  i = this.bufferLength,
                  n = e[0];
                if (n < 128) {
                  (t = this.ensureBuffer(i + n + 1))[i++] = e[1];
                  if (n > 0) {
                    var r = this.str.getBytes(n);
                    t.set(r, i);
                    i += n;
                  }
                } else {
                  n = 257 - n;
                  var a = e[1];
                  t = this.ensureBuffer(i + n + 1);
                  for (var s = 0; s < n; s++) t[i++] = a;
                }
                this.bufferLength = i;
              } else this.eof = !0;
            };
            return e;
          })();
          t.RunLengthStream = g;
          var m = (function () {
            function e(e, t, i) {
              this.str = e;
              this.dict = e.dict;
              this.cachedData = 0;
              this.bitsCached = 0;
              for (
                var n = 4096,
                  r = {
                    earlyChange: i,
                    codeLength: 9,
                    nextCode: 258,
                    dictionaryValues: new Uint8Array(n),
                    dictionaryLengths: new Uint16Array(n),
                    dictionaryPrevCodes: new Uint16Array(n),
                    currentSequence: new Uint8Array(n),
                    currentSequenceLength: 0,
                  },
                  a = 0;
                a < 256;
                ++a
              ) {
                r.dictionaryValues[a] = a;
                r.dictionaryLengths[a] = 1;
              }
              this.lzwState = r;
              l.call(this, t);
            }
            e.prototype = Object.create(l.prototype);
            e.prototype.readBits = function (e) {
              for (var t = this.bitsCached, i = this.cachedData; t < e; ) {
                var n = this.str.getByte();
                if (-1 === n) {
                  this.eof = !0;
                  return null;
                }
                i = (i << 8) | n;
                t += 8;
              }
              this.bitsCached = t -= e;
              this.cachedData = i;
              this.lastCode = null;
              return (i >>> t) & ((1 << e) - 1);
            };
            e.prototype.readBlock = function () {
              var e,
                t,
                i,
                n = 1024,
                r = this.lzwState;
              if (r) {
                var a = r.earlyChange,
                  s = r.nextCode,
                  o = r.dictionaryValues,
                  l = r.dictionaryLengths,
                  c = r.dictionaryPrevCodes,
                  h = r.codeLength,
                  u = r.prevCode,
                  d = r.currentSequence,
                  f = r.currentSequenceLength,
                  p = 0,
                  g = this.bufferLength,
                  m = this.ensureBuffer(this.bufferLength + n);
                for (e = 0; e < 512; e++) {
                  var v = this.readBits(h),
                    b = f > 0;
                  if (v < 256) {
                    d[0] = v;
                    f = 1;
                  } else if (v >= 258)
                    if (v < s)
                      for (t = (f = l[v]) - 1, i = v; t >= 0; t--) {
                        d[t] = o[i];
                        i = c[i];
                      }
                    else d[f++] = d[0];
                  else if (256 === v) {
                    h = 9;
                    s = 258;
                    f = 0;
                    continue;
                  } else {
                    this.eof = !0;
                    delete this.lzwState;
                    break;
                  }
                  if (b) {
                    c[s] = u;
                    l[s] = l[u] + 1;
                    o[s] = d[0];
                    h =
                      (++s + a) & (s + a - 1)
                        ? h
                        : 0 |
                          Math.min(
                            Math.log(s + a) / 0.6931471805599453 + 1,
                            12
                          );
                  }
                  u = v;
                  if (n < (p += f)) {
                    do {
                      n += 512;
                    } while (n < p);
                    m = this.ensureBuffer(this.bufferLength + n);
                  }
                  for (t = 0; t < f; t++) m[g++] = d[t];
                }
                r.nextCode = s;
                r.codeLength = h;
                r.prevCode = u;
                r.currentSequenceLength = f;
                this.bufferLength = g;
              }
            };
            return e;
          })();
          t.LZWStream = m;
          var v = (function () {
            function e() {
              s.call(this, new Uint8Array(0));
            }
            e.prototype = s.prototype;
            return e;
          })();
          t.NullStream = v;
        },
        (e, t, i) => {
          Object.defineProperty(t, "__esModule", { value: !0 });
          t.CCITTFaxStream = void 0;
          var n = i(5),
            r = i(14),
            a = i(12),
            s = (function () {
              function e(e, t, i) {
                this.str = e;
                this.dict = e.dict;
                if (!(0, n.isDict)(i)) i = n.Dict.empty;
                const s = { next: () => e.getByte() };
                this.ccittFaxDecoder = new r.CCITTFaxDecoder(s, {
                  K: i.get("K"),
                  EndOfLine: i.get("EndOfLine"),
                  EncodedByteAlign: i.get("EncodedByteAlign"),
                  Columns: i.get("Columns"),
                  Rows: i.get("Rows"),
                  EndOfBlock: i.get("EndOfBlock"),
                  BlackIs1: i.get("BlackIs1"),
                });
                a.DecodeStream.call(this, t);
              }
              e.prototype = Object.create(a.DecodeStream.prototype);
              e.prototype.readBlock = function () {
                for (; !this.eof; ) {
                  const e = this.ccittFaxDecoder.readNextChar();
                  if (-1 === e) {
                    this.eof = !0;
                    return;
                  }
                  this.ensureBuffer(this.bufferLength + 1);
                  this.buffer[this.bufferLength++] = e;
                }
              };
              return e;
            })();
          t.CCITTFaxStream = s;
        },
        (e, t, i) => {
          Object.defineProperty(t, "__esModule", { value: !0 });
          t.CCITTFaxDecoder = void 0;
          var n = i(2);
          const r = (function () {
            const e = -1,
              t = [
                [-1, -1],
                [-1, -1],
                [7, 8],
                [7, 7],
                [6, 6],
                [6, 6],
                [6, 5],
                [6, 5],
                [4, 0],
                [4, 0],
                [4, 0],
                [4, 0],
                [4, 0],
                [4, 0],
                [4, 0],
                [4, 0],
                [3, 1],
                [3, 1],
                [3, 1],
                [3, 1],
                [3, 1],
                [3, 1],
                [3, 1],
                [3, 1],
                [3, 1],
                [3, 1],
                [3, 1],
                [3, 1],
                [3, 1],
                [3, 1],
                [3, 1],
                [3, 1],
                [3, 4],
                [3, 4],
                [3, 4],
                [3, 4],
                [3, 4],
                [3, 4],
                [3, 4],
                [3, 4],
                [3, 4],
                [3, 4],
                [3, 4],
                [3, 4],
                [3, 4],
                [3, 4],
                [3, 4],
                [3, 4],
                [3, 3],
                [3, 3],
                [3, 3],
                [3, 3],
                [3, 3],
                [3, 3],
                [3, 3],
                [3, 3],
                [3, 3],
                [3, 3],
                [3, 3],
                [3, 3],
                [3, 3],
                [3, 3],
                [3, 3],
                [3, 3],
                [1, 2],
                [1, 2],
                [1, 2],
                [1, 2],
                [1, 2],
                [1, 2],
                [1, 2],
                [1, 2],
                [1, 2],
                [1, 2],
                [1, 2],
                [1, 2],
                [1, 2],
                [1, 2],
                [1, 2],
                [1, 2],
                [1, 2],
                [1, 2],
                [1, 2],
                [1, 2],
                [1, 2],
                [1, 2],
                [1, 2],
                [1, 2],
                [1, 2],
                [1, 2],
                [1, 2],
                [1, 2],
                [1, 2],
                [1, 2],
                [1, 2],
                [1, 2],
                [1, 2],
                [1, 2],
                [1, 2],
                [1, 2],
                [1, 2],
                [1, 2],
                [1, 2],
                [1, 2],
                [1, 2],
                [1, 2],
                [1, 2],
                [1, 2],
                [1, 2],
                [1, 2],
                [1, 2],
                [1, 2],
                [1, 2],
                [1, 2],
                [1, 2],
                [1, 2],
                [1, 2],
                [1, 2],
                [1, 2],
                [1, 2],
                [1, 2],
                [1, 2],
                [1, 2],
                [1, 2],
                [1, 2],
                [1, 2],
                [1, 2],
                [1, 2],
              ],
              i = [
                [-1, -1],
                [12, -2],
                [-1, -1],
                [-1, -1],
                [-1, -1],
                [-1, -1],
                [-1, -1],
                [-1, -1],
                [-1, -1],
                [-1, -1],
                [-1, -1],
                [-1, -1],
                [-1, -1],
                [-1, -1],
                [-1, -1],
                [-1, -1],
                [11, 1792],
                [11, 1792],
                [12, 1984],
                [12, 2048],
                [12, 2112],
                [12, 2176],
                [12, 2240],
                [12, 2304],
                [11, 1856],
                [11, 1856],
                [11, 1920],
                [11, 1920],
                [12, 2368],
                [12, 2432],
                [12, 2496],
                [12, 2560],
              ],
              r = [
                [-1, -1],
                [-1, -1],
                [-1, -1],
                [-1, -1],
                [8, 29],
                [8, 29],
                [8, 30],
                [8, 30],
                [8, 45],
                [8, 45],
                [8, 46],
                [8, 46],
                [7, 22],
                [7, 22],
                [7, 22],
                [7, 22],
                [7, 23],
                [7, 23],
                [7, 23],
                [7, 23],
                [8, 47],
                [8, 47],
                [8, 48],
                [8, 48],
                [6, 13],
                [6, 13],
                [6, 13],
                [6, 13],
                [6, 13],
                [6, 13],
                [6, 13],
                [6, 13],
                [7, 20],
                [7, 20],
                [7, 20],
                [7, 20],
                [8, 33],
                [8, 33],
                [8, 34],
                [8, 34],
                [8, 35],
                [8, 35],
                [8, 36],
                [8, 36],
                [8, 37],
                [8, 37],
                [8, 38],
                [8, 38],
                [7, 19],
                [7, 19],
                [7, 19],
                [7, 19],
                [8, 31],
                [8, 31],
                [8, 32],
                [8, 32],
                [6, 1],
                [6, 1],
                [6, 1],
                [6, 1],
                [6, 1],
                [6, 1],
                [6, 1],
                [6, 1],
                [6, 12],
                [6, 12],
                [6, 12],
                [6, 12],
                [6, 12],
                [6, 12],
                [6, 12],
                [6, 12],
                [8, 53],
                [8, 53],
                [8, 54],
                [8, 54],
                [7, 26],
                [7, 26],
                [7, 26],
                [7, 26],
                [8, 39],
                [8, 39],
                [8, 40],
                [8, 40],
                [8, 41],
                [8, 41],
                [8, 42],
                [8, 42],
                [8, 43],
                [8, 43],
                [8, 44],
                [8, 44],
                [7, 21],
                [7, 21],
                [7, 21],
                [7, 21],
                [7, 28],
                [7, 28],
                [7, 28],
                [7, 28],
                [8, 61],
                [8, 61],
                [8, 62],
                [8, 62],
                [8, 63],
                [8, 63],
                [8, 0],
                [8, 0],
                [8, 320],
                [8, 320],
                [8, 384],
                [8, 384],
                [5, 10],
                [5, 10],
                [5, 10],
                [5, 10],
                [5, 10],
                [5, 10],
                [5, 10],
                [5, 10],
                [5, 10],
                [5, 10],
                [5, 10],
                [5, 10],
                [5, 10],
                [5, 10],
                [5, 10],
                [5, 10],
                [5, 11],
                [5, 11],
                [5, 11],
                [5, 11],
                [5, 11],
                [5, 11],
                [5, 11],
                [5, 11],
                [5, 11],
                [5, 11],
                [5, 11],
                [5, 11],
                [5, 11],
                [5, 11],
                [5, 11],
                [5, 11],
                [7, 27],
                [7, 27],
                [7, 27],
                [7, 27],
                [8, 59],
                [8, 59],
                [8, 60],
                [8, 60],
                [9, 1472],
                [9, 1536],
                [9, 1600],
                [9, 1728],
                [7, 18],
                [7, 18],
                [7, 18],
                [7, 18],
                [7, 24],
                [7, 24],
                [7, 24],
                [7, 24],
                [8, 49],
                [8, 49],
                [8, 50],
                [8, 50],
                [8, 51],
                [8, 51],
                [8, 52],
                [8, 52],
                [7, 25],
                [7, 25],
                [7, 25],
                [7, 25],
                [8, 55],
                [8, 55],
                [8, 56],
                [8, 56],
                [8, 57],
                [8, 57],
                [8, 58],
                [8, 58],
                [6, 192],
                [6, 192],
                [6, 192],
                [6, 192],
                [6, 192],
                [6, 192],
                [6, 192],
                [6, 192],
                [6, 1664],
                [6, 1664],
                [6, 1664],
                [6, 1664],
                [6, 1664],
                [6, 1664],
                [6, 1664],
                [6, 1664],
                [8, 448],
                [8, 448],
                [8, 512],
                [8, 512],
                [9, 704],
                [9, 768],
                [8, 640],
                [8, 640],
                [8, 576],
                [8, 576],
                [9, 832],
                [9, 896],
                [9, 960],
                [9, 1024],
                [9, 1088],
                [9, 1152],
                [9, 1216],
                [9, 1280],
                [9, 1344],
                [9, 1408],
                [7, 256],
                [7, 256],
                [7, 256],
                [7, 256],
                [4, 2],
                [4, 2],
                [4, 2],
                [4, 2],
                [4, 2],
                [4, 2],
                [4, 2],
                [4, 2],
                [4, 2],
                [4, 2],
                [4, 2],
                [4, 2],
                [4, 2],
                [4, 2],
                [4, 2],
                [4, 2],
                [4, 2],
                [4, 2],
                [4, 2],
                [4, 2],
                [4, 2],
                [4, 2],
                [4, 2],
                [4, 2],
                [4, 2],
                [4, 2],
                [4, 2],
                [4, 2],
                [4, 2],
                [4, 2],
                [4, 2],
                [4, 2],
                [4, 3],
                [4, 3],
                [4, 3],
                [4, 3],
                [4, 3],
                [4, 3],
                [4, 3],
                [4, 3],
                [4, 3],
                [4, 3],
                [4, 3],
                [4, 3],
                [4, 3],
                [4, 3],
                [4, 3],
                [4, 3],
                [4, 3],
                [4, 3],
                [4, 3],
                [4, 3],
                [4, 3],
                [4, 3],
                [4, 3],
                [4, 3],
                [4, 3],
                [4, 3],
                [4, 3],
                [4, 3],
                [4, 3],
                [4, 3],
                [4, 3],
                [4, 3],
                [5, 128],
                [5, 128],
                [5, 128],
                [5, 128],
                [5, 128],
                [5, 128],
                [5, 128],
                [5, 128],
                [5, 128],
                [5, 128],
                [5, 128],
                [5, 128],
                [5, 128],
                [5, 128],
                [5, 128],
                [5, 128],
                [5, 8],
                [5, 8],
                [5, 8],
                [5, 8],
                [5, 8],
                [5, 8],
                [5, 8],
                [5, 8],
                [5, 8],
                [5, 8],
                [5, 8],
                [5, 8],
                [5, 8],
                [5, 8],
                [5, 8],
                [5, 8],
                [5, 9],
                [5, 9],
                [5, 9],
                [5, 9],
                [5, 9],
                [5, 9],
                [5, 9],
                [5, 9],
                [5, 9],
                [5, 9],
                [5, 9],
                [5, 9],
                [5, 9],
                [5, 9],
                [5, 9],
                [5, 9],
                [6, 16],
                [6, 16],
                [6, 16],
                [6, 16],
                [6, 16],
                [6, 16],
                [6, 16],
                [6, 16],
                [6, 17],
                [6, 17],
                [6, 17],
                [6, 17],
                [6, 17],
                [6, 17],
                [6, 17],
                [6, 17],
                [4, 4],
                [4, 4],
                [4, 4],
                [4, 4],
                [4, 4],
                [4, 4],
                [4, 4],
                [4, 4],
                [4, 4],
                [4, 4],
                [4, 4],
                [4, 4],
                [4, 4],
                [4, 4],
                [4, 4],
                [4, 4],
                [4, 4],
                [4, 4],
                [4, 4],
                [4, 4],
                [4, 4],
                [4, 4],
                [4, 4],
                [4, 4],
                [4, 4],
                [4, 4],
                [4, 4],
                [4, 4],
                [4, 4],
                [4, 4],
                [4, 4],
                [4, 4],
                [4, 5],
                [4, 5],
                [4, 5],
                [4, 5],
                [4, 5],
                [4, 5],
                [4, 5],
                [4, 5],
                [4, 5],
                [4, 5],
                [4, 5],
                [4, 5],
                [4, 5],
                [4, 5],
                [4, 5],
                [4, 5],
                [4, 5],
                [4, 5],
                [4, 5],
                [4, 5],
                [4, 5],
                [4, 5],
                [4, 5],
                [4, 5],
                [4, 5],
                [4, 5],
                [4, 5],
                [4, 5],
                [4, 5],
                [4, 5],
                [4, 5],
                [4, 5],
                [6, 14],
                [6, 14],
                [6, 14],
                [6, 14],
                [6, 14],
                [6, 14],
                [6, 14],
                [6, 14],
                [6, 15],
                [6, 15],
                [6, 15],
                [6, 15],
                [6, 15],
                [6, 15],
                [6, 15],
                [6, 15],
                [5, 64],
                [5, 64],
                [5, 64],
                [5, 64],
                [5, 64],
                [5, 64],
                [5, 64],
                [5, 64],
                [5, 64],
                [5, 64],
                [5, 64],
                [5, 64],
                [5, 64],
                [5, 64],
                [5, 64],
                [5, 64],
                [4, 6],
                [4, 6],
                [4, 6],
                [4, 6],
                [4, 6],
                [4, 6],
                [4, 6],
                [4, 6],
                [4, 6],
                [4, 6],
                [4, 6],
                [4, 6],
                [4, 6],
                [4, 6],
                [4, 6],
                [4, 6],
                [4, 6],
                [4, 6],
                [4, 6],
                [4, 6],
                [4, 6],
                [4, 6],
                [4, 6],
                [4, 6],
                [4, 6],
                [4, 6],
                [4, 6],
                [4, 6],
                [4, 6],
                [4, 6],
                [4, 6],
                [4, 6],
                [4, 7],
                [4, 7],
                [4, 7],
                [4, 7],
                [4, 7],
                [4, 7],
                [4, 7],
                [4, 7],
                [4, 7],
                [4, 7],
                [4, 7],
                [4, 7],
                [4, 7],
                [4, 7],
                [4, 7],
                [4, 7],
                [4, 7],
                [4, 7],
                [4, 7],
                [4, 7],
                [4, 7],
                [4, 7],
                [4, 7],
                [4, 7],
                [4, 7],
                [4, 7],
                [4, 7],
                [4, 7],
                [4, 7],
                [4, 7],
                [4, 7],
                [4, 7],
              ],
              a = [
                [-1, -1],
                [-1, -1],
                [12, -2],
                [12, -2],
                [-1, -1],
                [-1, -1],
                [-1, -1],
                [-1, -1],
                [-1, -1],
                [-1, -1],
                [-1, -1],
                [-1, -1],
                [-1, -1],
                [-1, -1],
                [-1, -1],
                [-1, -1],
                [-1, -1],
                [-1, -1],
                [-1, -1],
                [-1, -1],
                [-1, -1],
                [-1, -1],
                [-1, -1],
                [-1, -1],
                [-1, -1],
                [-1, -1],
                [-1, -1],
                [-1, -1],
                [-1, -1],
                [-1, -1],
                [-1, -1],
                [-1, -1],
                [11, 1792],
                [11, 1792],
                [11, 1792],
                [11, 1792],
                [12, 1984],
                [12, 1984],
                [12, 2048],
                [12, 2048],
                [12, 2112],
                [12, 2112],
                [12, 2176],
                [12, 2176],
                [12, 2240],
                [12, 2240],
                [12, 2304],
                [12, 2304],
                [11, 1856],
                [11, 1856],
                [11, 1856],
                [11, 1856],
                [11, 1920],
                [11, 1920],
                [11, 1920],
                [11, 1920],
                [12, 2368],
                [12, 2368],
                [12, 2432],
                [12, 2432],
                [12, 2496],
                [12, 2496],
                [12, 2560],
                [12, 2560],
                [10, 18],
                [10, 18],
                [10, 18],
                [10, 18],
                [10, 18],
                [10, 18],
                [10, 18],
                [10, 18],
                [12, 52],
                [12, 52],
                [13, 640],
                [13, 704],
                [13, 768],
                [13, 832],
                [12, 55],
                [12, 55],
                [12, 56],
                [12, 56],
                [13, 1280],
                [13, 1344],
                [13, 1408],
                [13, 1472],
                [12, 59],
                [12, 59],
                [12, 60],
                [12, 60],
                [13, 1536],
                [13, 1600],
                [11, 24],
                [11, 24],
                [11, 24],
                [11, 24],
                [11, 25],
                [11, 25],
                [11, 25],
                [11, 25],
                [13, 1664],
                [13, 1728],
                [12, 320],
                [12, 320],
                [12, 384],
                [12, 384],
                [12, 448],
                [12, 448],
                [13, 512],
                [13, 576],
                [12, 53],
                [12, 53],
                [12, 54],
                [12, 54],
                [13, 896],
                [13, 960],
                [13, 1024],
                [13, 1088],
                [13, 1152],
                [13, 1216],
                [10, 64],
                [10, 64],
                [10, 64],
                [10, 64],
                [10, 64],
                [10, 64],
                [10, 64],
                [10, 64],
              ],
              s = [
                [8, 13],
                [8, 13],
                [8, 13],
                [8, 13],
                [8, 13],
                [8, 13],
                [8, 13],
                [8, 13],
                [8, 13],
                [8, 13],
                [8, 13],
                [8, 13],
                [8, 13],
                [8, 13],
                [8, 13],
                [8, 13],
                [11, 23],
                [11, 23],
                [12, 50],
                [12, 51],
                [12, 44],
                [12, 45],
                [12, 46],
                [12, 47],
                [12, 57],
                [12, 58],
                [12, 61],
                [12, 256],
                [10, 16],
                [10, 16],
                [10, 16],
                [10, 16],
                [10, 17],
                [10, 17],
                [10, 17],
                [10, 17],
                [12, 48],
                [12, 49],
                [12, 62],
                [12, 63],
                [12, 30],
                [12, 31],
                [12, 32],
                [12, 33],
                [12, 40],
                [12, 41],
                [11, 22],
                [11, 22],
                [8, 14],
                [8, 14],
                [8, 14],
                [8, 14],
                [8, 14],
                [8, 14],
                [8, 14],
                [8, 14],
                [8, 14],
                [8, 14],
                [8, 14],
                [8, 14],
                [8, 14],
                [8, 14],
                [8, 14],
                [8, 14],
                [7, 10],
                [7, 10],
                [7, 10],
                [7, 10],
                [7, 10],
                [7, 10],
                [7, 10],
                [7, 10],
                [7, 10],
                [7, 10],
                [7, 10],
                [7, 10],
                [7, 10],
                [7, 10],
                [7, 10],
                [7, 10],
                [7, 10],
                [7, 10],
                [7, 10],
                [7, 10],
                [7, 10],
                [7, 10],
                [7, 10],
                [7, 10],
                [7, 10],
                [7, 10],
                [7, 10],
                [7, 10],
                [7, 10],
                [7, 10],
                [7, 10],
                [7, 10],
                [7, 11],
                [7, 11],
                [7, 11],
                [7, 11],
                [7, 11],
                [7, 11],
                [7, 11],
                [7, 11],
                [7, 11],
                [7, 11],
                [7, 11],
                [7, 11],
                [7, 11],
                [7, 11],
                [7, 11],
                [7, 11],
                [7, 11],
                [7, 11],
                [7, 11],
                [7, 11],
                [7, 11],
                [7, 11],
                [7, 11],
                [7, 11],
                [7, 11],
                [7, 11],
                [7, 11],
                [7, 11],
                [7, 11],
                [7, 11],
                [7, 11],
                [7, 11],
                [9, 15],
                [9, 15],
                [9, 15],
                [9, 15],
                [9, 15],
                [9, 15],
                [9, 15],
                [9, 15],
                [12, 128],
                [12, 192],
                [12, 26],
                [12, 27],
                [12, 28],
                [12, 29],
                [11, 19],
                [11, 19],
                [11, 20],
                [11, 20],
                [12, 34],
                [12, 35],
                [12, 36],
                [12, 37],
                [12, 38],
                [12, 39],
                [11, 21],
                [11, 21],
                [12, 42],
                [12, 43],
                [10, 0],
                [10, 0],
                [10, 0],
                [10, 0],
                [7, 12],
                [7, 12],
                [7, 12],
                [7, 12],
                [7, 12],
                [7, 12],
                [7, 12],
                [7, 12],
                [7, 12],
                [7, 12],
                [7, 12],
                [7, 12],
                [7, 12],
                [7, 12],
                [7, 12],
                [7, 12],
                [7, 12],
                [7, 12],
                [7, 12],
                [7, 12],
                [7, 12],
                [7, 12],
                [7, 12],
                [7, 12],
                [7, 12],
                [7, 12],
                [7, 12],
                [7, 12],
                [7, 12],
                [7, 12],
                [7, 12],
                [7, 12],
              ],
              o = [
                [-1, -1],
                [-1, -1],
                [-1, -1],
                [-1, -1],
                [6, 9],
                [6, 8],
                [5, 7],
                [5, 7],
                [4, 6],
                [4, 6],
                [4, 6],
                [4, 6],
                [4, 5],
                [4, 5],
                [4, 5],
                [4, 5],
                [3, 1],
                [3, 1],
                [3, 1],
                [3, 1],
                [3, 1],
                [3, 1],
                [3, 1],
                [3, 1],
                [3, 4],
                [3, 4],
                [3, 4],
                [3, 4],
                [3, 4],
                [3, 4],
                [3, 4],
                [3, 4],
                [2, 3],
                [2, 3],
                [2, 3],
                [2, 3],
                [2, 3],
                [2, 3],
                [2, 3],
                [2, 3],
                [2, 3],
                [2, 3],
                [2, 3],
                [2, 3],
                [2, 3],
                [2, 3],
                [2, 3],
                [2, 3],
                [2, 2],
                [2, 2],
                [2, 2],
                [2, 2],
                [2, 2],
                [2, 2],
                [2, 2],
                [2, 2],
                [2, 2],
                [2, 2],
                [2, 2],
                [2, 2],
                [2, 2],
                [2, 2],
                [2, 2],
                [2, 2],
              ];
            function l(e, t = {}) {
              if (!e || "function" != typeof e.next)
                throw new Error(
                  'CCITTFaxDecoder - invalid "source" parameter.'
                );
              this.source = e;
              this.eof = !1;
              this.encoding = t.K || 0;
              this.eoline = t.EndOfLine || !1;
              this.byteAlign = t.EncodedByteAlign || !1;
              this.columns = t.Columns || 1728;
              this.rows = t.Rows || 0;
              let i,
                n = t.EndOfBlock;
              if (null == n) n = !0;
              this.eoblock = n;
              this.black = t.BlackIs1 || !1;
              this.codingLine = new Uint32Array(this.columns + 1);
              this.refLine = new Uint32Array(this.columns + 2);
              this.codingLine[0] = this.columns;
              this.codingPos = 0;
              this.row = 0;
              this.nextLine2D = this.encoding < 0;
              this.inputBits = 0;
              this.inputBuf = 0;
              this.outputBits = 0;
              this.rowsDone = !1;
              for (; 0 === (i = this._lookBits(12)); ) this._eatBits(1);
              if (1 === i) this._eatBits(12);
              if (this.encoding > 0) {
                this.nextLine2D = !this._lookBits(1);
                this._eatBits(1);
              }
            }
            l.prototype = {
              readNextChar() {
                if (this.eof) return -1;
                const t = this.refLine,
                  i = this.codingLine,
                  r = this.columns;
                let a, s, o, l, c;
                if (0 === this.outputBits) {
                  if (this.rowsDone) this.eof = !0;
                  if (this.eof) return -1;
                  this.err = !1;
                  let o, c, h;
                  if (this.nextLine2D) {
                    for (l = 0; i[l] < r; ++l) t[l] = i[l];
                    t[l++] = r;
                    t[l] = r;
                    i[0] = 0;
                    this.codingPos = 0;
                    a = 0;
                    s = 0;
                    for (; i[this.codingPos] < r; ) {
                      o = this._getTwoDimCode();
                      switch (o) {
                        case 0:
                          this._addPixels(t[a + 1], s);
                          if (t[a + 1] < r) a += 2;
                          break;
                        case 1:
                          o = c = 0;
                          if (s) {
                            do {
                              o += h = this._getBlackCode();
                            } while (h >= 64);
                            do {
                              c += h = this._getWhiteCode();
                            } while (h >= 64);
                          } else {
                            do {
                              o += h = this._getWhiteCode();
                            } while (h >= 64);
                            do {
                              c += h = this._getBlackCode();
                            } while (h >= 64);
                          }
                          this._addPixels(i[this.codingPos] + o, s);
                          if (i[this.codingPos] < r)
                            this._addPixels(i[this.codingPos] + c, 1 ^ s);
                          for (; t[a] <= i[this.codingPos] && t[a] < r; )
                            a += 2;
                          break;
                        case 7:
                          this._addPixels(t[a] + 3, s);
                          s ^= 1;
                          if (i[this.codingPos] < r) {
                            ++a;
                            for (; t[a] <= i[this.codingPos] && t[a] < r; )
                              a += 2;
                          }
                          break;
                        case 5:
                          this._addPixels(t[a] + 2, s);
                          s ^= 1;
                          if (i[this.codingPos] < r) {
                            ++a;
                            for (; t[a] <= i[this.codingPos] && t[a] < r; )
                              a += 2;
                          }
                          break;
                        case 3:
                          this._addPixels(t[a] + 1, s);
                          s ^= 1;
                          if (i[this.codingPos] < r) {
                            ++a;
                            for (; t[a] <= i[this.codingPos] && t[a] < r; )
                              a += 2;
                          }
                          break;
                        case 2:
                          this._addPixels(t[a], s);
                          s ^= 1;
                          if (i[this.codingPos] < r) {
                            ++a;
                            for (; t[a] <= i[this.codingPos] && t[a] < r; )
                              a += 2;
                          }
                          break;
                        case 8:
                          this._addPixelsNeg(t[a] - 3, s);
                          s ^= 1;
                          if (i[this.codingPos] < r) {
                            if (a > 0) --a;
                            else ++a;
                            for (; t[a] <= i[this.codingPos] && t[a] < r; )
                              a += 2;
                          }
                          break;
                        case 6:
                          this._addPixelsNeg(t[a] - 2, s);
                          s ^= 1;
                          if (i[this.codingPos] < r) {
                            if (a > 0) --a;
                            else ++a;
                            for (; t[a] <= i[this.codingPos] && t[a] < r; )
                              a += 2;
                          }
                          break;
                        case 4:
                          this._addPixelsNeg(t[a] - 1, s);
                          s ^= 1;
                          if (i[this.codingPos] < r) {
                            if (a > 0) --a;
                            else ++a;
                            for (; t[a] <= i[this.codingPos] && t[a] < r; )
                              a += 2;
                          }
                          break;
                        case e:
                          this._addPixels(r, 0);
                          this.eof = !0;
                          break;
                        default:
                          (0, n.info)("bad 2d code");
                          this._addPixels(r, 0);
                          this.err = !0;
                      }
                    }
                  } else {
                    i[0] = 0;
                    this.codingPos = 0;
                    s = 0;
                    for (; i[this.codingPos] < r; ) {
                      o = 0;
                      if (s)
                        do {
                          o += h = this._getBlackCode();
                        } while (h >= 64);
                      else
                        do {
                          o += h = this._getWhiteCode();
                        } while (h >= 64);
                      this._addPixels(i[this.codingPos] + o, s);
                      s ^= 1;
                    }
                  }
                  let u = !1;
                  if (this.byteAlign) this.inputBits &= -8;
                  if (!this.eoblock && this.row === this.rows - 1)
                    this.rowsDone = !0;
                  else {
                    o = this._lookBits(12);
                    if (this.eoline)
                      for (; o !== e && 1 !== o; ) {
                        this._eatBits(1);
                        o = this._lookBits(12);
                      }
                    else
                      for (; 0 === o; ) {
                        this._eatBits(1);
                        o = this._lookBits(12);
                      }
                    if (1 === o) {
                      this._eatBits(12);
                      u = !0;
                    } else if (o === e) this.eof = !0;
                  }
                  if (!this.eof && this.encoding > 0 && !this.rowsDone) {
                    this.nextLine2D = !this._lookBits(1);
                    this._eatBits(1);
                  }
                  if (this.eoblock && u && this.byteAlign) {
                    o = this._lookBits(12);
                    if (1 === o) {
                      this._eatBits(12);
                      if (this.encoding > 0) {
                        this._lookBits(1);
                        this._eatBits(1);
                      }
                      if (this.encoding >= 0)
                        for (l = 0; l < 4; ++l) {
                          o = this._lookBits(12);
                          if (1 !== o) (0, n.info)("bad rtc code: " + o);
                          this._eatBits(12);
                          if (this.encoding > 0) {
                            this._lookBits(1);
                            this._eatBits(1);
                          }
                        }
                      this.eof = !0;
                    }
                  } else if (this.err && this.eoline) {
                    for (;;) {
                      o = this._lookBits(13);
                      if (o === e) {
                        this.eof = !0;
                        return -1;
                      }
                      if (o >> 1 == 1) break;
                      this._eatBits(1);
                    }
                    this._eatBits(12);
                    if (this.encoding > 0) {
                      this._eatBits(1);
                      this.nextLine2D = !(1 & o);
                    }
                  }
                  if (i[0] > 0) this.outputBits = i[(this.codingPos = 0)];
                  else this.outputBits = i[(this.codingPos = 1)];
                  this.row++;
                }
                if (this.outputBits >= 8) {
                  c = 1 & this.codingPos ? 0 : 255;
                  this.outputBits -= 8;
                  if (0 === this.outputBits && i[this.codingPos] < r) {
                    this.codingPos++;
                    this.outputBits = i[this.codingPos] - i[this.codingPos - 1];
                  }
                } else {
                  o = 8;
                  c = 0;
                  do {
                    if (this.outputBits > o) {
                      c <<= o;
                      if (!(1 & this.codingPos)) c |= 255 >> (8 - o);
                      this.outputBits -= o;
                      o = 0;
                    } else {
                      c <<= this.outputBits;
                      if (!(1 & this.codingPos))
                        c |= 255 >> (8 - this.outputBits);
                      o -= this.outputBits;
                      this.outputBits = 0;
                      if (i[this.codingPos] < r) {
                        this.codingPos++;
                        this.outputBits =
                          i[this.codingPos] - i[this.codingPos - 1];
                      } else if (o > 0) {
                        c <<= o;
                        o = 0;
                      }
                    }
                  } while (o);
                }
                if (this.black) c ^= 255;
                return c;
              },
              _addPixels(e, t) {
                const i = this.codingLine;
                let r = this.codingPos;
                if (e > i[r]) {
                  if (e > this.columns) {
                    (0, n.info)("row is wrong length");
                    this.err = !0;
                    e = this.columns;
                  }
                  if ((1 & r) ^ t) ++r;
                  i[r] = e;
                }
                this.codingPos = r;
              },
              _addPixelsNeg(e, t) {
                const i = this.codingLine;
                let r = this.codingPos;
                if (e > i[r]) {
                  if (e > this.columns) {
                    (0, n.info)("row is wrong length");
                    this.err = !0;
                    e = this.columns;
                  }
                  if ((1 & r) ^ t) ++r;
                  i[r] = e;
                } else if (e < i[r]) {
                  if (e < 0) {
                    (0, n.info)("invalid code");
                    this.err = !0;
                    e = 0;
                  }
                  for (; r > 0 && e < i[r - 1]; ) --r;
                  i[r] = e;
                }
                this.codingPos = r;
              },
              _findTableCode(t, i, n, r) {
                const a = r || 0;
                for (let r = t; r <= i; ++r) {
                  let t = this._lookBits(r);
                  if (t === e) return [!0, 1, !1];
                  if (r < i) t <<= i - r;
                  if (!a || t >= a) {
                    const e = n[t - a];
                    if (e[0] === r) {
                      this._eatBits(r);
                      return [!0, e[1], !0];
                    }
                  }
                }
                return [!1, 0, !1];
              },
              _getTwoDimCode() {
                let i,
                  r = 0;
                if (this.eoblock) {
                  r = this._lookBits(7);
                  i = t[r];
                  if (i && i[0] > 0) {
                    this._eatBits(i[0]);
                    return i[1];
                  }
                } else {
                  const e = this._findTableCode(1, 7, t);
                  if (e[0] && e[2]) return e[1];
                }
                (0, n.info)("Bad two dim code");
                return e;
              },
              _getWhiteCode() {
                let t,
                  a = 0;
                if (this.eoblock) {
                  a = this._lookBits(12);
                  if (a === e) return 1;
                  if (a >> 5 == 0) t = i[a];
                  else t = r[a >> 3];
                  if (t[0] > 0) {
                    this._eatBits(t[0]);
                    return t[1];
                  }
                } else {
                  let e = this._findTableCode(1, 9, r);
                  if (e[0]) return e[1];
                  e = this._findTableCode(11, 12, i);
                  if (e[0]) return e[1];
                }
                (0, n.info)("bad white code");
                this._eatBits(1);
                return 1;
              },
              _getBlackCode() {
                let t, i;
                if (this.eoblock) {
                  t = this._lookBits(13);
                  if (t === e) return 1;
                  if (t >> 7 == 0) i = a[t];
                  else if (t >> 9 == 0 && t >> 7 != 0) i = s[(t >> 1) - 64];
                  else i = o[t >> 7];
                  if (i[0] > 0) {
                    this._eatBits(i[0]);
                    return i[1];
                  }
                } else {
                  let e = this._findTableCode(2, 6, o);
                  if (e[0]) return e[1];
                  e = this._findTableCode(7, 12, s, 64);
                  if (e[0]) return e[1];
                  e = this._findTableCode(10, 13, a);
                  if (e[0]) return e[1];
                }
                (0, n.info)("bad black code");
                this._eatBits(1);
                return 1;
              },
              _lookBits(t) {
                let i;
                for (; this.inputBits < t; ) {
                  if (-1 === (i = this.source.next()))
                    if (0 === this.inputBits) return e;
                    else
                      return (
                        (this.inputBuf << (t - this.inputBits)) &
                        (65535 >> (16 - t))
                      );
                  this.inputBuf = (this.inputBuf << 8) | i;
                  this.inputBits += 8;
                }
                return (
                  (this.inputBuf >> (this.inputBits - t)) & (65535 >> (16 - t))
                );
              },
              _eatBits(e) {
                if ((this.inputBits -= e) < 0) this.inputBits = 0;
              },
            };
            return l;
          })();
          t.CCITTFaxDecoder = r;
        },
        (e, t, i) => {
          Object.defineProperty(t, "__esModule", { value: !0 });
          t.Jbig2Stream = void 0;
          var n = i(5),
            r = i(12),
            a = i(16),
            s = i(2);
          const o = (function () {
            function e(e, t, i, n) {
              this.stream = e;
              this.maybeLength = t;
              this.dict = i;
              this.params = n;
              r.DecodeStream.call(this, t);
            }
            e.prototype = Object.create(r.DecodeStream.prototype);
            Object.defineProperty(e.prototype, "bytes", {
              get() {
                return (0, s.shadow)(
                  this,
                  "bytes",
                  this.stream.getBytes(this.maybeLength)
                );
              },
              configurable: !0,
            });
            e.prototype.ensureBuffer = function (e) {};
            e.prototype.readBlock = function () {
              if (this.eof) return;
              const e = new a.Jbig2Image(),
                t = [];
              if ((0, n.isDict)(this.params)) {
                const e = this.params.get("JBIG2Globals");
                if ((0, n.isStream)(e)) {
                  const i = e.getBytes();
                  t.push({ data: i, start: 0, end: i.length });
                }
              }
              t.push({ data: this.bytes, start: 0, end: this.bytes.length });
              const i = e.parseChunks(t),
                r = i.length;
              for (let e = 0; e < r; e++) i[e] ^= 255;
              this.buffer = i;
              this.bufferLength = r;
              this.eof = !0;
            };
            return e;
          })();
          t.Jbig2Stream = o;
        },
        (e, t, i) => {
          Object.defineProperty(t, "__esModule", { value: !0 });
          t.Jbig2Image = void 0;
          var n = i(2),
            r = i(8),
            a = i(17),
            s = i(14);
          class o extends n.BaseException {
            constructor(e) {
              super(`JBIG2 error: ${e}`);
            }
          }
          var l = (function () {
            function e() {}
            e.prototype = {
              getContexts(e) {
                if (e in this) return this[e];
                else return (this[e] = new Int8Array(65536));
              },
            };
            function t(e, t, i) {
              this.data = e;
              this.start = t;
              this.end = i;
            }
            t.prototype = {
              get decoder() {
                var e = new a.ArithmeticDecoder(
                  this.data,
                  this.start,
                  this.end
                );
                return (0, n.shadow)(this, "decoder", e);
              },
              get contextCache() {
                var t = new e();
                return (0, n.shadow)(this, "contextCache", t);
              },
            };
            function i(e, t, i) {
              var n = e.getContexts(t),
                r = 1;
              function a(e) {
                for (var t = 0, a = 0; a < e; a++) {
                  var s = i.readBit(n, r);
                  r = r < 256 ? (r << 1) | s : (511 & ((r << 1) | s)) | 256;
                  t = (t << 1) | s;
                }
                return t >>> 0;
              }
              var s = a(1),
                o = a(1)
                  ? a(1)
                    ? a(1)
                      ? a(1)
                        ? a(1)
                          ? a(32) + 4436
                          : a(12) + 340
                        : a(8) + 84
                      : a(6) + 20
                    : a(4) + 4
                  : a(2);
              if (0 === s) return o;
              else if (o > 0) return -o;
              return null;
            }
            function l(e, t, i) {
              for (var n = e.getContexts("IAID"), r = 1, a = 0; a < i; a++)
                r = (r << 1) | t.readBit(n, r);
              if (i < 31) return r & ((1 << i) - 1);
              else return 2147483647 & r;
            }
            var c = [
                "SymbolDictionary",
                null,
                null,
                null,
                "IntermediateTextRegion",
                null,
                "ImmediateTextRegion",
                "ImmediateLosslessTextRegion",
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                "PatternDictionary",
                null,
                null,
                null,
                "IntermediateHalftoneRegion",
                null,
                "ImmediateHalftoneRegion",
                "ImmediateLosslessHalftoneRegion",
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                "IntermediateGenericRegion",
                null,
                "ImmediateGenericRegion",
                "ImmediateLosslessGenericRegion",
                "IntermediateGenericRefinementRegion",
                null,
                "ImmediateGenericRefinementRegion",
                "ImmediateLosslessGenericRefinementRegion",
                null,
                null,
                null,
                null,
                "PageInformation",
                "EndOfPage",
                "EndOfStripe",
                "EndOfFile",
                "Profiles",
                "Tables",
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                "Extension",
              ],
              h = [
                [
                  { x: -1, y: -2 },
                  { x: 0, y: -2 },
                  { x: 1, y: -2 },
                  { x: -2, y: -1 },
                  { x: -1, y: -1 },
                  { x: 0, y: -1 },
                  { x: 1, y: -1 },
                  { x: 2, y: -1 },
                  { x: -4, y: 0 },
                  { x: -3, y: 0 },
                  { x: -2, y: 0 },
                  { x: -1, y: 0 },
                ],
                [
                  { x: -1, y: -2 },
                  { x: 0, y: -2 },
                  { x: 1, y: -2 },
                  { x: 2, y: -2 },
                  { x: -2, y: -1 },
                  { x: -1, y: -1 },
                  { x: 0, y: -1 },
                  { x: 1, y: -1 },
                  { x: 2, y: -1 },
                  { x: -3, y: 0 },
                  { x: -2, y: 0 },
                  { x: -1, y: 0 },
                ],
                [
                  { x: -1, y: -2 },
                  { x: 0, y: -2 },
                  { x: 1, y: -2 },
                  { x: -2, y: -1 },
                  { x: -1, y: -1 },
                  { x: 0, y: -1 },
                  { x: 1, y: -1 },
                  { x: -2, y: 0 },
                  { x: -1, y: 0 },
                ],
                [
                  { x: -3, y: -1 },
                  { x: -2, y: -1 },
                  { x: -1, y: -1 },
                  { x: 0, y: -1 },
                  { x: 1, y: -1 },
                  { x: -4, y: 0 },
                  { x: -3, y: 0 },
                  { x: -2, y: 0 },
                  { x: -1, y: 0 },
                ],
              ],
              u = [
                {
                  coding: [
                    { x: 0, y: -1 },
                    { x: 1, y: -1 },
                    { x: -1, y: 0 },
                  ],
                  reference: [
                    { x: 0, y: -1 },
                    { x: 1, y: -1 },
                    { x: -1, y: 0 },
                    { x: 0, y: 0 },
                    { x: 1, y: 0 },
                    { x: -1, y: 1 },
                    { x: 0, y: 1 },
                    { x: 1, y: 1 },
                  ],
                },
                {
                  coding: [
                    { x: -1, y: -1 },
                    { x: 0, y: -1 },
                    { x: 1, y: -1 },
                    { x: -1, y: 0 },
                  ],
                  reference: [
                    { x: 0, y: -1 },
                    { x: -1, y: 0 },
                    { x: 0, y: 0 },
                    { x: 1, y: 0 },
                    { x: 0, y: 1 },
                    { x: 1, y: 1 },
                  ],
                },
              ],
              d = [39717, 1941, 229, 405],
              f = [32, 8];
            function p(e, t, i, n, r, a, s, o) {
              if (e) return D(new P(o.data, o.start, o.end), t, i, !1);
              if (
                0 === n &&
                !a &&
                !r &&
                4 === s.length &&
                3 === s[0].x &&
                -1 === s[0].y &&
                -3 === s[1].x &&
                -1 === s[1].y &&
                2 === s[2].x &&
                -2 === s[2].y &&
                -2 === s[3].x &&
                -2 === s[3].y
              )
                return (function (e, t, i) {
                  var n,
                    r,
                    a,
                    s,
                    o,
                    l,
                    c,
                    h = i.decoder,
                    u = i.contextCache.getContexts("GB"),
                    d = [];
                  for (r = 0; r < t; r++) {
                    o = d[r] = new Uint8Array(e);
                    l = r < 1 ? o : d[r - 1];
                    n =
                      ((c = r < 2 ? o : d[r - 2])[0] << 13) |
                      (c[1] << 12) |
                      (c[2] << 11) |
                      (l[0] << 7) |
                      (l[1] << 6) |
                      (l[2] << 5) |
                      (l[3] << 4);
                    for (a = 0; a < e; a++) {
                      o[a] = s = h.readBit(u, n);
                      n =
                        ((31735 & n) << 1) |
                        (a + 3 < e ? c[a + 3] << 11 : 0) |
                        (a + 4 < e ? l[a + 4] << 4 : 0) |
                        s;
                    }
                  }
                  return d;
                })(t, i, o);
              var l = !!a,
                c = h[n].concat(s);
              c.sort(function (e, t) {
                return e.y - t.y || e.x - t.x;
              });
              var u,
                f,
                p = c.length,
                g = new Int8Array(p),
                m = new Int8Array(p),
                v = [],
                b = 0,
                y = 0,
                w = 0,
                x = 0;
              for (f = 0; f < p; f++) {
                g[f] = c[f].x;
                m[f] = c[f].y;
                y = Math.min(y, c[f].x);
                w = Math.max(w, c[f].x);
                x = Math.min(x, c[f].y);
                if (
                  f < p - 1 &&
                  c[f].y === c[f + 1].y &&
                  c[f].x === c[f + 1].x - 1
                )
                  b |= 1 << (p - 1 - f);
                else v.push(f);
              }
              var k = v.length,
                C = new Int8Array(k),
                S = new Int8Array(k),
                _ = new Uint16Array(k);
              for (u = 0; u < k; u++) {
                f = v[u];
                C[u] = c[f].x;
                S[u] = c[f].y;
                _[u] = 1 << (p - 1 - f);
              }
              for (
                var A,
                  F,
                  T,
                  E,
                  I,
                  O = -y,
                  R = -x,
                  N = t - w,
                  M = d[n],
                  B = new Uint8Array(t),
                  L = [],
                  U = o.decoder,
                  z = o.contextCache.getContexts("GB"),
                  j = 0,
                  q = 0,
                  H = 0;
                H < i;
                H++
              ) {
                if (r)
                  if ((j ^= U.readBit(z, M))) {
                    L.push(B);
                    continue;
                  }
                B = new Uint8Array(B);
                L.push(B);
                for (A = 0; A < t; A++)
                  if (!l || !a[H][A]) {
                    if (A >= O && A < N && H >= R) {
                      q = (q << 1) & b;
                      for (f = 0; f < k; f++) {
                        F = H + S[f];
                        T = A + C[f];
                        if ((E = L[F][T])) q |= E = _[f];
                      }
                    } else {
                      q = 0;
                      I = p - 1;
                      for (f = 0; f < p; f++, I--)
                        if ((T = A + g[f]) >= 0 && T < t)
                          if ((F = H + m[f]) >= 0)
                            if ((E = L[F][T])) q |= E << I;
                    }
                    var W = U.readBit(z, q);
                    B[A] = W;
                  } else B[A] = 0;
              }
              return L;
            }
            function g(e, t, i, n, r, a, s, l, c) {
              var h = u[i].coding;
              if (0 === i) h = h.concat([l[0]]);
              var d,
                p = h.length,
                g = new Int32Array(p),
                m = new Int32Array(p);
              for (d = 0; d < p; d++) {
                g[d] = h[d].x;
                m[d] = h[d].y;
              }
              var v = u[i].reference;
              if (0 === i) v = v.concat([l[1]]);
              var b = v.length,
                y = new Int32Array(b),
                w = new Int32Array(b);
              for (d = 0; d < b; d++) {
                y[d] = v[d].x;
                w[d] = v[d].y;
              }
              for (
                var x = n[0].length,
                  k = n.length,
                  C = f[i],
                  S = [],
                  _ = c.decoder,
                  A = c.contextCache.getContexts("GR"),
                  F = 0,
                  T = 0;
                T < t;
                T++
              ) {
                if (s)
                  if ((F ^= _.readBit(A, C)))
                    throw new o("prediction is not supported");
                var P = new Uint8Array(e);
                S.push(P);
                for (var E = 0; E < e; E++) {
                  var I,
                    D,
                    O = 0;
                  for (d = 0; d < p; d++) {
                    I = T + m[d];
                    D = E + g[d];
                    if (I < 0 || D < 0 || D >= e) O <<= 1;
                    else O = (O << 1) | S[I][D];
                  }
                  for (d = 0; d < b; d++) {
                    I = T + w[d] - a;
                    D = E + y[d] - r;
                    if (I < 0 || I >= k || D < 0 || D >= x) O <<= 1;
                    else O = (O << 1) | n[I][D];
                  }
                  var R = _.readBit(A, O);
                  P[E] = R;
                }
              }
              return S;
            }
            function m(
              e,
              t,
              n,
              r,
              a,
              s,
              c,
              h,
              u,
              d,
              f,
              p,
              m,
              v,
              b,
              y,
              w,
              x,
              k
            ) {
              if (e && t)
                throw new o("refinement with Huffman is not supported");
              var C,
                S,
                _ = [];
              for (C = 0; C < r; C++) {
                S = new Uint8Array(n);
                if (a) for (var A = 0; A < n; A++) S[A] = a;
                _.push(S);
              }
              var F = w.decoder,
                T = w.contextCache,
                P = e ? -v.tableDeltaT.decode(k) : -i(T, "IADT", F),
                E = 0;
              C = 0;
              for (; C < s; ) {
                P += e ? v.tableDeltaT.decode(k) : i(T, "IADT", F);
                for (
                  var I = (E += e ? v.tableFirstS.decode(k) : i(T, "IAFS", F));
                  ;

                ) {
                  let r = 0;
                  if (c > 1) r = e ? k.readBits(x) : i(T, "IAIT", F);
                  var D = c * P + r,
                    O = e ? v.symbolIDTable.decode(k) : l(T, F, u),
                    R = t && (e ? k.readBit() : i(T, "IARI", F)),
                    N = h[O],
                    M = N[0].length,
                    B = N.length;
                  if (R) {
                    var L = i(T, "IARDW", F),
                      U = i(T, "IARDH", F);
                    N = g(
                      (M += L),
                      (B += U),
                      b,
                      N,
                      (L >> 1) + i(T, "IARDX", F),
                      (U >> 1) + i(T, "IARDY", F),
                      !1,
                      y,
                      w
                    );
                  }
                  var z,
                    j,
                    q,
                    H = D - (1 & p ? 0 : B - 1),
                    W = I - (2 & p ? M - 1 : 0);
                  if (d) {
                    for (z = 0; z < B; z++)
                      if ((S = _[W + z])) {
                        q = N[z];
                        var G = Math.min(n - H, M);
                        switch (m) {
                          case 0:
                            for (j = 0; j < G; j++) S[H + j] |= q[j];
                            break;
                          case 2:
                            for (j = 0; j < G; j++) S[H + j] ^= q[j];
                            break;
                          default:
                            throw new o(`operator ${m} is not supported`);
                        }
                      }
                    I += B - 1;
                  } else {
                    for (j = 0; j < B; j++)
                      if ((S = _[H + j])) {
                        q = N[j];
                        switch (m) {
                          case 0:
                            for (z = 0; z < M; z++) S[W + z] |= q[z];
                            break;
                          case 2:
                            for (z = 0; z < M; z++) S[W + z] ^= q[z];
                            break;
                          default:
                            throw new o(`operator ${m} is not supported`);
                        }
                      }
                    I += M - 1;
                  }
                  C++;
                  var V = e ? v.tableDeltaS.decode(k) : i(T, "IADS", F);
                  if (null === V) break;
                  I += V + f;
                }
              }
              return _;
            }
            function v(e, t) {
              var i = {};
              i.number = (0, r.readUint32)(e, t);
              var n = e[t + 4],
                a = 63 & n;
              if (!c[a]) throw new o("invalid segment type: " + a);
              i.type = a;
              i.typeName = c[a];
              i.deferredNonRetain = !!(128 & n);
              var s = !!(64 & n),
                l = e[t + 5],
                h = (l >> 5) & 7,
                u = [31 & l],
                d = t + 6;
              if (7 === l) {
                h = 536870911 & (0, r.readUint32)(e, d - 1);
                d += 3;
                var f = (h + 7) >> 3;
                u[0] = e[d++];
                for (; --f > 0; ) u.push(e[d++]);
              } else if (5 === l || 6 === l)
                throw new o("invalid referred-to flags");
              i.retainBits = u;
              let p = 4;
              if (i.number <= 256) p = 1;
              else if (i.number <= 65536) p = 2;
              var g,
                m,
                v = [];
              for (g = 0; g < h; g++) {
                let t;
                if (1 === p) t = e[d];
                else if (2 === p) t = (0, r.readUint16)(e, d);
                else t = (0, r.readUint32)(e, d);
                v.push(t);
                d += p;
              }
              i.referredTo = v;
              if (!s) i.pageAssociation = e[d++];
              else {
                i.pageAssociation = (0, r.readUint32)(e, d);
                d += 4;
              }
              i.length = (0, r.readUint32)(e, d);
              d += 4;
              if (4294967295 === i.length)
                if (38 === a) {
                  var b = y(e, d),
                    x = !!(1 & e[d + w]),
                    k = new Uint8Array(6);
                  if (!x) {
                    k[0] = 255;
                    k[1] = 172;
                  }
                  k[2] = (b.height >>> 24) & 255;
                  k[3] = (b.height >> 16) & 255;
                  k[4] = (b.height >> 8) & 255;
                  k[5] = 255 & b.height;
                  for (g = d, m = e.length; g < m; g++) {
                    for (var C = 0; C < 6 && k[C] === e[g + C]; ) C++;
                    if (6 === C) {
                      i.length = g + 6;
                      break;
                    }
                  }
                  if (4294967295 === i.length)
                    throw new o("segment end was not found");
                } else throw new o("invalid unknown segment length");
              i.headerEnd = d;
              return i;
            }
            function b(e, t, i, n) {
              for (var r = [], a = i; a < n; ) {
                var s = v(t, a);
                a = s.headerEnd;
                var o = { header: s, data: t };
                if (!e.randomAccess) {
                  o.start = a;
                  a += s.length;
                  o.end = a;
                }
                r.push(o);
                if (51 === s.type) break;
              }
              if (e.randomAccess)
                for (var l = 0, c = r.length; l < c; l++) {
                  r[l].start = a;
                  a += r[l].header.length;
                  r[l].end = a;
                }
              return r;
            }
            function y(e, t) {
              return {
                width: (0, r.readUint32)(e, t),
                height: (0, r.readUint32)(e, t + 4),
                x: (0, r.readUint32)(e, t + 8),
                y: (0, r.readUint32)(e, t + 12),
                combinationOperator: 7 & e[t + 16],
              };
            }
            var w = 17;
            function x(e, t) {
              var i,
                n,
                a,
                s,
                l = e.header,
                c = e.data,
                h = e.start,
                u = e.end;
              switch (l.type) {
                case 0:
                  var d = {},
                    f = (0, r.readUint16)(c, h);
                  d.huffman = !!(1 & f);
                  d.refinement = !!(2 & f);
                  d.huffmanDHSelector = (f >> 2) & 3;
                  d.huffmanDWSelector = (f >> 4) & 3;
                  d.bitmapSizeSelector = (f >> 6) & 1;
                  d.aggregationInstancesSelector = (f >> 7) & 1;
                  d.bitmapCodingContextUsed = !!(256 & f);
                  d.bitmapCodingContextRetained = !!(512 & f);
                  d.template = (f >> 10) & 3;
                  d.refinementTemplate = (f >> 12) & 1;
                  h += 2;
                  if (!d.huffman) {
                    s = 0 === d.template ? 4 : 1;
                    n = [];
                    for (a = 0; a < s; a++) {
                      n.push({
                        x: (0, r.readInt8)(c, h),
                        y: (0, r.readInt8)(c, h + 1),
                      });
                      h += 2;
                    }
                    d.at = n;
                  }
                  if (d.refinement && !d.refinementTemplate) {
                    n = [];
                    for (a = 0; a < 2; a++) {
                      n.push({
                        x: (0, r.readInt8)(c, h),
                        y: (0, r.readInt8)(c, h + 1),
                      });
                      h += 2;
                    }
                    d.refinementAt = n;
                  }
                  d.numberOfExportedSymbols = (0, r.readUint32)(c, h);
                  h += 4;
                  d.numberOfNewSymbols = (0, r.readUint32)(c, h);
                  h += 4;
                  i = [d, l.number, l.referredTo, c, h, u];
                  break;
                case 6:
                case 7:
                  var p = {};
                  p.info = y(c, h);
                  h += w;
                  var g = (0, r.readUint16)(c, h);
                  h += 2;
                  p.huffman = !!(1 & g);
                  p.refinement = !!(2 & g);
                  p.logStripSize = (g >> 2) & 3;
                  p.stripSize = 1 << p.logStripSize;
                  p.referenceCorner = (g >> 4) & 3;
                  p.transposed = !!(64 & g);
                  p.combinationOperator = (g >> 7) & 3;
                  p.defaultPixelValue = (g >> 9) & 1;
                  p.dsOffset = (g << 17) >> 27;
                  p.refinementTemplate = (g >> 15) & 1;
                  if (p.huffman) {
                    var m = (0, r.readUint16)(c, h);
                    h += 2;
                    p.huffmanFS = 3 & m;
                    p.huffmanDS = (m >> 2) & 3;
                    p.huffmanDT = (m >> 4) & 3;
                    p.huffmanRefinementDW = (m >> 6) & 3;
                    p.huffmanRefinementDH = (m >> 8) & 3;
                    p.huffmanRefinementDX = (m >> 10) & 3;
                    p.huffmanRefinementDY = (m >> 12) & 3;
                    p.huffmanRefinementSizeSelector = !!(16384 & m);
                  }
                  if (p.refinement && !p.refinementTemplate) {
                    n = [];
                    for (a = 0; a < 2; a++) {
                      n.push({
                        x: (0, r.readInt8)(c, h),
                        y: (0, r.readInt8)(c, h + 1),
                      });
                      h += 2;
                    }
                    p.refinementAt = n;
                  }
                  p.numberOfSymbolInstances = (0, r.readUint32)(c, h);
                  h += 4;
                  i = [p, l.referredTo, c, h, u];
                  break;
                case 16:
                  const e = {},
                    t = c[h++];
                  e.mmr = !!(1 & t);
                  e.template = (t >> 1) & 3;
                  e.patternWidth = c[h++];
                  e.patternHeight = c[h++];
                  e.maxPatternIndex = (0, r.readUint32)(c, h);
                  h += 4;
                  i = [e, l.number, c, h, u];
                  break;
                case 22:
                case 23:
                  const C = {};
                  C.info = y(c, h);
                  h += w;
                  const S = c[h++];
                  C.mmr = !!(1 & S);
                  C.template = (S >> 1) & 3;
                  C.enableSkip = !!(8 & S);
                  C.combinationOperator = (S >> 4) & 7;
                  C.defaultPixelValue = (S >> 7) & 1;
                  C.gridWidth = (0, r.readUint32)(c, h);
                  h += 4;
                  C.gridHeight = (0, r.readUint32)(c, h);
                  h += 4;
                  C.gridOffsetX = 4294967295 & (0, r.readUint32)(c, h);
                  h += 4;
                  C.gridOffsetY = 4294967295 & (0, r.readUint32)(c, h);
                  h += 4;
                  C.gridVectorX = (0, r.readUint16)(c, h);
                  h += 2;
                  C.gridVectorY = (0, r.readUint16)(c, h);
                  h += 2;
                  i = [C, l.referredTo, c, h, u];
                  break;
                case 38:
                case 39:
                  var v = {};
                  v.info = y(c, h);
                  h += w;
                  var b = c[h++];
                  v.mmr = !!(1 & b);
                  v.template = (b >> 1) & 3;
                  v.prediction = !!(8 & b);
                  if (!v.mmr) {
                    s = 0 === v.template ? 4 : 1;
                    n = [];
                    for (a = 0; a < s; a++) {
                      n.push({
                        x: (0, r.readInt8)(c, h),
                        y: (0, r.readInt8)(c, h + 1),
                      });
                      h += 2;
                    }
                    v.at = n;
                  }
                  i = [v, c, h, u];
                  break;
                case 48:
                  var x = {
                    width: (0, r.readUint32)(c, h),
                    height: (0, r.readUint32)(c, h + 4),
                    resolutionX: (0, r.readUint32)(c, h + 8),
                    resolutionY: (0, r.readUint32)(c, h + 12),
                  };
                  if (4294967295 === x.height) delete x.height;
                  var k = c[h + 16];
                  (0, r.readUint16)(c, h + 17);
                  x.lossless = !!(1 & k);
                  x.refinement = !!(2 & k);
                  x.defaultPixelValue = (k >> 2) & 1;
                  x.combinationOperator = (k >> 3) & 3;
                  x.requiresBuffer = !!(32 & k);
                  x.combinationOperatorOverride = !!(64 & k);
                  i = [x];
                  break;
                case 49:
                case 50:
                case 51:
                  break;
                case 53:
                  i = [l.number, c, h, u];
                  break;
                case 62:
                  break;
                default:
                  throw new o(
                    `segment type ${l.typeName}(${l.type}) is not implemented`
                  );
              }
              var C = "on" + l.typeName;
              if (C in t) t[C].apply(t, i);
            }
            function k(e, t) {
              for (var i = 0, n = e.length; i < n; i++) x(e[i], t);
            }
            function C() {}
            C.prototype = {
              onPageInformation: function (e) {
                this.currentPageInfo = e;
                var t = (e.width + 7) >> 3,
                  i = new Uint8ClampedArray(t * e.height);
                if (e.defaultPixelValue)
                  for (var n = 0, r = i.length; n < r; n++) i[n] = 255;
                this.buffer = i;
              },
              drawBitmap: function (e, t) {
                var i,
                  n,
                  r,
                  a,
                  s = this.currentPageInfo,
                  l = e.width,
                  c = e.height,
                  h = (s.width + 7) >> 3,
                  u = s.combinationOperatorOverride
                    ? e.combinationOperator
                    : s.combinationOperator,
                  d = this.buffer,
                  f = 128 >> (7 & e.x),
                  p = e.y * h + (e.x >> 3);
                switch (u) {
                  case 0:
                    for (i = 0; i < c; i++) {
                      r = f;
                      a = p;
                      for (n = 0; n < l; n++) {
                        if (t[i][n]) d[a] |= r;
                        if (!(r >>= 1)) {
                          r = 128;
                          a++;
                        }
                      }
                      p += h;
                    }
                    break;
                  case 2:
                    for (i = 0; i < c; i++) {
                      r = f;
                      a = p;
                      for (n = 0; n < l; n++) {
                        if (t[i][n]) d[a] ^= r;
                        if (!(r >>= 1)) {
                          r = 128;
                          a++;
                        }
                      }
                      p += h;
                    }
                    break;
                  default:
                    throw new o(`operator ${u} is not supported`);
                }
              },
              onImmediateGenericRegion: function (e, i, n, r) {
                var a = e.info,
                  s = new t(i, n, r),
                  o = p(
                    e.mmr,
                    a.width,
                    a.height,
                    e.template,
                    e.prediction,
                    null,
                    e.at,
                    s
                  );
                this.drawBitmap(a, o);
              },
              onImmediateLosslessGenericRegion: function () {
                this.onImmediateGenericRegion.apply(this, arguments);
              },
              onSymbolDictionary: function (e, n, a, s, c, h) {
                let u, d;
                if (e.huffman) {
                  u = (function (e, t, i) {
                    let n,
                      r,
                      a,
                      s,
                      l = 0;
                    switch (e.huffmanDHSelector) {
                      case 0:
                      case 1:
                        n = T(e.huffmanDHSelector + 4);
                        break;
                      case 3:
                        n = E(l, t, i);
                        l++;
                        break;
                      default:
                        throw new o("invalid Huffman DH selector");
                    }
                    switch (e.huffmanDWSelector) {
                      case 0:
                      case 1:
                        r = T(e.huffmanDWSelector + 2);
                        break;
                      case 3:
                        r = E(l, t, i);
                        l++;
                        break;
                      default:
                        throw new o("invalid Huffman DW selector");
                    }
                    if (e.bitmapSizeSelector) {
                      a = E(l, t, i);
                      l++;
                    } else a = T(1);
                    if (e.aggregationInstancesSelector) s = E(l, t, i);
                    else s = T(1);
                    return {
                      tableDeltaHeight: n,
                      tableDeltaWidth: r,
                      tableBitmapSize: a,
                      tableAggregateInstances: s,
                    };
                  })(e, a, this.customTables);
                  d = new P(s, c, h);
                }
                var f = this.symbols;
                if (!f) this.symbols = f = {};
                for (var v = [], b = 0, y = a.length; b < y; b++) {
                  const e = f[a[b]];
                  if (e) v = v.concat(e);
                }
                var w = new t(s, c, h);
                f[n] = (function (e, t, n, a, s, c, h, u, d, f, v, b) {
                  if (e && t)
                    throw new o(
                      "symbol refinement with Huffman is not supported"
                    );
                  var y = [],
                    w = 0,
                    x = (0, r.log2)(n.length + a),
                    k = v.decoder,
                    C = v.contextCache;
                  let S, _;
                  if (e) {
                    S = T(1);
                    _ = [];
                    x = Math.max(x, 1);
                  }
                  for (; y.length < a; ) {
                    w += e ? c.tableDeltaHeight.decode(b) : i(C, "IADH", k);
                    let r = 0,
                      a = 0;
                    const s = e ? _.length : 0;
                    for (;;) {
                      var A,
                        F = e ? c.tableDeltaWidth.decode(b) : i(C, "IADW", k);
                      if (null === F) break;
                      r += F;
                      a += r;
                      if (t) {
                        var P = i(C, "IAAI", k);
                        if (P > 1)
                          A = m(
                            e,
                            t,
                            r,
                            w,
                            0,
                            P,
                            1,
                            n.concat(y),
                            x,
                            0,
                            0,
                            1,
                            0,
                            c,
                            d,
                            f,
                            v,
                            0,
                            b
                          );
                        else {
                          var E = l(C, k, x),
                            O = i(C, "IARDX", k),
                            R = i(C, "IARDY", k);
                          A = g(
                            r,
                            w,
                            d,
                            E < n.length ? n[E] : y[E - n.length],
                            O,
                            R,
                            !1,
                            f,
                            v
                          );
                        }
                        y.push(A);
                      } else if (e) _.push(r);
                      else {
                        A = p(!1, r, w, h, !1, null, u, v);
                        y.push(A);
                      }
                    }
                    if (e && !t) {
                      const e = c.tableBitmapSize.decode(b);
                      b.byteAlign();
                      let t;
                      if (0 === e) t = I(b, a, w);
                      else {
                        const i = b.end,
                          n = b.position + e;
                        b.end = n;
                        t = D(b, a, w, !1);
                        b.end = i;
                        b.position = n;
                      }
                      const i = _.length;
                      if (s === i - 1) y.push(t);
                      else {
                        let e,
                          n,
                          r,
                          a,
                          o,
                          l = 0;
                        for (e = s; e < i; e++) {
                          a = _[e];
                          r = l + a;
                          o = [];
                          for (n = 0; n < w; n++) o.push(t[n].subarray(l, r));
                          y.push(o);
                          l = r;
                        }
                      }
                    }
                  }
                  for (
                    var N = [], M = [], B = !1, L = n.length + a;
                    M.length < L;

                  ) {
                    for (var U = e ? S.decode(b) : i(C, "IAEX", k); U--; )
                      M.push(B);
                    B = !B;
                  }
                  for (var z = 0, j = n.length; z < j; z++)
                    if (M[z]) N.push(n[z]);
                  for (var q = 0; q < a; z++, q++) if (M[z]) N.push(y[q]);
                  return N;
                })(
                  e.huffman,
                  e.refinement,
                  v,
                  e.numberOfNewSymbols,
                  e.numberOfExportedSymbols,
                  u,
                  e.template,
                  e.at,
                  e.refinementTemplate,
                  e.refinementAt,
                  w,
                  d
                );
              },
              onImmediateTextRegion: function (e, i, n, a, s) {
                var l = e.info;
                let c, h;
                for (
                  var u = this.symbols, d = [], f = 0, p = i.length;
                  f < p;
                  f++
                ) {
                  const e = u[i[f]];
                  if (e) d = d.concat(e);
                }
                var g = (0, r.log2)(d.length);
                if (e.huffman) {
                  h = new P(n, a, s);
                  c = (function (e, t, i, n, r) {
                    const a = [];
                    for (let e = 0; e <= 34; e++) {
                      const t = r.readBits(4);
                      a.push(new S([e, t, 0, 0]));
                    }
                    const s = new A(a, !1);
                    a.length = 0;
                    for (let e = 0; e < n; ) {
                      const t = s.decode(r);
                      if (t >= 32) {
                        let i, n, s;
                        switch (t) {
                          case 32:
                            if (0 === e)
                              throw new o(
                                "no previous value in symbol ID table"
                              );
                            n = r.readBits(2) + 3;
                            i = a[e - 1].prefixLength;
                            break;
                          case 33:
                            n = r.readBits(3) + 3;
                            i = 0;
                            break;
                          case 34:
                            n = r.readBits(7) + 11;
                            i = 0;
                            break;
                          default:
                            throw new o(
                              "invalid code length in symbol ID table"
                            );
                        }
                        for (s = 0; s < n; s++) {
                          a.push(new S([e, i, 0, 0]));
                          e++;
                        }
                      } else {
                        a.push(new S([e, t, 0, 0]));
                        e++;
                      }
                    }
                    r.byteAlign();
                    const l = new A(a, !1);
                    let c,
                      h,
                      u,
                      d = 0;
                    switch (e.huffmanFS) {
                      case 0:
                      case 1:
                        c = T(e.huffmanFS + 6);
                        break;
                      case 3:
                        c = E(d, t, i);
                        d++;
                        break;
                      default:
                        throw new o("invalid Huffman FS selector");
                    }
                    switch (e.huffmanDS) {
                      case 0:
                      case 1:
                      case 2:
                        h = T(e.huffmanDS + 8);
                        break;
                      case 3:
                        h = E(d, t, i);
                        d++;
                        break;
                      default:
                        throw new o("invalid Huffman DS selector");
                    }
                    switch (e.huffmanDT) {
                      case 0:
                      case 1:
                      case 2:
                        u = T(e.huffmanDT + 11);
                        break;
                      case 3:
                        u = E(d, t, i);
                        d++;
                        break;
                      default:
                        throw new o("invalid Huffman DT selector");
                    }
                    if (e.refinement)
                      throw new o("refinement with Huffman is not supported");
                    return {
                      symbolIDTable: l,
                      tableFirstS: c,
                      tableDeltaS: h,
                      tableDeltaT: u,
                    };
                  })(e, i, this.customTables, d.length, h);
                }
                var v = new t(n, a, s),
                  b = m(
                    e.huffman,
                    e.refinement,
                    l.width,
                    l.height,
                    e.defaultPixelValue,
                    e.numberOfSymbolInstances,
                    e.stripSize,
                    d,
                    g,
                    e.transposed,
                    e.dsOffset,
                    e.referenceCorner,
                    e.combinationOperator,
                    c,
                    e.refinementTemplate,
                    e.refinementAt,
                    v,
                    e.logStripSize,
                    h
                  );
                this.drawBitmap(l, b);
              },
              onImmediateLosslessTextRegion: function () {
                this.onImmediateTextRegion.apply(this, arguments);
              },
              onPatternDictionary(e, i, n, r, a) {
                let s = this.patterns;
                if (!s) this.patterns = s = {};
                const o = new t(n, r, a);
                s[i] = (function (e, t, i, n, r, a) {
                  const s = [];
                  if (!e) {
                    s.push({ x: -t, y: 0 });
                    if (0 === r) {
                      s.push({ x: -3, y: -1 });
                      s.push({ x: 2, y: -2 });
                      s.push({ x: -2, y: -2 });
                    }
                  }
                  const o = p(e, (n + 1) * t, i, r, !1, null, s, a),
                    l = [];
                  for (let e = 0; e <= n; e++) {
                    const n = [],
                      r = t * e,
                      a = r + t;
                    for (let e = 0; e < i; e++) n.push(o[e].subarray(r, a));
                    l.push(n);
                  }
                  return l;
                })(
                  e.mmr,
                  e.patternWidth,
                  e.patternHeight,
                  e.maxPatternIndex,
                  e.template,
                  o
                );
              },
              onImmediateHalftoneRegion(e, i, n, a, s) {
                const l = this.patterns[i[0]],
                  c = e.info,
                  h = new t(n, a, s),
                  u = (function (e, t, i, n, a, s, l, c, h, u, d, f, g, m, v) {
                    if (l) throw new o("skip is not supported");
                    if (0 !== c)
                      throw new o(
                        "operator " + c + " is not supported in halftone region"
                      );
                    const b = [];
                    let y, w, x;
                    for (y = 0; y < a; y++) {
                      x = new Uint8Array(n);
                      if (s) for (w = 0; w < n; w++) x[w] = s;
                      b.push(x);
                    }
                    const k = t.length,
                      C = t[0],
                      S = C[0].length,
                      _ = C.length,
                      A = (0, r.log2)(k),
                      F = [];
                    if (!e) {
                      F.push({ x: i <= 1 ? 3 : 2, y: -1 });
                      if (0 === i) {
                        F.push({ x: -3, y: -1 });
                        F.push({ x: 2, y: -2 });
                        F.push({ x: -2, y: -2 });
                      }
                    }
                    const T = [];
                    let E, I, O, R, N, M, B, L, U, z, j;
                    if (e) E = new P(v.data, v.start, v.end);
                    for (y = A - 1; y >= 0; y--) {
                      if (e) I = D(E, h, u, !0);
                      else I = p(!1, h, u, i, !1, null, F, v);
                      T[y] = I;
                    }
                    for (O = 0; O < u; O++)
                      for (R = 0; R < h; R++) {
                        N = 0;
                        M = 0;
                        for (w = A - 1; w >= 0; w--) {
                          N = T[w][O][R] ^ N;
                          M |= N << w;
                        }
                        B = t[M];
                        L = (d + O * m + R * g) >> 8;
                        U = (f + O * g - R * m) >> 8;
                        if (L >= 0 && L + S <= n && U >= 0 && U + _ <= a)
                          for (y = 0; y < _; y++) {
                            j = b[U + y];
                            z = B[y];
                            for (w = 0; w < S; w++) j[L + w] |= z[w];
                          }
                        else {
                          let e, t;
                          for (y = 0; y < _; y++) {
                            t = U + y;
                            if (!(t < 0 || t >= a)) {
                              j = b[t];
                              z = B[y];
                              for (w = 0; w < S; w++) {
                                e = L + w;
                                if (e >= 0 && e < n) j[e] |= z[w];
                              }
                            }
                          }
                        }
                      }
                    return b;
                  })(
                    e.mmr,
                    l,
                    e.template,
                    c.width,
                    c.height,
                    e.defaultPixelValue,
                    e.enableSkip,
                    e.combinationOperator,
                    e.gridWidth,
                    e.gridHeight,
                    e.gridOffsetX,
                    e.gridOffsetY,
                    e.gridVectorX,
                    e.gridVectorY,
                    h
                  );
                this.drawBitmap(c, u);
              },
              onImmediateLosslessHalftoneRegion() {
                this.onImmediateHalftoneRegion.apply(this, arguments);
              },
              onTables(e, t, i, n) {
                let a = this.customTables;
                if (!a) this.customTables = a = {};
                a[e] = (function (e, t, i) {
                  const n = e[t],
                    a = 4294967295 & (0, r.readUint32)(e, t + 1),
                    s = 4294967295 & (0, r.readUint32)(e, t + 5),
                    o = new P(e, t + 9, i),
                    l = 1 + ((n >> 1) & 7),
                    c = 1 + ((n >> 4) & 7),
                    h = [];
                  let u,
                    d,
                    f = a;
                  do {
                    u = o.readBits(l);
                    d = o.readBits(c);
                    h.push(new S([f, u, d, 0]));
                    f += 1 << d;
                  } while (f < s);
                  u = o.readBits(l);
                  h.push(new S([a - 1, u, 32, 0, "lower"]));
                  u = o.readBits(l);
                  h.push(new S([s, u, 32, 0]));
                  if (1 & n) {
                    u = o.readBits(l);
                    h.push(new S([u, 0]));
                  }
                  return new A(h, !1);
                })(t, i, n);
              },
            };
            function S(e) {
              if (2 === e.length) {
                this.isOOB = !0;
                this.rangeLow = 0;
                this.prefixLength = e[0];
                this.rangeLength = 0;
                this.prefixCode = e[1];
                this.isLowerRange = !1;
              } else {
                this.isOOB = !1;
                this.rangeLow = e[0];
                this.prefixLength = e[1];
                this.rangeLength = e[2];
                this.prefixCode = e[3];
                this.isLowerRange = "lower" === e[4];
              }
            }
            function _(e) {
              this.children = [];
              if (e) {
                this.isLeaf = !0;
                this.rangeLength = e.rangeLength;
                this.rangeLow = e.rangeLow;
                this.isLowerRange = e.isLowerRange;
                this.isOOB = e.isOOB;
              } else this.isLeaf = !1;
            }
            _.prototype = {
              buildTree(e, t) {
                const i = (e.prefixCode >> t) & 1;
                if (t <= 0) this.children[i] = new _(e);
                else {
                  let n = this.children[i];
                  if (!n) this.children[i] = n = new _(null);
                  n.buildTree(e, t - 1);
                }
              },
              decodeNode(e) {
                if (this.isLeaf) {
                  if (this.isOOB) return null;
                  const t = e.readBits(this.rangeLength);
                  return this.rangeLow + (this.isLowerRange ? -t : t);
                }
                const t = this.children[e.readBit()];
                if (!t) throw new o("invalid Huffman data");
                return t.decodeNode(e);
              },
            };
            function A(e, t) {
              if (!t) this.assignPrefixCodes(e);
              this.rootNode = new _(null);
              for (let t = 0, i = e.length; t < i; t++) {
                const i = e[t];
                if (i.prefixLength > 0)
                  this.rootNode.buildTree(i, i.prefixLength - 1);
              }
            }
            A.prototype = {
              decode(e) {
                return this.rootNode.decodeNode(e);
              },
              assignPrefixCodes(e) {
                const t = e.length;
                let i = 0;
                for (let n = 0; n < t; n++) i = Math.max(i, e[n].prefixLength);
                const n = new Uint32Array(i + 1);
                for (let i = 0; i < t; i++) n[e[i].prefixLength]++;
                let r,
                  a,
                  s,
                  o = 1,
                  l = 0;
                n[0] = 0;
                for (; o <= i; ) {
                  l = (l + n[o - 1]) << 1;
                  r = l;
                  a = 0;
                  for (; a < t; ) {
                    s = e[a];
                    if (s.prefixLength === o) {
                      s.prefixCode = r;
                      r++;
                    }
                    a++;
                  }
                  o++;
                }
              },
            };
            const F = {};
            function T(e) {
              let t,
                i = F[e];
              if (i) return i;
              switch (e) {
                case 1:
                  t = [
                    [0, 1, 4, 0],
                    [16, 2, 8, 2],
                    [272, 3, 16, 6],
                    [65808, 3, 32, 7],
                  ];
                  break;
                case 2:
                  t = [
                    [0, 1, 0, 0],
                    [1, 2, 0, 2],
                    [2, 3, 0, 6],
                    [3, 4, 3, 14],
                    [11, 5, 6, 30],
                    [75, 6, 32, 62],
                    [6, 63],
                  ];
                  break;
                case 3:
                  t = [
                    [-256, 8, 8, 254],
                    [0, 1, 0, 0],
                    [1, 2, 0, 2],
                    [2, 3, 0, 6],
                    [3, 4, 3, 14],
                    [11, 5, 6, 30],
                    [-257, 8, 32, 255, "lower"],
                    [75, 7, 32, 126],
                    [6, 62],
                  ];
                  break;
                case 4:
                  t = [
                    [1, 1, 0, 0],
                    [2, 2, 0, 2],
                    [3, 3, 0, 6],
                    [4, 4, 3, 14],
                    [12, 5, 6, 30],
                    [76, 5, 32, 31],
                  ];
                  break;
                case 5:
                  t = [
                    [-255, 7, 8, 126],
                    [1, 1, 0, 0],
                    [2, 2, 0, 2],
                    [3, 3, 0, 6],
                    [4, 4, 3, 14],
                    [12, 5, 6, 30],
                    [-256, 7, 32, 127, "lower"],
                    [76, 6, 32, 62],
                  ];
                  break;
                case 6:
                  t = [
                    [-2048, 5, 10, 28],
                    [-1024, 4, 9, 8],
                    [-512, 4, 8, 9],
                    [-256, 4, 7, 10],
                    [-128, 5, 6, 29],
                    [-64, 5, 5, 30],
                    [-32, 4, 5, 11],
                    [0, 2, 7, 0],
                    [128, 3, 7, 2],
                    [256, 3, 8, 3],
                    [512, 4, 9, 12],
                    [1024, 4, 10, 13],
                    [-2049, 6, 32, 62, "lower"],
                    [2048, 6, 32, 63],
                  ];
                  break;
                case 7:
                  t = [
                    [-1024, 4, 9, 8],
                    [-512, 3, 8, 0],
                    [-256, 4, 7, 9],
                    [-128, 5, 6, 26],
                    [-64, 5, 5, 27],
                    [-32, 4, 5, 10],
                    [0, 4, 5, 11],
                    [32, 5, 5, 28],
                    [64, 5, 6, 29],
                    [128, 4, 7, 12],
                    [256, 3, 8, 1],
                    [512, 3, 9, 2],
                    [1024, 3, 10, 3],
                    [-1025, 5, 32, 30, "lower"],
                    [2048, 5, 32, 31],
                  ];
                  break;
                case 8:
                  t = [
                    [-15, 8, 3, 252],
                    [-7, 9, 1, 508],
                    [-5, 8, 1, 253],
                    [-3, 9, 0, 509],
                    [-2, 7, 0, 124],
                    [-1, 4, 0, 10],
                    [0, 2, 1, 0],
                    [2, 5, 0, 26],
                    [3, 6, 0, 58],
                    [4, 3, 4, 4],
                    [20, 6, 1, 59],
                    [22, 4, 4, 11],
                    [38, 4, 5, 12],
                    [70, 5, 6, 27],
                    [134, 5, 7, 28],
                    [262, 6, 7, 60],
                    [390, 7, 8, 125],
                    [646, 6, 10, 61],
                    [-16, 9, 32, 510, "lower"],
                    [1670, 9, 32, 511],
                    [2, 1],
                  ];
                  break;
                case 9:
                  t = [
                    [-31, 8, 4, 252],
                    [-15, 9, 2, 508],
                    [-11, 8, 2, 253],
                    [-7, 9, 1, 509],
                    [-5, 7, 1, 124],
                    [-3, 4, 1, 10],
                    [-1, 3, 1, 2],
                    [1, 3, 1, 3],
                    [3, 5, 1, 26],
                    [5, 6, 1, 58],
                    [7, 3, 5, 4],
                    [39, 6, 2, 59],
                    [43, 4, 5, 11],
                    [75, 4, 6, 12],
                    [139, 5, 7, 27],
                    [267, 5, 8, 28],
                    [523, 6, 8, 60],
                    [779, 7, 9, 125],
                    [1291, 6, 11, 61],
                    [-32, 9, 32, 510, "lower"],
                    [3339, 9, 32, 511],
                    [2, 0],
                  ];
                  break;
                case 10:
                  t = [
                    [-21, 7, 4, 122],
                    [-5, 8, 0, 252],
                    [-4, 7, 0, 123],
                    [-3, 5, 0, 24],
                    [-2, 2, 2, 0],
                    [2, 5, 0, 25],
                    [3, 6, 0, 54],
                    [4, 7, 0, 124],
                    [5, 8, 0, 253],
                    [6, 2, 6, 1],
                    [70, 5, 5, 26],
                    [102, 6, 5, 55],
                    [134, 6, 6, 56],
                    [198, 6, 7, 57],
                    [326, 6, 8, 58],
                    [582, 6, 9, 59],
                    [1094, 6, 10, 60],
                    [2118, 7, 11, 125],
                    [-22, 8, 32, 254, "lower"],
                    [4166, 8, 32, 255],
                    [2, 2],
                  ];
                  break;
                case 11:
                  t = [
                    [1, 1, 0, 0],
                    [2, 2, 1, 2],
                    [4, 4, 0, 12],
                    [5, 4, 1, 13],
                    [7, 5, 1, 28],
                    [9, 5, 2, 29],
                    [13, 6, 2, 60],
                    [17, 7, 2, 122],
                    [21, 7, 3, 123],
                    [29, 7, 4, 124],
                    [45, 7, 5, 125],
                    [77, 7, 6, 126],
                    [141, 7, 32, 127],
                  ];
                  break;
                case 12:
                  t = [
                    [1, 1, 0, 0],
                    [2, 2, 0, 2],
                    [3, 3, 1, 6],
                    [5, 5, 0, 28],
                    [6, 5, 1, 29],
                    [8, 6, 1, 60],
                    [10, 7, 0, 122],
                    [11, 7, 1, 123],
                    [13, 7, 2, 124],
                    [17, 7, 3, 125],
                    [25, 7, 4, 126],
                    [41, 8, 5, 254],
                    [73, 8, 32, 255],
                  ];
                  break;
                case 13:
                  t = [
                    [1, 1, 0, 0],
                    [2, 3, 0, 4],
                    [3, 4, 0, 12],
                    [4, 5, 0, 28],
                    [5, 4, 1, 13],
                    [7, 3, 3, 5],
                    [15, 6, 1, 58],
                    [17, 6, 2, 59],
                    [21, 6, 3, 60],
                    [29, 6, 4, 61],
                    [45, 6, 5, 62],
                    [77, 7, 6, 126],
                    [141, 7, 32, 127],
                  ];
                  break;
                case 14:
                  t = [
                    [-2, 3, 0, 4],
                    [-1, 3, 0, 5],
                    [0, 1, 0, 0],
                    [1, 3, 0, 6],
                    [2, 3, 0, 7],
                  ];
                  break;
                case 15:
                  t = [
                    [-24, 7, 4, 124],
                    [-8, 6, 2, 60],
                    [-4, 5, 1, 28],
                    [-2, 4, 0, 12],
                    [-1, 3, 0, 4],
                    [0, 1, 0, 0],
                    [1, 3, 0, 5],
                    [2, 4, 0, 13],
                    [3, 5, 1, 29],
                    [5, 6, 2, 61],
                    [9, 7, 4, 125],
                    [-25, 7, 32, 126, "lower"],
                    [25, 7, 32, 127],
                  ];
                  break;
                default:
                  throw new o(`standard table B.${e} does not exist`);
              }
              for (let e = 0, i = t.length; e < i; e++) t[e] = new S(t[e]);
              i = new A(t, !0);
              F[e] = i;
              return i;
            }
            function P(e, t, i) {
              this.data = e;
              this.start = t;
              this.end = i;
              this.position = t;
              this.shift = -1;
              this.currentByte = 0;
            }
            P.prototype = {
              readBit() {
                if (this.shift < 0) {
                  if (this.position >= this.end)
                    throw new o("end of data while reading bit");
                  this.currentByte = this.data[this.position++];
                  this.shift = 7;
                }
                const e = (this.currentByte >> this.shift) & 1;
                this.shift--;
                return e;
              },
              readBits(e) {
                let t,
                  i = 0;
                for (t = e - 1; t >= 0; t--) i |= this.readBit() << t;
                return i;
              },
              byteAlign() {
                this.shift = -1;
              },
              next() {
                if (this.position >= this.end) return -1;
                else return this.data[this.position++];
              },
            };
            function E(e, t, i) {
              let n = 0;
              for (let r = 0, a = t.length; r < a; r++) {
                const a = i[t[r]];
                if (a) {
                  if (e === n) return a;
                  n++;
                }
              }
              throw new o("can't find custom Huffman table");
            }
            function I(e, t, i) {
              const n = [];
              for (let r = 0; r < i; r++) {
                const i = new Uint8Array(t);
                n.push(i);
                for (let n = 0; n < t; n++) i[n] = e.readBit();
                e.byteAlign();
              }
              return n;
            }
            function D(e, t, i, n) {
              const r = {
                  K: -1,
                  Columns: t,
                  Rows: i,
                  BlackIs1: !0,
                  EndOfBlock: n,
                },
                a = new s.CCITTFaxDecoder(e, r),
                o = [];
              let l,
                c = !1;
              for (let e = 0; e < i; e++) {
                const e = new Uint8Array(t);
                o.push(e);
                let i = -1;
                for (let n = 0; n < t; n++) {
                  if (i < 0) {
                    l = a.readNextChar();
                    if (-1 === l) {
                      l = 0;
                      c = !0;
                    }
                    i = 7;
                  }
                  e[n] = (l >> i) & 1;
                  i--;
                }
              }
              if (n && !c) {
                const e = 5;
                for (let t = 0; t < e && -1 !== a.readNextChar(); t++);
              }
              return o;
            }
            function O() {}
            O.prototype = {
              parseChunks: (e) =>
                (function (e) {
                  for (var t = new C(), i = 0, n = e.length; i < n; i++) {
                    var r = e[i];
                    k(b({}, r.data, r.start, r.end), t);
                  }
                  return t.buffer;
                })(e),
              parse(e) {
                const {
                  imgData: t,
                  width: i,
                  height: n,
                } = (function (e) {
                  const t = e.length;
                  let i = 0;
                  if (
                    151 !== e[i] ||
                    74 !== e[i + 1] ||
                    66 !== e[i + 2] ||
                    50 !== e[i + 3] ||
                    13 !== e[i + 4] ||
                    10 !== e[i + 5] ||
                    26 !== e[i + 6] ||
                    10 !== e[i + 7]
                  )
                    throw new o("parseJbig2 - invalid header.");
                  const n = Object.create(null);
                  i += 8;
                  const a = e[i++];
                  n.randomAccess = !(1 & a);
                  if (!(2 & a)) {
                    n.numberOfPages = (0, r.readUint32)(e, i);
                    i += 4;
                  }
                  const s = b(n, e, i, t),
                    l = new C();
                  k(s, l);
                  const { width: c, height: h } = l.currentPageInfo,
                    u = l.buffer,
                    d = new Uint8ClampedArray(c * h);
                  let f = 0,
                    p = 0;
                  for (let e = 0; e < h; e++) {
                    let e,
                      t = 0;
                    for (let i = 0; i < c; i++) {
                      if (!t) {
                        t = 128;
                        e = u[p++];
                      }
                      d[f++] = e & t ? 0 : 255;
                      t >>= 1;
                    }
                  }
                  return { imgData: d, width: c, height: h };
                })(e);
                this.width = i;
                this.height = n;
                return t;
              },
            };
            return O;
          })();
          t.Jbig2Image = l;
        },
        (e, t) => {
          Object.defineProperty(t, "__esModule", { value: !0 });
          t.ArithmeticDecoder = void 0;
          const i = [
            { qe: 22017, nmps: 1, nlps: 1, switchFlag: 1 },
            { qe: 13313, nmps: 2, nlps: 6, switchFlag: 0 },
            { qe: 6145, nmps: 3, nlps: 9, switchFlag: 0 },
            { qe: 2753, nmps: 4, nlps: 12, switchFlag: 0 },
            { qe: 1313, nmps: 5, nlps: 29, switchFlag: 0 },
            { qe: 545, nmps: 38, nlps: 33, switchFlag: 0 },
            { qe: 22017, nmps: 7, nlps: 6, switchFlag: 1 },
            { qe: 21505, nmps: 8, nlps: 14, switchFlag: 0 },
            { qe: 18433, nmps: 9, nlps: 14, switchFlag: 0 },
            { qe: 14337, nmps: 10, nlps: 14, switchFlag: 0 },
            { qe: 12289, nmps: 11, nlps: 17, switchFlag: 0 },
            { qe: 9217, nmps: 12, nlps: 18, switchFlag: 0 },
            { qe: 7169, nmps: 13, nlps: 20, switchFlag: 0 },
            { qe: 5633, nmps: 29, nlps: 21, switchFlag: 0 },
            { qe: 22017, nmps: 15, nlps: 14, switchFlag: 1 },
            { qe: 21505, nmps: 16, nlps: 14, switchFlag: 0 },
            { qe: 20737, nmps: 17, nlps: 15, switchFlag: 0 },
            { qe: 18433, nmps: 18, nlps: 16, switchFlag: 0 },
            { qe: 14337, nmps: 19, nlps: 17, switchFlag: 0 },
            { qe: 13313, nmps: 20, nlps: 18, switchFlag: 0 },
            { qe: 12289, nmps: 21, nlps: 19, switchFlag: 0 },
            { qe: 10241, nmps: 22, nlps: 19, switchFlag: 0 },
            { qe: 9217, nmps: 23, nlps: 20, switchFlag: 0 },
            { qe: 8705, nmps: 24, nlps: 21, switchFlag: 0 },
            { qe: 7169, nmps: 25, nlps: 22, switchFlag: 0 },
            { qe: 6145, nmps: 26, nlps: 23, switchFlag: 0 },
            { qe: 5633, nmps: 27, nlps: 24, switchFlag: 0 },
            { qe: 5121, nmps: 28, nlps: 25, switchFlag: 0 },
            { qe: 4609, nmps: 29, nlps: 26, switchFlag: 0 },
            { qe: 4353, nmps: 30, nlps: 27, switchFlag: 0 },
            { qe: 2753, nmps: 31, nlps: 28, switchFlag: 0 },
            { qe: 2497, nmps: 32, nlps: 29, switchFlag: 0 },
            { qe: 2209, nmps: 33, nlps: 30, switchFlag: 0 },
            { qe: 1313, nmps: 34, nlps: 31, switchFlag: 0 },
            { qe: 1089, nmps: 35, nlps: 32, switchFlag: 0 },
            { qe: 673, nmps: 36, nlps: 33, switchFlag: 0 },
            { qe: 545, nmps: 37, nlps: 34, switchFlag: 0 },
            { qe: 321, nmps: 38, nlps: 35, switchFlag: 0 },
            { qe: 273, nmps: 39, nlps: 36, switchFlag: 0 },
            { qe: 133, nmps: 40, nlps: 37, switchFlag: 0 },
            { qe: 73, nmps: 41, nlps: 38, switchFlag: 0 },
            { qe: 37, nmps: 42, nlps: 39, switchFlag: 0 },
            { qe: 21, nmps: 43, nlps: 40, switchFlag: 0 },
            { qe: 9, nmps: 44, nlps: 41, switchFlag: 0 },
            { qe: 5, nmps: 45, nlps: 42, switchFlag: 0 },
            { qe: 1, nmps: 45, nlps: 43, switchFlag: 0 },
            { qe: 22017, nmps: 46, nlps: 46, switchFlag: 0 },
          ];
          t.ArithmeticDecoder = class {
            constructor(e, t, i) {
              this.data = e;
              this.bp = t;
              this.dataEnd = i;
              this.chigh = e[t];
              this.clow = 0;
              this.byteIn();
              this.chigh =
                ((this.chigh << 7) & 65535) | ((this.clow >> 9) & 127);
              this.clow = (this.clow << 7) & 65535;
              this.ct -= 7;
              this.a = 32768;
            }
            byteIn() {
              const e = this.data;
              let t = this.bp;
              if (255 === e[t])
                if (e[t + 1] > 143) {
                  this.clow += 65280;
                  this.ct = 8;
                } else {
                  t++;
                  this.clow += e[t] << 9;
                  this.ct = 7;
                  this.bp = t;
                }
              else {
                t++;
                this.clow += t < this.dataEnd ? e[t] << 8 : 65280;
                this.ct = 8;
                this.bp = t;
              }
              if (this.clow > 65535) {
                this.chigh += this.clow >> 16;
                this.clow &= 65535;
              }
            }
            readBit(e, t) {
              let n = e[t] >> 1,
                r = 1 & e[t];
              const a = i[n],
                s = a.qe;
              let o,
                l = this.a - s;
              if (this.chigh < s)
                if (l < s) {
                  l = s;
                  o = r;
                  n = a.nmps;
                } else {
                  l = s;
                  o = 1 ^ r;
                  if (1 === a.switchFlag) r = o;
                  n = a.nlps;
                }
              else {
                this.chigh -= s;
                if (0 != (32768 & l)) {
                  this.a = l;
                  return r;
                }
                if (l < s) {
                  o = 1 ^ r;
                  if (1 === a.switchFlag) r = o;
                  n = a.nlps;
                } else {
                  o = r;
                  n = a.nmps;
                }
              }
              do {
                if (0 === this.ct) this.byteIn();
                l <<= 1;
                this.chigh =
                  ((this.chigh << 1) & 65535) | ((this.clow >> 15) & 1);
                this.clow = (this.clow << 1) & 65535;
                this.ct--;
              } while (0 == (32768 & l));
              this.a = l;
              e[t] = (n << 1) | r;
              return o;
            }
          };
        },
        (e, t, i) => {
          Object.defineProperty(t, "__esModule", { value: !0 });
          t.JpegStream = void 0;
          var n = i(12),
            r = i(5),
            a = i(19),
            s = i(2);
          const o = (function () {
            function e(e, t, i, r) {
              let a;
              for (; -1 !== (a = e.getByte()); )
                if (255 === a) {
                  e.skip(-1);
                  break;
                }
              this.stream = e;
              this.maybeLength = t;
              this.dict = i;
              this.params = r;
              n.DecodeStream.call(this, t);
            }
            e.prototype = Object.create(n.DecodeStream.prototype);
            Object.defineProperty(e.prototype, "bytes", {
              get: function () {
                return (0, s.shadow)(
                  this,
                  "bytes",
                  this.stream.getBytes(this.maybeLength)
                );
              },
              configurable: !0,
            });
            e.prototype.ensureBuffer = function (e) {};
            e.prototype.readBlock = function () {
              if (this.eof) return;
              const e = { decodeTransform: void 0, colorTransform: void 0 },
                t = this.dict.getArray("Decode", "D");
              if (this.forceRGB && Array.isArray(t)) {
                const i = this.dict.get("BitsPerComponent") || 8,
                  n = t.length,
                  r = new Int32Array(n);
                let a = !1;
                const s = (1 << i) - 1;
                for (let e = 0; e < n; e += 2) {
                  r[e] = (256 * (t[e + 1] - t[e])) | 0;
                  r[e + 1] = (t[e] * s) | 0;
                  if (256 !== r[e] || 0 !== r[e + 1]) a = !0;
                }
                if (a) e.decodeTransform = r;
              }
              if ((0, r.isDict)(this.params)) {
                const t = this.params.get("ColorTransform");
                if (Number.isInteger(t)) e.colorTransform = t;
              }
              const i = new a.JpegImage(e);
              i.parse(this.bytes);
              const n = i.getData({
                width: this.drawWidth,
                height: this.drawHeight,
                forceRGB: this.forceRGB,
                isSourcePDF: !0,
              });
              this.buffer = n;
              this.bufferLength = n.length;
              this.eof = !0;
            };
            return e;
          })();
          t.JpegStream = o;
        },
        (e, t, i) => {
          Object.defineProperty(t, "__esModule", { value: !0 });
          t.JpegImage = void 0;
          var n = i(2),
            r = i(8);
          class a extends n.BaseException {
            constructor(e) {
              super(`JPEG error: ${e}`);
            }
          }
          class s extends n.BaseException {
            constructor(e, t) {
              super(e);
              this.scanLines = t;
            }
          }
          class o extends n.BaseException {}
          var l = (function () {
            var e = new Uint8Array([
                0, 1, 8, 16, 9, 2, 3, 10, 17, 24, 32, 25, 18, 11, 4, 5, 12, 19,
                26, 33, 40, 48, 41, 34, 27, 20, 13, 6, 7, 14, 21, 28, 35, 42,
                49, 56, 57, 50, 43, 36, 29, 22, 15, 23, 30, 37, 44, 51, 58, 59,
                52, 45, 38, 31, 39, 46, 53, 60, 61, 54, 47, 55, 62, 63,
              ]),
              t = 4017,
              i = 799,
              l = 3406,
              c = 2276,
              h = 1567,
              u = 3784,
              d = 5793,
              f = 2896;
            function p({
              decodeTransform: e = null,
              colorTransform: t = -1,
            } = {}) {
              this._decodeTransform = e;
              this._colorTransform = t;
            }
            function g(e, t) {
              for (var i, n, r = 0, a = [], s = 16; s > 0 && !e[s - 1]; ) s--;
              a.push({ children: [], index: 0 });
              var o,
                l = a[0];
              for (i = 0; i < s; i++) {
                for (n = 0; n < e[i]; n++) {
                  (l = a.pop()).children[l.index] = t[r];
                  for (; l.index > 0; ) l = a.pop();
                  l.index++;
                  a.push(l);
                  for (; a.length <= i; ) {
                    a.push((o = { children: [], index: 0 }));
                    l.children[l.index] = o.children;
                    l = o;
                  }
                  r++;
                }
                if (i + 1 < s) {
                  a.push((o = { children: [], index: 0 }));
                  l.children[l.index] = o.children;
                  l = o;
                }
              }
              return a[0].children;
            }
            function m(e, t, i) {
              return 64 * ((e.blocksPerLine + 1) * t + i);
            }
            function v(t, i, l, c, h, u, d, f, p, g = !1) {
              var v = l.mcusPerLine,
                b = l.progressive;
              const y = i;
              let x = 0,
                k = 0;
              function C() {
                if (k > 0) {
                  k--;
                  return (x >> k) & 1;
                }
                x = t[i++];
                if (255 === x) {
                  var e = t[i++];
                  if (e) {
                    if (220 === e && g) {
                      i += 2;
                      const e = (0, r.readUint16)(t, i);
                      i += 2;
                      if (e > 0 && e !== l.scanLines)
                        throw new s(
                          "Found DNL marker (0xFFDC) while parsing scan data",
                          e
                        );
                    } else if (217 === e) {
                      if (g) {
                        const e = E * (8 === l.precision ? 8 : 0);
                        if (e > 0 && Math.round(l.scanLines / e) >= 10)
                          throw new s(
                            "Found EOI marker (0xFFD9) while parsing scan data, possibly caused by incorrect `scanLines` parameter",
                            e
                          );
                      }
                      throw new o(
                        "Found EOI marker (0xFFD9) while parsing scan data"
                      );
                    }
                    throw new a(
                      `unexpected marker ${((x << 8) | e).toString(16)}`
                    );
                  }
                }
                k = 7;
                return x >>> 7;
              }
              function S(e) {
                for (var t = e; ; ) {
                  switch (typeof (t = t[C()])) {
                    case "number":
                      return t;
                    case "object":
                      continue;
                  }
                  throw new a("invalid huffman sequence");
                }
              }
              function _(e) {
                for (var t = 0; e > 0; ) {
                  t = (t << 1) | C();
                  e--;
                }
                return t;
              }
              function A(e) {
                if (1 === e) return 1 === C() ? 1 : -1;
                var t = _(e);
                if (t >= 1 << (e - 1)) return t;
                else return t + (-1 << e) + 1;
              }
              var F,
                T = 0,
                P = 0;
              let E = 0;
              function I(e, t, i, n, r) {
                var a = i % v;
                E = ((i / v) | 0) * e.v + n;
                var s = a * e.h + r;
                t(e, m(e, E, s));
              }
              function D(e, t, i) {
                E = (i / e.blocksPerLine) | 0;
                var n = i % e.blocksPerLine;
                t(e, m(e, E, n));
              }
              var O,
                R,
                N,
                M,
                B,
                L,
                U = c.length;
              if (b)
                if (0 === u)
                  L =
                    0 === f
                      ? function (e, t) {
                          var i = S(e.huffmanTableDC),
                            n = 0 === i ? 0 : A(i) << p;
                          e.blockData[t] = e.pred += n;
                        }
                      : function (e, t) {
                          e.blockData[t] |= C() << p;
                        };
                else
                  L =
                    0 === f
                      ? function (t, i) {
                          if (!(T > 0))
                            for (var n = u, r = d; n <= r; ) {
                              var a = S(t.huffmanTableAC),
                                s = 15 & a,
                                o = a >> 4;
                              if (0 !== s) {
                                var l = e[(n += o)];
                                t.blockData[i + l] = A(s) * (1 << p);
                                n++;
                              } else {
                                if (o < 15) {
                                  T = _(o) + (1 << o) - 1;
                                  break;
                                }
                                n += 16;
                              }
                            }
                          else T--;
                        }
                      : function (t, i) {
                          for (var n, r, s = u, o = d, l = 0; s <= o; ) {
                            const o = i + e[s],
                              c = t.blockData[o] < 0 ? -1 : 1;
                            switch (P) {
                              case 0:
                                l = (r = S(t.huffmanTableAC)) >> 4;
                                if (0 == (n = 15 & r))
                                  if (l < 15) {
                                    T = _(l) + (1 << l);
                                    P = 4;
                                  } else {
                                    l = 16;
                                    P = 1;
                                  }
                                else {
                                  if (1 !== n)
                                    throw new a("invalid ACn encoding");
                                  F = A(n);
                                  P = l ? 2 : 3;
                                }
                                continue;
                              case 1:
                              case 2:
                                if (t.blockData[o])
                                  t.blockData[o] += c * (C() << p);
                                else if (0 == --l) P = 2 === P ? 3 : 0;
                                break;
                              case 3:
                                if (t.blockData[o])
                                  t.blockData[o] += c * (C() << p);
                                else {
                                  t.blockData[o] = F << p;
                                  P = 0;
                                }
                                break;
                              case 4:
                                if (t.blockData[o])
                                  t.blockData[o] += c * (C() << p);
                            }
                            s++;
                          }
                          if (4 === P) if (0 == --T) P = 0;
                        };
              else
                L = function (t, i) {
                  var n = S(t.huffmanTableDC),
                    r = 0 === n ? 0 : A(n);
                  t.blockData[i] = t.pred += r;
                  for (var a = 1; a < 64; ) {
                    var s = S(t.huffmanTableAC),
                      o = 15 & s,
                      l = s >> 4;
                    if (0 !== o) {
                      var c = e[(a += l)];
                      t.blockData[i + c] = A(o);
                      a++;
                    } else {
                      if (l < 15) break;
                      a += 16;
                    }
                  }
                };
              var z,
                j,
                q,
                H,
                W = 0;
              if (1 === U) j = c[0].blocksPerLine * c[0].blocksPerColumn;
              else j = v * l.mcusPerColumn;
              for (; W <= j; ) {
                var G = h ? Math.min(j - W, h) : j;
                if (G > 0) {
                  for (R = 0; R < U; R++) c[R].pred = 0;
                  T = 0;
                  if (1 === U) {
                    O = c[0];
                    for (B = 0; B < G; B++) {
                      D(O, L, W);
                      W++;
                    }
                  } else
                    for (B = 0; B < G; B++) {
                      for (R = 0; R < U; R++) {
                        q = (O = c[R]).h;
                        H = O.v;
                        for (N = 0; N < H; N++)
                          for (M = 0; M < q; M++) I(O, L, W, N, M);
                      }
                      W++;
                    }
                }
                k = 0;
                if (!(z = w(t, i))) break;
                if (z.invalid) {
                  const e = G > 0 ? "unexpected" : "excessive";
                  (0, n.warn)(
                    `decodeScan - ${e} MCU data, current marker is: ${z.invalid}`
                  );
                  i = z.offset;
                }
                if (z.marker >= 65488 && z.marker <= 65495) i += 2;
                else break;
              }
              return i - y;
            }
            function b(e, n, r) {
              var s,
                o,
                p,
                g,
                m,
                v,
                b,
                y,
                w,
                x,
                k,
                C,
                S,
                _,
                A,
                F,
                T,
                P = e.quantizationTable,
                E = e.blockData;
              if (!P) throw new a("missing required Quantization Table.");
              for (var I = 0; I < 64; I += 8) {
                w = E[n + I];
                x = E[n + I + 1];
                k = E[n + I + 2];
                C = E[n + I + 3];
                S = E[n + I + 4];
                _ = E[n + I + 5];
                A = E[n + I + 6];
                F = E[n + I + 7];
                w *= P[I];
                if (0 != (x | k | C | S | _ | A | F)) {
                  x *= P[I + 1];
                  k *= P[I + 2];
                  C *= P[I + 3];
                  S *= P[I + 4];
                  _ *= P[I + 5];
                  A *= P[I + 6];
                  F *= P[I + 7];
                  o =
                    (s =
                      ((s = (d * w + 128) >> 8) +
                        (o = (d * S + 128) >> 8) +
                        1) >>
                      1) - o;
                  T = ((p = k) * u + (g = A) * h + 128) >> 8;
                  p = (p * h - g * u + 128) >> 8;
                  b =
                    (m =
                      ((m = (f * (x - F) + 128) >> 8) + (b = _ << 4) + 1) >>
                      1) - b;
                  v =
                    (y =
                      ((y = (f * (x + F) + 128) >> 8) + (v = C << 4) + 1) >>
                      1) - v;
                  g = (s = (s + (g = T) + 1) >> 1) - g;
                  p = (o = (o + p + 1) >> 1) - p;
                  T = (m * c + y * l + 2048) >> 12;
                  m = (m * l - y * c + 2048) >> 12;
                  y = T;
                  T = (v * i + b * t + 2048) >> 12;
                  v = (v * t - b * i + 2048) >> 12;
                  b = T;
                  r[I] = s + y;
                  r[I + 7] = s - y;
                  r[I + 1] = o + b;
                  r[I + 6] = o - b;
                  r[I + 2] = p + v;
                  r[I + 5] = p - v;
                  r[I + 3] = g + m;
                  r[I + 4] = g - m;
                } else {
                  T = (d * w + 512) >> 10;
                  r[I] = T;
                  r[I + 1] = T;
                  r[I + 2] = T;
                  r[I + 3] = T;
                  r[I + 4] = T;
                  r[I + 5] = T;
                  r[I + 6] = T;
                  r[I + 7] = T;
                }
              }
              for (var D = 0; D < 8; ++D) {
                w = r[D];
                if (
                  0 !=
                  ((x = r[D + 8]) |
                    (k = r[D + 16]) |
                    (C = r[D + 24]) |
                    (S = r[D + 32]) |
                    (_ = r[D + 40]) |
                    (A = r[D + 48]) |
                    (F = r[D + 56]))
                ) {
                  o =
                    (s =
                      4112 +
                      (((s = (d * w + 2048) >> 12) +
                        (o = (d * S + 2048) >> 12) +
                        1) >>
                        1)) - o;
                  T = ((p = k) * u + (g = A) * h + 2048) >> 12;
                  p = (p * h - g * u + 2048) >> 12;
                  g = T;
                  b =
                    (m =
                      ((m = (f * (x - F) + 2048) >> 12) + (b = _) + 1) >> 1) -
                    b;
                  v =
                    (y =
                      ((y = (f * (x + F) + 2048) >> 12) + (v = C) + 1) >> 1) -
                    v;
                  T = (m * c + y * l + 2048) >> 12;
                  m = (m * l - y * c + 2048) >> 12;
                  y = T;
                  T = (v * i + b * t + 2048) >> 12;
                  v = (v * t - b * i + 2048) >> 12;
                  if ((w = (s = (s + g + 1) >> 1) + y) < 16) w = 0;
                  else if (w >= 4080) w = 255;
                  else w >>= 4;
                  if ((x = (o = (o + p + 1) >> 1) + (b = T)) < 16) x = 0;
                  else if (x >= 4080) x = 255;
                  else x >>= 4;
                  if ((k = (p = o - p) + v) < 16) k = 0;
                  else if (k >= 4080) k = 255;
                  else k >>= 4;
                  if ((C = (g = s - g) + m) < 16) C = 0;
                  else if (C >= 4080) C = 255;
                  else C >>= 4;
                  if ((S = g - m) < 16) S = 0;
                  else if (S >= 4080) S = 255;
                  else S >>= 4;
                  if ((_ = p - v) < 16) _ = 0;
                  else if (_ >= 4080) _ = 255;
                  else _ >>= 4;
                  if ((A = o - b) < 16) A = 0;
                  else if (A >= 4080) A = 255;
                  else A >>= 4;
                  if ((F = s - y) < 16) F = 0;
                  else if (F >= 4080) F = 255;
                  else F >>= 4;
                  E[n + D] = w;
                  E[n + D + 8] = x;
                  E[n + D + 16] = k;
                  E[n + D + 24] = C;
                  E[n + D + 32] = S;
                  E[n + D + 40] = _;
                  E[n + D + 48] = A;
                  E[n + D + 56] = F;
                } else {
                  if ((T = (d * w + 8192) >> 14) < -2040) T = 0;
                  else if (T >= 2024) T = 255;
                  else T = (T + 2056) >> 4;
                  E[n + D] = T;
                  E[n + D + 8] = T;
                  E[n + D + 16] = T;
                  E[n + D + 24] = T;
                  E[n + D + 32] = T;
                  E[n + D + 40] = T;
                  E[n + D + 48] = T;
                  E[n + D + 56] = T;
                }
              }
            }
            function y(e, t) {
              for (
                var i = t.blocksPerLine,
                  n = t.blocksPerColumn,
                  r = new Int16Array(64),
                  a = 0;
                a < n;
                a++
              )
                for (var s = 0; s < i; s++) b(t, m(t, a, s), r);
              return t.blockData;
            }
            function w(e, t, i = t) {
              const n = e.length - 1;
              var a = i < t ? i : t;
              if (t >= n) return null;
              var s = (0, r.readUint16)(e, t);
              if (s >= 65472 && s <= 65534)
                return { invalid: null, marker: s, offset: t };
              for (
                var o = (0, r.readUint16)(e, a);
                !(o >= 65472 && o <= 65534);

              ) {
                if (++a >= n) return null;
                o = (0, r.readUint16)(e, a);
              }
              return { invalid: s.toString(16), marker: o, offset: a };
            }
            p.prototype = {
              parse(t, { dnlScanLines: i = null } = {}) {
                function l() {
                  const e = (0, r.readUint16)(t, d);
                  let i = (d += 2) + e - 2;
                  var a = w(t, i, d);
                  if (a && a.invalid) {
                    (0, n.warn)(
                      "readDataBlock - incorrect length, current marker is: " +
                        a.invalid
                    );
                    i = a.offset;
                  }
                  var s = t.subarray(d, i);
                  d += s.length;
                  return s;
                }
                function c(e) {
                  for (
                    var t = Math.ceil(e.samplesPerLine / 8 / e.maxH),
                      i = Math.ceil(e.scanLines / 8 / e.maxV),
                      n = 0;
                    n < e.components.length;
                    n++
                  ) {
                    q = e.components[n];
                    var r = Math.ceil(
                        (Math.ceil(e.samplesPerLine / 8) * q.h) / e.maxH
                      ),
                      a = Math.ceil(
                        (Math.ceil(e.scanLines / 8) * q.v) / e.maxV
                      ),
                      s = t * q.h,
                      o = i * q.v * 64 * (s + 1);
                    q.blockData = new Int16Array(o);
                    q.blocksPerLine = r;
                    q.blocksPerColumn = a;
                  }
                  e.mcusPerLine = t;
                  e.mcusPerColumn = i;
                }
                var h,
                  u,
                  d = 0,
                  f = null,
                  p = null;
                let m = 0;
                var b = [],
                  x = [],
                  k = [];
                let C = (0, r.readUint16)(t, d);
                d += 2;
                if (65496 !== C) throw new a("SOI not found");
                C = (0, r.readUint16)(t, d);
                d += 2;
                e: for (; 65497 !== C; ) {
                  var S, _, A;
                  switch (C) {
                    case 65504:
                    case 65505:
                    case 65506:
                    case 65507:
                    case 65508:
                    case 65509:
                    case 65510:
                    case 65511:
                    case 65512:
                    case 65513:
                    case 65514:
                    case 65515:
                    case 65516:
                    case 65517:
                    case 65518:
                    case 65519:
                    case 65534:
                      var F = l();
                      if (65504 === C)
                        if (
                          74 === F[0] &&
                          70 === F[1] &&
                          73 === F[2] &&
                          70 === F[3] &&
                          0 === F[4]
                        )
                          f = {
                            version: { major: F[5], minor: F[6] },
                            densityUnits: F[7],
                            xDensity: (F[8] << 8) | F[9],
                            yDensity: (F[10] << 8) | F[11],
                            thumbWidth: F[12],
                            thumbHeight: F[13],
                            thumbData: F.subarray(14, 14 + 3 * F[12] * F[13]),
                          };
                      if (65518 === C)
                        if (
                          65 === F[0] &&
                          100 === F[1] &&
                          111 === F[2] &&
                          98 === F[3] &&
                          101 === F[4]
                        )
                          p = {
                            version: (F[5] << 8) | F[6],
                            flags0: (F[7] << 8) | F[8],
                            flags1: (F[9] << 8) | F[10],
                            transformCode: F[11],
                          };
                      break;
                    case 65499:
                      for (
                        var T = (0, r.readUint16)(t, d) + (d += 2) - 2;
                        d < T;

                      ) {
                        var P = t[d++],
                          E = new Uint16Array(64);
                        if (P >> 4 == 0)
                          for (_ = 0; _ < 64; _++) E[e[_]] = t[d++];
                        else if (P >> 4 == 1)
                          for (_ = 0; _ < 64; _++) {
                            E[e[_]] = (0, r.readUint16)(t, d);
                            d += 2;
                          }
                        else throw new a("DQT - invalid table spec");
                        b[15 & P] = E;
                      }
                      break;
                    case 65472:
                    case 65473:
                    case 65474:
                      if (h) throw new a("Only single frame JPEGs supported");
                      d += 2;
                      (h = {}).extended = 65473 === C;
                      h.progressive = 65474 === C;
                      h.precision = t[d++];
                      const y = (0, r.readUint16)(t, d);
                      d += 2;
                      h.scanLines = i || y;
                      h.samplesPerLine = (0, r.readUint16)(t, d);
                      d += 2;
                      h.components = [];
                      h.componentIds = {};
                      var I,
                        D = t[d++],
                        O = 0,
                        R = 0;
                      for (S = 0; S < D; S++) {
                        I = t[d];
                        var N = t[d + 1] >> 4,
                          M = 15 & t[d + 1];
                        if (O < N) O = N;
                        if (R < M) R = M;
                        var B = t[d + 2];
                        A = h.components.push({
                          h: N,
                          v: M,
                          quantizationId: B,
                          quantizationTable: null,
                        });
                        h.componentIds[I] = A - 1;
                        d += 3;
                      }
                      h.maxH = O;
                      h.maxV = R;
                      c(h);
                      break;
                    case 65476:
                      const J = (0, r.readUint16)(t, d);
                      d += 2;
                      for (S = 2; S < J; ) {
                        var L = t[d++],
                          U = new Uint8Array(16),
                          z = 0;
                        for (_ = 0; _ < 16; _++, d++) z += U[_] = t[d];
                        var j = new Uint8Array(z);
                        for (_ = 0; _ < z; _++, d++) j[_] = t[d];
                        S += 17 + z;
                        (L >> 4 == 0 ? k : x)[15 & L] = g(U, j);
                      }
                      break;
                    case 65501:
                      d += 2;
                      u = (0, r.readUint16)(t, d);
                      d += 2;
                      break;
                    case 65498:
                      const $ = 1 == ++m && !i;
                      d += 2;
                      var q,
                        H = t[d++],
                        W = [];
                      for (S = 0; S < H; S++) {
                        const e = t[d++];
                        var G = h.componentIds[e];
                        (q = h.components[G]).index = e;
                        var V = t[d++];
                        q.huffmanTableDC = k[V >> 4];
                        q.huffmanTableAC = x[15 & V];
                        W.push(q);
                      }
                      var X = t[d++],
                        K = t[d++],
                        Y = t[d++];
                      try {
                        var Z = v(t, d, h, W, u, X, K, Y >> 4, 15 & Y, $);
                        d += Z;
                      } catch (e) {
                        if (e instanceof s) {
                          (0, n.warn)(
                            `${e.message} -- attempting to re-parse the JPEG image.`
                          );
                          return this.parse(t, { dnlScanLines: e.scanLines });
                        } else if (e instanceof o) {
                          (0, n.warn)(
                            `${e.message} -- ignoring the rest of the image data.`
                          );
                          break e;
                        }
                        throw e;
                      }
                      break;
                    case 65500:
                      d += 4;
                      break;
                    case 65535:
                      if (255 !== t[d]) d--;
                      break;
                    default:
                      const Q = w(t, d - 2, d - 3);
                      if (Q && Q.invalid) {
                        (0, n.warn)(
                          "JpegImage.parse - unexpected data, current marker is: " +
                            Q.invalid
                        );
                        d = Q.offset;
                        break;
                      }
                      if (!Q || d >= t.length - 1) {
                        (0, n.warn)(
                          "JpegImage.parse - reached the end of the image data without finding an EOI marker (0xFFD9)."
                        );
                        break e;
                      }
                      throw new a(
                        "JpegImage.parse - unknown marker: " + C.toString(16)
                      );
                  }
                  C = (0, r.readUint16)(t, d);
                  d += 2;
                }
                this.width = h.samplesPerLine;
                this.height = h.scanLines;
                this.jfif = f;
                this.adobe = p;
                this.components = [];
                for (S = 0; S < h.components.length; S++) {
                  var J = b[(q = h.components[S]).quantizationId];
                  if (J) q.quantizationTable = J;
                  this.components.push({
                    index: q.index,
                    output: y(0, q),
                    scaleX: q.h / h.maxH,
                    scaleY: q.v / h.maxV,
                    blocksPerLine: q.blocksPerLine,
                    blocksPerColumn: q.blocksPerColumn,
                  });
                }
                this.numComponents = this.components.length;
              },
              _getLinearizedBlockData(e, t, i = !1) {
                var n,
                  r,
                  a,
                  s,
                  o,
                  l,
                  c,
                  h,
                  u,
                  d,
                  f,
                  p = this.width / e,
                  g = this.height / t,
                  m = 0,
                  v = this.components.length,
                  b = e * t * v,
                  y = new Uint8ClampedArray(b),
                  w = new Uint32Array(e),
                  x = 4294967288;
                let k;
                for (c = 0; c < v; c++) {
                  r = (n = this.components[c]).scaleX * p;
                  a = n.scaleY * g;
                  m = c;
                  f = n.output;
                  s = (n.blocksPerLine + 1) << 3;
                  if (r !== k) {
                    for (o = 0; o < e; o++) {
                      h = 0 | (o * r);
                      w[o] = ((h & x) << 3) | (7 & h);
                    }
                    k = r;
                  }
                  for (l = 0; l < t; l++) {
                    d = (s * ((h = 0 | (l * a)) & x)) | ((7 & h) << 3);
                    for (o = 0; o < e; o++) {
                      y[m] = f[d + w[o]];
                      m += v;
                    }
                  }
                }
                let C = this._decodeTransform;
                if (!i && 4 === v && !C)
                  C = new Int32Array([
                    -256, 255, -256, 255, -256, 255, -256, 255,
                  ]);
                if (C)
                  for (c = 0; c < b; )
                    for (h = 0, u = 0; h < v; h++, c++, u += 2)
                      y[c] = ((y[c] * C[u]) >> 8) + C[u + 1];
                return y;
              },
              get _isColorConversionNeeded() {
                if (this.adobe) return !!this.adobe.transformCode;
                if (3 === this.numComponents) {
                  if (0 === this._colorTransform) return !1;
                  else if (
                    82 === this.components[0].index &&
                    71 === this.components[1].index &&
                    66 === this.components[2].index
                  )
                    return !1;
                  return !0;
                }
                if (1 === this._colorTransform) return !0;
                else return !1;
              },
              _convertYccToRgb: function (e) {
                for (var t, i, n, r = 0, a = e.length; r < a; r += 3) {
                  t = e[r];
                  i = e[r + 1];
                  n = e[r + 2];
                  e[r] = t - 179.456 + 1.402 * n;
                  e[r + 1] = t + 135.459 - 0.344 * i - 0.714 * n;
                  e[r + 2] = t - 226.816 + 1.772 * i;
                }
                return e;
              },
              _convertYcckToRgb: function (e) {
                for (
                  var t, i, n, r, a = 0, s = 0, o = e.length;
                  s < o;
                  s += 4
                ) {
                  t = e[s];
                  i = e[s + 1];
                  n = e[s + 2];
                  r = e[s + 3];
                  e[a++] =
                    i *
                      (-660635669420364e-19 * i +
                        0.000437130475926232 * n -
                        54080610064599e-18 * t +
                        0.00048449797120281 * r -
                        0.154362151871126) -
                    122.67195406894 +
                    n *
                      (-0.000957964378445773 * n +
                        0.000817076911346625 * t -
                        0.00477271405408747 * r +
                        1.53380253221734) +
                    t *
                      (0.000961250184130688 * t -
                        0.00266257332283933 * r +
                        0.48357088451265) +
                    r * (-0.000336197177618394 * r + 0.484791561490776);
                  e[a++] =
                    107.268039397724 +
                    i *
                      (219927104525741e-19 * i -
                        0.000640992018297945 * n +
                        0.000659397001245577 * t +
                        0.000426105652938837 * r -
                        0.176491792462875) +
                    n *
                      (-0.000778269941513683 * n +
                        0.00130872261408275 * t +
                        0.000770482631801132 * r -
                        0.151051492775562) +
                    t *
                      (0.00126935368114843 * t -
                        0.00265090189010898 * r +
                        0.25802910206845) +
                    r * (-0.000318913117588328 * r - 0.213742400323665);
                  e[a++] =
                    i *
                      (-0.000570115196973677 * i -
                        263409051004589e-19 * n +
                        0.0020741088115012 * t -
                        0.00288260236853442 * r +
                        0.814272968359295) -
                    20.810012546947 +
                    n *
                      (-153496057440975e-19 * n -
                        0.000132689043961446 * t +
                        0.000560833691242812 * r -
                        0.195152027534049) +
                    t *
                      (0.00174418132927582 * t -
                        0.00255243321439347 * r +
                        0.116935020465145) +
                    r * (-0.000343531996510555 * r + 0.24165260232407);
                }
                return e.subarray(0, a);
              },
              _convertYcckToCmyk: function (e) {
                for (var t, i, n, r = 0, a = e.length; r < a; r += 4) {
                  t = e[r];
                  i = e[r + 1];
                  n = e[r + 2];
                  e[r] = 434.456 - t - 1.402 * n;
                  e[r + 1] = 119.541 - t + 0.344 * i + 0.714 * n;
                  e[r + 2] = 481.816 - t - 1.772 * i;
                }
                return e;
              },
              _convertCmykToRgb: function (e) {
                for (
                  var t, i, n, r, a = 0, s = 0, o = e.length;
                  s < o;
                  s += 4
                ) {
                  t = e[s];
                  i = e[s + 1];
                  n = e[s + 2];
                  r = e[s + 3];
                  e[a++] =
                    255 +
                    t *
                      (-6747147073602441e-20 * t +
                        0.0008379262121013727 * i +
                        0.0002894718188643294 * n +
                        0.003264231057537806 * r -
                        1.1185611867203937) +
                    i *
                      (26374107616089405e-21 * i -
                        8626949158638572e-20 * n -
                        0.0002748769067499491 * r -
                        0.02155688794978967) +
                    n *
                      (-3878099212869363e-20 * n -
                        0.0003267808279485286 * r +
                        0.0686742238595345) -
                    r * (0.0003361971776183937 * r + 0.7430659151342254);
                  e[a++] =
                    255 +
                    t *
                      (0.00013596372813588848 * t +
                        0.000924537132573585 * i +
                        0.00010567359618683593 * n +
                        0.0004791864687436512 * r -
                        0.3109689587515875) +
                    i *
                      (-0.00023545346108370344 * i +
                        0.0002702845253534714 * n +
                        0.0020200308977307156 * r -
                        0.7488052167015494) +
                    n *
                      (6834815998235662e-20 * n +
                        0.00015168452363460973 * r -
                        0.09751927774728933) -
                    r * (0.0003189131175883281 * r + 0.7364883807733168);
                  e[a++] =
                    255 +
                    t *
                      (13598650411385307e-21 * t +
                        0.00012423956175490851 * i +
                        0.0004751985097583589 * n -
                        36729317476630422e-22 * r -
                        0.05562186980264034) +
                    i *
                      (0.00016141380598724676 * i +
                        0.0009692239130725186 * n +
                        0.0007782692450036253 * r -
                        0.44015232367526463) +
                    n *
                      (5.068882914068769e-7 * n +
                        0.0017778369011375071 * r -
                        0.7591454649749609) -
                    r * (0.0003435319965105553 * r + 0.7063770186160144);
                }
                return e.subarray(0, a);
              },
              getData({
                width: e,
                height: t,
                forceRGB: i = !1,
                isSourcePDF: n = !1,
              }) {
                if (this.numComponents > 4)
                  throw new a("Unsupported color mode");
                var r = this._getLinearizedBlockData(e, t, n);
                if (1 === this.numComponents && i) {
                  for (
                    var s = r.length,
                      o = new Uint8ClampedArray(3 * s),
                      l = 0,
                      c = 0;
                    c < s;
                    c++
                  ) {
                    var h = r[c];
                    o[l++] = h;
                    o[l++] = h;
                    o[l++] = h;
                  }
                  return o;
                } else if (
                  3 === this.numComponents &&
                  this._isColorConversionNeeded
                )
                  return this._convertYccToRgb(r);
                else if (4 === this.numComponents)
                  if (this._isColorConversionNeeded)
                    if (i) return this._convertYcckToRgb(r);
                    else return this._convertYcckToCmyk(r);
                  else if (i) return this._convertCmykToRgb(r);
                return r;
              },
            };
            return p;
          })();
          t.JpegImage = l;
        },
        (e, t, i) => {
          Object.defineProperty(t, "__esModule", { value: !0 });
          t.JpxStream = void 0;
          var n = i(12),
            r = i(21),
            a = i(2);
          const s = (function () {
            function e(e, t, i, r) {
              this.stream = e;
              this.maybeLength = t;
              this.dict = i;
              this.params = r;
              n.DecodeStream.call(this, t);
            }
            e.prototype = Object.create(n.DecodeStream.prototype);
            Object.defineProperty(e.prototype, "bytes", {
              get: function () {
                return (0, a.shadow)(
                  this,
                  "bytes",
                  this.stream.getBytes(this.maybeLength)
                );
              },
              configurable: !0,
            });
            e.prototype.ensureBuffer = function (e) {};
            e.prototype.readBlock = function () {
              if (this.eof) return;
              const e = new r.JpxImage();
              e.parse(this.bytes);
              const t = e.width,
                i = e.height,
                n = e.componentsCount,
                a = e.tiles.length;
              if (1 === a) this.buffer = e.tiles[0].items;
              else {
                const r = new Uint8ClampedArray(t * i * n);
                for (let i = 0; i < a; i++) {
                  const a = e.tiles[i],
                    s = a.width,
                    o = a.height,
                    l = a.left,
                    c = a.top,
                    h = a.items;
                  let u = 0,
                    d = (t * c + l) * n;
                  const f = t * n,
                    p = s * n;
                  for (let e = 0; e < o; e++) {
                    const e = h.subarray(u, u + p);
                    r.set(e, d);
                    u += p;
                    d += f;
                  }
                }
                this.buffer = r;
              }
              this.bufferLength = this.buffer.length;
              this.eof = !0;
            };
            return e;
          })();
          t.JpxStream = s;
        },
        (e, t, i) => {
          Object.defineProperty(t, "__esModule", { value: !0 });
          t.JpxImage = void 0;
          var n = i(2),
            r = i(8),
            a = i(17);
          class s extends n.BaseException {
            constructor(e) {
              super(`JPX error: ${e}`);
            }
          }
          var o = (function () {
            var e = { LL: 0, LH: 1, HL: 1, HH: 2 };
            function t() {
              this.failOnCorruptedImage = !1;
            }
            t.prototype = {
              parse: function (e) {
                if (65359 !== (0, r.readUint16)(e, 0))
                  for (var t = 0, i = e.length; t < i; ) {
                    var a = 8,
                      o = (0, r.readUint32)(e, t),
                      l = (0, r.readUint32)(e, t + 4);
                    t += a;
                    if (1 === o) {
                      o =
                        4294967296 * (0, r.readUint32)(e, t) +
                        (0, r.readUint32)(e, t + 4);
                      t += 8;
                      a += 8;
                    }
                    if (0 === o) o = i - t + a;
                    if (o < a) throw new s("Invalid box field size");
                    var c = o - a,
                      h = !0;
                    switch (l) {
                      case 1785737832:
                        h = !1;
                        break;
                      case 1668246642:
                        var u = e[t];
                        if (1 === u) {
                          var d = (0, r.readUint32)(e, t + 3);
                          switch (d) {
                            case 16:
                            case 17:
                            case 18:
                              break;
                            default:
                              (0, n.warn)("Unknown colorspace " + d);
                          }
                        } else if (2 === u)
                          (0, n.info)("ICC profile not supported");
                        break;
                      case 1785737827:
                        this.parseCodestream(e, t, t + c);
                        break;
                      case 1783636e3:
                        if (218793738 !== (0, r.readUint32)(e, t))
                          (0, n.warn)("Invalid JP2 signature");
                        break;
                      case 1783634458:
                      case 1718909296:
                      case 1920099697:
                      case 1919251232:
                      case 1768449138:
                        break;
                      default:
                        var f = String.fromCharCode(
                          (l >> 24) & 255,
                          (l >> 16) & 255,
                          (l >> 8) & 255,
                          255 & l
                        );
                        (0, n.warn)(
                          "Unsupported header type " + l + " (" + f + ")"
                        );
                    }
                    if (h) t += c;
                  }
                else this.parseCodestream(e, 0, e.length);
              },
              parseImageProperties: function (e) {
                for (var t = e.getByte(); t >= 0; )
                  if (65361 == ((t << 8) | (t = e.getByte()))) {
                    e.skip(4);
                    var i = e.getInt32() >>> 0,
                      n = e.getInt32() >>> 0,
                      r = e.getInt32() >>> 0,
                      a = e.getInt32() >>> 0;
                    e.skip(16);
                    var o = e.getUint16();
                    this.width = i - r;
                    this.height = n - a;
                    this.componentsCount = o;
                    this.bitsPerComponent = 8;
                    return;
                  }
                throw new s("No size marker found in JPX stream");
              },
              parseCodestream: function (e, t, a) {
                var l = {},
                  c = !1;
                try {
                  for (var h = t; h + 1 < a; ) {
                    var u = (0, r.readUint16)(e, h);
                    h += 2;
                    var d,
                      f,
                      p,
                      g,
                      m,
                      v,
                      b = 0;
                    switch (u) {
                      case 65359:
                        l.mainHeader = !0;
                        break;
                      case 65497:
                        break;
                      case 65361:
                        b = (0, r.readUint16)(e, h);
                        var x = {};
                        x.Xsiz = (0, r.readUint32)(e, h + 4);
                        x.Ysiz = (0, r.readUint32)(e, h + 8);
                        x.XOsiz = (0, r.readUint32)(e, h + 12);
                        x.YOsiz = (0, r.readUint32)(e, h + 16);
                        x.XTsiz = (0, r.readUint32)(e, h + 20);
                        x.YTsiz = (0, r.readUint32)(e, h + 24);
                        x.XTOsiz = (0, r.readUint32)(e, h + 28);
                        x.YTOsiz = (0, r.readUint32)(e, h + 32);
                        var S = (0, r.readUint16)(e, h + 36);
                        x.Csiz = S;
                        var _ = [];
                        d = h + 38;
                        for (var A = 0; A < S; A++) {
                          var F = {
                            precision: 1 + (127 & e[d]),
                            isSigned: !!(128 & e[d]),
                            XRsiz: e[d + 1],
                            YRsiz: e[d + 2],
                          };
                          d += 3;
                          i(F, x);
                          _.push(F);
                        }
                        l.SIZ = x;
                        l.components = _;
                        o(l, _);
                        l.QCC = [];
                        l.COC = [];
                        break;
                      case 65372:
                        b = (0, r.readUint16)(e, h);
                        var T = {};
                        d = h + 2;
                        switch (31 & (f = e[d++])) {
                          case 0:
                            g = 8;
                            m = !0;
                            break;
                          case 1:
                            g = 16;
                            m = !1;
                            break;
                          case 2:
                            g = 16;
                            m = !0;
                            break;
                          default:
                            throw new Error("Invalid SQcd value " + f);
                        }
                        T.noQuantization = 8 === g;
                        T.scalarExpounded = m;
                        T.guardBits = f >> 5;
                        p = [];
                        for (; d < b + h; ) {
                          var P = {};
                          if (8 === g) {
                            P.epsilon = e[d++] >> 3;
                            P.mu = 0;
                          } else {
                            P.epsilon = e[d] >> 3;
                            P.mu = ((7 & e[d]) << 8) | e[d + 1];
                            d += 2;
                          }
                          p.push(P);
                        }
                        T.SPqcds = p;
                        if (l.mainHeader) l.QCD = T;
                        else {
                          l.currentTile.QCD = T;
                          l.currentTile.QCC = [];
                        }
                        break;
                      case 65373:
                        b = (0, r.readUint16)(e, h);
                        var E,
                          I = {};
                        d = h + 2;
                        if (l.SIZ.Csiz < 257) E = e[d++];
                        else {
                          E = (0, r.readUint16)(e, d);
                          d += 2;
                        }
                        switch (31 & (f = e[d++])) {
                          case 0:
                            g = 8;
                            m = !0;
                            break;
                          case 1:
                            g = 16;
                            m = !1;
                            break;
                          case 2:
                            g = 16;
                            m = !0;
                            break;
                          default:
                            throw new Error("Invalid SQcd value " + f);
                        }
                        I.noQuantization = 8 === g;
                        I.scalarExpounded = m;
                        I.guardBits = f >> 5;
                        p = [];
                        for (; d < b + h; ) {
                          P = {};
                          if (8 === g) {
                            P.epsilon = e[d++] >> 3;
                            P.mu = 0;
                          } else {
                            P.epsilon = e[d] >> 3;
                            P.mu = ((7 & e[d]) << 8) | e[d + 1];
                            d += 2;
                          }
                          p.push(P);
                        }
                        I.SPqcds = p;
                        if (l.mainHeader) l.QCC[E] = I;
                        else l.currentTile.QCC[E] = I;
                        break;
                      case 65362:
                        b = (0, r.readUint16)(e, h);
                        var D = {};
                        d = h + 2;
                        var O = e[d++];
                        D.entropyCoderWithCustomPrecincts = !!(1 & O);
                        D.sopMarkerUsed = !!(2 & O);
                        D.ephMarkerUsed = !!(4 & O);
                        D.progressionOrder = e[d++];
                        D.layersCount = (0, r.readUint16)(e, d);
                        d += 2;
                        D.multipleComponentTransform = e[d++];
                        D.decompositionLevelsCount = e[d++];
                        D.xcb = 2 + (15 & e[d++]);
                        D.ycb = 2 + (15 & e[d++]);
                        var R = e[d++];
                        D.selectiveArithmeticCodingBypass = !!(1 & R);
                        D.resetContextProbabilities = !!(2 & R);
                        D.terminationOnEachCodingPass = !!(4 & R);
                        D.verticallyStripe = !!(8 & R);
                        D.predictableTermination = !!(16 & R);
                        D.segmentationSymbolUsed = !!(32 & R);
                        D.reversibleTransformation = e[d++];
                        if (D.entropyCoderWithCustomPrecincts) {
                          for (var N = []; d < b + h; ) {
                            var M = e[d++];
                            N.push({ PPx: 15 & M, PPy: M >> 4 });
                          }
                          D.precinctsSizes = N;
                        }
                        var B = [];
                        if (D.selectiveArithmeticCodingBypass)
                          B.push("selectiveArithmeticCodingBypass");
                        if (D.resetContextProbabilities)
                          B.push("resetContextProbabilities");
                        if (D.terminationOnEachCodingPass)
                          B.push("terminationOnEachCodingPass");
                        if (D.verticallyStripe) B.push("verticallyStripe");
                        if (D.predictableTermination)
                          B.push("predictableTermination");
                        if (B.length > 0) {
                          c = !0;
                          (0, n.warn)(
                            `JPX: Unsupported COD options (${B.join(", ")}).`
                          );
                        }
                        if (l.mainHeader) l.COD = D;
                        else {
                          l.currentTile.COD = D;
                          l.currentTile.COC = [];
                        }
                        break;
                      case 65424:
                        b = (0, r.readUint16)(e, h);
                        (v = {}).index = (0, r.readUint16)(e, h + 2);
                        v.length = (0, r.readUint32)(e, h + 4);
                        v.dataEnd = v.length + h - 2;
                        v.partIndex = e[h + 8];
                        v.partsCount = e[h + 9];
                        l.mainHeader = !1;
                        if (0 === v.partIndex) {
                          v.COD = l.COD;
                          v.COC = l.COC.slice(0);
                          v.QCD = l.QCD;
                          v.QCC = l.QCC.slice(0);
                        }
                        l.currentTile = v;
                        break;
                      case 65427:
                        if (0 === (v = l.currentTile).partIndex) {
                          C(l, v.index);
                          y(l);
                        }
                        w(l, e, h, (b = v.dataEnd - h));
                        break;
                      case 65363:
                        (0, n.warn)(
                          "JPX: Codestream code 0xFF53 (COC) is not implemented."
                        );
                      case 65365:
                      case 65367:
                      case 65368:
                      case 65380:
                        b = (0, r.readUint16)(e, h);
                        break;
                      default:
                        throw new Error(
                          "Unknown codestream code: " + u.toString(16)
                        );
                    }
                    h += b;
                  }
                } catch (e) {
                  if (c || this.failOnCorruptedImage) throw new s(e.message);
                  else
                    (0, n.warn)(`JPX: Trying to recover from: "${e.message}".`);
                }
                this.tiles = (function (e) {
                  for (
                    var t = e.SIZ,
                      i = e.components,
                      n = t.Csiz,
                      r = [],
                      a = 0,
                      s = e.tiles.length;
                    a < s;
                    a++
                  ) {
                    var o,
                      l = e.tiles[a],
                      c = [];
                    for (o = 0; o < n; o++) c[o] = k(e, l, o);
                    var h,
                      u,
                      d,
                      f,
                      p,
                      g,
                      m,
                      v = c[0],
                      b = new Uint8ClampedArray(v.items.length * n),
                      y = {
                        left: v.left,
                        top: v.top,
                        width: v.width,
                        height: v.height,
                        items: b,
                      },
                      w = 0;
                    if (
                      l.codingStyleDefaultParameters.multipleComponentTransform
                    ) {
                      var x = 4 === n,
                        C = c[0].items,
                        S = c[1].items,
                        _ = c[2].items,
                        A = x ? c[3].items : null;
                      u = 0.5 + (128 << (h = i[0].precision - 8));
                      var F = l.components[0],
                        T = n - 3;
                      f = C.length;
                      if (!F.codingStyleParameters.reversibleTransformation)
                        for (d = 0; d < f; d++, w += T) {
                          p = C[d] + u;
                          g = S[d];
                          m = _[d];
                          b[w++] = (p + 1.402 * m) >> h;
                          b[w++] = (p - 0.34413 * g - 0.71414 * m) >> h;
                          b[w++] = (p + 1.772 * g) >> h;
                        }
                      else
                        for (d = 0; d < f; d++, w += T) {
                          p = C[d] + u;
                          g = S[d];
                          const e = p - (((m = _[d]) + g) >> 2);
                          b[w++] = (e + m) >> h;
                          b[w++] = e >> h;
                          b[w++] = (e + g) >> h;
                        }
                      if (x)
                        for (d = 0, w = 3; d < f; d++, w += 4)
                          b[w] = (A[d] + u) >> h;
                    } else
                      for (o = 0; o < n; o++) {
                        var P = c[o].items;
                        u = 0.5 + (128 << (h = i[o].precision - 8));
                        for (w = o, d = 0, f = P.length; d < f; d++) {
                          b[w] = (P[d] + u) >> h;
                          w += n;
                        }
                      }
                    r.push(y);
                  }
                  return r;
                })(l);
                this.width = l.SIZ.Xsiz - l.SIZ.XOsiz;
                this.height = l.SIZ.Ysiz - l.SIZ.YOsiz;
                this.componentsCount = l.SIZ.Csiz;
              },
            };
            function i(e, t) {
              e.x0 = Math.ceil(t.XOsiz / e.XRsiz);
              e.x1 = Math.ceil(t.Xsiz / e.XRsiz);
              e.y0 = Math.ceil(t.YOsiz / e.YRsiz);
              e.y1 = Math.ceil(t.Ysiz / e.YRsiz);
              e.width = e.x1 - e.x0;
              e.height = e.y1 - e.y0;
            }
            function o(e, t) {
              for (
                var i,
                  n = e.SIZ,
                  r = [],
                  a = Math.ceil((n.Xsiz - n.XTOsiz) / n.XTsiz),
                  s = Math.ceil((n.Ysiz - n.YTOsiz) / n.YTsiz),
                  o = 0;
                o < s;
                o++
              )
                for (var l = 0; l < a; l++) {
                  (i = {}).tx0 = Math.max(n.XTOsiz + l * n.XTsiz, n.XOsiz);
                  i.ty0 = Math.max(n.YTOsiz + o * n.YTsiz, n.YOsiz);
                  i.tx1 = Math.min(n.XTOsiz + (l + 1) * n.XTsiz, n.Xsiz);
                  i.ty1 = Math.min(n.YTOsiz + (o + 1) * n.YTsiz, n.Ysiz);
                  i.width = i.tx1 - i.tx0;
                  i.height = i.ty1 - i.ty0;
                  i.components = [];
                  r.push(i);
                }
              e.tiles = r;
              for (var c = 0, h = n.Csiz; c < h; c++)
                for (var u = t[c], d = 0, f = r.length; d < f; d++) {
                  var p = {};
                  i = r[d];
                  p.tcx0 = Math.ceil(i.tx0 / u.XRsiz);
                  p.tcy0 = Math.ceil(i.ty0 / u.YRsiz);
                  p.tcx1 = Math.ceil(i.tx1 / u.XRsiz);
                  p.tcy1 = Math.ceil(i.ty1 / u.YRsiz);
                  p.width = p.tcx1 - p.tcx0;
                  p.height = p.tcy1 - p.tcy0;
                  i.components[c] = p;
                }
            }
            function l(e, t, i) {
              var n = t.codingStyleParameters,
                r = {};
              if (!n.entropyCoderWithCustomPrecincts) {
                r.PPx = 15;
                r.PPy = 15;
              } else {
                r.PPx = n.precinctsSizes[i].PPx;
                r.PPy = n.precinctsSizes[i].PPy;
              }
              r.xcb_ =
                i > 0 ? Math.min(n.xcb, r.PPx - 1) : Math.min(n.xcb, r.PPx);
              r.ycb_ =
                i > 0 ? Math.min(n.ycb, r.PPy - 1) : Math.min(n.ycb, r.PPy);
              return r;
            }
            function c(e, t, i) {
              var n = 1 << i.PPx,
                r = 1 << i.PPy,
                a = 0 === t.resLevel,
                s = 1 << (i.PPx + (a ? 0 : -1)),
                o = 1 << (i.PPy + (a ? 0 : -1)),
                l =
                  t.trx1 > t.trx0
                    ? Math.ceil(t.trx1 / n) - Math.floor(t.trx0 / n)
                    : 0,
                c =
                  t.try1 > t.try0
                    ? Math.ceil(t.try1 / r) - Math.floor(t.try0 / r)
                    : 0,
                h = l * c;
              t.precinctParameters = {
                precinctWidth: n,
                precinctHeight: r,
                numprecinctswide: l,
                numprecinctshigh: c,
                numprecincts: h,
                precinctWidthInSubband: s,
                precinctHeightInSubband: o,
              };
            }
            function h(e, t, i) {
              var n,
                r,
                a,
                s,
                o = i.xcb_,
                l = i.ycb_,
                c = 1 << o,
                h = 1 << l,
                u = t.tbx0 >> o,
                d = t.tby0 >> l,
                f = (t.tbx1 + c - 1) >> o,
                p = (t.tby1 + h - 1) >> l,
                g = t.resolution.precinctParameters,
                m = [],
                v = [];
              for (r = d; r < p; r++)
                for (n = u; n < f; n++) {
                  (a = {
                    cbx: n,
                    cby: r,
                    tbx0: c * n,
                    tby0: h * r,
                    tbx1: c * (n + 1),
                    tby1: h * (r + 1),
                  }).tbx0_ = Math.max(t.tbx0, a.tbx0);
                  a.tby0_ = Math.max(t.tby0, a.tby0);
                  a.tbx1_ = Math.min(t.tbx1, a.tbx1);
                  a.tby1_ = Math.min(t.tby1, a.tby1);
                  s =
                    Math.floor((a.tbx0_ - t.tbx0) / g.precinctWidthInSubband) +
                    Math.floor((a.tby0_ - t.tby0) / g.precinctHeightInSubband) *
                      g.numprecinctswide;
                  a.precinctNumber = s;
                  a.subbandType = t.type;
                  a.Lblock = 3;
                  if (!(a.tbx1_ <= a.tbx0_ || a.tby1_ <= a.tby0_)) {
                    m.push(a);
                    var b = v[s];
                    if (void 0 !== b) {
                      if (n < b.cbxMin) b.cbxMin = n;
                      else if (n > b.cbxMax) b.cbxMax = n;
                      if (r < b.cbyMin) b.cbxMin = r;
                      else if (r > b.cbyMax) b.cbyMax = r;
                    } else
                      v[s] = b = { cbxMin: n, cbyMin: r, cbxMax: n, cbyMax: r };
                    a.precinct = b;
                  }
                }
              t.codeblockParameters = {
                codeblockWidth: o,
                codeblockHeight: l,
                numcodeblockwide: f - u + 1,
                numcodeblockhigh: p - d + 1,
              };
              t.codeblocks = m;
              t.precincts = v;
            }
            function u(e, t, i) {
              for (var n = [], r = e.subbands, a = 0, s = r.length; a < s; a++)
                for (var o = r[a].codeblocks, l = 0, c = o.length; l < c; l++) {
                  var h = o[l];
                  if (h.precinctNumber === t) n.push(h);
                }
              return { layerNumber: i, codeblocks: n };
            }
            function d(e) {
              for (
                var t = e.SIZ,
                  i = e.currentTile.index,
                  n = e.tiles[i],
                  r = n.codingStyleDefaultParameters.layersCount,
                  a = t.Csiz,
                  o = 0,
                  l = 0;
                l < a;
                l++
              )
                o = Math.max(
                  o,
                  n.components[l].codingStyleParameters.decompositionLevelsCount
                );
              var c = 0,
                h = 0,
                d = 0,
                f = 0;
              this.nextPacket = function () {
                for (; c < r; c++) {
                  for (; h <= o; h++) {
                    for (; d < a; d++) {
                      var e = n.components[d];
                      if (
                        !(h > e.codingStyleParameters.decompositionLevelsCount)
                      ) {
                        for (
                          var t = e.resolutions[h],
                            i = t.precinctParameters.numprecincts;
                          f < i;

                        ) {
                          var l = u(t, f, c);
                          f++;
                          return l;
                        }
                        f = 0;
                      }
                    }
                    d = 0;
                  }
                  h = 0;
                }
                throw new s("Out of packets");
              };
            }
            function f(e) {
              for (
                var t = e.SIZ,
                  i = e.currentTile.index,
                  n = e.tiles[i],
                  r = n.codingStyleDefaultParameters.layersCount,
                  a = t.Csiz,
                  o = 0,
                  l = 0;
                l < a;
                l++
              )
                o = Math.max(
                  o,
                  n.components[l].codingStyleParameters.decompositionLevelsCount
                );
              var c = 0,
                h = 0,
                d = 0,
                f = 0;
              this.nextPacket = function () {
                for (; c <= o; c++) {
                  for (; h < r; h++) {
                    for (; d < a; d++) {
                      var e = n.components[d];
                      if (
                        !(c > e.codingStyleParameters.decompositionLevelsCount)
                      ) {
                        for (
                          var t = e.resolutions[c],
                            i = t.precinctParameters.numprecincts;
                          f < i;

                        ) {
                          var l = u(t, f, h);
                          f++;
                          return l;
                        }
                        f = 0;
                      }
                    }
                    d = 0;
                  }
                  h = 0;
                }
                throw new s("Out of packets");
              };
            }
            function p(e) {
              var t,
                i,
                n,
                r,
                a = e.SIZ,
                o = e.currentTile.index,
                l = e.tiles[o],
                c = l.codingStyleDefaultParameters.layersCount,
                h = a.Csiz,
                d = 0;
              for (n = 0; n < h; n++) {
                const e = l.components[n];
                d = Math.max(
                  d,
                  e.codingStyleParameters.decompositionLevelsCount
                );
              }
              var f = new Int32Array(d + 1);
              for (i = 0; i <= d; ++i) {
                var p = 0;
                for (n = 0; n < h; ++n) {
                  var g = l.components[n].resolutions;
                  if (i < g.length)
                    p = Math.max(p, g[i].precinctParameters.numprecincts);
                }
                f[i] = p;
              }
              t = 0;
              i = 0;
              n = 0;
              r = 0;
              this.nextPacket = function () {
                for (; i <= d; i++) {
                  for (; r < f[i]; r++) {
                    for (; n < h; n++) {
                      const s = l.components[n];
                      if (
                        !(i > s.codingStyleParameters.decompositionLevelsCount)
                      ) {
                        var e = s.resolutions[i],
                          a = e.precinctParameters.numprecincts;
                        if (!(r >= a)) {
                          for (; t < c; ) {
                            var o = u(e, r, t);
                            t++;
                            return o;
                          }
                          t = 0;
                        }
                      }
                    }
                    n = 0;
                  }
                  r = 0;
                }
                throw new s("Out of packets");
              };
            }
            function g(e) {
              var t = e.SIZ,
                i = e.currentTile.index,
                n = e.tiles[i],
                r = n.codingStyleDefaultParameters.layersCount,
                a = t.Csiz,
                o = b(n),
                l = o,
                c = 0,
                h = 0,
                d = 0,
                f = 0,
                p = 0;
              this.nextPacket = function () {
                for (; p < l.maxNumHigh; p++) {
                  for (; f < l.maxNumWide; f++) {
                    for (; d < a; d++) {
                      for (
                        var e = n.components[d],
                          t = e.codingStyleParameters.decompositionLevelsCount;
                        h <= t;
                        h++
                      ) {
                        var i = e.resolutions[h],
                          g = o.components[d].resolutions[h],
                          m = v(f, p, g, l, i);
                        if (null !== m) {
                          for (; c < r; ) {
                            var b = u(i, m, c);
                            c++;
                            return b;
                          }
                          c = 0;
                        }
                      }
                      h = 0;
                    }
                    d = 0;
                  }
                  f = 0;
                }
                throw new s("Out of packets");
              };
            }
            function m(e) {
              var t = e.SIZ,
                i = e.currentTile.index,
                n = e.tiles[i],
                r = n.codingStyleDefaultParameters.layersCount,
                a = t.Csiz,
                o = b(n),
                l = 0,
                c = 0,
                h = 0,
                d = 0,
                f = 0;
              this.nextPacket = function () {
                for (; h < a; ++h) {
                  for (
                    var e = n.components[h],
                      t = o.components[h],
                      i = e.codingStyleParameters.decompositionLevelsCount;
                    f < t.maxNumHigh;
                    f++
                  ) {
                    for (; d < t.maxNumWide; d++) {
                      for (; c <= i; c++) {
                        var p = e.resolutions[c],
                          g = t.resolutions[c],
                          m = v(d, f, g, t, p);
                        if (null !== m) {
                          for (; l < r; ) {
                            var b = u(p, m, l);
                            l++;
                            return b;
                          }
                          l = 0;
                        }
                      }
                      c = 0;
                    }
                    d = 0;
                  }
                  f = 0;
                }
                throw new s("Out of packets");
              };
            }
            function v(e, t, i, n, r) {
              var a = e * n.minWidth,
                s = t * n.minHeight;
              if (a % i.width != 0 || s % i.height != 0) return null;
              var o = (s / i.width) * r.precinctParameters.numprecinctswide;
              return a / i.height + o;
            }
            function b(e) {
              for (
                var t = e.components.length,
                  i = Number.MAX_VALUE,
                  n = Number.MAX_VALUE,
                  r = 0,
                  a = 0,
                  s = new Array(t),
                  o = 0;
                o < t;
                o++
              ) {
                for (
                  var l = e.components[o],
                    c = l.codingStyleParameters.decompositionLevelsCount,
                    h = new Array(c + 1),
                    u = Number.MAX_VALUE,
                    d = Number.MAX_VALUE,
                    f = 0,
                    p = 0,
                    g = 1,
                    m = c;
                  m >= 0;
                  --m
                ) {
                  var v = l.resolutions[m],
                    b = g * v.precinctParameters.precinctWidth,
                    y = g * v.precinctParameters.precinctHeight;
                  u = Math.min(u, b);
                  d = Math.min(d, y);
                  f = Math.max(f, v.precinctParameters.numprecinctswide);
                  p = Math.max(p, v.precinctParameters.numprecinctshigh);
                  h[m] = { width: b, height: y };
                  g <<= 1;
                }
                i = Math.min(i, u);
                n = Math.min(n, d);
                r = Math.max(r, f);
                a = Math.max(a, p);
                s[o] = {
                  resolutions: h,
                  minWidth: u,
                  minHeight: d,
                  maxNumWide: f,
                  maxNumHigh: p,
                };
              }
              return {
                components: s,
                minWidth: i,
                minHeight: n,
                maxNumWide: r,
                maxNumHigh: a,
              };
            }
            function y(e) {
              for (
                var t = e.SIZ,
                  i = e.currentTile.index,
                  n = e.tiles[i],
                  r = t.Csiz,
                  a = 0;
                a < r;
                a++
              ) {
                for (
                  var o = n.components[a],
                    u = o.codingStyleParameters.decompositionLevelsCount,
                    v = [],
                    b = [],
                    y = 0;
                  y <= u;
                  y++
                ) {
                  var w,
                    x = l(0, o, y),
                    k = {},
                    C = 1 << (u - y);
                  k.trx0 = Math.ceil(o.tcx0 / C);
                  k.try0 = Math.ceil(o.tcy0 / C);
                  k.trx1 = Math.ceil(o.tcx1 / C);
                  k.try1 = Math.ceil(o.tcy1 / C);
                  k.resLevel = y;
                  c(0, k, x);
                  v.push(k);
                  if (0 === y) {
                    (w = {}).type = "LL";
                    w.tbx0 = Math.ceil(o.tcx0 / C);
                    w.tby0 = Math.ceil(o.tcy0 / C);
                    w.tbx1 = Math.ceil(o.tcx1 / C);
                    w.tby1 = Math.ceil(o.tcy1 / C);
                    w.resolution = k;
                    h(0, w, x);
                    b.push(w);
                    k.subbands = [w];
                  } else {
                    var S = 1 << (u - y + 1),
                      _ = [];
                    (w = {}).type = "HL";
                    w.tbx0 = Math.ceil(o.tcx0 / S - 0.5);
                    w.tby0 = Math.ceil(o.tcy0 / S);
                    w.tbx1 = Math.ceil(o.tcx1 / S - 0.5);
                    w.tby1 = Math.ceil(o.tcy1 / S);
                    w.resolution = k;
                    h(0, w, x);
                    b.push(w);
                    _.push(w);
                    (w = {}).type = "LH";
                    w.tbx0 = Math.ceil(o.tcx0 / S);
                    w.tby0 = Math.ceil(o.tcy0 / S - 0.5);
                    w.tbx1 = Math.ceil(o.tcx1 / S);
                    w.tby1 = Math.ceil(o.tcy1 / S - 0.5);
                    w.resolution = k;
                    h(0, w, x);
                    b.push(w);
                    _.push(w);
                    (w = {}).type = "HH";
                    w.tbx0 = Math.ceil(o.tcx0 / S - 0.5);
                    w.tby0 = Math.ceil(o.tcy0 / S - 0.5);
                    w.tbx1 = Math.ceil(o.tcx1 / S - 0.5);
                    w.tby1 = Math.ceil(o.tcy1 / S - 0.5);
                    w.resolution = k;
                    h(0, w, x);
                    b.push(w);
                    _.push(w);
                    k.subbands = _;
                  }
                }
                o.resolutions = v;
                o.subbands = b;
              }
              var A = n.codingStyleDefaultParameters.progressionOrder;
              switch (A) {
                case 0:
                  n.packetsIterator = new d(e);
                  break;
                case 1:
                  n.packetsIterator = new f(e);
                  break;
                case 2:
                  n.packetsIterator = new p(e);
                  break;
                case 3:
                  n.packetsIterator = new g(e);
                  break;
                case 4:
                  n.packetsIterator = new m(e);
                  break;
                default:
                  throw new s(`Unsupported progression order ${A}`);
              }
            }
            function w(e, t, i, n) {
              var a,
                s = 0,
                o = 0,
                l = !1;
              function c(e) {
                for (; o < e; ) {
                  var n = t[i + s];
                  s++;
                  if (l) {
                    a = (a << 7) | n;
                    o += 7;
                    l = !1;
                  } else {
                    a = (a << 8) | n;
                    o += 8;
                  }
                  if (255 === n) l = !0;
                }
                return (a >>> (o -= e)) & ((1 << e) - 1);
              }
              function h(e) {
                if (255 === t[i + s - 1] && t[i + s] === e) {
                  u(1);
                  return !0;
                } else if (255 === t[i + s] && t[i + s + 1] === e) {
                  u(2);
                  return !0;
                }
                return !1;
              }
              function u(e) {
                s += e;
              }
              function d() {
                o = 0;
                if (l) {
                  s++;
                  l = !1;
                }
              }
              function f() {
                if (0 === c(1)) return 1;
                if (0 === c(1)) return 2;
                var e = c(2);
                if (e < 3) return e + 3;
                if ((e = c(5)) < 31) return e + 6;
                else return (e = c(7)) + 37;
              }
              for (
                var p = e.currentTile.index,
                  g = e.tiles[p],
                  m = e.COD.sopMarkerUsed,
                  v = e.COD.ephMarkerUsed,
                  b = g.packetsIterator;
                s < n;

              ) {
                d();
                if (m && h(145)) u(4);
                var y = b.nextPacket();
                if (c(1)) {
                  for (
                    var w,
                      x = y.layerNumber,
                      k = [],
                      C = 0,
                      A = y.codeblocks.length;
                    C < A;
                    C++
                  ) {
                    var F = (w = y.codeblocks[C]).precinct,
                      T = w.cbx - F.cbxMin,
                      P = w.cby - F.cbyMin,
                      E = !1,
                      I = !1;
                    if (void 0 !== w.included) E = !!c(1);
                    else {
                      var D, O;
                      if (void 0 !== (F = w.precinct).inclusionTree)
                        D = F.inclusionTree;
                      else {
                        var R = F.cbxMax - F.cbxMin + 1,
                          N = F.cbyMax - F.cbyMin + 1;
                        D = new _(R, N, x);
                        O = new S(R, N);
                        F.inclusionTree = D;
                        F.zeroBitPlanesTree = O;
                      }
                      if (D.reset(T, P, x))
                        for (;;)
                          if (c(1)) {
                            if (!D.nextLevel()) {
                              w.included = !0;
                              E = I = !0;
                              break;
                            }
                          } else {
                            D.incrementValue(x);
                            break;
                          }
                    }
                    if (E) {
                      if (I) {
                        (O = F.zeroBitPlanesTree).reset(T, P);
                        for (;;)
                          if (c(1)) {
                            if (!O.nextLevel()) break;
                          } else O.incrementValue();
                        w.zeroBitPlanes = O.value;
                      }
                      for (var M = f(); c(1); ) w.Lblock++;
                      var B = (0, r.log2)(M),
                        L = c((M < 1 << B ? B - 1 : B) + w.Lblock);
                      k.push({ codeblock: w, codingpasses: M, dataLength: L });
                    }
                  }
                  d();
                  if (v) h(146);
                  for (; k.length > 0; ) {
                    var U = k.shift();
                    if (void 0 === (w = U.codeblock).data) w.data = [];
                    w.data.push({
                      data: t,
                      start: i + s,
                      end: i + s + U.dataLength,
                      codingpasses: U.codingpasses,
                    });
                    s += U.dataLength;
                  }
                }
              }
              return s;
            }
            function x(e, t, i, n, r, s, o, l) {
              for (
                var c = n.tbx0,
                  h = n.tby0,
                  u = n.tbx1 - n.tbx0,
                  d = n.codeblocks,
                  f = "H" === n.type.charAt(0) ? 1 : 0,
                  p = "H" === n.type.charAt(1) ? t : 0,
                  g = 0,
                  m = d.length;
                g < m;
                ++g
              ) {
                var v = d[g],
                  b = v.tbx1_ - v.tbx0_,
                  y = v.tby1_ - v.tby0_;
                if (0 !== b && 0 !== y)
                  if (void 0 !== v.data) {
                    var w, x;
                    w = new A(b, y, v.subbandType, v.zeroBitPlanes, s);
                    x = 2;
                    var k,
                      C,
                      S,
                      _ = v.data,
                      F = 0,
                      T = 0;
                    for (k = 0, C = _.length; k < C; k++) {
                      F += (S = _[k]).end - S.start;
                      T += S.codingpasses;
                    }
                    var P = new Uint8Array(F),
                      E = 0;
                    for (k = 0, C = _.length; k < C; k++) {
                      var I = (S = _[k]).data.subarray(S.start, S.end);
                      P.set(I, E);
                      E += I.length;
                    }
                    var D = new a.ArithmeticDecoder(P, 0, F);
                    w.setDecoder(D);
                    for (k = 0; k < T; k++) {
                      switch (x) {
                        case 0:
                          w.runSignificancePropagationPass();
                          break;
                        case 1:
                          w.runMagnitudeRefinementPass();
                          break;
                        case 2:
                          w.runCleanupPass();
                          if (l) w.checkSegmentationSymbol();
                      }
                      x = (x + 1) % 3;
                    }
                    var O,
                      R,
                      N,
                      M = v.tbx0_ - c + (v.tby0_ - h) * u,
                      B = w.coefficentsSign,
                      L = w.coefficentsMagnitude,
                      U = w.bitsDecoded,
                      z = o ? 0 : 0.5;
                    E = 0;
                    var j = "LL" !== n.type;
                    for (k = 0; k < y; k++) {
                      var q = 2 * ((M / u) | 0) * (t - u) + f + p;
                      for (O = 0; O < b; O++) {
                        if (0 !== (R = L[E])) {
                          R = (R + z) * r;
                          if (0 !== B[E]) R = -R;
                          N = U[E];
                          var H = j ? q + (M << 1) : M;
                          if (o && N >= s) e[H] = R;
                          else e[H] = R * (1 << (s - N));
                        }
                        M++;
                        E++;
                      }
                      M += u - b;
                    }
                  }
              }
            }
            function k(t, i, n) {
              for (
                var r = i.components[n],
                  a = r.codingStyleParameters,
                  s = r.quantizationParameters,
                  o = a.decompositionLevelsCount,
                  l = s.SPqcds,
                  c = s.scalarExpounded,
                  h = s.guardBits,
                  u = a.segmentationSymbolUsed,
                  d = t.components[n].precision,
                  f = a.reversibleTransformation,
                  p = f ? new P() : new T(),
                  g = [],
                  m = 0,
                  v = 0;
                v <= o;
                v++
              ) {
                for (
                  var b = r.resolutions[v],
                    y = b.trx1 - b.trx0,
                    w = b.try1 - b.try0,
                    k = new Float32Array(y * w),
                    C = 0,
                    S = b.subbands.length;
                  C < S;
                  C++
                ) {
                  var _, A;
                  if (!c) {
                    _ = l[0].mu;
                    A = l[0].epsilon + (v > 0 ? 1 - v : 0);
                  } else {
                    _ = l[m].mu;
                    A = l[m].epsilon;
                    m++;
                  }
                  var F = b.subbands[C],
                    E = e[F.type];
                  x(
                    k,
                    y,
                    0,
                    F,
                    f ? 1 : 2 ** (d + E - A) * (1 + _ / 2048),
                    h + A - 1,
                    f,
                    u
                  );
                }
                g.push({ width: y, height: w, items: k });
              }
              var I = p.calculate(g, r.tcx0, r.tcy0);
              return {
                left: r.tcx0,
                top: r.tcy0,
                width: I.width,
                height: I.height,
                items: I.items,
              };
            }
            function C(e, t) {
              for (var i = e.SIZ.Csiz, n = e.tiles[t], r = 0; r < i; r++) {
                var a = n.components[r],
                  s =
                    void 0 !== e.currentTile.QCC[r]
                      ? e.currentTile.QCC[r]
                      : e.currentTile.QCD;
                a.quantizationParameters = s;
                var o =
                  void 0 !== e.currentTile.COC[r]
                    ? e.currentTile.COC[r]
                    : e.currentTile.COD;
                a.codingStyleParameters = o;
              }
              n.codingStyleDefaultParameters = e.currentTile.COD;
            }
            var S = (function () {
                function e(e, t) {
                  var i = (0, r.log2)(Math.max(e, t)) + 1;
                  this.levels = [];
                  for (var n = 0; n < i; n++) {
                    var a = { width: e, height: t, items: [] };
                    this.levels.push(a);
                    e = Math.ceil(e / 2);
                    t = Math.ceil(t / 2);
                  }
                }
                e.prototype = {
                  reset: function (e, t) {
                    for (var i, n = 0, r = 0; n < this.levels.length; ) {
                      var a = e + t * (i = this.levels[n]).width;
                      if (void 0 !== i.items[a]) {
                        r = i.items[a];
                        break;
                      }
                      i.index = a;
                      e >>= 1;
                      t >>= 1;
                      n++;
                    }
                    n--;
                    (i = this.levels[n]).items[i.index] = r;
                    this.currentLevel = n;
                    delete this.value;
                  },
                  incrementValue: function () {
                    var e = this.levels[this.currentLevel];
                    e.items[e.index]++;
                  },
                  nextLevel: function () {
                    var e = this.currentLevel,
                      t = this.levels[e],
                      i = t.items[t.index];
                    if (--e < 0) {
                      this.value = i;
                      return !1;
                    }
                    this.currentLevel = e;
                    (t = this.levels[e]).items[t.index] = i;
                    return !0;
                  },
                };
                return e;
              })(),
              _ = (function () {
                function e(e, t, i) {
                  var n = (0, r.log2)(Math.max(e, t)) + 1;
                  this.levels = [];
                  for (var a = 0; a < n; a++) {
                    for (
                      var s = new Uint8Array(e * t), o = 0, l = s.length;
                      o < l;
                      o++
                    )
                      s[o] = i;
                    var c = { width: e, height: t, items: s };
                    this.levels.push(c);
                    e = Math.ceil(e / 2);
                    t = Math.ceil(t / 2);
                  }
                }
                e.prototype = {
                  reset: function (e, t, i) {
                    for (var n = 0; n < this.levels.length; ) {
                      var r = this.levels[n],
                        a = e + t * r.width;
                      r.index = a;
                      var s = r.items[a];
                      if (255 === s) break;
                      if (s > i) {
                        this.currentLevel = n;
                        this.propagateValues();
                        return !1;
                      }
                      e >>= 1;
                      t >>= 1;
                      n++;
                    }
                    this.currentLevel = n - 1;
                    return !0;
                  },
                  incrementValue: function (e) {
                    var t = this.levels[this.currentLevel];
                    t.items[t.index] = e + 1;
                    this.propagateValues();
                  },
                  propagateValues: function () {
                    for (
                      var e = this.currentLevel,
                        t = this.levels[e],
                        i = t.items[t.index];
                      --e >= 0;

                    )
                      (t = this.levels[e]).items[t.index] = i;
                  },
                  nextLevel: function () {
                    var e = this.currentLevel,
                      t = this.levels[e],
                      i = t.items[t.index];
                    t.items[t.index] = 255;
                    if (--e < 0) return !1;
                    this.currentLevel = e;
                    (t = this.levels[e]).items[t.index] = i;
                    return !0;
                  },
                };
                return e;
              })(),
              A = (function () {
                var e = 17,
                  t = new Uint8Array([
                    0, 5, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 1, 6, 8, 0,
                    3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0,
                    4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0,
                    0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8,
                  ]),
                  i = new Uint8Array([
                    0, 3, 4, 0, 5, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 1, 3, 4, 0,
                    6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0,
                    8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0,
                    0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8,
                  ]),
                  n = new Uint8Array([
                    0, 1, 2, 0, 1, 2, 2, 0, 2, 2, 2, 0, 0, 0, 0, 0, 3, 4, 5, 0,
                    4, 5, 5, 0, 5, 5, 5, 0, 0, 0, 0, 0, 6, 7, 7, 0, 7, 7, 7, 0,
                    7, 7, 7, 0, 0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8, 0,
                    0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8,
                  ]);
                function r(e, r, a, s, o) {
                  this.width = e;
                  this.height = r;
                  let l;
                  if ("HH" === a) l = n;
                  else if ("HL" === a) l = i;
                  else l = t;
                  this.contextLabelTable = l;
                  var c = e * r;
                  this.neighborsSignificance = new Uint8Array(c);
                  this.coefficentsSign = new Uint8Array(c);
                  let h;
                  if (o > 14) h = new Uint32Array(c);
                  else if (o > 6) h = new Uint16Array(c);
                  else h = new Uint8Array(c);
                  this.coefficentsMagnitude = h;
                  this.processingFlags = new Uint8Array(c);
                  var u = new Uint8Array(c);
                  if (0 !== s) for (var d = 0; d < c; d++) u[d] = s;
                  this.bitsDecoded = u;
                  this.reset();
                }
                r.prototype = {
                  setDecoder: function (e) {
                    this.decoder = e;
                  },
                  reset: function () {
                    this.contexts = new Int8Array(19);
                    this.contexts[0] = 8;
                    this.contexts[17] = 92;
                    this.contexts[18] = 6;
                  },
                  setNeighborsSignificance: function (e, t, i) {
                    var n,
                      r = this.neighborsSignificance,
                      a = this.width,
                      s = this.height,
                      o = t > 0,
                      l = t + 1 < a;
                    if (e > 0) {
                      n = i - a;
                      if (o) r[n - 1] += 16;
                      if (l) r[n + 1] += 16;
                      r[n] += 4;
                    }
                    if (e + 1 < s) {
                      n = i + a;
                      if (o) r[n - 1] += 16;
                      if (l) r[n + 1] += 16;
                      r[n] += 4;
                    }
                    if (o) r[i - 1] += 1;
                    if (l) r[i + 1] += 1;
                    r[i] |= 128;
                  },
                  runSignificancePropagationPass: function () {
                    for (
                      var e = this.decoder,
                        t = this.width,
                        i = this.height,
                        n = this.coefficentsMagnitude,
                        r = this.coefficentsSign,
                        a = this.neighborsSignificance,
                        s = this.processingFlags,
                        o = this.contexts,
                        l = this.contextLabelTable,
                        c = this.bitsDecoded,
                        h = 0;
                      h < i;
                      h += 4
                    )
                      for (var u = 0; u < t; u++)
                        for (var d = h * t + u, f = 0; f < 4; f++, d += t) {
                          var p = h + f;
                          if (p >= i) break;
                          s[d] &= -2;
                          if (!n[d] && a[d]) {
                            var g = l[a[d]];
                            if (e.readBit(o, g)) {
                              var m = this.decodeSignBit(p, u, d);
                              r[d] = m;
                              n[d] = 1;
                              this.setNeighborsSignificance(p, u, d);
                              s[d] |= 2;
                            }
                            c[d]++;
                            s[d] |= 1;
                          }
                        }
                  },
                  decodeSignBit: function (e, t, i) {
                    var n,
                      r,
                      a,
                      s,
                      o,
                      l,
                      c = this.width,
                      h = this.height,
                      u = this.coefficentsMagnitude,
                      d = this.coefficentsSign;
                    s = t > 0 && 0 !== u[i - 1];
                    if (t + 1 < c && 0 !== u[i + 1]) {
                      a = d[i + 1];
                      if (s) n = 1 - a - (r = d[i - 1]);
                      else n = 1 - a - a;
                    } else if (s) n = 1 - (r = d[i - 1]) - r;
                    else n = 0;
                    var f = 3 * n;
                    s = e > 0 && 0 !== u[i - c];
                    if (e + 1 < h && 0 !== u[i + c]) {
                      a = d[i + c];
                      if (s) n = 1 - a - (r = d[i - c]) + f;
                      else n = 1 - a - a + f;
                    } else if (s) n = 1 - (r = d[i - c]) - r + f;
                    else n = f;
                    if (n >= 0) {
                      o = 9 + n;
                      l = this.decoder.readBit(this.contexts, o);
                    } else {
                      o = 9 - n;
                      l = 1 ^ this.decoder.readBit(this.contexts, o);
                    }
                    return l;
                  },
                  runMagnitudeRefinementPass: function () {
                    for (
                      var e,
                        t = this.decoder,
                        i = this.width,
                        n = this.height,
                        r = this.coefficentsMagnitude,
                        a = this.neighborsSignificance,
                        s = this.contexts,
                        o = this.bitsDecoded,
                        l = this.processingFlags,
                        c = i * n,
                        h = 4 * i,
                        u = 0;
                      u < c;
                      u = e
                    ) {
                      e = Math.min(c, u + h);
                      for (var d = 0; d < i; d++)
                        for (var f = u + d; f < e; f += i)
                          if (r[f] && 0 == (1 & l[f])) {
                            var p = 16;
                            if (0 != (2 & l[f])) {
                              l[f] ^= 2;
                              p = 0 == (127 & a[f]) ? 15 : 14;
                            }
                            var g = t.readBit(s, p);
                            r[f] = (r[f] << 1) | g;
                            o[f]++;
                            l[f] |= 1;
                          }
                    }
                  },
                  runCleanupPass: function () {
                    for (
                      var t,
                        i = this.decoder,
                        n = this.width,
                        r = this.height,
                        a = this.neighborsSignificance,
                        s = this.coefficentsMagnitude,
                        o = this.coefficentsSign,
                        l = this.contexts,
                        c = this.contextLabelTable,
                        h = this.bitsDecoded,
                        u = this.processingFlags,
                        d = n,
                        f = 2 * n,
                        p = 3 * n,
                        g = 0;
                      g < r;
                      g = t
                    ) {
                      t = Math.min(g + 4, r);
                      for (var m = g * n, v = g + 3 < r, b = 0; b < n; b++) {
                        var y,
                          w = m + b,
                          x = 0,
                          k = w,
                          C = g;
                        if (
                          v &&
                          0 === u[w] &&
                          0 === u[w + d] &&
                          0 === u[w + f] &&
                          0 === u[w + p] &&
                          0 === a[w] &&
                          0 === a[w + d] &&
                          0 === a[w + f] &&
                          0 === a[w + p]
                        ) {
                          if (!i.readBit(l, 18)) {
                            h[w]++;
                            h[w + d]++;
                            h[w + f]++;
                            h[w + p]++;
                            continue;
                          }
                          if (
                            0 != (x = (i.readBit(l, e) << 1) | i.readBit(l, e))
                          ) {
                            C = g + x;
                            k += x * n;
                          }
                          y = this.decodeSignBit(C, b, k);
                          o[k] = y;
                          s[k] = 1;
                          this.setNeighborsSignificance(C, b, k);
                          u[k] |= 2;
                          k = w;
                          for (var S = g; S <= C; S++, k += n) h[k]++;
                          x++;
                        }
                        for (C = g + x; C < t; C++, k += n)
                          if (!s[k] && 0 == (1 & u[k])) {
                            var _ = c[a[k]];
                            if (1 === i.readBit(l, _)) {
                              y = this.decodeSignBit(C, b, k);
                              o[k] = y;
                              s[k] = 1;
                              this.setNeighborsSignificance(C, b, k);
                              u[k] |= 2;
                            }
                            h[k]++;
                          }
                      }
                    }
                  },
                  checkSegmentationSymbol: function () {
                    var t = this.decoder,
                      i = this.contexts;
                    if (
                      10 !=
                      ((t.readBit(i, e) << 3) |
                        (t.readBit(i, e) << 2) |
                        (t.readBit(i, e) << 1) |
                        t.readBit(i, e))
                    )
                      throw new s("Invalid segmentation symbol");
                  },
                };
                return r;
              })(),
              F = (function () {
                function e() {}
                e.prototype.calculate = function (e, t, i) {
                  for (var n = e[0], r = 1, a = e.length; r < a; r++)
                    n = this.iterate(n, e[r], t, i);
                  return n;
                };
                e.prototype.extend = function (e, t, i) {
                  var n = t - 1,
                    r = t + 1,
                    a = t + i - 2,
                    s = t + i;
                  e[n--] = e[r++];
                  e[s++] = e[a--];
                  e[n--] = e[r++];
                  e[s++] = e[a--];
                  e[n--] = e[r++];
                  e[s++] = e[a--];
                  e[n] = e[r];
                  e[s] = e[a];
                };
                e.prototype.iterate = function (e, t, i, n) {
                  var r,
                    a,
                    s,
                    o,
                    l,
                    c,
                    h = e.width,
                    u = e.height,
                    d = e.items,
                    f = t.width,
                    p = t.height,
                    g = t.items;
                  for (s = 0, r = 0; r < u; r++) {
                    o = 2 * r * f;
                    for (a = 0; a < h; a++, s++, o += 2) g[o] = d[s];
                  }
                  d = e.items = null;
                  var m = new Float32Array(f + 8);
                  if (1 === f) {
                    if (0 != (1 & i))
                      for (c = 0, s = 0; c < p; c++, s += f) g[s] *= 0.5;
                  } else
                    for (c = 0, s = 0; c < p; c++, s += f) {
                      m.set(g.subarray(s, s + f), 4);
                      this.extend(m, 4, f);
                      this.filter(m, 4, f);
                      g.set(m.subarray(4, 4 + f), s);
                    }
                  var v = 16,
                    b = [];
                  for (r = 0; r < v; r++) b.push(new Float32Array(p + 8));
                  var y,
                    w = 0;
                  e = 4 + p;
                  if (1 === p) {
                    if (0 != (1 & n)) for (l = 0; l < f; l++) g[l] *= 0.5;
                  } else
                    for (l = 0; l < f; l++) {
                      if (0 === w) {
                        v = Math.min(f - l, v);
                        for (s = l, o = 4; o < e; s += f, o++)
                          for (y = 0; y < v; y++) b[y][o] = g[s + y];
                        w = v;
                      }
                      var x = b[--w];
                      this.extend(x, 4, p);
                      this.filter(x, 4, p);
                      if (0 === w) {
                        s = l - v + 1;
                        for (o = 4; o < e; s += f, o++)
                          for (y = 0; y < v; y++) g[s + y] = b[y][o];
                      }
                    }
                  return { width: f, height: p, items: g };
                };
                return e;
              })(),
              T = (function () {
                function e() {
                  F.call(this);
                }
                e.prototype = Object.create(F.prototype);
                e.prototype.filter = function (e, t, i) {
                  var n,
                    r,
                    a,
                    s,
                    o = i >> 1,
                    l = -1.586134342059924,
                    c = -0.052980118572961,
                    h = 0.882911075530934,
                    u = 0.443506852043971,
                    d = 1.230174104914001;
                  n = (t |= 0) - 3;
                  for (r = o + 4; r--; n += 2) e[n] *= 0.8128930661159609;
                  a = u * e[(n = t - 2) - 1];
                  for (r = o + 3; r--; n += 2) {
                    s = u * e[n + 1];
                    e[n] = d * e[n] - a - s;
                    if (r--) {
                      a = u * e[(n += 2) + 1];
                      e[n] = d * e[n] - a - s;
                    } else break;
                  }
                  a = h * e[(n = t - 1) - 1];
                  for (r = o + 2; r--; n += 2) {
                    s = h * e[n + 1];
                    e[n] -= a + s;
                    if (r--) {
                      a = h * e[(n += 2) + 1];
                      e[n] -= a + s;
                    } else break;
                  }
                  a = c * e[(n = t) - 1];
                  for (r = o + 1; r--; n += 2) {
                    s = c * e[n + 1];
                    e[n] -= a + s;
                    if (r--) {
                      a = c * e[(n += 2) + 1];
                      e[n] -= a + s;
                    } else break;
                  }
                  if (0 !== o) {
                    a = l * e[(n = t + 1) - 1];
                    for (r = o; r--; n += 2) {
                      s = l * e[n + 1];
                      e[n] -= a + s;
                      if (r--) {
                        a = l * e[(n += 2) + 1];
                        e[n] -= a + s;
                      } else break;
                    }
                  }
                };
                return e;
              })(),
              P = (function () {
                function e() {
                  F.call(this);
                }
                e.prototype = Object.create(F.prototype);
                e.prototype.filter = function (e, t, i) {
                  var n,
                    r,
                    a = i >> 1;
                  for (n = t |= 0, r = a + 1; r--; n += 2)
                    e[n] -= (e[n - 1] + e[n + 1] + 2) >> 2;
                  for (n = t + 1, r = a; r--; n += 2)
                    e[n] += (e[n - 1] + e[n + 1]) >> 1;
                };
                return e;
              })();
            return t;
          })();
          t.JpxImage = o;
        },
        (e, t, i) => {
          Object.defineProperty(t, "__esModule", { value: !0 });
          t.PDF20 =
            t.PDF17 =
            t.CipherTransformFactory =
            t.calculateSHA512 =
            t.calculateSHA384 =
            t.calculateSHA256 =
            t.calculateMD5 =
            t.ARCFourCipher =
            t.AES256Cipher =
            t.AES128Cipher =
              void 0;
          var n = i(2),
            r = i(5),
            a = i(12),
            s = (function () {
              function e(e) {
                this.a = 0;
                this.b = 0;
                var t,
                  i,
                  n = new Uint8Array(256),
                  r = 0,
                  a = e.length;
                for (t = 0; t < 256; ++t) n[t] = t;
                for (t = 0; t < 256; ++t) {
                  r = (r + (i = n[t]) + e[t % a]) & 255;
                  n[t] = n[r];
                  n[r] = i;
                }
                this.s = n;
              }
              e.prototype = {
                encryptBlock: function (e) {
                  var t,
                    i,
                    n,
                    r = e.length,
                    a = this.a,
                    s = this.b,
                    o = this.s,
                    l = new Uint8Array(r);
                  for (t = 0; t < r; ++t) {
                    n = o[(s = (s + (i = o[(a = (a + 1) & 255)])) & 255)];
                    o[a] = n;
                    o[s] = i;
                    l[t] = e[t] ^ o[(i + n) & 255];
                  }
                  this.a = a;
                  this.b = s;
                  return l;
                },
              };
              e.prototype.decryptBlock = e.prototype.encryptBlock;
              e.prototype.encrypt = e.prototype.encryptBlock;
              return e;
            })();
          t.ARCFourCipher = s;
          var o,
            l,
            c =
              ((o = new Uint8Array([
                7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 5,
                9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 4, 11, 16,
                23, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 6, 10, 15, 21,
                6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21,
              ])),
              (l = new Int32Array([
                -680876936, -389564586, 606105819, -1044525330, -176418897,
                1200080426, -1473231341, -45705983, 1770035416, -1958414417,
                -42063, -1990404162, 1804603682, -40341101, -1502002290,
                1236535329, -165796510, -1069501632, 643717713, -373897302,
                -701558691, 38016083, -660478335, -405537848, 568446438,
                -1019803690, -187363961, 1163531501, -1444681467, -51403784,
                1735328473, -1926607734, -378558, -2022574463, 1839030562,
                -35309556, -1530992060, 1272893353, -155497632, -1094730640,
                681279174, -358537222, -722521979, 76029189, -640364487,
                -421815835, 530742520, -995338651, -198630844, 1126891415,
                -1416354905, -57434055, 1700485571, -1894986606, -1051523,
                -2054922799, 1873313359, -30611744, -1560198380, 1309151649,
                -145523070, -1120210379, 718787259, -343485551,
              ])),
              function (e, t, i) {
                var n,
                  r,
                  a,
                  s = 1732584193,
                  c = -271733879,
                  h = -1732584194,
                  u = 271733878,
                  d = (i + 72) & -64,
                  f = new Uint8Array(d);
                for (n = 0; n < i; ++n) f[n] = e[t++];
                f[n++] = 128;
                a = d - 8;
                for (; n < a; ) f[n++] = 0;
                f[n++] = (i << 3) & 255;
                f[n++] = (i >> 5) & 255;
                f[n++] = (i >> 13) & 255;
                f[n++] = (i >> 21) & 255;
                f[n++] = (i >>> 29) & 255;
                f[n++] = 0;
                f[n++] = 0;
                f[n++] = 0;
                var p = new Int32Array(16);
                for (n = 0; n < d; ) {
                  for (r = 0; r < 16; ++r, n += 4)
                    p[r] =
                      f[n] |
                      (f[n + 1] << 8) |
                      (f[n + 2] << 16) |
                      (f[n + 3] << 24);
                  var g,
                    m,
                    v = s,
                    b = c,
                    y = h,
                    w = u;
                  for (r = 0; r < 64; ++r) {
                    if (r < 16) {
                      g = (b & y) | (~b & w);
                      m = r;
                    } else if (r < 32) {
                      g = (w & b) | (~w & y);
                      m = (5 * r + 1) & 15;
                    } else if (r < 48) {
                      g = b ^ y ^ w;
                      m = (3 * r + 5) & 15;
                    } else {
                      g = y ^ (b | ~w);
                      m = (7 * r) & 15;
                    }
                    var x = w,
                      k = (v + g + l[r] + p[m]) | 0,
                      C = o[r];
                    w = y;
                    y = b;
                    b = (b + ((k << C) | (k >>> (32 - C)))) | 0;
                    v = x;
                  }
                  s = (s + v) | 0;
                  c = (c + b) | 0;
                  h = (h + y) | 0;
                  u = (u + w) | 0;
                }
                return new Uint8Array([
                  255 & s,
                  (s >> 8) & 255,
                  (s >> 16) & 255,
                  (s >>> 24) & 255,
                  255 & c,
                  (c >> 8) & 255,
                  (c >> 16) & 255,
                  (c >>> 24) & 255,
                  255 & h,
                  (h >> 8) & 255,
                  (h >> 16) & 255,
                  (h >>> 24) & 255,
                  255 & u,
                  (u >> 8) & 255,
                  (u >> 16) & 255,
                  (u >>> 24) & 255,
                ]);
              });
          t.calculateMD5 = c;
          var h = (function () {
              function e(e, t) {
                this.high = 0 | e;
                this.low = 0 | t;
              }
              e.prototype = {
                and: function (e) {
                  this.high &= e.high;
                  this.low &= e.low;
                },
                xor: function (e) {
                  this.high ^= e.high;
                  this.low ^= e.low;
                },
                or: function (e) {
                  this.high |= e.high;
                  this.low |= e.low;
                },
                shiftRight: function (e) {
                  if (e >= 32) {
                    this.low = (this.high >>> (e - 32)) | 0;
                    this.high = 0;
                  } else {
                    this.low = (this.low >>> e) | (this.high << (32 - e));
                    this.high = (this.high >>> e) | 0;
                  }
                },
                shiftLeft: function (e) {
                  if (e >= 32) {
                    this.high = this.low << (e - 32);
                    this.low = 0;
                  } else {
                    this.high = (this.high << e) | (this.low >>> (32 - e));
                    this.low = this.low << e;
                  }
                },
                rotateRight: function (e) {
                  var t, i;
                  if (32 & e) {
                    i = this.low;
                    t = this.high;
                  } else {
                    t = this.low;
                    i = this.high;
                  }
                  e &= 31;
                  this.low = (t >>> e) | (i << (32 - e));
                  this.high = (i >>> e) | (t << (32 - e));
                },
                not: function () {
                  this.high = ~this.high;
                  this.low = ~this.low;
                },
                add: function (e) {
                  var t = (this.low >>> 0) + (e.low >>> 0),
                    i = (this.high >>> 0) + (e.high >>> 0);
                  if (t > 4294967295) i += 1;
                  this.low = 0 | t;
                  this.high = 0 | i;
                },
                copyTo: function (e, t) {
                  e[t] = (this.high >>> 24) & 255;
                  e[t + 1] = (this.high >> 16) & 255;
                  e[t + 2] = (this.high >> 8) & 255;
                  e[t + 3] = 255 & this.high;
                  e[t + 4] = (this.low >>> 24) & 255;
                  e[t + 5] = (this.low >> 16) & 255;
                  e[t + 6] = (this.low >> 8) & 255;
                  e[t + 7] = 255 & this.low;
                },
                assign: function (e) {
                  this.high = e.high;
                  this.low = e.low;
                },
              };
              return e;
            })(),
            u = (function () {
              function e(e, t) {
                return (e >>> t) | (e << (32 - t));
              }
              function t(e, t, i) {
                return (e & t) ^ (~e & i);
              }
              function i(e, t, i) {
                return (e & t) ^ (e & i) ^ (t & i);
              }
              function n(t) {
                return e(t, 2) ^ e(t, 13) ^ e(t, 22);
              }
              function r(t) {
                return e(t, 6) ^ e(t, 11) ^ e(t, 25);
              }
              function a(t) {
                return e(t, 7) ^ e(t, 18) ^ (t >>> 3);
              }
              var s = [
                1116352408, 1899447441, 3049323471, 3921009573, 961987163,
                1508970993, 2453635748, 2870763221, 3624381080, 310598401,
                607225278, 1426881987, 1925078388, 2162078206, 2614888103,
                3248222580, 3835390401, 4022224774, 264347078, 604807628,
                770255983, 1249150122, 1555081692, 1996064986, 2554220882,
                2821834349, 2952996808, 3210313671, 3336571891, 3584528711,
                113926993, 338241895, 666307205, 773529912, 1294757372,
                1396182291, 1695183700, 1986661051, 2177026350, 2456956037,
                2730485921, 2820302411, 3259730800, 3345764771, 3516065817,
                3600352804, 4094571909, 275423344, 430227734, 506948616,
                659060556, 883997877, 958139571, 1322822218, 1537002063,
                1747873779, 1955562222, 2024104815, 2227730452, 2361852424,
                2428436474, 2756734187, 3204031479, 3329325298,
              ];
              return function (o, l, c) {
                var h,
                  u,
                  d,
                  f = 1779033703,
                  p = 3144134277,
                  g = 1013904242,
                  m = 2773480762,
                  v = 1359893119,
                  b = 2600822924,
                  y = 528734635,
                  w = 1541459225,
                  x = 64 * Math.ceil((c + 9) / 64),
                  k = new Uint8Array(x);
                for (h = 0; h < c; ++h) k[h] = o[l++];
                k[h++] = 128;
                d = x - 8;
                for (; h < d; ) k[h++] = 0;
                k[h++] = 0;
                k[h++] = 0;
                k[h++] = 0;
                k[h++] = (c >>> 29) & 255;
                k[h++] = (c >> 21) & 255;
                k[h++] = (c >> 13) & 255;
                k[h++] = (c >> 5) & 255;
                k[h++] = (c << 3) & 255;
                var C,
                  S = new Uint32Array(64);
                for (h = 0; h < x; ) {
                  for (u = 0; u < 16; ++u) {
                    S[u] =
                      (k[h] << 24) |
                      (k[h + 1] << 16) |
                      (k[h + 2] << 8) |
                      k[h + 3];
                    h += 4;
                  }
                  for (u = 16; u < 64; ++u)
                    S[u] =
                      ((e((C = S[u - 2]), 17) ^ e(C, 19) ^ (C >>> 10)) +
                        S[u - 7] +
                        a(S[u - 15]) +
                        S[u - 16]) |
                      0;
                  var _,
                    A,
                    F = f,
                    T = p,
                    P = g,
                    E = m,
                    I = v,
                    D = b,
                    O = y,
                    R = w;
                  for (u = 0; u < 64; ++u) {
                    _ = R + r(I) + t(I, D, O) + s[u] + S[u];
                    A = n(F) + i(F, T, P);
                    R = O;
                    O = D;
                    D = I;
                    I = (E + _) | 0;
                    E = P;
                    P = T;
                    T = F;
                    F = (_ + A) | 0;
                  }
                  f = (f + F) | 0;
                  p = (p + T) | 0;
                  g = (g + P) | 0;
                  m = (m + E) | 0;
                  v = (v + I) | 0;
                  b = (b + D) | 0;
                  y = (y + O) | 0;
                  w = (w + R) | 0;
                }
                return new Uint8Array([
                  (f >> 24) & 255,
                  (f >> 16) & 255,
                  (f >> 8) & 255,
                  255 & f,
                  (p >> 24) & 255,
                  (p >> 16) & 255,
                  (p >> 8) & 255,
                  255 & p,
                  (g >> 24) & 255,
                  (g >> 16) & 255,
                  (g >> 8) & 255,
                  255 & g,
                  (m >> 24) & 255,
                  (m >> 16) & 255,
                  (m >> 8) & 255,
                  255 & m,
                  (v >> 24) & 255,
                  (v >> 16) & 255,
                  (v >> 8) & 255,
                  255 & v,
                  (b >> 24) & 255,
                  (b >> 16) & 255,
                  (b >> 8) & 255,
                  255 & b,
                  (y >> 24) & 255,
                  (y >> 16) & 255,
                  (y >> 8) & 255,
                  255 & y,
                  (w >> 24) & 255,
                  (w >> 16) & 255,
                  (w >> 8) & 255,
                  255 & w,
                ]);
              };
            })();
          t.calculateSHA256 = u;
          var d = (function () {
            function e(e, t, i, n, r) {
              e.assign(t);
              e.and(i);
              r.assign(t);
              r.not();
              r.and(n);
              e.xor(r);
            }
            function t(e, t, i, n, r) {
              e.assign(t);
              e.and(i);
              r.assign(t);
              r.and(n);
              e.xor(r);
              r.assign(i);
              r.and(n);
              e.xor(r);
            }
            function i(e, t, i) {
              e.assign(t);
              e.rotateRight(28);
              i.assign(t);
              i.rotateRight(34);
              e.xor(i);
              i.assign(t);
              i.rotateRight(39);
              e.xor(i);
            }
            function n(e, t, i) {
              e.assign(t);
              e.rotateRight(14);
              i.assign(t);
              i.rotateRight(18);
              e.xor(i);
              i.assign(t);
              i.rotateRight(41);
              e.xor(i);
            }
            function r(e, t, i) {
              e.assign(t);
              e.rotateRight(1);
              i.assign(t);
              i.rotateRight(8);
              e.xor(i);
              i.assign(t);
              i.shiftRight(7);
              e.xor(i);
            }
            function a(e, t, i) {
              e.assign(t);
              e.rotateRight(19);
              i.assign(t);
              i.rotateRight(61);
              e.xor(i);
              i.assign(t);
              i.shiftRight(6);
              e.xor(i);
            }
            var s = [
              new h(1116352408, 3609767458),
              new h(1899447441, 602891725),
              new h(3049323471, 3964484399),
              new h(3921009573, 2173295548),
              new h(961987163, 4081628472),
              new h(1508970993, 3053834265),
              new h(2453635748, 2937671579),
              new h(2870763221, 3664609560),
              new h(3624381080, 2734883394),
              new h(310598401, 1164996542),
              new h(607225278, 1323610764),
              new h(1426881987, 3590304994),
              new h(1925078388, 4068182383),
              new h(2162078206, 991336113),
              new h(2614888103, 633803317),
              new h(3248222580, 3479774868),
              new h(3835390401, 2666613458),
              new h(4022224774, 944711139),
              new h(264347078, 2341262773),
              new h(604807628, 2007800933),
              new h(770255983, 1495990901),
              new h(1249150122, 1856431235),
              new h(1555081692, 3175218132),
              new h(1996064986, 2198950837),
              new h(2554220882, 3999719339),
              new h(2821834349, 766784016),
              new h(2952996808, 2566594879),
              new h(3210313671, 3203337956),
              new h(3336571891, 1034457026),
              new h(3584528711, 2466948901),
              new h(113926993, 3758326383),
              new h(338241895, 168717936),
              new h(666307205, 1188179964),
              new h(773529912, 1546045734),
              new h(1294757372, 1522805485),
              new h(1396182291, 2643833823),
              new h(1695183700, 2343527390),
              new h(1986661051, 1014477480),
              new h(2177026350, 1206759142),
              new h(2456956037, 344077627),
              new h(2730485921, 1290863460),
              new h(2820302411, 3158454273),
              new h(3259730800, 3505952657),
              new h(3345764771, 106217008),
              new h(3516065817, 3606008344),
              new h(3600352804, 1432725776),
              new h(4094571909, 1467031594),
              new h(275423344, 851169720),
              new h(430227734, 3100823752),
              new h(506948616, 1363258195),
              new h(659060556, 3750685593),
              new h(883997877, 3785050280),
              new h(958139571, 3318307427),
              new h(1322822218, 3812723403),
              new h(1537002063, 2003034995),
              new h(1747873779, 3602036899),
              new h(1955562222, 1575990012),
              new h(2024104815, 1125592928),
              new h(2227730452, 2716904306),
              new h(2361852424, 442776044),
              new h(2428436474, 593698344),
              new h(2756734187, 3733110249),
              new h(3204031479, 2999351573),
              new h(3329325298, 3815920427),
              new h(3391569614, 3928383900),
              new h(3515267271, 566280711),
              new h(3940187606, 3454069534),
              new h(4118630271, 4000239992),
              new h(116418474, 1914138554),
              new h(174292421, 2731055270),
              new h(289380356, 3203993006),
              new h(460393269, 320620315),
              new h(685471733, 587496836),
              new h(852142971, 1086792851),
              new h(1017036298, 365543100),
              new h(1126000580, 2618297676),
              new h(1288033470, 3409855158),
              new h(1501505948, 4234509866),
              new h(1607167915, 987167468),
              new h(1816402316, 1246189591),
            ];
            return function (o, l, c, u) {
              var d, f, p, g, m, v, b, y;
              if (!(u = !!u)) {
                d = new h(1779033703, 4089235720);
                f = new h(3144134277, 2227873595);
                p = new h(1013904242, 4271175723);
                g = new h(2773480762, 1595750129);
                m = new h(1359893119, 2917565137);
                v = new h(2600822924, 725511199);
                b = new h(528734635, 4215389547);
                y = new h(1541459225, 327033209);
              } else {
                d = new h(3418070365, 3238371032);
                f = new h(1654270250, 914150663);
                p = new h(2438529370, 812702999);
                g = new h(355462360, 4144912697);
                m = new h(1731405415, 4290775857);
                v = new h(2394180231, 1750603025);
                b = new h(3675008525, 1694076839);
                y = new h(1203062813, 3204075428);
              }
              var w,
                x,
                k,
                C = 128 * Math.ceil((c + 17) / 128),
                S = new Uint8Array(C);
              for (w = 0; w < c; ++w) S[w] = o[l++];
              S[w++] = 128;
              k = C - 16;
              for (; w < k; ) S[w++] = 0;
              S[w++] = 0;
              S[w++] = 0;
              S[w++] = 0;
              S[w++] = 0;
              S[w++] = 0;
              S[w++] = 0;
              S[w++] = 0;
              S[w++] = 0;
              S[w++] = 0;
              S[w++] = 0;
              S[w++] = 0;
              S[w++] = (c >>> 29) & 255;
              S[w++] = (c >> 21) & 255;
              S[w++] = (c >> 13) & 255;
              S[w++] = (c >> 5) & 255;
              S[w++] = (c << 3) & 255;
              var _ = new Array(80);
              for (w = 0; w < 80; w++) _[w] = new h(0, 0);
              var A,
                F,
                T = new h(0, 0),
                P = new h(0, 0),
                E = new h(0, 0),
                I = new h(0, 0),
                D = new h(0, 0),
                O = new h(0, 0),
                R = new h(0, 0),
                N = new h(0, 0),
                M = new h(0, 0),
                B = new h(0, 0),
                L = new h(0, 0),
                U = new h(0, 0);
              for (w = 0; w < C; ) {
                for (x = 0; x < 16; ++x) {
                  _[x].high =
                    (S[w] << 24) |
                    (S[w + 1] << 16) |
                    (S[w + 2] << 8) |
                    S[w + 3];
                  _[x].low =
                    (S[w + 4] << 24) |
                    (S[w + 5] << 16) |
                    (S[w + 6] << 8) |
                    S[w + 7];
                  w += 8;
                }
                for (x = 16; x < 80; ++x) {
                  a((A = _[x]), _[x - 2], U);
                  A.add(_[x - 7]);
                  r(L, _[x - 15], U);
                  A.add(L);
                  A.add(_[x - 16]);
                }
                T.assign(d);
                P.assign(f);
                E.assign(p);
                I.assign(g);
                D.assign(m);
                O.assign(v);
                R.assign(b);
                N.assign(y);
                for (x = 0; x < 80; ++x) {
                  M.assign(N);
                  n(L, D, U);
                  M.add(L);
                  e(L, D, O, R, U);
                  M.add(L);
                  M.add(s[x]);
                  M.add(_[x]);
                  i(B, T, U);
                  t(L, T, P, E, U);
                  B.add(L);
                  A = N;
                  N = R;
                  R = O;
                  O = D;
                  I.add(M);
                  D = I;
                  I = E;
                  E = P;
                  P = T;
                  A.assign(M);
                  A.add(B);
                  T = A;
                }
                d.add(T);
                f.add(P);
                p.add(E);
                g.add(I);
                m.add(D);
                v.add(O);
                b.add(R);
                y.add(N);
              }
              if (!u) {
                F = new Uint8Array(64);
                d.copyTo(F, 0);
                f.copyTo(F, 8);
                p.copyTo(F, 16);
                g.copyTo(F, 24);
                m.copyTo(F, 32);
                v.copyTo(F, 40);
                b.copyTo(F, 48);
                y.copyTo(F, 56);
              } else {
                F = new Uint8Array(48);
                d.copyTo(F, 0);
                f.copyTo(F, 8);
                p.copyTo(F, 16);
                g.copyTo(F, 24);
                m.copyTo(F, 32);
                v.copyTo(F, 40);
              }
              return F;
            };
          })();
          t.calculateSHA512 = d;
          var f = function (e, t, i) {
            return d(e, t, i, !0);
          };
          t.calculateSHA384 = f;
          var p = (function () {
            function e() {}
            e.prototype = {
              decryptBlock: function (e) {
                return e;
              },
              encrypt: function (e) {
                return e;
              },
            };
            return e;
          })();
          class g {
            constructor() {
              if (this.constructor === g)
                (0, n.unreachable)("Cannot initialize AESBaseCipher.");
              this._s = new Uint8Array([
                99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215,
                171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162,
                175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204,
                52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150,
                5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27,
                110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0,
                237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208,
                239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159,
                168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16,
                255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126,
                61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70,
                238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92,
                194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141,
                213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37,
                46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138,
                112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193,
                29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135,
                233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65,
                153, 45, 15, 176, 84, 187, 22,
              ]);
              this._inv_s = new Uint8Array([
                82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243,
                215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68,
                196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76,
                149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178,
                118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134,
                104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112,
                72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132,
                144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179,
                69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1,
                19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207,
                206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133,
                226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41,
                197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75,
                198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31,
                221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236,
                95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147,
                201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235,
                187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38,
                225, 105, 20, 99, 85, 33, 12, 125,
              ]);
              this._mix = new Uint32Array([
                0, 235474187, 470948374, 303765277, 941896748, 908933415,
                607530554, 708780849, 1883793496, 2118214995, 1817866830,
                1649639237, 1215061108, 1181045119, 1417561698, 1517767529,
                3767586992, 4003061179, 4236429990, 4069246893, 3635733660,
                3602770327, 3299278474, 3400528769, 2430122216, 2664543715,
                2362090238, 2193862645, 2835123396, 2801107407, 3035535058,
                3135740889, 3678124923, 3576870512, 3341394285, 3374361702,
                3810496343, 3977675356, 4279080257, 4043610186, 2876494627,
                2776292904, 3076639029, 3110650942, 2472011535, 2640243204,
                2403728665, 2169303058, 1001089995, 899835584, 666464733,
                699432150, 59727847, 226906860, 530400753, 294930682,
                1273168787, 1172967064, 1475418501, 1509430414, 1942435775,
                2110667444, 1876241833, 1641816226, 2910219766, 2743034109,
                2976151520, 3211623147, 2505202138, 2606453969, 2302690252,
                2269728455, 3711829422, 3543599269, 3240894392, 3475313331,
                3843699074, 3943906441, 4178062228, 4144047775, 1306967366,
                1139781709, 1374988112, 1610459739, 1975683434, 2076935265,
                1775276924, 1742315127, 1034867998, 866637845, 566021896,
                800440835, 92987698, 193195065, 429456164, 395441711,
                1984812685, 2017778566, 1784663195, 1683407248, 1315562145,
                1080094634, 1383856311, 1551037884, 101039829, 135050206,
                437757123, 337553864, 1042385657, 807962610, 573804783,
                742039012, 2531067453, 2564033334, 2328828971, 2227573024,
                2935566865, 2700099354, 3001755655, 3168937228, 3868552805,
                3902563182, 4203181171, 4102977912, 3736164937, 3501741890,
                3265478751, 3433712980, 1106041591, 1340463100, 1576976609,
                1408749034, 2043211483, 2009195472, 1708848333, 1809054150,
                832877231, 1068351396, 766945465, 599762354, 159417987,
                126454664, 361929877, 463180190, 2709260871, 2943682380,
                3178106961, 3009879386, 2572697195, 2538681184, 2236228733,
                2336434550, 3509871135, 3745345300, 3441850377, 3274667266,
                3910161971, 3877198648, 4110568485, 4211818798, 2597806476,
                2497604743, 2261089178, 2295101073, 2733856160, 2902087851,
                3202437046, 2968011453, 3936291284, 3835036895, 4136440770,
                4169408201, 3535486456, 3702665459, 3467192302, 3231722213,
                2051518780, 1951317047, 1716890410, 1750902305, 1113818384,
                1282050075, 1584504582, 1350078989, 168810852, 67556463,
                371049330, 404016761, 841739592, 1008918595, 775550814,
                540080725, 3969562369, 3801332234, 4035489047, 4269907996,
                3569255213, 3669462566, 3366754619, 3332740144, 2631065433,
                2463879762, 2160117071, 2395588676, 2767645557, 2868897406,
                3102011747, 3069049960, 202008497, 33778362, 270040487,
                504459436, 875451293, 975658646, 675039627, 641025152,
                2084704233, 1917518562, 1615861247, 1851332852, 1147550661,
                1248802510, 1484005843, 1451044056, 933301370, 967311729,
                733156972, 632953703, 260388950, 25965917, 328671808, 496906059,
                1206477858, 1239443753, 1543208500, 1441952575, 2144161806,
                1908694277, 1675577880, 1842759443, 3610369226, 3644379585,
                3408119516, 3307916247, 4011190502, 3776767469, 4077384432,
                4245618683, 2809771154, 2842737049, 3144396420, 3043140495,
                2673705150, 2438237621, 2203032232, 2370213795,
              ]);
              this._mixCol = new Uint8Array(256);
              for (let e = 0; e < 256; e++)
                if (e < 128) this._mixCol[e] = e << 1;
                else this._mixCol[e] = (e << 1) ^ 27;
              this.buffer = new Uint8Array(16);
              this.bufferPosition = 0;
            }
            _expandKey(e) {
              (0, n.unreachable)("Cannot call `_expandKey` on the base class");
            }
            _decrypt(e, t) {
              let i, n, r;
              const a = new Uint8Array(16);
              a.set(e);
              for (let e = 0, i = this._keySize; e < 16; ++e, ++i) a[e] ^= t[i];
              for (let e = this._cyclesOfRepetition - 1; e >= 1; --e) {
                i = a[13];
                a[13] = a[9];
                a[9] = a[5];
                a[5] = a[1];
                a[1] = i;
                i = a[14];
                n = a[10];
                a[14] = a[6];
                a[10] = a[2];
                a[6] = i;
                a[2] = n;
                i = a[15];
                n = a[11];
                r = a[7];
                a[15] = a[3];
                a[11] = i;
                a[7] = n;
                a[3] = r;
                for (let e = 0; e < 16; ++e) a[e] = this._inv_s[a[e]];
                for (let i = 0, n = 16 * e; i < 16; ++i, ++n) a[i] ^= t[n];
                for (let e = 0; e < 16; e += 4) {
                  const t = this._mix[a[e]],
                    n = this._mix[a[e + 1]],
                    r = this._mix[a[e + 2]],
                    s = this._mix[a[e + 3]];
                  i =
                    t ^
                    (n >>> 8) ^
                    (n << 24) ^
                    (r >>> 16) ^
                    (r << 16) ^
                    (s >>> 24) ^
                    (s << 8);
                  a[e] = (i >>> 24) & 255;
                  a[e + 1] = (i >> 16) & 255;
                  a[e + 2] = (i >> 8) & 255;
                  a[e + 3] = 255 & i;
                }
              }
              i = a[13];
              a[13] = a[9];
              a[9] = a[5];
              a[5] = a[1];
              a[1] = i;
              i = a[14];
              n = a[10];
              a[14] = a[6];
              a[10] = a[2];
              a[6] = i;
              a[2] = n;
              i = a[15];
              n = a[11];
              r = a[7];
              a[15] = a[3];
              a[11] = i;
              a[7] = n;
              a[3] = r;
              for (let e = 0; e < 16; ++e) {
                a[e] = this._inv_s[a[e]];
                a[e] ^= t[e];
              }
              return a;
            }
            _encrypt(e, t) {
              const i = this._s;
              let n, r, a;
              const s = new Uint8Array(16);
              s.set(e);
              for (let e = 0; e < 16; ++e) s[e] ^= t[e];
              for (let e = 1; e < this._cyclesOfRepetition; e++) {
                for (let e = 0; e < 16; ++e) s[e] = i[s[e]];
                a = s[1];
                s[1] = s[5];
                s[5] = s[9];
                s[9] = s[13];
                s[13] = a;
                a = s[2];
                r = s[6];
                s[2] = s[10];
                s[6] = s[14];
                s[10] = a;
                s[14] = r;
                a = s[3];
                r = s[7];
                n = s[11];
                s[3] = s[15];
                s[7] = a;
                s[11] = r;
                s[15] = n;
                for (let e = 0; e < 16; e += 4) {
                  const t = s[e + 0],
                    i = s[e + 1],
                    r = s[e + 2],
                    a = s[e + 3];
                  n = t ^ i ^ r ^ a;
                  s[e + 0] ^= n ^ this._mixCol[t ^ i];
                  s[e + 1] ^= n ^ this._mixCol[i ^ r];
                  s[e + 2] ^= n ^ this._mixCol[r ^ a];
                  s[e + 3] ^= n ^ this._mixCol[a ^ t];
                }
                for (let i = 0, n = 16 * e; i < 16; ++i, ++n) s[i] ^= t[n];
              }
              for (let e = 0; e < 16; ++e) s[e] = i[s[e]];
              a = s[1];
              s[1] = s[5];
              s[5] = s[9];
              s[9] = s[13];
              s[13] = a;
              a = s[2];
              r = s[6];
              s[2] = s[10];
              s[6] = s[14];
              s[10] = a;
              s[14] = r;
              a = s[3];
              r = s[7];
              n = s[11];
              s[3] = s[15];
              s[7] = a;
              s[11] = r;
              s[15] = n;
              for (let e = 0, i = this._keySize; e < 16; ++e, ++i) s[e] ^= t[i];
              return s;
            }
            _decryptBlock2(e, t) {
              const i = e.length;
              let n = this.buffer,
                r = this.bufferPosition;
              const a = [];
              let s = this.iv;
              for (let t = 0; t < i; ++t) {
                n[r] = e[t];
                ++r;
                if (r < 16) continue;
                const i = this._decrypt(n, this._key);
                for (let e = 0; e < 16; ++e) i[e] ^= s[e];
                s = n;
                a.push(i);
                n = new Uint8Array(16);
                r = 0;
              }
              this.buffer = n;
              this.bufferLength = r;
              this.iv = s;
              if (0 === a.length) return new Uint8Array(0);
              let o = 16 * a.length;
              if (t) {
                const e = a[a.length - 1];
                let t = e[15];
                if (t <= 16) {
                  for (let i = 15, n = 16 - t; i >= n; --i)
                    if (e[i] !== t) {
                      t = 0;
                      break;
                    }
                  o -= t;
                  a[a.length - 1] = e.subarray(0, 16 - t);
                }
              }
              const l = new Uint8Array(o);
              for (let e = 0, t = 0, i = a.length; e < i; ++e, t += 16)
                l.set(a[e], t);
              return l;
            }
            decryptBlock(e, t, i = null) {
              const n = e.length,
                r = this.buffer;
              let a = this.bufferPosition;
              if (i) this.iv = i;
              else {
                for (let t = 0; a < 16 && t < n; ++t, ++a) r[a] = e[t];
                if (a < 16) {
                  this.bufferLength = a;
                  return new Uint8Array(0);
                }
                this.iv = r;
                e = e.subarray(16);
              }
              this.buffer = new Uint8Array(16);
              this.bufferLength = 0;
              this.decryptBlock = this._decryptBlock2;
              return this.decryptBlock(e, t);
            }
            encrypt(e, t) {
              const i = e.length;
              let n = this.buffer,
                r = this.bufferPosition;
              const a = [];
              if (!t) t = new Uint8Array(16);
              for (let s = 0; s < i; ++s) {
                n[r] = e[s];
                ++r;
                if (r < 16) continue;
                for (let e = 0; e < 16; ++e) n[e] ^= t[e];
                const i = this._encrypt(n, this._key);
                t = i;
                a.push(i);
                n = new Uint8Array(16);
                r = 0;
              }
              this.buffer = n;
              this.bufferLength = r;
              this.iv = t;
              if (0 === a.length) return new Uint8Array(0);
              const s = 16 * a.length,
                o = new Uint8Array(s);
              for (let e = 0, t = 0, i = a.length; e < i; ++e, t += 16)
                o.set(a[e], t);
              return o;
            }
          }
          class m extends g {
            constructor(e) {
              super();
              this._cyclesOfRepetition = 10;
              this._keySize = 160;
              this._rcon = new Uint8Array([
                141, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54, 108, 216, 171, 77,
                154, 47, 94, 188, 99, 198, 151, 53, 106, 212, 179, 125, 250,
                239, 197, 145, 57, 114, 228, 211, 189, 97, 194, 159, 37, 74,
                148, 51, 102, 204, 131, 29, 58, 116, 232, 203, 141, 1, 2, 4, 8,
                16, 32, 64, 128, 27, 54, 108, 216, 171, 77, 154, 47, 94, 188,
                99, 198, 151, 53, 106, 212, 179, 125, 250, 239, 197, 145, 57,
                114, 228, 211, 189, 97, 194, 159, 37, 74, 148, 51, 102, 204,
                131, 29, 58, 116, 232, 203, 141, 1, 2, 4, 8, 16, 32, 64, 128,
                27, 54, 108, 216, 171, 77, 154, 47, 94, 188, 99, 198, 151, 53,
                106, 212, 179, 125, 250, 239, 197, 145, 57, 114, 228, 211, 189,
                97, 194, 159, 37, 74, 148, 51, 102, 204, 131, 29, 58, 116, 232,
                203, 141, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54, 108, 216, 171,
                77, 154, 47, 94, 188, 99, 198, 151, 53, 106, 212, 179, 125, 250,
                239, 197, 145, 57, 114, 228, 211, 189, 97, 194, 159, 37, 74,
                148, 51, 102, 204, 131, 29, 58, 116, 232, 203, 141, 1, 2, 4, 8,
                16, 32, 64, 128, 27, 54, 108, 216, 171, 77, 154, 47, 94, 188,
                99, 198, 151, 53, 106, 212, 179, 125, 250, 239, 197, 145, 57,
                114, 228, 211, 189, 97, 194, 159, 37, 74, 148, 51, 102, 204,
                131, 29, 58, 116, 232, 203, 141,
              ]);
              this._key = this._expandKey(e);
            }
            _expandKey(e) {
              const t = this._s,
                i = this._rcon,
                n = new Uint8Array(176);
              n.set(e);
              for (let e = 16, r = 1; e < 176; ++r) {
                let a = n[e - 3],
                  s = n[e - 2],
                  o = n[e - 1],
                  l = n[e - 4];
                a = t[a];
                s = t[s];
                o = t[o];
                l = t[l];
                a ^= i[r];
                for (let t = 0; t < 4; ++t) {
                  n[e] = a ^= n[e - 16];
                  e++;
                  n[e] = s ^= n[e - 16];
                  e++;
                  n[e] = o ^= n[e - 16];
                  e++;
                  n[e] = l ^= n[e - 16];
                  e++;
                }
              }
              return n;
            }
          }
          t.AES128Cipher = m;
          class v extends g {
            constructor(e) {
              super();
              this._cyclesOfRepetition = 14;
              this._keySize = 224;
              this._key = this._expandKey(e);
            }
            _expandKey(e) {
              const t = this._s,
                i = new Uint8Array(240);
              i.set(e);
              let n,
                r,
                a,
                s,
                o = 1;
              for (let e = 32, l = 1; e < 240; ++l) {
                if (e % 32 == 16) {
                  n = t[n];
                  r = t[r];
                  a = t[a];
                  s = t[s];
                } else if (e % 32 == 0) {
                  n = i[e - 3];
                  r = i[e - 2];
                  a = i[e - 1];
                  s = i[e - 4];
                  n = t[n];
                  r = t[r];
                  a = t[a];
                  s = t[s];
                  n ^= o;
                  if ((o <<= 1) >= 256) o = 255 & (27 ^ o);
                }
                for (let t = 0; t < 4; ++t) {
                  i[e] = n ^= i[e - 32];
                  e++;
                  i[e] = r ^= i[e - 32];
                  e++;
                  i[e] = a ^= i[e - 32];
                  e++;
                  i[e] = s ^= i[e - 32];
                  e++;
                }
              }
              return i;
            }
          }
          t.AES256Cipher = v;
          var b = (function () {
            function e(e, t) {
              if (e.length !== t.length) return !1;
              for (var i = 0; i < e.length; i++) if (e[i] !== t[i]) return !1;
              return !0;
            }
            function t() {}
            t.prototype = {
              checkOwnerPassword: function (t, i, n, r) {
                var a = new Uint8Array(t.length + 56);
                a.set(t, 0);
                a.set(i, t.length);
                a.set(n, t.length + i.length);
                return e(u(a, 0, a.length), r);
              },
              checkUserPassword: function (t, i, n) {
                var r = new Uint8Array(t.length + 8);
                r.set(t, 0);
                r.set(i, t.length);
                return e(u(r, 0, r.length), n);
              },
              getOwnerKey: function (e, t, i, n) {
                var r = new Uint8Array(e.length + 56);
                r.set(e, 0);
                r.set(t, e.length);
                r.set(i, e.length + t.length);
                var a = u(r, 0, r.length);
                return new v(a).decryptBlock(n, !1, new Uint8Array(16));
              },
              getUserKey: function (e, t, i) {
                var n = new Uint8Array(e.length + 8);
                n.set(e, 0);
                n.set(t, e.length);
                var r = u(n, 0, n.length);
                return new v(r).decryptBlock(i, !1, new Uint8Array(16));
              },
            };
            return t;
          })();
          t.PDF17 = b;
          var y = (function () {
            function e(e, t) {
              var i = new Uint8Array(e.length + t.length);
              i.set(e, 0);
              i.set(t, e.length);
              return i;
            }
            function t(t, i, n) {
              for (
                var r = u(i, 0, i.length).subarray(0, 32), a = [0], s = 0;
                s < 64 || a[a.length - 1] > s - 32;

              ) {
                var o = t.length + r.length + n.length,
                  l = new Uint8Array(64 * o),
                  c = e(t, r);
                c = e(c, n);
                for (var h = 0, p = 0; h < 64; h++, p += o) l.set(c, p);
                a = new m(r.subarray(0, 16)).encrypt(l, r.subarray(16, 32));
                for (var g = 0, v = 0; v < 16; v++) {
                  g *= 1;
                  g %= 3;
                  g += (a[v] >>> 0) % 3;
                  g %= 3;
                }
                if (0 === g) r = u(a, 0, a.length);
                else if (1 === g) r = f(a, 0, a.length);
                else if (2 === g) r = d(a, 0, a.length);
                s++;
              }
              return r.subarray(0, 32);
            }
            function i() {}
            function n(e, t) {
              if (e.length !== t.length) return !1;
              for (var i = 0; i < e.length; i++) if (e[i] !== t[i]) return !1;
              return !0;
            }
            i.prototype = {
              hash: function (e, i, n) {
                return t(e, i, n);
              },
              checkOwnerPassword: function (e, i, r, a) {
                var s = new Uint8Array(e.length + 56);
                s.set(e, 0);
                s.set(i, e.length);
                s.set(r, e.length + i.length);
                return n(t(e, s, r), a);
              },
              checkUserPassword: function (e, i, r) {
                var a = new Uint8Array(e.length + 8);
                a.set(e, 0);
                a.set(i, e.length);
                return n(t(e, a, []), r);
              },
              getOwnerKey: function (e, i, n, r) {
                var a = new Uint8Array(e.length + 56);
                a.set(e, 0);
                a.set(i, e.length);
                a.set(n, e.length + i.length);
                var s = t(e, a, n);
                return new v(s).decryptBlock(r, !1, new Uint8Array(16));
              },
              getUserKey: function (e, i, n) {
                var r = new Uint8Array(e.length + 8);
                r.set(e, 0);
                r.set(i, e.length);
                var a = t(e, r, []);
                return new v(a).decryptBlock(n, !1, new Uint8Array(16));
              },
            };
            return i;
          })();
          t.PDF20 = y;
          var w = (function () {
              function e(e, t) {
                this.StringCipherConstructor = e;
                this.StreamCipherConstructor = t;
              }
              e.prototype = {
                createStream: function (e, t) {
                  var i = new this.StreamCipherConstructor();
                  return new a.DecryptStream(e, t, function (e, t) {
                    return i.decryptBlock(e, t);
                  });
                },
                decryptString: function (e) {
                  var t = new this.StringCipherConstructor(),
                    i = (0, n.stringToBytes)(e);
                  i = t.decryptBlock(i, !0);
                  return (0, n.bytesToString)(i);
                },
                encryptString: function (e) {
                  const t = new this.StringCipherConstructor();
                  if (t instanceof g) {
                    const i = e.length,
                      r = 16 - (i % 16);
                    if (16 !== r)
                      e = e.padEnd(
                        16 * Math.ceil(i / 16),
                        String.fromCharCode(r)
                      );
                    const a = new Uint8Array(16);
                    if ("undefined" != typeof crypto) crypto.getRandomValues(a);
                    else
                      for (let e = 0; e < 16; e++)
                        a[e] = Math.floor(256 * Math.random());
                    let s = (0, n.stringToBytes)(e);
                    s = t.encrypt(s, a);
                    const o = new Uint8Array(16 + s.length);
                    o.set(a);
                    o.set(s, 16);
                    return (0, n.bytesToString)(o);
                  }
                  let i = (0, n.stringToBytes)(e);
                  i = t.encrypt(i);
                  return (0, n.bytesToString)(i);
                },
              };
              return e;
            })(),
            x = (function () {
              var e = new Uint8Array([
                40, 191, 78, 94, 78, 117, 138, 65, 100, 0, 78, 86, 255, 250, 1,
                8, 46, 46, 0, 182, 208, 104, 62, 128, 47, 12, 169, 254, 100, 83,
                105, 122,
              ]);
              function t(t, i, n, r, a, o, l, h) {
                var u,
                  d,
                  f = 40 + n.length + t.length,
                  p = new Uint8Array(f),
                  g = 0;
                if (i) {
                  d = Math.min(32, i.length);
                  for (; g < d; ++g) p[g] = i[g];
                }
                u = 0;
                for (; g < 32; ) p[g++] = e[u++];
                for (u = 0, d = n.length; u < d; ++u) p[g++] = n[u];
                p[g++] = 255 & a;
                p[g++] = (a >> 8) & 255;
                p[g++] = (a >> 16) & 255;
                p[g++] = (a >>> 24) & 255;
                for (u = 0, d = t.length; u < d; ++u) p[g++] = t[u];
                if (o >= 4 && !h) {
                  p[g++] = 255;
                  p[g++] = 255;
                  p[g++] = 255;
                  p[g++] = 255;
                }
                var m = c(p, 0, g),
                  v = l >> 3;
                if (o >= 3) for (u = 0; u < 50; ++u) m = c(m, 0, v);
                var b,
                  y = m.subarray(0, v);
                if (o >= 3) {
                  for (g = 0; g < 32; ++g) p[g] = e[g];
                  for (u = 0, d = t.length; u < d; ++u) p[g++] = t[u];
                  b = new s(y).encryptBlock(c(p, 0, g));
                  d = y.length;
                  var w,
                    x = new Uint8Array(d);
                  for (u = 1; u <= 19; ++u) {
                    for (w = 0; w < d; ++w) x[w] = y[w] ^ u;
                    b = new s(x).encryptBlock(b);
                  }
                  for (u = 0, d = b.length; u < d; ++u)
                    if (r[u] !== b[u]) return null;
                } else
                  for (
                    u = 0, d = (b = new s(y).encryptBlock(e)).length;
                    u < d;
                    ++u
                  )
                    if (r[u] !== b[u]) return null;
                return y;
              }
              var i = r.Name.get("Identity");
              function a(a, o, l) {
                var h = a.get("Filter");
                if (!(0, r.isName)(h, "Standard"))
                  throw new n.FormatError("unknown encryption method");
                this.dict = a;
                var u = a.get("V");
                if (
                  !Number.isInteger(u) ||
                  (1 !== u && 2 !== u && 4 !== u && 5 !== u)
                )
                  throw new n.FormatError("unsupported encryption algorithm");
                this.algorithm = u;
                var d = a.get("Length");
                if (!d)
                  if (u <= 3) d = 40;
                  else {
                    var f = a.get("CF"),
                      p = a.get("StmF");
                    if ((0, r.isDict)(f) && (0, r.isName)(p)) {
                      f.suppressEncryption = !0;
                      var g = f.get(p.name);
                      if ((d = (g && g.get("Length")) || 128) < 40) d <<= 3;
                    }
                  }
                if (!Number.isInteger(d) || d < 40 || d % 8 != 0)
                  throw new n.FormatError("invalid key length");
                var m = (0, n.stringToBytes)(a.get("O")).subarray(0, 32),
                  v = (0, n.stringToBytes)(a.get("U")).subarray(0, 32),
                  w = a.get("P"),
                  x = a.get("R"),
                  k = (4 === u || 5 === u) && !1 !== a.get("EncryptMetadata");
                this.encryptMetadata = k;
                var C,
                  S,
                  _ = (0, n.stringToBytes)(o);
                if (l) {
                  if (6 === x)
                    try {
                      l = (0, n.utf8StringToString)(l);
                    } catch (e) {
                      (0, n.warn)(
                        "CipherTransformFactory: Unable to convert UTF8 encoded password."
                      );
                    }
                  C = (0, n.stringToBytes)(l);
                }
                if (5 !== u) S = t(_, C, m, v, w, x, d, k);
                else {
                  var A = (0, n.stringToBytes)(a.get("O")).subarray(32, 40),
                    F = (0, n.stringToBytes)(a.get("O")).subarray(40, 48),
                    T = (0, n.stringToBytes)(a.get("U")).subarray(0, 48),
                    P = (0, n.stringToBytes)(a.get("U")).subarray(32, 40),
                    E = (0, n.stringToBytes)(a.get("U")).subarray(40, 48),
                    I = (0, n.stringToBytes)(a.get("OE")),
                    D = (0, n.stringToBytes)(a.get("UE"));
                  (0, n.stringToBytes)(a.get("Perms"));
                  S = (function (e, t, i, n, r, a, s, o, l, c, h, u) {
                    if (t) {
                      var d = Math.min(127, t.length);
                      t = t.subarray(0, d);
                    } else t = [];
                    var f;
                    if (6 === e) f = new y();
                    else f = new b();
                    if (f.checkUserPassword(t, o, s))
                      return f.getUserKey(t, l, h);
                    else if (t.length && f.checkOwnerPassword(t, n, a, i))
                      return f.getOwnerKey(t, r, a, c);
                    return null;
                  })(x, C, m, A, F, T, v, P, E, I, D);
                }
                if (!S && !l)
                  throw new n.PasswordException(
                    "No password given",
                    n.PasswordResponses.NEED_PASSWORD
                  );
                else if (!S && l)
                  S = t(
                    _,
                    (function (t, i, n, r) {
                      var a,
                        o,
                        l = new Uint8Array(32),
                        h = 0;
                      o = Math.min(32, t.length);
                      for (; h < o; ++h) l[h] = t[h];
                      a = 0;
                      for (; h < 32; ) l[h++] = e[a++];
                      var u,
                        d = c(l, 0, h),
                        f = r >> 3;
                      if (n >= 3)
                        for (a = 0; a < 50; ++a) d = c(d, 0, d.length);
                      if (n >= 3) {
                        u = i;
                        var p,
                          g = new Uint8Array(f);
                        for (a = 19; a >= 0; a--) {
                          for (p = 0; p < f; ++p) g[p] = d[p] ^ a;
                          u = new s(g).encryptBlock(u);
                        }
                      } else u = new s(d.subarray(0, f)).encryptBlock(i);
                      return u;
                    })(C, m, x, d),
                    m,
                    v,
                    w,
                    x,
                    d,
                    k
                  );
                if (!S)
                  throw new n.PasswordException(
                    "Incorrect Password",
                    n.PasswordResponses.INCORRECT_PASSWORD
                  );
                this.encryptionKey = S;
                if (u >= 4) {
                  var O = a.get("CF");
                  if ((0, r.isDict)(O)) O.suppressEncryption = !0;
                  this.cf = O;
                  this.stmf = a.get("StmF") || i;
                  this.strf = a.get("StrF") || i;
                  this.eff = a.get("EFF") || this.stmf;
                }
              }
              function o(e, t, i, n) {
                var r,
                  a,
                  s = new Uint8Array(i.length + 9);
                for (r = 0, a = i.length; r < a; ++r) s[r] = i[r];
                s[r++] = 255 & e;
                s[r++] = (e >> 8) & 255;
                s[r++] = (e >> 16) & 255;
                s[r++] = 255 & t;
                s[r++] = (t >> 8) & 255;
                if (n) {
                  s[r++] = 115;
                  s[r++] = 65;
                  s[r++] = 108;
                  s[r++] = 84;
                }
                return c(s, 0, r).subarray(0, Math.min(i.length + 5, 16));
              }
              function l(e, t, i, a, l) {
                if (!(0, r.isName)(t))
                  throw new n.FormatError("Invalid crypt filter name.");
                var c,
                  h = e.get(t.name);
                if (null != h) c = h.get("CFM");
                if (!c || "None" === c.name)
                  return function () {
                    return new p();
                  };
                if ("V2" === c.name)
                  return function () {
                    return new s(o(i, a, l, !1));
                  };
                if ("AESV2" === c.name)
                  return function () {
                    return new m(o(i, a, l, !0));
                  };
                if ("AESV3" === c.name)
                  return function () {
                    return new v(l);
                  };
                throw new n.FormatError("Unknown crypto method");
              }
              a.prototype = {
                createCipherTransform: function (e, t) {
                  if (4 === this.algorithm || 5 === this.algorithm)
                    return new w(
                      l(this.cf, this.stmf, e, t, this.encryptionKey),
                      l(this.cf, this.strf, e, t, this.encryptionKey)
                    );
                  var i = o(e, t, this.encryptionKey, !1),
                    n = function () {
                      return new s(i);
                    };
                  return new w(n, n);
                },
              };
              return a;
            })();
          t.CipherTransformFactory = x;
        },
        (e, t, i) => {
          Object.defineProperty(t, "__esModule", { value: !0 });
          t.ColorSpace = void 0;
          var n = i(2),
            r = i(5),
            a = i(8);
          class s {
            constructor(e, t) {
              if (this.constructor === s)
                (0, n.unreachable)("Cannot initialize ColorSpace.");
              this.name = e;
              this.numComps = t;
            }
            getRgb(e, t) {
              const i = new Uint8ClampedArray(3);
              this.getRgbItem(e, t, i, 0);
              return i;
            }
            getRgbItem(e, t, i, r) {
              (0, n.unreachable)("Should not call ColorSpace.getRgbItem");
            }
            getRgbBuffer(e, t, i, r, a, s, o) {
              (0, n.unreachable)("Should not call ColorSpace.getRgbBuffer");
            }
            getOutputLength(e, t) {
              (0, n.unreachable)("Should not call ColorSpace.getOutputLength");
            }
            isPassthrough(e) {
              return !1;
            }
            isDefaultDecode(e, t) {
              return s.isDefaultDecode(e, this.numComps);
            }
            fillRgb(e, t, i, n, r, a, s, o, l) {
              const c = t * i;
              let h = null;
              const u = 1 << s,
                d = i !== r || t !== n;
              if (this.isPassthrough(s)) h = o;
              else if (
                1 === this.numComps &&
                c > u &&
                "DeviceGray" !== this.name &&
                "DeviceRGB" !== this.name
              ) {
                const t = s <= 8 ? new Uint8Array(u) : new Uint16Array(u);
                for (let e = 0; e < u; e++) t[e] = e;
                const i = new Uint8ClampedArray(3 * u);
                this.getRgbBuffer(t, 0, u, i, 0, s, 0);
                if (!d) {
                  let t = 0;
                  for (let n = 0; n < c; ++n) {
                    const r = 3 * o[n];
                    e[t++] = i[r];
                    e[t++] = i[r + 1];
                    e[t++] = i[r + 2];
                    t += l;
                  }
                } else {
                  h = new Uint8Array(3 * c);
                  let e = 0;
                  for (let t = 0; t < c; ++t) {
                    const n = 3 * o[t];
                    h[e++] = i[n];
                    h[e++] = i[n + 1];
                    h[e++] = i[n + 2];
                  }
                }
              } else if (!d) this.getRgbBuffer(o, 0, n * a, e, 0, s, l);
              else {
                h = new Uint8ClampedArray(3 * c);
                this.getRgbBuffer(o, 0, c, h, 0, s, 0);
              }
              if (h)
                if (d)
                  !(function (e, t, i, n, r, a, s) {
                    s = 1 !== s ? 0 : s;
                    const o = i / r,
                      l = n / a;
                    let c,
                      h = 0;
                    const u = new Uint16Array(r),
                      d = 3 * i;
                    for (let e = 0; e < r; e++) u[e] = 3 * Math.floor(e * o);
                    for (let i = 0; i < a; i++) {
                      const n = Math.floor(i * l) * d;
                      for (let i = 0; i < r; i++) {
                        c = n + u[i];
                        t[h++] = e[c++];
                        t[h++] = e[c++];
                        t[h++] = e[c++];
                        h += s;
                      }
                    }
                  })(h, e, t, i, n, r, l);
                else {
                  let t = 0,
                    i = 0;
                  for (let r = 0, s = n * a; r < s; r++) {
                    e[t++] = h[i++];
                    e[t++] = h[i++];
                    e[t++] = h[i++];
                    t += l;
                  }
                }
            }
            get usesZeroToOneRange() {
              return (0, n.shadow)(this, "usesZeroToOneRange", !0);
            }
            static _cache(e, t, i, n) {
              if (!i)
                throw new Error(
                  'ColorSpace._cache - expected "localColorSpaceCache" argument.'
                );
              if (!n)
                throw new Error(
                  'ColorSpace._cache - expected "parsedColorSpace" argument.'
                );
              let a, s;
              if (e instanceof r.Ref) {
                s = e;
                e = t.fetch(e);
              }
              if (e instanceof r.Name) a = e.name;
              if (a || s) i.set(a, s, n);
            }
            static getCached(e, t, i) {
              if (!i)
                throw new Error(
                  'ColorSpace.getCached - expected "localColorSpaceCache" argument.'
                );
              if (e instanceof r.Ref) {
                const n = i.getByRef(e);
                if (n) return n;
                try {
                  e = t.fetch(e);
                } catch (e) {
                  if (e instanceof a.MissingDataException) throw e;
                }
              }
              if (e instanceof r.Name) {
                const t = i.getByName(e.name);
                if (t) return t;
              }
              return null;
            }
            static async parseAsync({
              cs: e,
              xref: t,
              resources: i = null,
              pdfFunctionFactory: n,
              localColorSpaceCache: r,
            }) {
              const a = this._parse(e, t, i, n);
              this._cache(e, t, r, a);
              return a;
            }
            static parse({
              cs: e,
              xref: t,
              resources: i = null,
              pdfFunctionFactory: n,
              localColorSpaceCache: r,
            }) {
              const a = this.getCached(e, t, r);
              if (a) return a;
              const s = this._parse(e, t, i, n);
              this._cache(e, t, r, s);
              return s;
            }
            static _parse(e, t, i = null, a) {
              e = t.fetchIfRef(e);
              if ((0, r.isName)(e))
                switch (e.name) {
                  case "DeviceGray":
                  case "G":
                    return this.singletons.gray;
                  case "DeviceRGB":
                  case "RGB":
                    return this.singletons.rgb;
                  case "DeviceCMYK":
                  case "CMYK":
                    return this.singletons.cmyk;
                  case "Pattern":
                    return new l(null);
                  default:
                    if ((0, r.isDict)(i)) {
                      const n = i.get("ColorSpace");
                      if ((0, r.isDict)(n)) {
                        const s = n.get(e.name);
                        if (s) {
                          if ((0, r.isName)(s)) return this._parse(s, t, i, a);
                          e = s;
                          break;
                        }
                      }
                    }
                    throw new n.FormatError(
                      `Unrecognized ColorSpace: ${e.name}`
                    );
                }
              if (Array.isArray(e)) {
                const r = t.fetchIfRef(e[0]).name;
                let s, h, u, d, m, v;
                switch (r) {
                  case "DeviceGray":
                  case "G":
                    return this.singletons.gray;
                  case "DeviceRGB":
                  case "RGB":
                    return this.singletons.rgb;
                  case "DeviceCMYK":
                  case "CMYK":
                    return this.singletons.cmyk;
                  case "CalGray":
                    s = t.fetchIfRef(e[1]);
                    d = s.getArray("WhitePoint");
                    m = s.getArray("BlackPoint");
                    v = s.get("Gamma");
                    return new f(d, m, v);
                  case "CalRGB":
                    s = t.fetchIfRef(e[1]);
                    d = s.getArray("WhitePoint");
                    m = s.getArray("BlackPoint");
                    v = s.getArray("Gamma");
                    const b = s.getArray("Matrix");
                    return new p(d, m, v, b);
                  case "ICCBased":
                    const y = t.fetchIfRef(e[1]).dict;
                    h = y.get("N");
                    const w = y.get("Alternate");
                    if (w) {
                      const e = this._parse(w, t, i, a);
                      if (e.numComps === h) return e;
                      (0, n.warn)(
                        "ICCBased color space: Ignoring incorrect /Alternate entry."
                      );
                    }
                    if (1 === h) return this.singletons.gray;
                    else if (3 === h) return this.singletons.rgb;
                    else if (4 === h) return this.singletons.cmyk;
                    break;
                  case "Pattern":
                    u = e[1] || null;
                    if (u) u = this._parse(u, t, i, a);
                    return new l(u);
                  case "Indexed":
                  case "I":
                    u = this._parse(e[1], t, i, a);
                    const x = t.fetchIfRef(e[2]) + 1,
                      k = t.fetchIfRef(e[3]);
                    return new c(u, x, k);
                  case "Separation":
                  case "DeviceN":
                    const C = t.fetchIfRef(e[1]);
                    h = Array.isArray(C) ? C.length : 1;
                    u = this._parse(e[2], t, i, a);
                    const S = a.create(e[3]);
                    return new o(h, u, S);
                  case "Lab":
                    s = t.fetchIfRef(e[1]);
                    d = s.getArray("WhitePoint");
                    m = s.getArray("BlackPoint");
                    const _ = s.getArray("Range");
                    return new g(d, m, _);
                  default:
                    throw new n.FormatError(
                      `Unimplemented ColorSpace object: ${r}`
                    );
                }
              }
              throw new n.FormatError(`Unrecognized ColorSpace object: ${e}`);
            }
            static isDefaultDecode(e, t) {
              if (!Array.isArray(e)) return !0;
              if (2 * t !== e.length) {
                (0, n.warn)("The decode map is not the correct length");
                return !0;
              }
              for (let t = 0, i = e.length; t < i; t += 2)
                if (0 !== e[t] || 1 !== e[t + 1]) return !1;
              return !0;
            }
            static get singletons() {
              return (0, n.shadow)(this, "singletons", {
                get gray() {
                  return (0, n.shadow)(this, "gray", new h());
                },
                get rgb() {
                  return (0, n.shadow)(this, "rgb", new u());
                },
                get cmyk() {
                  return (0, n.shadow)(this, "cmyk", new d());
                },
              });
            }
          }
          t.ColorSpace = s;
          class o extends s {
            constructor(e, t, i) {
              super("Alternate", e);
              this.base = t;
              this.tintFn = i;
              this.tmpBuf = new Float32Array(t.numComps);
            }
            getRgbItem(e, t, i, n) {
              const r = this.tmpBuf;
              this.tintFn(e, t, r, 0);
              this.base.getRgbItem(r, 0, i, n);
            }
            getRgbBuffer(e, t, i, n, r, a, s) {
              const o = this.tintFn,
                l = this.base,
                c = 1 / ((1 << a) - 1),
                h = l.numComps,
                u = l.usesZeroToOneRange,
                d = (l.isPassthrough(8) || !u) && 0 === s;
              let f = d ? r : 0;
              const p = d ? n : new Uint8ClampedArray(h * i),
                g = this.numComps,
                m = new Float32Array(g),
                v = new Float32Array(h);
              let b, y;
              for (b = 0; b < i; b++) {
                for (y = 0; y < g; y++) m[y] = e[t++] * c;
                o(m, 0, v, 0);
                if (u) for (y = 0; y < h; y++) p[f++] = 255 * v[y];
                else {
                  l.getRgbItem(v, 0, p, f);
                  f += h;
                }
              }
              if (!d) l.getRgbBuffer(p, 0, i, n, r, 8, s);
            }
            getOutputLength(e, t) {
              return this.base.getOutputLength(
                (e * this.base.numComps) / this.numComps,
                t
              );
            }
          }
          class l extends s {
            constructor(e) {
              super("Pattern", null);
              this.base = e;
            }
            isDefaultDecode(e, t) {
              (0, n.unreachable)("Should not call PatternCS.isDefaultDecode");
            }
          }
          class c extends s {
            constructor(e, t, i) {
              super("Indexed", 1);
              this.base = e;
              this.highVal = t;
              const a = e.numComps * t;
              this.lookup = new Uint8Array(a);
              if ((0, r.isStream)(i)) {
                const e = i.getBytes(a);
                this.lookup.set(e);
              } else if ("string" == typeof i)
                for (let e = 0; e < a; ++e)
                  this.lookup[e] = 255 & i.charCodeAt(e);
              else
                throw new n.FormatError(
                  `IndexedCS - unrecognized lookup table: ${i}`
                );
            }
            getRgbItem(e, t, i, n) {
              const r = this.base.numComps,
                a = e[t] * r;
              this.base.getRgbBuffer(this.lookup, a, 1, i, n, 8, 0);
            }
            getRgbBuffer(e, t, i, n, r, a, s) {
              const o = this.base,
                l = o.numComps,
                c = o.getOutputLength(l, s),
                h = this.lookup;
              for (let a = 0; a < i; ++a) {
                const i = e[t++] * l;
                o.getRgbBuffer(h, i, 1, n, r, 8, s);
                r += c;
              }
            }
            getOutputLength(e, t) {
              return this.base.getOutputLength(e * this.base.numComps, t);
            }
            isDefaultDecode(e, t) {
              if (!Array.isArray(e)) return !0;
              if (2 !== e.length) {
                (0, n.warn)("Decode map length is not correct");
                return !0;
              }
              if (!Number.isInteger(t) || t < 1) {
                (0, n.warn)("Bits per component is not correct");
                return !0;
              }
              return 0 === e[0] && e[1] === (1 << t) - 1;
            }
          }
          class h extends s {
            constructor() {
              super("DeviceGray", 1);
            }
            getRgbItem(e, t, i, n) {
              const r = 255 * e[t];
              i[n] = i[n + 1] = i[n + 2] = r;
            }
            getRgbBuffer(e, t, i, n, r, a, s) {
              const o = 255 / ((1 << a) - 1);
              let l = t,
                c = r;
              for (let t = 0; t < i; ++t) {
                const t = o * e[l++];
                n[c++] = t;
                n[c++] = t;
                n[c++] = t;
                c += s;
              }
            }
            getOutputLength(e, t) {
              return e * (3 + t);
            }
          }
          class u extends s {
            constructor() {
              super("DeviceRGB", 3);
            }
            getRgbItem(e, t, i, n) {
              i[n] = 255 * e[t];
              i[n + 1] = 255 * e[t + 1];
              i[n + 2] = 255 * e[t + 2];
            }
            getRgbBuffer(e, t, i, n, r, a, s) {
              if (8 === a && 0 === s) {
                n.set(e.subarray(t, t + 3 * i), r);
                return;
              }
              const o = 255 / ((1 << a) - 1);
              let l = t,
                c = r;
              for (let t = 0; t < i; ++t) {
                n[c++] = o * e[l++];
                n[c++] = o * e[l++];
                n[c++] = o * e[l++];
                c += s;
              }
            }
            getOutputLength(e, t) {
              return ((e * (3 + t)) / 3) | 0;
            }
            isPassthrough(e) {
              return 8 === e;
            }
          }
          const d = (function () {
              function e(e, t, i, n, r) {
                const a = e[t] * i,
                  s = e[t + 1] * i,
                  o = e[t + 2] * i,
                  l = e[t + 3] * i;
                n[r] =
                  255 +
                  a *
                    (-4.387332384609988 * a +
                      54.48615194189176 * s +
                      18.82290502165302 * o +
                      212.25662451639585 * l -
                      285.2331026137004) +
                  s *
                    (1.7149763477362134 * s -
                      5.6096736904047315 * o +
                      -17.873870861415444 * l -
                      5.497006427196366) +
                  o *
                    (-2.5217340131683033 * o -
                      21.248923337353073 * l +
                      17.5119270841813) +
                  l * (-21.86122147463605 * l - 189.48180835922747);
                n[r + 1] =
                  255 +
                  a *
                    (8.841041422036149 * a +
                      60.118027045597366 * s +
                      6.871425592049007 * o +
                      31.159100130055922 * l -
                      79.2970844816548) +
                  s *
                    (-15.310361306967817 * s +
                      17.575251261109482 * o +
                      131.35250912493976 * l -
                      190.9453302588951) +
                  o *
                    (4.444339102852739 * o +
                      9.8632861493405 * l -
                      24.86741582555878) +
                  l * (-20.737325471181034 * l - 187.80453709719578);
                n[r + 2] =
                  255 +
                  a *
                    (0.8842522430003296 * a +
                      8.078677503112928 * s +
                      30.89978309703729 * o -
                      0.23883238689178934 * l -
                      14.183576799673286) +
                  s *
                    (10.49593273432072 * s +
                      63.02378494754052 * o +
                      50.606957656360734 * l -
                      112.23884253719248) +
                  o *
                    (0.03296041114873217 * o +
                      115.60384449646641 * l -
                      193.58209356861505) +
                  l * (-22.33816807309886 * l - 180.12613974708367);
              }
              return class extends s {
                constructor() {
                  super("DeviceCMYK", 4);
                }
                getRgbItem(t, i, n, r) {
                  e(t, i, 1, n, r);
                }
                getRgbBuffer(t, i, n, r, a, s, o) {
                  const l = 1 / ((1 << s) - 1);
                  for (let s = 0; s < n; s++) {
                    e(t, i, l, r, a);
                    i += 4;
                    a += 3 + o;
                  }
                }
                getOutputLength(e, t) {
                  return ((e / 4) * (3 + t)) | 0;
                }
              };
            })(),
            f = (function () {
              function e(e, t, i, n, r, a) {
                const s = (t[i] * a) ** e.G,
                  o = e.YW * s,
                  l = Math.max(295.8 * o ** 0.3333333333333333 - 40.8, 0);
                n[r] = l;
                n[r + 1] = l;
                n[r + 2] = l;
              }
              return class extends s {
                constructor(e, t, i) {
                  super("CalGray", 1);
                  if (!e)
                    throw new n.FormatError(
                      "WhitePoint missing - required for color space CalGray"
                    );
                  t = t || [0, 0, 0];
                  i = i || 1;
                  this.XW = e[0];
                  this.YW = e[1];
                  this.ZW = e[2];
                  this.XB = t[0];
                  this.YB = t[1];
                  this.ZB = t[2];
                  this.G = i;
                  if (this.XW < 0 || this.ZW < 0 || 1 !== this.YW)
                    throw new n.FormatError(
                      `Invalid WhitePoint components for ${this.name}, no fallback available`
                    );
                  if (this.XB < 0 || this.YB < 0 || this.ZB < 0) {
                    (0, n.info)(
                      `Invalid BlackPoint for ${this.name}, falling back to default.`
                    );
                    this.XB = this.YB = this.ZB = 0;
                  }
                  if (0 !== this.XB || 0 !== this.YB || 0 !== this.ZB)
                    (0, n.warn)(
                      `${this.name}, BlackPoint: XB: ${this.XB}, YB: ${this.YB}, ZB: ${this.ZB}, only default values are supported.`
                    );
                  if (this.G < 1) {
                    (0, n.info)(
                      `Invalid Gamma: ${this.G} for ${this.name}, falling back to default.`
                    );
                    this.G = 1;
                  }
                }
                getRgbItem(t, i, n, r) {
                  e(this, t, i, n, r, 1);
                }
                getRgbBuffer(t, i, n, r, a, s, o) {
                  const l = 1 / ((1 << s) - 1);
                  for (let s = 0; s < n; ++s) {
                    e(this, t, i, r, a, l);
                    i += 1;
                    a += 3 + o;
                  }
                }
                getOutputLength(e, t) {
                  return e * (3 + t);
                }
              };
            })(),
            p = (function () {
              const e = new Float32Array([
                  0.8951, 0.2664, -0.1614, -0.7502, 1.7135, 0.0367, 0.0389,
                  -0.0685, 1.0296,
                ]),
                t = new Float32Array([
                  0.9869929, -0.1470543, 0.1599627, 0.4323053, 0.5183603,
                  0.0492912, -0.0085287, 0.0400428, 0.9684867,
                ]),
                i = new Float32Array([
                  3.2404542, -1.5371385, -0.4985314, -0.969266, 1.8760108,
                  0.041556, 0.0556434, -0.2040259, 1.0572252,
                ]),
                r = new Float32Array([1, 1, 1]),
                a = new Float32Array(3),
                o = new Float32Array(3),
                l = new Float32Array(3);
              function c(e, t, i) {
                i[0] = e[0] * t[0] + e[1] * t[1] + e[2] * t[2];
                i[1] = e[3] * t[0] + e[4] * t[1] + e[5] * t[2];
                i[2] = e[6] * t[0] + e[7] * t[1] + e[8] * t[2];
              }
              function h(e) {
                if (e <= 0.0031308) return u(0, 1, 12.92 * e);
                if (e >= 0.99554525) return 1;
                else return u(0, 1, 1.055 * e ** (1 / 2.4) - 0.055);
              }
              function u(e, t, i) {
                return Math.max(e, Math.min(t, i));
              }
              function d(e) {
                if (e < 0) return -d(-e);
                if (e > 8) return ((e + 16) / 116) ** 3;
                else return 0.0011070564598794539 * e;
              }
              function f(n, s, f, p, g, m) {
                const v = u(0, 1, s[f] * m),
                  b = u(0, 1, s[f + 1] * m),
                  y = u(0, 1, s[f + 2] * m),
                  w = 1 === v ? 1 : v ** n.GR,
                  x = 1 === b ? 1 : b ** n.GG,
                  k = 1 === y ? 1 : y ** n.GB,
                  C = n.MXA * w + n.MXB * x + n.MXC * k,
                  S = n.MYA * w + n.MYB * x + n.MYC * k,
                  _ = n.MZA * w + n.MZB * x + n.MZC * k,
                  A = o;
                A[0] = C;
                A[1] = S;
                A[2] = _;
                const F = l;
                !(function (i, n, r) {
                  if (1 === i[0] && 1 === i[2]) {
                    r[0] = n[0];
                    r[1] = n[1];
                    r[2] = n[2];
                    return;
                  }
                  const s = r;
                  c(e, n, s);
                  const o = a;
                  !(function (e, t, i) {
                    i[0] = (1 * t[0]) / e[0];
                    i[1] = (1 * t[1]) / e[1];
                    i[2] = (1 * t[2]) / e[2];
                  })(i, s, o);
                  c(t, o, r);
                })(n.whitePoint, A, F);
                const T = o;
                !(function (e, t, i) {
                  if (0 === e[0] && 0 === e[1] && 0 === e[2]) {
                    i[0] = t[0];
                    i[1] = t[1];
                    i[2] = t[2];
                    return;
                  }
                  const n = d(0),
                    r = (1 - n) / (1 - d(e[0])),
                    a = 1 - r,
                    s = (1 - n) / (1 - d(e[1])),
                    o = 1 - s,
                    l = (1 - n) / (1 - d(e[2])),
                    c = 1 - l;
                  i[0] = t[0] * r + a;
                  i[1] = t[1] * s + o;
                  i[2] = t[2] * l + c;
                })(n.blackPoint, F, T);
                const P = l;
                !(function (i, n, r) {
                  const s = r;
                  c(e, n, s);
                  const o = a;
                  !(function (e, t, i) {
                    i[0] = (0.95047 * t[0]) / e[0];
                    i[1] = (1 * t[1]) / e[1];
                    i[2] = (1.08883 * t[2]) / e[2];
                  })(i, s, o);
                  c(t, o, r);
                })(r, T, P);
                const E = o;
                c(i, P, E);
                p[g] = 255 * h(E[0]);
                p[g + 1] = 255 * h(E[1]);
                p[g + 2] = 255 * h(E[2]);
              }
              return class extends s {
                constructor(e, t, i, r) {
                  super("CalRGB", 3);
                  if (!e)
                    throw new n.FormatError(
                      "WhitePoint missing - required for color space CalRGB"
                    );
                  t = t || new Float32Array(3);
                  i = i || new Float32Array([1, 1, 1]);
                  r = r || new Float32Array([1, 0, 0, 0, 1, 0, 0, 0, 1]);
                  const a = e[0],
                    s = e[1],
                    o = e[2];
                  this.whitePoint = e;
                  const l = t[0],
                    c = t[1],
                    h = t[2];
                  this.blackPoint = t;
                  this.GR = i[0];
                  this.GG = i[1];
                  this.GB = i[2];
                  this.MXA = r[0];
                  this.MYA = r[1];
                  this.MZA = r[2];
                  this.MXB = r[3];
                  this.MYB = r[4];
                  this.MZB = r[5];
                  this.MXC = r[6];
                  this.MYC = r[7];
                  this.MZC = r[8];
                  if (a < 0 || o < 0 || 1 !== s)
                    throw new n.FormatError(
                      `Invalid WhitePoint components for ${this.name}, no fallback available`
                    );
                  if (l < 0 || c < 0 || h < 0) {
                    (0, n.info)(
                      `Invalid BlackPoint for ${this.name} [${l}, ${c}, ${h}], falling back to default.`
                    );
                    this.blackPoint = new Float32Array(3);
                  }
                  if (this.GR < 0 || this.GG < 0 || this.GB < 0) {
                    (0, n.info)(
                      `Invalid Gamma [${this.GR}, ${this.GG}, ${this.GB}] for ${this.name}, falling back to default.`
                    );
                    this.GR = this.GG = this.GB = 1;
                  }
                }
                getRgbItem(e, t, i, n) {
                  f(this, e, t, i, n, 1);
                }
                getRgbBuffer(e, t, i, n, r, a, s) {
                  const o = 1 / ((1 << a) - 1);
                  for (let a = 0; a < i; ++a) {
                    f(this, e, t, n, r, o);
                    t += 3;
                    r += 3 + s;
                  }
                }
                getOutputLength(e, t) {
                  return ((e * (3 + t)) / 3) | 0;
                }
              };
            })(),
            g = (function () {
              function e(e) {
                let t;
                if (e >= 6 / 29) t = e * e * e;
                else t = (108 / 841) * (e - 4 / 29);
                return t;
              }
              function t(e, t, i, n) {
                return i + (e * (n - i)) / t;
              }
              function i(i, n, r, a, s, o) {
                let l = n[r],
                  c = n[r + 1],
                  h = n[r + 2];
                if (!1 !== a) {
                  l = t(l, a, 0, 100);
                  c = t(c, a, i.amin, i.amax);
                  h = t(h, a, i.bmin, i.bmax);
                }
                if (c > i.amax) c = i.amax;
                else if (c < i.amin) c = i.amin;
                if (h > i.bmax) h = i.bmax;
                else if (h < i.bmin) h = i.bmin;
                const u = (l + 16) / 116,
                  d = u + c / 500,
                  f = u - h / 200,
                  p = i.XW * e(d),
                  g = i.YW * e(u),
                  m = i.ZW * e(f);
                let v, b, y;
                if (i.ZW < 1) {
                  v = 3.1339 * p + -1.617 * g + -0.4906 * m;
                  b = -0.9785 * p + 1.916 * g + 0.0333 * m;
                  y = 0.072 * p + -0.229 * g + 1.4057 * m;
                } else {
                  v = 3.2406 * p + -1.5372 * g + -0.4986 * m;
                  b = -0.9689 * p + 1.8758 * g + 0.0415 * m;
                  y = 0.0557 * p + -0.204 * g + 1.057 * m;
                }
                s[o] = 255 * Math.sqrt(v);
                s[o + 1] = 255 * Math.sqrt(b);
                s[o + 2] = 255 * Math.sqrt(y);
              }
              return class extends s {
                constructor(e, t, i) {
                  super("Lab", 3);
                  if (!e)
                    throw new n.FormatError(
                      "WhitePoint missing - required for color space Lab"
                    );
                  t = t || [0, 0, 0];
                  i = i || [-100, 100, -100, 100];
                  this.XW = e[0];
                  this.YW = e[1];
                  this.ZW = e[2];
                  this.amin = i[0];
                  this.amax = i[1];
                  this.bmin = i[2];
                  this.bmax = i[3];
                  this.XB = t[0];
                  this.YB = t[1];
                  this.ZB = t[2];
                  if (this.XW < 0 || this.ZW < 0 || 1 !== this.YW)
                    throw new n.FormatError(
                      "Invalid WhitePoint components, no fallback available"
                    );
                  if (this.XB < 0 || this.YB < 0 || this.ZB < 0) {
                    (0, n.info)("Invalid BlackPoint, falling back to default");
                    this.XB = this.YB = this.ZB = 0;
                  }
                  if (this.amin > this.amax || this.bmin > this.bmax) {
                    (0, n.info)("Invalid Range, falling back to defaults");
                    this.amin = -100;
                    this.amax = 100;
                    this.bmin = -100;
                    this.bmax = 100;
                  }
                }
                getRgbItem(e, t, n, r) {
                  i(this, e, t, !1, n, r);
                }
                getRgbBuffer(e, t, n, r, a, s, o) {
                  const l = (1 << s) - 1;
                  for (let s = 0; s < n; s++) {
                    i(this, e, t, l, r, a);
                    t += 3;
                    a += 3 + o;
                  }
                }
                getOutputLength(e, t) {
                  return ((e * (3 + t)) / 3) | 0;
                }
                isDefaultDecode(e, t) {
                  return !0;
                }
                get usesZeroToOneRange() {
                  return (0, n.shadow)(this, "usesZeroToOneRange", !1);
                }
              };
            })();
        },
        (e, t, i) => {
          Object.defineProperty(t, "__esModule", { value: !0 });
          t.LocalTilingPatternCache =
            t.LocalImageCache =
            t.LocalGStateCache =
            t.LocalFunctionCache =
            t.LocalColorSpaceCache =
            t.GlobalImageCache =
              void 0;
          var n = i(2),
            r = i(5);
          class a {
            constructor(e) {
              if (this.constructor === a)
                (0, n.unreachable)("Cannot initialize BaseLocalCache.");
              if (!e || !e.onlyRefs) {
                this._nameRefMap = new Map();
                this._imageMap = new Map();
              }
              this._imageCache = new r.RefSetCache();
            }
            getByName(e) {
              const t = this._nameRefMap.get(e);
              if (t) return this.getByRef(t);
              else return this._imageMap.get(e) || null;
            }
            getByRef(e) {
              return this._imageCache.get(e) || null;
            }
            set(e, t, i) {
              (0, n.unreachable)("Abstract method `set` called.");
            }
          }
          t.LocalImageCache = class extends a {
            set(e, t = null, i) {
              if (!e)
                throw new Error(
                  'LocalImageCache.set - expected "name" argument.'
                );
              if (!t) {
                if (!this._imageMap.has(e)) this._imageMap.set(e, i);
              } else {
                if (this._imageCache.has(t)) return;
                this._nameRefMap.set(e, t);
                this._imageCache.put(t, i);
              }
            }
          };
          t.LocalColorSpaceCache = class extends a {
            set(e = null, t = null, i) {
              if (!e && !t)
                throw new Error(
                  'LocalColorSpaceCache.set - expected "name" and/or "ref" argument.'
                );
              if (!t) {
                if (!this._imageMap.has(e)) this._imageMap.set(e, i);
              } else {
                if (this._imageCache.has(t)) return;
                if (e) this._nameRefMap.set(e, t);
                this._imageCache.put(t, i);
              }
            }
          };
          t.LocalFunctionCache = class extends a {
            constructor(e) {
              super({ onlyRefs: !0 });
            }
            getByName(e) {
              (0, n.unreachable)("Should not call `getByName` method.");
            }
            set(e = null, t, i) {
              if (!t)
                throw new Error(
                  'LocalFunctionCache.set - expected "ref" argument.'
                );
              if (!this._imageCache.has(t)) this._imageCache.put(t, i);
            }
          };
          t.LocalGStateCache = class extends a {
            set(e, t = null, i) {
              if (!e)
                throw new Error(
                  'LocalGStateCache.set - expected "name" argument.'
                );
              if (!t) {
                if (!this._imageMap.has(e)) this._imageMap.set(e, i);
              } else {
                if (this._imageCache.has(t)) return;
                this._nameRefMap.set(e, t);
                this._imageCache.put(t, i);
              }
            }
          };
          t.LocalTilingPatternCache = class extends a {
            set(e, t = null, i) {
              if (!e)
                throw new Error(
                  'LocalTilingPatternCache.set - expected "name" argument.'
                );
              if (!t) {
                if (!this._imageMap.has(e)) this._imageMap.set(e, i);
              } else {
                if (this._imageCache.has(t)) return;
                this._nameRefMap.set(e, t);
                this._imageCache.put(t, i);
              }
            }
          };
          class s {
            static get NUM_PAGES_THRESHOLD() {
              return (0, n.shadow)(this, "NUM_PAGES_THRESHOLD", 2);
            }
            static get MAX_IMAGES_TO_CACHE() {
              return (0, n.shadow)(this, "MAX_IMAGES_TO_CACHE", 10);
            }
            constructor() {
              this._refCache = new r.RefSetCache();
              this._imageCache = new r.RefSetCache();
            }
            shouldCache(e, t) {
              const i = this._refCache.get(e);
              if ((i ? i.size + (i.has(t) ? 0 : 1) : 1) < s.NUM_PAGES_THRESHOLD)
                return !1;
              if (
                !this._imageCache.has(e) &&
                this._imageCache.size >= s.MAX_IMAGES_TO_CACHE
              )
                return !1;
              else return !0;
            }
            addPageIndex(e, t) {
              let i = this._refCache.get(e);
              if (!i) {
                i = new Set();
                this._refCache.put(e, i);
              }
              i.add(t);
            }
            getData(e, t) {
              const i = this._refCache.get(e);
              if (!i) return null;
              if (i.size < s.NUM_PAGES_THRESHOLD) return null;
              if (!this._imageCache.has(e)) return null;
              i.add(t);
              return this._imageCache.get(e);
            }
            setData(e, t) {
              if (!this._refCache.has(e))
                throw new Error(
                  'GlobalImageCache.setData - expected "addPageIndex" to have been called.'
                );
              if (!this._imageCache.has(e))
                if (!(this._imageCache.size >= s.MAX_IMAGES_TO_CACHE))
                  this._imageCache.put(e, t);
                else
                  (0, n.info)(
                    "GlobalImageCache.setData - ignoring image above MAX_IMAGES_TO_CACHE."
                  );
            }
            clear(e = !1) {
              if (!e) this._refCache.clear();
              this._imageCache.clear();
            }
          }
          t.GlobalImageCache = s;
        },
        (e, t, i) => {
          Object.defineProperty(t, "__esModule", { value: !0 });
          t.getQuadPoints = d;
          t.MarkupAnnotation =
            t.AnnotationFactory =
            t.AnnotationBorderStyle =
            t.Annotation =
              void 0;
          var n = i(2),
            r = i(10),
            a = i(8),
            s = i(26),
            o = i(5),
            l = i(23),
            c = i(44),
            h = i(12),
            u = i(46);
          t.AnnotationFactory = class {
            static create(e, t, i, n) {
              return i
                .ensureCatalog("acroForm")
                .then((r) => i.ensure(this, "_create", [e, t, i, n, r]));
            }
            static _create(e, t, i, r, s) {
              const l = e.fetchIfRef(t);
              if (!(0, o.isDict)(l)) return;
              const c = (0, o.isRef)(t)
                ? t.toString()
                : `annot_${r.createObjId()}`;
              let h = l.get("Subtype");
              h = (0, o.isName)(h) ? h.name : null;
              const u = {
                xref: e,
                ref: t,
                dict: l,
                subtype: h,
                id: c,
                pdfManager: i,
                acroForm: s instanceof o.Dict ? s : o.Dict.empty,
              };
              switch (h) {
                case "Link":
                  return new k(u);
                case "Text":
                  return new x(u);
                case "Widget":
                  let e = (0, a.getInheritableProperty)({ dict: l, key: "FT" });
                  e = (0, o.isName)(e) ? e.name : null;
                  switch (e) {
                    case "Tx":
                      return new b(u);
                    case "Btn":
                      return new y(u);
                    case "Ch":
                      return new w(u);
                  }
                  (0, n.warn)(
                    'Unimplemented widget field type "' +
                      e +
                      '", falling back to base field type.'
                  );
                  return new v(u);
                case "Popup":
                  return new C(u);
                case "FreeText":
                  return new S(u);
                case "Line":
                  return new _(u);
                case "Square":
                  return new A(u);
                case "Circle":
                  return new F(u);
                case "PolyLine":
                  return new T(u);
                case "Polygon":
                  return new P(u);
                case "Caret":
                  return new E(u);
                case "Ink":
                  return new I(u);
                case "Highlight":
                  return new D(u);
                case "Underline":
                  return new O(u);
                case "Squiggly":
                  return new R(u);
                case "StrikeOut":
                  return new N(u);
                case "Stamp":
                  return new M(u);
                case "FileAttachment":
                  return new B(u);
                default:
                  if (!h)
                    (0, n.warn)("Annotation is missing the required /Subtype.");
                  else
                    (0, n.warn)(
                      'Unimplemented annotation type "' +
                        h +
                        '", falling back to base annotation.'
                    );
                  return new p(u);
              }
            }
          };
          function d(e, t) {
            if (!e.has("QuadPoints")) return null;
            const i = e.getArray("QuadPoints");
            if (!Array.isArray(i) || 0 === i.length || i.length % 8 > 0)
              return null;
            const n = [];
            for (let e = 0, r = i.length / 8; e < r; e++) {
              n.push([]);
              for (let r = 8 * e, a = 8 * e + 8; r < a; r += 2) {
                const a = i[r],
                  s = i[r + 1];
                if (
                  null !== t &&
                  (a < t[0] || a > t[2] || s < t[1] || s > t[3])
                )
                  return null;
                n[e].push({ x: a, y: s });
              }
            }
            return n.map((e) => {
              const [t, i, n, r] = e.reduce(
                ([e, t, i, n], r) => [
                  Math.min(e, r.x),
                  Math.max(t, r.x),
                  Math.min(i, r.y),
                  Math.max(n, r.y),
                ],
                [
                  Number.MAX_VALUE,
                  Number.MIN_VALUE,
                  Number.MAX_VALUE,
                  Number.MIN_VALUE,
                ]
              );
              return [
                { x: t, y: r },
                { x: i, y: r },
                { x: t, y: n },
                { x: i, y: n },
              ];
            });
          }
          function f(e, t, i) {
            const [r, a, s, o] = n.Util.getAxialAlignedBoundingBox(t, i);
            if (r === s || a === o) return [1, 0, 0, 1, e[0], e[1]];
            const l = (e[2] - e[0]) / (s - r),
              c = (e[3] - e[1]) / (o - a);
            return [l, 0, 0, c, e[0] - r * l, e[1] - a * c];
          }
          class p {
            constructor(e) {
              const t = e.dict;
              this.setContents(t.get("Contents"));
              this.setModificationDate(t.get("M"));
              this.setFlags(t.get("F"));
              this.setRectangle(t.getArray("Rect"));
              this.setColor(t.getArray("C"));
              this.setBorderStyle(t);
              this.setAppearance(t);
              this._streams = [];
              if (this.appearance) this._streams.push(this.appearance);
              this.data = {
                annotationFlags: this.flags,
                borderStyle: this.borderStyle,
                color: this.color,
                contents: this.contents,
                hasAppearance: !!this.appearance,
                id: e.id,
                modificationDate: this.modificationDate,
                rect: this.rectangle,
                subtype: e.subtype,
              };
              this._fallbackFontDict = null;
            }
            _hasFlag(e, t) {
              return !!(e & t);
            }
            _isViewable(e) {
              return (
                !this._hasFlag(e, n.AnnotationFlag.INVISIBLE) &&
                !this._hasFlag(e, n.AnnotationFlag.NOVIEW)
              );
            }
            _isPrintable(e) {
              return (
                this._hasFlag(e, n.AnnotationFlag.PRINT) &&
                !this._hasFlag(e, n.AnnotationFlag.INVISIBLE)
              );
            }
            isHidden(e) {
              const t = e && e[this.data.id];
              if (t && "hidden" in t) return t.hidden;
              else return this._hasFlag(this.flags, n.AnnotationFlag.HIDDEN);
            }
            get viewable() {
              if (null === this.data.quadPoints) return !1;
              if (0 === this.flags) return !0;
              else return this._isViewable(this.flags);
            }
            get printable() {
              if (null === this.data.quadPoints) return !1;
              if (0 === this.flags) return !1;
              else return this._isPrintable(this.flags);
            }
            setContents(e) {
              this.contents = (0, n.stringToPDFString)(e || "");
            }
            setModificationDate(e) {
              this.modificationDate = (0, n.isString)(e) ? e : null;
            }
            setFlags(e) {
              this.flags = Number.isInteger(e) && e > 0 ? e : 0;
            }
            hasFlag(e) {
              return this._hasFlag(this.flags, e);
            }
            setRectangle(e) {
              if (Array.isArray(e) && 4 === e.length)
                this.rectangle = n.Util.normalizeRect(e);
              else this.rectangle = [0, 0, 0, 0];
            }
            setColor(e) {
              const t = new Uint8ClampedArray(3);
              if (Array.isArray(e))
                switch (e.length) {
                  case 0:
                    this.color = null;
                    break;
                  case 1:
                    l.ColorSpace.singletons.gray.getRgbItem(e, 0, t, 0);
                    this.color = t;
                    break;
                  case 3:
                    l.ColorSpace.singletons.rgb.getRgbItem(e, 0, t, 0);
                    this.color = t;
                    break;
                  case 4:
                    l.ColorSpace.singletons.cmyk.getRgbItem(e, 0, t, 0);
                    this.color = t;
                    break;
                  default:
                    this.color = t;
                }
              else this.color = t;
            }
            setBorderStyle(e) {
              this.borderStyle = new g();
              if ((0, o.isDict)(e))
                if (e.has("BS")) {
                  const t = e.get("BS"),
                    i = t.get("Type");
                  if (!i || (0, o.isName)(i, "Border")) {
                    this.borderStyle.setWidth(t.get("W"), this.rectangle);
                    this.borderStyle.setStyle(t.get("S"));
                    this.borderStyle.setDashArray(t.getArray("D"));
                  }
                } else if (e.has("Border")) {
                  const t = e.getArray("Border");
                  if (Array.isArray(t) && t.length >= 3) {
                    this.borderStyle.setHorizontalCornerRadius(t[0]);
                    this.borderStyle.setVerticalCornerRadius(t[1]);
                    this.borderStyle.setWidth(t[2], this.rectangle);
                    if (4 === t.length) this.borderStyle.setDashArray(t[3]);
                  }
                } else this.borderStyle.setWidth(0);
            }
            setAppearance(e) {
              this.appearance = null;
              const t = e.get("AP");
              if (!(0, o.isDict)(t)) return;
              const i = t.get("N");
              if ((0, o.isStream)(i)) {
                this.appearance = i;
                return;
              }
              if (!(0, o.isDict)(i)) return;
              const n = e.get("AS");
              if ((0, o.isName)(n) && i.has(n.name))
                this.appearance = i.get(n.name);
            }
            loadResources(e) {
              return this.appearance.dict.getAsync("Resources").then((t) => {
                if (t)
                  return new r.ObjectLoader(t, e, t.xref)
                    .load()
                    .then(function () {
                      return t;
                    });
              });
            }
            getOperatorList(e, t, i, r) {
              if (!this.appearance)
                return Promise.resolve(new c.OperatorList());
              const a = this.appearance,
                s = this.data,
                o = a.dict,
                l = this.loadResources([
                  "ExtGState",
                  "ColorSpace",
                  "Pattern",
                  "Shading",
                  "XObject",
                  "Font",
                ]),
                h = o.getArray("BBox") || [0, 0, 1, 1],
                u = o.getArray("Matrix") || [1, 0, 0, 1, 0, 0],
                d = f(s.rect, h, u);
              return l.then((i) => {
                const r = new c.OperatorList();
                r.addOp(n.OPS.beginAnnotation, [s.rect, d, u]);
                return e
                  .getOperatorList({
                    stream: a,
                    task: t,
                    resources: i,
                    operatorList: r,
                    fallbackFontDict: this._fallbackFontDict,
                  })
                  .then(() => {
                    r.addOp(n.OPS.endAnnotation, []);
                    this.reset();
                    return r;
                  });
              });
            }
            async save(e, t, i) {
              return null;
            }
            getFieldObject() {
              return null;
            }
            reset() {
              for (const e of this._streams) e.reset();
            }
          }
          t.Annotation = p;
          class g {
            constructor() {
              this.width = 1;
              this.style = n.AnnotationBorderStyleType.SOLID;
              this.dashArray = [3];
              this.horizontalCornerRadius = 0;
              this.verticalCornerRadius = 0;
            }
            setWidth(e, t = [0, 0, 0, 0]) {
              if (!(0, o.isName)(e)) {
                if (Number.isInteger(e)) {
                  if (e > 0) {
                    const i = (t[2] - t[0]) / 2,
                      r = (t[3] - t[1]) / 2;
                    if (i > 0 && r > 0 && (e > i || e > r)) {
                      (0, n.warn)(
                        `AnnotationBorderStyle.setWidth - ignoring width: ${e}`
                      );
                      e = 1;
                    }
                  }
                  this.width = e;
                }
              } else this.width = 0;
            }
            setStyle(e) {
              if ((0, o.isName)(e))
                switch (e.name) {
                  case "S":
                    this.style = n.AnnotationBorderStyleType.SOLID;
                    break;
                  case "D":
                    this.style = n.AnnotationBorderStyleType.DASHED;
                    break;
                  case "B":
                    this.style = n.AnnotationBorderStyleType.BEVELED;
                    break;
                  case "I":
                    this.style = n.AnnotationBorderStyleType.INSET;
                    break;
                  case "U":
                    this.style = n.AnnotationBorderStyleType.UNDERLINE;
                }
            }
            setDashArray(e) {
              if (Array.isArray(e) && e.length > 0) {
                let t = !0,
                  i = !0;
                for (const n of e)
                  if (!(+n >= 0)) {
                    t = !1;
                    break;
                  } else if (n > 0) i = !1;
                if (t && !i) this.dashArray = e;
                else this.width = 0;
              } else if (e) this.width = 0;
            }
            setHorizontalCornerRadius(e) {
              if (Number.isInteger(e)) this.horizontalCornerRadius = e;
            }
            setVerticalCornerRadius(e) {
              if (Number.isInteger(e)) this.verticalCornerRadius = e;
            }
          }
          t.AnnotationBorderStyle = g;
          class m extends p {
            constructor(e) {
              super(e);
              const t = e.dict;
              if (t.has("IRT")) {
                const e = t.getRaw("IRT");
                this.data.inReplyTo = (0, o.isRef)(e) ? e.toString() : null;
                const i = t.get("RT");
                this.data.replyType = (0, o.isName)(i)
                  ? i.name
                  : n.AnnotationReplyType.REPLY;
              }
              if (this.data.replyType === n.AnnotationReplyType.GROUP) {
                const e = t.get("IRT");
                this.data.title = (0, n.stringToPDFString)(e.get("T") || "");
                this.setContents(e.get("Contents"));
                this.data.contents = this.contents;
                if (!e.has("CreationDate")) this.data.creationDate = null;
                else {
                  this.setCreationDate(e.get("CreationDate"));
                  this.data.creationDate = this.creationDate;
                }
                if (!e.has("M")) this.data.modificationDate = null;
                else {
                  this.setModificationDate(e.get("M"));
                  this.data.modificationDate = this.modificationDate;
                }
                this.data.hasPopup = e.has("Popup");
                if (!e.has("C")) this.data.color = null;
                else {
                  this.setColor(e.getArray("C"));
                  this.data.color = this.color;
                }
              } else {
                this.data.title = (0, n.stringToPDFString)(t.get("T") || "");
                this.setCreationDate(t.get("CreationDate"));
                this.data.creationDate = this.creationDate;
                this.data.hasPopup = t.has("Popup");
                if (!t.has("C")) this.data.color = null;
              }
            }
            setCreationDate(e) {
              this.creationDate = (0, n.isString)(e) ? e : null;
            }
            _setDefaultAppearance({
              xref: e,
              extra: t,
              strokeColor: i,
              fillColor: n,
              blendMode: r,
              pointsCallback: a,
            }) {
              let s = Number.MAX_VALUE,
                l = Number.MAX_VALUE,
                c = Number.MIN_VALUE,
                u = Number.MIN_VALUE;
              const d = ["q"];
              if (t) d.push(t);
              if (i) d.push(`${i[0]} ${i[1]} ${i[2]} RG`);
              if (n) d.push(`${n[0]} ${n[1]} ${n[2]} rg`);
              for (const e of this.data.quadPoints) {
                const [t, i, n, r] = a(d, e);
                s = Math.min(s, t);
                c = Math.max(c, i);
                l = Math.min(l, n);
                u = Math.max(u, r);
              }
              d.push("Q");
              const f = new o.Dict(e),
                p = new o.Dict(e);
              p.set("Subtype", o.Name.get("Form"));
              const g = new h.StringStream(d.join(" "));
              g.dict = p;
              f.set("Fm0", g);
              const m = new o.Dict(e);
              if (r) m.set("BM", o.Name.get(r));
              const v = new o.Dict(e);
              v.set("GS0", m);
              const b = new o.Dict(e);
              b.set("ExtGState", v);
              b.set("XObject", f);
              const y = new o.Dict(e);
              y.set("Resources", b);
              const w = (this.data.rect = [s, l, c, u]);
              y.set("BBox", w);
              this.appearance = new h.StringStream("/GS0 gs /Fm0 Do");
              this.appearance.dict = y;
              this._streams.push(this.appearance, g);
            }
          }
          t.MarkupAnnotation = m;
          class v extends p {
            constructor(e) {
              super(e);
              const t = e.dict,
                i = this.data;
              this.ref = e.ref;
              i.annotationType = n.AnnotationType.WIDGET;
              i.fieldName = this._constructFieldName(t);
              i.actions = (0, a.collectActions)(
                e.xref,
                t,
                n.AnnotationActionEventType
              );
              const r = (0, a.getInheritableProperty)({
                dict: t,
                key: "V",
                getArray: !0,
              });
              i.fieldValue = this._decodeFormValue(r);
              const l = (0, a.getInheritableProperty)({
                dict: t,
                key: "DV",
                getArray: !0,
              });
              i.defaultFieldValue = this._decodeFormValue(l);
              i.alternativeText = (0, n.stringToPDFString)(t.get("TU") || "");
              const c =
                (0, a.getInheritableProperty)({ dict: t, key: "DA" }) ||
                e.acroForm.get("DA") ||
                "";
              i.defaultAppearance = (0, n.isString)(c) ? c : "";
              i.defaultAppearanceData = (0, s.parseDefaultAppearance)(
                i.defaultAppearance
              );
              const h = (0, a.getInheritableProperty)({ dict: t, key: "FT" });
              i.fieldType = (0, o.isName)(h) ? h.name : null;
              const u = (0, a.getInheritableProperty)({ dict: t, key: "DR" }),
                d = e.acroForm.get("DR"),
                f = this.appearance && this.appearance.dict.get("Resources");
              this._fieldResources = {
                localResources: u,
                acroFormResources: d,
                appearanceResources: f,
                mergedResources: o.Dict.merge({
                  xref: e.xref,
                  dictArray: [u, f, d],
                  mergeSubDicts: !0,
                }),
              };
              i.fieldFlags = (0, a.getInheritableProperty)({
                dict: t,
                key: "Ff",
              });
              if (!Number.isInteger(i.fieldFlags) || i.fieldFlags < 0)
                i.fieldFlags = 0;
              i.readOnly = this.hasFieldFlag(n.AnnotationFieldFlag.READONLY);
              i.hidden = this._hasFlag(
                i.annotationFlags,
                n.AnnotationFlag.HIDDEN
              );
              if ("Sig" === i.fieldType) {
                i.fieldValue = null;
                this.setFlags(n.AnnotationFlag.HIDDEN);
                i.hidden = !0;
              }
            }
            _constructFieldName(e) {
              if (!e.has("T") && !e.has("Parent")) {
                (0, n.warn)(
                  "Unknown field name, falling back to empty field name."
                );
                return "";
              }
              if (!e.has("Parent")) return (0, n.stringToPDFString)(e.get("T"));
              const t = [];
              if (e.has("T")) t.unshift((0, n.stringToPDFString)(e.get("T")));
              let i = e;
              for (; i.has("Parent"); ) {
                i = i.get("Parent");
                if (!(0, o.isDict)(i)) break;
                if (i.has("T")) t.unshift((0, n.stringToPDFString)(i.get("T")));
              }
              return t.join(".");
            }
            _decodeFormValue(e) {
              if (Array.isArray(e))
                return e
                  .filter((e) => (0, n.isString)(e))
                  .map((e) => (0, n.stringToPDFString)(e));
              else if ((0, o.isName)(e))
                return (0, n.stringToPDFString)(e.name);
              else if ((0, n.isString)(e)) return (0, n.stringToPDFString)(e);
              return null;
            }
            hasFieldFlag(e) {
              return !!(this.data.fieldFlags & e);
            }
            getOperatorList(e, t, i, r) {
              if (i) return Promise.resolve(new c.OperatorList());
              if (!this._hasText) return super.getOperatorList(e, t, i, r);
              else
                return this._getAppearance(e, t, r).then((a) => {
                  if (this.appearance && null === a)
                    return super.getOperatorList(e, t, i, r);
                  const s = new c.OperatorList();
                  if (!this.data.defaultAppearance || null === a) return s;
                  const o = [1, 0, 0, 1, 0, 0],
                    l = [
                      0,
                      0,
                      this.data.rect[2] - this.data.rect[0],
                      this.data.rect[3] - this.data.rect[1],
                    ],
                    u = f(this.data.rect, l, o);
                  s.addOp(n.OPS.beginAnnotation, [this.data.rect, u, o]);
                  const d = new h.StringStream(a);
                  return e
                    .getOperatorList({
                      stream: d,
                      task: t,
                      resources: this._fieldResources.mergedResources,
                      operatorList: s,
                    })
                    .then(function () {
                      s.addOp(n.OPS.endAnnotation, []);
                      return s;
                    });
                });
            }
            async save(e, t, i) {
              const r = i[this.data.id] && i[this.data.id].value;
              if (r === this.data.fieldValue || void 0 === r) return null;
              let a = await this._getAppearance(e, t, i);
              if (null === a) return null;
              const { xref: s } = e,
                l = s.fetchIfRef(this.ref);
              if (!(0, o.isDict)(l)) return null;
              const c = [
                  0,
                  0,
                  this.data.rect[2] - this.data.rect[0],
                  this.data.rect[3] - this.data.rect[1],
                ],
                h = {
                  path: (0, n.stringToPDFString)(l.get("T") || ""),
                  value: r,
                },
                d = s.getNewRef(),
                f = new o.Dict(s);
              f.set("N", d);
              const p = s.encrypt;
              let g = null,
                m = null;
              if (p) {
                g = p.createCipherTransform(this.ref.num, this.ref.gen);
                m = p.createCipherTransform(d.num, d.gen);
                a = m.encryptString(a);
              }
              l.set(
                "V",
                (0, n.isAscii)(r) ? r : (0, n.stringToUTF16BEString)(r)
              );
              l.set("AP", f);
              l.set("M", `D:${(0, n.getModificationDate)()}`);
              const v = new o.Dict(s);
              v.set("Length", a.length);
              v.set("Subtype", o.Name.get("Form"));
              v.set("Resources", this._getSaveFieldResources(s));
              v.set("BBox", c);
              const b = [`${this.ref.num} ${this.ref.gen} obj\n`];
              (0, u.writeDict)(l, b, g);
              b.push("\nendobj\n");
              const y = [`${d.num} ${d.gen} obj\n`];
              (0, u.writeDict)(v, y, m);
              y.push(" stream\n");
              y.push(a);
              y.push("\nendstream\nendobj\n");
              return [
                { ref: this.ref, data: b.join(""), xfa: h },
                { ref: d, data: y.join(""), xfa: null },
              ];
            }
            async _getAppearance(e, t, i) {
              const r = this.hasFieldFlag(n.AnnotationFieldFlag.PASSWORD);
              if (!i || r) return null;
              const a = i[this.data.id] && i[this.data.id].value;
              if (void 0 === a) return null;
              if ("" === a) return "";
              const o = this.data.rect[3] - this.data.rect[1],
                l = this.data.rect[2] - this.data.rect[0];
              if (!this.data.defaultAppearance) {
                this.data.defaultAppearance = "/Helvetica 0 Tf 0 g";
                this.data.defaultAppearanceData = (0, s.parseDefaultAppearance)(
                  this.data.defaultAppearance
                );
              }
              const c = await this._getFontData(e, t),
                h = this._computeFontSize(c, o);
              let u = c.descent;
              if (isNaN(u)) u = 0;
              const d = 2 + Math.abs(u) * h,
                f = this.data.defaultAppearance,
                p = this.data.textAlignment;
              if (this.data.multiLine)
                return this._getMultilineAppearance(f, a, c, h, l, o, p, 2, d);
              const g = c.encodeString(a).join("");
              if (this.data.comb)
                return this._getCombAppearance(f, c, g, l, 2, d);
              if (0 === p || p > 2)
                return (
                  "/Tx BMC q BT " +
                  f +
                  ` 1 0 0 1 2 ${d} Tm (${(0, n.escapeString)(g)}) Tj ET Q EMC`
                );
              else
                return (
                  "/Tx BMC q BT " +
                  f +
                  ` 1 0 0 1 0 0 Tm ${this._renderText(
                    g,
                    c,
                    h,
                    l,
                    p,
                    2,
                    d
                  )} ET Q EMC`
                );
            }
            async _getFontData(e, t) {
              const i = new c.OperatorList(),
                n = {
                  font: null,
                  clone() {
                    return this;
                  },
                },
                { fontName: r, fontSize: a } = this.data.defaultAppearanceData;
              await e.handleSetFont(
                this._fieldResources.mergedResources,
                [r, a],
                null,
                i,
                t,
                n,
                null
              );
              return n.font;
            }
            _computeFontSize(e, t) {
              let i = this.data.defaultAppearanceData.fontSize;
              if (!i) {
                const { fontColor: n, fontName: r } =
                  this.data.defaultAppearanceData;
                let a;
                if (e.capHeight) a = e.capHeight;
                else {
                  const t = e.charsToGlyphs(e.encodeString("M").join(""));
                  if (1 === t.length && t[0].width)
                    a = (t[0].width / 1e3) * 0.7;
                  else a = 0.7;
                }
                i = Math.max(1, Math.floor(t / (1.5 * a)));
                this.data.defaultAppearance = (0, s.createDefaultAppearance)({
                  fontSize: i,
                  fontName: r,
                  fontColor: n,
                });
              }
              return i;
            }
            _renderText(e, t, i, r, a, s, o) {
              const l = t.charsToGlyphs(e),
                c = i / 1e3;
              let h,
                u = 0;
              for (const e of l) u += e.width * c;
              if (1 === a) h = (r - u) / 2;
              else if (2 === a) h = r - u - s;
              else h = s;
              h = h.toFixed(2);
              return `${h} ${(o = o.toFixed(2))} Td (${(0, n.escapeString)(
                e
              )}) Tj`;
            }
            _getSaveFieldResources(e) {
              const {
                  localResources: t,
                  appearanceResources: i,
                  acroFormResources: n,
                } = this._fieldResources,
                r =
                  this.data.defaultAppearanceData &&
                  this.data.defaultAppearanceData.fontName.name;
              if (!r) return t || o.Dict.empty;
              for (const e of [t, i])
                if (e instanceof o.Dict) {
                  const t = e.get("Font");
                  if (t instanceof o.Dict && t.has(r)) return e;
                }
              if (n instanceof o.Dict) {
                const i = n.get("Font");
                if (i instanceof o.Dict && i.has(r)) {
                  const n = new o.Dict(e);
                  n.set(r, i.getRaw(r));
                  const a = new o.Dict(e);
                  a.set("Font", n);
                  return o.Dict.merge({
                    xref: e,
                    dictArray: [a, t],
                    mergeSubDicts: !0,
                  });
                }
              }
              return t || o.Dict.empty;
            }
            getFieldObject() {
              if ("Sig" === this.data.fieldType)
                return { id: this.data.id, value: null, type: "signature" };
              else return null;
            }
          }
          class b extends v {
            constructor(e) {
              super(e);
              this._hasText = !0;
              const t = e.dict;
              if (!(0, n.isString)(this.data.fieldValue))
                this.data.fieldValue = "";
              let i = (0, a.getInheritableProperty)({ dict: t, key: "Q" });
              if (!Number.isInteger(i) || i < 0 || i > 2) i = null;
              this.data.textAlignment = i;
              let r = (0, a.getInheritableProperty)({ dict: t, key: "MaxLen" });
              if (!Number.isInteger(r) || r < 0) r = null;
              this.data.maxLen = r;
              this.data.multiLine = this.hasFieldFlag(
                n.AnnotationFieldFlag.MULTILINE
              );
              this.data.comb =
                this.hasFieldFlag(n.AnnotationFieldFlag.COMB) &&
                !this.hasFieldFlag(n.AnnotationFieldFlag.MULTILINE) &&
                !this.hasFieldFlag(n.AnnotationFieldFlag.PASSWORD) &&
                !this.hasFieldFlag(n.AnnotationFieldFlag.FILESELECT) &&
                null !== this.data.maxLen;
            }
            _getCombAppearance(e, t, i, r, a, s) {
              const o = (r / this.data.maxLen).toFixed(2),
                l = [],
                c = t.getCharPositions(i);
              for (const [e, t] of c)
                l.push(`(${(0, n.escapeString)(i.substring(e, t))}) Tj`);
              return (
                "/Tx BMC q BT " +
                e +
                ` 1 0 0 1 ${a} ${s} Tm ${l.join(` ${o} 0 Td `)} ET Q EMC`
              );
            }
            _getMultilineAppearance(e, t, i, n, r, a, s, o, l) {
              const c = t.split(/\r\n|\r|\n/),
                h = [],
                u = r - 2 * o;
              for (const e of c) {
                const t = this._splitLine(e, i, n, u);
                for (const e of t) {
                  const t = 0 === h.length ? o : 0;
                  h.push(this._renderText(e, i, n, r, s, t, -n));
                }
              }
              return (
                "/Tx BMC q BT " +
                e +
                ` 1 0 0 1 0 ${a} Tm ${h.join("\n")} ET Q EMC`
              );
            }
            _splitLine(e, t, i, n) {
              e = t.encodeString(e).join("");
              const r = t.charsToGlyphs(e);
              if (r.length <= 1) return [e];
              const a = t.getCharPositions(e),
                s = i / 1e3,
                o = [];
              let l = -1,
                c = -1,
                h = -1,
                u = 0,
                d = 0;
              for (let t = 0, i = r.length; t < i; t++) {
                const [i, f] = a[t],
                  p = r[t],
                  g = p.width * s;
                if (" " === p.unicode)
                  if (d + g > n) {
                    o.push(e.substring(u, i));
                    u = i;
                    d = g;
                    l = -1;
                    h = -1;
                  } else {
                    d += g;
                    l = i;
                    c = f;
                    h = t;
                  }
                else if (d + g > n)
                  if (-1 !== l) {
                    o.push(e.substring(u, c));
                    u = c;
                    t = h + 1;
                    l = -1;
                    d = 0;
                  } else {
                    o.push(e.substring(u, i));
                    u = i;
                    d = g;
                  }
                else d += g;
              }
              if (u < e.length) o.push(e.substring(u, e.length));
              return o;
            }
            getFieldObject() {
              return {
                id: this.data.id,
                value: this.data.fieldValue,
                defaultValue: this.data.defaultFieldValue,
                multiline: this.data.multiLine,
                password: this.hasFieldFlag(n.AnnotationFieldFlag.PASSWORD),
                charLimit: this.data.maxLen,
                comb: this.data.comb,
                editable: !this.data.readOnly,
                hidden: this.data.hidden,
                name: this.data.fieldName,
                rect: this.data.rect,
                actions: this.data.actions,
                type: "text",
              };
            }
          }
          class y extends v {
            constructor(e) {
              super(e);
              this.checkedAppearance = null;
              this.uncheckedAppearance = null;
              this.data.checkBox =
                !this.hasFieldFlag(n.AnnotationFieldFlag.RADIO) &&
                !this.hasFieldFlag(n.AnnotationFieldFlag.PUSHBUTTON);
              this.data.radioButton =
                this.hasFieldFlag(n.AnnotationFieldFlag.RADIO) &&
                !this.hasFieldFlag(n.AnnotationFieldFlag.PUSHBUTTON);
              this.data.pushButton = this.hasFieldFlag(
                n.AnnotationFieldFlag.PUSHBUTTON
              );
              this.data.isTooltipOnly = !1;
              if (this.data.checkBox) this._processCheckBox(e);
              else if (this.data.radioButton) this._processRadioButton(e);
              else if (this.data.pushButton) this._processPushButton(e);
              else
                (0, n.warn)("Invalid field flags for button widget annotation");
            }
            getOperatorList(e, t, i, n) {
              if (this.data.pushButton)
                return super.getOperatorList(e, t, !1, n);
              if (n) {
                const r = n[this.data.id] && n[this.data.id].value;
                if (void 0 === r) return super.getOperatorList(e, t, i, n);
                let a;
                if (r) a = this.checkedAppearance;
                else a = this.uncheckedAppearance;
                if (a) {
                  const r = this.appearance;
                  this.appearance = a;
                  const s = super.getOperatorList(e, t, i, n);
                  this.appearance = r;
                  return s;
                }
                return Promise.resolve(new c.OperatorList());
              }
              return super.getOperatorList(e, t, i, n);
            }
            async save(e, t, i) {
              if (this.data.checkBox) return this._saveCheckbox(e, t, i);
              if (this.data.radioButton) return this._saveRadioButton(e, t, i);
              else return null;
            }
            async _saveCheckbox(e, t, i) {
              const r = i[this.data.id] && i[this.data.id].value;
              if (void 0 === r) return null;
              if (
                (this.data.fieldValue && "Off" !== this.data.fieldValue) === r
              )
                return null;
              const a = e.xref.fetchIfRef(this.ref);
              if (!(0, o.isDict)(a)) return null;
              const s = {
                  path: (0, n.stringToPDFString)(a.get("T") || ""),
                  value: r ? this.data.exportValue : "",
                },
                l = o.Name.get(r ? this.data.exportValue : "Off");
              a.set("V", l);
              a.set("AS", l);
              a.set("M", `D:${(0, n.getModificationDate)()}`);
              const c = e.xref.encrypt;
              let h = null;
              if (c) h = c.createCipherTransform(this.ref.num, this.ref.gen);
              const d = [`${this.ref.num} ${this.ref.gen} obj\n`];
              (0, u.writeDict)(a, d, h);
              d.push("\nendobj\n");
              return [{ ref: this.ref, data: d.join(""), xfa: s }];
            }
            async _saveRadioButton(e, t, i) {
              const r = i[this.data.id] && i[this.data.id].value;
              if (void 0 === r) return null;
              if ((this.data.fieldValue === this.data.buttonValue) === r)
                return null;
              const a = e.xref.fetchIfRef(this.ref);
              if (!(0, o.isDict)(a)) return null;
              const s = {
                  path: (0, n.stringToPDFString)(a.get("T") || ""),
                  value: r ? this.data.buttonValue : "",
                },
                l = o.Name.get(r ? this.data.buttonValue : "Off");
              let c = null;
              const h = e.xref.encrypt;
              if (r)
                if ((0, o.isRef)(this.parent)) {
                  const t = e.xref.fetch(this.parent);
                  let i = null;
                  if (h)
                    i = h.createCipherTransform(
                      this.parent.num,
                      this.parent.gen
                    );
                  t.set("V", l);
                  c = [`${this.parent.num} ${this.parent.gen} obj\n`];
                  (0, u.writeDict)(t, c, i);
                  c.push("\nendobj\n");
                } else if ((0, o.isDict)(this.parent)) this.parent.set("V", l);
              a.set("AS", l);
              a.set("M", `D:${(0, n.getModificationDate)()}`);
              let d = null;
              if (h) d = h.createCipherTransform(this.ref.num, this.ref.gen);
              const f = [`${this.ref.num} ${this.ref.gen} obj\n`];
              (0, u.writeDict)(a, f, d);
              f.push("\nendobj\n");
              const p = [{ ref: this.ref, data: f.join(""), xfa: s }];
              if (null !== c)
                p.push({ ref: this.parent, data: c.join(""), xfa: null });
              return p;
            }
            _processCheckBox(e) {
              const t = e.dict.get("AP");
              if (!(0, o.isDict)(t)) return;
              const i = t.get("N");
              if (!(0, o.isDict)(i)) return;
              const n = i.getKeys();
              if (!n.includes("Off")) n.push("Off");
              if (2 === n.length) {
                this.data.exportValue = "Off" === n[0] ? n[1] : n[0];
                this.checkedAppearance = i.get(this.data.exportValue);
                this.uncheckedAppearance = i.get("Off") || null;
                this._streams.push(this.checkedAppearance);
                if (this.uncheckedAppearance)
                  this._streams.push(this.uncheckedAppearance);
                this._fallbackFontDict = this.fallbackFontDict;
              }
            }
            _processRadioButton(e) {
              this.data.fieldValue = this.data.buttonValue = null;
              const t = e.dict.get("Parent");
              if ((0, o.isDict)(t)) {
                this.parent = e.dict.getRaw("Parent");
                const i = t.get("V");
                if ((0, o.isName)(i))
                  this.data.fieldValue = this._decodeFormValue(i);
              }
              const i = e.dict.get("AP");
              if (!(0, o.isDict)(i)) return;
              const n = i.get("N");
              if ((0, o.isDict)(n)) {
                for (const e of n.getKeys())
                  if ("Off" !== e) {
                    this.data.buttonValue = this._decodeFormValue(e);
                    break;
                  }
                this.checkedAppearance = n.get(this.data.buttonValue);
                this.uncheckedAppearance = n.get("Off") || null;
                this._streams.push(this.checkedAppearance);
                if (this.uncheckedAppearance)
                  this._streams.push(this.uncheckedAppearance);
                this._fallbackFontDict = this.fallbackFontDict;
              }
            }
            _processPushButton(e) {
              if (
                e.dict.has("A") ||
                e.dict.has("AA") ||
                this.data.alternativeText
              ) {
                this.data.isTooltipOnly = !e.dict.has("A") && !e.dict.has("AA");
                r.Catalog.parseDestDictionary({
                  destDict: e.dict,
                  resultObj: this.data,
                  docBaseUrl: e.pdfManager.docBaseUrl,
                });
              } else
                (0, n.warn)(
                  "Push buttons without action dictionaries are not supported"
                );
            }
            getFieldObject() {
              let e,
                t = "button";
              if (this.data.checkBox) {
                t = "checkbox";
                e = this.data.exportValue;
              } else if (this.data.radioButton) {
                t = "radiobutton";
                e = this.data.buttonValue;
              }
              return {
                id: this.data.id,
                value: this.data.fieldValue || "Off",
                defaultValue: this.data.defaultFieldValue,
                exportValues: e,
                editable: !this.data.readOnly,
                name: this.data.fieldName,
                rect: this.data.rect,
                hidden: this.data.hidden,
                actions: this.data.actions,
                type: t,
              };
            }
            get fallbackFontDict() {
              const e = new o.Dict();
              e.set("BaseFont", o.Name.get("ZapfDingbats"));
              e.set("Type", o.Name.get("FallbackType"));
              e.set("Subtype", o.Name.get("FallbackType"));
              e.set("Encoding", o.Name.get("ZapfDingbatsEncoding"));
              return (0, n.shadow)(this, "fallbackFontDict", e);
            }
          }
          class w extends v {
            constructor(e) {
              super(e);
              this.data.options = [];
              const t = (0, a.getInheritableProperty)({
                dict: e.dict,
                key: "Opt",
              });
              if (Array.isArray(t)) {
                const i = e.xref;
                for (let e = 0, n = t.length; e < n; e++) {
                  const n = i.fetchIfRef(t[e]),
                    r = Array.isArray(n);
                  this.data.options[e] = {
                    exportValue: this._decodeFormValue(
                      r ? i.fetchIfRef(n[0]) : n
                    ),
                    displayValue: this._decodeFormValue(
                      r ? i.fetchIfRef(n[1]) : n
                    ),
                  };
                }
              }
              if ((0, n.isString)(this.data.fieldValue))
                this.data.fieldValue = [this.data.fieldValue];
              else if (!this.data.fieldValue) this.data.fieldValue = [];
              this.data.combo = this.hasFieldFlag(n.AnnotationFieldFlag.COMBO);
              this.data.multiSelect = this.hasFieldFlag(
                n.AnnotationFieldFlag.MULTISELECT
              );
              this._hasText = !0;
            }
            getFieldObject() {
              const e = this.data.combo ? "combobox" : "listbox",
                t =
                  this.data.fieldValue.length > 0
                    ? this.data.fieldValue[0]
                    : null;
              return {
                id: this.data.id,
                value: t,
                defaultValue: this.data.defaultFieldValue,
                editable: !this.data.readOnly,
                name: this.data.fieldName,
                rect: this.data.rect,
                numItems: this.data.fieldValue.length,
                multipleSelection: this.data.multiSelect,
                hidden: this.data.hidden,
                actions: this.data.actions,
                type: e,
              };
            }
          }
          class x extends m {
            constructor(e) {
              super(e);
              const t = e.dict;
              this.data.annotationType = n.AnnotationType.TEXT;
              if (this.data.hasAppearance) this.data.name = "NoIcon";
              else {
                this.data.rect[1] = this.data.rect[3] - 22;
                this.data.rect[2] = this.data.rect[0] + 22;
                this.data.name = t.has("Name") ? t.get("Name").name : "Note";
              }
              if (t.has("State")) {
                this.data.state = t.get("State") || null;
                this.data.stateModel = t.get("StateModel") || null;
              } else {
                this.data.state = null;
                this.data.stateModel = null;
              }
            }
          }
          class k extends p {
            constructor(e) {
              super(e);
              this.data.annotationType = n.AnnotationType.LINK;
              const t = d(e.dict, this.rectangle);
              if (t) this.data.quadPoints = t;
              r.Catalog.parseDestDictionary({
                destDict: e.dict,
                resultObj: this.data,
                docBaseUrl: e.pdfManager.docBaseUrl,
              });
            }
          }
          class C extends p {
            constructor(e) {
              super(e);
              this.data.annotationType = n.AnnotationType.POPUP;
              let t = e.dict.get("Parent");
              if (!t) {
                (0, n.warn)(
                  "Popup annotation has a missing or invalid parent annotation."
                );
                return;
              }
              const i = t.get("Subtype");
              this.data.parentType = (0, o.isName)(i) ? i.name : null;
              const r = e.dict.getRaw("Parent");
              this.data.parentId = (0, o.isRef)(r) ? r.toString() : null;
              const a = t.getArray("Rect");
              if (Array.isArray(a) && 4 === a.length)
                this.data.parentRect = n.Util.normalizeRect(a);
              else this.data.parentRect = [0, 0, 0, 0];
              const s = t.get("RT");
              if ((0, o.isName)(s, n.AnnotationReplyType.GROUP))
                t = t.get("IRT");
              if (!t.has("M")) this.data.modificationDate = null;
              else {
                this.setModificationDate(t.get("M"));
                this.data.modificationDate = this.modificationDate;
              }
              if (!t.has("C")) this.data.color = null;
              else {
                this.setColor(t.getArray("C"));
                this.data.color = this.color;
              }
              if (!this.viewable) {
                const e = t.get("F");
                if (this._isViewable(e)) this.setFlags(e);
              }
              this.data.title = (0, n.stringToPDFString)(t.get("T") || "");
              this.data.contents = (0, n.stringToPDFString)(
                t.get("Contents") || ""
              );
            }
          }
          class S extends m {
            constructor(e) {
              super(e);
              this.data.annotationType = n.AnnotationType.FREETEXT;
            }
          }
          class _ extends m {
            constructor(e) {
              super(e);
              this.data.annotationType = n.AnnotationType.LINE;
              this.data.lineCoordinates = n.Util.normalizeRect(
                e.dict.getArray("L")
              );
            }
          }
          class A extends m {
            constructor(e) {
              super(e);
              this.data.annotationType = n.AnnotationType.SQUARE;
            }
          }
          class F extends m {
            constructor(e) {
              super(e);
              this.data.annotationType = n.AnnotationType.CIRCLE;
            }
          }
          class T extends m {
            constructor(e) {
              super(e);
              this.data.annotationType = n.AnnotationType.POLYLINE;
              this.data.vertices = [];
              const t = e.dict.getArray("Vertices");
              if (Array.isArray(t))
                for (let e = 0, i = t.length; e < i; e += 2)
                  this.data.vertices.push({ x: t[e], y: t[e + 1] });
            }
          }
          class P extends T {
            constructor(e) {
              super(e);
              this.data.annotationType = n.AnnotationType.POLYGON;
            }
          }
          class E extends m {
            constructor(e) {
              super(e);
              this.data.annotationType = n.AnnotationType.CARET;
            }
          }
          class I extends m {
            constructor(e) {
              super(e);
              this.data.annotationType = n.AnnotationType.INK;
              this.data.inkLists = [];
              const t = e.dict.getArray("InkList");
              if (!Array.isArray(t)) return;
              const i = e.xref;
              for (let e = 0, n = t.length; e < n; ++e) {
                this.data.inkLists.push([]);
                for (let n = 0, r = t[e].length; n < r; n += 2)
                  this.data.inkLists[e].push({
                    x: i.fetchIfRef(t[e][n]),
                    y: i.fetchIfRef(t[e][n + 1]),
                  });
              }
            }
          }
          class D extends m {
            constructor(e) {
              super(e);
              this.data.annotationType = n.AnnotationType.HIGHLIGHT;
              if ((this.data.quadPoints = d(e.dict, null))) {
                if (!this.appearance) {
                  const t = this.color
                    ? Array.from(this.color).map((e) => e / 255)
                    : [1, 1, 0];
                  this._setDefaultAppearance({
                    xref: e.xref,
                    fillColor: t,
                    blendMode: "Multiply",
                    pointsCallback: (e, t) => {
                      e.push(`${t[0].x} ${t[0].y} m`);
                      e.push(`${t[1].x} ${t[1].y} l`);
                      e.push(`${t[3].x} ${t[3].y} l`);
                      e.push(`${t[2].x} ${t[2].y} l`);
                      e.push("f");
                      return [t[0].x, t[1].x, t[3].y, t[1].y];
                    },
                  });
                }
              } else this.data.hasPopup = !1;
            }
          }
          class O extends m {
            constructor(e) {
              super(e);
              this.data.annotationType = n.AnnotationType.UNDERLINE;
              if ((this.data.quadPoints = d(e.dict, null))) {
                if (!this.appearance) {
                  const t = this.color
                    ? Array.from(this.color).map((e) => e / 255)
                    : [0, 0, 0];
                  this._setDefaultAppearance({
                    xref: e.xref,
                    extra: "[] 0 d 1 w",
                    strokeColor: t,
                    pointsCallback: (e, t) => {
                      e.push(`${t[2].x} ${t[2].y} m`);
                      e.push(`${t[3].x} ${t[3].y} l`);
                      e.push("S");
                      return [t[0].x, t[1].x, t[3].y, t[1].y];
                    },
                  });
                }
              } else this.data.hasPopup = !1;
            }
          }
          class R extends m {
            constructor(e) {
              super(e);
              this.data.annotationType = n.AnnotationType.SQUIGGLY;
              if ((this.data.quadPoints = d(e.dict, null))) {
                if (!this.appearance) {
                  const t = this.color
                    ? Array.from(this.color).map((e) => e / 255)
                    : [0, 0, 0];
                  this._setDefaultAppearance({
                    xref: e.xref,
                    extra: "[] 0 d 1 w",
                    strokeColor: t,
                    pointsCallback: (e, t) => {
                      const i = (t[0].y - t[2].y) / 6;
                      let n = i,
                        r = t[2].x;
                      const a = t[2].y,
                        s = t[3].x;
                      e.push(`${r} ${a + n} m`);
                      do {
                        r += 2;
                        n = 0 === n ? i : 0;
                        e.push(`${r} ${a + n} l`);
                      } while (r < s);
                      e.push("S");
                      return [t[2].x, s, a - 2 * i, a + 2 * i];
                    },
                  });
                }
              } else this.data.hasPopup = !1;
            }
          }
          class N extends m {
            constructor(e) {
              super(e);
              this.data.annotationType = n.AnnotationType.STRIKEOUT;
              if ((this.data.quadPoints = d(e.dict, null))) {
                if (!this.appearance) {
                  const t = this.color
                    ? Array.from(this.color).map((e) => e / 255)
                    : [0, 0, 0];
                  this._setDefaultAppearance({
                    xref: e.xref,
                    extra: "[] 0 d 1 w",
                    strokeColor: t,
                    pointsCallback: (e, t) => {
                      e.push(
                        (t[0].x + t[2].x) / 2 + ` ${(t[0].y + t[2].y) / 2} m`
                      );
                      e.push(
                        (t[1].x + t[3].x) / 2 + ` ${(t[1].y + t[3].y) / 2} l`
                      );
                      e.push("S");
                      return [t[0].x, t[1].x, t[3].y, t[1].y];
                    },
                  });
                }
              } else this.data.hasPopup = !1;
            }
          }
          class M extends m {
            constructor(e) {
              super(e);
              this.data.annotationType = n.AnnotationType.STAMP;
            }
          }
          class B extends m {
            constructor(e) {
              super(e);
              const t = new r.FileSpec(e.dict.get("FS"), e.xref);
              this.data.annotationType = n.AnnotationType.FILEATTACHMENT;
              this.data.file = t.serializable;
            }
          }
        },
        (e, t, i) => {
          Object.defineProperty(t, "__esModule", { value: !0 });
          t.createDefaultAppearance = function ({
            fontSize: e,
            fontName: t,
            fontColor: i,
          }) {
            let n;
            if (i.every((e) => 0 === e)) n = "0 g";
            else
              n =
                Array.from(i)
                  .map((e) => (e / 255).toFixed(2))
                  .join(" ") + " rg";
            return `/${(0, s.escapePDFName)(t.name)} ${e} Tf ${n}`;
          };
          t.parseDefaultAppearance = function (e) {
            return new c(e).parse();
          };
          var n = i(5),
            r = i(2),
            a = i(23),
            s = i(8),
            o = i(27),
            l = i(12);
          class c extends o.EvaluatorPreprocessor {
            constructor(e) {
              super(new l.StringStream(e));
            }
            parse() {
              const e = { fn: 0, args: [] },
                t = {
                  fontSize: 0,
                  fontName: n.Name.get(""),
                  fontColor: new Uint8ClampedArray([0, 0, 0]),
                };
              try {
                for (;;) {
                  e.args.length = 0;
                  if (!this.read(e)) break;
                  if (0 !== this.savedStatesDepth) continue;
                  const { fn: i, args: s } = e;
                  switch (0 | i) {
                    case r.OPS.setFont:
                      const [e, i] = s;
                      if ((0, n.isName)(e)) t.fontName = e;
                      if ("number" == typeof i && i > 0) t.fontSize = i;
                      break;
                    case r.OPS.setFillRGBColor:
                      a.ColorSpace.singletons.rgb.getRgbItem(
                        s,
                        0,
                        t.fontColor,
                        0
                      );
                      break;
                    case r.OPS.setFillGray:
                      a.ColorSpace.singletons.gray.getRgbItem(
                        s,
                        0,
                        t.fontColor,
                        0
                      );
                      break;
                    case r.OPS.setFillColorSpace:
                      a.ColorSpace.singletons.cmyk.getRgbItem(
                        s,
                        0,
                        t.fontColor,
                        0
                      );
                  }
                }
              } catch (e) {
                (0, r.warn)(
                  `parseDefaultAppearance - ignoring errors: "${e}".`
                );
              }
              return t;
            }
          }
        },
        (e, t, i) => {
          Object.defineProperty(t, "__esModule", { value: !0 });
          t.PartialEvaluator = t.EvaluatorPreprocessor = void 0;
          var n = i(2),
            r = i(28),
            a = i(5),
            s = i(29),
            o = i(32),
            l = i(8),
            c = i(35),
            h = i(34),
            u = i(38),
            d = i(39),
            f = i(11),
            p = i(24),
            g = i(41),
            m = i(23),
            v = i(12),
            b = i(33),
            y = i(42),
            w = i(43),
            x = i(44),
            k = i(45);
          const C = Object.freeze({
              maxImageSize: -1,
              disableFontFace: !1,
              ignoreErrors: !1,
              isEvalSupported: !0,
              fontExtraProperties: !1,
            }),
            S = Promise.resolve();
          function _(e, t = !1) {
            if (Array.isArray(e)) {
              for (let t = 0, i = e.length; t < i; t++) {
                const i = _(e[t], !0);
                if (i) return i;
              }
              (0, n.warn)(`Unsupported blend mode Array: ${e}`);
              return "source-over";
            }
            if (!(0, a.isName)(e))
              if (t) return null;
              else return "source-over";
            switch (e.name) {
              case "Normal":
              case "Compatible":
                return "source-over";
              case "Multiply":
                return "multiply";
              case "Screen":
                return "screen";
              case "Overlay":
                return "overlay";
              case "Darken":
                return "darken";
              case "Lighten":
                return "lighten";
              case "ColorDodge":
                return "color-dodge";
              case "ColorBurn":
                return "color-burn";
              case "HardLight":
                return "hard-light";
              case "SoftLight":
                return "soft-light";
              case "Difference":
                return "difference";
              case "Exclusion":
                return "exclusion";
              case "Hue":
                return "hue";
              case "Saturation":
                return "saturation";
              case "Color":
                return "color";
              case "Luminosity":
                return "luminosity";
            }
            if (t) return null;
            (0, n.warn)(`Unsupported blend mode: ${e.name}`);
            return "source-over";
          }
          class A {
            static get TIME_SLOT_DURATION_MS() {
              return (0, n.shadow)(this, "TIME_SLOT_DURATION_MS", 20);
            }
            static get CHECK_TIME_EVERY() {
              return (0, n.shadow)(this, "CHECK_TIME_EVERY", 100);
            }
            constructor() {
              this.reset();
            }
            check() {
              if (++this.checked < A.CHECK_TIME_EVERY) return !1;
              this.checked = 0;
              return this.endTime <= Date.now();
            }
            reset() {
              this.endTime = Date.now() + A.TIME_SLOT_DURATION_MS;
              this.checked = 0;
            }
          }
          class F {
            constructor({
              xref: e,
              handler: t,
              pageIndex: i,
              idFactory: n,
              fontCache: r,
              builtInCMapCache: a,
              globalImageCache: s,
              options: o = null,
            }) {
              this.xref = e;
              this.handler = t;
              this.pageIndex = i;
              this.idFactory = n;
              this.fontCache = r;
              this.builtInCMapCache = a;
              this.globalImageCache = s;
              this.options = o || C;
              this.parsingType3Font = !1;
              this._fetchBuiltInCMapBound = this.fetchBuiltInCMap.bind(this);
            }
            get _pdfFunctionFactory() {
              const e = new d.PDFFunctionFactory({
                xref: this.xref,
                isEvalSupported: this.options.isEvalSupported,
              });
              return (0, n.shadow)(this, "_pdfFunctionFactory", e);
            }
            clone(e = C) {
              var t = Object.create(this);
              t.options = e;
              return t;
            }
            hasBlendModes(e, t) {
              if (!(e instanceof a.Dict)) return !1;
              if (e.objId && t.has(e.objId)) return !1;
              const i = new a.RefSet(t);
              if (e.objId) i.put(e.objId);
              for (var r = [e], s = this.xref; r.length; ) {
                var o = r.shift(),
                  c = o.get("ExtGState");
                if (c instanceof a.Dict)
                  for (let e of c.getRawValues()) {
                    if (e instanceof a.Ref) {
                      if (i.has(e)) continue;
                      try {
                        e = s.fetch(e);
                      } catch (t) {
                        if (t instanceof l.MissingDataException) throw t;
                        i.put(e);
                        (0, n.info)(
                          `hasBlendModes - ignoring ExtGState: "${t}".`
                        );
                        continue;
                      }
                    }
                    if (!(e instanceof a.Dict)) continue;
                    if (e.objId) i.put(e.objId);
                    const t = e.get("BM");
                    if (!(t instanceof a.Name)) {
                      if (void 0 !== t && Array.isArray(t))
                        for (const e of t)
                          if (e instanceof a.Name && "Normal" !== e.name)
                            return !0;
                    } else if ("Normal" !== t.name) return !0;
                  }
                var h = o.get("XObject");
                if (h instanceof a.Dict)
                  for (let e of h.getRawValues()) {
                    if (e instanceof a.Ref) {
                      if (i.has(e)) continue;
                      try {
                        e = s.fetch(e);
                      } catch (t) {
                        if (t instanceof l.MissingDataException) throw t;
                        i.put(e);
                        (0, n.info)(
                          `hasBlendModes - ignoring XObject: "${t}".`
                        );
                        continue;
                      }
                    }
                    if ((0, a.isStream)(e)) {
                      if (e.dict.objId) i.put(e.dict.objId);
                      var u = e.dict.get("Resources");
                      if (u instanceof a.Dict)
                        if (!u.objId || !i.has(u.objId)) {
                          r.push(u);
                          if (u.objId) i.put(u.objId);
                        }
                    }
                  }
              }
              i.forEach((e) => {
                t.put(e);
              });
              return !1;
            }
            async fetchBuiltInCMap(e) {
              const t = this.builtInCMapCache.get(e);
              if (t) return t;
              const i = this.handler
                  .sendWithStream("FetchBuiltInCMap", { name: e })
                  .getReader(),
                r = await new Promise(function (e, t) {
                  !(function n() {
                    i.read().then(function ({ value: t, done: i }) {
                      if (!i) {
                        e(t);
                        n();
                      }
                    }, t);
                  })();
                });
              if (r.compressionType !== n.CMapCompressionType.NONE)
                this.builtInCMapCache.set(e, r);
              return r;
            }
            async buildFormXObject(e, t, i, r, s, o, l) {
              var c = t.dict,
                h = c.getArray("Matrix"),
                u = c.getArray("BBox");
              if (Array.isArray(u) && 4 === u.length)
                u = n.Util.normalizeRect(u);
              else u = null;
              let d = null;
              if (c.has("OC")) {
                d = await this.parseMarkedContentProps(c.get("OC"), e);
                r.addOp(n.OPS.beginMarkedContentProps, ["OC", d]);
              }
              var f = c.get("Group");
              if (f) {
                var p = {
                    matrix: h,
                    bbox: u,
                    smask: i,
                    isolated: !1,
                    knockout: !1,
                  },
                  g = f.get("S"),
                  v = null;
                if ((0, a.isName)(g, "Transparency")) {
                  p.isolated = f.get("I") || !1;
                  p.knockout = f.get("K") || !1;
                  if (f.has("CS")) {
                    const t = f.getRaw("CS"),
                      i = m.ColorSpace.getCached(t, this.xref, l);
                    if (i) v = i;
                    else
                      v = await this.parseColorSpace({
                        cs: t,
                        resources: e,
                        localColorSpaceCache: l,
                      });
                  }
                }
                if (i && i.backdrop) {
                  v = v || m.ColorSpace.singletons.rgb;
                  i.backdrop = v.getRgb(i.backdrop, 0);
                }
                r.addOp(n.OPS.beginGroup, [p]);
              }
              r.addOp(n.OPS.paintFormXObjectBegin, [h, u]);
              return this.getOperatorList({
                stream: t,
                task: s,
                resources: c.get("Resources") || e,
                operatorList: r,
                initialState: o,
              }).then(function () {
                r.addOp(n.OPS.paintFormXObjectEnd, []);
                if (f) r.addOp(n.OPS.endGroup, [p]);
                if (d) r.addOp(n.OPS.endMarkedContent, []);
              });
            }
            _sendImgData(e, t, i = !1) {
              const n = t ? [t.data.buffer] : null;
              if (this.parsingType3Font || i)
                return this.handler.send("commonobj", [e, "Image", t], n);
              else
                return this.handler.send(
                  "obj",
                  [e, this.pageIndex, "Image", t],
                  n
                );
            }
            async buildPaintImageXObject({
              resources: e,
              image: t,
              isInline: i = !1,
              operatorList: r,
              cacheKey: a,
              localImageCache: s,
              localColorSpaceCache: o,
            }) {
              var l = t.dict;
              const c = l.objId;
              var h = l.get("Width", "W"),
                u = l.get("Height", "H");
              if (!(h && (0, n.isNum)(h) && u && (0, n.isNum)(u))) {
                (0, n.warn)("Image dimensions are missing, or not numbers.");
                return;
              }
              var d,
                f,
                p = this.options.maxImageSize;
              if (-1 !== p && h * u > p) {
                (0, n.warn)(
                  "Image exceeded maximum allowed size and was removed."
                );
                return;
              }
              if (l.get("ImageMask", "IM")) {
                var g = l.get("Width", "W"),
                  m = l.get("Height", "H"),
                  b = (g + 7) >> 3,
                  y = t.getBytes(b * m, !0),
                  w = l.getArray("Decode", "D");
                (d = k.PDFImage.createMask({
                  imgArray: y,
                  width: g,
                  height: m,
                  imageIsFromDecodeStream: t instanceof v.DecodeStream,
                  inverseDecode: !!w && w[0] > 0,
                })).cached = !!a;
                f = [d];
                r.addOp(n.OPS.paintImageMaskXObject, f);
                if (a)
                  s.set(a, c, { fn: n.OPS.paintImageMaskXObject, args: f });
                return;
              }
              var x = l.get("SMask", "SM") || !1,
                C = l.get("Mask") || !1;
              if (i && !x && !C && h + u < 200) {
                const a = new k.PDFImage({
                  xref: this.xref,
                  res: e,
                  image: t,
                  isInline: i,
                  pdfFunctionFactory: this._pdfFunctionFactory,
                  localColorSpaceCache: o,
                });
                d = a.createImageData(!0);
                r.addOp(n.OPS.paintInlineImageXObject, [d]);
                return;
              }
              let S = `img_${this.idFactory.createObjId()}`,
                _ = !1;
              if (this.parsingType3Font)
                S = `${this.idFactory.getDocId()}_type3_${S}`;
              else if (c) {
                _ = this.globalImageCache.shouldCache(c, this.pageIndex);
                if (_) S = `${this.idFactory.getDocId()}_${S}`;
              }
              r.addDependency(S);
              f = [S, h, u];
              k.PDFImage.buildImage({
                xref: this.xref,
                res: e,
                image: t,
                isInline: i,
                pdfFunctionFactory: this._pdfFunctionFactory,
                localColorSpaceCache: o,
              })
                .then((e) => {
                  d = e.createImageData(!1);
                  return this._sendImgData(S, d, _);
                })
                .catch((e) => {
                  (0, n.warn)(`Unable to decode image "${S}": "${e}".`);
                  return this._sendImgData(S, null, _);
                });
              r.addOp(n.OPS.paintImageXObject, f);
              if (a) {
                s.set(a, c, { fn: n.OPS.paintImageXObject, args: f });
                if (c) {
                  (0, n.assert)(!i, "Cannot cache an inline image globally.");
                  this.globalImageCache.addPageIndex(c, this.pageIndex);
                  if (_)
                    this.globalImageCache.setData(c, {
                      objId: S,
                      fn: n.OPS.paintImageXObject,
                      args: f,
                    });
                }
              }
            }
            handleSMask(e, t, i, n, r, a) {
              var s = e.get("G"),
                o = { subtype: e.get("S").name, backdrop: e.get("BC") },
                l = e.get("TR");
              if ((0, d.isPDFFunction)(l)) {
                const e = this._pdfFunctionFactory.create(l);
                for (
                  var c = new Uint8Array(256), h = new Float32Array(1), u = 0;
                  u < 256;
                  u++
                ) {
                  h[0] = u / 255;
                  e(h, 0, h, 0);
                  c[u] = (255 * h[0]) | 0;
                }
                o.transferMap = c;
              }
              return this.buildFormXObject(t, s, o, i, n, r.state.clone(), a);
            }
            handleTransferFunction(e) {
              let t;
              if (Array.isArray(e)) t = e;
              else if ((0, d.isPDFFunction)(e)) t = [e];
              else return null;
              const i = [];
              let n = 0,
                r = 0;
              for (const e of t) {
                const t = this.xref.fetchIfRef(e);
                n++;
                if ((0, a.isName)(t, "Identity")) {
                  i.push(null);
                  continue;
                } else if (!(0, d.isPDFFunction)(t)) return null;
                const s = this._pdfFunctionFactory.create(t),
                  o = new Uint8Array(256),
                  l = new Float32Array(1);
                for (let e = 0; e < 256; e++) {
                  l[0] = e / 255;
                  s(l, 0, l, 0);
                  o[e] = (255 * l[0]) | 0;
                }
                i.push(o);
                r++;
              }
              if (1 !== n && 4 !== n) return null;
              if (0 === r) return null;
              else return i;
            }
            handleTilingType(e, t, i, r, s, o, l, c, h) {
              const d = new x.OperatorList(),
                f = a.Dict.merge({
                  xref: this.xref,
                  dictArray: [s.get("Resources"), i],
                });
              return this.getOperatorList({
                stream: r,
                task: l,
                resources: f,
                operatorList: d,
              })
                .then(function () {
                  const i = d.getIR(),
                    n = (0, u.getTilingPatternIR)(i, s, t);
                  o.addDependencies(d.dependencies);
                  o.addOp(e, n);
                  if (c) h.set(c, s.objId, { operatorListIR: i, dict: s });
                })
                .catch((e) => {
                  if (!(e instanceof n.AbortException))
                    if (!this.options.ignoreErrors) throw e;
                    else {
                      this.handler.send("UnsupportedFeature", {
                        featureId: n.UNSUPPORTED_FEATURES.errorTilingPattern,
                      });
                      (0, n.warn)(
                        `handleTilingType - ignoring pattern: "${e}".`
                      );
                    }
                });
            }
            handleSetFont(e, t, i, r, a, o, l = null) {
              var c;
              if (t) c = (t = t.slice())[0].name;
              return this.loadFont(c, i, e, l)
                .then((t) => {
                  if (!t.font.isType3Font) return t;
                  else
                    return t
                      .loadType3Data(this, e, a)
                      .then(function () {
                        r.addDependencies(t.type3Dependencies);
                        return t;
                      })
                      .catch((e) => {
                        this.handler.send("UnsupportedFeature", {
                          featureId: n.UNSUPPORTED_FEATURES.errorFontLoadType3,
                        });
                        return new T({
                          loadedName: "g_font_error",
                          font: new s.ErrorFont(`Type3 font load error: ${e}`),
                          dict: t.font,
                          extraProperties: this.options.fontExtraProperties,
                        });
                      });
                })
                .then((e) => {
                  o.font = e.font;
                  e.send(this.handler);
                  return e.loadedName;
                });
            }
            handleText(e, t) {
              const i = t.font,
                r = i.charsToGlyphs(e);
              if (i.data)
                if (
                  t.textRenderingMode & n.TextRenderingMode.ADD_TO_PATH_FLAG ||
                  "Pattern" === t.fillColorSpace.name ||
                  i.disableFontFace ||
                  this.options.disableFontFace
                )
                  F.buildFontPaths(i, r, this.handler);
              return r;
            }
            ensureStateFont(e) {
              if (e.font) return;
              const t = new n.FormatError(
                "Missing setFont (Tf) operator before text rendering operator."
              );
              if (!this.options.ignoreErrors) throw t;
              else {
                this.handler.send("UnsupportedFeature", {
                  featureId: n.UNSUPPORTED_FEATURES.errorFontState,
                });
                (0, n.warn)(`ensureStateFont: "${t}".`);
              }
            }
            async setGState({
              resources: e,
              gState: t,
              operatorList: i,
              cacheKey: r,
              task: s,
              stateManager: o,
              localGStateCache: l,
              localColorSpaceCache: c,
            }) {
              const h = t.objId;
              let u = !0;
              for (
                var d = [],
                  f = t.getKeys(),
                  p = Promise.resolve(),
                  g = 0,
                  m = f.length;
                g < m;
                g++
              ) {
                const r = f[g],
                  l = t.get(r);
                switch (r) {
                  case "Type":
                    break;
                  case "LW":
                  case "LC":
                  case "LJ":
                  case "ML":
                  case "D":
                  case "RI":
                  case "FL":
                  case "CA":
                  case "ca":
                    d.push([r, l]);
                    break;
                  case "Font":
                    u = !1;
                    p = p.then(() =>
                      this.handleSetFont(e, null, l[0], i, s, o.state).then(
                        function (e) {
                          i.addDependency(e);
                          d.push([r, [e, l[1]]]);
                        }
                      )
                    );
                    break;
                  case "BM":
                    d.push([r, _(l)]);
                    break;
                  case "SMask":
                    if ((0, a.isName)(l, "None")) {
                      d.push([r, !1]);
                      break;
                    }
                    if ((0, a.isDict)(l)) {
                      u = !1;
                      p = p.then(() => this.handleSMask(l, e, i, s, o, c));
                      d.push([r, !0]);
                    } else (0, n.warn)("Unsupported SMask type");
                    break;
                  case "TR":
                    const t = this.handleTransferFunction(l);
                    d.push([r, t]);
                    break;
                  case "OP":
                  case "op":
                  case "OPM":
                  case "BG":
                  case "BG2":
                  case "UCR":
                  case "UCR2":
                  case "TR2":
                  case "HT":
                  case "SM":
                  case "SA":
                  case "AIS":
                  case "TK":
                    (0, n.info)("graphic state operator " + r);
                    break;
                  default:
                    (0, n.info)("Unknown graphic state operator " + r);
                }
              }
              return p.then(function () {
                if (d.length > 0) i.addOp(n.OPS.setGState, [d]);
                if (u) l.set(r, h, d);
              });
            }
            loadFont(e, t, i, r = null) {
              const o = async () =>
                new T({
                  loadedName: "g_font_error",
                  font: new s.ErrorFont(`Font "${e}" is not available.`),
                  dict: t,
                  extraProperties: this.options.fontExtraProperties,
                });
              var l,
                c = this.xref;
              if (t) {
                if (!(0, a.isRef)(t))
                  throw new n.FormatError(
                    'The "font" object should be a reference.'
                  );
                l = t;
              } else {
                var h = i.get("Font");
                if (h) l = h.getRaw(e);
              }
              if (!l) {
                const i = `Font "${e || (t && t.toString())}" is not available`;
                if (!this.options.ignoreErrors && !this.parsingType3Font) {
                  (0, n.warn)(`${i}.`);
                  return o();
                }
                this.handler.send("UnsupportedFeature", {
                  featureId: n.UNSUPPORTED_FEATURES.errorFontMissing,
                });
                (0, n.warn)(
                  `${i} -- attempting to fallback to a default font.`
                );
                if (r) l = r;
                else l = F.fallbackFontDict;
              }
              if (this.fontCache.has(l)) return this.fontCache.get(l);
              t = c.fetchIfRef(l);
              if (!(0, a.isDict)(t)) return o();
              if (t.cacheKey && this.fontCache.has(t.cacheKey))
                return this.fontCache.get(t.cacheKey);
              var u = (0, n.createPromiseCapability)();
              let d;
              try {
                d = this.preEvaluateFont(t);
              } catch (e) {
                (0, n.warn)(
                  `loadFont - ignoring preEvaluateFont errors: "${e}".`
                );
                return o();
              }
              const { descriptor: f, hash: p } = d;
              var g,
                m = (0, a.isRef)(l);
              if (m) g = `f${l.toString()}`;
              if (p && (0, a.isDict)(f)) {
                if (!f.fontAliases) f.fontAliases = Object.create(null);
                var v = f.fontAliases;
                if (v[p]) {
                  var b = v[p].aliasRef;
                  if (m && b && this.fontCache.has(b)) {
                    this.fontCache.putAlias(l, b);
                    return this.fontCache.get(l);
                  }
                } else v[p] = { fontID: this.idFactory.createFontId() };
                if (m) v[p].aliasRef = l;
                g = v[p].fontID;
              }
              if (m) this.fontCache.put(l, u.promise);
              else {
                if (!g) g = this.idFactory.createFontId();
                t.cacheKey = `cacheKey_${g}`;
                this.fontCache.put(t.cacheKey, u.promise);
              }
              (0, n.assert)(
                g && g.startsWith("f"),
                'The "fontID" must be (correctly) defined.'
              );
              t.loadedName = `${this.idFactory.getDocId()}_${g}`;
              this.translateFont(d)
                .then((e) => {
                  if (void 0 !== e.fontType) c.stats.fontTypes[e.fontType] = !0;
                  u.resolve(
                    new T({
                      loadedName: t.loadedName,
                      font: e,
                      dict: t,
                      extraProperties: this.options.fontExtraProperties,
                    })
                  );
                })
                .catch((e) => {
                  this.handler.send("UnsupportedFeature", {
                    featureId: n.UNSUPPORTED_FEATURES.errorFontTranslate,
                  });
                  try {
                    var i = f && f.get("FontFile3"),
                      r = i && i.get("Subtype"),
                      a = (0, s.getFontType)(d.type, r && r.name);
                    c.stats.fontTypes[a] = !0;
                  } catch (e) {}
                  u.resolve(
                    new T({
                      loadedName: t.loadedName,
                      font: new s.ErrorFont(e instanceof Error ? e.message : e),
                      dict: t,
                      extraProperties: this.options.fontExtraProperties,
                    })
                  );
                });
              return u.promise;
            }
            buildPath(e, t, i, r = !1) {
              var a = e.length - 1;
              if (!i) i = [];
              if (a < 0 || e.fnArray[a] !== n.OPS.constructPath) {
                if (r) {
                  (0, n.warn)(
                    `Encountered path operator "${t}" inside of a text object.`
                  );
                  e.addOp(n.OPS.save, null);
                }
                e.addOp(n.OPS.constructPath, [[t], i]);
                if (r) e.addOp(n.OPS.restore, null);
              } else {
                var s = e.argsArray[a];
                s[0].push(t);
                Array.prototype.push.apply(s[1], i);
              }
            }
            parseColorSpace({ cs: e, resources: t, localColorSpaceCache: i }) {
              return m.ColorSpace.parseAsync({
                cs: e,
                xref: this.xref,
                resources: t,
                pdfFunctionFactory: this._pdfFunctionFactory,
                localColorSpaceCache: i,
              }).catch((e) => {
                if (e instanceof n.AbortException) return null;
                if (this.options.ignoreErrors) {
                  this.handler.send("UnsupportedFeature", {
                    featureId: n.UNSUPPORTED_FEATURES.errorColorSpace,
                  });
                  (0, n.warn)(`parseColorSpace - ignoring ColorSpace: "${e}".`);
                  return null;
                }
                throw e;
              });
            }
            handleColorN(e, t, i, r, s, o, c, h, d) {
              const f = i.pop();
              if (f instanceof a.Name) {
                const b = f.name,
                  y = d.getByName(b);
                if (y)
                  try {
                    const n = r.base ? r.base.getRgb(i, 0) : null,
                      a = (0, u.getTilingPatternIR)(
                        y.operatorListIR,
                        y.dict,
                        n
                      );
                    e.addOp(t, a);
                    return;
                  } catch (e) {
                    if (e instanceof l.MissingDataException) throw e;
                  }
                let w = s.get(b);
                if (w) {
                  var p = (0, a.isStream)(w) ? w.dict : w,
                    g = p.get("PatternType");
                  if (1 === g) {
                    const n = r.base ? r.base.getRgb(i, 0) : null;
                    return this.handleTilingType(t, n, o, w, p, e, c, b, d);
                  } else if (2 === g) {
                    var m = p.get("Shading"),
                      v = p.getArray("Matrix");
                    w = u.Pattern.parseShading(
                      m,
                      v,
                      this.xref,
                      o,
                      this.handler,
                      this._pdfFunctionFactory,
                      h
                    );
                    e.addOp(t, w.getIR());
                    return;
                  }
                  throw new n.FormatError(`Unknown PatternType: ${g}`);
                }
              }
              throw new n.FormatError(`Unknown PatternName: ${f}`);
            }
            async parseMarkedContentProps(e, t) {
              let i;
              if ((0, a.isName)(e)) i = t.get("Properties").get(e.name);
              else if ((0, a.isDict)(e)) i = e;
              else
                throw new n.FormatError(
                  "Optional content properties malformed."
                );
              const r = i.get("Type").name;
              if ("OCG" === r) return { type: r, id: i.objId };
              else if ("OCMD" === r) {
                const e = i.get("OCGs");
                if (Array.isArray(e) || (0, a.isDict)(e)) {
                  const t = [];
                  if (Array.isArray(e))
                    i.get("OCGs").forEach((e) => {
                      t.push(e.toString());
                    });
                  else t.push(e.objId);
                  let n = null;
                  if (i.get("VE")) n = !0;
                  return {
                    type: r,
                    ids: t,
                    policy: (0, a.isName)(i.get("P")) ? i.get("P").name : null,
                    expression: n,
                  };
                } else if ((0, a.isRef)(e))
                  return { type: r, id: e.toString() };
              }
              return null;
            }
            getOperatorList({
              stream: e,
              task: t,
              resources: i,
              operatorList: r,
              initialState: s = null,
              fallbackFontDict: o = null,
            }) {
              i = i || a.Dict.empty;
              s = s || new I();
              if (!r)
                throw new Error(
                  'getOperatorList: missing "operatorList" parameter'
                );
              var l = this,
                c = this.xref;
              let h = !1;
              const d = new p.LocalImageCache(),
                f = new p.LocalColorSpaceCache(),
                g = new p.LocalGStateCache(),
                v = new p.LocalTilingPatternCache();
              var b = i.get("XObject") || a.Dict.empty,
                y = i.get("Pattern") || a.Dict.empty,
                w = new P(s),
                x = new D(e, c, w),
                k = new A();
              function C(e) {
                for (var t = 0, i = x.savedStatesDepth; t < i; t++)
                  r.addOp(n.OPS.restore, []);
              }
              return new Promise(function e(s, p) {
                const _ = function (t) {
                  Promise.all([t, r.ready]).then(function () {
                    try {
                      e(s, p);
                    } catch (e) {
                      p(e);
                    }
                  }, p);
                };
                t.ensureNotTerminated();
                k.reset();
                for (var A, F, T, P, E, I = {}; !(A = k.check()); ) {
                  I.args = null;
                  if (!x.read(I)) break;
                  var D = I.args,
                    O = I.fn;
                  switch (0 | O) {
                    case n.OPS.paintXObject:
                      if ((E = D[0].name)) {
                        const e = d.getByName(E);
                        if (e) {
                          r.addOp(e.fn, e.args);
                          D = null;
                          continue;
                        }
                      }
                      _(
                        new Promise(function (e, s) {
                          if (!E)
                            throw new n.FormatError(
                              "XObject must be referred to by name."
                            );
                          let o = b.getRaw(E);
                          if (o instanceof a.Ref) {
                            const t = d.getByRef(o);
                            if (t) {
                              r.addOp(t.fn, t.args);
                              e();
                              return;
                            }
                            const i = l.globalImageCache.getData(
                              o,
                              l.pageIndex
                            );
                            if (i) {
                              r.addDependency(i.objId);
                              r.addOp(i.fn, i.args);
                              e();
                              return;
                            }
                            o = c.fetch(o);
                          }
                          if (!(0, a.isStream)(o))
                            throw new n.FormatError(
                              "XObject should be a stream"
                            );
                          const h = o.dict.get("Subtype");
                          if (!(0, a.isName)(h))
                            throw new n.FormatError(
                              "XObject should have a Name subtype"
                            );
                          if ("Form" !== h.name) {
                            if ("Image" === h.name) {
                              l.buildPaintImageXObject({
                                resources: i,
                                image: o,
                                operatorList: r,
                                cacheKey: E,
                                localImageCache: d,
                                localColorSpaceCache: f,
                              }).then(e, s);
                              return;
                            } else if ("PS" === h.name)
                              (0, n.info)("Ignored XObject subtype PS");
                            else
                              throw new n.FormatError(
                                `Unhandled XObject subtype ${h.name}`
                              );
                            e();
                          } else {
                            w.save();
                            l.buildFormXObject(
                              i,
                              o,
                              null,
                              r,
                              t,
                              w.state.clone(),
                              f
                            ).then(function () {
                              w.restore();
                              e();
                            }, s);
                          }
                        }).catch(function (e) {
                          if (!(e instanceof n.AbortException))
                            if (!l.options.ignoreErrors) throw e;
                            else {
                              l.handler.send("UnsupportedFeature", {
                                featureId: n.UNSUPPORTED_FEATURES.errorXObject,
                              });
                              (0, n.warn)(
                                `getOperatorList - ignoring XObject: "${e}".`
                              );
                            }
                        })
                      );
                      return;
                    case n.OPS.setFont:
                      var R = D[1];
                      _(
                        l
                          .handleSetFont(i, D, null, r, t, w.state, o)
                          .then(function (e) {
                            r.addDependency(e);
                            r.addOp(n.OPS.setFont, [e, R]);
                          })
                      );
                      return;
                    case n.OPS.beginText:
                      h = !0;
                      break;
                    case n.OPS.endText:
                      h = !1;
                      break;
                    case n.OPS.endInlineImage:
                      var N = D[0].cacheKey;
                      if (N) {
                        const e = d.getByName(N);
                        if (e) {
                          r.addOp(e.fn, e.args);
                          D = null;
                          continue;
                        }
                      }
                      _(
                        l.buildPaintImageXObject({
                          resources: i,
                          image: D[0],
                          isInline: !0,
                          operatorList: r,
                          cacheKey: N,
                          localImageCache: d,
                          localColorSpaceCache: f,
                        })
                      );
                      return;
                    case n.OPS.showText:
                      if (!w.state.font) {
                        l.ensureStateFont(w.state);
                        continue;
                      }
                      D[0] = l.handleText(D[0], w.state);
                      break;
                    case n.OPS.showSpacedText:
                      if (!w.state.font) {
                        l.ensureStateFont(w.state);
                        continue;
                      }
                      var M = D[0],
                        B = [],
                        L = M.length,
                        U = w.state;
                      for (F = 0; F < L; ++F) {
                        var z = M[F];
                        if ((0, n.isString)(z))
                          Array.prototype.push.apply(B, l.handleText(z, U));
                        else if ((0, n.isNum)(z)) B.push(z);
                      }
                      D[0] = B;
                      O = n.OPS.showText;
                      break;
                    case n.OPS.nextLineShowText:
                      if (!w.state.font) {
                        l.ensureStateFont(w.state);
                        continue;
                      }
                      r.addOp(n.OPS.nextLine);
                      D[0] = l.handleText(D[0], w.state);
                      O = n.OPS.showText;
                      break;
                    case n.OPS.nextLineSetSpacingShowText:
                      if (!w.state.font) {
                        l.ensureStateFont(w.state);
                        continue;
                      }
                      r.addOp(n.OPS.nextLine);
                      r.addOp(n.OPS.setWordSpacing, [D.shift()]);
                      r.addOp(n.OPS.setCharSpacing, [D.shift()]);
                      D[0] = l.handleText(D[0], w.state);
                      O = n.OPS.showText;
                      break;
                    case n.OPS.setTextRenderingMode:
                      w.state.textRenderingMode = D[0];
                      break;
                    case n.OPS.setFillColorSpace: {
                      const e = m.ColorSpace.getCached(D[0], c, f);
                      if (e) {
                        w.state.fillColorSpace = e;
                        continue;
                      }
                      _(
                        l
                          .parseColorSpace({
                            cs: D[0],
                            resources: i,
                            localColorSpaceCache: f,
                          })
                          .then(function (e) {
                            if (e) w.state.fillColorSpace = e;
                          })
                      );
                      return;
                    }
                    case n.OPS.setStrokeColorSpace: {
                      const e = m.ColorSpace.getCached(D[0], c, f);
                      if (e) {
                        w.state.strokeColorSpace = e;
                        continue;
                      }
                      _(
                        l
                          .parseColorSpace({
                            cs: D[0],
                            resources: i,
                            localColorSpaceCache: f,
                          })
                          .then(function (e) {
                            if (e) w.state.strokeColorSpace = e;
                          })
                      );
                      return;
                    }
                    case n.OPS.setFillColor:
                      D = (P = w.state.fillColorSpace).getRgb(D, 0);
                      O = n.OPS.setFillRGBColor;
                      break;
                    case n.OPS.setStrokeColor:
                      D = (P = w.state.strokeColorSpace).getRgb(D, 0);
                      O = n.OPS.setStrokeRGBColor;
                      break;
                    case n.OPS.setFillGray:
                      w.state.fillColorSpace = m.ColorSpace.singletons.gray;
                      D = m.ColorSpace.singletons.gray.getRgb(D, 0);
                      O = n.OPS.setFillRGBColor;
                      break;
                    case n.OPS.setStrokeGray:
                      w.state.strokeColorSpace = m.ColorSpace.singletons.gray;
                      D = m.ColorSpace.singletons.gray.getRgb(D, 0);
                      O = n.OPS.setStrokeRGBColor;
                      break;
                    case n.OPS.setFillCMYKColor:
                      w.state.fillColorSpace = m.ColorSpace.singletons.cmyk;
                      D = m.ColorSpace.singletons.cmyk.getRgb(D, 0);
                      O = n.OPS.setFillRGBColor;
                      break;
                    case n.OPS.setStrokeCMYKColor:
                      w.state.strokeColorSpace = m.ColorSpace.singletons.cmyk;
                      D = m.ColorSpace.singletons.cmyk.getRgb(D, 0);
                      O = n.OPS.setStrokeRGBColor;
                      break;
                    case n.OPS.setFillRGBColor:
                      w.state.fillColorSpace = m.ColorSpace.singletons.rgb;
                      D = m.ColorSpace.singletons.rgb.getRgb(D, 0);
                      break;
                    case n.OPS.setStrokeRGBColor:
                      w.state.strokeColorSpace = m.ColorSpace.singletons.rgb;
                      D = m.ColorSpace.singletons.rgb.getRgb(D, 0);
                      break;
                    case n.OPS.setFillColorN:
                      if ("Pattern" === (P = w.state.fillColorSpace).name) {
                        _(
                          l.handleColorN(
                            r,
                            n.OPS.setFillColorN,
                            D,
                            P,
                            y,
                            i,
                            t,
                            f,
                            v
                          )
                        );
                        return;
                      }
                      D = P.getRgb(D, 0);
                      O = n.OPS.setFillRGBColor;
                      break;
                    case n.OPS.setStrokeColorN:
                      if ("Pattern" === (P = w.state.strokeColorSpace).name) {
                        _(
                          l.handleColorN(
                            r,
                            n.OPS.setStrokeColorN,
                            D,
                            P,
                            y,
                            i,
                            t,
                            f,
                            v
                          )
                        );
                        return;
                      }
                      D = P.getRgb(D, 0);
                      O = n.OPS.setStrokeRGBColor;
                      break;
                    case n.OPS.shadingFill:
                      var j = i.get("Shading");
                      if (!j)
                        throw new n.FormatError("No shading resource found");
                      var q = j.get(D[0].name);
                      if (!q)
                        throw new n.FormatError("No shading object found");
                      D = [
                        u.Pattern.parseShading(
                          q,
                          null,
                          c,
                          i,
                          l.handler,
                          l._pdfFunctionFactory,
                          f
                        ).getIR(),
                      ];
                      O = n.OPS.shadingFill;
                      break;
                    case n.OPS.setGState:
                      if ((E = D[0].name)) {
                        const e = g.getByName(E);
                        if (e) {
                          if (e.length > 0) r.addOp(n.OPS.setGState, [e]);
                          D = null;
                          continue;
                        }
                      }
                      _(
                        new Promise(function (e, s) {
                          if (!E)
                            throw new n.FormatError(
                              "GState must be referred to by name."
                            );
                          const o = i.get("ExtGState");
                          if (!(o instanceof a.Dict))
                            throw new n.FormatError(
                              "ExtGState should be a dictionary."
                            );
                          const c = o.get(E);
                          if (!(c instanceof a.Dict))
                            throw new n.FormatError(
                              "GState should be a dictionary."
                            );
                          l.setGState({
                            resources: i,
                            gState: c,
                            operatorList: r,
                            cacheKey: E,
                            task: t,
                            stateManager: w,
                            localGStateCache: g,
                            localColorSpaceCache: f,
                          }).then(e, s);
                        }).catch(function (e) {
                          if (!(e instanceof n.AbortException))
                            if (!l.options.ignoreErrors) throw e;
                            else {
                              l.handler.send("UnsupportedFeature", {
                                featureId:
                                  n.UNSUPPORTED_FEATURES.errorExtGState,
                              });
                              (0, n.warn)(
                                `getOperatorList - ignoring ExtGState: "${e}".`
                              );
                            }
                        })
                      );
                      return;
                    case n.OPS.moveTo:
                    case n.OPS.lineTo:
                    case n.OPS.curveTo:
                    case n.OPS.curveTo2:
                    case n.OPS.curveTo3:
                    case n.OPS.closePath:
                    case n.OPS.rectangle:
                      l.buildPath(r, O, D, h);
                      continue;
                    case n.OPS.markPoint:
                    case n.OPS.markPointProps:
                    case n.OPS.beginCompat:
                    case n.OPS.endCompat:
                      continue;
                    case n.OPS.beginMarkedContentProps:
                      if (!(0, a.isName)(D[0])) {
                        (0, n.warn)(
                          `Expected name for beginMarkedContentProps arg0=${D[0]}`
                        );
                        continue;
                      }
                      if ("OC" === D[0].name) {
                        _(
                          l
                            .parseMarkedContentProps(D[1], i)
                            .then((e) => {
                              r.addOp(n.OPS.beginMarkedContentProps, ["OC", e]);
                            })
                            .catch((e) => {
                              if (!(e instanceof n.AbortException))
                                if (!l.options.ignoreErrors) throw e;
                                else {
                                  l.handler.send("UnsupportedFeature", {
                                    featureId:
                                      n.UNSUPPORTED_FEATURES.errorMarkedContent,
                                  });
                                  (0, n.warn)(
                                    `getOperatorList - ignoring beginMarkedContentProps: "${e}".`
                                  );
                                }
                            })
                        );
                        return;
                      }
                      D = [D[0].name];
                      break;
                    case n.OPS.beginMarkedContent:
                    case n.OPS.endMarkedContent:
                    default:
                      if (null !== D) {
                        for (
                          F = 0, T = D.length;
                          F < T && !(D[F] instanceof a.Dict);
                          F++
                        );
                        if (F < T) {
                          (0, n.warn)(
                            "getOperatorList - ignoring operator: " + O
                          );
                          continue;
                        }
                      }
                  }
                  r.addOp(O, D);
                }
                if (!A) {
                  C();
                  s();
                } else _(S);
              }).catch((e) => {
                if (!(e instanceof n.AbortException))
                  if (!this.options.ignoreErrors) throw e;
                  else {
                    this.handler.send("UnsupportedFeature", {
                      featureId: n.UNSUPPORTED_FEATURES.errorOperatorList,
                    });
                    (0, n.warn)(
                      `getOperatorList - ignoring errors during "${t.name}" task: "${e}".`
                    );
                    C();
                  }
              });
            }
            getTextContent({
              stream: e,
              task: t,
              resources: i,
              stateManager: r = null,
              normalizeWhitespace: s = !1,
              combineTextItems: o = !1,
              sink: l,
              seenStyles: h = Object.create(null),
            }) {
              i = i || a.Dict.empty;
              r = r || new P(new E());
              var u = /\s/g,
                d = { items: [], styles: Object.create(null) },
                f = {
                  initialized: !1,
                  str: [],
                  width: 0,
                  height: 0,
                  vertical: !1,
                  lastAdvanceWidth: 0,
                  lastAdvanceHeight: 0,
                  textAdvanceScale: 0,
                  spaceWidth: 0,
                  fakeSpaceMin: 1 / 0,
                  fakeMultiSpaceMin: 1 / 0,
                  fakeMultiSpaceMax: -0,
                  textRunBreakAllowed: !1,
                  transform: null,
                  fontName: null,
                },
                m = this,
                v = this.xref,
                b = null;
              const y = new p.LocalImageCache(),
                w = new p.LocalGStateCache();
              var x,
                k = new D(e, v, r);
              function C() {
                if (f.initialized) return f;
                var e = x.font;
                if (!(e.loadedName in h)) {
                  h[e.loadedName] = !0;
                  d.styles[e.loadedName] = {
                    fontFamily: e.fallbackName,
                    ascent: e.ascent,
                    descent: e.descent,
                    vertical: e.vertical,
                  };
                }
                f.fontName = e.loadedName;
                var t = [
                  x.fontSize * x.textHScale,
                  0,
                  0,
                  x.fontSize,
                  0,
                  x.textRise,
                ];
                if (
                  e.isType3Font &&
                  x.fontSize <= 1 &&
                  !(0, n.isArrayEqual)(x.fontMatrix, n.FONT_IDENTITY_MATRIX)
                ) {
                  const i = e.bbox[3] - e.bbox[1];
                  if (i > 0) t[3] *= i * x.fontMatrix[3];
                }
                var i = n.Util.transform(
                  x.ctm,
                  n.Util.transform(x.textMatrix, t)
                );
                f.transform = i;
                if (!e.vertical) {
                  f.width = 0;
                  f.height = Math.sqrt(i[2] * i[2] + i[3] * i[3]);
                  f.vertical = !1;
                } else {
                  f.width = Math.sqrt(i[0] * i[0] + i[1] * i[1]);
                  f.height = 0;
                  f.vertical = !0;
                }
                var r = x.textLineMatrix[0],
                  a = x.textLineMatrix[1],
                  s = Math.sqrt(r * r + a * a);
                r = x.ctm[0];
                a = x.ctm[1];
                var o = Math.sqrt(r * r + a * a);
                f.textAdvanceScale = o * s;
                f.lastAdvanceWidth = 0;
                f.lastAdvanceHeight = 0;
                var l = (e.spaceWidth / 1e3) * x.fontSize;
                if (l) {
                  f.spaceWidth = l;
                  f.fakeSpaceMin = 0.3 * l;
                  f.fakeMultiSpaceMin = 1.5 * l;
                  f.fakeMultiSpaceMax = 4 * l;
                  f.textRunBreakAllowed = !e.isMonospace;
                } else {
                  f.spaceWidth = 0;
                  f.fakeSpaceMin = 1 / 0;
                  f.fakeMultiSpaceMin = 1 / 0;
                  f.fakeMultiSpaceMax = 0;
                  f.textRunBreakAllowed = !1;
                }
                f.initialized = !0;
                return f;
              }
              function _(e) {
                for (
                  var t, i = 0, n = e.length;
                  i < n && (t = e.charCodeAt(i)) >= 32 && t <= 127;

                )
                  i++;
                return i < n ? e.replace(u, " ") : e;
              }
              function F(e, t) {
                return m.loadFont(e, t, i).then(function (e) {
                  x.font = e.font;
                  x.fontMatrix = e.font.fontMatrix || n.FONT_IDENTITY_MATRIX;
                });
              }
              function T(e) {
                for (
                  var t = x.font,
                    i = C(),
                    n = 0,
                    r = 0,
                    a = t.charsToGlyphs(e),
                    s = 0;
                  s < a.length;
                  s++
                ) {
                  var o = a[s],
                    l = null;
                  if (t.vertical && o.vmetric) l = o.vmetric[0];
                  else l = o.width;
                  var h = o.unicode,
                    u = (0, c.getNormalizedUnicodes)();
                  if (void 0 !== u[h]) h = u[h];
                  h = (0, c.reverseIfRtl)(h);
                  var d = x.charSpacing;
                  if (o.isSpace) {
                    var f = x.wordSpacing;
                    d += f;
                    if (f > 0) I(f, i.str);
                  }
                  var p = 0,
                    g = 0;
                  if (!t.vertical)
                    n += p =
                      (l * x.fontMatrix[0] * x.fontSize + d) * x.textHScale;
                  else r += g = l * x.fontMatrix[0] * x.fontSize + d;
                  x.translateTextMatrix(p, g);
                  i.str.push(h);
                }
                if (!t.vertical) {
                  i.lastAdvanceWidth = n;
                  i.width += n;
                } else {
                  i.lastAdvanceHeight = r;
                  i.height += Math.abs(r);
                }
                return i;
              }
              function I(e, t) {
                if (!(e < f.fakeSpaceMin))
                  if (!(e < f.fakeMultiSpaceMin))
                    for (var i = Math.round(e / f.spaceWidth); i-- > 0; )
                      t.push(" ");
                  else t.push(" ");
              }
              function O() {
                if (f.initialized) {
                  if (!f.vertical) f.width *= f.textAdvanceScale;
                  else f.height *= f.textAdvanceScale;
                  d.items.push(
                    ((t = (e = f).str.join("")),
                    (i = (0, g.bidi)(t, -1, e.vertical)),
                    {
                      str: s ? _(i.str) : i.str,
                      dir: i.dir,
                      width: e.width,
                      height: e.height,
                      transform: e.transform,
                      fontName: e.fontName,
                    })
                  );
                  var e, t, i;
                  f.initialized = !1;
                  f.str.length = 0;
                }
              }
              function R() {
                const e = d.items.length;
                if (e > 0) {
                  l.enqueue(d, e);
                  d.items = [];
                  d.styles = Object.create(null);
                }
              }
              var N = new A();
              return new Promise(function e(c, u) {
                const p = function (t) {
                  R();
                  Promise.all([t, l.ready]).then(function () {
                    try {
                      e(c, u);
                    } catch (e) {
                      u(e);
                    }
                  }, u);
                };
                t.ensureNotTerminated();
                N.reset();
                for (var g, _ = {}, A = []; !(g = N.check()); ) {
                  A.length = 0;
                  _.args = A;
                  if (!k.read(_)) break;
                  x = r.state;
                  var E,
                    D = _.fn;
                  A = _.args;
                  switch (0 | D) {
                    case n.OPS.setFont:
                      var M = A[0].name,
                        B = A[1];
                      if (x.font && M === x.fontName && B === x.fontSize) break;
                      O();
                      x.fontName = M;
                      x.fontSize = B;
                      p(F(M, null));
                      return;
                    case n.OPS.setTextRise:
                      O();
                      x.textRise = A[0];
                      break;
                    case n.OPS.setHScale:
                      O();
                      x.textHScale = A[0] / 100;
                      break;
                    case n.OPS.setLeading:
                      O();
                      x.leading = A[0];
                      break;
                    case n.OPS.moveText:
                      var L = !x.font
                        ? !1
                        : 0 === (x.font.vertical ? A[0] : A[1]);
                      E = A[0] - A[1];
                      if (
                        o &&
                        L &&
                        f.initialized &&
                        E > 0 &&
                        E <= f.fakeMultiSpaceMax
                      ) {
                        x.translateTextLineMatrix(A[0], A[1]);
                        f.width += A[0] - f.lastAdvanceWidth;
                        f.height += A[1] - f.lastAdvanceHeight;
                        I(
                          A[0] -
                            f.lastAdvanceWidth -
                            (A[1] - f.lastAdvanceHeight),
                          f.str
                        );
                        break;
                      }
                      O();
                      x.translateTextLineMatrix(A[0], A[1]);
                      x.textMatrix = x.textLineMatrix.slice();
                      break;
                    case n.OPS.setLeadingMoveText:
                      O();
                      x.leading = -A[1];
                      x.translateTextLineMatrix(A[0], A[1]);
                      x.textMatrix = x.textLineMatrix.slice();
                      break;
                    case n.OPS.nextLine:
                      O();
                      x.carriageReturn();
                      break;
                    case n.OPS.setTextMatrix:
                      E = x.calcTextLineMatrixAdvance(
                        A[0],
                        A[1],
                        A[2],
                        A[3],
                        A[4],
                        A[5]
                      );
                      if (
                        o &&
                        null !== E &&
                        f.initialized &&
                        E.value > 0 &&
                        E.value <= f.fakeMultiSpaceMax
                      ) {
                        x.translateTextLineMatrix(E.width, E.height);
                        f.width += E.width - f.lastAdvanceWidth;
                        f.height += E.height - f.lastAdvanceHeight;
                        I(
                          E.width -
                            f.lastAdvanceWidth -
                            (E.height - f.lastAdvanceHeight),
                          f.str
                        );
                        break;
                      }
                      O();
                      x.setTextMatrix(A[0], A[1], A[2], A[3], A[4], A[5]);
                      x.setTextLineMatrix(A[0], A[1], A[2], A[3], A[4], A[5]);
                      break;
                    case n.OPS.setCharSpacing:
                      x.charSpacing = A[0];
                      break;
                    case n.OPS.setWordSpacing:
                      x.wordSpacing = A[0];
                      break;
                    case n.OPS.beginText:
                      O();
                      x.textMatrix = n.IDENTITY_MATRIX.slice();
                      x.textLineMatrix = n.IDENTITY_MATRIX.slice();
                      break;
                    case n.OPS.showSpacedText:
                      if (!r.state.font) {
                        m.ensureStateFont(r.state);
                        continue;
                      }
                      for (var U, z = A[0], j = 0, q = z.length; j < q; j++)
                        if ("string" == typeof z[j]) T(z[j]);
                        else if ((0, n.isNum)(z[j])) {
                          C();
                          E = (z[j] * x.fontSize) / 1e3;
                          var H = !1;
                          if (x.font.vertical) {
                            U = E;
                            x.translateTextMatrix(0, U);
                            if (
                              !(H =
                                f.textRunBreakAllowed &&
                                E > f.fakeMultiSpaceMax)
                            )
                              f.height += U;
                          } else {
                            U = (E = -E) * x.textHScale;
                            x.translateTextMatrix(U, 0);
                            if (
                              !(H =
                                f.textRunBreakAllowed &&
                                E > f.fakeMultiSpaceMax)
                            )
                              f.width += U;
                          }
                          if (H) O();
                          else if (E > 0) I(E, f.str);
                        }
                      break;
                    case n.OPS.showText:
                      if (!r.state.font) {
                        m.ensureStateFont(r.state);
                        continue;
                      }
                      T(A[0]);
                      break;
                    case n.OPS.nextLineShowText:
                      if (!r.state.font) {
                        m.ensureStateFont(r.state);
                        continue;
                      }
                      O();
                      x.carriageReturn();
                      T(A[0]);
                      break;
                    case n.OPS.nextLineSetSpacingShowText:
                      if (!r.state.font) {
                        m.ensureStateFont(r.state);
                        continue;
                      }
                      O();
                      x.wordSpacing = A[0];
                      x.charSpacing = A[1];
                      x.carriageReturn();
                      T(A[2]);
                      break;
                    case n.OPS.paintXObject:
                      O();
                      if (!b) b = i.get("XObject") || a.Dict.empty;
                      var W = A[0].name;
                      if (W && y.getByName(W)) break;
                      p(
                        new Promise(function (e, c) {
                          if (!W)
                            throw new n.FormatError(
                              "XObject must be referred to by name."
                            );
                          let u = b.getRaw(W);
                          if (u instanceof a.Ref) {
                            if (y.getByRef(u)) {
                              e();
                              return;
                            }
                            u = v.fetch(u);
                          }
                          if (!(0, a.isStream)(u))
                            throw new n.FormatError(
                              "XObject should be a stream"
                            );
                          const d = u.dict.get("Subtype");
                          if (!(0, a.isName)(d))
                            throw new n.FormatError(
                              "XObject should have a Name subtype"
                            );
                          if ("Form" !== d.name) {
                            y.set(W, u.dict.objId, !0);
                            e();
                            return;
                          }
                          const f = r.state.clone(),
                            p = new P(f),
                            g = u.dict.getArray("Matrix");
                          if (Array.isArray(g) && 6 === g.length)
                            p.transform(g);
                          R();
                          const w = {
                            enqueueInvoked: !1,
                            enqueue(e, t) {
                              this.enqueueInvoked = !0;
                              l.enqueue(e, t);
                            },
                            get desiredSize() {
                              return l.desiredSize;
                            },
                            get ready() {
                              return l.ready;
                            },
                          };
                          m.getTextContent({
                            stream: u,
                            task: t,
                            resources: u.dict.get("Resources") || i,
                            stateManager: p,
                            normalizeWhitespace: s,
                            combineTextItems: o,
                            sink: w,
                            seenStyles: h,
                          }).then(function () {
                            if (!w.enqueueInvoked) y.set(W, u.dict.objId, !0);
                            e();
                          }, c);
                        }).catch(function (e) {
                          if (!(e instanceof n.AbortException))
                            if (!m.options.ignoreErrors) throw e;
                            else
                              (0, n.warn)(
                                `getTextContent - ignoring XObject: "${e}".`
                              );
                        })
                      );
                      return;
                    case n.OPS.setGState:
                      if ((W = A[0].name) && w.getByName(W)) break;
                      p(
                        new Promise(function (e, t) {
                          if (!W)
                            throw new n.FormatError(
                              "GState must be referred to by name."
                            );
                          const r = i.get("ExtGState");
                          if (!(r instanceof a.Dict))
                            throw new n.FormatError(
                              "ExtGState should be a dictionary."
                            );
                          const s = r.get(W);
                          if (!(s instanceof a.Dict))
                            throw new n.FormatError(
                              "GState should be a dictionary."
                            );
                          const o = s.get("Font");
                          if (o) {
                            O();
                            x.fontName = null;
                            x.fontSize = o[1];
                            F(null, o[0]).then(e, t);
                          } else {
                            w.set(W, s.objId, !0);
                            e();
                          }
                        }).catch(function (e) {
                          if (!(e instanceof n.AbortException))
                            if (!m.options.ignoreErrors) throw e;
                            else
                              (0, n.warn)(
                                `getTextContent - ignoring ExtGState: "${e}".`
                              );
                        })
                      );
                      return;
                  }
                  if (d.items.length >= l.desiredSize) {
                    g = !0;
                    break;
                  }
                }
                if (!g) {
                  O();
                  R();
                  c();
                } else p(S);
              }).catch((e) => {
                if (!(e instanceof n.AbortException))
                  if (!this.options.ignoreErrors) throw e;
                  else {
                    (0, n.warn)(
                      `getTextContent - ignoring errors during "${t.name}" task: "${e}".`
                    );
                    O();
                    R();
                  }
              });
            }
            extractDataStructures(e, t, i) {
              const r = this.xref;
              let l;
              var c = e.get("ToUnicode") || t.get("ToUnicode"),
                h = c ? this.readToUnicode(c) : Promise.resolve(void 0);
              if (i.composite) {
                var u = e.get("CIDSystemInfo");
                if ((0, a.isDict)(u))
                  i.cidSystemInfo = {
                    registry: (0, n.stringToPDFString)(u.get("Registry")),
                    ordering: (0, n.stringToPDFString)(u.get("Ordering")),
                    supplement: u.get("Supplement"),
                  };
                var d = e.get("CIDToGIDMap");
                if ((0, a.isStream)(d)) l = d.getBytes();
              }
              var f,
                p = [],
                g = null;
              if (e.has("Encoding")) {
                f = e.get("Encoding");
                if ((0, a.isDict)(f)) {
                  g = f.get("BaseEncoding");
                  g = (0, a.isName)(g) ? g.name : null;
                  if (f.has("Differences"))
                    for (
                      var m = f.get("Differences"), v = 0, b = 0, y = m.length;
                      b < y;
                      b++
                    ) {
                      var w = r.fetchIfRef(m[b]);
                      if ((0, n.isNum)(w)) v = w;
                      else if ((0, a.isName)(w)) p[v++] = w.name;
                      else
                        throw new n.FormatError(
                          `Invalid entry in 'Differences' array: ${w}`
                        );
                    }
                } else if ((0, a.isName)(f)) g = f.name;
                else
                  throw new n.FormatError("Encoding is not a Name nor a Dict");
                if (
                  "MacRomanEncoding" !== g &&
                  "MacExpertEncoding" !== g &&
                  "WinAnsiEncoding" !== g
                )
                  g = null;
              }
              if (g) i.defaultEncoding = (0, o.getEncoding)(g).slice();
              else {
                var x = !!(i.flags & s.FontFlags.Symbolic),
                  k = !!(i.flags & s.FontFlags.Nonsymbolic);
                f = o.StandardEncoding;
                if ("TrueType" === i.type && !k) f = o.WinAnsiEncoding;
                if (x) {
                  f = o.MacRomanEncoding;
                  if (!i.file)
                    if (/Symbol/i.test(i.name)) f = o.SymbolSetEncoding;
                    else if (/Dingbats|Wingdings/i.test(i.name))
                      f = o.ZapfDingbatsEncoding;
                }
                i.defaultEncoding = f;
              }
              i.differences = p;
              i.baseEncodingName = g;
              i.hasEncoding = !!g || p.length > 0;
              i.dict = e;
              return h
                .then((e) => {
                  i.toUnicode = e;
                  return this.buildToUnicode(i);
                })
                .then((e) => {
                  i.toUnicode = e;
                  if (l) i.cidToGidMap = this.readCidToGidMap(l, e);
                  return i;
                });
            }
            _buildSimpleFontToUnicode(e, t = !1) {
              (0, n.assert)(!e.composite, "Must be a simple font.");
              const i = [],
                r = e.defaultEncoding.slice(),
                a = e.baseEncodingName,
                l = e.differences;
              for (const e in l) {
                const t = l[e];
                if (".notdef" !== t) r[e] = t;
              }
              const h = (0, b.getGlyphsUnicode)();
              for (const n in r) {
                let s = r[n];
                if ("" !== s) {
                  if (void 0 === h[s]) {
                    let r = 0;
                    switch (s[0]) {
                      case "G":
                        if (3 === s.length) r = parseInt(s.substring(1), 16);
                        break;
                      case "g":
                        if (5 === s.length) r = parseInt(s.substring(1), 16);
                        break;
                      case "C":
                      case "c":
                        if (s.length >= 3 && s.length <= 4) {
                          const i = s.substring(1);
                          if (t) {
                            r = parseInt(i, 16);
                            break;
                          }
                          r = +i;
                          if (
                            Number.isNaN(r) &&
                            Number.isInteger(parseInt(i, 16))
                          )
                            return this._buildSimpleFontToUnicode(e, !0);
                        }
                        break;
                      default:
                        const i = (0, c.getUnicodeForGlyph)(s, h);
                        if (-1 !== i) r = i;
                    }
                    if (r > 0 && r <= 1114111 && Number.isInteger(r)) {
                      if (a && r === +n) {
                        const e = (0, o.getEncoding)(a);
                        if (e && (s = e[n])) {
                          i[n] = String.fromCharCode(h[s]);
                          continue;
                        }
                      }
                      i[n] = String.fromCodePoint(r);
                    }
                    continue;
                  }
                  i[n] = String.fromCharCode(h[s]);
                }
              }
              return new s.ToUnicodeMap(i);
            }
            buildToUnicode(e) {
              e.hasIncludedToUnicodeMap =
                !!e.toUnicode && e.toUnicode.length > 0;
              if (e.hasIncludedToUnicodeMap) {
                if (!e.composite && e.hasEncoding)
                  e.fallbackToUnicode = this._buildSimpleFontToUnicode(e);
                return Promise.resolve(e.toUnicode);
              }
              if (!e.composite)
                return Promise.resolve(this._buildSimpleFontToUnicode(e));
              if (
                e.composite &&
                ((e.cMap.builtInCMap && !(e.cMap instanceof r.IdentityCMap)) ||
                  ("Adobe" === e.cidSystemInfo.registry &&
                    ("GB1" === e.cidSystemInfo.ordering ||
                      "CNS1" === e.cidSystemInfo.ordering ||
                      "Japan1" === e.cidSystemInfo.ordering ||
                      "Korea1" === e.cidSystemInfo.ordering)))
              ) {
                const t = e.cidSystemInfo.registry,
                  i = e.cidSystemInfo.ordering,
                  o = a.Name.get(t + "-" + i + "-UCS2");
                return r.CMapFactory.create({
                  encoding: o,
                  fetchBuiltInCMap: this._fetchBuiltInCMapBound,
                  useCMap: null,
                }).then(function (t) {
                  const i = e.cMap,
                    r = [];
                  i.forEach(function (e, i) {
                    if (i > 65535)
                      throw new n.FormatError("Max size of CID is 65,535");
                    const a = t.lookup(i);
                    if (a)
                      r[e] = String.fromCharCode(
                        (a.charCodeAt(0) << 8) + a.charCodeAt(1)
                      );
                  });
                  return new s.ToUnicodeMap(r);
                });
              }
              return Promise.resolve(
                new s.IdentityToUnicodeMap(e.firstChar, e.lastChar)
              );
            }
            readToUnicode(e) {
              var t = e;
              if ((0, a.isName)(t))
                return r.CMapFactory.create({
                  encoding: t,
                  fetchBuiltInCMap: this._fetchBuiltInCMapBound,
                  useCMap: null,
                }).then(function (e) {
                  if (e instanceof r.IdentityCMap)
                    return new s.IdentityToUnicodeMap(0, 65535);
                  else return new s.ToUnicodeMap(e.getMap());
                });
              else if ((0, a.isStream)(t))
                return r.CMapFactory.create({
                  encoding: t,
                  fetchBuiltInCMap: this._fetchBuiltInCMapBound,
                  useCMap: null,
                }).then(
                  function (e) {
                    if (e instanceof r.IdentityCMap)
                      return new s.IdentityToUnicodeMap(0, 65535);
                    var t = new Array(e.length);
                    e.forEach(function (e, i) {
                      for (var n = [], r = 0; r < i.length; r += 2) {
                        var a = (i.charCodeAt(r) << 8) | i.charCodeAt(r + 1);
                        if (55296 == (63488 & a)) {
                          r += 2;
                          var s = (i.charCodeAt(r) << 8) | i.charCodeAt(r + 1);
                          n.push(((1023 & a) << 10) + (1023 & s) + 65536);
                        } else n.push(a);
                      }
                      t[e] = String.fromCodePoint.apply(String, n);
                    });
                    return new s.ToUnicodeMap(t);
                  },
                  (e) => {
                    if (e instanceof n.AbortException) return null;
                    if (this.options.ignoreErrors) {
                      this.handler.send("UnsupportedFeature", {
                        featureId: n.UNSUPPORTED_FEATURES.errorFontToUnicode,
                      });
                      (0, n.warn)(
                        `readToUnicode - ignoring ToUnicode data: "${e}".`
                      );
                      return null;
                    }
                    throw e;
                  }
                );
              return Promise.resolve(null);
            }
            readCidToGidMap(e, t) {
              for (var i = [], n = 0, r = e.length; n < r; n++) {
                var a = (e[n++] << 8) | e[n];
                const r = n >> 1;
                if (0 !== a || t.has(r)) i[r] = a;
              }
              return i;
            }
            extractWidths(e, t, i) {
              var n,
                r,
                o,
                l,
                c,
                h,
                u,
                d,
                f = this.xref,
                p = [],
                g = 0,
                m = [];
              if (i.composite) {
                g = e.has("DW") ? e.get("DW") : 1e3;
                if ((d = e.get("W")))
                  for (r = 0, o = d.length; r < o; r++) {
                    h = f.fetchIfRef(d[r++]);
                    u = f.fetchIfRef(d[r]);
                    if (Array.isArray(u))
                      for (l = 0, c = u.length; l < c; l++)
                        p[h++] = f.fetchIfRef(u[l]);
                    else {
                      var v = f.fetchIfRef(d[++r]);
                      for (l = h; l <= u; l++) p[l] = v;
                    }
                  }
                if (i.vertical) {
                  var b = e.getArray("DW2") || [880, -1e3];
                  n = [b[1], 0.5 * g, b[0]];
                  if ((b = e.get("W2")))
                    for (r = 0, o = b.length; r < o; r++) {
                      h = f.fetchIfRef(b[r++]);
                      u = f.fetchIfRef(b[r]);
                      if (Array.isArray(u))
                        for (l = 0, c = u.length; l < c; l++)
                          m[h++] = [
                            f.fetchIfRef(u[l++]),
                            f.fetchIfRef(u[l++]),
                            f.fetchIfRef(u[l]),
                          ];
                      else {
                        var y = [
                          f.fetchIfRef(b[++r]),
                          f.fetchIfRef(b[++r]),
                          f.fetchIfRef(b[++r]),
                        ];
                        for (l = h; l <= u; l++) m[l] = y;
                      }
                    }
                }
              } else {
                var w = i.firstChar;
                if ((d = e.get("Widths"))) {
                  l = w;
                  for (r = 0, o = d.length; r < o; r++)
                    p[l++] = f.fetchIfRef(d[r]);
                  g = parseFloat(t.get("MissingWidth")) || 0;
                } else {
                  var x = e.get("BaseFont");
                  if ((0, a.isName)(x)) {
                    var k = this.getBaseFontMetrics(x.name);
                    p = this.buildCharCodeToWidth(k.widths, i);
                    g = k.defaultWidth;
                  }
                }
              }
              var C = !0,
                S = g;
              for (var _ in p) {
                var A = p[_];
                if (A)
                  if (S) {
                    if (S !== A) {
                      C = !1;
                      break;
                    }
                  } else S = A;
              }
              if (C) i.flags |= s.FontFlags.FixedPitch;
              i.defaultWidth = g;
              i.widths = p;
              i.defaultVMetrics = n;
              i.vmetrics = m;
            }
            isSerifFont(e) {
              var t = e.split("-")[0];
              return t in (0, h.getSerifFonts)() || -1 !== t.search(/serif/gi);
            }
            getBaseFontMetrics(e) {
              var t = 0,
                i = [],
                r = !1,
                a = (0, h.getStdFontMap)()[e] || e,
                s = (0, y.getMetrics)();
              if (!(a in s))
                if (this.isSerifFont(e)) a = "Times-Roman";
                else a = "Helvetica";
              var o = s[a];
              if ((0, n.isNum)(o)) {
                t = o;
                r = !0;
              } else i = o();
              return { defaultWidth: t, monospace: r, widths: i };
            }
            buildCharCodeToWidth(e, t) {
              for (
                var i = Object.create(null),
                  n = t.differences,
                  r = t.defaultEncoding,
                  a = 0;
                a < 256;
                a++
              )
                if (!(a in n) || !e[n[a]])
                  if (!(a in r) || !e[r[a]]);
                  else i[a] = e[r[a]];
                else i[a] = e[n[a]];
              return i;
            }
            preEvaluateFont(e) {
              var t = e,
                i = e.get("Subtype");
              if (!(0, a.isName)(i))
                throw new n.FormatError("invalid font Subtype");
              var r,
                s = !1;
              if ("Type0" === i.name) {
                var o = e.get("DescendantFonts");
                if (!o)
                  throw new n.FormatError("Descendant fonts are not specified");
                if (
                  !(
                    (e = Array.isArray(o)
                      ? this.xref.fetchIfRef(o[0])
                      : o) instanceof a.Dict
                  )
                )
                  throw new n.FormatError(
                    "Descendant font is not a dictionary."
                  );
                i = e.get("Subtype");
                if (!(0, a.isName)(i))
                  throw new n.FormatError("invalid font Subtype");
                s = !0;
              }
              var l = e.get("FontDescriptor");
              if (l) {
                var c = new w.MurmurHash3_64(),
                  h = t.getRaw("Encoding");
                if ((0, a.isName)(h)) c.update(h.name);
                else if ((0, a.isRef)(h)) c.update(h.toString());
                else if ((0, a.isDict)(h))
                  for (const e of h.getRawValues())
                    if ((0, a.isName)(e)) c.update(e.name);
                    else if ((0, a.isRef)(e)) c.update(e.toString());
                    else if (Array.isArray(e)) {
                      for (
                        var u = e.length, d = new Array(u), f = 0;
                        f < u;
                        f++
                      ) {
                        var p = e[f];
                        if ((0, a.isName)(p)) d[f] = p.name;
                        else if ((0, n.isNum)(p) || (0, a.isRef)(p))
                          d[f] = p.toString();
                      }
                      c.update(d.join());
                    }
                const i = e.get("FirstChar") || 0,
                  o = e.get("LastChar") || (s ? 65535 : 255);
                c.update(`${i}-${o}`);
                var g = e.get("ToUnicode") || t.get("ToUnicode");
                if ((0, a.isStream)(g)) {
                  var m = g.str || g;
                  r = m.buffer
                    ? new Uint8Array(m.buffer.buffer, 0, m.bufferLength)
                    : new Uint8Array(m.bytes.buffer, m.start, m.end - m.start);
                  c.update(r);
                } else if ((0, a.isName)(g)) c.update(g.name);
                var v = e.get("Widths") || t.get("Widths");
                if (v) {
                  r = new Uint8Array(new Uint32Array(v).buffer);
                  c.update(r);
                }
              }
              return {
                descriptor: l,
                dict: e,
                baseDict: t,
                composite: s,
                type: i.name,
                hash: c ? c.hexdigest() : "",
              };
            }
            async translateFont(e) {
              var t,
                i = e.baseDict,
                o = e.dict,
                l = e.composite,
                c = e.descriptor,
                u = e.type,
                d = l ? 65535 : 255;
              const f = o.get("FirstChar") || 0,
                p = o.get("LastChar") || d;
              if (!c)
                if ("Type3" === u) {
                  (c = new a.Dict(null)).set("FontName", a.Name.get(u));
                  c.set("FontBBox", o.getArray("FontBBox") || [0, 0, 0, 0]);
                } else {
                  var g = o.get("BaseFont");
                  if (!(0, a.isName)(g))
                    throw new n.FormatError("Base font is not specified");
                  g = g.name.replace(/[,_]/g, "-");
                  var m = this.getBaseFontMetrics(g),
                    v = g.split("-")[0],
                    b =
                      (this.isSerifFont(v) ? s.FontFlags.Serif : 0) |
                      (m.monospace ? s.FontFlags.FixedPitch : 0) |
                      ((0, h.getSymbolsFonts)()[v]
                        ? s.FontFlags.Symbolic
                        : s.FontFlags.Nonsymbolic);
                  t = {
                    type: u,
                    name: g,
                    widths: m.widths,
                    defaultWidth: m.defaultWidth,
                    flags: b,
                    firstChar: f,
                    lastChar: p,
                  };
                  const e = o.get("Widths");
                  return this.extractDataStructures(o, o, t).then((t) => {
                    if (e) {
                      const i = [];
                      let n = f;
                      for (let t = 0, r = e.length; t < r; t++)
                        i[n++] = this.xref.fetchIfRef(e[t]);
                      t.widths = i;
                    } else t.widths = this.buildCharCodeToWidth(m.widths, t);
                    return new s.Font(g, null, t);
                  });
                }
              var y = c.get("FontName"),
                w = o.get("BaseFont");
              if ((0, n.isString)(y)) y = a.Name.get(y);
              if ((0, n.isString)(w)) w = a.Name.get(w);
              if ("Type3" !== u) {
                var x = y && y.name,
                  k = w && w.name;
                if (x !== k) {
                  (0, n.info)(
                    `The FontDescriptor's FontName is "${x}" but should be the same as the Font's BaseFont "${k}".`
                  );
                  if (x && k && k.startsWith(x)) y = w;
                }
              }
              y = y || w;
              if (!(0, a.isName)(y))
                throw new n.FormatError("invalid font name");
              var C = c.get("FontFile", "FontFile2", "FontFile3");
              if (C)
                if (C.dict) {
                  var S = C.dict.get("Subtype");
                  if (S) S = S.name;
                  var _ = C.dict.get("Length1"),
                    A = C.dict.get("Length2"),
                    F = C.dict.get("Length3");
                }
              t = {
                type: u,
                name: y.name,
                subtype: S,
                file: C,
                length1: _,
                length2: A,
                length3: F,
                loadedName: i.loadedName,
                composite: l,
                fixedPitch: !1,
                fontMatrix: o.getArray("FontMatrix") || n.FONT_IDENTITY_MATRIX,
                firstChar: f || 0,
                lastChar: p || d,
                bbox: c.getArray("FontBBox"),
                ascent: c.get("Ascent"),
                descent: c.get("Descent"),
                xHeight: c.get("XHeight"),
                capHeight: c.get("CapHeight"),
                flags: c.get("Flags"),
                italicAngle: c.get("ItalicAngle"),
                isType3Font: !1,
              };
              if (l) {
                const e = i.get("Encoding");
                if ((0, a.isName)(e)) t.cidEncoding = e.name;
                const n = await r.CMapFactory.create({
                  encoding: e,
                  fetchBuiltInCMap: this._fetchBuiltInCMapBound,
                  useCMap: null,
                });
                t.cMap = n;
                t.vertical = t.cMap.vertical;
              }
              return this.extractDataStructures(o, i, t).then((e) => {
                this.extractWidths(o, c, e);
                if ("Type3" === u) e.isType3Font = !0;
                return new s.Font(y.name, C, e);
              });
            }
            static buildFontPaths(e, t, i) {
              function n(t) {
                if (!e.renderer.hasBuiltPath(t))
                  i.send("commonobj", [
                    `${e.loadedName}_path_${t}`,
                    "FontPath",
                    e.renderer.getPathJs(t),
                  ]);
              }
              for (const e of t) {
                n(e.fontChar);
                const t = e.accent;
                if (t && t.fontChar) n(t.fontChar);
              }
            }
            static get fallbackFontDict() {
              const e = new a.Dict();
              e.set("BaseFont", a.Name.get("PDFJS-FallbackFont"));
              e.set("Type", a.Name.get("FallbackType"));
              e.set("Subtype", a.Name.get("FallbackType"));
              e.set("Encoding", a.Name.get("WinAnsiEncoding"));
              return (0, n.shadow)(this, "fallbackFontDict", e);
            }
          }
          t.PartialEvaluator = F;
          class T {
            constructor({
              loadedName: e,
              font: t,
              dict: i,
              extraProperties: n = !1,
            }) {
              this.loadedName = e;
              this.font = t;
              this.dict = i;
              this._extraProperties = n;
              this.type3Loaded = null;
              this.type3Dependencies = t.isType3Font ? new Set() : null;
              this.sent = !1;
            }
            send(e) {
              if (!this.sent) {
                this.sent = !0;
                e.send("commonobj", [
                  this.loadedName,
                  "Font",
                  this.font.exportData(this._extraProperties),
                ]);
              }
            }
            fallback(e) {
              if (!this.font.data) return;
              this.font.disableFontFace = !0;
              const t = this.font.glyphCacheValues;
              F.buildFontPaths(this.font, t, e);
            }
            loadType3Data(e, t, i) {
              if (this.type3Loaded) return this.type3Loaded;
              if (!this.font.isType3Font)
                throw new Error("Must be a Type3 font.");
              var r = Object.create(e.options);
              r.ignoreErrors = !1;
              var a = e.clone(r);
              a.parsingType3Font = !0;
              const s = this.font,
                o = this.type3Dependencies;
              var l = Promise.resolve(),
                c = this.dict.get("CharProcs"),
                h = this.dict.get("Resources") || t,
                u = Object.create(null);
              for (const e of c.getKeys())
                l = l.then(() => {
                  var t = c.get(e),
                    r = new x.OperatorList();
                  return a
                    .getOperatorList({
                      stream: t,
                      task: i,
                      resources: h,
                      operatorList: r,
                    })
                    .then(() => {
                      if (r.fnArray[0] === n.OPS.setCharWidthAndBounds)
                        this._removeType3ColorOperators(r);
                      u[e] = r.getIR();
                      for (const e of r.dependencies) o.add(e);
                    })
                    .catch(function (t) {
                      (0,
                      n.warn)(`Type3 font resource "${e}" is not available.`);
                      const i = new x.OperatorList();
                      u[e] = i.getIR();
                    });
                });
              this.type3Loaded = l.then(function () {
                s.charProcOperatorList = u;
              });
              return this.type3Loaded;
            }
            _removeType3ColorOperators(e) {
              let t = 1,
                i = e.length;
              for (; t < i; ) {
                switch (e.fnArray[t]) {
                  case n.OPS.setStrokeColorSpace:
                  case n.OPS.setFillColorSpace:
                  case n.OPS.setStrokeColor:
                  case n.OPS.setStrokeColorN:
                  case n.OPS.setFillColor:
                  case n.OPS.setFillColorN:
                  case n.OPS.setStrokeGray:
                  case n.OPS.setFillGray:
                  case n.OPS.setStrokeRGBColor:
                  case n.OPS.setFillRGBColor:
                  case n.OPS.setStrokeCMYKColor:
                  case n.OPS.setFillCMYKColor:
                  case n.OPS.shadingFill:
                  case n.OPS.setRenderingIntent:
                    e.fnArray.splice(t, 1);
                    e.argsArray.splice(t, 1);
                    i--;
                    continue;
                  case n.OPS.setGState:
                    const [r] = e.argsArray[t];
                    let a = 0,
                      s = r.length;
                    for (; a < s; ) {
                      const [e] = r[a];
                      switch (e) {
                        case "TR":
                        case "TR2":
                        case "HT":
                        case "BG":
                        case "BG2":
                        case "UCR":
                        case "UCR2":
                          r.splice(a, 1);
                          s--;
                          continue;
                      }
                      a++;
                    }
                }
                t++;
              }
            }
          }
          class P {
            constructor(e = new I()) {
              this.state = e;
              this.stateStack = [];
            }
            save() {
              var e = this.state;
              this.stateStack.push(this.state);
              this.state = e.clone();
            }
            restore() {
              var e = this.stateStack.pop();
              if (e) this.state = e;
            }
            transform(e) {
              this.state.ctm = n.Util.transform(this.state.ctm, e);
            }
          }
          class E {
            constructor() {
              this.ctm = new Float32Array(n.IDENTITY_MATRIX);
              this.fontName = null;
              this.fontSize = 0;
              this.font = null;
              this.fontMatrix = n.FONT_IDENTITY_MATRIX;
              this.textMatrix = n.IDENTITY_MATRIX.slice();
              this.textLineMatrix = n.IDENTITY_MATRIX.slice();
              this.charSpacing = 0;
              this.wordSpacing = 0;
              this.leading = 0;
              this.textHScale = 1;
              this.textRise = 0;
            }
            setTextMatrix(e, t, i, n, r, a) {
              var s = this.textMatrix;
              s[0] = e;
              s[1] = t;
              s[2] = i;
              s[3] = n;
              s[4] = r;
              s[5] = a;
            }
            setTextLineMatrix(e, t, i, n, r, a) {
              var s = this.textLineMatrix;
              s[0] = e;
              s[1] = t;
              s[2] = i;
              s[3] = n;
              s[4] = r;
              s[5] = a;
            }
            translateTextMatrix(e, t) {
              var i = this.textMatrix;
              i[4] = i[0] * e + i[2] * t + i[4];
              i[5] = i[1] * e + i[3] * t + i[5];
            }
            translateTextLineMatrix(e, t) {
              var i = this.textLineMatrix;
              i[4] = i[0] * e + i[2] * t + i[4];
              i[5] = i[1] * e + i[3] * t + i[5];
            }
            calcTextLineMatrixAdvance(e, t, i, n, r, a) {
              var s = this.font;
              if (!s) return null;
              var o = this.textLineMatrix;
              if (e !== o[0] || t !== o[1] || i !== o[2] || n !== o[3])
                return null;
              var l = r - o[4],
                c = a - o[5];
              if ((s.vertical && 0 !== l) || (!s.vertical && 0 !== c))
                return null;
              var h,
                u,
                d = e * n - t * i;
              if (s.vertical) {
                h = (-c * i) / d;
                u = (c * e) / d;
              } else {
                h = (l * n) / d;
                u = (-l * t) / d;
              }
              return { width: h, height: u, value: s.vertical ? u : h };
            }
            calcRenderMatrix(e) {
              var t = [
                this.fontSize * this.textHScale,
                0,
                0,
                this.fontSize,
                0,
                this.textRise,
              ];
              return n.Util.transform(e, n.Util.transform(this.textMatrix, t));
            }
            carriageReturn() {
              this.translateTextLineMatrix(0, -this.leading);
              this.textMatrix = this.textLineMatrix.slice();
            }
            clone() {
              var e = Object.create(this);
              e.textMatrix = this.textMatrix.slice();
              e.textLineMatrix = this.textLineMatrix.slice();
              e.fontMatrix = this.fontMatrix.slice();
              return e;
            }
          }
          class I {
            constructor() {
              this.ctm = new Float32Array(n.IDENTITY_MATRIX);
              this.font = null;
              this.textRenderingMode = n.TextRenderingMode.FILL;
              this.fillColorSpace = m.ColorSpace.singletons.gray;
              this.strokeColorSpace = m.ColorSpace.singletons.gray;
            }
            clone() {
              return Object.create(this);
            }
          }
          class D {
            static get opMap() {
              const e = (0, l.getLookupTableFactory)(function (e) {
                e.w = { id: n.OPS.setLineWidth, numArgs: 1, variableArgs: !1 };
                e.J = { id: n.OPS.setLineCap, numArgs: 1, variableArgs: !1 };
                e.j = { id: n.OPS.setLineJoin, numArgs: 1, variableArgs: !1 };
                e.M = { id: n.OPS.setMiterLimit, numArgs: 1, variableArgs: !1 };
                e.d = { id: n.OPS.setDash, numArgs: 2, variableArgs: !1 };
                e.ri = {
                  id: n.OPS.setRenderingIntent,
                  numArgs: 1,
                  variableArgs: !1,
                };
                e.i = { id: n.OPS.setFlatness, numArgs: 1, variableArgs: !1 };
                e.gs = { id: n.OPS.setGState, numArgs: 1, variableArgs: !1 };
                e.q = { id: n.OPS.save, numArgs: 0, variableArgs: !1 };
                e.Q = { id: n.OPS.restore, numArgs: 0, variableArgs: !1 };
                e.cm = { id: n.OPS.transform, numArgs: 6, variableArgs: !1 };
                e.m = { id: n.OPS.moveTo, numArgs: 2, variableArgs: !1 };
                e.l = { id: n.OPS.lineTo, numArgs: 2, variableArgs: !1 };
                e.c = { id: n.OPS.curveTo, numArgs: 6, variableArgs: !1 };
                e.v = { id: n.OPS.curveTo2, numArgs: 4, variableArgs: !1 };
                e.y = { id: n.OPS.curveTo3, numArgs: 4, variableArgs: !1 };
                e.h = { id: n.OPS.closePath, numArgs: 0, variableArgs: !1 };
                e.re = { id: n.OPS.rectangle, numArgs: 4, variableArgs: !1 };
                e.S = { id: n.OPS.stroke, numArgs: 0, variableArgs: !1 };
                e.s = { id: n.OPS.closeStroke, numArgs: 0, variableArgs: !1 };
                e.f = { id: n.OPS.fill, numArgs: 0, variableArgs: !1 };
                e.F = { id: n.OPS.fill, numArgs: 0, variableArgs: !1 };
                e["f*"] = { id: n.OPS.eoFill, numArgs: 0, variableArgs: !1 };
                e.B = { id: n.OPS.fillStroke, numArgs: 0, variableArgs: !1 };
                e["B*"] = {
                  id: n.OPS.eoFillStroke,
                  numArgs: 0,
                  variableArgs: !1,
                };
                e.b = {
                  id: n.OPS.closeFillStroke,
                  numArgs: 0,
                  variableArgs: !1,
                };
                e["b*"] = {
                  id: n.OPS.closeEOFillStroke,
                  numArgs: 0,
                  variableArgs: !1,
                };
                e.n = { id: n.OPS.endPath, numArgs: 0, variableArgs: !1 };
                e.W = { id: n.OPS.clip, numArgs: 0, variableArgs: !1 };
                e["W*"] = { id: n.OPS.eoClip, numArgs: 0, variableArgs: !1 };
                e.BT = { id: n.OPS.beginText, numArgs: 0, variableArgs: !1 };
                e.ET = { id: n.OPS.endText, numArgs: 0, variableArgs: !1 };
                e.Tc = {
                  id: n.OPS.setCharSpacing,
                  numArgs: 1,
                  variableArgs: !1,
                };
                e.Tw = {
                  id: n.OPS.setWordSpacing,
                  numArgs: 1,
                  variableArgs: !1,
                };
                e.Tz = { id: n.OPS.setHScale, numArgs: 1, variableArgs: !1 };
                e.TL = { id: n.OPS.setLeading, numArgs: 1, variableArgs: !1 };
                e.Tf = { id: n.OPS.setFont, numArgs: 2, variableArgs: !1 };
                e.Tr = {
                  id: n.OPS.setTextRenderingMode,
                  numArgs: 1,
                  variableArgs: !1,
                };
                e.Ts = { id: n.OPS.setTextRise, numArgs: 1, variableArgs: !1 };
                e.Td = { id: n.OPS.moveText, numArgs: 2, variableArgs: !1 };
                e.TD = {
                  id: n.OPS.setLeadingMoveText,
                  numArgs: 2,
                  variableArgs: !1,
                };
                e.Tm = {
                  id: n.OPS.setTextMatrix,
                  numArgs: 6,
                  variableArgs: !1,
                };
                e["T*"] = { id: n.OPS.nextLine, numArgs: 0, variableArgs: !1 };
                e.Tj = { id: n.OPS.showText, numArgs: 1, variableArgs: !1 };
                e.TJ = {
                  id: n.OPS.showSpacedText,
                  numArgs: 1,
                  variableArgs: !1,
                };
                e["'"] = {
                  id: n.OPS.nextLineShowText,
                  numArgs: 1,
                  variableArgs: !1,
                };
                e['"'] = {
                  id: n.OPS.nextLineSetSpacingShowText,
                  numArgs: 3,
                  variableArgs: !1,
                };
                e.d0 = { id: n.OPS.setCharWidth, numArgs: 2, variableArgs: !1 };
                e.d1 = {
                  id: n.OPS.setCharWidthAndBounds,
                  numArgs: 6,
                  variableArgs: !1,
                };
                e.CS = {
                  id: n.OPS.setStrokeColorSpace,
                  numArgs: 1,
                  variableArgs: !1,
                };
                e.cs = {
                  id: n.OPS.setFillColorSpace,
                  numArgs: 1,
                  variableArgs: !1,
                };
                e.SC = {
                  id: n.OPS.setStrokeColor,
                  numArgs: 4,
                  variableArgs: !0,
                };
                e.SCN = {
                  id: n.OPS.setStrokeColorN,
                  numArgs: 33,
                  variableArgs: !0,
                };
                e.sc = { id: n.OPS.setFillColor, numArgs: 4, variableArgs: !0 };
                e.scn = {
                  id: n.OPS.setFillColorN,
                  numArgs: 33,
                  variableArgs: !0,
                };
                e.G = { id: n.OPS.setStrokeGray, numArgs: 1, variableArgs: !1 };
                e.g = { id: n.OPS.setFillGray, numArgs: 1, variableArgs: !1 };
                e.RG = {
                  id: n.OPS.setStrokeRGBColor,
                  numArgs: 3,
                  variableArgs: !1,
                };
                e.rg = {
                  id: n.OPS.setFillRGBColor,
                  numArgs: 3,
                  variableArgs: !1,
                };
                e.K = {
                  id: n.OPS.setStrokeCMYKColor,
                  numArgs: 4,
                  variableArgs: !1,
                };
                e.k = {
                  id: n.OPS.setFillCMYKColor,
                  numArgs: 4,
                  variableArgs: !1,
                };
                e.sh = { id: n.OPS.shadingFill, numArgs: 1, variableArgs: !1 };
                e.BI = {
                  id: n.OPS.beginInlineImage,
                  numArgs: 0,
                  variableArgs: !1,
                };
                e.ID = {
                  id: n.OPS.beginImageData,
                  numArgs: 0,
                  variableArgs: !1,
                };
                e.EI = {
                  id: n.OPS.endInlineImage,
                  numArgs: 1,
                  variableArgs: !1,
                };
                e.Do = { id: n.OPS.paintXObject, numArgs: 1, variableArgs: !1 };
                e.MP = { id: n.OPS.markPoint, numArgs: 1, variableArgs: !1 };
                e.DP = {
                  id: n.OPS.markPointProps,
                  numArgs: 2,
                  variableArgs: !1,
                };
                e.BMC = {
                  id: n.OPS.beginMarkedContent,
                  numArgs: 1,
                  variableArgs: !1,
                };
                e.BDC = {
                  id: n.OPS.beginMarkedContentProps,
                  numArgs: 2,
                  variableArgs: !1,
                };
                e.EMC = {
                  id: n.OPS.endMarkedContent,
                  numArgs: 0,
                  variableArgs: !1,
                };
                e.BX = { id: n.OPS.beginCompat, numArgs: 0, variableArgs: !1 };
                e.EX = { id: n.OPS.endCompat, numArgs: 0, variableArgs: !1 };
                e.BM = null;
                e.BD = null;
                e.true = null;
                e.fa = null;
                e.fal = null;
                e.fals = null;
                e.false = null;
                e.nu = null;
                e.nul = null;
                e.null = null;
              });
              return (0, n.shadow)(this, "opMap", e());
            }
            static get MAX_INVALID_PATH_OPS() {
              return (0, n.shadow)(this, "MAX_INVALID_PATH_OPS", 20);
            }
            constructor(e, t, i = new P()) {
              this.parser = new f.Parser({
                lexer: new f.Lexer(e, D.opMap),
                xref: t,
              });
              this.stateManager = i;
              this.nonProcessedArgs = [];
              this._numInvalidPathOPS = 0;
            }
            get savedStatesDepth() {
              return this.stateManager.stateStack.length;
            }
            read(e) {
              for (var t = e.args; ; ) {
                var i = this.parser.getObj();
                if (i instanceof a.Cmd) {
                  var r = i.cmd,
                    s = D.opMap[r];
                  if (!s) {
                    (0, n.warn)(`Unknown command "${r}".`);
                    continue;
                  }
                  var o = s.id,
                    l = s.numArgs,
                    c = null !== t ? t.length : 0;
                  if (!s.variableArgs) {
                    if (c !== l) {
                      for (var h = this.nonProcessedArgs; c > l; ) {
                        h.push(t.shift());
                        c--;
                      }
                      for (; c < l && 0 !== h.length; ) {
                        if (null === t) t = [];
                        t.unshift(h.pop());
                        c++;
                      }
                    }
                    if (c < l) {
                      const e = `command ${r}: expected ${l} args, but received ${c} args.`;
                      if (
                        o >= n.OPS.moveTo &&
                        o <= n.OPS.endPath &&
                        ++this._numInvalidPathOPS > D.MAX_INVALID_PATH_OPS
                      )
                        throw new n.FormatError(`Invalid ${e}`);
                      (0, n.warn)(`Skipping ${e}`);
                      if (null !== t) t.length = 0;
                      continue;
                    }
                  } else if (c > l)
                    (0, n.info)(
                      `Command ${r}: expected [0, ${l}] args, but received ${c} args.`
                    );
                  this.preprocessCommand(o, t);
                  e.fn = o;
                  e.args = t;
                  return !0;
                }
                if (i === a.EOF) return !1;
                if (null !== i) {
                  if (null === t) t = [];
                  t.push(i);
                  if (t.length > 33)
                    throw new n.FormatError("Too many arguments");
                }
              }
            }
            preprocessCommand(e, t) {
              switch (0 | e) {
                case n.OPS.save:
                  this.stateManager.save();
                  break;
                case n.OPS.restore:
                  this.stateManager.restore();
                  break;
                case n.OPS.transform:
                  this.stateManager.transform(t);
              }
            }
          }
          t.EvaluatorPreprocessor = D;
        },
        (e, t, i) => {
          Object.defineProperty(t, "__esModule", { value: !0 });
          t.IdentityCMap = t.CMapFactory = t.CMap = void 0;
          var n = i(2),
            r = i(5),
            a = i(11),
            s = i(8),
            o = i(12),
            l = [
              "Adobe-GB1-UCS2",
              "Adobe-CNS1-UCS2",
              "Adobe-Japan1-UCS2",
              "Adobe-Korea1-UCS2",
              "78-EUC-H",
              "78-EUC-V",
              "78-H",
              "78-RKSJ-H",
              "78-RKSJ-V",
              "78-V",
              "78ms-RKSJ-H",
              "78ms-RKSJ-V",
              "83pv-RKSJ-H",
              "90ms-RKSJ-H",
              "90ms-RKSJ-V",
              "90msp-RKSJ-H",
              "90msp-RKSJ-V",
              "90pv-RKSJ-H",
              "90pv-RKSJ-V",
              "Add-H",
              "Add-RKSJ-H",
              "Add-RKSJ-V",
              "Add-V",
              "Adobe-CNS1-0",
              "Adobe-CNS1-1",
              "Adobe-CNS1-2",
              "Adobe-CNS1-3",
              "Adobe-CNS1-4",
              "Adobe-CNS1-5",
              "Adobe-CNS1-6",
              "Adobe-GB1-0",
              "Adobe-GB1-1",
              "Adobe-GB1-2",
              "Adobe-GB1-3",
              "Adobe-GB1-4",
              "Adobe-GB1-5",
              "Adobe-Japan1-0",
              "Adobe-Japan1-1",
              "Adobe-Japan1-2",
              "Adobe-Japan1-3",
              "Adobe-Japan1-4",
              "Adobe-Japan1-5",
              "Adobe-Japan1-6",
              "Adobe-Korea1-0",
              "Adobe-Korea1-1",
              "Adobe-Korea1-2",
              "B5-H",
              "B5-V",
              "B5pc-H",
              "B5pc-V",
              "CNS-EUC-H",
              "CNS-EUC-V",
              "CNS1-H",
              "CNS1-V",
              "CNS2-H",
              "CNS2-V",
              "ETHK-B5-H",
              "ETHK-B5-V",
              "ETen-B5-H",
              "ETen-B5-V",
              "ETenms-B5-H",
              "ETenms-B5-V",
              "EUC-H",
              "EUC-V",
              "Ext-H",
              "Ext-RKSJ-H",
              "Ext-RKSJ-V",
              "Ext-V",
              "GB-EUC-H",
              "GB-EUC-V",
              "GB-H",
              "GB-V",
              "GBK-EUC-H",
              "GBK-EUC-V",
              "GBK2K-H",
              "GBK2K-V",
              "GBKp-EUC-H",
              "GBKp-EUC-V",
              "GBT-EUC-H",
              "GBT-EUC-V",
              "GBT-H",
              "GBT-V",
              "GBTpc-EUC-H",
              "GBTpc-EUC-V",
              "GBpc-EUC-H",
              "GBpc-EUC-V",
              "H",
              "HKdla-B5-H",
              "HKdla-B5-V",
              "HKdlb-B5-H",
              "HKdlb-B5-V",
              "HKgccs-B5-H",
              "HKgccs-B5-V",
              "HKm314-B5-H",
              "HKm314-B5-V",
              "HKm471-B5-H",
              "HKm471-B5-V",
              "HKscs-B5-H",
              "HKscs-B5-V",
              "Hankaku",
              "Hiragana",
              "KSC-EUC-H",
              "KSC-EUC-V",
              "KSC-H",
              "KSC-Johab-H",
              "KSC-Johab-V",
              "KSC-V",
              "KSCms-UHC-H",
              "KSCms-UHC-HW-H",
              "KSCms-UHC-HW-V",
              "KSCms-UHC-V",
              "KSCpc-EUC-H",
              "KSCpc-EUC-V",
              "Katakana",
              "NWP-H",
              "NWP-V",
              "RKSJ-H",
              "RKSJ-V",
              "Roman",
              "UniCNS-UCS2-H",
              "UniCNS-UCS2-V",
              "UniCNS-UTF16-H",
              "UniCNS-UTF16-V",
              "UniCNS-UTF32-H",
              "UniCNS-UTF32-V",
              "UniCNS-UTF8-H",
              "UniCNS-UTF8-V",
              "UniGB-UCS2-H",
              "UniGB-UCS2-V",
              "UniGB-UTF16-H",
              "UniGB-UTF16-V",
              "UniGB-UTF32-H",
              "UniGB-UTF32-V",
              "UniGB-UTF8-H",
              "UniGB-UTF8-V",
              "UniJIS-UCS2-H",
              "UniJIS-UCS2-HW-H",
              "UniJIS-UCS2-HW-V",
              "UniJIS-UCS2-V",
              "UniJIS-UTF16-H",
              "UniJIS-UTF16-V",
              "UniJIS-UTF32-H",
              "UniJIS-UTF32-V",
              "UniJIS-UTF8-H",
              "UniJIS-UTF8-V",
              "UniJIS2004-UTF16-H",
              "UniJIS2004-UTF16-V",
              "UniJIS2004-UTF32-H",
              "UniJIS2004-UTF32-V",
              "UniJIS2004-UTF8-H",
              "UniJIS2004-UTF8-V",
              "UniJISPro-UCS2-HW-V",
              "UniJISPro-UCS2-V",
              "UniJISPro-UTF8-V",
              "UniJISX0213-UTF32-H",
              "UniJISX0213-UTF32-V",
              "UniJISX02132004-UTF32-H",
              "UniJISX02132004-UTF32-V",
              "UniKS-UCS2-H",
              "UniKS-UCS2-V",
              "UniKS-UTF16-H",
              "UniKS-UTF16-V",
              "UniKS-UTF32-H",
              "UniKS-UTF32-V",
              "UniKS-UTF8-H",
              "UniKS-UTF8-V",
              "V",
              "WP-Symbol",
            ];
          const c = 2 ** 24 - 1;
          class h {
            constructor(e = !1) {
              this.codespaceRanges = [[], [], [], []];
              this.numCodespaceRanges = 0;
              this._map = [];
              this.name = "";
              this.vertical = !1;
              this.useCMap = null;
              this.builtInCMap = e;
            }
            addCodespaceRange(e, t, i) {
              this.codespaceRanges[e - 1].push(t, i);
              this.numCodespaceRanges++;
            }
            mapCidRange(e, t, i) {
              if (t - e > c)
                throw new Error(
                  "mapCidRange - ignoring data above MAX_MAP_RANGE."
                );
              for (; e <= t; ) this._map[e++] = i++;
            }
            mapBfRange(e, t, i) {
              if (t - e > c)
                throw new Error(
                  "mapBfRange - ignoring data above MAX_MAP_RANGE."
                );
              for (var n = i.length - 1; e <= t; ) {
                this._map[e++] = i;
                i =
                  i.substring(0, n) + String.fromCharCode(i.charCodeAt(n) + 1);
              }
            }
            mapBfRangeToArray(e, t, i) {
              if (t - e > c)
                throw new Error(
                  "mapBfRangeToArray - ignoring data above MAX_MAP_RANGE."
                );
              const n = i.length;
              let r = 0;
              for (; e <= t && r < n; ) {
                this._map[e] = i[r++];
                ++e;
              }
            }
            mapOne(e, t) {
              this._map[e] = t;
            }
            lookup(e) {
              return this._map[e];
            }
            contains(e) {
              return void 0 !== this._map[e];
            }
            forEach(e) {
              const t = this._map,
                i = t.length;
              if (i <= 65536) {
                for (let n = 0; n < i; n++) if (void 0 !== t[n]) e(n, t[n]);
              } else for (const i in t) e(i, t[i]);
            }
            charCodeOf(e) {
              const t = this._map;
              if (t.length <= 65536) return t.indexOf(e);
              for (const i in t) if (t[i] === e) return 0 | i;
              return -1;
            }
            getMap() {
              return this._map;
            }
            readCharCode(e, t, i) {
              let n = 0;
              const r = this.codespaceRanges;
              for (let a = 0, s = r.length; a < s; a++) {
                n = ((n << 8) | e.charCodeAt(t + a)) >>> 0;
                const s = r[a];
                for (let e = 0, t = s.length; e < t; ) {
                  const t = s[e++],
                    r = s[e++];
                  if (n >= t && n <= r) {
                    i.charcode = n;
                    i.length = a + 1;
                    return;
                  }
                }
              }
              i.charcode = 0;
              i.length = 1;
            }
            getCharCodeLength(e) {
              const t = this.codespaceRanges;
              for (let i = 0, n = t.length; i < n; i++) {
                const n = t[i];
                for (let t = 0, r = n.length; t < r; ) {
                  const r = n[t++],
                    a = n[t++];
                  if (e >= r && e <= a) return i + 1;
                }
              }
              return 1;
            }
            get length() {
              return this._map.length;
            }
            get isIdentityCMap() {
              if ("Identity-H" !== this.name && "Identity-V" !== this.name)
                return !1;
              if (65536 !== this._map.length) return !1;
              for (let e = 0; e < 65536; e++) if (this._map[e] !== e) return !1;
              return !0;
            }
          }
          t.CMap = h;
          class u extends h {
            constructor(e, t) {
              super();
              this.vertical = e;
              this.addCodespaceRange(t, 0, 65535);
            }
            mapCidRange(e, t, i) {
              (0, n.unreachable)("should not call mapCidRange");
            }
            mapBfRange(e, t, i) {
              (0, n.unreachable)("should not call mapBfRange");
            }
            mapBfRangeToArray(e, t, i) {
              (0, n.unreachable)("should not call mapBfRangeToArray");
            }
            mapOne(e, t) {
              (0, n.unreachable)("should not call mapCidOne");
            }
            lookup(e) {
              return Number.isInteger(e) && e <= 65535 ? e : void 0;
            }
            contains(e) {
              return Number.isInteger(e) && e <= 65535;
            }
            forEach(e) {
              for (let t = 0; t <= 65535; t++) e(t, t);
            }
            charCodeOf(e) {
              return Number.isInteger(e) && e <= 65535 ? e : -1;
            }
            getMap() {
              const e = new Array(65536);
              for (let t = 0; t <= 65535; t++) e[t] = t;
              return e;
            }
            get length() {
              return 65536;
            }
            get isIdentityCMap() {
              (0, n.unreachable)("should not access .isIdentityCMap");
            }
          }
          t.IdentityCMap = u;
          var d = (function () {
              function e(e, t) {
                for (var i = 0, n = 0; n <= t; n++) i = (i << 8) | e[n];
                return i >>> 0;
              }
              function t(e, t) {
                if (1 === t) return String.fromCharCode(e[0], e[1]);
                if (3 === t) return String.fromCharCode(e[0], e[1], e[2], e[3]);
                else
                  return String.fromCharCode.apply(null, e.subarray(0, t + 1));
              }
              function i(e, t, i) {
                for (var n = 0, r = i; r >= 0; r--) {
                  n += e[r] + t[r];
                  e[r] = 255 & n;
                  n >>= 8;
                }
              }
              function r(e, t) {
                for (var i = 1, n = t; n >= 0 && i > 0; n--) {
                  i += e[n];
                  e[n] = 255 & i;
                  i >>= 8;
                }
              }
              var a = 16;
              function s(e) {
                this.buffer = e;
                this.pos = 0;
                this.end = e.length;
                this.tmpBuf = new Uint8Array(19);
              }
              s.prototype = {
                readByte() {
                  if (this.pos >= this.end) return -1;
                  else return this.buffer[this.pos++];
                },
                readNumber() {
                  var e,
                    t = 0;
                  do {
                    var i = this.readByte();
                    if (i < 0)
                      throw new n.FormatError("unexpected EOF in bcmap");
                    e = !(128 & i);
                    t = (t << 7) | (127 & i);
                  } while (!e);
                  return t;
                },
                readSigned() {
                  var e = this.readNumber();
                  return 1 & e ? ~(e >>> 1) : e >>> 1;
                },
                readHex(e, t) {
                  e.set(this.buffer.subarray(this.pos, this.pos + t + 1));
                  this.pos += t + 1;
                },
                readHexNumber(e, t) {
                  var i,
                    r = this.tmpBuf,
                    a = 0;
                  do {
                    var s = this.readByte();
                    if (s < 0)
                      throw new n.FormatError("unexpected EOF in bcmap");
                    i = !(128 & s);
                    r[a++] = 127 & s;
                  } while (!i);
                  for (var o = t, l = 0, c = 0; o >= 0; ) {
                    for (; c < 8 && r.length > 0; ) {
                      l = (r[--a] << c) | l;
                      c += 7;
                    }
                    e[o] = 255 & l;
                    o--;
                    l >>= 8;
                    c -= 8;
                  }
                },
                readHexSigned(e, t) {
                  this.readHexNumber(e, t);
                  for (var i = 1 & e[t] ? 255 : 0, n = 0, r = 0; r <= t; r++) {
                    n = ((1 & n) << 8) | e[r];
                    e[r] = (n >> 1) ^ i;
                  }
                },
                readString() {
                  for (var e = this.readNumber(), t = "", i = 0; i < e; i++)
                    t += String.fromCharCode(this.readNumber());
                  return t;
                },
              };
              function o() {}
              o.prototype = {
                process: function (n, o, l) {
                  return new Promise(function (c, h) {
                    var u = new s(n),
                      d = u.readByte();
                    o.vertical = !!(1 & d);
                    for (
                      var f,
                        p,
                        g = null,
                        m = new Uint8Array(a),
                        v = new Uint8Array(a),
                        b = new Uint8Array(a),
                        y = new Uint8Array(a),
                        w = new Uint8Array(a);
                      (p = u.readByte()) >= 0;

                    ) {
                      var x = p >> 5;
                      if (7 !== x) {
                        var k = !!(16 & p),
                          C = 15 & p;
                        if (C + 1 > a)
                          throw new Error(
                            "processBinaryCMap: Invalid dataSize."
                          );
                        var S,
                          _ = u.readNumber();
                        switch (x) {
                          case 0:
                            u.readHex(m, C);
                            u.readHexNumber(v, C);
                            i(v, m, C);
                            o.addCodespaceRange(C + 1, e(m, C), e(v, C));
                            for (S = 1; S < _; S++) {
                              r(v, C);
                              u.readHexNumber(m, C);
                              i(m, v, C);
                              u.readHexNumber(v, C);
                              i(v, m, C);
                              o.addCodespaceRange(C + 1, e(m, C), e(v, C));
                            }
                            break;
                          case 1:
                            u.readHex(m, C);
                            u.readHexNumber(v, C);
                            i(v, m, C);
                            u.readNumber();
                            for (S = 1; S < _; S++) {
                              r(v, C);
                              u.readHexNumber(m, C);
                              i(m, v, C);
                              u.readHexNumber(v, C);
                              i(v, m, C);
                              u.readNumber();
                            }
                            break;
                          case 2:
                            u.readHex(b, C);
                            f = u.readNumber();
                            o.mapOne(e(b, C), f);
                            for (S = 1; S < _; S++) {
                              r(b, C);
                              if (!k) {
                                u.readHexNumber(w, C);
                                i(b, w, C);
                              }
                              f = u.readSigned() + (f + 1);
                              o.mapOne(e(b, C), f);
                            }
                            break;
                          case 3:
                            u.readHex(m, C);
                            u.readHexNumber(v, C);
                            i(v, m, C);
                            f = u.readNumber();
                            o.mapCidRange(e(m, C), e(v, C), f);
                            for (S = 1; S < _; S++) {
                              r(v, C);
                              if (!k) {
                                u.readHexNumber(m, C);
                                i(m, v, C);
                              } else m.set(v);
                              u.readHexNumber(v, C);
                              i(v, m, C);
                              f = u.readNumber();
                              o.mapCidRange(e(m, C), e(v, C), f);
                            }
                            break;
                          case 4:
                            u.readHex(b, 1);
                            u.readHex(y, C);
                            o.mapOne(e(b, 1), t(y, C));
                            for (S = 1; S < _; S++) {
                              r(b, 1);
                              if (!k) {
                                u.readHexNumber(w, 1);
                                i(b, w, 1);
                              }
                              r(y, C);
                              u.readHexSigned(w, C);
                              i(y, w, C);
                              o.mapOne(e(b, 1), t(y, C));
                            }
                            break;
                          case 5:
                            u.readHex(m, 1);
                            u.readHexNumber(v, 1);
                            i(v, m, 1);
                            u.readHex(y, C);
                            o.mapBfRange(e(m, 1), e(v, 1), t(y, C));
                            for (S = 1; S < _; S++) {
                              r(v, 1);
                              if (!k) {
                                u.readHexNumber(m, 1);
                                i(m, v, 1);
                              } else m.set(v);
                              u.readHexNumber(v, 1);
                              i(v, m, 1);
                              u.readHex(y, C);
                              o.mapBfRange(e(m, 1), e(v, 1), t(y, C));
                            }
                            break;
                          default:
                            h(
                              new Error("processBinaryCMap: Unknown type: " + x)
                            );
                            return;
                        }
                      } else
                        switch (31 & p) {
                          case 0:
                            u.readString();
                            break;
                          case 1:
                            g = u.readString();
                        }
                    }
                    if (!g) c(o);
                    else c(l(g));
                  });
                },
              };
              return o;
            })(),
            f = (function () {
              function e(e) {
                for (var t = 0, i = 0; i < e.length; i++)
                  t = (t << 8) | e.charCodeAt(i);
                return t >>> 0;
              }
              function t(e) {
                if (!(0, n.isString)(e))
                  throw new n.FormatError("Malformed CMap: expected string.");
              }
              function i(e) {
                if (!Number.isInteger(e))
                  throw new n.FormatError("Malformed CMap: expected int.");
              }
              function c(i, n) {
                for (;;) {
                  var a = n.getObj();
                  if ((0, r.isEOF)(a)) break;
                  if ((0, r.isCmd)(a, "endbfchar")) return;
                  t(a);
                  var s = e(a);
                  t((a = n.getObj()));
                  var o = a;
                  i.mapOne(s, o);
                }
              }
              function f(i, a) {
                for (;;) {
                  var s = a.getObj();
                  if ((0, r.isEOF)(s)) break;
                  if ((0, r.isCmd)(s, "endbfrange")) return;
                  t(s);
                  var o = e(s);
                  t((s = a.getObj()));
                  var l = e(s);
                  s = a.getObj();
                  if (Number.isInteger(s) || (0, n.isString)(s)) {
                    var c = Number.isInteger(s) ? String.fromCharCode(s) : s;
                    i.mapBfRange(o, l, c);
                  } else if ((0, r.isCmd)(s, "[")) {
                    s = a.getObj();
                    for (
                      var h = [];
                      !(0, r.isCmd)(s, "]") && !(0, r.isEOF)(s);

                    ) {
                      h.push(s);
                      s = a.getObj();
                    }
                    i.mapBfRangeToArray(o, l, h);
                  } else break;
                }
                throw new n.FormatError("Invalid bf range.");
              }
              function p(n, a) {
                for (;;) {
                  var s = a.getObj();
                  if ((0, r.isEOF)(s)) break;
                  if ((0, r.isCmd)(s, "endcidchar")) return;
                  t(s);
                  var o = e(s);
                  i((s = a.getObj()));
                  var l = s;
                  n.mapOne(o, l);
                }
              }
              function g(n, a) {
                for (;;) {
                  var s = a.getObj();
                  if ((0, r.isEOF)(s)) break;
                  if ((0, r.isCmd)(s, "endcidrange")) return;
                  t(s);
                  var o = e(s);
                  t((s = a.getObj()));
                  var l = e(s);
                  i((s = a.getObj()));
                  var c = s;
                  n.mapCidRange(o, l, c);
                }
              }
              function m(t, i) {
                for (;;) {
                  var a = i.getObj();
                  if ((0, r.isEOF)(a)) break;
                  if ((0, r.isCmd)(a, "endcodespacerange")) return;
                  if (!(0, n.isString)(a)) break;
                  var s = e(a);
                  a = i.getObj();
                  if (!(0, n.isString)(a)) break;
                  var o = e(a);
                  t.addCodespaceRange(a.length, s, o);
                }
                throw new n.FormatError("Invalid codespace range.");
              }
              function v(e, t) {
                var i = t.getObj();
                if (Number.isInteger(i)) e.vertical = !!i;
              }
              function b(e, t) {
                var i = t.getObj();
                if ((0, r.isName)(i) && (0, n.isString)(i.name))
                  e.name = i.name;
              }
              function y(e, t, i, a) {
                var o, l;
                e: for (;;)
                  try {
                    var h = t.getObj();
                    if ((0, r.isEOF)(h)) break;
                    else if ((0, r.isName)(h)) {
                      if ("WMode" === h.name) v(e, t);
                      else if ("CMapName" === h.name) b(e, t);
                      o = h;
                    } else if ((0, r.isCmd)(h))
                      switch (h.cmd) {
                        case "endcmap":
                          break e;
                        case "usecmap":
                          if ((0, r.isName)(o)) l = o.name;
                          break;
                        case "begincodespacerange":
                          m(e, t);
                          break;
                        case "beginbfchar":
                          c(e, t);
                          break;
                        case "begincidchar":
                          p(e, t);
                          break;
                        case "beginbfrange":
                          f(e, t);
                          break;
                        case "begincidrange":
                          g(e, t);
                      }
                  } catch (e) {
                    if (e instanceof s.MissingDataException) throw e;
                    (0, n.warn)("Invalid cMap data: " + e);
                    continue;
                  }
                if (!a && l) a = l;
                if (a) return w(e, i, a);
                else return Promise.resolve(e);
              }
              function w(e, t, i) {
                return x(i, t).then(function (t) {
                  e.useCMap = t;
                  if (0 === e.numCodespaceRanges) {
                    for (
                      var i = e.useCMap.codespaceRanges, n = 0;
                      n < i.length;
                      n++
                    )
                      e.codespaceRanges[n] = i[n].slice();
                    e.numCodespaceRanges = e.useCMap.numCodespaceRanges;
                  }
                  e.useCMap.forEach(function (t, i) {
                    if (!e.contains(t)) e.mapOne(t, e.useCMap.lookup(t));
                  });
                  return e;
                });
              }
              function x(e, t) {
                if ("Identity-H" === e) return Promise.resolve(new u(!1, 2));
                else if ("Identity-V" === e)
                  return Promise.resolve(new u(!0, 2));
                if (!l.includes(e))
                  return Promise.reject(new Error("Unknown CMap name: " + e));
                if (!t)
                  return Promise.reject(
                    new Error("Built-in CMap parameters are not provided.")
                  );
                else
                  return t(e).then(function (e) {
                    var i = e.cMapData,
                      r = e.compressionType,
                      s = new h(!0);
                    if (r === n.CMapCompressionType.BINARY)
                      return new d().process(i, s, function (e) {
                        return w(s, t, e);
                      });
                    if (r === n.CMapCompressionType.NONE) {
                      var l = new a.Lexer(new o.Stream(i));
                      return y(s, l, t, null);
                    }
                    return Promise.reject(
                      new Error(
                        "TODO: Only BINARY/NONE CMap compression is currently supported."
                      )
                    );
                  });
              }
              return {
                async create(e) {
                  var t = e.encoding,
                    i = e.fetchBuiltInCMap,
                    n = e.useCMap;
                  if ((0, r.isName)(t)) return x(t.name, i);
                  else if ((0, r.isStream)(t))
                    return y(new h(), new a.Lexer(t), i, n).then(function (e) {
                      if (e.isIdentityCMap) return x(e.name, i);
                      else return e;
                    });
                  throw new Error("Encoding required.");
                },
              };
            })();
          t.CMapFactory = f;
        },
        (e, t, i) => {
          Object.defineProperty(t, "__esModule", { value: !0 });
          t.getFontType = k;
          t.ToUnicodeMap =
            t.SEAC_ANALYSIS_ENABLED =
            t.IdentityToUnicodeMap =
            t.FontFlags =
            t.Font =
            t.ErrorFont =
              void 0;
          var n = i(2),
            r = i(30),
            a = i(33),
            s = i(32),
            o = i(34),
            l = i(35),
            c = i(8),
            h = i(36),
            u = i(28),
            d = i(12),
            f = i(37);
          const p = [
            [57344, 63743],
            [1048576, 1114109],
          ];
          var g = 1e3,
            m = !0;
          t.SEAC_ANALYSIS_ENABLED = m;
          const v = [
              "ascent",
              "bbox",
              "black",
              "bold",
              "charProcOperatorList",
              "composite",
              "data",
              "defaultVMetrics",
              "defaultWidth",
              "descent",
              "fallbackName",
              "fontMatrix",
              "fontType",
              "isMonospace",
              "isSerifFont",
              "isType3Font",
              "italic",
              "loadedName",
              "mimetype",
              "missingFile",
              "name",
              "remeasure",
              "subtype",
              "type",
              "vertical",
            ],
            b = [
              "cMap",
              "defaultEncoding",
              "differences",
              "isSymbolicFont",
              "seacMap",
              "toFontChar",
              "toUnicode",
              "vmetrics",
              "widths",
            ];
          var y = {
            FixedPitch: 1,
            Serif: 2,
            Symbolic: 4,
            Script: 8,
            Nonsymbolic: 32,
            Italic: 64,
            AllCap: 65536,
            SmallCap: 131072,
            ForceBold: 262144,
          };
          t.FontFlags = y;
          var w = [
            ".notdef",
            ".null",
            "nonmarkingreturn",
            "space",
            "exclam",
            "quotedbl",
            "numbersign",
            "dollar",
            "percent",
            "ampersand",
            "quotesingle",
            "parenleft",
            "parenright",
            "asterisk",
            "plus",
            "comma",
            "hyphen",
            "period",
            "slash",
            "zero",
            "one",
            "two",
            "three",
            "four",
            "five",
            "six",
            "seven",
            "eight",
            "nine",
            "colon",
            "semicolon",
            "less",
            "equal",
            "greater",
            "question",
            "at",
            "A",
            "B",
            "C",
            "D",
            "E",
            "F",
            "G",
            "H",
            "I",
            "J",
            "K",
            "L",
            "M",
            "N",
            "O",
            "P",
            "Q",
            "R",
            "S",
            "T",
            "U",
            "V",
            "W",
            "X",
            "Y",
            "Z",
            "bracketleft",
            "backslash",
            "bracketright",
            "asciicircum",
            "underscore",
            "grave",
            "a",
            "b",
            "c",
            "d",
            "e",
            "f",
            "g",
            "h",
            "i",
            "j",
            "k",
            "l",
            "m",
            "n",
            "o",
            "p",
            "q",
            "r",
            "s",
            "t",
            "u",
            "v",
            "w",
            "x",
            "y",
            "z",
            "braceleft",
            "bar",
            "braceright",
            "asciitilde",
            "Adieresis",
            "Aring",
            "Ccedilla",
            "Eacute",
            "Ntilde",
            "Odieresis",
            "Udieresis",
            "aacute",
            "agrave",
            "acircumflex",
            "adieresis",
            "atilde",
            "aring",
            "ccedilla",
            "eacute",
            "egrave",
            "ecircumflex",
            "edieresis",
            "iacute",
            "igrave",
            "icircumflex",
            "idieresis",
            "ntilde",
            "oacute",
            "ograve",
            "ocircumflex",
            "odieresis",
            "otilde",
            "uacute",
            "ugrave",
            "ucircumflex",
            "udieresis",
            "dagger",
            "degree",
            "cent",
            "sterling",
            "section",
            "bullet",
            "paragraph",
            "germandbls",
            "registered",
            "copyright",
            "trademark",
            "acute",
            "dieresis",
            "notequal",
            "AE",
            "Oslash",
            "infinity",
            "plusminus",
            "lessequal",
            "greaterequal",
            "yen",
            "mu",
            "partialdiff",
            "summation",
            "product",
            "pi",
            "integral",
            "ordfeminine",
            "ordmasculine",
            "Omega",
            "ae",
            "oslash",
            "questiondown",
            "exclamdown",
            "logicalnot",
            "radical",
            "florin",
            "approxequal",
            "Delta",
            "guillemotleft",
            "guillemotright",
            "ellipsis",
            "nonbreakingspace",
            "Agrave",
            "Atilde",
            "Otilde",
            "OE",
            "oe",
            "endash",
            "emdash",
            "quotedblleft",
            "quotedblright",
            "quoteleft",
            "quoteright",
            "divide",
            "lozenge",
            "ydieresis",
            "Ydieresis",
            "fraction",
            "currency",
            "guilsinglleft",
            "guilsinglright",
            "fi",
            "fl",
            "daggerdbl",
            "periodcentered",
            "quotesinglbase",
            "quotedblbase",
            "perthousand",
            "Acircumflex",
            "Ecircumflex",
            "Aacute",
            "Edieresis",
            "Egrave",
            "Iacute",
            "Icircumflex",
            "Idieresis",
            "Igrave",
            "Oacute",
            "Ocircumflex",
            "apple",
            "Ograve",
            "Uacute",
            "Ucircumflex",
            "Ugrave",
            "dotlessi",
            "circumflex",
            "tilde",
            "macron",
            "breve",
            "dotaccent",
            "ring",
            "cedilla",
            "hungarumlaut",
            "ogonek",
            "caron",
            "Lslash",
            "lslash",
            "Scaron",
            "scaron",
            "Zcaron",
            "zcaron",
            "brokenbar",
            "Eth",
            "eth",
            "Yacute",
            "yacute",
            "Thorn",
            "thorn",
            "minus",
            "multiply",
            "onesuperior",
            "twosuperior",
            "threesuperior",
            "onehalf",
            "onequarter",
            "threequarters",
            "franc",
            "Gbreve",
            "gbreve",
            "Idotaccent",
            "Scedilla",
            "scedilla",
            "Cacute",
            "cacute",
            "Ccaron",
            "ccaron",
            "dcroat",
          ];
          function x(e) {
            if (e.fontMatrix)
              if (e.fontMatrix[0] !== n.FONT_IDENTITY_MATRIX[0]) {
                var t = 0.001 / e.fontMatrix[0],
                  i = e.widths;
                for (var r in i) i[r] *= t;
                e.defaultWidth *= t;
              }
          }
          function k(e, t) {
            switch (e) {
              case "Type1":
                return "Type1C" === t ? n.FontType.TYPE1C : n.FontType.TYPE1;
              case "CIDFontType0":
                return "CIDFontType0C" === t
                  ? n.FontType.CIDFONTTYPE0C
                  : n.FontType.CIDFONTTYPE0;
              case "OpenType":
                return n.FontType.OPENTYPE;
              case "TrueType":
                return n.FontType.TRUETYPE;
              case "CIDFontType2":
                return n.FontType.CIDFONTTYPE2;
              case "MMType1":
                return n.FontType.MMTYPE1;
              case "Type0":
                return n.FontType.TYPE0;
              default:
                return n.FontType.UNKNOWN;
            }
          }
          function C(e, t) {
            if (void 0 !== t[e]) return e;
            var i = (0, l.getUnicodeForGlyph)(e, t);
            if (-1 !== i) for (var r in t) if (t[r] === i) return r;
            (0, n.info)("Unable to recover a standard glyph name for: " + e);
            return e;
          }
          var S = (function () {
              function e(e, t, i, n, r, a, s, o) {
                this.fontChar = e;
                this.unicode = t;
                this.accent = i;
                this.width = n;
                this.vmetric = r;
                this.operatorListId = a;
                this.isSpace = s;
                this.isInFont = o;
              }
              e.prototype.matchesForCache = function (e, t, i, n, r, a, s, o) {
                return (
                  this.fontChar === e &&
                  this.unicode === t &&
                  this.accent === i &&
                  this.width === n &&
                  this.vmetric === r &&
                  this.operatorListId === a &&
                  this.isSpace === s &&
                  this.isInFont === o
                );
              };
              return e;
            })(),
            _ = (function () {
              function e(e = []) {
                this._map = e;
              }
              e.prototype = {
                get length() {
                  return this._map.length;
                },
                forEach(e) {
                  for (var t in this._map) e(t, this._map[t].charCodeAt(0));
                },
                has(e) {
                  return void 0 !== this._map[e];
                },
                get(e) {
                  return this._map[e];
                },
                charCodeOf(e) {
                  const t = this._map;
                  if (t.length <= 65536) return t.indexOf(e);
                  for (const i in t) if (t[i] === e) return 0 | i;
                  return -1;
                },
                amend(e) {
                  for (var t in e) this._map[t] = e[t];
                },
              };
              return e;
            })();
          t.ToUnicodeMap = _;
          var A = (function () {
            function e(e, t) {
              this.firstChar = e;
              this.lastChar = t;
            }
            e.prototype = {
              get length() {
                return this.lastChar + 1 - this.firstChar;
              },
              forEach(e) {
                for (var t = this.firstChar, i = this.lastChar; t <= i; t++)
                  e(t, t);
              },
              has(e) {
                return this.firstChar <= e && e <= this.lastChar;
              },
              get(e) {
                if (this.firstChar <= e && e <= this.lastChar)
                  return String.fromCharCode(e);
              },
              charCodeOf(e) {
                return Number.isInteger(e) &&
                  e >= this.firstChar &&
                  e <= this.lastChar
                  ? e
                  : -1;
              },
              amend(e) {
                (0, n.unreachable)("Should not call amend()");
              },
            };
            return e;
          })();
          t.IdentityToUnicodeMap = A;
          var F = (function () {
              function e(e, t, i) {
                e[t] = (i >> 8) & 255;
                e[t + 1] = 255 & i;
              }
              function t(e, t, i) {
                e[t] = (i >> 24) & 255;
                e[t + 1] = (i >> 16) & 255;
                e[t + 2] = (i >> 8) & 255;
                e[t + 3] = 255 & i;
              }
              function i(e, t, i) {
                var n, r;
                if (i instanceof Uint8Array) e.set(i, t);
                else if ("string" == typeof i)
                  for (n = 0, r = i.length; n < r; n++)
                    e[t++] = 255 & i.charCodeAt(n);
                else for (n = 0, r = i.length; n < r; n++) e[t++] = 255 & i[n];
              }
              function r(e) {
                this.sfnt = e;
                this.tables = Object.create(null);
              }
              r.getSearchParams = function (e, t) {
                for (var i = 1, n = 0; (i ^ e) > i; ) {
                  i <<= 1;
                  n++;
                }
                var r = i * t;
                return { range: r, entry: n, rangeShift: t * e - r };
              };
              r.prototype = {
                toArray: function () {
                  var a = this.sfnt,
                    s = this.tables,
                    o = Object.keys(s);
                  o.sort();
                  var l,
                    h,
                    u,
                    d,
                    f,
                    p = o.length,
                    g = 12 + 16 * p,
                    m = [g];
                  for (l = 0; l < p; l++) {
                    g += (((d = s[o[l]]).length + 3) & -4) >>> 0;
                    m.push(g);
                  }
                  var v = new Uint8Array(g);
                  for (l = 0; l < p; l++) {
                    d = s[o[l]];
                    i(v, m[l], d);
                  }
                  if ("true" === a) a = (0, n.string32)(65536);
                  v[0] = 255 & a.charCodeAt(0);
                  v[1] = 255 & a.charCodeAt(1);
                  v[2] = 255 & a.charCodeAt(2);
                  v[3] = 255 & a.charCodeAt(3);
                  e(v, 4, p);
                  var b = r.getSearchParams(p, 16);
                  e(v, 6, b.range);
                  e(v, 8, b.entry);
                  e(v, 10, b.rangeShift);
                  g = 12;
                  for (l = 0; l < p; l++) {
                    f = o[l];
                    v[g] = 255 & f.charCodeAt(0);
                    v[g + 1] = 255 & f.charCodeAt(1);
                    v[g + 2] = 255 & f.charCodeAt(2);
                    v[g + 3] = 255 & f.charCodeAt(3);
                    var y = 0;
                    for (h = m[l], u = m[l + 1]; h < u; h += 4)
                      y = (y + (0, c.readUint32)(v, h)) >>> 0;
                    t(v, g + 4, y);
                    t(v, g + 8, m[l]);
                    t(v, g + 12, s[f].length);
                    g += 16;
                  }
                  return v;
                },
                addTable: function (e, t) {
                  if (e in this.tables)
                    throw new Error("Table " + e + " already exists");
                  this.tables[e] = t;
                },
              };
              return r;
            })(),
            T = (function () {
              function e(e, t, i) {
                var r;
                this.name = e;
                this.loadedName = i.loadedName;
                this.isType3Font = i.isType3Font;
                this.missingFile = !1;
                this.glyphCache = Object.create(null);
                this.isSerifFont = !!(i.flags & y.Serif);
                this.isSymbolicFont = !!(i.flags & y.Symbolic);
                this.isMonospace = !!(i.flags & y.FixedPitch);
                var a = i.type,
                  s = i.subtype;
                this.type = a;
                this.subtype = s;
                let o = "sans-serif";
                if (this.isMonospace) o = "monospace";
                else if (this.isSerifFont) o = "serif";
                this.fallbackName = o;
                this.differences = i.differences;
                this.widths = i.widths;
                this.defaultWidth = i.defaultWidth;
                this.composite = i.composite;
                this.cMap = i.cMap;
                this.capHeight = i.capHeight / g;
                this.ascent = i.ascent / g;
                this.descent = i.descent / g;
                this.fontMatrix = i.fontMatrix;
                this.bbox = i.bbox;
                this.defaultEncoding = i.defaultEncoding;
                this.toUnicode = i.toUnicode;
                this.fallbackToUnicode = i.fallbackToUnicode || new _();
                this.toFontChar = [];
                if ("Type3" !== i.type) {
                  this.cidEncoding = i.cidEncoding;
                  this.vertical = !!i.vertical;
                  if (this.vertical) {
                    this.vmetrics = i.vmetrics;
                    this.defaultVMetrics = i.defaultVMetrics;
                  }
                  if (t && !t.isEmpty) {
                    [a, s] = (function (
                      e,
                      { type: t, subtype: i, composite: r }
                    ) {
                      let a, s;
                      if (
                        (function (e) {
                          var t = e.peekBytes(4);
                          return (
                            65536 === (0, c.readUint32)(t, 0) ||
                            "true" === (0, n.bytesToString)(t)
                          );
                        })(e) ||
                        P(e)
                      )
                        if (r) a = "CIDFontType2";
                        else a = "TrueType";
                      else if (
                        (function (e) {
                          var t = e.peekBytes(4);
                          return "OTTO" === (0, n.bytesToString)(t);
                        })(e)
                      )
                        if (r) a = "CIDFontType2";
                        else a = "OpenType";
                      else if (
                        (function (e) {
                          var t = e.peekBytes(2);
                          if (37 === t[0] && 33 === t[1]) return !0;
                          if (128 === t[0] && 1 === t[1]) return !0;
                          else return !1;
                        })(e)
                      )
                        if (r) a = "CIDFontType0";
                        else a = "MMType1" === t ? "MMType1" : "Type1";
                      else if (
                        (function (e) {
                          const t = e.peekBytes(4);
                          if (t[0] >= 1 && t[3] >= 1 && t[3] <= 4) return !0;
                          else return !1;
                        })(e)
                      )
                        if (r) {
                          a = "CIDFontType0";
                          s = "CIDFontType0C";
                        } else {
                          a = "MMType1" === t ? "MMType1" : "Type1";
                          s = "Type1C";
                        }
                      else {
                        (0, n.warn)(
                          "getFontFileType: Unable to detect correct font file Type/Subtype."
                        );
                        a = t;
                        s = i;
                      }
                      return [a, s];
                    })(t, i);
                    if (a !== this.type || s !== this.subtype)
                      (0, n.info)(
                        `Inconsistent font file Type/SubType, expected: ${this.type}/${this.subtype} but found: ${a}/${s}.`
                      );
                    try {
                      var l;
                      switch (a) {
                        case "MMType1":
                          (0, n.info)(
                            "MMType1 font (" + e + "), falling back to Type1."
                          );
                        case "Type1":
                        case "CIDFontType0":
                          this.mimetype = "font/opentype";
                          var h =
                            "Type1C" === s || "CIDFontType0C" === s
                              ? new D(t, i)
                              : new I(e, t, i);
                          x(i);
                          l = this.convert(e, h, i);
                          break;
                        case "OpenType":
                        case "TrueType":
                        case "CIDFontType2":
                          this.mimetype = "font/opentype";
                          l = this.checkAndRepair(e, t, i);
                          if (this.isOpenType) {
                            x(i);
                            a = "OpenType";
                          }
                          break;
                        default:
                          throw new n.FormatError(`Font ${a} is not supported`);
                      }
                    } catch (e) {
                      (0, n.warn)(e);
                      this.fallbackToSystemFont(i);
                      return;
                    }
                    this.data = l;
                    this.fontType = k(a, s);
                    this.fontMatrix = i.fontMatrix;
                    this.widths = i.widths;
                    this.defaultWidth = i.defaultWidth;
                    this.toUnicode = i.toUnicode;
                    this.seacMap = i.seacMap;
                  } else {
                    if (t)
                      (0, n.warn)(
                        'Font file is empty in "' +
                          e +
                          '" (' +
                          this.loadedName +
                          ")"
                      );
                    this.fallbackToSystemFont(i);
                  }
                } else {
                  for (r = 0; r < 256; r++)
                    this.toFontChar[r] =
                      this.differences[r] || i.defaultEncoding[r];
                  this.fontType = n.FontType.TYPE3;
                }
              }
              function t(e, t) {
                return (e << 8) + t;
              }
              function i(e, t) {
                var i = (e << 8) + t;
                return 32768 & i ? i - 65536 : i;
              }
              function f(e) {
                return String.fromCharCode((e >> 8) & 255, 255 & e);
              }
              function T(e) {
                if (e > 32767) e = 32767;
                else if (e < -32768) e = -32768;
                return String.fromCharCode((e >> 8) & 255, 255 & e);
              }
              function P(e) {
                const t = e.peekBytes(4);
                return "ttcf" === (0, n.bytesToString)(t);
              }
              function E(e, t, i) {
                for (var n, r = [], a = 0, s = e.length; a < s; a++)
                  if (-1 !== (n = (0, l.getUnicodeForGlyph)(e[a], t))) r[a] = n;
                for (var o in i)
                  if (-1 !== (n = (0, l.getUnicodeForGlyph)(i[o], t)))
                    r[+o] = n;
                return r;
              }
              function O(e, t, i) {
                var r = Object.create(null),
                  a = [],
                  s = 0,
                  o = p[s][0],
                  l = p[s][1];
                for (var c in e) {
                  var h = e[(c |= 0)];
                  if (t(h)) {
                    if (o > l) {
                      if (++s >= p.length) {
                        (0, n.warn)(
                          "Ran out of space in font private use area."
                        );
                        break;
                      }
                      o = p[s][0];
                      l = p[s][1];
                    }
                    var u = o++;
                    if (0 === h) h = i;
                    r[u] = h;
                    a[c] = u;
                  }
                }
                return {
                  toFontChar: a,
                  charCodeToGlyphId: r,
                  nextAvailableFontCharCode: o,
                };
              }
              function R(e, t) {
                var i,
                  r,
                  a,
                  s,
                  o = (function (e, t) {
                    var i = [];
                    for (var n in e)
                      if (!(e[n] >= t))
                        i.push({ fontCharCode: 0 | n, glyphId: e[n] });
                    if (0 === i.length) i.push({ fontCharCode: 0, glyphId: 0 });
                    i.sort(function (e, t) {
                      return e.fontCharCode - t.fontCharCode;
                    });
                    for (var r = [], a = i.length, s = 0; s < a; ) {
                      var o = i[s].fontCharCode,
                        l = [i[s].glyphId];
                      ++s;
                      for (var c = o; s < a && c + 1 === i[s].fontCharCode; ) {
                        l.push(i[s].glyphId);
                        ++s;
                        if (65535 == ++c) break;
                      }
                      r.push([o, c, l]);
                    }
                    return r;
                  })(e, t),
                  l = o[o.length - 1][1] > 65535 ? 2 : 1,
                  c = "\0\0" + f(l) + "\0\0" + (0, n.string32)(4 + 8 * l);
                for (i = o.length - 1; i >= 0 && !(o[i][0] <= 65535); --i);
                var h = i + 1;
                if (o[i][0] < 65535 && 65535 === o[i][1]) o[i][1] = 65534;
                var u,
                  d,
                  p,
                  g,
                  m = o[i][1] < 65535 ? 1 : 0,
                  v = h + m,
                  b = F.getSearchParams(v, 2),
                  y = "",
                  w = "",
                  x = "",
                  k = "",
                  C = "",
                  S = 0;
                for (i = 0, r = h; i < r; i++) {
                  d = (u = o[i])[0];
                  p = u[1];
                  y += f(d);
                  w += f(p);
                  var _ = !0;
                  for (a = 1, s = (g = u[2]).length; a < s; ++a)
                    if (g[a] !== g[a - 1] + 1) {
                      _ = !1;
                      break;
                    }
                  if (!_) {
                    var A = 2 * (v - i) + 2 * S;
                    S += p - d + 1;
                    x += f(0);
                    k += f(A);
                    for (a = 0, s = g.length; a < s; ++a) C += f(g[a]);
                  } else {
                    x += f((g[0] - d) & 65535);
                    k += f(0);
                  }
                }
                if (m > 0) {
                  w += "ÿÿ";
                  y += "ÿÿ";
                  x += "\0";
                  k += "\0\0";
                }
                var T =
                    "\0\0" +
                    f(2 * v) +
                    f(b.range) +
                    f(b.entry) +
                    f(b.rangeShift) +
                    w +
                    "\0\0" +
                    y +
                    x +
                    k +
                    C,
                  P = "",
                  E = "";
                if (l > 1) {
                  c += "\0\0\n" + (0, n.string32)(4 + 8 * l + 4 + T.length);
                  P = "";
                  for (i = 0, r = o.length; i < r; i++) {
                    d = (u = o[i])[0];
                    var I = (g = u[2])[0];
                    for (a = 1, s = g.length; a < s; ++a)
                      if (g[a] !== g[a - 1] + 1) {
                        p = u[0] + a - 1;
                        P +=
                          (0, n.string32)(d) +
                          (0, n.string32)(p) +
                          (0, n.string32)(I);
                        d = p + 1;
                        I = g[a];
                      }
                    P +=
                      (0, n.string32)(d) +
                      (0, n.string32)(u[1]) +
                      (0, n.string32)(I);
                  }
                  E =
                    "\0\f\0\0" +
                    (0, n.string32)(P.length + 16) +
                    "\0\0\0\0" +
                    (0, n.string32)(P.length / 12);
                }
                return c + "\0" + f(T.length + 4) + T + E + P;
              }
              function N(e, t, i) {
                i = i || {
                  unitsPerEm: 0,
                  yMax: 0,
                  yMin: 0,
                  ascent: 0,
                  descent: 0,
                };
                var r = 0,
                  a = 0,
                  s = 0,
                  o = 0,
                  c = null,
                  h = 0;
                if (t) {
                  for (var u in t) {
                    if (c > (u |= 0) || !c) c = u;
                    if (h < u) h = u;
                    var d = (0, l.getUnicodeRangeFor)(u);
                    if (d < 32) r |= 1 << d;
                    else if (d < 64) a |= 1 << (d - 32);
                    else if (d < 96) s |= 1 << (d - 64);
                    else if (d < 123) o |= 1 << (d - 96);
                    else
                      throw new n.FormatError(
                        "Unicode ranges Bits > 123 are reserved for internal usage"
                      );
                  }
                  if (h > 65535) h = 65535;
                } else {
                  c = 0;
                  h = 255;
                }
                var p = e.bbox || [0, 0, 0, 0],
                  m =
                    i.unitsPerEm ||
                    1 / (e.fontMatrix || n.FONT_IDENTITY_MATRIX)[0],
                  v = e.ascentScaled ? 1 : m / g,
                  b = i.ascent || Math.round(v * (e.ascent || p[3])),
                  y = i.descent || Math.round(v * (e.descent || p[1]));
                if (y > 0 && e.descent > 0 && p[1] < 0) y = -y;
                var w = i.yMax || b,
                  x = -i.yMin || -y;
                return (
                  "\0$ô\0\0\0»\0\0\0»\0\0ß\x001\0\0\0\0" +
                  String.fromCharCode(e.fixedPitch ? 9 : 0) +
                  "\0\0\0\0\0\0" +
                  (0, n.string32)(r) +
                  (0, n.string32)(a) +
                  (0, n.string32)(s) +
                  (0, n.string32)(o) +
                  "*21*" +
                  f(e.italicAngle ? 1 : 0) +
                  f(c || e.firstChar) +
                  f(h || e.lastChar) +
                  f(b) +
                  f(y) +
                  "\0d" +
                  f(w) +
                  f(x) +
                  "\0\0\0\0\0\0\0\0" +
                  f(e.xHeight) +
                  f(e.capHeight) +
                  f(0) +
                  f(c || e.firstChar) +
                  "\0"
                );
              }
              function M(e) {
                var t = Math.floor(65536 * e.italicAngle);
                return (
                  "\0\0\0" +
                  (0, n.string32)(t) +
                  "\0\0\0\0" +
                  (0, n.string32)(e.fixedPitch) +
                  "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
                );
              }
              function B(e, t) {
                if (!t) t = [[], []];
                var i,
                  n,
                  r,
                  a,
                  s,
                  o = [
                    t[0][0] || "Original licence",
                    t[0][1] || e,
                    t[0][2] || "Unknown",
                    t[0][3] || "uniqueID",
                    t[0][4] || e,
                    t[0][5] || "Version 0.11",
                    t[0][6] || "",
                    t[0][7] || "Unknown",
                    t[0][8] || "Unknown",
                    t[0][9] || "Unknown",
                  ],
                  l = [];
                for (i = 0, n = o.length; i < n; i++) {
                  var c = [];
                  for (r = 0, a = (s = t[1][i] || o[i]).length; r < a; r++)
                    c.push(f(s.charCodeAt(r)));
                  l.push(c.join(""));
                }
                var h = [o, l],
                  u = ["\0", "\0"],
                  d = ["\0\0", "\0"],
                  p = ["\0\0", "\t"],
                  g = o.length * u.length,
                  m = "\0\0" + f(g) + f(12 * g + 6),
                  v = 0;
                for (i = 0, n = u.length; i < n; i++) {
                  var b = h[i];
                  for (r = 0, a = b.length; r < a; r++) {
                    s = b[r];
                    m += u[i] + d[i] + p[i] + f(r) + f(s.length) + f(v);
                    v += s.length;
                  }
                }
                return m + (o.join("") + l.join(""));
              }
              e.prototype = {
                name: null,
                font: null,
                mimetype: null,
                disableFontFace: !1,
                get renderer() {
                  var e = h.FontRendererFactory.create(this, m);
                  return (0, n.shadow)(this, "renderer", e);
                },
                exportData(e = !1) {
                  const t = e ? [...v, ...b] : v,
                    i = Object.create(null);
                  let n, r;
                  for (n of t) {
                    r = this[n];
                    if (void 0 !== r) i[n] = r;
                  }
                  return i;
                },
                fallbackToSystemFont(e) {
                  this.missingFile = !0;
                  var t = this.name,
                    i = this.type,
                    r = this.subtype;
                  let c = t.replace(/[,_]/g, "-").replace(/\s/g, "");
                  var h = (0, o.getStdFontMap)(),
                    u = (0, o.getNonStdFontMap)();
                  const d = !!h[c],
                    f = !(!u[c] || !h[u[c]]);
                  c = h[c] || u[c] || c;
                  this.bold = -1 !== c.search(/bold/gi);
                  this.italic =
                    -1 !== c.search(/oblique/gi) || -1 !== c.search(/italic/gi);
                  this.black = -1 !== t.search(/Black/g);
                  const p = -1 !== t.search(/Narrow/g);
                  this.remeasure =
                    (!d || p) && Object.keys(this.widths).length > 0;
                  if (
                    (d || f) &&
                    "CIDFontType2" === i &&
                    this.cidEncoding.startsWith("Identity-")
                  ) {
                    const i = (0, o.getGlyphMapForStandardFonts)(),
                      n = e.cidToGidMap,
                      r = [];
                    for (const e in i) r[+e] = i[e];
                    if (/Arial-?Black/i.test(t)) {
                      var g = (0, o.getSupplementalGlyphMapForArialBlack)();
                      for (const e in g) r[+e] = g[e];
                    } else if (/Calibri/i.test(t)) {
                      const e = (0, o.getSupplementalGlyphMapForCalibri)();
                      for (const t in e) r[+t] = e[t];
                    }
                    if (n)
                      for (const e in r) {
                        const t = r[e];
                        if (void 0 !== n[t]) r[+e] = n[t];
                      }
                    if (!(this.toUnicode instanceof A))
                      this.toUnicode.forEach(function (e, t) {
                        r[+e] = t;
                      });
                    this.toFontChar = r;
                    this.toUnicode = new _(r);
                  } else if (/Symbol/i.test(c))
                    this.toFontChar = E(
                      s.SymbolSetEncoding,
                      (0, a.getGlyphsUnicode)(),
                      this.differences
                    );
                  else if (/Dingbats/i.test(c)) {
                    if (/Wingdings/i.test(t))
                      (0, n.warn)(
                        "Non-embedded Wingdings font, falling back to ZapfDingbats."
                      );
                    this.toFontChar = E(
                      s.ZapfDingbatsEncoding,
                      (0, a.getDingbatsGlyphsUnicode)(),
                      this.differences
                    );
                  } else if (d)
                    this.toFontChar = E(
                      this.defaultEncoding,
                      (0, a.getGlyphsUnicode)(),
                      this.differences
                    );
                  else {
                    const e = (0, a.getGlyphsUnicode)(),
                      i = [];
                    this.toUnicode.forEach((t, n) => {
                      if (!this.composite) {
                        var r = this.differences[t] || this.defaultEncoding[t];
                        const i = (0, l.getUnicodeForGlyph)(r, e);
                        if (-1 !== i) n = i;
                      }
                      i[+t] = n;
                    });
                    if (this.composite && this.toUnicode instanceof A)
                      if (/Verdana/i.test(t)) {
                        const e = (0, o.getGlyphMapForStandardFonts)();
                        for (const t in e) i[+t] = e[t];
                      }
                    this.toFontChar = i;
                  }
                  this.loadedName = c.split("-")[0];
                  this.fontType = k(i, r);
                },
                checkAndRepair: function (e, o, l) {
                  const c = [
                    "OS/2",
                    "cmap",
                    "head",
                    "hhea",
                    "hmtx",
                    "maxp",
                    "name",
                    "post",
                    "loca",
                    "glyf",
                    "fpgm",
                    "prep",
                    "cvt ",
                    "CFF ",
                  ];
                  function h(e, t) {
                    const i = Object.create(null);
                    i["OS/2"] = null;
                    i.cmap = null;
                    i.head = null;
                    i.hhea = null;
                    i.hmtx = null;
                    i.maxp = null;
                    i.name = null;
                    i.post = null;
                    for (let n = 0; n < t; n++) {
                      const t = f(e);
                      if (c.includes(t.tag)) if (0 !== t.length) i[t.tag] = t;
                    }
                    return i;
                  }
                  function f(e) {
                    var t = (0, n.bytesToString)(e.getBytes(4)),
                      i = e.getInt32() >>> 0,
                      r = e.getInt32() >>> 0,
                      a = e.getInt32() >>> 0,
                      s = e.pos;
                    e.pos = e.start ? e.start : 0;
                    e.skip(r);
                    var o = e.getBytes(a);
                    e.pos = s;
                    if ("head" === t) {
                      o[8] = o[9] = o[10] = o[11] = 0;
                      o[17] |= 32;
                    }
                    return {
                      tag: t,
                      checksum: i,
                      length: a,
                      offset: r,
                      data: o,
                    };
                  }
                  function p(e) {
                    return {
                      version: (0, n.bytesToString)(e.getBytes(4)),
                      numTables: e.getUint16(),
                      searchRange: e.getUint16(),
                      entrySelector: e.getUint16(),
                      rangeShift: e.getUint16(),
                    };
                  }
                  function g(e, t, n, r, a, s) {
                    var o = { length: 0, sizeOfInstructions: 0 };
                    if (n - t <= 12) return o;
                    var l = e.subarray(t, n),
                      c = i(l[0], l[1]);
                    if (c < 0) {
                      !(function (e, t, i) {
                        e[1] = i;
                        e[0] = i >>> 8;
                      })(l, 0, (c = -1));
                      r.set(l, a);
                      o.length = l.length;
                      return o;
                    }
                    var h,
                      u = 10,
                      d = 0;
                    for (h = 0; h < c; h++) {
                      d = 1 + ((l[u] << 8) | l[u + 1]);
                      u += 2;
                    }
                    var f = u,
                      p = (l[u] << 8) | l[u + 1];
                    o.sizeOfInstructions = p;
                    var g = (u += 2 + p),
                      m = 0;
                    for (h = 0; h < d; h++) {
                      var v = l[u++];
                      if (192 & v) l[u - 1] = 63 & v;
                      let e = 2;
                      if (2 & v) e = 1;
                      else if (16 & v) e = 0;
                      let t = 2;
                      if (4 & v) t = 1;
                      else if (32 & v) t = 0;
                      const i = e + t;
                      m += i;
                      if (8 & v) {
                        var b = l[u++];
                        h += b;
                        m += b * i;
                      }
                    }
                    if (0 === m) return o;
                    var y = u + m;
                    if (y > l.length) return o;
                    if (!s && p > 0) {
                      r.set(l.subarray(0, f), a);
                      r.set([0, 0], a + f);
                      r.set(l.subarray(g, y), a + f + 2);
                      y -= p;
                      if (l.length - y > 3) y = (y + 3) & -4;
                      o.length = y;
                      return o;
                    }
                    if (l.length - y > 3) {
                      y = (y + 3) & -4;
                      r.set(l.subarray(0, y), a);
                      o.length = y;
                      return o;
                    }
                    r.set(l, a);
                    o.length = l.length;
                    return o;
                  }
                  function v(e) {
                    var t = (o.start ? o.start : 0) + e.offset;
                    o.pos = t;
                    var i = [[], []],
                      r = e.length,
                      a = t + r;
                    if (0 !== o.getUint16() || r < 6) return i;
                    var s,
                      l,
                      c = o.getUint16(),
                      h = o.getUint16(),
                      u = [];
                    for (s = 0; s < c && o.pos + 12 <= a; s++) {
                      var d = {
                        platform: o.getUint16(),
                        encoding: o.getUint16(),
                        language: o.getUint16(),
                        name: o.getUint16(),
                        length: o.getUint16(),
                        offset: o.getUint16(),
                      };
                      if (
                        (1 === d.platform &&
                          0 === d.encoding &&
                          0 === d.language) ||
                        (3 === d.platform &&
                          1 === d.encoding &&
                          1033 === d.language)
                      )
                        u.push(d);
                    }
                    for (s = 0, l = u.length; s < l; s++) {
                      var f = u[s];
                      if (!(f.length <= 0)) {
                        var p = t + h + f.offset;
                        if (!(p + f.length > a)) {
                          o.pos = p;
                          var g = f.name;
                          if (f.encoding) {
                            for (var m = "", v = 0, b = f.length; v < b; v += 2)
                              m += String.fromCharCode(o.getUint16());
                            i[1][g] = m;
                          } else
                            i[0][g] = (0, n.bytesToString)(
                              o.getBytes(f.length)
                            );
                        }
                      }
                    }
                    return i;
                  }
                  var b = [
                    0, 0, 0, 0, 0, 0, 0, 0, -2, -2, -2, -2, 0, 0, -2, -5, -1,
                    -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, 0, -1, -1, -1, -1, 1,
                    -1, -999, 0, 1, 0, -1, -2, 0, -1, -2, -1, -1, 0, -1, -1, 0,
                    0, -999, -999, -1, -1, -1, -1, -2, -999, -2, -2, -999, 0,
                    -2, -2, 0, 0, -2, 0, -2, 0, 0, 0, -2, -1, -1, 1, 1, 0, 0,
                    -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, 0, -1, -1, 0, -999,
                    -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                    -2, -999, -999, -999, -999, -999, -1, -1, -2, -2, 0, 0, 0,
                    0, -1, -1, -999, -2, -2, 0, 0, -1, -2, -2, 0, 0, 0, -1, -1,
                    -1, -2,
                  ];
                  function y(e, t) {
                    for (
                      var i,
                        r,
                        a,
                        s,
                        o,
                        l = e.data,
                        c = 0,
                        h = 0,
                        u = 0,
                        d = [],
                        f = [],
                        p = [],
                        g = t.tooComplexToFollowFunctions,
                        m = !1,
                        v = 0,
                        y = 0,
                        w = l.length;
                      c < w;

                    ) {
                      var x = l[c++];
                      if (64 === x) {
                        r = l[c++];
                        if (m || y) c += r;
                        else for (i = 0; i < r; i++) d.push(l[c++]);
                      } else if (65 === x) {
                        r = l[c++];
                        if (m || y) c += 2 * r;
                        else
                          for (i = 0; i < r; i++) {
                            a = l[c++];
                            d.push((a << 8) | l[c++]);
                          }
                      } else if (176 == (248 & x)) {
                        r = x - 176 + 1;
                        if (m || y) c += r;
                        else for (i = 0; i < r; i++) d.push(l[c++]);
                      } else if (184 == (248 & x)) {
                        r = x - 184 + 1;
                        if (m || y) c += 2 * r;
                        else
                          for (i = 0; i < r; i++) {
                            a = l[c++];
                            d.push((a << 8) | l[c++]);
                          }
                      } else if (43 === x && !g) {
                        if (!m && !y) {
                          s = d[d.length - 1];
                          if (isNaN(s))
                            (0, n.info)(
                              "TT: CALL empty stack (or invalid entry)."
                            );
                          else {
                            t.functionsUsed[s] = !0;
                            if (s in t.functionsStackDeltas) {
                              const e = d.length + t.functionsStackDeltas[s];
                              if (e < 0) {
                                (0, n.warn)(
                                  "TT: CALL invalid functions stack delta."
                                );
                                t.hintsValid = !1;
                                return;
                              }
                              d.length = e;
                            } else if (
                              s in t.functionsDefined &&
                              !p.includes(s)
                            ) {
                              f.push({ data: l, i: c, stackTop: d.length - 1 });
                              p.push(s);
                              if (!(o = t.functionsDefined[s])) {
                                (0, n.warn)("TT: CALL non-existent function");
                                t.hintsValid = !1;
                                return;
                              }
                              l = o.data;
                              c = o.i;
                            }
                          }
                        }
                      } else if (44 === x && !g) {
                        if (m || y) {
                          (0, n.warn)("TT: nested FDEFs not allowed");
                          g = !0;
                        }
                        m = !0;
                        u = c;
                        s = d.pop();
                        t.functionsDefined[s] = { data: l, i: c };
                      } else if (45 === x)
                        if (m) {
                          m = !1;
                          h = c;
                        } else {
                          if (!(o = f.pop())) {
                            (0, n.warn)("TT: ENDF bad stack");
                            t.hintsValid = !1;
                            return;
                          }
                          s = p.pop();
                          l = o.data;
                          c = o.i;
                          t.functionsStackDeltas[s] = d.length - o.stackTop;
                        }
                      else if (137 === x) {
                        if (m || y) {
                          (0, n.warn)("TT: nested IDEFs not allowed");
                          g = !0;
                        }
                        m = !0;
                        u = c;
                      } else if (88 === x) ++v;
                      else if (27 === x) y = v;
                      else if (89 === x) {
                        if (y === v) y = 0;
                        --v;
                      } else if (28 === x)
                        if (!m && !y) {
                          var k = d[d.length - 1];
                          if (k > 0) c += k - 1;
                        }
                      if (!m && !y) {
                        let e = 0;
                        if (x <= 142) e = b[x];
                        else if (x >= 192 && x <= 223) e = -1;
                        else if (x >= 224) e = -2;
                        if (x >= 113 && x <= 117) {
                          r = d.pop();
                          if (!isNaN(r)) e = 2 * -r;
                        }
                        for (; e < 0 && d.length > 0; ) {
                          d.pop();
                          e++;
                        }
                        for (; e > 0; ) {
                          d.push(NaN);
                          e--;
                        }
                      }
                    }
                    t.tooComplexToFollowFunctions = g;
                    var C = [l];
                    if (c > l.length) C.push(new Uint8Array(c - l.length));
                    if (u > h) {
                      (0, n.warn)("TT: complementing a missing function tail");
                      C.push(new Uint8Array([34, 45]));
                    }
                    !(function (e, t) {
                      if (t.length > 1) {
                        var i,
                          n,
                          r = 0;
                        for (i = 0, n = t.length; i < n; i++) r += t[i].length;
                        r = (r + 3) & -4;
                        var a = new Uint8Array(r),
                          s = 0;
                        for (i = 0, n = t.length; i < n; i++) {
                          a.set(t[i], s);
                          s += t[i].length;
                        }
                        e.data = a;
                        e.length = r;
                      }
                    })(e, C);
                  }
                  let k, S, _, A;
                  if (P((o = new d.Stream(new Uint8Array(o.getBytes()))))) {
                    const e = (function (e, t) {
                      const { numFonts: i, offsetTable: r } = (function (e) {
                        const t = (0, n.bytesToString)(e.getBytes(4));
                        (0, n.assert)(
                          "ttcf" === t,
                          "Must be a TrueType Collection font."
                        );
                        const i = e.getUint16(),
                          r = e.getUint16(),
                          a = e.getInt32() >>> 0,
                          s = [];
                        for (let t = 0; t < a; t++) s.push(e.getInt32() >>> 0);
                        const o = {
                          ttcTag: t,
                          majorVersion: i,
                          minorVersion: r,
                          numFonts: a,
                          offsetTable: s,
                        };
                        switch (i) {
                          case 1:
                            return o;
                          case 2:
                            o.dsigTag = e.getInt32() >>> 0;
                            o.dsigLength = e.getInt32() >>> 0;
                            o.dsigOffset = e.getInt32() >>> 0;
                            return o;
                        }
                        throw new n.FormatError(
                          `Invalid TrueType Collection majorVersion: ${i}.`
                        );
                      })(e);
                      for (let a = 0; a < i; a++) {
                        e.pos = (e.start || 0) + r[a];
                        const i = p(e),
                          s = h(e, i.numTables);
                        if (!s.name)
                          throw new n.FormatError(
                            'TrueType Collection font must contain a "name" table.'
                          );
                        const o = v(s.name);
                        for (let e = 0, n = o.length; e < n; e++)
                          for (let n = 0, r = o[e].length; n < r; n++) {
                            const r = o[e][n];
                            if (r && r.replace(/\s/g, "") === t)
                              return { header: i, tables: s };
                          }
                      }
                      throw new n.FormatError(
                        `TrueType Collection does not contain "${t}" font.`
                      );
                    })(o, this.name);
                    k = e.header;
                    S = e.tables;
                  } else {
                    k = p(o);
                    S = h(o, k.numTables);
                  }
                  var T = !S["CFF "];
                  if (!T) {
                    const t =
                      l.composite &&
                      ((l.cidToGidMap || []).length > 0 ||
                        !(l.cMap instanceof u.IdentityCMap));
                    if (
                      ("OTTO" === k.version && !t) ||
                      !S.head ||
                      !S.hhea ||
                      !S.maxp ||
                      !S.post
                    ) {
                      A = new d.Stream(S["CFF "].data);
                      _ = new D(A, l);
                      x(l);
                      return this.convert(e, _, l);
                    }
                    delete S.glyf;
                    delete S.loca;
                    delete S.fpgm;
                    delete S.prep;
                    delete S["cvt "];
                    this.isOpenType = !0;
                  } else {
                    if (!S.loca)
                      throw new n.FormatError(
                        'Required "loca" table is not found'
                      );
                    if (!S.glyf) {
                      (0, n.warn)(
                        'Required "glyf" table is not found -- trying to recover.'
                      );
                      S.glyf = { tag: "glyf", data: new Uint8Array(0) };
                    }
                    this.isOpenType = !1;
                  }
                  if (!S.maxp)
                    throw new n.FormatError(
                      'Required "maxp" table is not found'
                    );
                  o.pos = (o.start || 0) + S.maxp.offset;
                  var E = o.getInt32();
                  const I = o.getUint16();
                  let L = I + 1,
                    U = !0;
                  if (L > 65535) {
                    U = !1;
                    L = I;
                    (0, n.warn)(
                      "Not enough space in glyfs to duplicate first glyph."
                    );
                  }
                  var z = 0,
                    j = 0;
                  if (E >= 65536 && S.maxp.length >= 22) {
                    o.pos += 8;
                    if (o.getUint16() > 2) {
                      S.maxp.data[14] = 0;
                      S.maxp.data[15] = 2;
                    }
                    o.pos += 4;
                    z = o.getUint16();
                    o.pos += 4;
                    j = o.getUint16();
                  }
                  S.maxp.data[4] = L >> 8;
                  S.maxp.data[5] = 255 & L;
                  var q = (function (e, t, i, r) {
                    var a = {
                      functionsDefined: [],
                      functionsUsed: [],
                      functionsStackDeltas: [],
                      tooComplexToFollowFunctions: !1,
                      hintsValid: !0,
                    };
                    if (e) y(e, a);
                    if (t) y(t, a);
                    if (e)
                      !(function (e, t) {
                        if (!e.tooComplexToFollowFunctions)
                          if (!(e.functionsDefined.length > t))
                            for (
                              var i = 0, r = e.functionsUsed.length;
                              i < r;
                              i++
                            ) {
                              if (i > t) {
                                (0, n.warn)("TT: invalid function id: " + i);
                                e.hintsValid = !1;
                                return;
                              }
                              if (
                                e.functionsUsed[i] &&
                                !e.functionsDefined[i]
                              ) {
                                (0, n.warn)("TT: undefined function: " + i);
                                e.hintsValid = !1;
                                return;
                              }
                            }
                          else {
                            (0, n.warn)(
                              "TT: more functions defined than expected"
                            );
                            e.hintsValid = !1;
                          }
                      })(a, r);
                    if (i && 1 & i.length) {
                      var s = new Uint8Array(i.length + 1);
                      s.set(i.data);
                      i.data = s;
                    }
                    return a.hintsValid;
                  })(S.fpgm, S.prep, S["cvt "], z);
                  if (!q) {
                    delete S.fpgm;
                    delete S.prep;
                    delete S["cvt "];
                  }
                  !(function (e, t, i, r, a) {
                    if (t) {
                      e.pos = (e.start ? e.start : 0) + t.offset;
                      e.pos += 4;
                      e.pos += 2;
                      e.pos += 2;
                      e.pos += 2;
                      e.pos += 2;
                      e.pos += 2;
                      e.pos += 2;
                      e.pos += 2;
                      e.pos += 2;
                      e.pos += 2;
                      e.pos += 2;
                      e.pos += 8;
                      e.pos += 2;
                      var s = e.getUint16();
                      if (s > r) {
                        (0, n.info)(
                          "The numOfMetrics (" +
                            s +
                            ") should not be greater than the numGlyphs (" +
                            r +
                            ")"
                        );
                        s = r;
                        t.data[34] = (65280 & s) >> 8;
                        t.data[35] = 255 & s;
                      }
                      var o = r - s - ((i.length - 4 * s) >> 1);
                      if (o > 0) {
                        var l = new Uint8Array(i.length + 2 * o);
                        l.set(i.data);
                        if (a) {
                          l[i.length] = i.data[2];
                          l[i.length + 1] = i.data[3];
                        }
                        i.data = l;
                      }
                    } else if (i) i.data = null;
                  })(o, S.hhea, S.hmtx, L, U);
                  if (!S.head)
                    throw new n.FormatError(
                      'Required "head" table is not found'
                    );
                  !(function (e, i, r) {
                    var a = e.data,
                      s = (a[0] << 24) + (a[1] << 16) + (a[2] << 8) + a[3];
                    if (s >> 16 != 1) {
                      (0, n.info)(
                        "Attempting to fix invalid version in head table: " + s
                      );
                      a[0] = 0;
                      a[1] = 1;
                      a[2] = 0;
                      a[3] = 0;
                    }
                    var o = t(a[50], a[51]);
                    if (o < 0 || o > 1) {
                      (0, n.info)(
                        "Attempting to fix invalid indexToLocFormat in head table: " +
                          o
                      );
                      var l = i + 1;
                      if (r === l << 1) {
                        a[50] = 0;
                        a[51] = 0;
                      } else if (r === l << 2) {
                        a[50] = 0;
                        a[51] = 1;
                      } else
                        throw new n.FormatError(
                          "Could not fix indexToLocFormat: " + o
                        );
                    }
                  })(S.head, I, T ? S.loca.length : 0);
                  var H = Object.create(null);
                  if (T) {
                    var W = t(S.head.data[50], S.head.data[51]),
                      G = (function (e, t, i, n, r, a, s) {
                        var o, l, c;
                        if (n) {
                          o = 4;
                          l = function (e, t) {
                            return (
                              (e[t] << 24) |
                              (e[t + 1] << 16) |
                              (e[t + 2] << 8) |
                              e[t + 3]
                            );
                          };
                          c = function (e, t, i) {
                            e[t] = (i >>> 24) & 255;
                            e[t + 1] = (i >> 16) & 255;
                            e[t + 2] = (i >> 8) & 255;
                            e[t + 3] = 255 & i;
                          };
                        } else {
                          o = 2;
                          l = function (e, t) {
                            return (e[t] << 9) | (e[t + 1] << 1);
                          };
                          c = function (e, t, i) {
                            e[t] = (i >> 9) & 255;
                            e[t + 1] = (i >> 1) & 255;
                          };
                        }
                        var h = a ? i + 1 : i,
                          u = o * (1 + h),
                          d = new Uint8Array(u);
                        d.set(e.data.subarray(0, u));
                        e.data = d;
                        var f,
                          p,
                          m = t.data,
                          v = m.length,
                          b = new Uint8Array(v);
                        const y = [];
                        for (f = 0, p = 0; f < i + 1; f++, p += o) {
                          let e = l(d, p);
                          if (e > v) e = v;
                          y.push({ index: f, offset: e, endOffset: 0 });
                        }
                        y.sort((e, t) => e.offset - t.offset);
                        for (f = 0; f < i; f++)
                          y[f].endOffset = y[f + 1].offset;
                        y.sort((e, t) => e.index - t.index);
                        var w = Object.create(null),
                          x = 0;
                        c(d, 0, x);
                        for (f = 0, p = o; f < i; f++, p += o) {
                          var k = g(m, y[f].offset, y[f].endOffset, b, x, r),
                            C = k.length;
                          if (0 === C) w[f] = !0;
                          if (k.sizeOfInstructions > s)
                            s = k.sizeOfInstructions;
                          c(d, p, (x += C));
                        }
                        if (0 === x) {
                          var S = new Uint8Array([
                            0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49, 0,
                          ]);
                          for (f = 0, p = o; f < h; f++, p += o)
                            c(d, p, S.length);
                          t.data = S;
                        } else if (a) {
                          var _ = l(d, o);
                          if (b.length > _ + x) t.data = b.subarray(0, _ + x);
                          else {
                            t.data = new Uint8Array(_ + x);
                            t.data.set(b.subarray(0, x));
                          }
                          t.data.set(b.subarray(0, _), x);
                          c(e.data, d.length - o, x + _);
                        } else t.data = b.subarray(0, x);
                        return { missingGlyphs: w, maxSizeOfInstructions: s };
                      })(S.loca, S.glyf, I, W, q, U, j);
                    H = G.missingGlyphs;
                    if (E >= 65536 && S.maxp.length >= 22) {
                      S.maxp.data[26] = G.maxSizeOfInstructions >> 8;
                      S.maxp.data[27] = 255 & G.maxSizeOfInstructions;
                    }
                  }
                  if (!S.hhea)
                    throw new n.FormatError(
                      'Required "hhea" table is not found'
                    );
                  if (0 === S.hhea.data[10] && 0 === S.hhea.data[11]) {
                    S.hhea.data[10] = 255;
                    S.hhea.data[11] = 255;
                  }
                  var V = {
                    unitsPerEm: t(S.head.data[18], S.head.data[19]),
                    yMax: t(S.head.data[42], S.head.data[43]),
                    yMin: i(S.head.data[38], S.head.data[39]),
                    ascent: t(S.hhea.data[4], S.hhea.data[5]),
                    descent: i(S.hhea.data[6], S.hhea.data[7]),
                  };
                  this.ascent = V.ascent / V.unitsPerEm;
                  this.descent = V.descent / V.unitsPerEm;
                  if (S.post)
                    !(function (e, t, i) {
                      var r = (o.start ? o.start : 0) + e.offset;
                      o.pos = r;
                      var a,
                        s = r + e.length,
                        l = o.getInt32();
                      o.skip(28);
                      var c,
                        h = !0;
                      switch (l) {
                        case 65536:
                          a = w;
                          break;
                        case 131072:
                          var u = o.getUint16();
                          if (u !== i) {
                            h = !1;
                            break;
                          }
                          var d = [];
                          for (c = 0; c < u; ++c) {
                            var f = o.getUint16();
                            if (f >= 32768) {
                              h = !1;
                              break;
                            }
                            d.push(f);
                          }
                          if (!h) break;
                          for (var p = [], g = []; o.pos < s; ) {
                            var m = o.getByte();
                            g.length = m;
                            for (c = 0; c < m; ++c)
                              g[c] = String.fromCharCode(o.getByte());
                            p.push(g.join(""));
                          }
                          a = [];
                          for (c = 0; c < u; ++c) {
                            var v = d[c];
                            if (!(v < 258)) a.push(p[v - 258]);
                            else a.push(w[v]);
                          }
                          break;
                        case 196608:
                          break;
                        default:
                          (0, n.warn)(
                            "Unknown/unsupported post table version " + l
                          );
                          h = !1;
                          if (t.defaultEncoding) a = t.defaultEncoding;
                      }
                      t.glyphNames = a;
                    })(S.post, l, I);
                  S.post = { tag: "post", data: M(l) };
                  const X = [];
                  function K(e) {
                    return !H[e];
                  }
                  if (l.composite) {
                    var Y = l.cidToGidMap || [],
                      Z = 0 === Y.length;
                    l.cMap.forEach(function (e, t) {
                      if (t > 65535)
                        throw new n.FormatError("Max size of CID is 65,535");
                      var i = -1;
                      if (Z) i = t;
                      else if (void 0 !== Y[t]) i = Y[t];
                      if (i >= 0 && i < I && K(i)) X[e] = i;
                    });
                  } else {
                    var J = (function (e, t, i, r) {
                        if (!e) {
                          (0, n.warn)("No cmap table available.");
                          return {
                            platformId: -1,
                            encodingId: -1,
                            mappings: [],
                            hasShortCmap: !1,
                          };
                        }
                        var a,
                          s = (t.start ? t.start : 0) + e.offset;
                        t.pos = s;
                        t.skip(2);
                        for (
                          var o, l = t.getUint16(), c = !1, h = 0;
                          h < l;
                          h++
                        ) {
                          var u = t.getUint16(),
                            d = t.getUint16(),
                            f = t.getInt32() >>> 0,
                            p = !1;
                          if (!o || o.platformId !== u || o.encodingId !== d) {
                            if (0 === u && (0 === d || 1 === d || 3 === d))
                              p = !0;
                            else if (1 === u && 0 === d) p = !0;
                            else if (3 === u && 1 === d && (r || !o)) {
                              p = !0;
                              if (!i) c = !0;
                            } else if (i && 3 === u && 0 === d) {
                              p = !0;
                              c = !0;
                            }
                            if (p)
                              o = { platformId: u, encodingId: d, offset: f };
                            if (c) break;
                          }
                        }
                        if (o) t.pos = s + o.offset;
                        if (!o || -1 === t.peekByte()) {
                          (0, n.warn)("Could not find a preferred cmap table.");
                          return {
                            platformId: -1,
                            encodingId: -1,
                            mappings: [],
                            hasShortCmap: !1,
                          };
                        }
                        var g = t.getUint16();
                        t.skip(4);
                        var m,
                          v,
                          b = !1,
                          y = [];
                        if (0 === g) {
                          for (m = 0; m < 256; m++) {
                            var w = t.getByte();
                            if (w) y.push({ charCode: m, glyphId: w });
                          }
                          b = !0;
                        } else if (4 === g) {
                          var x = t.getUint16() >> 1;
                          t.skip(6);
                          var k,
                            C = [];
                          for (k = 0; k < x; k++)
                            C.push({ end: t.getUint16() });
                          t.skip(2);
                          for (k = 0; k < x; k++) C[k].start = t.getUint16();
                          for (k = 0; k < x; k++) C[k].delta = t.getUint16();
                          var S = 0;
                          for (k = 0; k < x; k++) {
                            a = C[k];
                            var _ = t.getUint16();
                            if (_) {
                              var A = (_ >> 1) - (x - k);
                              a.offsetIndex = A;
                              S = Math.max(S, A + a.end - a.start + 1);
                            } else a.offsetIndex = -1;
                          }
                          var F = [];
                          for (m = 0; m < S; m++) F.push(t.getUint16());
                          for (k = 0; k < x; k++) {
                            s = (a = C[k]).start;
                            var T = a.end,
                              P = a.delta;
                            A = a.offsetIndex;
                            for (m = s; m <= T; m++)
                              if (65535 !== m) {
                                v =
                                  ((v = A < 0 ? m : F[A + m - s]) + P) & 65535;
                                y.push({ charCode: m, glyphId: v });
                              }
                          }
                        } else if (6 === g) {
                          var E = t.getUint16(),
                            I = t.getUint16();
                          for (m = 0; m < I; m++) {
                            v = t.getUint16();
                            var D = E + m;
                            y.push({ charCode: D, glyphId: v });
                          }
                        } else {
                          (0, n.warn)(
                            "cmap table has unsupported format: " + g
                          );
                          return {
                            platformId: -1,
                            encodingId: -1,
                            mappings: [],
                            hasShortCmap: !1,
                          };
                        }
                        y.sort(function (e, t) {
                          return e.charCode - t.charCode;
                        });
                        for (h = 1; h < y.length; h++)
                          if (y[h - 1].charCode === y[h].charCode) {
                            y.splice(h, 1);
                            h--;
                          }
                        return {
                          platformId: o.platformId,
                          encodingId: o.encodingId,
                          mappings: y,
                          hasShortCmap: b,
                        };
                      })(S.cmap, o, this.isSymbolicFont, l.hasEncoding),
                      $ = J.platformId,
                      Q = J.encodingId,
                      ee = J.mappings,
                      te = ee.length;
                    let e = [];
                    if (
                      l.hasEncoding &&
                      ("MacRomanEncoding" === l.baseEncodingName ||
                        "WinAnsiEncoding" === l.baseEncodingName)
                    )
                      e = (0, s.getEncoding)(l.baseEncodingName);
                    if (
                      l.hasEncoding &&
                      !this.isSymbolicFont &&
                      ((3 === $ && 1 === Q) || (1 === $ && 0 === Q))
                    ) {
                      var ie = (0, a.getGlyphsUnicode)();
                      for (let t = 0; t < 256; t++) {
                        var ne, re;
                        if (this.differences && t in this.differences)
                          ne = this.differences[t];
                        else if (t in e && "" !== e[t]) ne = e[t];
                        else ne = s.StandardEncoding[t];
                        if (ne) {
                          re = C(ne, ie);
                          var ae;
                          if (3 === $ && 1 === Q) ae = ie[re];
                          else if (1 === $ && 0 === Q)
                            ae = s.MacRomanEncoding.indexOf(re);
                          for (let e = 0; e < te; ++e)
                            if (ee[e].charCode === ae) {
                              X[t] = ee[e].glyphId;
                              break;
                            }
                        }
                      }
                    } else if (0 === $)
                      for (let e = 0; e < te; ++e)
                        X[ee[e].charCode] = ee[e].glyphId;
                    else
                      for (let e = 0; e < te; ++e) {
                        let t = ee[e].charCode;
                        if (3 === $ && t >= 61440 && t <= 61695) t &= 255;
                        X[t] = ee[e].glyphId;
                      }
                    if (l.glyphNames && e.length)
                      for (let t = 0; t < 256; ++t)
                        if (void 0 === X[t] && e[t]) {
                          ne = e[t];
                          const i = l.glyphNames.indexOf(ne);
                          if (i > 0 && K(i)) X[t] = i;
                        }
                  }
                  if (0 === X.length) X[0] = 0;
                  let se = L - 1;
                  if (!U) se = 0;
                  var oe = O(X, K, se);
                  this.toFontChar = oe.toFontChar;
                  S.cmap = { tag: "cmap", data: R(oe.charCodeToGlyphId, L) };
                  if (
                    !S["OS/2"] ||
                    !(function (e, t) {
                      t.pos = (t.start || 0) + e.offset;
                      var i = t.getUint16();
                      t.skip(60);
                      var n = t.getUint16();
                      if (i < 4 && 768 & n) return !1;
                      if (t.getUint16() > t.getUint16()) return !1;
                      t.skip(6);
                      if (0 === t.getUint16()) return !1;
                      e.data[8] = e.data[9] = 0;
                      return !0;
                    })(S["OS/2"], o)
                  )
                    S["OS/2"] = {
                      tag: "OS/2",
                      data: N(l, oe.charCodeToGlyphId, V),
                    };
                  if (!T)
                    try {
                      A = new d.Stream(S["CFF "].data);
                      _ = new r.CFFParser(A, l, m).parse();
                      _.duplicateFirstGlyph();
                      var le = new r.CFFCompiler(_);
                      S["CFF "].data = le.compile();
                    } catch (e) {
                      (0, n.warn)("Failed to compile font " + l.loadedName);
                    }
                  if (!S.name) S.name = { tag: "name", data: B(this.name) };
                  else {
                    var ce = v(S.name);
                    S.name.data = B(e, ce);
                  }
                  var he = new F(k.version);
                  for (var ue in S) he.addTable(ue, S[ue].data);
                  return he.toArray();
                },
                convert: function (e, t, i) {
                  i.fixedPitch = !1;
                  if (i.builtInEncoding)
                    !(function (e, t) {
                      if (!e.hasIncludedToUnicodeMap)
                        if (!e.hasEncoding)
                          if (t !== e.defaultEncoding)
                            if (!(e.toUnicode instanceof A)) {
                              var i = [],
                                n = (0, a.getGlyphsUnicode)();
                              for (var r in t) {
                                var s = t[r],
                                  o = (0, l.getUnicodeForGlyph)(s, n);
                                if (-1 !== o) i[r] = String.fromCharCode(o);
                              }
                              e.toUnicode.amend(i);
                            }
                    })(i, i.builtInEncoding);
                  let r = 1;
                  if (t instanceof D) r = t.numGlyphs - 1;
                  var o = t.getGlyphMapping(i),
                    c = O(o, t.hasGlyphId.bind(t), r);
                  this.toFontChar = c.toFontChar;
                  var h = t.numGlyphs;
                  function u(e, t) {
                    var i = null;
                    for (var n in e)
                      if (t === e[n]) {
                        if (!i) i = [];
                        i.push(0 | n);
                      }
                    return i;
                  }
                  function d(e, t) {
                    for (var i in e) if (t === e[i]) return 0 | i;
                    c.charCodeToGlyphId[c.nextAvailableFontCharCode] = t;
                    return c.nextAvailableFontCharCode++;
                  }
                  var p = t.seacs;
                  if (p && p.length) {
                    var g = i.fontMatrix || n.FONT_IDENTITY_MATRIX,
                      m = t.getCharset(),
                      v = Object.create(null);
                    for (var b in p) {
                      var y = p[(b |= 0)],
                        w = s.StandardEncoding[y[2]],
                        x = s.StandardEncoding[y[3]],
                        k = m.indexOf(w),
                        C = m.indexOf(x);
                      if (!(k < 0 || C < 0)) {
                        var S = {
                            x: y[0] * g[0] + y[1] * g[2] + g[4],
                            y: y[0] * g[1] + y[1] * g[3] + g[5],
                          },
                          _ = u(o, b);
                        if (_)
                          for (let e = 0, t = _.length; e < t; e++) {
                            var P = _[e],
                              E = c.charCodeToGlyphId,
                              I = d(E, k),
                              L = d(E, C);
                            v[P] = {
                              baseFontCharCode: I,
                              accentFontCharCode: L,
                              accentOffset: S,
                            };
                          }
                      }
                    }
                    i.seacMap = v;
                  }
                  var U = 1 / (i.fontMatrix || n.FONT_IDENTITY_MATRIX)[0],
                    z = new F("OTTO");
                  z.addTable("CFF ", t.data);
                  z.addTable("OS/2", N(i, c.charCodeToGlyphId));
                  z.addTable("cmap", R(c.charCodeToGlyphId, h));
                  z.addTable(
                    "head",
                    "\0\0\0\0\0\0\0\0\0\0_<õ\0\0" +
                      T(U) +
                      "\0\0\0\0\v~'\0\0\0\0\v~'\0\0" +
                      T(i.descent) +
                      "ÿ" +
                      T(i.ascent) +
                      f(i.italicAngle ? 2 : 0) +
                      "\0\0\0\0\0\0\0"
                  );
                  z.addTable(
                    "hhea",
                    "\0\0\0" +
                      T(i.ascent) +
                      T(i.descent) +
                      "\0\0ÿÿ\0\0\0\0\0\0" +
                      T(i.capHeight) +
                      T(Math.tan(i.italicAngle) * i.xHeight) +
                      "\0\0\0\0\0\0\0\0\0\0\0\0" +
                      f(h)
                  );
                  z.addTable(
                    "hmtx",
                    (function () {
                      var e = t.charstrings,
                        i = t.cff ? t.cff.widths : null,
                        n = "\0\0\0\0";
                      for (let t = 1, s = h; t < s; t++) {
                        var r = 0;
                        if (e) {
                          var a = e[t - 1];
                          r = "width" in a ? a.width : 0;
                        } else if (i) r = Math.ceil(i[t] || 0);
                        n += f(r) + f(0);
                      }
                      return n;
                    })()
                  );
                  z.addTable("maxp", "\0\0P\0" + f(h));
                  z.addTable("name", B(e));
                  z.addTable("post", M(i));
                  return z.toArray();
                },
                get spaceWidth() {
                  for (
                    var e,
                      t = ["space", "minus", "one", "i", "I"],
                      i = 0,
                      r = t.length;
                    i < r;
                    i++
                  ) {
                    var s = t[i];
                    if (s in this.widths) {
                      e = this.widths[s];
                      break;
                    }
                    var o = (0, a.getGlyphsUnicode)()[s],
                      l = 0;
                    if (this.composite && this.cMap.contains(o))
                      l = this.cMap.lookup(o);
                    if (!l && this.toUnicode) l = this.toUnicode.charCodeOf(o);
                    if (l <= 0) l = o;
                    if ((e = this.widths[l])) break;
                  }
                  e = e || this.defaultWidth;
                  return (0, n.shadow)(this, "spaceWidth", e);
                },
                _charToGlyph(e, t = !1) {
                  var i,
                    r,
                    a,
                    s = e;
                  if (this.cMap && this.cMap.contains(e))
                    s = this.cMap.lookup(e);
                  r = this.widths[s];
                  r = (0, n.isNum)(r) ? r : this.defaultWidth;
                  var o = this.vmetrics && this.vmetrics[s];
                  let c =
                    this.toUnicode.get(e) || this.fallbackToUnicode.get(e) || e;
                  if ("number" == typeof c) c = String.fromCharCode(c);
                  var h = e in this.toFontChar;
                  i = this.toFontChar[e] || e;
                  if (this.missingFile) {
                    const t = this.differences[e] || this.defaultEncoding[e];
                    if ((".notdef" === t || "" === t) && "Type1" === this.type)
                      i = 32;
                    i = (0, l.mapSpecialUnicodeValues)(i);
                  }
                  if (this.isType3Font) a = i;
                  var u = null;
                  if (this.seacMap && this.seacMap[e]) {
                    h = !0;
                    var d = this.seacMap[e];
                    i = d.baseFontCharCode;
                    u = {
                      fontChar: String.fromCodePoint(d.accentFontCharCode),
                      offset: d.accentOffset,
                    };
                  }
                  let f = "";
                  if ("number" == typeof i)
                    if (i <= 1114111) f = String.fromCodePoint(i);
                    else
                      (0, n.warn)(`charToGlyph - invalid fontCharCode: ${i}`);
                  var p = this.glyphCache[e];
                  if (!p || !p.matchesForCache(f, c, u, r, o, a, t, h)) {
                    p = new S(f, c, u, r, o, a, t, h);
                    this.glyphCache[e] = p;
                  }
                  return p;
                },
                charsToGlyphs: function (e) {
                  var t,
                    i,
                    n,
                    r = this.charsCache;
                  if (r) if ((t = r[e])) return t;
                  if (!r) r = this.charsCache = Object.create(null);
                  t = [];
                  var a,
                    s = e,
                    o = 0;
                  if (this.cMap)
                    for (var l = Object.create(null); o < e.length; ) {
                      this.cMap.readCharCode(e, o, l);
                      n = l.charcode;
                      var c = l.length;
                      o += c;
                      var h = 1 === c && 32 === e.charCodeAt(o - 1);
                      i = this._charToGlyph(n, h);
                      t.push(i);
                    }
                  else
                    for (o = 0, a = e.length; o < a; ++o) {
                      n = e.charCodeAt(o);
                      i = this._charToGlyph(n, 32 === n);
                      t.push(i);
                    }
                  return (r[s] = t);
                },
                getCharPositions(e) {
                  const t = [];
                  if (this.cMap) {
                    const i = Object.create(null);
                    let n = 0;
                    for (; n < e.length; ) {
                      this.cMap.readCharCode(e, n, i);
                      const r = i.length;
                      t.push([n, n + r]);
                      n += r;
                    }
                  } else
                    for (let i = 0, n = e.length; i < n; ++i)
                      t.push([i, i + 1]);
                  return t;
                },
                get glyphCacheValues() {
                  return Object.values(this.glyphCache);
                },
                encodeString(e) {
                  const t = [],
                    i = [],
                    n = () => t.length % 2 == 1;
                  for (let r = 0, a = e.length; r < a; r++) {
                    const a = e.codePointAt(r);
                    if (a > 55295 && (a < 57344 || a > 65533)) r++;
                    if (this.toUnicode) {
                      const e = String.fromCodePoint(a),
                        r = this.toUnicode.charCodeOf(e);
                      if (-1 !== r) {
                        if (n()) {
                          t.push(i.join(""));
                          i.length = 0;
                        }
                        for (
                          let e =
                            (this.cMap ? this.cMap.getCharCodeLength(r) : 1) -
                            1;
                          e >= 0;
                          e--
                        )
                          i.push(String.fromCharCode((r >> (8 * e)) & 255));
                        continue;
                      }
                    }
                    if (!n()) {
                      t.push(i.join(""));
                      i.length = 0;
                    }
                    i.push(String.fromCodePoint(a));
                  }
                  t.push(i.join(""));
                  return t;
                },
              };
              return e;
            })();
          t.Font = T;
          var P = (function () {
            function e(e) {
              this.error = e;
              this.loadedName = "g_font_error";
              this.missingFile = !0;
            }
            e.prototype = {
              charsToGlyphs: function () {
                return [];
              },
              encodeString: function (e) {
                return [e];
              },
              exportData(e = !1) {
                return { error: this.error };
              },
            };
            return e;
          })();
          t.ErrorFont = P;
          function E(e, t, i) {
            var n,
              r,
              o,
              l = Object.create(null),
              c = !!(e.flags & y.Symbolic);
            if (e.baseEncodingName) {
              o = (0, s.getEncoding)(e.baseEncodingName);
              for (r = 0; r < o.length; r++)
                if ((n = i.indexOf(o[r])) >= 0) l[r] = n;
                else l[r] = 0;
            } else if (c) for (r in t) l[r] = t[r];
            else {
              o = s.StandardEncoding;
              for (r = 0; r < o.length; r++)
                if ((n = i.indexOf(o[r])) >= 0) l[r] = n;
                else l[r] = 0;
            }
            var h,
              u = e.differences;
            if (u)
              for (r in u) {
                var d = u[r];
                if (-1 === (n = i.indexOf(d))) {
                  if (!h) h = (0, a.getGlyphsUnicode)();
                  var f = C(d, h);
                  if (f !== d) n = i.indexOf(f);
                }
                if (n >= 0) l[r] = n;
                else l[r] = 0;
              }
            return l;
          }
          var I = (function () {
              function e(e, t, i) {
                for (
                  var n, r = e.length, a = t.length, s = r - a, o = i, l = !1;
                  o < s;

                ) {
                  n = 0;
                  for (; n < a && e[o + n] === t[n]; ) n++;
                  if (n >= a) {
                    o += n;
                    for (; o < r && (0, c.isWhiteSpace)(e[o]); ) o++;
                    l = !0;
                    break;
                  }
                  o++;
                }
                return { found: l, length: o };
              }
              function t(t, i, r) {
                var a = r.length1,
                  s = (r.length2, i.peekBytes(6)),
                  o = 128 === s[0] && 1 === s[1];
                if (o) {
                  i.skip(6);
                  a = (s[5] << 24) | (s[4] << 16) | (s[3] << 8) | s[2];
                }
                var l = (function (t, i) {
                  var r,
                    a,
                    s,
                    o,
                    l = [101, 101, 120, 101, 99],
                    h = t.pos;
                  try {
                    a = (r = t.getBytes(i)).length;
                  } catch (e) {
                    if (e instanceof c.MissingDataException) throw e;
                  }
                  if (a === i)
                    if ((s = e(r, l, i - 2 * l.length)).found && s.length === i)
                      return { stream: new d.Stream(r), length: i };
                  (0, n.warn)(
                    'Invalid "Length1" property in Type1 font -- trying to recover.'
                  );
                  t.pos = h;
                  for (; 0 !== (s = e(t.peekBytes(2048), l, 0)).length; ) {
                    t.pos += s.length;
                    if (s.found) {
                      o = t.pos - h;
                      break;
                    }
                  }
                  t.pos = h;
                  if (o)
                    return { stream: new d.Stream(t.getBytes(o)), length: o };
                  (0, n.warn)(
                    'Unable to recover "Length1" property in Type1 font -- using as is.'
                  );
                  return { stream: new d.Stream(t.getBytes(i)), length: i };
                })(i, a);
                new f.Type1Parser(l.stream, !1, m).extractFontHeader(r);
                if (o) (s = i.getBytes(6))[5], s[4], s[3], s[2];
                var h,
                  u =
                    ((h = i.getBytes()),
                    { stream: new d.Stream(h), length: h.length }),
                  p = new f.Type1Parser(u.stream, !0, m).extractFontProgram(r);
                for (const e in p.properties) r[e] = p.properties[e];
                var g = p.charstrings,
                  v = this.getType2Charstrings(g),
                  b = this.getType2Subrs(p.subrs);
                this.charstrings = g;
                this.data = this.wrap(t, v, this.charstrings, b, r);
                this.seacs = this.getSeacs(p.charstrings);
              }
              t.prototype = {
                get numGlyphs() {
                  return this.charstrings.length + 1;
                },
                getCharset: function () {
                  for (
                    var e = [".notdef"], t = this.charstrings, i = 0;
                    i < t.length;
                    i++
                  )
                    e.push(t[i].glyphName);
                  return e;
                },
                getGlyphMapping: function (e) {
                  var t = this.charstrings;
                  if (e.composite) {
                    const i = Object.create(null);
                    for (let n = 0, r = t.length; n < r; n++)
                      i[e.cMap.charCodeOf(n)] = n + 1;
                    return i;
                  }
                  var i,
                    n = [".notdef"];
                  for (i = 0; i < t.length; i++) n.push(t[i].glyphName);
                  var r = e.builtInEncoding;
                  if (r) {
                    var a = Object.create(null);
                    for (var s in r) if ((i = n.indexOf(r[s])) >= 0) a[s] = i;
                  }
                  return E(e, a, n);
                },
                hasGlyphId: function (e) {
                  if (e < 0 || e >= this.numGlyphs) return !1;
                  if (0 === e) return !0;
                  else return this.charstrings[e - 1].charstring.length > 0;
                },
                getSeacs: function (e) {
                  var t,
                    i,
                    n = [];
                  for (t = 0, i = e.length; t < i; t++) {
                    var r = e[t];
                    if (r.seac) n[t + 1] = r.seac;
                  }
                  return n;
                },
                getType2Charstrings: function (e) {
                  for (var t = [], i = 0, n = e.length; i < n; i++)
                    t.push(e[i].charstring);
                  return t;
                },
                getType2Subrs: function (e) {
                  var t = 0,
                    i = e.length;
                  if (i < 1133) t = 107;
                  else if (i < 33769) t = 1131;
                  else t = 32768;
                  var n,
                    r = [];
                  for (n = 0; n < t; n++) r.push([11]);
                  for (n = 0; n < i; n++) r.push(e[n]);
                  return r;
                },
                wrap: function (e, t, i, n, a) {
                  var s = new r.CFF();
                  s.header = new r.CFFHeader(1, 0, 4, 4);
                  s.names = [e];
                  var o = new r.CFFTopDict();
                  o.setByName("version", 391);
                  o.setByName("Notice", 392);
                  o.setByName("FullName", 393);
                  o.setByName("FamilyName", 394);
                  o.setByName("Weight", 395);
                  o.setByName("Encoding", null);
                  o.setByName("FontMatrix", a.fontMatrix);
                  o.setByName("FontBBox", a.bbox);
                  o.setByName("charset", null);
                  o.setByName("CharStrings", null);
                  o.setByName("Private", null);
                  s.topDict = o;
                  var l = new r.CFFStrings();
                  l.add("Version 0.11");
                  l.add("See original notice");
                  l.add(e);
                  l.add(e);
                  l.add("Medium");
                  s.strings = l;
                  s.globalSubrIndex = new r.CFFIndex();
                  var c,
                    h,
                    u = t.length,
                    d = [".notdef"];
                  for (c = 0; c < u; c++) {
                    const e = i[c].glyphName;
                    if (-1 === r.CFFStandardStrings.indexOf(e)) l.add(e);
                    d.push(e);
                  }
                  s.charset = new r.CFFCharset(!1, 0, d);
                  var f = new r.CFFIndex();
                  f.add([139, 14]);
                  for (c = 0; c < u; c++) f.add(t[c]);
                  s.charStrings = f;
                  var p = new r.CFFPrivateDict();
                  p.setByName("Subrs", null);
                  var g = [
                    "BlueValues",
                    "OtherBlues",
                    "FamilyBlues",
                    "FamilyOtherBlues",
                    "StemSnapH",
                    "StemSnapV",
                    "BlueShift",
                    "BlueFuzz",
                    "BlueScale",
                    "LanguageGroup",
                    "ExpansionFactor",
                    "ForceBold",
                    "StdHW",
                    "StdVW",
                  ];
                  for (c = 0, h = g.length; c < h; c++) {
                    var m = g[c];
                    if (m in a.privateData) {
                      var v = a.privateData[m];
                      if (Array.isArray(v))
                        for (var b = v.length - 1; b > 0; b--) v[b] -= v[b - 1];
                      p.setByName(m, v);
                    }
                  }
                  s.topDict.privateDict = p;
                  var y = new r.CFFIndex();
                  for (c = 0, h = n.length; c < h; c++) y.add(n[c]);
                  p.subrsIndex = y;
                  return new r.CFFCompiler(s).compile();
                },
              };
              return t;
            })(),
            D = (function () {
              function e(e, t) {
                this.properties = t;
                var i = new r.CFFParser(e, t, m);
                this.cff = i.parse();
                this.cff.duplicateFirstGlyph();
                var a = new r.CFFCompiler(this.cff);
                this.seacs = this.cff.seacs;
                try {
                  this.data = a.compile();
                } catch (i) {
                  (0, n.warn)("Failed to compile font " + t.loadedName);
                  this.data = e;
                }
              }
              e.prototype = {
                get numGlyphs() {
                  return this.cff.charStrings.count;
                },
                getCharset: function () {
                  return this.cff.charset.charset;
                },
                getGlyphMapping: function () {
                  var e,
                    t,
                    i = this.cff,
                    n = this.properties,
                    r = i.charset.charset;
                  if (n.composite) {
                    e = Object.create(null);
                    let s;
                    if (i.isCIDFont)
                      for (t = 0; t < r.length; t++) {
                        var a = r[t];
                        s = n.cMap.charCodeOf(a);
                        e[s] = t;
                      }
                    else
                      for (t = 0; t < i.charStrings.count; t++) {
                        s = n.cMap.charCodeOf(t);
                        e[s] = t;
                      }
                    return e;
                  }
                  return E(n, i.encoding ? i.encoding.encoding : null, r);
                },
                hasGlyphId: function (e) {
                  return this.cff.hasGlyphId(e);
                },
              };
              return e;
            })();
        },
        (e, t, i) => {
          Object.defineProperty(t, "__esModule", { value: !0 });
          t.CFFTopDict =
            t.CFFStrings =
            t.CFFStandardStrings =
            t.CFFPrivateDict =
            t.CFFParser =
            t.CFFIndex =
            t.CFFHeader =
            t.CFFFDSelect =
            t.CFFCompiler =
            t.CFFCharset =
            t.CFF =
              void 0;
          var n = i(2),
            r = i(31),
            a = i(32),
            s = [
              ".notdef",
              "space",
              "exclam",
              "quotedbl",
              "numbersign",
              "dollar",
              "percent",
              "ampersand",
              "quoteright",
              "parenleft",
              "parenright",
              "asterisk",
              "plus",
              "comma",
              "hyphen",
              "period",
              "slash",
              "zero",
              "one",
              "two",
              "three",
              "four",
              "five",
              "six",
              "seven",
              "eight",
              "nine",
              "colon",
              "semicolon",
              "less",
              "equal",
              "greater",
              "question",
              "at",
              "A",
              "B",
              "C",
              "D",
              "E",
              "F",
              "G",
              "H",
              "I",
              "J",
              "K",
              "L",
              "M",
              "N",
              "O",
              "P",
              "Q",
              "R",
              "S",
              "T",
              "U",
              "V",
              "W",
              "X",
              "Y",
              "Z",
              "bracketleft",
              "backslash",
              "bracketright",
              "asciicircum",
              "underscore",
              "quoteleft",
              "a",
              "b",
              "c",
              "d",
              "e",
              "f",
              "g",
              "h",
              "i",
              "j",
              "k",
              "l",
              "m",
              "n",
              "o",
              "p",
              "q",
              "r",
              "s",
              "t",
              "u",
              "v",
              "w",
              "x",
              "y",
              "z",
              "braceleft",
              "bar",
              "braceright",
              "asciitilde",
              "exclamdown",
              "cent",
              "sterling",
              "fraction",
              "yen",
              "florin",
              "section",
              "currency",
              "quotesingle",
              "quotedblleft",
              "guillemotleft",
              "guilsinglleft",
              "guilsinglright",
              "fi",
              "fl",
              "endash",
              "dagger",
              "daggerdbl",
              "periodcentered",
              "paragraph",
              "bullet",
              "quotesinglbase",
              "quotedblbase",
              "quotedblright",
              "guillemotright",
              "ellipsis",
              "perthousand",
              "questiondown",
              "grave",
              "acute",
              "circumflex",
              "tilde",
              "macron",
              "breve",
              "dotaccent",
              "dieresis",
              "ring",
              "cedilla",
              "hungarumlaut",
              "ogonek",
              "caron",
              "emdash",
              "AE",
              "ordfeminine",
              "Lslash",
              "Oslash",
              "OE",
              "ordmasculine",
              "ae",
              "dotlessi",
              "lslash",
              "oslash",
              "oe",
              "germandbls",
              "onesuperior",
              "logicalnot",
              "mu",
              "trademark",
              "Eth",
              "onehalf",
              "plusminus",
              "Thorn",
              "onequarter",
              "divide",
              "brokenbar",
              "degree",
              "thorn",
              "threequarters",
              "twosuperior",
              "registered",
              "minus",
              "eth",
              "multiply",
              "threesuperior",
              "copyright",
              "Aacute",
              "Acircumflex",
              "Adieresis",
              "Agrave",
              "Aring",
              "Atilde",
              "Ccedilla",
              "Eacute",
              "Ecircumflex",
              "Edieresis",
              "Egrave",
              "Iacute",
              "Icircumflex",
              "Idieresis",
              "Igrave",
              "Ntilde",
              "Oacute",
              "Ocircumflex",
              "Odieresis",
              "Ograve",
              "Otilde",
              "Scaron",
              "Uacute",
              "Ucircumflex",
              "Udieresis",
              "Ugrave",
              "Yacute",
              "Ydieresis",
              "Zcaron",
              "aacute",
              "acircumflex",
              "adieresis",
              "agrave",
              "aring",
              "atilde",
              "ccedilla",
              "eacute",
              "ecircumflex",
              "edieresis",
              "egrave",
              "iacute",
              "icircumflex",
              "idieresis",
              "igrave",
              "ntilde",
              "oacute",
              "ocircumflex",
              "odieresis",
              "ograve",
              "otilde",
              "scaron",
              "uacute",
              "ucircumflex",
              "udieresis",
              "ugrave",
              "yacute",
              "ydieresis",
              "zcaron",
              "exclamsmall",
              "Hungarumlautsmall",
              "dollaroldstyle",
              "dollarsuperior",
              "ampersandsmall",
              "Acutesmall",
              "parenleftsuperior",
              "parenrightsuperior",
              "twodotenleader",
              "onedotenleader",
              "zerooldstyle",
              "oneoldstyle",
              "twooldstyle",
              "threeoldstyle",
              "fouroldstyle",
              "fiveoldstyle",
              "sixoldstyle",
              "sevenoldstyle",
              "eightoldstyle",
              "nineoldstyle",
              "commasuperior",
              "threequartersemdash",
              "periodsuperior",
              "questionsmall",
              "asuperior",
              "bsuperior",
              "centsuperior",
              "dsuperior",
              "esuperior",
              "isuperior",
              "lsuperior",
              "msuperior",
              "nsuperior",
              "osuperior",
              "rsuperior",
              "ssuperior",
              "tsuperior",
              "ff",
              "ffi",
              "ffl",
              "parenleftinferior",
              "parenrightinferior",
              "Circumflexsmall",
              "hyphensuperior",
              "Gravesmall",
              "Asmall",
              "Bsmall",
              "Csmall",
              "Dsmall",
              "Esmall",
              "Fsmall",
              "Gsmall",
              "Hsmall",
              "Ismall",
              "Jsmall",
              "Ksmall",
              "Lsmall",
              "Msmall",
              "Nsmall",
              "Osmall",
              "Psmall",
              "Qsmall",
              "Rsmall",
              "Ssmall",
              "Tsmall",
              "Usmall",
              "Vsmall",
              "Wsmall",
              "Xsmall",
              "Ysmall",
              "Zsmall",
              "colonmonetary",
              "onefitted",
              "rupiah",
              "Tildesmall",
              "exclamdownsmall",
              "centoldstyle",
              "Lslashsmall",
              "Scaronsmall",
              "Zcaronsmall",
              "Dieresissmall",
              "Brevesmall",
              "Caronsmall",
              "Dotaccentsmall",
              "Macronsmall",
              "figuredash",
              "hypheninferior",
              "Ogoneksmall",
              "Ringsmall",
              "Cedillasmall",
              "questiondownsmall",
              "oneeighth",
              "threeeighths",
              "fiveeighths",
              "seveneighths",
              "onethird",
              "twothirds",
              "zerosuperior",
              "foursuperior",
              "fivesuperior",
              "sixsuperior",
              "sevensuperior",
              "eightsuperior",
              "ninesuperior",
              "zeroinferior",
              "oneinferior",
              "twoinferior",
              "threeinferior",
              "fourinferior",
              "fiveinferior",
              "sixinferior",
              "seveninferior",
              "eightinferior",
              "nineinferior",
              "centinferior",
              "dollarinferior",
              "periodinferior",
              "commainferior",
              "Agravesmall",
              "Aacutesmall",
              "Acircumflexsmall",
              "Atildesmall",
              "Adieresissmall",
              "Aringsmall",
              "AEsmall",
              "Ccedillasmall",
              "Egravesmall",
              "Eacutesmall",
              "Ecircumflexsmall",
              "Edieresissmall",
              "Igravesmall",
              "Iacutesmall",
              "Icircumflexsmall",
              "Idieresissmall",
              "Ethsmall",
              "Ntildesmall",
              "Ogravesmall",
              "Oacutesmall",
              "Ocircumflexsmall",
              "Otildesmall",
              "Odieresissmall",
              "OEsmall",
              "Oslashsmall",
              "Ugravesmall",
              "Uacutesmall",
              "Ucircumflexsmall",
              "Udieresissmall",
              "Yacutesmall",
              "Thornsmall",
              "Ydieresissmall",
              "001.000",
              "001.001",
              "001.002",
              "001.003",
              "Black",
              "Bold",
              "Book",
              "Light",
              "Medium",
              "Regular",
              "Roman",
              "Semibold",
            ];
          t.CFFStandardStrings = s;
          var o,
            l,
            c =
              ((o = [
                null,
                { id: "hstem", min: 2, stackClearing: !0, stem: !0 },
                null,
                { id: "vstem", min: 2, stackClearing: !0, stem: !0 },
                { id: "vmoveto", min: 1, stackClearing: !0 },
                { id: "rlineto", min: 2, resetStack: !0 },
                { id: "hlineto", min: 1, resetStack: !0 },
                { id: "vlineto", min: 1, resetStack: !0 },
                { id: "rrcurveto", min: 6, resetStack: !0 },
                null,
                { id: "callsubr", min: 1, undefStack: !0 },
                { id: "return", min: 0, undefStack: !0 },
                null,
                null,
                { id: "endchar", min: 0, stackClearing: !0 },
                null,
                null,
                null,
                { id: "hstemhm", min: 2, stackClearing: !0, stem: !0 },
                { id: "hintmask", min: 0, stackClearing: !0 },
                { id: "cntrmask", min: 0, stackClearing: !0 },
                { id: "rmoveto", min: 2, stackClearing: !0 },
                { id: "hmoveto", min: 1, stackClearing: !0 },
                { id: "vstemhm", min: 2, stackClearing: !0, stem: !0 },
                { id: "rcurveline", min: 8, resetStack: !0 },
                { id: "rlinecurve", min: 8, resetStack: !0 },
                { id: "vvcurveto", min: 4, resetStack: !0 },
                { id: "hhcurveto", min: 4, resetStack: !0 },
                null,
                { id: "callgsubr", min: 1, undefStack: !0 },
                { id: "vhcurveto", min: 4, resetStack: !0 },
                { id: "hvcurveto", min: 4, resetStack: !0 },
              ]),
              (l = [
                null,
                null,
                null,
                { id: "and", min: 2, stackDelta: -1 },
                { id: "or", min: 2, stackDelta: -1 },
                { id: "not", min: 1, stackDelta: 0 },
                null,
                null,
                null,
                { id: "abs", min: 1, stackDelta: 0 },
                {
                  id: "add",
                  min: 2,
                  stackDelta: -1,
                  stackFn: function (e, t) {
                    e[t - 2] = e[t - 2] + e[t - 1];
                  },
                },
                {
                  id: "sub",
                  min: 2,
                  stackDelta: -1,
                  stackFn: function (e, t) {
                    e[t - 2] = e[t - 2] - e[t - 1];
                  },
                },
                {
                  id: "div",
                  min: 2,
                  stackDelta: -1,
                  stackFn: function (e, t) {
                    e[t - 2] = e[t - 2] / e[t - 1];
                  },
                },
                null,
                {
                  id: "neg",
                  min: 1,
                  stackDelta: 0,
                  stackFn: function (e, t) {
                    e[t - 1] = -e[t - 1];
                  },
                },
                { id: "eq", min: 2, stackDelta: -1 },
                null,
                null,
                { id: "drop", min: 1, stackDelta: -1 },
                null,
                { id: "put", min: 2, stackDelta: -2 },
                { id: "get", min: 1, stackDelta: 0 },
                { id: "ifelse", min: 4, stackDelta: -3 },
                { id: "random", min: 0, stackDelta: 1 },
                {
                  id: "mul",
                  min: 2,
                  stackDelta: -1,
                  stackFn: function (e, t) {
                    e[t - 2] = e[t - 2] * e[t - 1];
                  },
                },
                null,
                { id: "sqrt", min: 1, stackDelta: 0 },
                { id: "dup", min: 1, stackDelta: 1 },
                { id: "exch", min: 2, stackDelta: 0 },
                { id: "index", min: 2, stackDelta: 0 },
                { id: "roll", min: 3, stackDelta: -2 },
                null,
                null,
                null,
                { id: "hflex", min: 7, resetStack: !0 },
                { id: "flex", min: 13, resetStack: !0 },
                { id: "hflex1", min: 9, resetStack: !0 },
                { id: "flex1", min: 11, resetStack: !0 },
              ]),
              class {
                constructor(e, t, i) {
                  this.bytes = e.getBytes();
                  this.properties = t;
                  this.seacAnalysisEnabled = !!i;
                }
                parse() {
                  var e = this.properties,
                    t = new h();
                  this.cff = t;
                  var i = this.parseHeader(),
                    n = this.parseIndex(i.endPos),
                    r = this.parseIndex(n.endPos),
                    a = this.parseIndex(r.endPos),
                    s = this.parseIndex(a.endPos),
                    o = this.parseDict(r.obj.get(0)),
                    l = this.createDict(v, o, t.strings);
                  t.header = i.obj;
                  t.names = this.parseNameIndex(n.obj);
                  t.strings = this.parseStringIndex(a.obj);
                  t.topDict = l;
                  t.globalSubrIndex = s.obj;
                  this.parsePrivateDict(t.topDict);
                  t.isCIDFont = l.hasName("ROS");
                  var c = l.getByName("CharStrings"),
                    u = this.parseIndex(c).obj,
                    d = l.getByName("FontMatrix");
                  if (d) e.fontMatrix = d;
                  var f,
                    p,
                    g = l.getByName("FontBBox");
                  if (g) {
                    e.ascent = Math.max(g[3], g[1]);
                    e.descent = Math.min(g[1], g[3]);
                    e.ascentScaled = !0;
                  }
                  if (t.isCIDFont) {
                    for (
                      var m = this.parseIndex(l.getByName("FDArray")).obj,
                        b = 0,
                        y = m.count;
                      b < y;
                      ++b
                    ) {
                      var w = m.get(b),
                        x = this.createDict(v, this.parseDict(w), t.strings);
                      this.parsePrivateDict(x);
                      t.fdArray.push(x);
                    }
                    p = null;
                    f = this.parseCharsets(
                      l.getByName("charset"),
                      u.count,
                      t.strings,
                      !0
                    );
                    t.fdSelect = this.parseFDSelect(
                      l.getByName("FDSelect"),
                      u.count
                    );
                  } else {
                    f = this.parseCharsets(
                      l.getByName("charset"),
                      u.count,
                      t.strings,
                      !1
                    );
                    p = this.parseEncoding(
                      l.getByName("Encoding"),
                      e,
                      t.strings,
                      f.charset
                    );
                  }
                  t.charset = f;
                  t.encoding = p;
                  var k = this.parseCharStrings({
                    charStrings: u,
                    localSubrIndex: l.privateDict.subrsIndex,
                    globalSubrIndex: s.obj,
                    fdSelect: t.fdSelect,
                    fdArray: t.fdArray,
                    privateDict: l.privateDict,
                  });
                  t.charStrings = k.charStrings;
                  t.seacs = k.seacs;
                  t.widths = k.widths;
                  return t;
                }
                parseHeader() {
                  for (
                    var e = this.bytes, t = e.length, i = 0;
                    i < t && 1 !== e[i];

                  )
                    ++i;
                  if (i >= t) throw new n.FormatError("Invalid CFF header");
                  if (0 !== i) {
                    (0, n.info)("cff data is shifted");
                    e = e.subarray(i);
                    this.bytes = e;
                  }
                  var r = e[0],
                    a = e[1],
                    s = e[2],
                    o = e[3];
                  return { obj: new u(r, a, s, o), endPos: s };
                }
                parseDict(e) {
                  var t = 0;
                  function i() {
                    var i = e[t++];
                    if (30 === i)
                      return (function () {
                        var i = "";
                        const n = [
                          "0",
                          "1",
                          "2",
                          "3",
                          "4",
                          "5",
                          "6",
                          "7",
                          "8",
                          "9",
                          ".",
                          "E",
                          "E-",
                          null,
                          "-",
                        ];
                        for (var r = e.length; t < r; ) {
                          var a = e[t++],
                            s = a >> 4,
                            o = 15 & a;
                          if (15 === s) break;
                          i += n[s];
                          if (15 === o) break;
                          i += n[o];
                        }
                        return parseFloat(i);
                      })();
                    else if (28 === i)
                      return (((i = e[t++]) << 24) | (e[t++] << 16)) >> 16;
                    else if (29 === i)
                      return (
                        ((i =
                          ((i = ((i = e[t++]) << 8) | e[t++]) << 8) | e[t++]) <<
                          8) |
                        e[t++]
                      );
                    else if (i >= 32 && i <= 246) return i - 139;
                    else if (i >= 247 && i <= 250)
                      return 256 * (i - 247) + e[t++] + 108;
                    else if (i >= 251 && i <= 254)
                      return -256 * (i - 251) - e[t++] - 108;
                    (0, n.warn)(
                      'CFFParser_parseDict: "' + i + '" is a reserved command.'
                    );
                    return NaN;
                  }
                  var r = [],
                    a = [];
                  t = 0;
                  for (var s = e.length; t < s; ) {
                    var o = e[t];
                    if (o <= 21) {
                      if (12 === o) o = (o << 8) | e[++t];
                      a.push([o, r]);
                      r = [];
                      ++t;
                    } else r.push(i());
                  }
                  return a;
                }
                parseIndex(e) {
                  var t,
                    i,
                    n = new f(),
                    r = this.bytes,
                    a = (r[e++] << 8) | r[e++],
                    s = [],
                    o = e;
                  if (0 !== a) {
                    var l = r[e++],
                      c = e + (a + 1) * l - 1;
                    for (t = 0, i = a + 1; t < i; ++t) {
                      for (var h = 0, u = 0; u < l; ++u) {
                        h <<= 8;
                        h += r[e++];
                      }
                      s.push(c + h);
                    }
                    o = s[a];
                  }
                  for (t = 0, i = s.length - 1; t < i; ++t) {
                    var d = s[t],
                      p = s[t + 1];
                    n.add(r.subarray(d, p));
                  }
                  return { obj: n, endPos: o };
                }
                parseNameIndex(e) {
                  for (var t = [], i = 0, r = e.count; i < r; ++i) {
                    var a = e.get(i);
                    t.push((0, n.bytesToString)(a));
                  }
                  return t;
                }
                parseStringIndex(e) {
                  for (var t = new d(), i = 0, r = e.count; i < r; ++i) {
                    var a = e.get(i);
                    t.add((0, n.bytesToString)(a));
                  }
                  return t;
                }
                createDict(e, t, i) {
                  for (var n = new e(i), r = 0, a = t.length; r < a; ++r) {
                    var s = t[r],
                      o = s[0],
                      l = s[1];
                    n.setByKey(o, l);
                  }
                  return n;
                }
                parseCharString(e, t, i, r) {
                  if (!t || e.callDepth > 10) return !1;
                  for (
                    var a = e.stackSize, s = e.stack, c = t.length, h = 0;
                    h < c;

                  ) {
                    var u = t[h++],
                      d = null;
                    if (12 === u) {
                      var f = t[h++];
                      if (0 === f) {
                        t[h - 2] = 139;
                        t[h - 1] = 22;
                        a = 0;
                      } else d = l[f];
                    } else if (28 === u) {
                      s[a] = ((t[h] << 24) | (t[h + 1] << 16)) >> 16;
                      h += 2;
                      a++;
                    } else if (14 === u) {
                      if (a >= 4) {
                        a -= 4;
                        if (this.seacAnalysisEnabled) {
                          e.seac = s.slice(a, a + 4);
                          return !1;
                        }
                      }
                      d = o[u];
                    } else if (u >= 32 && u <= 246) {
                      s[a] = u - 139;
                      a++;
                    } else if (u >= 247 && u <= 254) {
                      s[a] =
                        u < 251
                          ? ((u - 247) << 8) + t[h] + 108
                          : -((u - 251) << 8) - t[h] - 108;
                      h++;
                      a++;
                    } else if (255 === u) {
                      s[a] =
                        ((t[h] << 24) |
                          (t[h + 1] << 16) |
                          (t[h + 2] << 8) |
                          t[h + 3]) /
                        65536;
                      h += 4;
                      a++;
                    } else if (19 === u || 20 === u) {
                      e.hints += a >> 1;
                      h += (e.hints + 7) >> 3;
                      a %= 2;
                      d = o[u];
                    } else if (10 === u || 29 === u) {
                      var p;
                      if (10 === u) p = i;
                      else p = r;
                      if (!p) {
                        d = o[u];
                        (0, n.warn)("Missing subrsIndex for " + d.id);
                        return !1;
                      }
                      var g = 32768;
                      if (p.count < 1240) g = 107;
                      else if (p.count < 33900) g = 1131;
                      var m = s[--a] + g;
                      if (m < 0 || m >= p.count || isNaN(m)) {
                        d = o[u];
                        (0, n.warn)("Out of bounds subrIndex for " + d.id);
                        return !1;
                      }
                      e.stackSize = a;
                      e.callDepth++;
                      if (!this.parseCharString(e, p.get(m), i, r)) return !1;
                      e.callDepth--;
                      a = e.stackSize;
                      continue;
                    } else if (11 === u) {
                      e.stackSize = a;
                      return !0;
                    } else d = o[u];
                    if (d) {
                      if (d.stem) {
                        e.hints += a >> 1;
                        if (3 === u || 23 === u) e.hasVStems = !0;
                        else if (e.hasVStems && (1 === u || 18 === u)) {
                          (0, n.warn)("CFF stem hints are in wrong order");
                          t[h - 1] = 1 === u ? 3 : 23;
                        }
                      }
                      if ("min" in d)
                        if (!e.undefStack && a < d.min) {
                          (0, n.warn)(
                            "Not enough parameters for " +
                              d.id +
                              "; actual: " +
                              a +
                              ", expected: " +
                              d.min
                          );
                          return !1;
                        }
                      if (e.firstStackClearing && d.stackClearing) {
                        e.firstStackClearing = !1;
                        if ((a -= d.min) >= 2 && d.stem) a %= 2;
                        else if (a > 1)
                          (0, n.warn)(
                            "Found too many parameters for stack-clearing command"
                          );
                        if (a > 0 && s[a - 1] >= 0) e.width = s[a - 1];
                      }
                      if ("stackDelta" in d) {
                        if ("stackFn" in d) d.stackFn(s, a);
                        a += d.stackDelta;
                      } else if (d.stackClearing) a = 0;
                      else if (d.resetStack) {
                        a = 0;
                        e.undefStack = !1;
                      } else if (d.undefStack) {
                        a = 0;
                        e.undefStack = !0;
                        e.firstStackClearing = !1;
                      }
                    }
                  }
                  e.stackSize = a;
                  return !0;
                }
                parseCharStrings({
                  charStrings: e,
                  localSubrIndex: t,
                  globalSubrIndex: i,
                  fdSelect: r,
                  fdArray: a,
                  privateDict: s,
                }) {
                  for (var o = [], l = [], c = e.count, h = 0; h < c; h++) {
                    var u = e.get(h),
                      d = {
                        callDepth: 0,
                        stackSize: 0,
                        stack: [],
                        undefStack: !0,
                        hints: 0,
                        firstStackClearing: !0,
                        seac: null,
                        width: null,
                        hasVStems: !1,
                      },
                      f = !0,
                      p = null,
                      g = s;
                    if (r && a.length) {
                      var m = r.getFDIndex(h);
                      if (-1 === m) {
                        (0, n.warn)("Glyph index is not in fd select.");
                        f = !1;
                      }
                      if (m >= a.length) {
                        (0, n.warn)("Invalid fd index for glyph index.");
                        f = !1;
                      }
                      if (f) p = (g = a[m].privateDict).subrsIndex;
                    } else if (t) p = t;
                    if (f) f = this.parseCharString(d, u, p, i);
                    if (null !== d.width) {
                      const e = g.getByName("nominalWidthX");
                      l[h] = e + d.width;
                    } else {
                      const e = g.getByName("defaultWidthX");
                      l[h] = e;
                    }
                    if (null !== d.seac) o[h] = d.seac;
                    if (!f) e.set(h, new Uint8Array([14]));
                  }
                  return { charStrings: e, seacs: o, widths: l };
                }
                emptyPrivateDictionary(e) {
                  var t = this.createDict(b, [], e.strings);
                  e.setByKey(18, [0, 0]);
                  e.privateDict = t;
                }
                parsePrivateDict(e) {
                  if (e.hasName("Private")) {
                    var t = e.getByName("Private");
                    if (Array.isArray(t) && 2 === t.length) {
                      var i = t[0],
                        n = t[1];
                      if (!(0 === i || n >= this.bytes.length)) {
                        var r = n + i,
                          a = this.bytes.subarray(n, r),
                          s = this.parseDict(a),
                          o = this.createDict(b, s, e.strings);
                        e.privateDict = o;
                        if (o.getByName("Subrs")) {
                          var l = o.getByName("Subrs"),
                            c = n + l;
                          if (!(0 === l || c >= this.bytes.length)) {
                            var h = this.parseIndex(c);
                            o.subrsIndex = h.obj;
                          } else this.emptyPrivateDictionary(e);
                        }
                      } else this.emptyPrivateDictionary(e);
                    } else e.removeByName("Private");
                  } else this.emptyPrivateDictionary(e);
                }
                parseCharsets(e, t, i, a) {
                  if (0 === e) return new w(!0, y.ISO_ADOBE, r.ISOAdobeCharset);
                  else if (1 === e) return new w(!0, y.EXPERT, r.ExpertCharset);
                  else if (2 === e)
                    return new w(!0, y.EXPERT_SUBSET, r.ExpertSubsetCharset);
                  var s = this.bytes,
                    o = e,
                    l = s[e++];
                  const c = [a ? 0 : ".notdef"];
                  var h, u, d;
                  t -= 1;
                  switch (l) {
                    case 0:
                      for (d = 0; d < t; d++) {
                        h = (s[e++] << 8) | s[e++];
                        c.push(a ? h : i.get(h));
                      }
                      break;
                    case 1:
                      for (; c.length <= t; ) {
                        h = (s[e++] << 8) | s[e++];
                        u = s[e++];
                        for (d = 0; d <= u; d++) c.push(a ? h++ : i.get(h++));
                      }
                      break;
                    case 2:
                      for (; c.length <= t; ) {
                        h = (s[e++] << 8) | s[e++];
                        u = (s[e++] << 8) | s[e++];
                        for (d = 0; d <= u; d++) c.push(a ? h++ : i.get(h++));
                      }
                      break;
                    default:
                      throw new n.FormatError("Unknown charset format");
                  }
                  var f = e,
                    p = s.subarray(o, f);
                  return new w(!1, l, c, p);
                }
                parseEncoding(e, t, i, r) {
                  var s,
                    o,
                    l,
                    c = Object.create(null),
                    h = this.bytes,
                    u = !1,
                    d = null;
                  if (0 === e || 1 === e) {
                    u = !0;
                    s = e;
                    var f = e ? a.ExpertEncoding : a.StandardEncoding;
                    for (o = 0, l = r.length; o < l; o++) {
                      var p = f.indexOf(r[o]);
                      if (-1 !== p) c[p] = o;
                    }
                  } else {
                    var g = e;
                    switch (127 & (s = h[e++])) {
                      case 0:
                        var m = h[e++];
                        for (o = 1; o <= m; o++) c[h[e++]] = o;
                        break;
                      case 1:
                        var v = h[e++],
                          b = 1;
                        for (o = 0; o < v; o++)
                          for (
                            var y = h[e++], w = h[e++], k = y;
                            k <= y + w;
                            k++
                          )
                            c[k] = b++;
                        break;
                      default:
                        throw new n.FormatError(
                          `Unknown encoding format: ${s} in CFF`
                        );
                    }
                    var C = e;
                    if (128 & s) {
                      h[g] &= 127;
                      !(function () {
                        var t = h[e++];
                        for (o = 0; o < t; o++) {
                          var n = h[e++],
                            a = (h[e++] << 8) + (255 & h[e++]);
                          c[n] = r.indexOf(i.get(a));
                        }
                      })();
                    }
                    d = h.subarray(g, C);
                  }
                  return new x(u, (s &= 127), c, d);
                }
                parseFDSelect(e, t) {
                  var i,
                    r = this.bytes,
                    a = r[e++],
                    s = [];
                  switch (a) {
                    case 0:
                      for (i = 0; i < t; ++i) {
                        var o = r[e++];
                        s.push(o);
                      }
                      break;
                    case 3:
                      var l = (r[e++] << 8) | r[e++];
                      for (i = 0; i < l; ++i) {
                        var c = (r[e++] << 8) | r[e++];
                        if (0 === i && 0 !== c) {
                          (0, n.warn)(
                            "parseFDSelect: The first range must have a first GID of 0 -- trying to recover."
                          );
                          c = 0;
                        }
                        for (
                          var h = r[e++], u = (r[e] << 8) | r[e + 1], d = c;
                          d < u;
                          ++d
                        )
                          s.push(h);
                      }
                      e += 2;
                      break;
                    default:
                      throw new n.FormatError(
                        `parseFDSelect: Unknown format "${a}".`
                      );
                  }
                  if (s.length !== t)
                    throw new n.FormatError(
                      "parseFDSelect: Invalid font data."
                    );
                  return new k(a, s);
                }
              });
          t.CFFParser = c;
          class h {
            constructor() {
              this.header = null;
              this.names = [];
              this.topDict = null;
              this.strings = new d();
              this.globalSubrIndex = null;
              this.encoding = null;
              this.charset = null;
              this.charStrings = null;
              this.fdArray = [];
              this.fdSelect = null;
              this.isCIDFont = !1;
            }
            duplicateFirstGlyph() {
              if (!(this.charStrings.count >= 65535)) {
                var e = this.charStrings.get(0);
                this.charStrings.add(e);
                if (this.isCIDFont)
                  this.fdSelect.fdSelect.push(this.fdSelect.fdSelect[0]);
              } else
                (0, n.warn)(
                  "Not enough space in charstrings to duplicate first glyph."
                );
            }
            hasGlyphId(e) {
              if (e < 0 || e >= this.charStrings.count) return !1;
              else return this.charStrings.get(e).length > 0;
            }
          }
          t.CFF = h;
          class u {
            constructor(e, t, i, n) {
              this.major = e;
              this.minor = t;
              this.hdrSize = i;
              this.offSize = n;
            }
          }
          t.CFFHeader = u;
          class d {
            constructor() {
              this.strings = [];
            }
            get(e) {
              if (e >= 0 && e <= 390) return s[e];
              if (e - 391 <= this.strings.length) return this.strings[e - 391];
              else return s[0];
            }
            getSID(e) {
              let t = s.indexOf(e);
              if (-1 !== t) return t;
              t = this.strings.indexOf(e);
              if (-1 !== t) return t + 391;
              else return -1;
            }
            add(e) {
              this.strings.push(e);
            }
            get count() {
              return this.strings.length;
            }
          }
          t.CFFStrings = d;
          class f {
            constructor() {
              this.objects = [];
              this.length = 0;
            }
            add(e) {
              this.length += e.length;
              this.objects.push(e);
            }
            set(e, t) {
              this.length += t.length - this.objects[e].length;
              this.objects[e] = t;
            }
            get(e) {
              return this.objects[e];
            }
            get count() {
              return this.objects.length;
            }
          }
          t.CFFIndex = f;
          class p {
            constructor(e, t) {
              this.keyToNameMap = e.keyToNameMap;
              this.nameToKeyMap = e.nameToKeyMap;
              this.defaults = e.defaults;
              this.types = e.types;
              this.opcodes = e.opcodes;
              this.order = e.order;
              this.strings = t;
              this.values = Object.create(null);
            }
            setByKey(e, t) {
              if (!(e in this.keyToNameMap)) return !1;
              var i = t.length;
              if (0 === i) return !0;
              for (var r = 0; r < i; r++)
                if (isNaN(t[r])) {
                  (0, n.warn)(
                    'Invalid CFFDict value: "' + t + '" for key "' + e + '".'
                  );
                  return !0;
                }
              var a = this.types[e];
              if ("num" === a || "sid" === a || "offset" === a) t = t[0];
              this.values[e] = t;
              return !0;
            }
            setByName(e, t) {
              if (!(e in this.nameToKeyMap))
                throw new n.FormatError(`Invalid dictionary name "${e}"`);
              this.values[this.nameToKeyMap[e]] = t;
            }
            hasName(e) {
              return this.nameToKeyMap[e] in this.values;
            }
            getByName(e) {
              if (!(e in this.nameToKeyMap))
                throw new n.FormatError(`Invalid dictionary name ${e}"`);
              var t = this.nameToKeyMap[e];
              if (!(t in this.values)) return this.defaults[t];
              else return this.values[t];
            }
            removeByName(e) {
              delete this.values[this.nameToKeyMap[e]];
            }
            static createTables(e) {
              for (
                var t = {
                    keyToNameMap: {},
                    nameToKeyMap: {},
                    defaults: {},
                    types: {},
                    opcodes: {},
                    order: [],
                  },
                  i = 0,
                  n = e.length;
                i < n;
                ++i
              ) {
                var r = e[i],
                  a = Array.isArray(r[0]) ? (r[0][0] << 8) + r[0][1] : r[0];
                t.keyToNameMap[a] = r[1];
                t.nameToKeyMap[r[1]] = a;
                t.types[a] = r[2];
                t.defaults[a] = r[3];
                t.opcodes[a] = Array.isArray(r[0]) ? r[0] : [r[0]];
                t.order.push(a);
              }
              return t;
            }
          }
          var g,
            m,
            v =
              ((g = [
                [[12, 30], "ROS", ["sid", "sid", "num"], null],
                [[12, 20], "SyntheticBase", "num", null],
                [0, "version", "sid", null],
                [1, "Notice", "sid", null],
                [[12, 0], "Copyright", "sid", null],
                [2, "FullName", "sid", null],
                [3, "FamilyName", "sid", null],
                [4, "Weight", "sid", null],
                [[12, 1], "isFixedPitch", "num", 0],
                [[12, 2], "ItalicAngle", "num", 0],
                [[12, 3], "UnderlinePosition", "num", -100],
                [[12, 4], "UnderlineThickness", "num", 50],
                [[12, 5], "PaintType", "num", 0],
                [[12, 6], "CharstringType", "num", 2],
                [
                  [12, 7],
                  "FontMatrix",
                  ["num", "num", "num", "num", "num", "num"],
                  [0.001, 0, 0, 0.001, 0, 0],
                ],
                [13, "UniqueID", "num", null],
                [5, "FontBBox", ["num", "num", "num", "num"], [0, 0, 0, 0]],
                [[12, 8], "StrokeWidth", "num", 0],
                [14, "XUID", "array", null],
                [15, "charset", "offset", 0],
                [16, "Encoding", "offset", 0],
                [17, "CharStrings", "offset", 0],
                [18, "Private", ["offset", "offset"], null],
                [[12, 21], "PostScript", "sid", null],
                [[12, 22], "BaseFontName", "sid", null],
                [[12, 23], "BaseFontBlend", "delta", null],
                [[12, 31], "CIDFontVersion", "num", 0],
                [[12, 32], "CIDFontRevision", "num", 0],
                [[12, 33], "CIDFontType", "num", 0],
                [[12, 34], "CIDCount", "num", 8720],
                [[12, 35], "UIDBase", "num", null],
                [[12, 37], "FDSelect", "offset", null],
                [[12, 36], "FDArray", "offset", null],
                [[12, 38], "FontName", "sid", null],
              ]),
              (m = null),
              class extends p {
                constructor(e) {
                  if (null === m) m = p.createTables(g);
                  super(m, e);
                  this.privateDict = null;
                }
              });
          t.CFFTopDict = v;
          var b = (function () {
            var e = [
                [6, "BlueValues", "delta", null],
                [7, "OtherBlues", "delta", null],
                [8, "FamilyBlues", "delta", null],
                [9, "FamilyOtherBlues", "delta", null],
                [[12, 9], "BlueScale", "num", 0.039625],
                [[12, 10], "BlueShift", "num", 7],
                [[12, 11], "BlueFuzz", "num", 1],
                [10, "StdHW", "num", null],
                [11, "StdVW", "num", null],
                [[12, 12], "StemSnapH", "delta", null],
                [[12, 13], "StemSnapV", "delta", null],
                [[12, 14], "ForceBold", "num", 0],
                [[12, 17], "LanguageGroup", "num", 0],
                [[12, 18], "ExpansionFactor", "num", 0.06],
                [[12, 19], "initialRandomSeed", "num", 0],
                [20, "defaultWidthX", "num", 0],
                [21, "nominalWidthX", "num", 0],
                [19, "Subrs", "offset", null],
              ],
              t = null;
            return class extends p {
              constructor(i) {
                if (null === t) t = p.createTables(e);
                super(t, i);
                this.subrsIndex = null;
              }
            };
          })();
          t.CFFPrivateDict = b;
          var y = { ISO_ADOBE: 0, EXPERT: 1, EXPERT_SUBSET: 2 };
          class w {
            constructor(e, t, i, n) {
              this.predefined = e;
              this.format = t;
              this.charset = i;
              this.raw = n;
            }
          }
          t.CFFCharset = w;
          class x {
            constructor(e, t, i, n) {
              this.predefined = e;
              this.format = t;
              this.encoding = i;
              this.raw = n;
            }
          }
          class k {
            constructor(e, t) {
              this.format = e;
              this.fdSelect = t;
            }
            getFDIndex(e) {
              if (e < 0 || e >= this.fdSelect.length) return -1;
              else return this.fdSelect[e];
            }
          }
          t.CFFFDSelect = k;
          class C {
            constructor() {
              this.offsets = Object.create(null);
            }
            isTracking(e) {
              return e in this.offsets;
            }
            track(e, t) {
              if (e in this.offsets)
                throw new n.FormatError(`Already tracking location of ${e}`);
              this.offsets[e] = t;
            }
            offset(e) {
              for (var t in this.offsets) this.offsets[t] += e;
            }
            setEntryLocation(e, t, i) {
              if (!(e in this.offsets))
                throw new n.FormatError(`Not tracking location of ${e}`);
              for (
                var r = i.data, a = this.offsets[e], s = 0, o = t.length;
                s < o;
                ++s
              ) {
                var l = 5 * s + a,
                  c = l + 1,
                  h = l + 2,
                  u = l + 3,
                  d = l + 4;
                if (
                  29 !== r[l] ||
                  0 !== r[c] ||
                  0 !== r[h] ||
                  0 !== r[u] ||
                  0 !== r[d]
                )
                  throw new n.FormatError(
                    "writing to an offset that is not empty"
                  );
                var f = t[s];
                r[l] = 29;
                r[c] = (f >> 24) & 255;
                r[h] = (f >> 16) & 255;
                r[u] = (f >> 8) & 255;
                r[d] = 255 & f;
              }
            }
          }
          class S {
            constructor(e) {
              this.cff = e;
            }
            compile() {
              var e = this.cff,
                t = {
                  data: [],
                  length: 0,
                  add: function (e) {
                    this.data = this.data.concat(e);
                    this.length = this.data.length;
                  },
                },
                i = this.compileHeader(e.header);
              t.add(i);
              var r = this.compileNameIndex(e.names);
              t.add(r);
              if (e.isCIDFont)
                if (e.topDict.hasName("FontMatrix")) {
                  var a = e.topDict.getByName("FontMatrix");
                  e.topDict.removeByName("FontMatrix");
                  for (var s = 0, o = e.fdArray.length; s < o; s++) {
                    var l = e.fdArray[s],
                      c = a.slice(0);
                    if (l.hasName("FontMatrix"))
                      c = n.Util.transform(c, l.getByName("FontMatrix"));
                    l.setByName("FontMatrix", c);
                  }
                }
              const h = e.topDict.getByName("XUID");
              if (h && h.length > 16) e.topDict.removeByName("XUID");
              e.topDict.setByName("charset", 0);
              var u = this.compileTopDicts([e.topDict], t.length, e.isCIDFont);
              t.add(u.output);
              var d = u.trackers[0],
                f = this.compileStringIndex(e.strings.strings);
              t.add(f);
              var p = this.compileIndex(e.globalSubrIndex);
              t.add(p);
              if (e.encoding && e.topDict.hasName("Encoding"))
                if (e.encoding.predefined)
                  d.setEntryLocation("Encoding", [e.encoding.format], t);
                else {
                  var g = this.compileEncoding(e.encoding);
                  d.setEntryLocation("Encoding", [t.length], t);
                  t.add(g);
                }
              var m = this.compileCharset(
                e.charset,
                e.charStrings.count,
                e.strings,
                e.isCIDFont
              );
              d.setEntryLocation("charset", [t.length], t);
              t.add(m);
              var v = this.compileCharStrings(e.charStrings);
              d.setEntryLocation("CharStrings", [t.length], t);
              t.add(v);
              if (e.isCIDFont) {
                d.setEntryLocation("FDSelect", [t.length], t);
                var b = this.compileFDSelect(e.fdSelect);
                t.add(b);
                u = this.compileTopDicts(e.fdArray, t.length, !0);
                d.setEntryLocation("FDArray", [t.length], t);
                t.add(u.output);
                var y = u.trackers;
                this.compilePrivateDicts(e.fdArray, y, t);
              }
              this.compilePrivateDicts([e.topDict], [d], t);
              t.add([0]);
              return t.data;
            }
            encodeNumber(e) {
              if (Number.isInteger(e)) return this.encodeInteger(e);
              else return this.encodeFloat(e);
            }
            static get EncodeFloatRegExp() {
              return (0, n.shadow)(
                this,
                "EncodeFloatRegExp",
                /\.(\d*?)(?:9{5,20}|0{5,20})\d{0,2}(?:e(.+)|$)/
              );
            }
            encodeFloat(e) {
              var t = e.toString(),
                i = S.EncodeFloatRegExp.exec(t);
              if (i) {
                var n = parseFloat("1e" + ((i[2] ? +i[2] : 0) + i[1].length));
                t = (Math.round(e * n) / n).toString();
              }
              var r,
                a,
                s = "";
              for (r = 0, a = t.length; r < a; ++r) {
                var o = t[r];
                if ("e" === o) s += "-" === t[++r] ? "c" : "b";
                else if ("." === o) s += "a";
                else if ("-" === o) s += "e";
                else s += o;
              }
              var l = [30];
              for (
                r = 0, a = (s += 1 & s.length ? "f" : "ff").length;
                r < a;
                r += 2
              )
                l.push(parseInt(s.substring(r, r + 2), 16));
              return l;
            }
            encodeInteger(e) {
              var t;
              if (e >= -107 && e <= 107) t = [e + 139];
              else if (e >= 108 && e <= 1131)
                t = [247 + ((e -= 108) >> 8), 255 & e];
              else if (e >= -1131 && e <= -108)
                t = [251 + ((e = -e - 108) >> 8), 255 & e];
              else if (e >= -32768 && e <= 32767)
                t = [28, (e >> 8) & 255, 255 & e];
              else
                t = [
                  29,
                  (e >> 24) & 255,
                  (e >> 16) & 255,
                  (e >> 8) & 255,
                  255 & e,
                ];
              return t;
            }
            compileHeader(e) {
              return [e.major, e.minor, e.hdrSize, e.offSize];
            }
            compileNameIndex(e) {
              for (var t = new f(), i = 0, r = e.length; i < r; ++i) {
                for (
                  var a = e[i],
                    s = Math.min(a.length, 127),
                    o = new Array(s),
                    l = 0;
                  l < s;
                  l++
                ) {
                  var c = a[l];
                  if (
                    c < "!" ||
                    c > "~" ||
                    "[" === c ||
                    "]" === c ||
                    "(" === c ||
                    ")" === c ||
                    "{" === c ||
                    "}" === c ||
                    "<" === c ||
                    ">" === c ||
                    "/" === c ||
                    "%" === c
                  )
                    c = "_";
                  o[l] = c;
                }
                if ("" === (o = o.join(""))) o = "Bad_Font_Name";
                t.add((0, n.stringToBytes)(o));
              }
              return this.compileIndex(t);
            }
            compileTopDicts(e, t, i) {
              for (var n = [], r = new f(), a = 0, s = e.length; a < s; ++a) {
                var o = e[a];
                if (i) {
                  o.removeByName("CIDFontVersion");
                  o.removeByName("CIDFontRevision");
                  o.removeByName("CIDFontType");
                  o.removeByName("CIDCount");
                  o.removeByName("UIDBase");
                }
                var l = new C(),
                  c = this.compileDict(o, l);
                n.push(l);
                r.add(c);
                l.offset(t);
              }
              return { trackers: n, output: (r = this.compileIndex(r, n)) };
            }
            compilePrivateDicts(e, t, i) {
              for (var r = 0, a = e.length; r < a; ++r) {
                var s = e[r],
                  o = s.privateDict;
                if (!o || !s.hasName("Private"))
                  throw new n.FormatError(
                    "There must be a private dictionary."
                  );
                var l = new C(),
                  c = this.compileDict(o, l),
                  h = i.length;
                l.offset(h);
                if (!c.length) h = 0;
                t[r].setEntryLocation("Private", [c.length, h], i);
                i.add(c);
                if (o.subrsIndex && o.hasName("Subrs")) {
                  var u = this.compileIndex(o.subrsIndex);
                  l.setEntryLocation("Subrs", [c.length], i);
                  i.add(u);
                }
              }
            }
            compileDict(e, t) {
              for (var i = [], r = e.order, a = 0; a < r.length; ++a) {
                var s = r[a];
                if (s in e.values) {
                  var o = e.values[s],
                    l = e.types[s];
                  if (!Array.isArray(l)) l = [l];
                  if (!Array.isArray(o)) o = [o];
                  if (0 !== o.length) {
                    for (var c = 0, h = l.length; c < h; ++c) {
                      var u = l[c],
                        d = o[c];
                      switch (u) {
                        case "num":
                        case "sid":
                          i = i.concat(this.encodeNumber(d));
                          break;
                        case "offset":
                          var f = e.keyToNameMap[s];
                          if (!t.isTracking(f)) t.track(f, i.length);
                          i = i.concat([29, 0, 0, 0, 0]);
                          break;
                        case "array":
                        case "delta":
                          i = i.concat(this.encodeNumber(d));
                          for (var p = 1, g = o.length; p < g; ++p)
                            i = i.concat(this.encodeNumber(o[p]));
                          break;
                        default:
                          throw new n.FormatError(`Unknown data type of ${u}`);
                      }
                    }
                    i = i.concat(e.opcodes[s]);
                  }
                }
              }
              return i;
            }
            compileStringIndex(e) {
              for (var t = new f(), i = 0, r = e.length; i < r; ++i)
                t.add((0, n.stringToBytes)(e[i]));
              return this.compileIndex(t);
            }
            compileGlobalSubrIndex() {
              var e = this.cff.globalSubrIndex;
              this.out.writeByteArray(this.compileIndex(e));
            }
            compileCharStrings(e) {
              for (var t = new f(), i = 0; i < e.count; i++) {
                var n = e.get(i);
                if (0 !== n.length) t.add(n);
                else t.add(new Uint8Array([139, 14]));
              }
              return this.compileIndex(t);
            }
            compileCharset(e, t, i, r) {
              let a;
              const s = t - 1;
              if (r) a = new Uint8Array([2, 0, 0, (s >> 8) & 255, 255 & s]);
              else {
                a = new Uint8Array(1 + 2 * s);
                a[0] = 0;
                let t = 0;
                const r = e.charset.length;
                let o = !1;
                for (let s = 1; s < a.length; s += 2) {
                  let l = 0;
                  if (t < r) {
                    const r = e.charset[t++];
                    l = i.getSID(r);
                    if (-1 === l) {
                      l = 0;
                      if (!o) {
                        o = !0;
                        (0, n.warn)(`Couldn't find ${r} in CFF strings`);
                      }
                    }
                  }
                  a[s] = (l >> 8) & 255;
                  a[s + 1] = 255 & l;
                }
              }
              return this.compileTypedArray(a);
            }
            compileEncoding(e) {
              return this.compileTypedArray(e.raw);
            }
            compileFDSelect(e) {
              const t = e.format;
              let i, n;
              switch (t) {
                case 0:
                  i = new Uint8Array(1 + e.fdSelect.length);
                  i[0] = t;
                  for (n = 0; n < e.fdSelect.length; n++)
                    i[n + 1] = e.fdSelect[n];
                  break;
                case 3:
                  const r = 0;
                  let a = e.fdSelect[0];
                  const s = [t, 0, 0, (r >> 8) & 255, 255 & r, a];
                  for (n = 1; n < e.fdSelect.length; n++) {
                    const t = e.fdSelect[n];
                    if (t !== a) {
                      s.push((n >> 8) & 255, 255 & n, t);
                      a = t;
                    }
                  }
                  const o = (s.length - 3) / 3;
                  s[1] = (o >> 8) & 255;
                  s[2] = 255 & o;
                  s.push((n >> 8) & 255, 255 & n);
                  i = new Uint8Array(s);
              }
              return this.compileTypedArray(i);
            }
            compileTypedArray(e) {
              for (var t = [], i = 0, n = e.length; i < n; ++i) t[i] = e[i];
              return t;
            }
            compileIndex(e, t = []) {
              var i = e.objects,
                n = i.length;
              if (0 === n) return [0, 0, 0];
              var r,
                a,
                s = [(n >> 8) & 255, 255 & n],
                o = 1;
              for (r = 0; r < n; ++r) o += i[r].length;
              if (o < 256) a = 1;
              else if (o < 65536) a = 2;
              else if (o < 16777216) a = 3;
              else a = 4;
              s.push(a);
              var l = 1;
              for (r = 0; r < n + 1; r++) {
                if (1 === a) s.push(255 & l);
                else if (2 === a) s.push((l >> 8) & 255, 255 & l);
                else if (3 === a)
                  s.push((l >> 16) & 255, (l >> 8) & 255, 255 & l);
                else
                  s.push(
                    (l >>> 24) & 255,
                    (l >> 16) & 255,
                    (l >> 8) & 255,
                    255 & l
                  );
                if (i[r]) l += i[r].length;
              }
              for (r = 0; r < n; r++) {
                if (t[r]) t[r].offset(s.length);
                for (var c = 0, h = i[r].length; c < h; c++) s.push(i[r][c]);
              }
              return s;
            }
          }
          t.CFFCompiler = S;
        },
        (e, t) => {
          Object.defineProperty(t, "__esModule", { value: !0 });
          t.ISOAdobeCharset = t.ExpertSubsetCharset = t.ExpertCharset = void 0;
          t.ISOAdobeCharset = [
            ".notdef",
            "space",
            "exclam",
            "quotedbl",
            "numbersign",
            "dollar",
            "percent",
            "ampersand",
            "quoteright",
            "parenleft",
            "parenright",
            "asterisk",
            "plus",
            "comma",
            "hyphen",
            "period",
            "slash",
            "zero",
            "one",
            "two",
            "three",
            "four",
            "five",
            "six",
            "seven",
            "eight",
            "nine",
            "colon",
            "semicolon",
            "less",
            "equal",
            "greater",
            "question",
            "at",
            "A",
            "B",
            "C",
            "D",
            "E",
            "F",
            "G",
            "H",
            "I",
            "J",
            "K",
            "L",
            "M",
            "N",
            "O",
            "P",
            "Q",
            "R",
            "S",
            "T",
            "U",
            "V",
            "W",
            "X",
            "Y",
            "Z",
            "bracketleft",
            "backslash",
            "bracketright",
            "asciicircum",
            "underscore",
            "quoteleft",
            "a",
            "b",
            "c",
            "d",
            "e",
            "f",
            "g",
            "h",
            "i",
            "j",
            "k",
            "l",
            "m",
            "n",
            "o",
            "p",
            "q",
            "r",
            "s",
            "t",
            "u",
            "v",
            "w",
            "x",
            "y",
            "z",
            "braceleft",
            "bar",
            "braceright",
            "asciitilde",
            "exclamdown",
            "cent",
            "sterling",
            "fraction",
            "yen",
            "florin",
            "section",
            "currency",
            "quotesingle",
            "quotedblleft",
            "guillemotleft",
            "guilsinglleft",
            "guilsinglright",
            "fi",
            "fl",
            "endash",
            "dagger",
            "daggerdbl",
            "periodcentered",
            "paragraph",
            "bullet",
            "quotesinglbase",
            "quotedblbase",
            "quotedblright",
            "guillemotright",
            "ellipsis",
            "perthousand",
            "questiondown",
            "grave",
            "acute",
            "circumflex",
            "tilde",
            "macron",
            "breve",
            "dotaccent",
            "dieresis",
            "ring",
            "cedilla",
            "hungarumlaut",
            "ogonek",
            "caron",
            "emdash",
            "AE",
            "ordfeminine",
            "Lslash",
            "Oslash",
            "OE",
            "ordmasculine",
            "ae",
            "dotlessi",
            "lslash",
            "oslash",
            "oe",
            "germandbls",
            "onesuperior",
            "logicalnot",
            "mu",
            "trademark",
            "Eth",
            "onehalf",
            "plusminus",
            "Thorn",
            "onequarter",
            "divide",
            "brokenbar",
            "degree",
            "thorn",
            "threequarters",
            "twosuperior",
            "registered",
            "minus",
            "eth",
            "multiply",
            "threesuperior",
            "copyright",
            "Aacute",
            "Acircumflex",
            "Adieresis",
            "Agrave",
            "Aring",
            "Atilde",
            "Ccedilla",
            "Eacute",
            "Ecircumflex",
            "Edieresis",
            "Egrave",
            "Iacute",
            "Icircumflex",
            "Idieresis",
            "Igrave",
            "Ntilde",
            "Oacute",
            "Ocircumflex",
            "Odieresis",
            "Ograve",
            "Otilde",
            "Scaron",
            "Uacute",
            "Ucircumflex",
            "Udieresis",
            "Ugrave",
            "Yacute",
            "Ydieresis",
            "Zcaron",
            "aacute",
            "acircumflex",
            "adieresis",
            "agrave",
            "aring",
            "atilde",
            "ccedilla",
            "eacute",
            "ecircumflex",
            "edieresis",
            "egrave",
            "iacute",
            "icircumflex",
            "idieresis",
            "igrave",
            "ntilde",
            "oacute",
            "ocircumflex",
            "odieresis",
            "ograve",
            "otilde",
            "scaron",
            "uacute",
            "ucircumflex",
            "udieresis",
            "ugrave",
            "yacute",
            "ydieresis",
            "zcaron",
          ];
          t.ExpertCharset = [
            ".notdef",
            "space",
            "exclamsmall",
            "Hungarumlautsmall",
            "dollaroldstyle",
            "dollarsuperior",
            "ampersandsmall",
            "Acutesmall",
            "parenleftsuperior",
            "parenrightsuperior",
            "twodotenleader",
            "onedotenleader",
            "comma",
            "hyphen",
            "period",
            "fraction",
            "zerooldstyle",
            "oneoldstyle",
            "twooldstyle",
            "threeoldstyle",
            "fouroldstyle",
            "fiveoldstyle",
            "sixoldstyle",
            "sevenoldstyle",
            "eightoldstyle",
            "nineoldstyle",
            "colon",
            "semicolon",
            "commasuperior",
            "threequartersemdash",
            "periodsuperior",
            "questionsmall",
            "asuperior",
            "bsuperior",
            "centsuperior",
            "dsuperior",
            "esuperior",
            "isuperior",
            "lsuperior",
            "msuperior",
            "nsuperior",
            "osuperior",
            "rsuperior",
            "ssuperior",
            "tsuperior",
            "ff",
            "fi",
            "fl",
            "ffi",
            "ffl",
            "parenleftinferior",
            "parenrightinferior",
            "Circumflexsmall",
            "hyphensuperior",
            "Gravesmall",
            "Asmall",
            "Bsmall",
            "Csmall",
            "Dsmall",
            "Esmall",
            "Fsmall",
            "Gsmall",
            "Hsmall",
            "Ismall",
            "Jsmall",
            "Ksmall",
            "Lsmall",
            "Msmall",
            "Nsmall",
            "Osmall",
            "Psmall",
            "Qsmall",
            "Rsmall",
            "Ssmall",
            "Tsmall",
            "Usmall",
            "Vsmall",
            "Wsmall",
            "Xsmall",
            "Ysmall",
            "Zsmall",
            "colonmonetary",
            "onefitted",
            "rupiah",
            "Tildesmall",
            "exclamdownsmall",
            "centoldstyle",
            "Lslashsmall",
            "Scaronsmall",
            "Zcaronsmall",
            "Dieresissmall",
            "Brevesmall",
            "Caronsmall",
            "Dotaccentsmall",
            "Macronsmall",
            "figuredash",
            "hypheninferior",
            "Ogoneksmall",
            "Ringsmall",
            "Cedillasmall",
            "onequarter",
            "onehalf",
            "threequarters",
            "questiondownsmall",
            "oneeighth",
            "threeeighths",
            "fiveeighths",
            "seveneighths",
            "onethird",
            "twothirds",
            "zerosuperior",
            "onesuperior",
            "twosuperior",
            "threesuperior",
            "foursuperior",
            "fivesuperior",
            "sixsuperior",
            "sevensuperior",
            "eightsuperior",
            "ninesuperior",
            "zeroinferior",
            "oneinferior",
            "twoinferior",
            "threeinferior",
            "fourinferior",
            "fiveinferior",
            "sixinferior",
            "seveninferior",
            "eightinferior",
            "nineinferior",
            "centinferior",
            "dollarinferior",
            "periodinferior",
            "commainferior",
            "Agravesmall",
            "Aacutesmall",
            "Acircumflexsmall",
            "Atildesmall",
            "Adieresissmall",
            "Aringsmall",
            "AEsmall",
            "Ccedillasmall",
            "Egravesmall",
            "Eacutesmall",
            "Ecircumflexsmall",
            "Edieresissmall",
            "Igravesmall",
            "Iacutesmall",
            "Icircumflexsmall",
            "Idieresissmall",
            "Ethsmall",
            "Ntildesmall",
            "Ogravesmall",
            "Oacutesmall",
            "Ocircumflexsmall",
            "Otildesmall",
            "Odieresissmall",
            "OEsmall",
            "Oslashsmall",
            "Ugravesmall",
            "Uacutesmall",
            "Ucircumflexsmall",
            "Udieresissmall",
            "Yacutesmall",
            "Thornsmall",
            "Ydieresissmall",
          ];
          t.ExpertSubsetCharset = [
            ".notdef",
            "space",
            "dollaroldstyle",
            "dollarsuperior",
            "parenleftsuperior",
            "parenrightsuperior",
            "twodotenleader",
            "onedotenleader",
            "comma",
            "hyphen",
            "period",
            "fraction",
            "zerooldstyle",
            "oneoldstyle",
            "twooldstyle",
            "threeoldstyle",
            "fouroldstyle",
            "fiveoldstyle",
            "sixoldstyle",
            "sevenoldstyle",
            "eightoldstyle",
            "nineoldstyle",
            "colon",
            "semicolon",
            "commasuperior",
            "threequartersemdash",
            "periodsuperior",
            "asuperior",
            "bsuperior",
            "centsuperior",
            "dsuperior",
            "esuperior",
            "isuperior",
            "lsuperior",
            "msuperior",
            "nsuperior",
            "osuperior",
            "rsuperior",
            "ssuperior",
            "tsuperior",
            "ff",
            "fi",
            "fl",
            "ffi",
            "ffl",
            "parenleftinferior",
            "parenrightinferior",
            "hyphensuperior",
            "colonmonetary",
            "onefitted",
            "rupiah",
            "centoldstyle",
            "figuredash",
            "hypheninferior",
            "onequarter",
            "onehalf",
            "threequarters",
            "oneeighth",
            "threeeighths",
            "fiveeighths",
            "seveneighths",
            "onethird",
            "twothirds",
            "zerosuperior",
            "onesuperior",
            "twosuperior",
            "threesuperior",
            "foursuperior",
            "fivesuperior",
            "sixsuperior",
            "sevensuperior",
            "eightsuperior",
            "ninesuperior",
            "zeroinferior",
            "oneinferior",
            "twoinferior",
            "threeinferior",
            "fourinferior",
            "fiveinferior",
            "sixinferior",
            "seveninferior",
            "eightinferior",
            "nineinferior",
            "centinferior",
            "dollarinferior",
            "periodinferior",
            "commainferior",
          ];
        },
        (e, t) => {
          Object.defineProperty(t, "__esModule", { value: !0 });
          t.getEncoding = function (e) {
            switch (e) {
              case "WinAnsiEncoding":
                return s;
              case "StandardEncoding":
                return a;
              case "MacRomanEncoding":
                return r;
              case "SymbolSetEncoding":
                return o;
              case "ZapfDingbatsEncoding":
                return l;
              case "ExpertEncoding":
                return i;
              case "MacExpertEncoding":
                return n;
              default:
                return null;
            }
          };
          t.ZapfDingbatsEncoding =
            t.WinAnsiEncoding =
            t.SymbolSetEncoding =
            t.StandardEncoding =
            t.MacRomanEncoding =
            t.ExpertEncoding =
              void 0;
          const i = [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "space",
            "exclamsmall",
            "Hungarumlautsmall",
            "",
            "dollaroldstyle",
            "dollarsuperior",
            "ampersandsmall",
            "Acutesmall",
            "parenleftsuperior",
            "parenrightsuperior",
            "twodotenleader",
            "onedotenleader",
            "comma",
            "hyphen",
            "period",
            "fraction",
            "zerooldstyle",
            "oneoldstyle",
            "twooldstyle",
            "threeoldstyle",
            "fouroldstyle",
            "fiveoldstyle",
            "sixoldstyle",
            "sevenoldstyle",
            "eightoldstyle",
            "nineoldstyle",
            "colon",
            "semicolon",
            "commasuperior",
            "threequartersemdash",
            "periodsuperior",
            "questionsmall",
            "",
            "asuperior",
            "bsuperior",
            "centsuperior",
            "dsuperior",
            "esuperior",
            "",
            "",
            "",
            "isuperior",
            "",
            "",
            "lsuperior",
            "msuperior",
            "nsuperior",
            "osuperior",
            "",
            "",
            "rsuperior",
            "ssuperior",
            "tsuperior",
            "",
            "ff",
            "fi",
            "fl",
            "ffi",
            "ffl",
            "parenleftinferior",
            "",
            "parenrightinferior",
            "Circumflexsmall",
            "hyphensuperior",
            "Gravesmall",
            "Asmall",
            "Bsmall",
            "Csmall",
            "Dsmall",
            "Esmall",
            "Fsmall",
            "Gsmall",
            "Hsmall",
            "Ismall",
            "Jsmall",
            "Ksmall",
            "Lsmall",
            "Msmall",
            "Nsmall",
            "Osmall",
            "Psmall",
            "Qsmall",
            "Rsmall",
            "Ssmall",
            "Tsmall",
            "Usmall",
            "Vsmall",
            "Wsmall",
            "Xsmall",
            "Ysmall",
            "Zsmall",
            "colonmonetary",
            "onefitted",
            "rupiah",
            "Tildesmall",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "exclamdownsmall",
            "centoldstyle",
            "Lslashsmall",
            "",
            "",
            "Scaronsmall",
            "Zcaronsmall",
            "Dieresissmall",
            "Brevesmall",
            "Caronsmall",
            "",
            "Dotaccentsmall",
            "",
            "",
            "Macronsmall",
            "",
            "",
            "figuredash",
            "hypheninferior",
            "",
            "",
            "Ogoneksmall",
            "Ringsmall",
            "Cedillasmall",
            "",
            "",
            "",
            "onequarter",
            "onehalf",
            "threequarters",
            "questiondownsmall",
            "oneeighth",
            "threeeighths",
            "fiveeighths",
            "seveneighths",
            "onethird",
            "twothirds",
            "",
            "",
            "zerosuperior",
            "onesuperior",
            "twosuperior",
            "threesuperior",
            "foursuperior",
            "fivesuperior",
            "sixsuperior",
            "sevensuperior",
            "eightsuperior",
            "ninesuperior",
            "zeroinferior",
            "oneinferior",
            "twoinferior",
            "threeinferior",
            "fourinferior",
            "fiveinferior",
            "sixinferior",
            "seveninferior",
            "eightinferior",
            "nineinferior",
            "centinferior",
            "dollarinferior",
            "periodinferior",
            "commainferior",
            "Agravesmall",
            "Aacutesmall",
            "Acircumflexsmall",
            "Atildesmall",
            "Adieresissmall",
            "Aringsmall",
            "AEsmall",
            "Ccedillasmall",
            "Egravesmall",
            "Eacutesmall",
            "Ecircumflexsmall",
            "Edieresissmall",
            "Igravesmall",
            "Iacutesmall",
            "Icircumflexsmall",
            "Idieresissmall",
            "Ethsmall",
            "Ntildesmall",
            "Ogravesmall",
            "Oacutesmall",
            "Ocircumflexsmall",
            "Otildesmall",
            "Odieresissmall",
            "OEsmall",
            "Oslashsmall",
            "Ugravesmall",
            "Uacutesmall",
            "Ucircumflexsmall",
            "Udieresissmall",
            "Yacutesmall",
            "Thornsmall",
            "Ydieresissmall",
          ];
          t.ExpertEncoding = i;
          const n = [
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "space",
              "exclamsmall",
              "Hungarumlautsmall",
              "centoldstyle",
              "dollaroldstyle",
              "dollarsuperior",
              "ampersandsmall",
              "Acutesmall",
              "parenleftsuperior",
              "parenrightsuperior",
              "twodotenleader",
              "onedotenleader",
              "comma",
              "hyphen",
              "period",
              "fraction",
              "zerooldstyle",
              "oneoldstyle",
              "twooldstyle",
              "threeoldstyle",
              "fouroldstyle",
              "fiveoldstyle",
              "sixoldstyle",
              "sevenoldstyle",
              "eightoldstyle",
              "nineoldstyle",
              "colon",
              "semicolon",
              "",
              "threequartersemdash",
              "",
              "questionsmall",
              "",
              "",
              "",
              "",
              "Ethsmall",
              "",
              "",
              "onequarter",
              "onehalf",
              "threequarters",
              "oneeighth",
              "threeeighths",
              "fiveeighths",
              "seveneighths",
              "onethird",
              "twothirds",
              "",
              "",
              "",
              "",
              "",
              "",
              "ff",
              "fi",
              "fl",
              "ffi",
              "ffl",
              "parenleftinferior",
              "",
              "parenrightinferior",
              "Circumflexsmall",
              "hypheninferior",
              "Gravesmall",
              "Asmall",
              "Bsmall",
              "Csmall",
              "Dsmall",
              "Esmall",
              "Fsmall",
              "Gsmall",
              "Hsmall",
              "Ismall",
              "Jsmall",
              "Ksmall",
              "Lsmall",
              "Msmall",
              "Nsmall",
              "Osmall",
              "Psmall",
              "Qsmall",
              "Rsmall",
              "Ssmall",
              "Tsmall",
              "Usmall",
              "Vsmall",
              "Wsmall",
              "Xsmall",
              "Ysmall",
              "Zsmall",
              "colonmonetary",
              "onefitted",
              "rupiah",
              "Tildesmall",
              "",
              "",
              "asuperior",
              "centsuperior",
              "",
              "",
              "",
              "",
              "Aacutesmall",
              "Agravesmall",
              "Acircumflexsmall",
              "Adieresissmall",
              "Atildesmall",
              "Aringsmall",
              "Ccedillasmall",
              "Eacutesmall",
              "Egravesmall",
              "Ecircumflexsmall",
              "Edieresissmall",
              "Iacutesmall",
              "Igravesmall",
              "Icircumflexsmall",
              "Idieresissmall",
              "Ntildesmall",
              "Oacutesmall",
              "Ogravesmall",
              "Ocircumflexsmall",
              "Odieresissmall",
              "Otildesmall",
              "Uacutesmall",
              "Ugravesmall",
              "Ucircumflexsmall",
              "Udieresissmall",
              "",
              "eightsuperior",
              "fourinferior",
              "threeinferior",
              "sixinferior",
              "eightinferior",
              "seveninferior",
              "Scaronsmall",
              "",
              "centinferior",
              "twoinferior",
              "",
              "Dieresissmall",
              "",
              "Caronsmall",
              "osuperior",
              "fiveinferior",
              "",
              "commainferior",
              "periodinferior",
              "Yacutesmall",
              "",
              "dollarinferior",
              "",
              "",
              "Thornsmall",
              "",
              "nineinferior",
              "zeroinferior",
              "Zcaronsmall",
              "AEsmall",
              "Oslashsmall",
              "questiondownsmall",
              "oneinferior",
              "Lslashsmall",
              "",
              "",
              "",
              "",
              "",
              "",
              "Cedillasmall",
              "",
              "",
              "",
              "",
              "",
              "OEsmall",
              "figuredash",
              "hyphensuperior",
              "",
              "",
              "",
              "",
              "exclamdownsmall",
              "",
              "Ydieresissmall",
              "",
              "onesuperior",
              "twosuperior",
              "threesuperior",
              "foursuperior",
              "fivesuperior",
              "sixsuperior",
              "sevensuperior",
              "ninesuperior",
              "zerosuperior",
              "",
              "esuperior",
              "rsuperior",
              "tsuperior",
              "",
              "",
              "isuperior",
              "ssuperior",
              "dsuperior",
              "",
              "",
              "",
              "",
              "",
              "lsuperior",
              "Ogoneksmall",
              "Brevesmall",
              "Macronsmall",
              "bsuperior",
              "nsuperior",
              "msuperior",
              "commasuperior",
              "periodsuperior",
              "Dotaccentsmall",
              "Ringsmall",
              "",
              "",
              "",
              "",
            ],
            r = [
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "",
              "space",
              "exclam",
              "quotedbl",
              "numbersign",
              "dollar",
              "percent",
              "ampersand",
              "quotesingle",
              "parenleft",
              "parenright",
              "asterisk",
              "plus",
              "comma",
              "hyphen",
              "period",
              "slash",
              "zero",
              "one",
              "two",
              "three",
              "four",
              "five",
              "six",
              "seven",
              "eight",
              "nine",
              "colon",
              "semicolon",
              "less",
              "equal",
              "greater",
              "question",
              "at",
              "A",
              "B",
              "C",
              "D",
              "E",
              "F",
              "G",
              "H",
              "I",
              "J",
              "K",
              "L",
              "M",
              "N",
              "O",
              "P",
              "Q",
              "R",
              "S",
              "T",
              "U",
              "V",
              "W",
              "X",
              "Y",
              "Z",
              "bracketleft",
              "backslash",
              "bracketright",
              "asciicircum",
              "underscore",
              "grave",
              "a",
              "b",
              "c",
              "d",
              "e",
              "f",
              "g",
              "h",
              "i",
              "j",
              "k",
              "l",
              "m",
              "n",
              "o",
              "p",
              "q",
              "r",
              "s",
              "t",
              "u",
              "v",
              "w",
              "x",
              "y",
              "z",
              "braceleft",
              "bar",
              "braceright",
              "asciitilde",
              "",
              "Adieresis",
              "Aring",
              "Ccedilla",
              "Eacute",
              "Ntilde",
              "Odieresis",
              "Udieresis",
              "aacute",
              "agrave",
              "acircumflex",
              "adieresis",
              "atilde",
              "aring",
              "ccedilla",
              "eacute",
              "egrave",
              "ecircumflex",
              "edieresis",
              "iacute",
              "igrave",
              "icircumflex",
              "idieresis",
              "ntilde",
              "oacute",
              "ograve",
              "ocircumflex",
              "odieresis",
              "otilde",
              "uacute",
              "ugrave",
              "ucircumflex",
              "udieresis",
              "dagger",
              "degree",
              "cent",
              "sterling",
              "section",
              "bullet",
              "paragraph",
              "germandbls",
              "registered",
              "copyright",
              "trademark",
              "acute",
              "dieresis",
              "notequal",
              "AE",
              "Oslash",
              "infinity",
              "plusminus",
              "lessequal",
              "greaterequal",
              "yen",
              "mu",
              "partialdiff",
              "summation",
              "product",
              "pi",
              "integral",
              "ordfeminine",
              "ordmasculine",
              "Omega",
              "ae",
              "oslash",
              "questiondown",
              "exclamdown",
              "logicalnot",
              "radical",
              "florin",
              "approxequal",
              "Delta",
              "guillemotleft",
              "guillemotright",
              "ellipsis",
              "space",
              "Agrave",
              "Atilde",
              "Otilde",
              "OE",
              "oe",
              "endash",
              "emdash",
              "quotedblleft",
              "quotedblright",
              "quoteleft",
              "quoteright",
              "divide",
              "lozenge",
              "ydieresis",
              "Ydieresis",
              "fraction",
              "currency",
              "guilsinglleft",
              "guilsinglright",
              "fi",
              "fl",
              "daggerdbl",
              "periodcentered",
              "quotesinglbase",
              "quotedblbase",
              "perthousand",
              "Acircumflex",
              "Ecircumflex",
              "Aacute",
              "Edieresis",
              "Egrave",
              "Iacute",
              "Icircumflex",
              "Idieresis",
              "Igrave",
              "Oacute",
              "Ocircumflex",
              "apple",
              "Ograve",
              "Uacute",
              "Ucircumflex",
              "Ugrave",
              "dotlessi",
              "circumflex",
              "tilde",
              "macron",
              "breve",
              "dotaccent",
              "ring",
              "cedilla",
              "hungarumlaut",
              "ogonek",
              "caron",
            ];
          t.MacRomanEncoding = r;
          const a = [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "space",
            "exclam",
            "quotedbl",
            "numbersign",
            "dollar",
            "percent",
            "ampersand",
            "quoteright",
            "parenleft",
            "parenright",
            "asterisk",
            "plus",
            "comma",
            "hyphen",
            "period",
            "slash",
            "zero",
            "one",
            "two",
            "three",
            "four",
            "five",
            "six",
            "seven",
            "eight",
            "nine",
            "colon",
            "semicolon",
            "less",
            "equal",
            "greater",
            "question",
            "at",
            "A",
            "B",
            "C",
            "D",
            "E",
            "F",
            "G",
            "H",
            "I",
            "J",
            "K",
            "L",
            "M",
            "N",
            "O",
            "P",
            "Q",
            "R",
            "S",
            "T",
            "U",
            "V",
            "W",
            "X",
            "Y",
            "Z",
            "bracketleft",
            "backslash",
            "bracketright",
            "asciicircum",
            "underscore",
            "quoteleft",
            "a",
            "b",
            "c",
            "d",
            "e",
            "f",
            "g",
            "h",
            "i",
            "j",
            "k",
            "l",
            "m",
            "n",
            "o",
            "p",
            "q",
            "r",
            "s",
            "t",
            "u",
            "v",
            "w",
            "x",
            "y",
            "z",
            "braceleft",
            "bar",
            "braceright",
            "asciitilde",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "exclamdown",
            "cent",
            "sterling",
            "fraction",
            "yen",
            "florin",
            "section",
            "currency",
            "quotesingle",
            "quotedblleft",
            "guillemotleft",
            "guilsinglleft",
            "guilsinglright",
            "fi",
            "fl",
            "",
            "endash",
            "dagger",
            "daggerdbl",
            "periodcentered",
            "",
            "paragraph",
            "bullet",
            "quotesinglbase",
            "quotedblbase",
            "quotedblright",
            "guillemotright",
            "ellipsis",
            "perthousand",
            "",
            "questiondown",
            "",
            "grave",
            "acute",
            "circumflex",
            "tilde",
            "macron",
            "breve",
            "dotaccent",
            "dieresis",
            "",
            "ring",
            "cedilla",
            "",
            "hungarumlaut",
            "ogonek",
            "caron",
            "emdash",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "AE",
            "",
            "ordfeminine",
            "",
            "",
            "",
            "",
            "Lslash",
            "Oslash",
            "OE",
            "ordmasculine",
            "",
            "",
            "",
            "",
            "",
            "ae",
            "",
            "",
            "",
            "dotlessi",
            "",
            "",
            "lslash",
            "oslash",
            "oe",
            "germandbls",
            "",
            "",
            "",
            "",
          ];
          t.StandardEncoding = a;
          const s = [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "space",
            "exclam",
            "quotedbl",
            "numbersign",
            "dollar",
            "percent",
            "ampersand",
            "quotesingle",
            "parenleft",
            "parenright",
            "asterisk",
            "plus",
            "comma",
            "hyphen",
            "period",
            "slash",
            "zero",
            "one",
            "two",
            "three",
            "four",
            "five",
            "six",
            "seven",
            "eight",
            "nine",
            "colon",
            "semicolon",
            "less",
            "equal",
            "greater",
            "question",
            "at",
            "A",
            "B",
            "C",
            "D",
            "E",
            "F",
            "G",
            "H",
            "I",
            "J",
            "K",
            "L",
            "M",
            "N",
            "O",
            "P",
            "Q",
            "R",
            "S",
            "T",
            "U",
            "V",
            "W",
            "X",
            "Y",
            "Z",
            "bracketleft",
            "backslash",
            "bracketright",
            "asciicircum",
            "underscore",
            "grave",
            "a",
            "b",
            "c",
            "d",
            "e",
            "f",
            "g",
            "h",
            "i",
            "j",
            "k",
            "l",
            "m",
            "n",
            "o",
            "p",
            "q",
            "r",
            "s",
            "t",
            "u",
            "v",
            "w",
            "x",
            "y",
            "z",
            "braceleft",
            "bar",
            "braceright",
            "asciitilde",
            "bullet",
            "Euro",
            "bullet",
            "quotesinglbase",
            "florin",
            "quotedblbase",
            "ellipsis",
            "dagger",
            "daggerdbl",
            "circumflex",
            "perthousand",
            "Scaron",
            "guilsinglleft",
            "OE",
            "bullet",
            "Zcaron",
            "bullet",
            "bullet",
            "quoteleft",
            "quoteright",
            "quotedblleft",
            "quotedblright",
            "bullet",
            "endash",
            "emdash",
            "tilde",
            "trademark",
            "scaron",
            "guilsinglright",
            "oe",
            "bullet",
            "zcaron",
            "Ydieresis",
            "space",
            "exclamdown",
            "cent",
            "sterling",
            "currency",
            "yen",
            "brokenbar",
            "section",
            "dieresis",
            "copyright",
            "ordfeminine",
            "guillemotleft",
            "logicalnot",
            "hyphen",
            "registered",
            "macron",
            "degree",
            "plusminus",
            "twosuperior",
            "threesuperior",
            "acute",
            "mu",
            "paragraph",
            "periodcentered",
            "cedilla",
            "onesuperior",
            "ordmasculine",
            "guillemotright",
            "onequarter",
            "onehalf",
            "threequarters",
            "questiondown",
            "Agrave",
            "Aacute",
            "Acircumflex",
            "Atilde",
            "Adieresis",
            "Aring",
            "AE",
            "Ccedilla",
            "Egrave",
            "Eacute",
            "Ecircumflex",
            "Edieresis",
            "Igrave",
            "Iacute",
            "Icircumflex",
            "Idieresis",
            "Eth",
            "Ntilde",
            "Ograve",
            "Oacute",
            "Ocircumflex",
            "Otilde",
            "Odieresis",
            "multiply",
            "Oslash",
            "Ugrave",
            "Uacute",
            "Ucircumflex",
            "Udieresis",
            "Yacute",
            "Thorn",
            "germandbls",
            "agrave",
            "aacute",
            "acircumflex",
            "atilde",
            "adieresis",
            "aring",
            "ae",
            "ccedilla",
            "egrave",
            "eacute",
            "ecircumflex",
            "edieresis",
            "igrave",
            "iacute",
            "icircumflex",
            "idieresis",
            "eth",
            "ntilde",
            "ograve",
            "oacute",
            "ocircumflex",
            "otilde",
            "odieresis",
            "divide",
            "oslash",
            "ugrave",
            "uacute",
            "ucircumflex",
            "udieresis",
            "yacute",
            "thorn",
            "ydieresis",
          ];
          t.WinAnsiEncoding = s;
          const o = [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "space",
            "exclam",
            "universal",
            "numbersign",
            "existential",
            "percent",
            "ampersand",
            "suchthat",
            "parenleft",
            "parenright",
            "asteriskmath",
            "plus",
            "comma",
            "minus",
            "period",
            "slash",
            "zero",
            "one",
            "two",
            "three",
            "four",
            "five",
            "six",
            "seven",
            "eight",
            "nine",
            "colon",
            "semicolon",
            "less",
            "equal",
            "greater",
            "question",
            "congruent",
            "Alpha",
            "Beta",
            "Chi",
            "Delta",
            "Epsilon",
            "Phi",
            "Gamma",
            "Eta",
            "Iota",
            "theta1",
            "Kappa",
            "Lambda",
            "Mu",
            "Nu",
            "Omicron",
            "Pi",
            "Theta",
            "Rho",
            "Sigma",
            "Tau",
            "Upsilon",
            "sigma1",
            "Omega",
            "Xi",
            "Psi",
            "Zeta",
            "bracketleft",
            "therefore",
            "bracketright",
            "perpendicular",
            "underscore",
            "radicalex",
            "alpha",
            "beta",
            "chi",
            "delta",
            "epsilon",
            "phi",
            "gamma",
            "eta",
            "iota",
            "phi1",
            "kappa",
            "lambda",
            "mu",
            "nu",
            "omicron",
            "pi",
            "theta",
            "rho",
            "sigma",
            "tau",
            "upsilon",
            "omega1",
            "omega",
            "xi",
            "psi",
            "zeta",
            "braceleft",
            "bar",
            "braceright",
            "similar",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "Euro",
            "Upsilon1",
            "minute",
            "lessequal",
            "fraction",
            "infinity",
            "florin",
            "club",
            "diamond",
            "heart",
            "spade",
            "arrowboth",
            "arrowleft",
            "arrowup",
            "arrowright",
            "arrowdown",
            "degree",
            "plusminus",
            "second",
            "greaterequal",
            "multiply",
            "proportional",
            "partialdiff",
            "bullet",
            "divide",
            "notequal",
            "equivalence",
            "approxequal",
            "ellipsis",
            "arrowvertex",
            "arrowhorizex",
            "carriagereturn",
            "aleph",
            "Ifraktur",
            "Rfraktur",
            "weierstrass",
            "circlemultiply",
            "circleplus",
            "emptyset",
            "intersection",
            "union",
            "propersuperset",
            "reflexsuperset",
            "notsubset",
            "propersubset",
            "reflexsubset",
            "element",
            "notelement",
            "angle",
            "gradient",
            "registerserif",
            "copyrightserif",
            "trademarkserif",
            "product",
            "radical",
            "dotmath",
            "logicalnot",
            "logicaland",
            "logicalor",
            "arrowdblboth",
            "arrowdblleft",
            "arrowdblup",
            "arrowdblright",
            "arrowdbldown",
            "lozenge",
            "angleleft",
            "registersans",
            "copyrightsans",
            "trademarksans",
            "summation",
            "parenlefttp",
            "parenleftex",
            "parenleftbt",
            "bracketlefttp",
            "bracketleftex",
            "bracketleftbt",
            "bracelefttp",
            "braceleftmid",
            "braceleftbt",
            "braceex",
            "",
            "angleright",
            "integral",
            "integraltp",
            "integralex",
            "integralbt",
            "parenrighttp",
            "parenrightex",
            "parenrightbt",
            "bracketrighttp",
            "bracketrightex",
            "bracketrightbt",
            "bracerighttp",
            "bracerightmid",
            "bracerightbt",
            "",
          ];
          t.SymbolSetEncoding = o;
          const l = [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "space",
            "a1",
            "a2",
            "a202",
            "a3",
            "a4",
            "a5",
            "a119",
            "a118",
            "a117",
            "a11",
            "a12",
            "a13",
            "a14",
            "a15",
            "a16",
            "a105",
            "a17",
            "a18",
            "a19",
            "a20",
            "a21",
            "a22",
            "a23",
            "a24",
            "a25",
            "a26",
            "a27",
            "a28",
            "a6",
            "a7",
            "a8",
            "a9",
            "a10",
            "a29",
            "a30",
            "a31",
            "a32",
            "a33",
            "a34",
            "a35",
            "a36",
            "a37",
            "a38",
            "a39",
            "a40",
            "a41",
            "a42",
            "a43",
            "a44",
            "a45",
            "a46",
            "a47",
            "a48",
            "a49",
            "a50",
            "a51",
            "a52",
            "a53",
            "a54",
            "a55",
            "a56",
            "a57",
            "a58",
            "a59",
            "a60",
            "a61",
            "a62",
            "a63",
            "a64",
            "a65",
            "a66",
            "a67",
            "a68",
            "a69",
            "a70",
            "a71",
            "a72",
            "a73",
            "a74",
            "a203",
            "a75",
            "a204",
            "a76",
            "a77",
            "a78",
            "a79",
            "a81",
            "a82",
            "a83",
            "a84",
            "a97",
            "a98",
            "a99",
            "a100",
            "",
            "a89",
            "a90",
            "a93",
            "a94",
            "a91",
            "a92",
            "a205",
            "a85",
            "a206",
            "a86",
            "a87",
            "a88",
            "a95",
            "a96",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "a101",
            "a102",
            "a103",
            "a104",
            "a106",
            "a107",
            "a108",
            "a112",
            "a111",
            "a110",
            "a109",
            "a120",
            "a121",
            "a122",
            "a123",
            "a124",
            "a125",
            "a126",
            "a127",
            "a128",
            "a129",
            "a130",
            "a131",
            "a132",
            "a133",
            "a134",
            "a135",
            "a136",
            "a137",
            "a138",
            "a139",
            "a140",
            "a141",
            "a142",
            "a143",
            "a144",
            "a145",
            "a146",
            "a147",
            "a148",
            "a149",
            "a150",
            "a151",
            "a152",
            "a153",
            "a154",
            "a155",
            "a156",
            "a157",
            "a158",
            "a159",
            "a160",
            "a161",
            "a163",
            "a164",
            "a196",
            "a165",
            "a192",
            "a166",
            "a167",
            "a168",
            "a169",
            "a170",
            "a171",
            "a172",
            "a173",
            "a162",
            "a174",
            "a175",
            "a176",
            "a177",
            "a178",
            "a179",
            "a193",
            "a180",
            "a199",
            "a181",
            "a200",
            "a182",
            "",
            "a201",
            "a183",
            "a184",
            "a197",
            "a185",
            "a194",
            "a198",
            "a186",
            "a195",
            "a187",
            "a188",
            "a189",
            "a190",
            "a191",
            "",
          ];
          t.ZapfDingbatsEncoding = l;
        },
        (e, t, i) => {
          i.r(t);
          i.d(t, {
            getDingbatsGlyphsUnicode: () => a,
            getGlyphsUnicode: () => r,
          });
          var n = i(8),
            r = (0, n.getArrayLookupTableFactory)(function () {
              return [
                "A",
                65,
                "AE",
                198,
                "AEacute",
                508,
                "AEmacron",
                482,
                "AEsmall",
                63462,
                "Aacute",
                193,
                "Aacutesmall",
                63457,
                "Abreve",
                258,
                "Abreveacute",
                7854,
                "Abrevecyrillic",
                1232,
                "Abrevedotbelow",
                7862,
                "Abrevegrave",
                7856,
                "Abrevehookabove",
                7858,
                "Abrevetilde",
                7860,
                "Acaron",
                461,
                "Acircle",
                9398,
                "Acircumflex",
                194,
                "Acircumflexacute",
                7844,
                "Acircumflexdotbelow",
                7852,
                "Acircumflexgrave",
                7846,
                "Acircumflexhookabove",
                7848,
                "Acircumflexsmall",
                63458,
                "Acircumflextilde",
                7850,
                "Acute",
                63177,
                "Acutesmall",
                63412,
                "Acyrillic",
                1040,
                "Adblgrave",
                512,
                "Adieresis",
                196,
                "Adieresiscyrillic",
                1234,
                "Adieresismacron",
                478,
                "Adieresissmall",
                63460,
                "Adotbelow",
                7840,
                "Adotmacron",
                480,
                "Agrave",
                192,
                "Agravesmall",
                63456,
                "Ahookabove",
                7842,
                "Aiecyrillic",
                1236,
                "Ainvertedbreve",
                514,
                "Alpha",
                913,
                "Alphatonos",
                902,
                "Amacron",
                256,
                "Amonospace",
                65313,
                "Aogonek",
                260,
                "Aring",
                197,
                "Aringacute",
                506,
                "Aringbelow",
                7680,
                "Aringsmall",
                63461,
                "Asmall",
                63329,
                "Atilde",
                195,
                "Atildesmall",
                63459,
                "Aybarmenian",
                1329,
                "B",
                66,
                "Bcircle",
                9399,
                "Bdotaccent",
                7682,
                "Bdotbelow",
                7684,
                "Becyrillic",
                1041,
                "Benarmenian",
                1330,
                "Beta",
                914,
                "Bhook",
                385,
                "Blinebelow",
                7686,
                "Bmonospace",
                65314,
                "Brevesmall",
                63220,
                "Bsmall",
                63330,
                "Btopbar",
                386,
                "C",
                67,
                "Caarmenian",
                1342,
                "Cacute",
                262,
                "Caron",
                63178,
                "Caronsmall",
                63221,
                "Ccaron",
                268,
                "Ccedilla",
                199,
                "Ccedillaacute",
                7688,
                "Ccedillasmall",
                63463,
                "Ccircle",
                9400,
                "Ccircumflex",
                264,
                "Cdot",
                266,
                "Cdotaccent",
                266,
                "Cedillasmall",
                63416,
                "Chaarmenian",
                1353,
                "Cheabkhasiancyrillic",
                1212,
                "Checyrillic",
                1063,
                "Chedescenderabkhasiancyrillic",
                1214,
                "Chedescendercyrillic",
                1206,
                "Chedieresiscyrillic",
                1268,
                "Cheharmenian",
                1347,
                "Chekhakassiancyrillic",
                1227,
                "Cheverticalstrokecyrillic",
                1208,
                "Chi",
                935,
                "Chook",
                391,
                "Circumflexsmall",
                63222,
                "Cmonospace",
                65315,
                "Coarmenian",
                1361,
                "Csmall",
                63331,
                "D",
                68,
                "DZ",
                497,
                "DZcaron",
                452,
                "Daarmenian",
                1332,
                "Dafrican",
                393,
                "Dcaron",
                270,
                "Dcedilla",
                7696,
                "Dcircle",
                9401,
                "Dcircumflexbelow",
                7698,
                "Dcroat",
                272,
                "Ddotaccent",
                7690,
                "Ddotbelow",
                7692,
                "Decyrillic",
                1044,
                "Deicoptic",
                1006,
                "Delta",
                8710,
                "Deltagreek",
                916,
                "Dhook",
                394,
                "Dieresis",
                63179,
                "DieresisAcute",
                63180,
                "DieresisGrave",
                63181,
                "Dieresissmall",
                63400,
                "Digammagreek",
                988,
                "Djecyrillic",
                1026,
                "Dlinebelow",
                7694,
                "Dmonospace",
                65316,
                "Dotaccentsmall",
                63223,
                "Dslash",
                272,
                "Dsmall",
                63332,
                "Dtopbar",
                395,
                "Dz",
                498,
                "Dzcaron",
                453,
                "Dzeabkhasiancyrillic",
                1248,
                "Dzecyrillic",
                1029,
                "Dzhecyrillic",
                1039,
                "E",
                69,
                "Eacute",
                201,
                "Eacutesmall",
                63465,
                "Ebreve",
                276,
                "Ecaron",
                282,
                "Ecedillabreve",
                7708,
                "Echarmenian",
                1333,
                "Ecircle",
                9402,
                "Ecircumflex",
                202,
                "Ecircumflexacute",
                7870,
                "Ecircumflexbelow",
                7704,
                "Ecircumflexdotbelow",
                7878,
                "Ecircumflexgrave",
                7872,
                "Ecircumflexhookabove",
                7874,
                "Ecircumflexsmall",
                63466,
                "Ecircumflextilde",
                7876,
                "Ecyrillic",
                1028,
                "Edblgrave",
                516,
                "Edieresis",
                203,
                "Edieresissmall",
                63467,
                "Edot",
                278,
                "Edotaccent",
                278,
                "Edotbelow",
                7864,
                "Efcyrillic",
                1060,
                "Egrave",
                200,
                "Egravesmall",
                63464,
                "Eharmenian",
                1335,
                "Ehookabove",
                7866,
                "Eightroman",
                8551,
                "Einvertedbreve",
                518,
                "Eiotifiedcyrillic",
                1124,
                "Elcyrillic",
                1051,
                "Elevenroman",
                8554,
                "Emacron",
                274,
                "Emacronacute",
                7702,
                "Emacrongrave",
                7700,
                "Emcyrillic",
                1052,
                "Emonospace",
                65317,
                "Encyrillic",
                1053,
                "Endescendercyrillic",
                1186,
                "Eng",
                330,
                "Enghecyrillic",
                1188,
                "Enhookcyrillic",
                1223,
                "Eogonek",
                280,
                "Eopen",
                400,
                "Epsilon",
                917,
                "Epsilontonos",
                904,
                "Ercyrillic",
                1056,
                "Ereversed",
                398,
                "Ereversedcyrillic",
                1069,
                "Escyrillic",
                1057,
                "Esdescendercyrillic",
                1194,
                "Esh",
                425,
                "Esmall",
                63333,
                "Eta",
                919,
                "Etarmenian",
                1336,
                "Etatonos",
                905,
                "Eth",
                208,
                "Ethsmall",
                63472,
                "Etilde",
                7868,
                "Etildebelow",
                7706,
                "Euro",
                8364,
                "Ezh",
                439,
                "Ezhcaron",
                494,
                "Ezhreversed",
                440,
                "F",
                70,
                "Fcircle",
                9403,
                "Fdotaccent",
                7710,
                "Feharmenian",
                1366,
                "Feicoptic",
                996,
                "Fhook",
                401,
                "Fitacyrillic",
                1138,
                "Fiveroman",
                8548,
                "Fmonospace",
                65318,
                "Fourroman",
                8547,
                "Fsmall",
                63334,
                "G",
                71,
                "GBsquare",
                13191,
                "Gacute",
                500,
                "Gamma",
                915,
                "Gammaafrican",
                404,
                "Gangiacoptic",
                1002,
                "Gbreve",
                286,
                "Gcaron",
                486,
                "Gcedilla",
                290,
                "Gcircle",
                9404,
                "Gcircumflex",
                284,
                "Gcommaaccent",
                290,
                "Gdot",
                288,
                "Gdotaccent",
                288,
                "Gecyrillic",
                1043,
                "Ghadarmenian",
                1346,
                "Ghemiddlehookcyrillic",
                1172,
                "Ghestrokecyrillic",
                1170,
                "Gheupturncyrillic",
                1168,
                "Ghook",
                403,
                "Gimarmenian",
                1331,
                "Gjecyrillic",
                1027,
                "Gmacron",
                7712,
                "Gmonospace",
                65319,
                "Grave",
                63182,
                "Gravesmall",
                63328,
                "Gsmall",
                63335,
                "Gsmallhook",
                667,
                "Gstroke",
                484,
                "H",
                72,
                "H18533",
                9679,
                "H18543",
                9642,
                "H18551",
                9643,
                "H22073",
                9633,
                "HPsquare",
                13259,
                "Haabkhasiancyrillic",
                1192,
                "Hadescendercyrillic",
                1202,
                "Hardsigncyrillic",
                1066,
                "Hbar",
                294,
                "Hbrevebelow",
                7722,
                "Hcedilla",
                7720,
                "Hcircle",
                9405,
                "Hcircumflex",
                292,
                "Hdieresis",
                7718,
                "Hdotaccent",
                7714,
                "Hdotbelow",
                7716,
                "Hmonospace",
                65320,
                "Hoarmenian",
                1344,
                "Horicoptic",
                1e3,
                "Hsmall",
                63336,
                "Hungarumlaut",
                63183,
                "Hungarumlautsmall",
                63224,
                "Hzsquare",
                13200,
                "I",
                73,
                "IAcyrillic",
                1071,
                "IJ",
                306,
                "IUcyrillic",
                1070,
                "Iacute",
                205,
                "Iacutesmall",
                63469,
                "Ibreve",
                300,
                "Icaron",
                463,
                "Icircle",
                9406,
                "Icircumflex",
                206,
                "Icircumflexsmall",
                63470,
                "Icyrillic",
                1030,
                "Idblgrave",
                520,
                "Idieresis",
                207,
                "Idieresisacute",
                7726,
                "Idieresiscyrillic",
                1252,
                "Idieresissmall",
                63471,
                "Idot",
                304,
                "Idotaccent",
                304,
                "Idotbelow",
                7882,
                "Iebrevecyrillic",
                1238,
                "Iecyrillic",
                1045,
                "Ifraktur",
                8465,
                "Igrave",
                204,
                "Igravesmall",
                63468,
                "Ihookabove",
                7880,
                "Iicyrillic",
                1048,
                "Iinvertedbreve",
                522,
                "Iishortcyrillic",
                1049,
                "Imacron",
                298,
                "Imacroncyrillic",
                1250,
                "Imonospace",
                65321,
                "Iniarmenian",
                1339,
                "Iocyrillic",
                1025,
                "Iogonek",
                302,
                "Iota",
                921,
                "Iotaafrican",
                406,
                "Iotadieresis",
                938,
                "Iotatonos",
                906,
                "Ismall",
                63337,
                "Istroke",
                407,
                "Itilde",
                296,
                "Itildebelow",
                7724,
                "Izhitsacyrillic",
                1140,
                "Izhitsadblgravecyrillic",
                1142,
                "J",
                74,
                "Jaarmenian",
                1345,
                "Jcircle",
                9407,
                "Jcircumflex",
                308,
                "Jecyrillic",
                1032,
                "Jheharmenian",
                1355,
                "Jmonospace",
                65322,
                "Jsmall",
                63338,
                "K",
                75,
                "KBsquare",
                13189,
                "KKsquare",
                13261,
                "Kabashkircyrillic",
                1184,
                "Kacute",
                7728,
                "Kacyrillic",
                1050,
                "Kadescendercyrillic",
                1178,
                "Kahookcyrillic",
                1219,
                "Kappa",
                922,
                "Kastrokecyrillic",
                1182,
                "Kaverticalstrokecyrillic",
                1180,
                "Kcaron",
                488,
                "Kcedilla",
                310,
                "Kcircle",
                9408,
                "Kcommaaccent",
                310,
                "Kdotbelow",
                7730,
                "Keharmenian",
                1364,
                "Kenarmenian",
                1343,
                "Khacyrillic",
                1061,
                "Kheicoptic",
                998,
                "Khook",
                408,
                "Kjecyrillic",
                1036,
                "Klinebelow",
                7732,
                "Kmonospace",
                65323,
                "Koppacyrillic",
                1152,
                "Koppagreek",
                990,
                "Ksicyrillic",
                1134,
                "Ksmall",
                63339,
                "L",
                76,
                "LJ",
                455,
                "LL",
                63167,
                "Lacute",
                313,
                "Lambda",
                923,
                "Lcaron",
                317,
                "Lcedilla",
                315,
                "Lcircle",
                9409,
                "Lcircumflexbelow",
                7740,
                "Lcommaaccent",
                315,
                "Ldot",
                319,
                "Ldotaccent",
                319,
                "Ldotbelow",
                7734,
                "Ldotbelowmacron",
                7736,
                "Liwnarmenian",
                1340,
                "Lj",
                456,
                "Ljecyrillic",
                1033,
                "Llinebelow",
                7738,
                "Lmonospace",
                65324,
                "Lslash",
                321,
                "Lslashsmall",
                63225,
                "Lsmall",
                63340,
                "M",
                77,
                "MBsquare",
                13190,
                "Macron",
                63184,
                "Macronsmall",
                63407,
                "Macute",
                7742,
                "Mcircle",
                9410,
                "Mdotaccent",
                7744,
                "Mdotbelow",
                7746,
                "Menarmenian",
                1348,
                "Mmonospace",
                65325,
                "Msmall",
                63341,
                "Mturned",
                412,
                "Mu",
                924,
                "N",
                78,
                "NJ",
                458,
                "Nacute",
                323,
                "Ncaron",
                327,
                "Ncedilla",
                325,
                "Ncircle",
                9411,
                "Ncircumflexbelow",
                7754,
                "Ncommaaccent",
                325,
                "Ndotaccent",
                7748,
                "Ndotbelow",
                7750,
                "Nhookleft",
                413,
                "Nineroman",
                8552,
                "Nj",
                459,
                "Njecyrillic",
                1034,
                "Nlinebelow",
                7752,
                "Nmonospace",
                65326,
                "Nowarmenian",
                1350,
                "Nsmall",
                63342,
                "Ntilde",
                209,
                "Ntildesmall",
                63473,
                "Nu",
                925,
                "O",
                79,
                "OE",
                338,
                "OEsmall",
                63226,
                "Oacute",
                211,
                "Oacutesmall",
                63475,
                "Obarredcyrillic",
                1256,
                "Obarreddieresiscyrillic",
                1258,
                "Obreve",
                334,
                "Ocaron",
                465,
                "Ocenteredtilde",
                415,
                "Ocircle",
                9412,
                "Ocircumflex",
                212,
                "Ocircumflexacute",
                7888,
                "Ocircumflexdotbelow",
                7896,
                "Ocircumflexgrave",
                7890,
                "Ocircumflexhookabove",
                7892,
                "Ocircumflexsmall",
                63476,
                "Ocircumflextilde",
                7894,
                "Ocyrillic",
                1054,
                "Odblacute",
                336,
                "Odblgrave",
                524,
                "Odieresis",
                214,
                "Odieresiscyrillic",
                1254,
                "Odieresissmall",
                63478,
                "Odotbelow",
                7884,
                "Ogoneksmall",
                63227,
                "Ograve",
                210,
                "Ogravesmall",
                63474,
                "Oharmenian",
                1365,
                "Ohm",
                8486,
                "Ohookabove",
                7886,
                "Ohorn",
                416,
                "Ohornacute",
                7898,
                "Ohorndotbelow",
                7906,
                "Ohorngrave",
                7900,
                "Ohornhookabove",
                7902,
                "Ohorntilde",
                7904,
                "Ohungarumlaut",
                336,
                "Oi",
                418,
                "Oinvertedbreve",
                526,
                "Omacron",
                332,
                "Omacronacute",
                7762,
                "Omacrongrave",
                7760,
                "Omega",
                8486,
                "Omegacyrillic",
                1120,
                "Omegagreek",
                937,
                "Omegaroundcyrillic",
                1146,
                "Omegatitlocyrillic",
                1148,
                "Omegatonos",
                911,
                "Omicron",
                927,
                "Omicrontonos",
                908,
                "Omonospace",
                65327,
                "Oneroman",
                8544,
                "Oogonek",
                490,
                "Oogonekmacron",
                492,
                "Oopen",
                390,
                "Oslash",
                216,
                "Oslashacute",
                510,
                "Oslashsmall",
                63480,
                "Osmall",
                63343,
                "Ostrokeacute",
                510,
                "Otcyrillic",
                1150,
                "Otilde",
                213,
                "Otildeacute",
                7756,
                "Otildedieresis",
                7758,
                "Otildesmall",
                63477,
                "P",
                80,
                "Pacute",
                7764,
                "Pcircle",
                9413,
                "Pdotaccent",
                7766,
                "Pecyrillic",
                1055,
                "Peharmenian",
                1354,
                "Pemiddlehookcyrillic",
                1190,
                "Phi",
                934,
                "Phook",
                420,
                "Pi",
                928,
                "Piwrarmenian",
                1363,
                "Pmonospace",
                65328,
                "Psi",
                936,
                "Psicyrillic",
                1136,
                "Psmall",
                63344,
                "Q",
                81,
                "Qcircle",
                9414,
                "Qmonospace",
                65329,
                "Qsmall",
                63345,
                "R",
                82,
                "Raarmenian",
                1356,
                "Racute",
                340,
                "Rcaron",
                344,
                "Rcedilla",
                342,
                "Rcircle",
                9415,
                "Rcommaaccent",
                342,
                "Rdblgrave",
                528,
                "Rdotaccent",
                7768,
                "Rdotbelow",
                7770,
                "Rdotbelowmacron",
                7772,
                "Reharmenian",
                1360,
                "Rfraktur",
                8476,
                "Rho",
                929,
                "Ringsmall",
                63228,
                "Rinvertedbreve",
                530,
                "Rlinebelow",
                7774,
                "Rmonospace",
                65330,
                "Rsmall",
                63346,
                "Rsmallinverted",
                641,
                "Rsmallinvertedsuperior",
                694,
                "S",
                83,
                "SF010000",
                9484,
                "SF020000",
                9492,
                "SF030000",
                9488,
                "SF040000",
                9496,
                "SF050000",
                9532,
                "SF060000",
                9516,
                "SF070000",
                9524,
                "SF080000",
                9500,
                "SF090000",
                9508,
                "SF100000",
                9472,
                "SF110000",
                9474,
                "SF190000",
                9569,
                "SF200000",
                9570,
                "SF210000",
                9558,
                "SF220000",
                9557,
                "SF230000",
                9571,
                "SF240000",
                9553,
                "SF250000",
                9559,
                "SF260000",
                9565,
                "SF270000",
                9564,
                "SF280000",
                9563,
                "SF360000",
                9566,
                "SF370000",
                9567,
                "SF380000",
                9562,
                "SF390000",
                9556,
                "SF400000",
                9577,
                "SF410000",
                9574,
                "SF420000",
                9568,
                "SF430000",
                9552,
                "SF440000",
                9580,
                "SF450000",
                9575,
                "SF460000",
                9576,
                "SF470000",
                9572,
                "SF480000",
                9573,
                "SF490000",
                9561,
                "SF500000",
                9560,
                "SF510000",
                9554,
                "SF520000",
                9555,
                "SF530000",
                9579,
                "SF540000",
                9578,
                "Sacute",
                346,
                "Sacutedotaccent",
                7780,
                "Sampigreek",
                992,
                "Scaron",
                352,
                "Scarondotaccent",
                7782,
                "Scaronsmall",
                63229,
                "Scedilla",
                350,
                "Schwa",
                399,
                "Schwacyrillic",
                1240,
                "Schwadieresiscyrillic",
                1242,
                "Scircle",
                9416,
                "Scircumflex",
                348,
                "Scommaaccent",
                536,
                "Sdotaccent",
                7776,
                "Sdotbelow",
                7778,
                "Sdotbelowdotaccent",
                7784,
                "Seharmenian",
                1357,
                "Sevenroman",
                8550,
                "Shaarmenian",
                1351,
                "Shacyrillic",
                1064,
                "Shchacyrillic",
                1065,
                "Sheicoptic",
                994,
                "Shhacyrillic",
                1210,
                "Shimacoptic",
                1004,
                "Sigma",
                931,
                "Sixroman",
                8549,
                "Smonospace",
                65331,
                "Softsigncyrillic",
                1068,
                "Ssmall",
                63347,
                "Stigmagreek",
                986,
                "T",
                84,
                "Tau",
                932,
                "Tbar",
                358,
                "Tcaron",
                356,
                "Tcedilla",
                354,
                "Tcircle",
                9417,
                "Tcircumflexbelow",
                7792,
                "Tcommaaccent",
                354,
                "Tdotaccent",
                7786,
                "Tdotbelow",
                7788,
                "Tecyrillic",
                1058,
                "Tedescendercyrillic",
                1196,
                "Tenroman",
                8553,
                "Tetsecyrillic",
                1204,
                "Theta",
                920,
                "Thook",
                428,
                "Thorn",
                222,
                "Thornsmall",
                63486,
                "Threeroman",
                8546,
                "Tildesmall",
                63230,
                "Tiwnarmenian",
                1359,
                "Tlinebelow",
                7790,
                "Tmonospace",
                65332,
                "Toarmenian",
                1337,
                "Tonefive",
                444,
                "Tonesix",
                388,
                "Tonetwo",
                423,
                "Tretroflexhook",
                430,
                "Tsecyrillic",
                1062,
                "Tshecyrillic",
                1035,
                "Tsmall",
                63348,
                "Twelveroman",
                8555,
                "Tworoman",
                8545,
                "U",
                85,
                "Uacute",
                218,
                "Uacutesmall",
                63482,
                "Ubreve",
                364,
                "Ucaron",
                467,
                "Ucircle",
                9418,
                "Ucircumflex",
                219,
                "Ucircumflexbelow",
                7798,
                "Ucircumflexsmall",
                63483,
                "Ucyrillic",
                1059,
                "Udblacute",
                368,
                "Udblgrave",
                532,
                "Udieresis",
                220,
                "Udieresisacute",
                471,
                "Udieresisbelow",
                7794,
                "Udieresiscaron",
                473,
                "Udieresiscyrillic",
                1264,
                "Udieresisgrave",
                475,
                "Udieresismacron",
                469,
                "Udieresissmall",
                63484,
                "Udotbelow",
                7908,
                "Ugrave",
                217,
                "Ugravesmall",
                63481,
                "Uhookabove",
                7910,
                "Uhorn",
                431,
                "Uhornacute",
                7912,
                "Uhorndotbelow",
                7920,
                "Uhorngrave",
                7914,
                "Uhornhookabove",
                7916,
                "Uhorntilde",
                7918,
                "Uhungarumlaut",
                368,
                "Uhungarumlautcyrillic",
                1266,
                "Uinvertedbreve",
                534,
                "Ukcyrillic",
                1144,
                "Umacron",
                362,
                "Umacroncyrillic",
                1262,
                "Umacrondieresis",
                7802,
                "Umonospace",
                65333,
                "Uogonek",
                370,
                "Upsilon",
                933,
                "Upsilon1",
                978,
                "Upsilonacutehooksymbolgreek",
                979,
                "Upsilonafrican",
                433,
                "Upsilondieresis",
                939,
                "Upsilondieresishooksymbolgreek",
                980,
                "Upsilonhooksymbol",
                978,
                "Upsilontonos",
                910,
                "Uring",
                366,
                "Ushortcyrillic",
                1038,
                "Usmall",
                63349,
                "Ustraightcyrillic",
                1198,
                "Ustraightstrokecyrillic",
                1200,
                "Utilde",
                360,
                "Utildeacute",
                7800,
                "Utildebelow",
                7796,
                "V",
                86,
                "Vcircle",
                9419,
                "Vdotbelow",
                7806,
                "Vecyrillic",
                1042,
                "Vewarmenian",
                1358,
                "Vhook",
                434,
                "Vmonospace",
                65334,
                "Voarmenian",
                1352,
                "Vsmall",
                63350,
                "Vtilde",
                7804,
                "W",
                87,
                "Wacute",
                7810,
                "Wcircle",
                9420,
                "Wcircumflex",
                372,
                "Wdieresis",
                7812,
                "Wdotaccent",
                7814,
                "Wdotbelow",
                7816,
                "Wgrave",
                7808,
                "Wmonospace",
                65335,
                "Wsmall",
                63351,
                "X",
                88,
                "Xcircle",
                9421,
                "Xdieresis",
                7820,
                "Xdotaccent",
                7818,
                "Xeharmenian",
                1341,
                "Xi",
                926,
                "Xmonospace",
                65336,
                "Xsmall",
                63352,
                "Y",
                89,
                "Yacute",
                221,
                "Yacutesmall",
                63485,
                "Yatcyrillic",
                1122,
                "Ycircle",
                9422,
                "Ycircumflex",
                374,
                "Ydieresis",
                376,
                "Ydieresissmall",
                63487,
                "Ydotaccent",
                7822,
                "Ydotbelow",
                7924,
                "Yericyrillic",
                1067,
                "Yerudieresiscyrillic",
                1272,
                "Ygrave",
                7922,
                "Yhook",
                435,
                "Yhookabove",
                7926,
                "Yiarmenian",
                1349,
                "Yicyrillic",
                1031,
                "Yiwnarmenian",
                1362,
                "Ymonospace",
                65337,
                "Ysmall",
                63353,
                "Ytilde",
                7928,
                "Yusbigcyrillic",
                1130,
                "Yusbigiotifiedcyrillic",
                1132,
                "Yuslittlecyrillic",
                1126,
                "Yuslittleiotifiedcyrillic",
                1128,
                "Z",
                90,
                "Zaarmenian",
                1334,
                "Zacute",
                377,
                "Zcaron",
                381,
                "Zcaronsmall",
                63231,
                "Zcircle",
                9423,
                "Zcircumflex",
                7824,
                "Zdot",
                379,
                "Zdotaccent",
                379,
                "Zdotbelow",
                7826,
                "Zecyrillic",
                1047,
                "Zedescendercyrillic",
                1176,
                "Zedieresiscyrillic",
                1246,
                "Zeta",
                918,
                "Zhearmenian",
                1338,
                "Zhebrevecyrillic",
                1217,
                "Zhecyrillic",
                1046,
                "Zhedescendercyrillic",
                1174,
                "Zhedieresiscyrillic",
                1244,
                "Zlinebelow",
                7828,
                "Zmonospace",
                65338,
                "Zsmall",
                63354,
                "Zstroke",
                437,
                "a",
                97,
                "aabengali",
                2438,
                "aacute",
                225,
                "aadeva",
                2310,
                "aagujarati",
                2694,
                "aagurmukhi",
                2566,
                "aamatragurmukhi",
                2622,
                "aarusquare",
                13059,
                "aavowelsignbengali",
                2494,
                "aavowelsigndeva",
                2366,
                "aavowelsigngujarati",
                2750,
                "abbreviationmarkarmenian",
                1375,
                "abbreviationsigndeva",
                2416,
                "abengali",
                2437,
                "abopomofo",
                12570,
                "abreve",
                259,
                "abreveacute",
                7855,
                "abrevecyrillic",
                1233,
                "abrevedotbelow",
                7863,
                "abrevegrave",
                7857,
                "abrevehookabove",
                7859,
                "abrevetilde",
                7861,
                "acaron",
                462,
                "acircle",
                9424,
                "acircumflex",
                226,
                "acircumflexacute",
                7845,
                "acircumflexdotbelow",
                7853,
                "acircumflexgrave",
                7847,
                "acircumflexhookabove",
                7849,
                "acircumflextilde",
                7851,
                "acute",
                180,
                "acutebelowcmb",
                791,
                "acutecmb",
                769,
                "acutecomb",
                769,
                "acutedeva",
                2388,
                "acutelowmod",
                719,
                "acutetonecmb",
                833,
                "acyrillic",
                1072,
                "adblgrave",
                513,
                "addakgurmukhi",
                2673,
                "adeva",
                2309,
                "adieresis",
                228,
                "adieresiscyrillic",
                1235,
                "adieresismacron",
                479,
                "adotbelow",
                7841,
                "adotmacron",
                481,
                "ae",
                230,
                "aeacute",
                509,
                "aekorean",
                12624,
                "aemacron",
                483,
                "afii00208",
                8213,
                "afii08941",
                8356,
                "afii10017",
                1040,
                "afii10018",
                1041,
                "afii10019",
                1042,
                "afii10020",
                1043,
                "afii10021",
                1044,
                "afii10022",
                1045,
                "afii10023",
                1025,
                "afii10024",
                1046,
                "afii10025",
                1047,
                "afii10026",
                1048,
                "afii10027",
                1049,
                "afii10028",
                1050,
                "afii10029",
                1051,
                "afii10030",
                1052,
                "afii10031",
                1053,
                "afii10032",
                1054,
                "afii10033",
                1055,
                "afii10034",
                1056,
                "afii10035",
                1057,
                "afii10036",
                1058,
                "afii10037",
                1059,
                "afii10038",
                1060,
                "afii10039",
                1061,
                "afii10040",
                1062,
                "afii10041",
                1063,
                "afii10042",
                1064,
                "afii10043",
                1065,
                "afii10044",
                1066,
                "afii10045",
                1067,
                "afii10046",
                1068,
                "afii10047",
                1069,
                "afii10048",
                1070,
                "afii10049",
                1071,
                "afii10050",
                1168,
                "afii10051",
                1026,
                "afii10052",
                1027,
                "afii10053",
                1028,
                "afii10054",
                1029,
                "afii10055",
                1030,
                "afii10056",
                1031,
                "afii10057",
                1032,
                "afii10058",
                1033,
                "afii10059",
                1034,
                "afii10060",
                1035,
                "afii10061",
                1036,
                "afii10062",
                1038,
                "afii10063",
                63172,
                "afii10064",
                63173,
                "afii10065",
                1072,
                "afii10066",
                1073,
                "afii10067",
                1074,
                "afii10068",
                1075,
                "afii10069",
                1076,
                "afii10070",
                1077,
                "afii10071",
                1105,
                "afii10072",
                1078,
                "afii10073",
                1079,
                "afii10074",
                1080,
                "afii10075",
                1081,
                "afii10076",
                1082,
                "afii10077",
                1083,
                "afii10078",
                1084,
                "afii10079",
                1085,
                "afii10080",
                1086,
                "afii10081",
                1087,
                "afii10082",
                1088,
                "afii10083",
                1089,
                "afii10084",
                1090,
                "afii10085",
                1091,
                "afii10086",
                1092,
                "afii10087",
                1093,
                "afii10088",
                1094,
                "afii10089",
                1095,
                "afii10090",
                1096,
                "afii10091",
                1097,
                "afii10092",
                1098,
                "afii10093",
                1099,
                "afii10094",
                1100,
                "afii10095",
                1101,
                "afii10096",
                1102,
                "afii10097",
                1103,
                "afii10098",
                1169,
                "afii10099",
                1106,
                "afii10100",
                1107,
                "afii10101",
                1108,
                "afii10102",
                1109,
                "afii10103",
                1110,
                "afii10104",
                1111,
                "afii10105",
                1112,
                "afii10106",
                1113,
                "afii10107",
                1114,
                "afii10108",
                1115,
                "afii10109",
                1116,
                "afii10110",
                1118,
                "afii10145",
                1039,
                "afii10146",
                1122,
                "afii10147",
                1138,
                "afii10148",
                1140,
                "afii10192",
                63174,
                "afii10193",
                1119,
                "afii10194",
                1123,
                "afii10195",
                1139,
                "afii10196",
                1141,
                "afii10831",
                63175,
                "afii10832",
                63176,
                "afii10846",
                1241,
                "afii299",
                8206,
                "afii300",
                8207,
                "afii301",
                8205,
                "afii57381",
                1642,
                "afii57388",
                1548,
                "afii57392",
                1632,
                "afii57393",
                1633,
                "afii57394",
                1634,
                "afii57395",
                1635,
                "afii57396",
                1636,
                "afii57397",
                1637,
                "afii57398",
                1638,
                "afii57399",
                1639,
                "afii57400",
                1640,
                "afii57401",
                1641,
                "afii57403",
                1563,
                "afii57407",
                1567,
                "afii57409",
                1569,
                "afii57410",
                1570,
                "afii57411",
                1571,
                "afii57412",
                1572,
                "afii57413",
                1573,
                "afii57414",
                1574,
                "afii57415",
                1575,
                "afii57416",
                1576,
                "afii57417",
                1577,
                "afii57418",
                1578,
                "afii57419",
                1579,
                "afii57420",
                1580,
                "afii57421",
                1581,
                "afii57422",
                1582,
                "afii57423",
                1583,
                "afii57424",
                1584,
                "afii57425",
                1585,
                "afii57426",
                1586,
                "afii57427",
                1587,
                "afii57428",
                1588,
                "afii57429",
                1589,
                "afii57430",
                1590,
                "afii57431",
                1591,
                "afii57432",
                1592,
                "afii57433",
                1593,
                "afii57434",
                1594,
                "afii57440",
                1600,
                "afii57441",
                1601,
                "afii57442",
                1602,
                "afii57443",
                1603,
                "afii57444",
                1604,
                "afii57445",
                1605,
                "afii57446",
                1606,
                "afii57448",
                1608,
                "afii57449",
                1609,
                "afii57450",
                1610,
                "afii57451",
                1611,
                "afii57452",
                1612,
                "afii57453",
                1613,
                "afii57454",
                1614,
                "afii57455",
                1615,
                "afii57456",
                1616,
                "afii57457",
                1617,
                "afii57458",
                1618,
                "afii57470",
                1607,
                "afii57505",
                1700,
                "afii57506",
                1662,
                "afii57507",
                1670,
                "afii57508",
                1688,
                "afii57509",
                1711,
                "afii57511",
                1657,
                "afii57512",
                1672,
                "afii57513",
                1681,
                "afii57514",
                1722,
                "afii57519",
                1746,
                "afii57534",
                1749,
                "afii57636",
                8362,
                "afii57645",
                1470,
                "afii57658",
                1475,
                "afii57664",
                1488,
                "afii57665",
                1489,
                "afii57666",
                1490,
                "afii57667",
                1491,
                "afii57668",
                1492,
                "afii57669",
                1493,
                "afii57670",
                1494,
                "afii57671",
                1495,
                "afii57672",
                1496,
                "afii57673",
                1497,
                "afii57674",
                1498,
                "afii57675",
                1499,
                "afii57676",
                1500,
                "afii57677",
                1501,
                "afii57678",
                1502,
                "afii57679",
                1503,
                "afii57680",
                1504,
                "afii57681",
                1505,
                "afii57682",
                1506,
                "afii57683",
                1507,
                "afii57684",
                1508,
                "afii57685",
                1509,
                "afii57686",
                1510,
                "afii57687",
                1511,
                "afii57688",
                1512,
                "afii57689",
                1513,
                "afii57690",
                1514,
                "afii57694",
                64298,
                "afii57695",
                64299,
                "afii57700",
                64331,
                "afii57705",
                64287,
                "afii57716",
                1520,
                "afii57717",
                1521,
                "afii57718",
                1522,
                "afii57723",
                64309,
                "afii57793",
                1460,
                "afii57794",
                1461,
                "afii57795",
                1462,
                "afii57796",
                1467,
                "afii57797",
                1464,
                "afii57798",
                1463,
                "afii57799",
                1456,
                "afii57800",
                1458,
                "afii57801",
                1457,
                "afii57802",
                1459,
                "afii57803",
                1474,
                "afii57804",
                1473,
                "afii57806",
                1465,
                "afii57807",
                1468,
                "afii57839",
                1469,
                "afii57841",
                1471,
                "afii57842",
                1472,
                "afii57929",
                700,
                "afii61248",
                8453,
                "afii61289",
                8467,
                "afii61352",
                8470,
                "afii61573",
                8236,
                "afii61574",
                8237,
                "afii61575",
                8238,
                "afii61664",
                8204,
                "afii63167",
                1645,
                "afii64937",
                701,
                "agrave",
                224,
                "agujarati",
                2693,
                "agurmukhi",
                2565,
                "ahiragana",
                12354,
                "ahookabove",
                7843,
                "aibengali",
                2448,
                "aibopomofo",
                12574,
                "aideva",
                2320,
                "aiecyrillic",
                1237,
                "aigujarati",
                2704,
                "aigurmukhi",
                2576,
                "aimatragurmukhi",
                2632,
                "ainarabic",
                1593,
                "ainfinalarabic",
                65226,
                "aininitialarabic",
                65227,
                "ainmedialarabic",
                65228,
                "ainvertedbreve",
                515,
                "aivowelsignbengali",
                2504,
                "aivowelsigndeva",
                2376,
                "aivowelsigngujarati",
                2760,
                "akatakana",
                12450,
                "akatakanahalfwidth",
                65393,
                "akorean",
                12623,
                "alef",
                1488,
                "alefarabic",
                1575,
                "alefdageshhebrew",
                64304,
                "aleffinalarabic",
                65166,
                "alefhamzaabovearabic",
                1571,
                "alefhamzaabovefinalarabic",
                65156,
                "alefhamzabelowarabic",
                1573,
                "alefhamzabelowfinalarabic",
                65160,
                "alefhebrew",
                1488,
                "aleflamedhebrew",
                64335,
                "alefmaddaabovearabic",
                1570,
                "alefmaddaabovefinalarabic",
                65154,
                "alefmaksuraarabic",
                1609,
                "alefmaksurafinalarabic",
                65264,
                "alefmaksurainitialarabic",
                65267,
                "alefmaksuramedialarabic",
                65268,
                "alefpatahhebrew",
                64302,
                "alefqamatshebrew",
                64303,
                "aleph",
                8501,
                "allequal",
                8780,
                "alpha",
                945,
                "alphatonos",
                940,
                "amacron",
                257,
                "amonospace",
                65345,
                "ampersand",
                38,
                "ampersandmonospace",
                65286,
                "ampersandsmall",
                63270,
                "amsquare",
                13250,
                "anbopomofo",
                12578,
                "angbopomofo",
                12580,
                "angbracketleft",
                12296,
                "angbracketright",
                12297,
                "angkhankhuthai",
                3674,
                "angle",
                8736,
                "anglebracketleft",
                12296,
                "anglebracketleftvertical",
                65087,
                "anglebracketright",
                12297,
                "anglebracketrightvertical",
                65088,
                "angleleft",
                9001,
                "angleright",
                9002,
                "angstrom",
                8491,
                "anoteleia",
                903,
                "anudattadeva",
                2386,
                "anusvarabengali",
                2434,
                "anusvaradeva",
                2306,
                "anusvaragujarati",
                2690,
                "aogonek",
                261,
                "apaatosquare",
                13056,
                "aparen",
                9372,
                "apostrophearmenian",
                1370,
                "apostrophemod",
                700,
                "apple",
                63743,
                "approaches",
                8784,
                "approxequal",
                8776,
                "approxequalorimage",
                8786,
                "approximatelyequal",
                8773,
                "araeaekorean",
                12686,
                "araeakorean",
                12685,
                "arc",
                8978,
                "arighthalfring",
                7834,
                "aring",
                229,
                "aringacute",
                507,
                "aringbelow",
                7681,
                "arrowboth",
                8596,
                "arrowdashdown",
                8675,
                "arrowdashleft",
                8672,
                "arrowdashright",
                8674,
                "arrowdashup",
                8673,
                "arrowdblboth",
                8660,
                "arrowdbldown",
                8659,
                "arrowdblleft",
                8656,
                "arrowdblright",
                8658,
                "arrowdblup",
                8657,
                "arrowdown",
                8595,
                "arrowdownleft",
                8601,
                "arrowdownright",
                8600,
                "arrowdownwhite",
                8681,
                "arrowheaddownmod",
                709,
                "arrowheadleftmod",
                706,
                "arrowheadrightmod",
                707,
                "arrowheadupmod",
                708,
                "arrowhorizex",
                63719,
                "arrowleft",
                8592,
                "arrowleftdbl",
                8656,
                "arrowleftdblstroke",
                8653,
                "arrowleftoverright",
                8646,
                "arrowleftwhite",
                8678,
                "arrowright",
                8594,
                "arrowrightdblstroke",
                8655,
                "arrowrightheavy",
                10142,
                "arrowrightoverleft",
                8644,
                "arrowrightwhite",
                8680,
                "arrowtableft",
                8676,
                "arrowtabright",
                8677,
                "arrowup",
                8593,
                "arrowupdn",
                8597,
                "arrowupdnbse",
                8616,
                "arrowupdownbase",
                8616,
                "arrowupleft",
                8598,
                "arrowupleftofdown",
                8645,
                "arrowupright",
                8599,
                "arrowupwhite",
                8679,
                "arrowvertex",
                63718,
                "asciicircum",
                94,
                "asciicircummonospace",
                65342,
                "asciitilde",
                126,
                "asciitildemonospace",
                65374,
                "ascript",
                593,
                "ascriptturned",
                594,
                "asmallhiragana",
                12353,
                "asmallkatakana",
                12449,
                "asmallkatakanahalfwidth",
                65383,
                "asterisk",
                42,
                "asteriskaltonearabic",
                1645,
                "asteriskarabic",
                1645,
                "asteriskmath",
                8727,
                "asteriskmonospace",
                65290,
                "asterisksmall",
                65121,
                "asterism",
                8258,
                "asuperior",
                63209,
                "asymptoticallyequal",
                8771,
                "at",
                64,
                "atilde",
                227,
                "atmonospace",
                65312,
                "atsmall",
                65131,
                "aturned",
                592,
                "aubengali",
                2452,
                "aubopomofo",
                12576,
                "audeva",
                2324,
                "augujarati",
                2708,
                "augurmukhi",
                2580,
                "aulengthmarkbengali",
                2519,
                "aumatragurmukhi",
                2636,
                "auvowelsignbengali",
                2508,
                "auvowelsigndeva",
                2380,
                "auvowelsigngujarati",
                2764,
                "avagrahadeva",
                2365,
                "aybarmenian",
                1377,
                "ayin",
                1506,
                "ayinaltonehebrew",
                64288,
                "ayinhebrew",
                1506,
                "b",
                98,
                "babengali",
                2476,
                "backslash",
                92,
                "backslashmonospace",
                65340,
                "badeva",
                2348,
                "bagujarati",
                2732,
                "bagurmukhi",
                2604,
                "bahiragana",
                12400,
                "bahtthai",
                3647,
                "bakatakana",
                12496,
                "bar",
                124,
                "barmonospace",
                65372,
                "bbopomofo",
                12549,
                "bcircle",
                9425,
                "bdotaccent",
                7683,
                "bdotbelow",
                7685,
                "beamedsixteenthnotes",
                9836,
                "because",
                8757,
                "becyrillic",
                1073,
                "beharabic",
                1576,
                "behfinalarabic",
                65168,
                "behinitialarabic",
                65169,
                "behiragana",
                12409,
                "behmedialarabic",
                65170,
                "behmeeminitialarabic",
                64671,
                "behmeemisolatedarabic",
                64520,
                "behnoonfinalarabic",
                64621,
                "bekatakana",
                12505,
                "benarmenian",
                1378,
                "bet",
                1489,
                "beta",
                946,
                "betasymbolgreek",
                976,
                "betdagesh",
                64305,
                "betdageshhebrew",
                64305,
                "bethebrew",
                1489,
                "betrafehebrew",
                64332,
                "bhabengali",
                2477,
                "bhadeva",
                2349,
                "bhagujarati",
                2733,
                "bhagurmukhi",
                2605,
                "bhook",
                595,
                "bihiragana",
                12403,
                "bikatakana",
                12499,
                "bilabialclick",
                664,
                "bindigurmukhi",
                2562,
                "birusquare",
                13105,
                "blackcircle",
                9679,
                "blackdiamond",
                9670,
                "blackdownpointingtriangle",
                9660,
                "blackleftpointingpointer",
                9668,
                "blackleftpointingtriangle",
                9664,
                "blacklenticularbracketleft",
                12304,
                "blacklenticularbracketleftvertical",
                65083,
                "blacklenticularbracketright",
                12305,
                "blacklenticularbracketrightvertical",
                65084,
                "blacklowerlefttriangle",
                9699,
                "blacklowerrighttriangle",
                9698,
                "blackrectangle",
                9644,
                "blackrightpointingpointer",
                9658,
                "blackrightpointingtriangle",
                9654,
                "blacksmallsquare",
                9642,
                "blacksmilingface",
                9787,
                "blacksquare",
                9632,
                "blackstar",
                9733,
                "blackupperlefttriangle",
                9700,
                "blackupperrighttriangle",
                9701,
                "blackuppointingsmalltriangle",
                9652,
                "blackuppointingtriangle",
                9650,
                "blank",
                9251,
                "blinebelow",
                7687,
                "block",
                9608,
                "bmonospace",
                65346,
                "bobaimaithai",
                3610,
                "bohiragana",
                12412,
                "bokatakana",
                12508,
                "bparen",
                9373,
                "bqsquare",
                13251,
                "braceex",
                63732,
                "braceleft",
                123,
                "braceleftbt",
                63731,
                "braceleftmid",
                63730,
                "braceleftmonospace",
                65371,
                "braceleftsmall",
                65115,
                "bracelefttp",
                63729,
                "braceleftvertical",
                65079,
                "braceright",
                125,
                "bracerightbt",
                63742,
                "bracerightmid",
                63741,
                "bracerightmonospace",
                65373,
                "bracerightsmall",
                65116,
                "bracerighttp",
                63740,
                "bracerightvertical",
                65080,
                "bracketleft",
                91,
                "bracketleftbt",
                63728,
                "bracketleftex",
                63727,
                "bracketleftmonospace",
                65339,
                "bracketlefttp",
                63726,
                "bracketright",
                93,
                "bracketrightbt",
                63739,
                "bracketrightex",
                63738,
                "bracketrightmonospace",
                65341,
                "bracketrighttp",
                63737,
                "breve",
                728,
                "brevebelowcmb",
                814,
                "brevecmb",
                774,
                "breveinvertedbelowcmb",
                815,
                "breveinvertedcmb",
                785,
                "breveinverteddoublecmb",
                865,
                "bridgebelowcmb",
                810,
                "bridgeinvertedbelowcmb",
                826,
                "brokenbar",
                166,
                "bstroke",
                384,
                "bsuperior",
                63210,
                "btopbar",
                387,
                "buhiragana",
                12406,
                "bukatakana",
                12502,
                "bullet",
                8226,
                "bulletinverse",
                9688,
                "bulletoperator",
                8729,
                "bullseye",
                9678,
                "c",
                99,
                "caarmenian",
                1390,
                "cabengali",
                2458,
                "cacute",
                263,
                "cadeva",
                2330,
                "cagujarati",
                2714,
                "cagurmukhi",
                2586,
                "calsquare",
                13192,
                "candrabindubengali",
                2433,
                "candrabinducmb",
                784,
                "candrabindudeva",
                2305,
                "candrabindugujarati",
                2689,
                "capslock",
                8682,
                "careof",
                8453,
                "caron",
                711,
                "caronbelowcmb",
                812,
                "caroncmb",
                780,
                "carriagereturn",
                8629,
                "cbopomofo",
                12568,
                "ccaron",
                269,
                "ccedilla",
                231,
                "ccedillaacute",
                7689,
                "ccircle",
                9426,
                "ccircumflex",
                265,
                "ccurl",
                597,
                "cdot",
                267,
                "cdotaccent",
                267,
                "cdsquare",
                13253,
                "cedilla",
                184,
                "cedillacmb",
                807,
                "cent",
                162,
                "centigrade",
                8451,
                "centinferior",
                63199,
                "centmonospace",
                65504,
                "centoldstyle",
                63394,
                "centsuperior",
                63200,
                "chaarmenian",
                1401,
                "chabengali",
                2459,
                "chadeva",
                2331,
                "chagujarati",
                2715,
                "chagurmukhi",
                2587,
                "chbopomofo",
                12564,
                "cheabkhasiancyrillic",
                1213,
                "checkmark",
                10003,
                "checyrillic",
                1095,
                "chedescenderabkhasiancyrillic",
                1215,
                "chedescendercyrillic",
                1207,
                "chedieresiscyrillic",
                1269,
                "cheharmenian",
                1395,
                "chekhakassiancyrillic",
                1228,
                "cheverticalstrokecyrillic",
                1209,
                "chi",
                967,
                "chieuchacirclekorean",
                12919,
                "chieuchaparenkorean",
                12823,
                "chieuchcirclekorean",
                12905,
                "chieuchkorean",
                12618,
                "chieuchparenkorean",
                12809,
                "chochangthai",
                3594,
                "chochanthai",
                3592,
                "chochingthai",
                3593,
                "chochoethai",
                3596,
                "chook",
                392,
                "cieucacirclekorean",
                12918,
                "cieucaparenkorean",
                12822,
                "cieuccirclekorean",
                12904,
                "cieuckorean",
                12616,
                "cieucparenkorean",
                12808,
                "cieucuparenkorean",
                12828,
                "circle",
                9675,
                "circlecopyrt",
                169,
                "circlemultiply",
                8855,
                "circleot",
                8857,
                "circleplus",
                8853,
                "circlepostalmark",
                12342,
                "circlewithlefthalfblack",
                9680,
                "circlewithrighthalfblack",
                9681,
                "circumflex",
                710,
                "circumflexbelowcmb",
                813,
                "circumflexcmb",
                770,
                "clear",
                8999,
                "clickalveolar",
                450,
                "clickdental",
                448,
                "clicklateral",
                449,
                "clickretroflex",
                451,
                "club",
                9827,
                "clubsuitblack",
                9827,
                "clubsuitwhite",
                9831,
                "cmcubedsquare",
                13220,
                "cmonospace",
                65347,
                "cmsquaredsquare",
                13216,
                "coarmenian",
                1409,
                "colon",
                58,
                "colonmonetary",
                8353,
                "colonmonospace",
                65306,
                "colonsign",
                8353,
                "colonsmall",
                65109,
                "colontriangularhalfmod",
                721,
                "colontriangularmod",
                720,
                "comma",
                44,
                "commaabovecmb",
                787,
                "commaaboverightcmb",
                789,
                "commaaccent",
                63171,
                "commaarabic",
                1548,
                "commaarmenian",
                1373,
                "commainferior",
                63201,
                "commamonospace",
                65292,
                "commareversedabovecmb",
                788,
                "commareversedmod",
                701,
                "commasmall",
                65104,
                "commasuperior",
                63202,
                "commaturnedabovecmb",
                786,
                "commaturnedmod",
                699,
                "compass",
                9788,
                "congruent",
                8773,
                "contourintegral",
                8750,
                "control",
                8963,
                "controlACK",
                6,
                "controlBEL",
                7,
                "controlBS",
                8,
                "controlCAN",
                24,
                "controlCR",
                13,
                "controlDC1",
                17,
                "controlDC2",
                18,
                "controlDC3",
                19,
                "controlDC4",
                20,
                "controlDEL",
                127,
                "controlDLE",
                16,
                "controlEM",
                25,
                "controlENQ",
                5,
                "controlEOT",
                4,
                "controlESC",
                27,
                "controlETB",
                23,
                "controlETX",
                3,
                "controlFF",
                12,
                "controlFS",
                28,
                "controlGS",
                29,
                "controlHT",
                9,
                "controlLF",
                10,
                "controlNAK",
                21,
                "controlNULL",
                0,
                "controlRS",
                30,
                "controlSI",
                15,
                "controlSO",
                14,
                "controlSOT",
                2,
                "controlSTX",
                1,
                "controlSUB",
                26,
                "controlSYN",
                22,
                "controlUS",
                31,
                "controlVT",
                11,
                "copyright",
                169,
                "copyrightsans",
                63721,
                "copyrightserif",
                63193,
                "cornerbracketleft",
                12300,
                "cornerbracketlefthalfwidth",
                65378,
                "cornerbracketleftvertical",
                65089,
                "cornerbracketright",
                12301,
                "cornerbracketrighthalfwidth",
                65379,
                "cornerbracketrightvertical",
                65090,
                "corporationsquare",
                13183,
                "cosquare",
                13255,
                "coverkgsquare",
                13254,
                "cparen",
                9374,
                "cruzeiro",
                8354,
                "cstretched",
                663,
                "curlyand",
                8911,
                "curlyor",
                8910,
                "currency",
                164,
                "cyrBreve",
                63185,
                "cyrFlex",
                63186,
                "cyrbreve",
                63188,
                "cyrflex",
                63189,
                "d",
                100,
                "daarmenian",
                1380,
                "dabengali",
                2470,
                "dadarabic",
                1590,
                "dadeva",
                2342,
                "dadfinalarabic",
                65214,
                "dadinitialarabic",
                65215,
                "dadmedialarabic",
                65216,
                "dagesh",
                1468,
                "dageshhebrew",
                1468,
                "dagger",
                8224,
                "daggerdbl",
                8225,
                "dagujarati",
                2726,
                "dagurmukhi",
                2598,
                "dahiragana",
                12384,
                "dakatakana",
                12480,
                "dalarabic",
                1583,
                "dalet",
                1491,
                "daletdagesh",
                64307,
                "daletdageshhebrew",
                64307,
                "dalethebrew",
                1491,
                "dalfinalarabic",
                65194,
                "dammaarabic",
                1615,
                "dammalowarabic",
                1615,
                "dammatanaltonearabic",
                1612,
                "dammatanarabic",
                1612,
                "danda",
                2404,
                "dargahebrew",
                1447,
                "dargalefthebrew",
                1447,
                "dasiapneumatacyrilliccmb",
                1157,
                "dblGrave",
                63187,
                "dblanglebracketleft",
                12298,
                "dblanglebracketleftvertical",
                65085,
                "dblanglebracketright",
                12299,
                "dblanglebracketrightvertical",
                65086,
                "dblarchinvertedbelowcmb",
                811,
                "dblarrowleft",
                8660,
                "dblarrowright",
                8658,
                "dbldanda",
                2405,
                "dblgrave",
                63190,
                "dblgravecmb",
                783,
                "dblintegral",
                8748,
                "dbllowline",
                8215,
                "dbllowlinecmb",
                819,
                "dbloverlinecmb",
                831,
                "dblprimemod",
                698,
                "dblverticalbar",
                8214,
                "dblverticallineabovecmb",
                782,
                "dbopomofo",
                12553,
                "dbsquare",
                13256,
                "dcaron",
                271,
                "dcedilla",
                7697,
                "dcircle",
                9427,
                "dcircumflexbelow",
                7699,
                "dcroat",
                273,
                "ddabengali",
                2465,
                "ddadeva",
                2337,
                "ddagujarati",
                2721,
                "ddagurmukhi",
                2593,
                "ddalarabic",
                1672,
                "ddalfinalarabic",
                64393,
                "dddhadeva",
                2396,
                "ddhabengali",
                2466,
                "ddhadeva",
                2338,
                "ddhagujarati",
                2722,
                "ddhagurmukhi",
                2594,
                "ddotaccent",
                7691,
                "ddotbelow",
                7693,
                "decimalseparatorarabic",
                1643,
                "decimalseparatorpersian",
                1643,
                "decyrillic",
                1076,
                "degree",
                176,
                "dehihebrew",
                1453,
                "dehiragana",
                12391,
                "deicoptic",
                1007,
                "dekatakana",
                12487,
                "deleteleft",
                9003,
                "deleteright",
                8998,
                "delta",
                948,
                "deltaturned",
                397,
                "denominatorminusonenumeratorbengali",
                2552,
                "dezh",
                676,
                "dhabengali",
                2471,
                "dhadeva",
                2343,
                "dhagujarati",
                2727,
                "dhagurmukhi",
                2599,
                "dhook",
                599,
                "dialytikatonos",
                901,
                "dialytikatonoscmb",
                836,
                "diamond",
                9830,
                "diamondsuitwhite",
                9826,
                "dieresis",
                168,
                "dieresisacute",
                63191,
                "dieresisbelowcmb",
                804,
                "dieresiscmb",
                776,
                "dieresisgrave",
                63192,
                "dieresistonos",
                901,
                "dihiragana",
                12386,
                "dikatakana",
                12482,
                "dittomark",
                12291,
                "divide",
                247,
                "divides",
                8739,
                "divisionslash",
                8725,
                "djecyrillic",
                1106,
                "dkshade",
                9619,
                "dlinebelow",
                7695,
                "dlsquare",
                13207,
                "dmacron",
                273,
                "dmonospace",
                65348,
                "dnblock",
                9604,
                "dochadathai",
                3598,
                "dodekthai",
                3604,
                "dohiragana",
                12393,
                "dokatakana",
                12489,
                "dollar",
                36,
                "dollarinferior",
                63203,
                "dollarmonospace",
                65284,
                "dollaroldstyle",
                63268,
                "dollarsmall",
                65129,
                "dollarsuperior",
                63204,
                "dong",
                8363,
                "dorusquare",
                13094,
                "dotaccent",
                729,
                "dotaccentcmb",
                775,
                "dotbelowcmb",
                803,
                "dotbelowcomb",
                803,
                "dotkatakana",
                12539,
                "dotlessi",
                305,
                "dotlessj",
                63166,
                "dotlessjstrokehook",
                644,
                "dotmath",
                8901,
                "dottedcircle",
                9676,
                "doubleyodpatah",
                64287,
                "doubleyodpatahhebrew",
                64287,
                "downtackbelowcmb",
                798,
                "downtackmod",
                725,
                "dparen",
                9375,
                "dsuperior",
                63211,
                "dtail",
                598,
                "dtopbar",
                396,
                "duhiragana",
                12389,
                "dukatakana",
                12485,
                "dz",
                499,
                "dzaltone",
                675,
                "dzcaron",
                454,
                "dzcurl",
                677,
                "dzeabkhasiancyrillic",
                1249,
                "dzecyrillic",
                1109,
                "dzhecyrillic",
                1119,
                "e",
                101,
                "eacute",
                233,
                "earth",
                9793,
                "ebengali",
                2447,
                "ebopomofo",
                12572,
                "ebreve",
                277,
                "ecandradeva",
                2317,
                "ecandragujarati",
                2701,
                "ecandravowelsigndeva",
                2373,
                "ecandravowelsigngujarati",
                2757,
                "ecaron",
                283,
                "ecedillabreve",
                7709,
                "echarmenian",
                1381,
                "echyiwnarmenian",
                1415,
                "ecircle",
                9428,
                "ecircumflex",
                234,
                "ecircumflexacute",
                7871,
                "ecircumflexbelow",
                7705,
                "ecircumflexdotbelow",
                7879,
                "ecircumflexgrave",
                7873,
                "ecircumflexhookabove",
                7875,
                "ecircumflextilde",
                7877,
                "ecyrillic",
                1108,
                "edblgrave",
                517,
                "edeva",
                2319,
                "edieresis",
                235,
                "edot",
                279,
                "edotaccent",
                279,
                "edotbelow",
                7865,
                "eegurmukhi",
                2575,
                "eematragurmukhi",
                2631,
                "efcyrillic",
                1092,
                "egrave",
                232,
                "egujarati",
                2703,
                "eharmenian",
                1383,
                "ehbopomofo",
                12573,
                "ehiragana",
                12360,
                "ehookabove",
                7867,
                "eibopomofo",
                12575,
                "eight",
                56,
                "eightarabic",
                1640,
                "eightbengali",
                2542,
                "eightcircle",
                9319,
                "eightcircleinversesansserif",
                10129,
                "eightdeva",
                2414,
                "eighteencircle",
                9329,
                "eighteenparen",
                9349,
                "eighteenperiod",
                9369,
                "eightgujarati",
                2798,
                "eightgurmukhi",
                2670,
                "eighthackarabic",
                1640,
                "eighthangzhou",
                12328,
                "eighthnotebeamed",
                9835,
                "eightideographicparen",
                12839,
                "eightinferior",
                8328,
                "eightmonospace",
                65304,
                "eightoldstyle",
                63288,
                "eightparen",
                9339,
                "eightperiod",
                9359,
                "eightpersian",
                1784,
                "eightroman",
                8567,
                "eightsuperior",
                8312,
                "eightthai",
                3672,
                "einvertedbreve",
                519,
                "eiotifiedcyrillic",
                1125,
                "ekatakana",
                12456,
                "ekatakanahalfwidth",
                65396,
                "ekonkargurmukhi",
                2676,
                "ekorean",
                12628,
                "elcyrillic",
                1083,
                "element",
                8712,
                "elevencircle",
                9322,
                "elevenparen",
                9342,
                "elevenperiod",
                9362,
                "elevenroman",
                8570,
                "ellipsis",
                8230,
                "ellipsisvertical",
                8942,
                "emacron",
                275,
                "emacronacute",
                7703,
                "emacrongrave",
                7701,
                "emcyrillic",
                1084,
                "emdash",
                8212,
                "emdashvertical",
                65073,
                "emonospace",
                65349,
                "emphasismarkarmenian",
                1371,
                "emptyset",
                8709,
                "enbopomofo",
                12579,
                "encyrillic",
                1085,
                "endash",
                8211,
                "endashvertical",
                65074,
                "endescendercyrillic",
                1187,
                "eng",
                331,
                "engbopomofo",
                12581,
                "enghecyrillic",
                1189,
                "enhookcyrillic",
                1224,
                "enspace",
                8194,
                "eogonek",
                281,
                "eokorean",
                12627,
                "eopen",
                603,
                "eopenclosed",
                666,
                "eopenreversed",
                604,
                "eopenreversedclosed",
                606,
                "eopenreversedhook",
                605,
                "eparen",
                9376,
                "epsilon",
                949,
                "epsilontonos",
                941,
                "equal",
                61,
                "equalmonospace",
                65309,
                "equalsmall",
                65126,
                "equalsuperior",
                8316,
                "equivalence",
                8801,
                "erbopomofo",
                12582,
                "ercyrillic",
                1088,
                "ereversed",
                600,
                "ereversedcyrillic",
                1101,
                "escyrillic",
                1089,
                "esdescendercyrillic",
                1195,
                "esh",
                643,
                "eshcurl",
                646,
                "eshortdeva",
                2318,
                "eshortvowelsigndeva",
                2374,
                "eshreversedloop",
                426,
                "eshsquatreversed",
                645,
                "esmallhiragana",
                12359,
                "esmallkatakana",
                12455,
                "esmallkatakanahalfwidth",
                65386,
                "estimated",
                8494,
                "esuperior",
                63212,
                "eta",
                951,
                "etarmenian",
                1384,
                "etatonos",
                942,
                "eth",
                240,
                "etilde",
                7869,
                "etildebelow",
                7707,
                "etnahtafoukhhebrew",
                1425,
                "etnahtafoukhlefthebrew",
                1425,
                "etnahtahebrew",
                1425,
                "etnahtalefthebrew",
                1425,
                "eturned",
                477,
                "eukorean",
                12641,
                "euro",
                8364,
                "evowelsignbengali",
                2503,
                "evowelsigndeva",
                2375,
                "evowelsigngujarati",
                2759,
                "exclam",
                33,
                "exclamarmenian",
                1372,
                "exclamdbl",
                8252,
                "exclamdown",
                161,
                "exclamdownsmall",
                63393,
                "exclammonospace",
                65281,
                "exclamsmall",
                63265,
                "existential",
                8707,
                "ezh",
                658,
                "ezhcaron",
                495,
                "ezhcurl",
                659,
                "ezhreversed",
                441,
                "ezhtail",
                442,
                "f",
                102,
                "fadeva",
                2398,
                "fagurmukhi",
                2654,
                "fahrenheit",
                8457,
                "fathaarabic",
                1614,
                "fathalowarabic",
                1614,
                "fathatanarabic",
                1611,
                "fbopomofo",
                12552,
                "fcircle",
                9429,
                "fdotaccent",
                7711,
                "feharabic",
                1601,
                "feharmenian",
                1414,
                "fehfinalarabic",
                65234,
                "fehinitialarabic",
                65235,
                "fehmedialarabic",
                65236,
                "feicoptic",
                997,
                "female",
                9792,
                "ff",
                64256,
                "f_f",
                64256,
                "ffi",
                64259,
                "ffl",
                64260,
                "fi",
                64257,
                "fifteencircle",
                9326,
                "fifteenparen",
                9346,
                "fifteenperiod",
                9366,
                "figuredash",
                8210,
                "filledbox",
                9632,
                "filledrect",
                9644,
                "finalkaf",
                1498,
                "finalkafdagesh",
                64314,
                "finalkafdageshhebrew",
                64314,
                "finalkafhebrew",
                1498,
                "finalmem",
                1501,
                "finalmemhebrew",
                1501,
                "finalnun",
                1503,
                "finalnunhebrew",
                1503,
                "finalpe",
                1507,
                "finalpehebrew",
                1507,
                "finaltsadi",
                1509,
                "finaltsadihebrew",
                1509,
                "firsttonechinese",
                713,
                "fisheye",
                9673,
                "fitacyrillic",
                1139,
                "five",
                53,
                "fivearabic",
                1637,
                "fivebengali",
                2539,
                "fivecircle",
                9316,
                "fivecircleinversesansserif",
                10126,
                "fivedeva",
                2411,
                "fiveeighths",
                8541,
                "fivegujarati",
                2795,
                "fivegurmukhi",
                2667,
                "fivehackarabic",
                1637,
                "fivehangzhou",
                12325,
                "fiveideographicparen",
                12836,
                "fiveinferior",
                8325,
                "fivemonospace",
                65301,
                "fiveoldstyle",
                63285,
                "fiveparen",
                9336,
                "fiveperiod",
                9356,
                "fivepersian",
                1781,
                "fiveroman",
                8564,
                "fivesuperior",
                8309,
                "fivethai",
                3669,
                "fl",
                64258,
                "florin",
                402,
                "fmonospace",
                65350,
                "fmsquare",
                13209,
                "fofanthai",
                3615,
                "fofathai",
                3613,
                "fongmanthai",
                3663,
                "forall",
                8704,
                "four",
                52,
                "fourarabic",
                1636,
                "fourbengali",
                2538,
                "fourcircle",
                9315,
                "fourcircleinversesansserif",
                10125,
                "fourdeva",
                2410,
                "fourgujarati",
                2794,
                "fourgurmukhi",
                2666,
                "fourhackarabic",
                1636,
                "fourhangzhou",
                12324,
                "fourideographicparen",
                12835,
                "fourinferior",
                8324,
                "fourmonospace",
                65300,
                "fournumeratorbengali",
                2551,
                "fouroldstyle",
                63284,
                "fourparen",
                9335,
                "fourperiod",
                9355,
                "fourpersian",
                1780,
                "fourroman",
                8563,
                "foursuperior",
                8308,
                "fourteencircle",
                9325,
                "fourteenparen",
                9345,
                "fourteenperiod",
                9365,
                "fourthai",
                3668,
                "fourthtonechinese",
                715,
                "fparen",
                9377,
                "fraction",
                8260,
                "franc",
                8355,
                "g",
                103,
                "gabengali",
                2455,
                "gacute",
                501,
                "gadeva",
                2327,
                "gafarabic",
                1711,
                "gaffinalarabic",
                64403,
                "gafinitialarabic",
                64404,
                "gafmedialarabic",
                64405,
                "gagujarati",
                2711,
                "gagurmukhi",
                2583,
                "gahiragana",
                12364,
                "gakatakana",
                12460,
                "gamma",
                947,
                "gammalatinsmall",
                611,
                "gammasuperior",
                736,
                "gangiacoptic",
                1003,
                "gbopomofo",
                12557,
                "gbreve",
                287,
                "gcaron",
                487,
                "gcedilla",
                291,
                "gcircle",
                9430,
                "gcircumflex",
                285,
                "gcommaaccent",
                291,
                "gdot",
                289,
                "gdotaccent",
                289,
                "gecyrillic",
                1075,
                "gehiragana",
                12370,
                "gekatakana",
                12466,
                "geometricallyequal",
                8785,
                "gereshaccenthebrew",
                1436,
                "gereshhebrew",
                1523,
                "gereshmuqdamhebrew",
                1437,
                "germandbls",
                223,
                "gershayimaccenthebrew",
                1438,
                "gershayimhebrew",
                1524,
                "getamark",
                12307,
                "ghabengali",
                2456,
                "ghadarmenian",
                1394,
                "ghadeva",
                2328,
                "ghagujarati",
                2712,
                "ghagurmukhi",
                2584,
                "ghainarabic",
                1594,
                "ghainfinalarabic",
                65230,
                "ghaininitialarabic",
                65231,
                "ghainmedialarabic",
                65232,
                "ghemiddlehookcyrillic",
                1173,
                "ghestrokecyrillic",
                1171,
                "gheupturncyrillic",
                1169,
                "ghhadeva",
                2394,
                "ghhagurmukhi",
                2650,
                "ghook",
                608,
                "ghzsquare",
                13203,
                "gihiragana",
                12366,
                "gikatakana",
                12462,
                "gimarmenian",
                1379,
                "gimel",
                1490,
                "gimeldagesh",
                64306,
                "gimeldageshhebrew",
                64306,
                "gimelhebrew",
                1490,
                "gjecyrillic",
                1107,
                "glottalinvertedstroke",
                446,
                "glottalstop",
                660,
                "glottalstopinverted",
                662,
                "glottalstopmod",
                704,
                "glottalstopreversed",
                661,
                "glottalstopreversedmod",
                705,
                "glottalstopreversedsuperior",
                740,
                "glottalstopstroke",
                673,
                "glottalstopstrokereversed",
                674,
                "gmacron",
                7713,
                "gmonospace",
                65351,
                "gohiragana",
                12372,
                "gokatakana",
                12468,
                "gparen",
                9378,
                "gpasquare",
                13228,
                "gradient",
                8711,
                "grave",
                96,
                "gravebelowcmb",
                790,
                "gravecmb",
                768,
                "gravecomb",
                768,
                "gravedeva",
                2387,
                "gravelowmod",
                718,
                "gravemonospace",
                65344,
                "gravetonecmb",
                832,
                "greater",
                62,
                "greaterequal",
                8805,
                "greaterequalorless",
                8923,
                "greatermonospace",
                65310,
                "greaterorequivalent",
                8819,
                "greaterorless",
                8823,
                "greateroverequal",
                8807,
                "greatersmall",
                65125,
                "gscript",
                609,
                "gstroke",
                485,
                "guhiragana",
                12368,
                "guillemotleft",
                171,
                "guillemotright",
                187,
                "guilsinglleft",
                8249,
                "guilsinglright",
                8250,
                "gukatakana",
                12464,
                "guramusquare",
                13080,
                "gysquare",
                13257,
                "h",
                104,
                "haabkhasiancyrillic",
                1193,
                "haaltonearabic",
                1729,
                "habengali",
                2489,
                "hadescendercyrillic",
                1203,
                "hadeva",
                2361,
                "hagujarati",
                2745,
                "hagurmukhi",
                2617,
                "haharabic",
                1581,
                "hahfinalarabic",
                65186,
                "hahinitialarabic",
                65187,
                "hahiragana",
                12399,
                "hahmedialarabic",
                65188,
                "haitusquare",
                13098,
                "hakatakana",
                12495,
                "hakatakanahalfwidth",
                65418,
                "halantgurmukhi",
                2637,
                "hamzaarabic",
                1569,
                "hamzalowarabic",
                1569,
                "hangulfiller",
                12644,
                "hardsigncyrillic",
                1098,
                "harpoonleftbarbup",
                8636,
                "harpoonrightbarbup",
                8640,
                "hasquare",
                13258,
                "hatafpatah",
                1458,
                "hatafpatah16",
                1458,
                "hatafpatah23",
                1458,
                "hatafpatah2f",
                1458,
                "hatafpatahhebrew",
                1458,
                "hatafpatahnarrowhebrew",
                1458,
                "hatafpatahquarterhebrew",
                1458,
                "hatafpatahwidehebrew",
                1458,
                "hatafqamats",
                1459,
                "hatafqamats1b",
                1459,
                "hatafqamats28",
                1459,
                "hatafqamats34",
                1459,
                "hatafqamatshebrew",
                1459,
                "hatafqamatsnarrowhebrew",
                1459,
                "hatafqamatsquarterhebrew",
                1459,
                "hatafqamatswidehebrew",
                1459,
                "hatafsegol",
                1457,
                "hatafsegol17",
                1457,
                "hatafsegol24",
                1457,
                "hatafsegol30",
                1457,
                "hatafsegolhebrew",
                1457,
                "hatafsegolnarrowhebrew",
                1457,
                "hatafsegolquarterhebrew",
                1457,
                "hatafsegolwidehebrew",
                1457,
                "hbar",
                295,
                "hbopomofo",
                12559,
                "hbrevebelow",
                7723,
                "hcedilla",
                7721,
                "hcircle",
                9431,
                "hcircumflex",
                293,
                "hdieresis",
                7719,
                "hdotaccent",
                7715,
                "hdotbelow",
                7717,
                "he",
                1492,
                "heart",
                9829,
                "heartsuitblack",
                9829,
                "heartsuitwhite",
                9825,
                "hedagesh",
                64308,
                "hedageshhebrew",
                64308,
                "hehaltonearabic",
                1729,
                "heharabic",
                1607,
                "hehebrew",
                1492,
                "hehfinalaltonearabic",
                64423,
                "hehfinalalttwoarabic",
                65258,
                "hehfinalarabic",
                65258,
                "hehhamzaabovefinalarabic",
                64421,
                "hehhamzaaboveisolatedarabic",
                64420,
                "hehinitialaltonearabic",
                64424,
                "hehinitialarabic",
                65259,
                "hehiragana",
                12408,
                "hehmedialaltonearabic",
                64425,
                "hehmedialarabic",
                65260,
                "heiseierasquare",
                13179,
                "hekatakana",
                12504,
                "hekatakanahalfwidth",
                65421,
                "hekutaarusquare",
                13110,
                "henghook",
                615,
                "herutusquare",
                13113,
                "het",
                1495,
                "hethebrew",
                1495,
                "hhook",
                614,
                "hhooksuperior",
                689,
                "hieuhacirclekorean",
                12923,
                "hieuhaparenkorean",
                12827,
                "hieuhcirclekorean",
                12909,
                "hieuhkorean",
                12622,
                "hieuhparenkorean",
                12813,
                "hihiragana",
                12402,
                "hikatakana",
                12498,
                "hikatakanahalfwidth",
                65419,
                "hiriq",
                1460,
                "hiriq14",
                1460,
                "hiriq21",
                1460,
                "hiriq2d",
                1460,
                "hiriqhebrew",
                1460,
                "hiriqnarrowhebrew",
                1460,
                "hiriqquarterhebrew",
                1460,
                "hiriqwidehebrew",
                1460,
                "hlinebelow",
                7830,
                "hmonospace",
                65352,
                "hoarmenian",
                1392,
                "hohipthai",
                3627,
                "hohiragana",
                12411,
                "hokatakana",
                12507,
                "hokatakanahalfwidth",
                65422,
                "holam",
                1465,
                "holam19",
                1465,
                "holam26",
                1465,
                "holam32",
                1465,
                "holamhebrew",
                1465,
                "holamnarrowhebrew",
                1465,
                "holamquarterhebrew",
                1465,
                "holamwidehebrew",
                1465,
                "honokhukthai",
                3630,
                "hookabovecomb",
                777,
                "hookcmb",
                777,
                "hookpalatalizedbelowcmb",
                801,
                "hookretroflexbelowcmb",
                802,
                "hoonsquare",
                13122,
                "horicoptic",
                1001,
                "horizontalbar",
                8213,
                "horncmb",
                795,
                "hotsprings",
                9832,
                "house",
                8962,
                "hparen",
                9379,
                "hsuperior",
                688,
                "hturned",
                613,
                "huhiragana",
                12405,
                "huiitosquare",
                13107,
                "hukatakana",
                12501,
                "hukatakanahalfwidth",
                65420,
                "hungarumlaut",
                733,
                "hungarumlautcmb",
                779,
                "hv",
                405,
                "hyphen",
                45,
                "hypheninferior",
                63205,
                "hyphenmonospace",
                65293,
                "hyphensmall",
                65123,
                "hyphensuperior",
                63206,
                "hyphentwo",
                8208,
                "i",
                105,
                "iacute",
                237,
                "iacyrillic",
                1103,
                "ibengali",
                2439,
                "ibopomofo",
                12583,
                "ibreve",
                301,
                "icaron",
                464,
                "icircle",
                9432,
                "icircumflex",
                238,
                "icyrillic",
                1110,
                "idblgrave",
                521,
                "ideographearthcircle",
                12943,
                "ideographfirecircle",
                12939,
                "ideographicallianceparen",
                12863,
                "ideographiccallparen",
                12858,
                "ideographiccentrecircle",
                12965,
                "ideographicclose",
                12294,
                "ideographiccomma",
                12289,
                "ideographiccommaleft",
                65380,
                "ideographiccongratulationparen",
                12855,
                "ideographiccorrectcircle",
                12963,
                "ideographicearthparen",
                12847,
                "ideographicenterpriseparen",
                12861,
                "ideographicexcellentcircle",
                12957,
                "ideographicfestivalparen",
                12864,
                "ideographicfinancialcircle",
                12950,
                "ideographicfinancialparen",
                12854,
                "ideographicfireparen",
                12843,
                "ideographichaveparen",
                12850,
                "ideographichighcircle",
                12964,
                "ideographiciterationmark",
                12293,
                "ideographiclaborcircle",
                12952,
                "ideographiclaborparen",
                12856,
                "ideographicleftcircle",
                12967,
                "ideographiclowcircle",
                12966,
                "ideographicmedicinecircle",
                12969,
                "ideographicmetalparen",
                12846,
                "ideographicmoonparen",
                12842,
                "ideographicnameparen",
                12852,
                "ideographicperiod",
                12290,
                "ideographicprintcircle",
                12958,
                "ideographicreachparen",
                12867,
                "ideographicrepresentparen",
                12857,
                "ideographicresourceparen",
                12862,
                "ideographicrightcircle",
                12968,
                "ideographicsecretcircle",
                12953,
                "ideographicselfparen",
                12866,
                "ideographicsocietyparen",
                12851,
                "ideographicspace",
                12288,
                "ideographicspecialparen",
                12853,
                "ideographicstockparen",
                12849,
                "ideographicstudyparen",
                12859,
                "ideographicsunparen",
                12848,
                "ideographicsuperviseparen",
                12860,
                "ideographicwaterparen",
                12844,
                "ideographicwoodparen",
                12845,
                "ideographiczero",
                12295,
                "ideographmetalcircle",
                12942,
                "ideographmooncircle",
                12938,
                "ideographnamecircle",
                12948,
                "ideographsuncircle",
                12944,
                "ideographwatercircle",
                12940,
                "ideographwoodcircle",
                12941,
                "ideva",
                2311,
                "idieresis",
                239,
                "idieresisacute",
                7727,
                "idieresiscyrillic",
                1253,
                "idotbelow",
                7883,
                "iebrevecyrillic",
                1239,
                "iecyrillic",
                1077,
                "ieungacirclekorean",
                12917,
                "ieungaparenkorean",
                12821,
                "ieungcirclekorean",
                12903,
                "ieungkorean",
                12615,
                "ieungparenkorean",
                12807,
                "igrave",
                236,
                "igujarati",
                2695,
                "igurmukhi",
                2567,
                "ihiragana",
                12356,
                "ihookabove",
                7881,
                "iibengali",
                2440,
                "iicyrillic",
                1080,
                "iideva",
                2312,
                "iigujarati",
                2696,
                "iigurmukhi",
                2568,
                "iimatragurmukhi",
                2624,
                "iinvertedbreve",
                523,
                "iishortcyrillic",
                1081,
                "iivowelsignbengali",
                2496,
                "iivowelsigndeva",
                2368,
                "iivowelsigngujarati",
                2752,
                "ij",
                307,
                "ikatakana",
                12452,
                "ikatakanahalfwidth",
                65394,
                "ikorean",
                12643,
                "ilde",
                732,
                "iluyhebrew",
                1452,
                "imacron",
                299,
                "imacroncyrillic",
                1251,
                "imageorapproximatelyequal",
                8787,
                "imatragurmukhi",
                2623,
                "imonospace",
                65353,
                "increment",
                8710,
                "infinity",
                8734,
                "iniarmenian",
                1387,
                "integral",
                8747,
                "integralbottom",
                8993,
                "integralbt",
                8993,
                "integralex",
                63733,
                "integraltop",
                8992,
                "integraltp",
                8992,
                "intersection",
                8745,
                "intisquare",
                13061,
                "invbullet",
                9688,
                "invcircle",
                9689,
                "invsmileface",
                9787,
                "iocyrillic",
                1105,
                "iogonek",
                303,
                "iota",
                953,
                "iotadieresis",
                970,
                "iotadieresistonos",
                912,
                "iotalatin",
                617,
                "iotatonos",
                943,
                "iparen",
                9380,
                "irigurmukhi",
                2674,
                "ismallhiragana",
                12355,
                "ismallkatakana",
                12451,
                "ismallkatakanahalfwidth",
                65384,
                "issharbengali",
                2554,
                "istroke",
                616,
                "isuperior",
                63213,
                "iterationhiragana",
                12445,
                "iterationkatakana",
                12541,
                "itilde",
                297,
                "itildebelow",
                7725,
                "iubopomofo",
                12585,
                "iucyrillic",
                1102,
                "ivowelsignbengali",
                2495,
                "ivowelsigndeva",
                2367,
                "ivowelsigngujarati",
                2751,
                "izhitsacyrillic",
                1141,
                "izhitsadblgravecyrillic",
                1143,
                "j",
                106,
                "jaarmenian",
                1393,
                "jabengali",
                2460,
                "jadeva",
                2332,
                "jagujarati",
                2716,
                "jagurmukhi",
                2588,
                "jbopomofo",
                12560,
                "jcaron",
                496,
                "jcircle",
                9433,
                "jcircumflex",
                309,
                "jcrossedtail",
                669,
                "jdotlessstroke",
                607,
                "jecyrillic",
                1112,
                "jeemarabic",
                1580,
                "jeemfinalarabic",
                65182,
                "jeeminitialarabic",
                65183,
                "jeemmedialarabic",
                65184,
                "jeharabic",
                1688,
                "jehfinalarabic",
                64395,
                "jhabengali",
                2461,
                "jhadeva",
                2333,
                "jhagujarati",
                2717,
                "jhagurmukhi",
                2589,
                "jheharmenian",
                1403,
                "jis",
                12292,
                "jmonospace",
                65354,
                "jparen",
                9381,
                "jsuperior",
                690,
                "k",
                107,
                "kabashkircyrillic",
                1185,
                "kabengali",
                2453,
                "kacute",
                7729,
                "kacyrillic",
                1082,
                "kadescendercyrillic",
                1179,
                "kadeva",
                2325,
                "kaf",
                1499,
                "kafarabic",
                1603,
                "kafdagesh",
                64315,
                "kafdageshhebrew",
                64315,
                "kaffinalarabic",
                65242,
                "kafhebrew",
                1499,
                "kafinitialarabic",
                65243,
                "kafmedialarabic",
                65244,
                "kafrafehebrew",
                64333,
                "kagujarati",
                2709,
                "kagurmukhi",
                2581,
                "kahiragana",
                12363,
                "kahookcyrillic",
                1220,
                "kakatakana",
                12459,
                "kakatakanahalfwidth",
                65398,
                "kappa",
                954,
                "kappasymbolgreek",
                1008,
                "kapyeounmieumkorean",
                12657,
                "kapyeounphieuphkorean",
                12676,
                "kapyeounpieupkorean",
                12664,
                "kapyeounssangpieupkorean",
                12665,
                "karoriisquare",
                13069,
                "kashidaautoarabic",
                1600,
                "kashidaautonosidebearingarabic",
                1600,
                "kasmallkatakana",
                12533,
                "kasquare",
                13188,
                "kasraarabic",
                1616,
                "kasratanarabic",
                1613,
                "kastrokecyrillic",
                1183,
                "katahiraprolongmarkhalfwidth",
                65392,
                "kaverticalstrokecyrillic",
                1181,
                "kbopomofo",
                12558,
                "kcalsquare",
                13193,
                "kcaron",
                489,
                "kcedilla",
                311,
                "kcircle",
                9434,
                "kcommaaccent",
                311,
                "kdotbelow",
                7731,
                "keharmenian",
                1412,
                "kehiragana",
                12369,
                "kekatakana",
                12465,
                "kekatakanahalfwidth",
                65401,
                "kenarmenian",
                1391,
                "kesmallkatakana",
                12534,
                "kgreenlandic",
                312,
                "khabengali",
                2454,
                "khacyrillic",
                1093,
                "khadeva",
                2326,
                "khagujarati",
                2710,
                "khagurmukhi",
                2582,
                "khaharabic",
                1582,
                "khahfinalarabic",
                65190,
                "khahinitialarabic",
                65191,
                "khahmedialarabic",
                65192,
                "kheicoptic",
                999,
                "khhadeva",
                2393,
                "khhagurmukhi",
                2649,
                "khieukhacirclekorean",
                12920,
                "khieukhaparenkorean",
                12824,
                "khieukhcirclekorean",
                12906,
                "khieukhkorean",
                12619,
                "khieukhparenkorean",
                12810,
                "khokhaithai",
                3586,
                "khokhonthai",
                3589,
                "khokhuatthai",
                3587,
                "khokhwaithai",
                3588,
                "khomutthai",
                3675,
                "khook",
                409,
                "khorakhangthai",
                3590,
                "khzsquare",
                13201,
                "kihiragana",
                12365,
                "kikatakana",
                12461,
                "kikatakanahalfwidth",
                65399,
                "kiroguramusquare",
                13077,
                "kiromeetorusquare",
                13078,
                "kirosquare",
                13076,
                "kiyeokacirclekorean",
                12910,
                "kiyeokaparenkorean",
                12814,
                "kiyeokcirclekorean",
                12896,
                "kiyeokkorean",
                12593,
                "kiyeokparenkorean",
                12800,
                "kiyeoksioskorean",
                12595,
                "kjecyrillic",
                1116,
                "klinebelow",
                7733,
                "klsquare",
                13208,
                "kmcubedsquare",
                13222,
                "kmonospace",
                65355,
                "kmsquaredsquare",
                13218,
                "kohiragana",
                12371,
                "kohmsquare",
                13248,
                "kokaithai",
                3585,
                "kokatakana",
                12467,
                "kokatakanahalfwidth",
                65402,
                "kooposquare",
                13086,
                "koppacyrillic",
                1153,
                "koreanstandardsymbol",
                12927,
                "koroniscmb",
                835,
                "kparen",
                9382,
                "kpasquare",
                13226,
                "ksicyrillic",
                1135,
                "ktsquare",
                13263,
                "kturned",
                670,
                "kuhiragana",
                12367,
                "kukatakana",
                12463,
                "kukatakanahalfwidth",
                65400,
                "kvsquare",
                13240,
                "kwsquare",
                13246,
                "l",
                108,
                "labengali",
                2482,
                "lacute",
                314,
                "ladeva",
                2354,
                "lagujarati",
                2738,
                "lagurmukhi",
                2610,
                "lakkhangyaothai",
                3653,
                "lamaleffinalarabic",
                65276,
                "lamalefhamzaabovefinalarabic",
                65272,
                "lamalefhamzaaboveisolatedarabic",
                65271,
                "lamalefhamzabelowfinalarabic",
                65274,
                "lamalefhamzabelowisolatedarabic",
                65273,
                "lamalefisolatedarabic",
                65275,
                "lamalefmaddaabovefinalarabic",
                65270,
                "lamalefmaddaaboveisolatedarabic",
                65269,
                "lamarabic",
                1604,
                "lambda",
                955,
                "lambdastroke",
                411,
                "lamed",
                1500,
                "lameddagesh",
                64316,
                "lameddageshhebrew",
                64316,
                "lamedhebrew",
                1500,
                "lamfinalarabic",
                65246,
                "lamhahinitialarabic",
                64714,
                "laminitialarabic",
                65247,
                "lamjeeminitialarabic",
                64713,
                "lamkhahinitialarabic",
                64715,
                "lamlamhehisolatedarabic",
                65010,
                "lammedialarabic",
                65248,
                "lammeemhahinitialarabic",
                64904,
                "lammeeminitialarabic",
                64716,
                "largecircle",
                9711,
                "lbar",
                410,
                "lbelt",
                620,
                "lbopomofo",
                12556,
                "lcaron",
                318,
                "lcedilla",
                316,
                "lcircle",
                9435,
                "lcircumflexbelow",
                7741,
                "lcommaaccent",
                316,
                "ldot",
                320,
                "ldotaccent",
                320,
                "ldotbelow",
                7735,
                "ldotbelowmacron",
                7737,
                "leftangleabovecmb",
                794,
                "lefttackbelowcmb",
                792,
                "less",
                60,
                "lessequal",
                8804,
                "lessequalorgreater",
                8922,
                "lessmonospace",
                65308,
                "lessorequivalent",
                8818,
                "lessorgreater",
                8822,
                "lessoverequal",
                8806,
                "lesssmall",
                65124,
                "lezh",
                622,
                "lfblock",
                9612,
                "lhookretroflex",
                621,
                "lira",
                8356,
                "liwnarmenian",
                1388,
                "lj",
                457,
                "ljecyrillic",
                1113,
                "ll",
                63168,
                "lladeva",
                2355,
                "llagujarati",
                2739,
                "llinebelow",
                7739,
                "llladeva",
                2356,
                "llvocalicbengali",
                2529,
                "llvocalicdeva",
                2401,
                "llvocalicvowelsignbengali",
                2531,
                "llvocalicvowelsigndeva",
                2403,
                "lmiddletilde",
                619,
                "lmonospace",
                65356,
                "lmsquare",
                13264,
                "lochulathai",
                3628,
                "logicaland",
                8743,
                "logicalnot",
                172,
                "logicalnotreversed",
                8976,
                "logicalor",
                8744,
                "lolingthai",
                3621,
                "longs",
                383,
                "lowlinecenterline",
                65102,
                "lowlinecmb",
                818,
                "lowlinedashed",
                65101,
                "lozenge",
                9674,
                "lparen",
                9383,
                "lslash",
                322,
                "lsquare",
                8467,
                "lsuperior",
                63214,
                "ltshade",
                9617,
                "luthai",
                3622,
                "lvocalicbengali",
                2444,
                "lvocalicdeva",
                2316,
                "lvocalicvowelsignbengali",
                2530,
                "lvocalicvowelsigndeva",
                2402,
                "lxsquare",
                13267,
                "m",
                109,
                "mabengali",
                2478,
                "macron",
                175,
                "macronbelowcmb",
                817,
                "macroncmb",
                772,
                "macronlowmod",
                717,
                "macronmonospace",
                65507,
                "macute",
                7743,
                "madeva",
                2350,
                "magujarati",
                2734,
                "magurmukhi",
                2606,
                "mahapakhhebrew",
                1444,
                "mahapakhlefthebrew",
                1444,
                "mahiragana",
                12414,
                "maichattawalowleftthai",
                63637,
                "maichattawalowrightthai",
                63636,
                "maichattawathai",
                3659,
                "maichattawaupperleftthai",
                63635,
                "maieklowleftthai",
                63628,
                "maieklowrightthai",
                63627,
                "maiekthai",
                3656,
                "maiekupperleftthai",
                63626,
                "maihanakatleftthai",
                63620,
                "maihanakatthai",
                3633,
                "maitaikhuleftthai",
                63625,
                "maitaikhuthai",
                3655,
                "maitholowleftthai",
                63631,
                "maitholowrightthai",
                63630,
                "maithothai",
                3657,
                "maithoupperleftthai",
                63629,
                "maitrilowleftthai",
                63634,
                "maitrilowrightthai",
                63633,
                "maitrithai",
                3658,
                "maitriupperleftthai",
                63632,
                "maiyamokthai",
                3654,
                "makatakana",
                12510,
                "makatakanahalfwidth",
                65423,
                "male",
                9794,
                "mansyonsquare",
                13127,
                "maqafhebrew",
                1470,
                "mars",
                9794,
                "masoracirclehebrew",
                1455,
                "masquare",
                13187,
                "mbopomofo",
                12551,
                "mbsquare",
                13268,
                "mcircle",
                9436,
                "mcubedsquare",
                13221,
                "mdotaccent",
                7745,
                "mdotbelow",
                7747,
                "meemarabic",
                1605,
                "meemfinalarabic",
                65250,
                "meeminitialarabic",
                65251,
                "meemmedialarabic",
                65252,
                "meemmeeminitialarabic",
                64721,
                "meemmeemisolatedarabic",
                64584,
                "meetorusquare",
                13133,
                "mehiragana",
                12417,
                "meizierasquare",
                13182,
                "mekatakana",
                12513,
                "mekatakanahalfwidth",
                65426,
                "mem",
                1502,
                "memdagesh",
                64318,
                "memdageshhebrew",
                64318,
                "memhebrew",
                1502,
                "menarmenian",
                1396,
                "merkhahebrew",
                1445,
                "merkhakefulahebrew",
                1446,
                "merkhakefulalefthebrew",
                1446,
                "merkhalefthebrew",
                1445,
                "mhook",
                625,
                "mhzsquare",
                13202,
                "middledotkatakanahalfwidth",
                65381,
                "middot",
                183,
                "mieumacirclekorean",
                12914,
                "mieumaparenkorean",
                12818,
                "mieumcirclekorean",
                12900,
                "mieumkorean",
                12609,
                "mieumpansioskorean",
                12656,
                "mieumparenkorean",
                12804,
                "mieumpieupkorean",
                12654,
                "mieumsioskorean",
                12655,
                "mihiragana",
                12415,
                "mikatakana",
                12511,
                "mikatakanahalfwidth",
                65424,
                "minus",
                8722,
                "minusbelowcmb",
                800,
                "minuscircle",
                8854,
                "minusmod",
                727,
                "minusplus",
                8723,
                "minute",
                8242,
                "miribaarusquare",
                13130,
                "mirisquare",
                13129,
                "mlonglegturned",
                624,
                "mlsquare",
                13206,
                "mmcubedsquare",
                13219,
                "mmonospace",
                65357,
                "mmsquaredsquare",
                13215,
                "mohiragana",
                12418,
                "mohmsquare",
                13249,
                "mokatakana",
                12514,
                "mokatakanahalfwidth",
                65427,
                "molsquare",
                13270,
                "momathai",
                3617,
                "moverssquare",
                13223,
                "moverssquaredsquare",
                13224,
                "mparen",
                9384,
                "mpasquare",
                13227,
                "mssquare",
                13235,
                "msuperior",
                63215,
                "mturned",
                623,
                "mu",
                181,
                "mu1",
                181,
                "muasquare",
                13186,
                "muchgreater",
                8811,
                "muchless",
                8810,
                "mufsquare",
                13196,
                "mugreek",
                956,
                "mugsquare",
                13197,
                "muhiragana",
                12416,
                "mukatakana",
                12512,
                "mukatakanahalfwidth",
                65425,
                "mulsquare",
                13205,
                "multiply",
                215,
                "mumsquare",
                13211,
                "munahhebrew",
                1443,
                "munahlefthebrew",
                1443,
                "musicalnote",
                9834,
                "musicalnotedbl",
                9835,
                "musicflatsign",
                9837,
                "musicsharpsign",
                9839,
                "mussquare",
                13234,
                "muvsquare",
                13238,
                "muwsquare",
                13244,
                "mvmegasquare",
                13241,
                "mvsquare",
                13239,
                "mwmegasquare",
                13247,
                "mwsquare",
                13245,
                "n",
                110,
                "nabengali",
                2472,
                "nabla",
                8711,
                "nacute",
                324,
                "nadeva",
                2344,
                "nagujarati",
                2728,
                "nagurmukhi",
                2600,
                "nahiragana",
                12394,
                "nakatakana",
                12490,
                "nakatakanahalfwidth",
                65413,
                "napostrophe",
                329,
                "nasquare",
                13185,
                "nbopomofo",
                12555,
                "nbspace",
                160,
                "ncaron",
                328,
                "ncedilla",
                326,
                "ncircle",
                9437,
                "ncircumflexbelow",
                7755,
                "ncommaaccent",
                326,
                "ndotaccent",
                7749,
                "ndotbelow",
                7751,
                "nehiragana",
                12397,
                "nekatakana",
                12493,
                "nekatakanahalfwidth",
                65416,
                "newsheqelsign",
                8362,
                "nfsquare",
                13195,
                "ngabengali",
                2457,
                "ngadeva",
                2329,
                "ngagujarati",
                2713,
                "ngagurmukhi",
                2585,
                "ngonguthai",
                3591,
                "nhiragana",
                12435,
                "nhookleft",
                626,
                "nhookretroflex",
                627,
                "nieunacirclekorean",
                12911,
                "nieunaparenkorean",
                12815,
                "nieuncieuckorean",
                12597,
                "nieuncirclekorean",
                12897,
                "nieunhieuhkorean",
                12598,
                "nieunkorean",
                12596,
                "nieunpansioskorean",
                12648,
                "nieunparenkorean",
                12801,
                "nieunsioskorean",
                12647,
                "nieuntikeutkorean",
                12646,
                "nihiragana",
                12395,
                "nikatakana",
                12491,
                "nikatakanahalfwidth",
                65414,
                "nikhahitleftthai",
                63641,
                "nikhahitthai",
                3661,
                "nine",
                57,
                "ninearabic",
                1641,
                "ninebengali",
                2543,
                "ninecircle",
                9320,
                "ninecircleinversesansserif",
                10130,
                "ninedeva",
                2415,
                "ninegujarati",
                2799,
                "ninegurmukhi",
                2671,
                "ninehackarabic",
                1641,
                "ninehangzhou",
                12329,
                "nineideographicparen",
                12840,
                "nineinferior",
                8329,
                "ninemonospace",
                65305,
                "nineoldstyle",
                63289,
                "nineparen",
                9340,
                "nineperiod",
                9360,
                "ninepersian",
                1785,
                "nineroman",
                8568,
                "ninesuperior",
                8313,
                "nineteencircle",
                9330,
                "nineteenparen",
                9350,
                "nineteenperiod",
                9370,
                "ninethai",
                3673,
                "nj",
                460,
                "njecyrillic",
                1114,
                "nkatakana",
                12531,
                "nkatakanahalfwidth",
                65437,
                "nlegrightlong",
                414,
                "nlinebelow",
                7753,
                "nmonospace",
                65358,
                "nmsquare",
                13210,
                "nnabengali",
                2467,
                "nnadeva",
                2339,
                "nnagujarati",
                2723,
                "nnagurmukhi",
                2595,
                "nnnadeva",
                2345,
                "nohiragana",
                12398,
                "nokatakana",
                12494,
                "nokatakanahalfwidth",
                65417,
                "nonbreakingspace",
                160,
                "nonenthai",
                3603,
                "nonuthai",
                3609,
                "noonarabic",
                1606,
                "noonfinalarabic",
                65254,
                "noonghunnaarabic",
                1722,
                "noonghunnafinalarabic",
                64415,
                "nooninitialarabic",
                65255,
                "noonjeeminitialarabic",
                64722,
                "noonjeemisolatedarabic",
                64587,
                "noonmedialarabic",
                65256,
                "noonmeeminitialarabic",
                64725,
                "noonmeemisolatedarabic",
                64590,
                "noonnoonfinalarabic",
                64653,
                "notcontains",
                8716,
                "notelement",
                8713,
                "notelementof",
                8713,
                "notequal",
                8800,
                "notgreater",
                8815,
                "notgreaternorequal",
                8817,
                "notgreaternorless",
                8825,
                "notidentical",
                8802,
                "notless",
                8814,
                "notlessnorequal",
                8816,
                "notparallel",
                8742,
                "notprecedes",
                8832,
                "notsubset",
                8836,
                "notsucceeds",
                8833,
                "notsuperset",
                8837,
                "nowarmenian",
                1398,
                "nparen",
                9385,
                "nssquare",
                13233,
                "nsuperior",
                8319,
                "ntilde",
                241,
                "nu",
                957,
                "nuhiragana",
                12396,
                "nukatakana",
                12492,
                "nukatakanahalfwidth",
                65415,
                "nuktabengali",
                2492,
                "nuktadeva",
                2364,
                "nuktagujarati",
                2748,
                "nuktagurmukhi",
                2620,
                "numbersign",
                35,
                "numbersignmonospace",
                65283,
                "numbersignsmall",
                65119,
                "numeralsigngreek",
                884,
                "numeralsignlowergreek",
                885,
                "numero",
                8470,
                "nun",
                1504,
                "nundagesh",
                64320,
                "nundageshhebrew",
                64320,
                "nunhebrew",
                1504,
                "nvsquare",
                13237,
                "nwsquare",
                13243,
                "nyabengali",
                2462,
                "nyadeva",
                2334,
                "nyagujarati",
                2718,
                "nyagurmukhi",
                2590,
                "o",
                111,
                "oacute",
                243,
                "oangthai",
                3629,
                "obarred",
                629,
                "obarredcyrillic",
                1257,
                "obarreddieresiscyrillic",
                1259,
                "obengali",
                2451,
                "obopomofo",
                12571,
                "obreve",
                335,
                "ocandradeva",
                2321,
                "ocandragujarati",
                2705,
                "ocandravowelsigndeva",
                2377,
                "ocandravowelsigngujarati",
                2761,
                "ocaron",
                466,
                "ocircle",
                9438,
                "ocircumflex",
                244,
                "ocircumflexacute",
                7889,
                "ocircumflexdotbelow",
                7897,
                "ocircumflexgrave",
                7891,
                "ocircumflexhookabove",
                7893,
                "ocircumflextilde",
                7895,
                "ocyrillic",
                1086,
                "odblacute",
                337,
                "odblgrave",
                525,
                "odeva",
                2323,
                "odieresis",
                246,
                "odieresiscyrillic",
                1255,
                "odotbelow",
                7885,
                "oe",
                339,
                "oekorean",
                12634,
                "ogonek",
                731,
                "ogonekcmb",
                808,
                "ograve",
                242,
                "ogujarati",
                2707,
                "oharmenian",
                1413,
                "ohiragana",
                12362,
                "ohookabove",
                7887,
                "ohorn",
                417,
                "ohornacute",
                7899,
                "ohorndotbelow",
                7907,
                "ohorngrave",
                7901,
                "ohornhookabove",
                7903,
                "ohorntilde",
                7905,
                "ohungarumlaut",
                337,
                "oi",
                419,
                "oinvertedbreve",
                527,
                "okatakana",
                12458,
                "okatakanahalfwidth",
                65397,
                "okorean",
                12631,
                "olehebrew",
                1451,
                "omacron",
                333,
                "omacronacute",
                7763,
                "omacrongrave",
                7761,
                "omdeva",
                2384,
                "omega",
                969,
                "omega1",
                982,
                "omegacyrillic",
                1121,
                "omegalatinclosed",
                631,
                "omegaroundcyrillic",
                1147,
                "omegatitlocyrillic",
                1149,
                "omegatonos",
                974,
                "omgujarati",
                2768,
                "omicron",
                959,
                "omicrontonos",
                972,
                "omonospace",
                65359,
                "one",
                49,
                "onearabic",
                1633,
                "onebengali",
                2535,
                "onecircle",
                9312,
                "onecircleinversesansserif",
                10122,
                "onedeva",
                2407,
                "onedotenleader",
                8228,
                "oneeighth",
                8539,
                "onefitted",
                63196,
                "onegujarati",
                2791,
                "onegurmukhi",
                2663,
                "onehackarabic",
                1633,
                "onehalf",
                189,
                "onehangzhou",
                12321,
                "oneideographicparen",
                12832,
                "oneinferior",
                8321,
                "onemonospace",
                65297,
                "onenumeratorbengali",
                2548,
                "oneoldstyle",
                63281,
                "oneparen",
                9332,
                "oneperiod",
                9352,
                "onepersian",
                1777,
                "onequarter",
                188,
                "oneroman",
                8560,
                "onesuperior",
                185,
                "onethai",
                3665,
                "onethird",
                8531,
                "oogonek",
                491,
                "oogonekmacron",
                493,
                "oogurmukhi",
                2579,
                "oomatragurmukhi",
                2635,
                "oopen",
                596,
                "oparen",
                9386,
                "openbullet",
                9702,
                "option",
                8997,
                "ordfeminine",
                170,
                "ordmasculine",
                186,
                "orthogonal",
                8735,
                "oshortdeva",
                2322,
                "oshortvowelsigndeva",
                2378,
                "oslash",
                248,
                "oslashacute",
                511,
                "osmallhiragana",
                12361,
                "osmallkatakana",
                12457,
                "osmallkatakanahalfwidth",
                65387,
                "ostrokeacute",
                511,
                "osuperior",
                63216,
                "otcyrillic",
                1151,
                "otilde",
                245,
                "otildeacute",
                7757,
                "otildedieresis",
                7759,
                "oubopomofo",
                12577,
                "overline",
                8254,
                "overlinecenterline",
                65098,
                "overlinecmb",
                773,
                "overlinedashed",
                65097,
                "overlinedblwavy",
                65100,
                "overlinewavy",
                65099,
                "overscore",
                175,
                "ovowelsignbengali",
                2507,
                "ovowelsigndeva",
                2379,
                "ovowelsigngujarati",
                2763,
                "p",
                112,
                "paampssquare",
                13184,
                "paasentosquare",
                13099,
                "pabengali",
                2474,
                "pacute",
                7765,
                "padeva",
                2346,
                "pagedown",
                8671,
                "pageup",
                8670,
                "pagujarati",
                2730,
                "pagurmukhi",
                2602,
                "pahiragana",
                12401,
                "paiyannoithai",
                3631,
                "pakatakana",
                12497,
                "palatalizationcyrilliccmb",
                1156,
                "palochkacyrillic",
                1216,
                "pansioskorean",
                12671,
                "paragraph",
                182,
                "parallel",
                8741,
                "parenleft",
                40,
                "parenleftaltonearabic",
                64830,
                "parenleftbt",
                63725,
                "parenleftex",
                63724,
                "parenleftinferior",
                8333,
                "parenleftmonospace",
                65288,
                "parenleftsmall",
                65113,
                "parenleftsuperior",
                8317,
                "parenlefttp",
                63723,
                "parenleftvertical",
                65077,
                "parenright",
                41,
                "parenrightaltonearabic",
                64831,
                "parenrightbt",
                63736,
                "parenrightex",
                63735,
                "parenrightinferior",
                8334,
                "parenrightmonospace",
                65289,
                "parenrightsmall",
                65114,
                "parenrightsuperior",
                8318,
                "parenrighttp",
                63734,
                "parenrightvertical",
                65078,
                "partialdiff",
                8706,
                "paseqhebrew",
                1472,
                "pashtahebrew",
                1433,
                "pasquare",
                13225,
                "patah",
                1463,
                "patah11",
                1463,
                "patah1d",
                1463,
                "patah2a",
                1463,
                "patahhebrew",
                1463,
                "patahnarrowhebrew",
                1463,
                "patahquarterhebrew",
                1463,
                "patahwidehebrew",
                1463,
                "pazerhebrew",
                1441,
                "pbopomofo",
                12550,
                "pcircle",
                9439,
                "pdotaccent",
                7767,
                "pe",
                1508,
                "pecyrillic",
                1087,
                "pedagesh",
                64324,
                "pedageshhebrew",
                64324,
                "peezisquare",
                13115,
                "pefinaldageshhebrew",
                64323,
                "peharabic",
                1662,
                "peharmenian",
                1402,
                "pehebrew",
                1508,
                "pehfinalarabic",
                64343,
                "pehinitialarabic",
                64344,
                "pehiragana",
                12410,
                "pehmedialarabic",
                64345,
                "pekatakana",
                12506,
                "pemiddlehookcyrillic",
                1191,
                "perafehebrew",
                64334,
                "percent",
                37,
                "percentarabic",
                1642,
                "percentmonospace",
                65285,
                "percentsmall",
                65130,
                "period",
                46,
                "periodarmenian",
                1417,
                "periodcentered",
                183,
                "periodhalfwidth",
                65377,
                "periodinferior",
                63207,
                "periodmonospace",
                65294,
                "periodsmall",
                65106,
                "periodsuperior",
                63208,
                "perispomenigreekcmb",
                834,
                "perpendicular",
                8869,
                "perthousand",
                8240,
                "peseta",
                8359,
                "pfsquare",
                13194,
                "phabengali",
                2475,
                "phadeva",
                2347,
                "phagujarati",
                2731,
                "phagurmukhi",
                2603,
                "phi",
                966,
                "phi1",
                981,
                "phieuphacirclekorean",
                12922,
                "phieuphaparenkorean",
                12826,
                "phieuphcirclekorean",
                12908,
                "phieuphkorean",
                12621,
                "phieuphparenkorean",
                12812,
                "philatin",
                632,
                "phinthuthai",
                3642,
                "phisymbolgreek",
                981,
                "phook",
                421,
                "phophanthai",
                3614,
                "phophungthai",
                3612,
                "phosamphaothai",
                3616,
                "pi",
                960,
                "pieupacirclekorean",
                12915,
                "pieupaparenkorean",
                12819,
                "pieupcieuckorean",
                12662,
                "pieupcirclekorean",
                12901,
                "pieupkiyeokkorean",
                12658,
                "pieupkorean",
                12610,
                "pieupparenkorean",
                12805,
                "pieupsioskiyeokkorean",
                12660,
                "pieupsioskorean",
                12612,
                "pieupsiostikeutkorean",
                12661,
                "pieupthieuthkorean",
                12663,
                "pieuptikeutkorean",
                12659,
                "pihiragana",
                12404,
                "pikatakana",
                12500,
                "pisymbolgreek",
                982,
                "piwrarmenian",
                1411,
                "plus",
                43,
                "plusbelowcmb",
                799,
                "pluscircle",
                8853,
                "plusminus",
                177,
                "plusmod",
                726,
                "plusmonospace",
                65291,
                "plussmall",
                65122,
                "plussuperior",
                8314,
                "pmonospace",
                65360,
                "pmsquare",
                13272,
                "pohiragana",
                12413,
                "pointingindexdownwhite",
                9759,
                "pointingindexleftwhite",
                9756,
                "pointingindexrightwhite",
                9758,
                "pointingindexupwhite",
                9757,
                "pokatakana",
                12509,
                "poplathai",
                3611,
                "postalmark",
                12306,
                "postalmarkface",
                12320,
                "pparen",
                9387,
                "precedes",
                8826,
                "prescription",
                8478,
                "primemod",
                697,
                "primereversed",
                8245,
                "product",
                8719,
                "projective",
                8965,
                "prolongedkana",
                12540,
                "propellor",
                8984,
                "propersubset",
                8834,
                "propersuperset",
                8835,
                "proportion",
                8759,
                "proportional",
                8733,
                "psi",
                968,
                "psicyrillic",
                1137,
                "psilipneumatacyrilliccmb",
                1158,
                "pssquare",
                13232,
                "puhiragana",
                12407,
                "pukatakana",
                12503,
                "pvsquare",
                13236,
                "pwsquare",
                13242,
                "q",
                113,
                "qadeva",
                2392,
                "qadmahebrew",
                1448,
                "qafarabic",
                1602,
                "qaffinalarabic",
                65238,
                "qafinitialarabic",
                65239,
                "qafmedialarabic",
                65240,
                "qamats",
                1464,
                "qamats10",
                1464,
                "qamats1a",
                1464,
                "qamats1c",
                1464,
                "qamats27",
                1464,
                "qamats29",
                1464,
                "qamats33",
                1464,
                "qamatsde",
                1464,
                "qamatshebrew",
                1464,
                "qamatsnarrowhebrew",
                1464,
                "qamatsqatanhebrew",
                1464,
                "qamatsqatannarrowhebrew",
                1464,
                "qamatsqatanquarterhebrew",
                1464,
                "qamatsqatanwidehebrew",
                1464,
                "qamatsquarterhebrew",
                1464,
                "qamatswidehebrew",
                1464,
                "qarneyparahebrew",
                1439,
                "qbopomofo",
                12561,
                "qcircle",
                9440,
                "qhook",
                672,
                "qmonospace",
                65361,
                "qof",
                1511,
                "qofdagesh",
                64327,
                "qofdageshhebrew",
                64327,
                "qofhebrew",
                1511,
                "qparen",
                9388,
                "quarternote",
                9833,
                "qubuts",
                1467,
                "qubuts18",
                1467,
                "qubuts25",
                1467,
                "qubuts31",
                1467,
                "qubutshebrew",
                1467,
                "qubutsnarrowhebrew",
                1467,
                "qubutsquarterhebrew",
                1467,
                "qubutswidehebrew",
                1467,
                "question",
                63,
                "questionarabic",
                1567,
                "questionarmenian",
                1374,
                "questiondown",
                191,
                "questiondownsmall",
                63423,
                "questiongreek",
                894,
                "questionmonospace",
                65311,
                "questionsmall",
                63295,
                "quotedbl",
                34,
                "quotedblbase",
                8222,
                "quotedblleft",
                8220,
                "quotedblmonospace",
                65282,
                "quotedblprime",
                12318,
                "quotedblprimereversed",
                12317,
                "quotedblright",
                8221,
                "quoteleft",
                8216,
                "quoteleftreversed",
                8219,
                "quotereversed",
                8219,
                "quoteright",
                8217,
                "quoterightn",
                329,
                "quotesinglbase",
                8218,
                "quotesingle",
                39,
                "quotesinglemonospace",
                65287,
                "r",
                114,
                "raarmenian",
                1404,
                "rabengali",
                2480,
                "racute",
                341,
                "radeva",
                2352,
                "radical",
                8730,
                "radicalex",
                63717,
                "radoverssquare",
                13230,
                "radoverssquaredsquare",
                13231,
                "radsquare",
                13229,
                "rafe",
                1471,
                "rafehebrew",
                1471,
                "ragujarati",
                2736,
                "ragurmukhi",
                2608,
                "rahiragana",
                12425,
                "rakatakana",
                12521,
                "rakatakanahalfwidth",
                65431,
                "ralowerdiagonalbengali",
                2545,
                "ramiddlediagonalbengali",
                2544,
                "ramshorn",
                612,
                "ratio",
                8758,
                "rbopomofo",
                12566,
                "rcaron",
                345,
                "rcedilla",
                343,
                "rcircle",
                9441,
                "rcommaaccent",
                343,
                "rdblgrave",
                529,
                "rdotaccent",
                7769,
                "rdotbelow",
                7771,
                "rdotbelowmacron",
                7773,
                "referencemark",
                8251,
                "reflexsubset",
                8838,
                "reflexsuperset",
                8839,
                "registered",
                174,
                "registersans",
                63720,
                "registerserif",
                63194,
                "reharabic",
                1585,
                "reharmenian",
                1408,
                "rehfinalarabic",
                65198,
                "rehiragana",
                12428,
                "rekatakana",
                12524,
                "rekatakanahalfwidth",
                65434,
                "resh",
                1512,
                "reshdageshhebrew",
                64328,
                "reshhebrew",
                1512,
                "reversedtilde",
                8765,
                "reviahebrew",
                1431,
                "reviamugrashhebrew",
                1431,
                "revlogicalnot",
                8976,
                "rfishhook",
                638,
                "rfishhookreversed",
                639,
                "rhabengali",
                2525,
                "rhadeva",
                2397,
                "rho",
                961,
                "rhook",
                637,
                "rhookturned",
                635,
                "rhookturnedsuperior",
                693,
                "rhosymbolgreek",
                1009,
                "rhotichookmod",
                734,
                "rieulacirclekorean",
                12913,
                "rieulaparenkorean",
                12817,
                "rieulcirclekorean",
                12899,
                "rieulhieuhkorean",
                12608,
                "rieulkiyeokkorean",
                12602,
                "rieulkiyeoksioskorean",
                12649,
                "rieulkorean",
                12601,
                "rieulmieumkorean",
                12603,
                "rieulpansioskorean",
                12652,
                "rieulparenkorean",
                12803,
                "rieulphieuphkorean",
                12607,
                "rieulpieupkorean",
                12604,
                "rieulpieupsioskorean",
                12651,
                "rieulsioskorean",
                12605,
                "rieulthieuthkorean",
                12606,
                "rieultikeutkorean",
                12650,
                "rieulyeorinhieuhkorean",
                12653,
                "rightangle",
                8735,
                "righttackbelowcmb",
                793,
                "righttriangle",
                8895,
                "rihiragana",
                12426,
                "rikatakana",
                12522,
                "rikatakanahalfwidth",
                65432,
                "ring",
                730,
                "ringbelowcmb",
                805,
                "ringcmb",
                778,
                "ringhalfleft",
                703,
                "ringhalfleftarmenian",
                1369,
                "ringhalfleftbelowcmb",
                796,
                "ringhalfleftcentered",
                723,
                "ringhalfright",
                702,
                "ringhalfrightbelowcmb",
                825,
                "ringhalfrightcentered",
                722,
                "rinvertedbreve",
                531,
                "rittorusquare",
                13137,
                "rlinebelow",
                7775,
                "rlongleg",
                636,
                "rlonglegturned",
                634,
                "rmonospace",
                65362,
                "rohiragana",
                12429,
                "rokatakana",
                12525,
                "rokatakanahalfwidth",
                65435,
                "roruathai",
                3619,
                "rparen",
                9389,
                "rrabengali",
                2524,
                "rradeva",
                2353,
                "rragurmukhi",
                2652,
                "rreharabic",
                1681,
                "rrehfinalarabic",
                64397,
                "rrvocalicbengali",
                2528,
                "rrvocalicdeva",
                2400,
                "rrvocalicgujarati",
                2784,
                "rrvocalicvowelsignbengali",
                2500,
                "rrvocalicvowelsigndeva",
                2372,
                "rrvocalicvowelsigngujarati",
                2756,
                "rsuperior",
                63217,
                "rtblock",
                9616,
                "rturned",
                633,
                "rturnedsuperior",
                692,
                "ruhiragana",
                12427,
                "rukatakana",
                12523,
                "rukatakanahalfwidth",
                65433,
                "rupeemarkbengali",
                2546,
                "rupeesignbengali",
                2547,
                "rupiah",
                63197,
                "ruthai",
                3620,
                "rvocalicbengali",
                2443,
                "rvocalicdeva",
                2315,
                "rvocalicgujarati",
                2699,
                "rvocalicvowelsignbengali",
                2499,
                "rvocalicvowelsigndeva",
                2371,
                "rvocalicvowelsigngujarati",
                2755,
                "s",
                115,
                "sabengali",
                2488,
                "sacute",
                347,
                "sacutedotaccent",
                7781,
                "sadarabic",
                1589,
                "sadeva",
                2360,
                "sadfinalarabic",
                65210,
                "sadinitialarabic",
                65211,
                "sadmedialarabic",
                65212,
                "sagujarati",
                2744,
                "sagurmukhi",
                2616,
                "sahiragana",
                12373,
                "sakatakana",
                12469,
                "sakatakanahalfwidth",
                65403,
                "sallallahoualayhewasallamarabic",
                65018,
                "samekh",
                1505,
                "samekhdagesh",
                64321,
                "samekhdageshhebrew",
                64321,
                "samekhhebrew",
                1505,
                "saraaathai",
                3634,
                "saraaethai",
                3649,
                "saraaimaimalaithai",
                3652,
                "saraaimaimuanthai",
                3651,
                "saraamthai",
                3635,
                "saraathai",
                3632,
                "saraethai",
                3648,
                "saraiileftthai",
                63622,
                "saraiithai",
                3637,
                "saraileftthai",
                63621,
                "saraithai",
                3636,
                "saraothai",
                3650,
                "saraueeleftthai",
                63624,
                "saraueethai",
                3639,
                "saraueleftthai",
                63623,
                "sarauethai",
                3638,
                "sarauthai",
                3640,
                "sarauuthai",
                3641,
                "sbopomofo",
                12569,
                "scaron",
                353,
                "scarondotaccent",
                7783,
                "scedilla",
                351,
                "schwa",
                601,
                "schwacyrillic",
                1241,
                "schwadieresiscyrillic",
                1243,
                "schwahook",
                602,
                "scircle",
                9442,
                "scircumflex",
                349,
                "scommaaccent",
                537,
                "sdotaccent",
                7777,
                "sdotbelow",
                7779,
                "sdotbelowdotaccent",
                7785,
                "seagullbelowcmb",
                828,
                "second",
                8243,
                "secondtonechinese",
                714,
                "section",
                167,
                "seenarabic",
                1587,
                "seenfinalarabic",
                65202,
                "seeninitialarabic",
                65203,
                "seenmedialarabic",
                65204,
                "segol",
                1462,
                "segol13",
                1462,
                "segol1f",
                1462,
                "segol2c",
                1462,
                "segolhebrew",
                1462,
                "segolnarrowhebrew",
                1462,
                "segolquarterhebrew",
                1462,
                "segoltahebrew",
                1426,
                "segolwidehebrew",
                1462,
                "seharmenian",
                1405,
                "sehiragana",
                12379,
                "sekatakana",
                12475,
                "sekatakanahalfwidth",
                65406,
                "semicolon",
                59,
                "semicolonarabic",
                1563,
                "semicolonmonospace",
                65307,
                "semicolonsmall",
                65108,
                "semivoicedmarkkana",
                12444,
                "semivoicedmarkkanahalfwidth",
                65439,
                "sentisquare",
                13090,
                "sentosquare",
                13091,
                "seven",
                55,
                "sevenarabic",
                1639,
                "sevenbengali",
                2541,
                "sevencircle",
                9318,
                "sevencircleinversesansserif",
                10128,
                "sevendeva",
                2413,
                "seveneighths",
                8542,
                "sevengujarati",
                2797,
                "sevengurmukhi",
                2669,
                "sevenhackarabic",
                1639,
                "sevenhangzhou",
                12327,
                "sevenideographicparen",
                12838,
                "seveninferior",
                8327,
                "sevenmonospace",
                65303,
                "sevenoldstyle",
                63287,
                "sevenparen",
                9338,
                "sevenperiod",
                9358,
                "sevenpersian",
                1783,
                "sevenroman",
                8566,
                "sevensuperior",
                8311,
                "seventeencircle",
                9328,
                "seventeenparen",
                9348,
                "seventeenperiod",
                9368,
                "seventhai",
                3671,
                "sfthyphen",
                173,
                "shaarmenian",
                1399,
                "shabengali",
                2486,
                "shacyrillic",
                1096,
                "shaddaarabic",
                1617,
                "shaddadammaarabic",
                64609,
                "shaddadammatanarabic",
                64606,
                "shaddafathaarabic",
                64608,
                "shaddakasraarabic",
                64610,
                "shaddakasratanarabic",
                64607,
                "shade",
                9618,
                "shadedark",
                9619,
                "shadelight",
                9617,
                "shademedium",
                9618,
                "shadeva",
                2358,
                "shagujarati",
                2742,
                "shagurmukhi",
                2614,
                "shalshelethebrew",
                1427,
                "shbopomofo",
                12565,
                "shchacyrillic",
                1097,
                "sheenarabic",
                1588,
                "sheenfinalarabic",
                65206,
                "sheeninitialarabic",
                65207,
                "sheenmedialarabic",
                65208,
                "sheicoptic",
                995,
                "sheqel",
                8362,
                "sheqelhebrew",
                8362,
                "sheva",
                1456,
                "sheva115",
                1456,
                "sheva15",
                1456,
                "sheva22",
                1456,
                "sheva2e",
                1456,
                "shevahebrew",
                1456,
                "shevanarrowhebrew",
                1456,
                "shevaquarterhebrew",
                1456,
                "shevawidehebrew",
                1456,
                "shhacyrillic",
                1211,
                "shimacoptic",
                1005,
                "shin",
                1513,
                "shindagesh",
                64329,
                "shindageshhebrew",
                64329,
                "shindageshshindot",
                64300,
                "shindageshshindothebrew",
                64300,
                "shindageshsindot",
                64301,
                "shindageshsindothebrew",
                64301,
                "shindothebrew",
                1473,
                "shinhebrew",
                1513,
                "shinshindot",
                64298,
                "shinshindothebrew",
                64298,
                "shinsindot",
                64299,
                "shinsindothebrew",
                64299,
                "shook",
                642,
                "sigma",
                963,
                "sigma1",
                962,
                "sigmafinal",
                962,
                "sigmalunatesymbolgreek",
                1010,
                "sihiragana",
                12375,
                "sikatakana",
                12471,
                "sikatakanahalfwidth",
                65404,
                "siluqhebrew",
                1469,
                "siluqlefthebrew",
                1469,
                "similar",
                8764,
                "sindothebrew",
                1474,
                "siosacirclekorean",
                12916,
                "siosaparenkorean",
                12820,
                "sioscieuckorean",
                12670,
                "sioscirclekorean",
                12902,
                "sioskiyeokkorean",
                12666,
                "sioskorean",
                12613,
                "siosnieunkorean",
                12667,
                "siosparenkorean",
                12806,
                "siospieupkorean",
                12669,
                "siostikeutkorean",
                12668,
                "six",
                54,
                "sixarabic",
                1638,
                "sixbengali",
                2540,
                "sixcircle",
                9317,
                "sixcircleinversesansserif",
                10127,
                "sixdeva",
                2412,
                "sixgujarati",
                2796,
                "sixgurmukhi",
                2668,
                "sixhackarabic",
                1638,
                "sixhangzhou",
                12326,
                "sixideographicparen",
                12837,
                "sixinferior",
                8326,
                "sixmonospace",
                65302,
                "sixoldstyle",
                63286,
                "sixparen",
                9337,
                "sixperiod",
                9357,
                "sixpersian",
                1782,
                "sixroman",
                8565,
                "sixsuperior",
                8310,
                "sixteencircle",
                9327,
                "sixteencurrencydenominatorbengali",
                2553,
                "sixteenparen",
                9347,
                "sixteenperiod",
                9367,
                "sixthai",
                3670,
                "slash",
                47,
                "slashmonospace",
                65295,
                "slong",
                383,
                "slongdotaccent",
                7835,
                "smileface",
                9786,
                "smonospace",
                65363,
                "sofpasuqhebrew",
                1475,
                "softhyphen",
                173,
                "softsigncyrillic",
                1100,
                "sohiragana",
                12381,
                "sokatakana",
                12477,
                "sokatakanahalfwidth",
                65407,
                "soliduslongoverlaycmb",
                824,
                "solidusshortoverlaycmb",
                823,
                "sorusithai",
                3625,
                "sosalathai",
                3624,
                "sosothai",
                3595,
                "sosuathai",
                3626,
                "space",
                32,
                "spacehackarabic",
                32,
                "spade",
                9824,
                "spadesuitblack",
                9824,
                "spadesuitwhite",
                9828,
                "sparen",
                9390,
                "squarebelowcmb",
                827,
                "squarecc",
                13252,
                "squarecm",
                13213,
                "squarediagonalcrosshatchfill",
                9641,
                "squarehorizontalfill",
                9636,
                "squarekg",
                13199,
                "squarekm",
                13214,
                "squarekmcapital",
                13262,
                "squareln",
                13265,
                "squarelog",
                13266,
                "squaremg",
                13198,
                "squaremil",
                13269,
                "squaremm",
                13212,
                "squaremsquared",
                13217,
                "squareorthogonalcrosshatchfill",
                9638,
                "squareupperlefttolowerrightfill",
                9639,
                "squareupperrighttolowerleftfill",
                9640,
                "squareverticalfill",
                9637,
                "squarewhitewithsmallblack",
                9635,
                "srsquare",
                13275,
                "ssabengali",
                2487,
                "ssadeva",
                2359,
                "ssagujarati",
                2743,
                "ssangcieuckorean",
                12617,
                "ssanghieuhkorean",
                12677,
                "ssangieungkorean",
                12672,
                "ssangkiyeokkorean",
                12594,
                "ssangnieunkorean",
                12645,
                "ssangpieupkorean",
                12611,
                "ssangsioskorean",
                12614,
                "ssangtikeutkorean",
                12600,
                "ssuperior",
                63218,
                "sterling",
                163,
                "sterlingmonospace",
                65505,
                "strokelongoverlaycmb",
                822,
                "strokeshortoverlaycmb",
                821,
                "subset",
                8834,
                "subsetnotequal",
                8842,
                "subsetorequal",
                8838,
                "succeeds",
                8827,
                "suchthat",
                8715,
                "suhiragana",
                12377,
                "sukatakana",
                12473,
                "sukatakanahalfwidth",
                65405,
                "sukunarabic",
                1618,
                "summation",
                8721,
                "sun",
                9788,
                "superset",
                8835,
                "supersetnotequal",
                8843,
                "supersetorequal",
                8839,
                "svsquare",
                13276,
                "syouwaerasquare",
                13180,
                "t",
                116,
                "tabengali",
                2468,
                "tackdown",
                8868,
                "tackleft",
                8867,
                "tadeva",
                2340,
                "tagujarati",
                2724,
                "tagurmukhi",
                2596,
                "taharabic",
                1591,
                "tahfinalarabic",
                65218,
                "tahinitialarabic",
                65219,
                "tahiragana",
                12383,
                "tahmedialarabic",
                65220,
                "taisyouerasquare",
                13181,
                "takatakana",
                12479,
                "takatakanahalfwidth",
                65408,
                "tatweelarabic",
                1600,
                "tau",
                964,
                "tav",
                1514,
                "tavdages",
                64330,
                "tavdagesh",
                64330,
                "tavdageshhebrew",
                64330,
                "tavhebrew",
                1514,
                "tbar",
                359,
                "tbopomofo",
                12554,
                "tcaron",
                357,
                "tccurl",
                680,
                "tcedilla",
                355,
                "tcheharabic",
                1670,
                "tchehfinalarabic",
                64379,
                "tchehinitialarabic",
                64380,
                "tchehmedialarabic",
                64381,
                "tcircle",
                9443,
                "tcircumflexbelow",
                7793,
                "tcommaaccent",
                355,
                "tdieresis",
                7831,
                "tdotaccent",
                7787,
                "tdotbelow",
                7789,
                "tecyrillic",
                1090,
                "tedescendercyrillic",
                1197,
                "teharabic",
                1578,
                "tehfinalarabic",
                65174,
                "tehhahinitialarabic",
                64674,
                "tehhahisolatedarabic",
                64524,
                "tehinitialarabic",
                65175,
                "tehiragana",
                12390,
                "tehjeeminitialarabic",
                64673,
                "tehjeemisolatedarabic",
                64523,
                "tehmarbutaarabic",
                1577,
                "tehmarbutafinalarabic",
                65172,
                "tehmedialarabic",
                65176,
                "tehmeeminitialarabic",
                64676,
                "tehmeemisolatedarabic",
                64526,
                "tehnoonfinalarabic",
                64627,
                "tekatakana",
                12486,
                "tekatakanahalfwidth",
                65411,
                "telephone",
                8481,
                "telephoneblack",
                9742,
                "telishagedolahebrew",
                1440,
                "telishaqetanahebrew",
                1449,
                "tencircle",
                9321,
                "tenideographicparen",
                12841,
                "tenparen",
                9341,
                "tenperiod",
                9361,
                "tenroman",
                8569,
                "tesh",
                679,
                "tet",
                1496,
                "tetdagesh",
                64312,
                "tetdageshhebrew",
                64312,
                "tethebrew",
                1496,
                "tetsecyrillic",
                1205,
                "tevirhebrew",
                1435,
                "tevirlefthebrew",
                1435,
                "thabengali",
                2469,
                "thadeva",
                2341,
                "thagujarati",
                2725,
                "thagurmukhi",
                2597,
                "thalarabic",
                1584,
                "thalfinalarabic",
                65196,
                "thanthakhatlowleftthai",
                63640,
                "thanthakhatlowrightthai",
                63639,
                "thanthakhatthai",
                3660,
                "thanthakhatupperleftthai",
                63638,
                "theharabic",
                1579,
                "thehfinalarabic",
                65178,
                "thehinitialarabic",
                65179,
                "thehmedialarabic",
                65180,
                "thereexists",
                8707,
                "therefore",
                8756,
                "theta",
                952,
                "theta1",
                977,
                "thetasymbolgreek",
                977,
                "thieuthacirclekorean",
                12921,
                "thieuthaparenkorean",
                12825,
                "thieuthcirclekorean",
                12907,
                "thieuthkorean",
                12620,
                "thieuthparenkorean",
                12811,
                "thirteencircle",
                9324,
                "thirteenparen",
                9344,
                "thirteenperiod",
                9364,
                "thonangmonthothai",
                3601,
                "thook",
                429,
                "thophuthaothai",
                3602,
                "thorn",
                254,
                "thothahanthai",
                3607,
                "thothanthai",
                3600,
                "thothongthai",
                3608,
                "thothungthai",
                3606,
                "thousandcyrillic",
                1154,
                "thousandsseparatorarabic",
                1644,
                "thousandsseparatorpersian",
                1644,
                "three",
                51,
                "threearabic",
                1635,
                "threebengali",
                2537,
                "threecircle",
                9314,
                "threecircleinversesansserif",
                10124,
                "threedeva",
                2409,
                "threeeighths",
                8540,
                "threegujarati",
                2793,
                "threegurmukhi",
                2665,
                "threehackarabic",
                1635,
                "threehangzhou",
                12323,
                "threeideographicparen",
                12834,
                "threeinferior",
                8323,
                "threemonospace",
                65299,
                "threenumeratorbengali",
                2550,
                "threeoldstyle",
                63283,
                "threeparen",
                9334,
                "threeperiod",
                9354,
                "threepersian",
                1779,
                "threequarters",
                190,
                "threequartersemdash",
                63198,
                "threeroman",
                8562,
                "threesuperior",
                179,
                "threethai",
                3667,
                "thzsquare",
                13204,
                "tihiragana",
                12385,
                "tikatakana",
                12481,
                "tikatakanahalfwidth",
                65409,
                "tikeutacirclekorean",
                12912,
                "tikeutaparenkorean",
                12816,
                "tikeutcirclekorean",
                12898,
                "tikeutkorean",
                12599,
                "tikeutparenkorean",
                12802,
                "tilde",
                732,
                "tildebelowcmb",
                816,
                "tildecmb",
                771,
                "tildecomb",
                771,
                "tildedoublecmb",
                864,
                "tildeoperator",
                8764,
                "tildeoverlaycmb",
                820,
                "tildeverticalcmb",
                830,
                "timescircle",
                8855,
                "tipehahebrew",
                1430,
                "tipehalefthebrew",
                1430,
                "tippigurmukhi",
                2672,
                "titlocyrilliccmb",
                1155,
                "tiwnarmenian",
                1407,
                "tlinebelow",
                7791,
                "tmonospace",
                65364,
                "toarmenian",
                1385,
                "tohiragana",
                12392,
                "tokatakana",
                12488,
                "tokatakanahalfwidth",
                65412,
                "tonebarextrahighmod",
                741,
                "tonebarextralowmod",
                745,
                "tonebarhighmod",
                742,
                "tonebarlowmod",
                744,
                "tonebarmidmod",
                743,
                "tonefive",
                445,
                "tonesix",
                389,
                "tonetwo",
                424,
                "tonos",
                900,
                "tonsquare",
                13095,
                "topatakthai",
                3599,
                "tortoiseshellbracketleft",
                12308,
                "tortoiseshellbracketleftsmall",
                65117,
                "tortoiseshellbracketleftvertical",
                65081,
                "tortoiseshellbracketright",
                12309,
                "tortoiseshellbracketrightsmall",
                65118,
                "tortoiseshellbracketrightvertical",
                65082,
                "totaothai",
                3605,
                "tpalatalhook",
                427,
                "tparen",
                9391,
                "trademark",
                8482,
                "trademarksans",
                63722,
                "trademarkserif",
                63195,
                "tretroflexhook",
                648,
                "triagdn",
                9660,
                "triaglf",
                9668,
                "triagrt",
                9658,
                "triagup",
                9650,
                "ts",
                678,
                "tsadi",
                1510,
                "tsadidagesh",
                64326,
                "tsadidageshhebrew",
                64326,
                "tsadihebrew",
                1510,
                "tsecyrillic",
                1094,
                "tsere",
                1461,
                "tsere12",
                1461,
                "tsere1e",
                1461,
                "tsere2b",
                1461,
                "tserehebrew",
                1461,
                "tserenarrowhebrew",
                1461,
                "tserequarterhebrew",
                1461,
                "tserewidehebrew",
                1461,
                "tshecyrillic",
                1115,
                "tsuperior",
                63219,
                "ttabengali",
                2463,
                "ttadeva",
                2335,
                "ttagujarati",
                2719,
                "ttagurmukhi",
                2591,
                "tteharabic",
                1657,
                "ttehfinalarabic",
                64359,
                "ttehinitialarabic",
                64360,
                "ttehmedialarabic",
                64361,
                "tthabengali",
                2464,
                "tthadeva",
                2336,
                "tthagujarati",
                2720,
                "tthagurmukhi",
                2592,
                "tturned",
                647,
                "tuhiragana",
                12388,
                "tukatakana",
                12484,
                "tukatakanahalfwidth",
                65410,
                "tusmallhiragana",
                12387,
                "tusmallkatakana",
                12483,
                "tusmallkatakanahalfwidth",
                65391,
                "twelvecircle",
                9323,
                "twelveparen",
                9343,
                "twelveperiod",
                9363,
                "twelveroman",
                8571,
                "twentycircle",
                9331,
                "twentyhangzhou",
                21316,
                "twentyparen",
                9351,
                "twentyperiod",
                9371,
                "two",
                50,
                "twoarabic",
                1634,
                "twobengali",
                2536,
                "twocircle",
                9313,
                "twocircleinversesansserif",
                10123,
                "twodeva",
                2408,
                "twodotenleader",
                8229,
                "twodotleader",
                8229,
                "twodotleadervertical",
                65072,
                "twogujarati",
                2792,
                "twogurmukhi",
                2664,
                "twohackarabic",
                1634,
                "twohangzhou",
                12322,
                "twoideographicparen",
                12833,
                "twoinferior",
                8322,
                "twomonospace",
                65298,
                "twonumeratorbengali",
                2549,
                "twooldstyle",
                63282,
                "twoparen",
                9333,
                "twoperiod",
                9353,
                "twopersian",
                1778,
                "tworoman",
                8561,
                "twostroke",
                443,
                "twosuperior",
                178,
                "twothai",
                3666,
                "twothirds",
                8532,
                "u",
                117,
                "uacute",
                250,
                "ubar",
                649,
                "ubengali",
                2441,
                "ubopomofo",
                12584,
                "ubreve",
                365,
                "ucaron",
                468,
                "ucircle",
                9444,
                "ucircumflex",
                251,
                "ucircumflexbelow",
                7799,
                "ucyrillic",
                1091,
                "udattadeva",
                2385,
                "udblacute",
                369,
                "udblgrave",
                533,
                "udeva",
                2313,
                "udieresis",
                252,
                "udieresisacute",
                472,
                "udieresisbelow",
                7795,
                "udieresiscaron",
                474,
                "udieresiscyrillic",
                1265,
                "udieresisgrave",
                476,
                "udieresismacron",
                470,
                "udotbelow",
                7909,
                "ugrave",
                249,
                "ugujarati",
                2697,
                "ugurmukhi",
                2569,
                "uhiragana",
                12358,
                "uhookabove",
                7911,
                "uhorn",
                432,
                "uhornacute",
                7913,
                "uhorndotbelow",
                7921,
                "uhorngrave",
                7915,
                "uhornhookabove",
                7917,
                "uhorntilde",
                7919,
                "uhungarumlaut",
                369,
                "uhungarumlautcyrillic",
                1267,
                "uinvertedbreve",
                535,
                "ukatakana",
                12454,
                "ukatakanahalfwidth",
                65395,
                "ukcyrillic",
                1145,
                "ukorean",
                12636,
                "umacron",
                363,
                "umacroncyrillic",
                1263,
                "umacrondieresis",
                7803,
                "umatragurmukhi",
                2625,
                "umonospace",
                65365,
                "underscore",
                95,
                "underscoredbl",
                8215,
                "underscoremonospace",
                65343,
                "underscorevertical",
                65075,
                "underscorewavy",
                65103,
                "union",
                8746,
                "universal",
                8704,
                "uogonek",
                371,
                "uparen",
                9392,
                "upblock",
                9600,
                "upperdothebrew",
                1476,
                "upsilon",
                965,
                "upsilondieresis",
                971,
                "upsilondieresistonos",
                944,
                "upsilonlatin",
                650,
                "upsilontonos",
                973,
                "uptackbelowcmb",
                797,
                "uptackmod",
                724,
                "uragurmukhi",
                2675,
                "uring",
                367,
                "ushortcyrillic",
                1118,
                "usmallhiragana",
                12357,
                "usmallkatakana",
                12453,
                "usmallkatakanahalfwidth",
                65385,
                "ustraightcyrillic",
                1199,
                "ustraightstrokecyrillic",
                1201,
                "utilde",
                361,
                "utildeacute",
                7801,
                "utildebelow",
                7797,
                "uubengali",
                2442,
                "uudeva",
                2314,
                "uugujarati",
                2698,
                "uugurmukhi",
                2570,
                "uumatragurmukhi",
                2626,
                "uuvowelsignbengali",
                2498,
                "uuvowelsigndeva",
                2370,
                "uuvowelsigngujarati",
                2754,
                "uvowelsignbengali",
                2497,
                "uvowelsigndeva",
                2369,
                "uvowelsigngujarati",
                2753,
                "v",
                118,
                "vadeva",
                2357,
                "vagujarati",
                2741,
                "vagurmukhi",
                2613,
                "vakatakana",
                12535,
                "vav",
                1493,
                "vavdagesh",
                64309,
                "vavdagesh65",
                64309,
                "vavdageshhebrew",
                64309,
                "vavhebrew",
                1493,
                "vavholam",
                64331,
                "vavholamhebrew",
                64331,
                "vavvavhebrew",
                1520,
                "vavyodhebrew",
                1521,
                "vcircle",
                9445,
                "vdotbelow",
                7807,
                "vecyrillic",
                1074,
                "veharabic",
                1700,
                "vehfinalarabic",
                64363,
                "vehinitialarabic",
                64364,
                "vehmedialarabic",
                64365,
                "vekatakana",
                12537,
                "venus",
                9792,
                "verticalbar",
                124,
                "verticallineabovecmb",
                781,
                "verticallinebelowcmb",
                809,
                "verticallinelowmod",
                716,
                "verticallinemod",
                712,
                "vewarmenian",
                1406,
                "vhook",
                651,
                "vikatakana",
                12536,
                "viramabengali",
                2509,
                "viramadeva",
                2381,
                "viramagujarati",
                2765,
                "visargabengali",
                2435,
                "visargadeva",
                2307,
                "visargagujarati",
                2691,
                "vmonospace",
                65366,
                "voarmenian",
                1400,
                "voicediterationhiragana",
                12446,
                "voicediterationkatakana",
                12542,
                "voicedmarkkana",
                12443,
                "voicedmarkkanahalfwidth",
                65438,
                "vokatakana",
                12538,
                "vparen",
                9393,
                "vtilde",
                7805,
                "vturned",
                652,
                "vuhiragana",
                12436,
                "vukatakana",
                12532,
                "w",
                119,
                "wacute",
                7811,
                "waekorean",
                12633,
                "wahiragana",
                12431,
                "wakatakana",
                12527,
                "wakatakanahalfwidth",
                65436,
                "wakorean",
                12632,
                "wasmallhiragana",
                12430,
                "wasmallkatakana",
                12526,
                "wattosquare",
                13143,
                "wavedash",
                12316,
                "wavyunderscorevertical",
                65076,
                "wawarabic",
                1608,
                "wawfinalarabic",
                65262,
                "wawhamzaabovearabic",
                1572,
                "wawhamzaabovefinalarabic",
                65158,
                "wbsquare",
                13277,
                "wcircle",
                9446,
                "wcircumflex",
                373,
                "wdieresis",
                7813,
                "wdotaccent",
                7815,
                "wdotbelow",
                7817,
                "wehiragana",
                12433,
                "weierstrass",
                8472,
                "wekatakana",
                12529,
                "wekorean",
                12638,
                "weokorean",
                12637,
                "wgrave",
                7809,
                "whitebullet",
                9702,
                "whitecircle",
                9675,
                "whitecircleinverse",
                9689,
                "whitecornerbracketleft",
                12302,
                "whitecornerbracketleftvertical",
                65091,
                "whitecornerbracketright",
                12303,
                "whitecornerbracketrightvertical",
                65092,
                "whitediamond",
                9671,
                "whitediamondcontainingblacksmalldiamond",
                9672,
                "whitedownpointingsmalltriangle",
                9663,
                "whitedownpointingtriangle",
                9661,
                "whiteleftpointingsmalltriangle",
                9667,
                "whiteleftpointingtriangle",
                9665,
                "whitelenticularbracketleft",
                12310,
                "whitelenticularbracketright",
                12311,
                "whiterightpointingsmalltriangle",
                9657,
                "whiterightpointingtriangle",
                9655,
                "whitesmallsquare",
                9643,
                "whitesmilingface",
                9786,
                "whitesquare",
                9633,
                "whitestar",
                9734,
                "whitetelephone",
                9743,
                "whitetortoiseshellbracketleft",
                12312,
                "whitetortoiseshellbracketright",
                12313,
                "whiteuppointingsmalltriangle",
                9653,
                "whiteuppointingtriangle",
                9651,
                "wihiragana",
                12432,
                "wikatakana",
                12528,
                "wikorean",
                12639,
                "wmonospace",
                65367,
                "wohiragana",
                12434,
                "wokatakana",
                12530,
                "wokatakanahalfwidth",
                65382,
                "won",
                8361,
                "wonmonospace",
                65510,
                "wowaenthai",
                3623,
                "wparen",
                9394,
                "wring",
                7832,
                "wsuperior",
                695,
                "wturned",
                653,
                "wynn",
                447,
                "x",
                120,
                "xabovecmb",
                829,
                "xbopomofo",
                12562,
                "xcircle",
                9447,
                "xdieresis",
                7821,
                "xdotaccent",
                7819,
                "xeharmenian",
                1389,
                "xi",
                958,
                "xmonospace",
                65368,
                "xparen",
                9395,
                "xsuperior",
                739,
                "y",
                121,
                "yaadosquare",
                13134,
                "yabengali",
                2479,
                "yacute",
                253,
                "yadeva",
                2351,
                "yaekorean",
                12626,
                "yagujarati",
                2735,
                "yagurmukhi",
                2607,
                "yahiragana",
                12420,
                "yakatakana",
                12516,
                "yakatakanahalfwidth",
                65428,
                "yakorean",
                12625,
                "yamakkanthai",
                3662,
                "yasmallhiragana",
                12419,
                "yasmallkatakana",
                12515,
                "yasmallkatakanahalfwidth",
                65388,
                "yatcyrillic",
                1123,
                "ycircle",
                9448,
                "ycircumflex",
                375,
                "ydieresis",
                255,
                "ydotaccent",
                7823,
                "ydotbelow",
                7925,
                "yeharabic",
                1610,
                "yehbarreearabic",
                1746,
                "yehbarreefinalarabic",
                64431,
                "yehfinalarabic",
                65266,
                "yehhamzaabovearabic",
                1574,
                "yehhamzaabovefinalarabic",
                65162,
                "yehhamzaaboveinitialarabic",
                65163,
                "yehhamzaabovemedialarabic",
                65164,
                "yehinitialarabic",
                65267,
                "yehmedialarabic",
                65268,
                "yehmeeminitialarabic",
                64733,
                "yehmeemisolatedarabic",
                64600,
                "yehnoonfinalarabic",
                64660,
                "yehthreedotsbelowarabic",
                1745,
                "yekorean",
                12630,
                "yen",
                165,
                "yenmonospace",
                65509,
                "yeokorean",
                12629,
                "yeorinhieuhkorean",
                12678,
                "yerahbenyomohebrew",
                1450,
                "yerahbenyomolefthebrew",
                1450,
                "yericyrillic",
                1099,
                "yerudieresiscyrillic",
                1273,
                "yesieungkorean",
                12673,
                "yesieungpansioskorean",
                12675,
                "yesieungsioskorean",
                12674,
                "yetivhebrew",
                1434,
                "ygrave",
                7923,
                "yhook",
                436,
                "yhookabove",
                7927,
                "yiarmenian",
                1397,
                "yicyrillic",
                1111,
                "yikorean",
                12642,
                "yinyang",
                9775,
                "yiwnarmenian",
                1410,
                "ymonospace",
                65369,
                "yod",
                1497,
                "yoddagesh",
                64313,
                "yoddageshhebrew",
                64313,
                "yodhebrew",
                1497,
                "yodyodhebrew",
                1522,
                "yodyodpatahhebrew",
                64287,
                "yohiragana",
                12424,
                "yoikorean",
                12681,
                "yokatakana",
                12520,
                "yokatakanahalfwidth",
                65430,
                "yokorean",
                12635,
                "yosmallhiragana",
                12423,
                "yosmallkatakana",
                12519,
                "yosmallkatakanahalfwidth",
                65390,
                "yotgreek",
                1011,
                "yoyaekorean",
                12680,
                "yoyakorean",
                12679,
                "yoyakthai",
                3618,
                "yoyingthai",
                3597,
                "yparen",
                9396,
                "ypogegrammeni",
                890,
                "ypogegrammenigreekcmb",
                837,
                "yr",
                422,
                "yring",
                7833,
                "ysuperior",
                696,
                "ytilde",
                7929,
                "yturned",
                654,
                "yuhiragana",
                12422,
                "yuikorean",
                12684,
                "yukatakana",
                12518,
                "yukatakanahalfwidth",
                65429,
                "yukorean",
                12640,
                "yusbigcyrillic",
                1131,
                "yusbigiotifiedcyrillic",
                1133,
                "yuslittlecyrillic",
                1127,
                "yuslittleiotifiedcyrillic",
                1129,
                "yusmallhiragana",
                12421,
                "yusmallkatakana",
                12517,
                "yusmallkatakanahalfwidth",
                65389,
                "yuyekorean",
                12683,
                "yuyeokorean",
                12682,
                "yyabengali",
                2527,
                "yyadeva",
                2399,
                "z",
                122,
                "zaarmenian",
                1382,
                "zacute",
                378,
                "zadeva",
                2395,
                "zagurmukhi",
                2651,
                "zaharabic",
                1592,
                "zahfinalarabic",
                65222,
                "zahinitialarabic",
                65223,
                "zahiragana",
                12374,
                "zahmedialarabic",
                65224,
                "zainarabic",
                1586,
                "zainfinalarabic",
                65200,
                "zakatakana",
                12470,
                "zaqefgadolhebrew",
                1429,
                "zaqefqatanhebrew",
                1428,
                "zarqahebrew",
                1432,
                "zayin",
                1494,
                "zayindagesh",
                64310,
                "zayindageshhebrew",
                64310,
                "zayinhebrew",
                1494,
                "zbopomofo",
                12567,
                "zcaron",
                382,
                "zcircle",
                9449,
                "zcircumflex",
                7825,
                "zcurl",
                657,
                "zdot",
                380,
                "zdotaccent",
                380,
                "zdotbelow",
                7827,
                "zecyrillic",
                1079,
                "zedescendercyrillic",
                1177,
                "zedieresiscyrillic",
                1247,
                "zehiragana",
                12380,
                "zekatakana",
                12476,
                "zero",
                48,
                "zeroarabic",
                1632,
                "zerobengali",
                2534,
                "zerodeva",
                2406,
                "zerogujarati",
                2790,
                "zerogurmukhi",
                2662,
                "zerohackarabic",
                1632,
                "zeroinferior",
                8320,
                "zeromonospace",
                65296,
                "zerooldstyle",
                63280,
                "zeropersian",
                1776,
                "zerosuperior",
                8304,
                "zerothai",
                3664,
                "zerowidthjoiner",
                65279,
                "zerowidthnonjoiner",
                8204,
                "zerowidthspace",
                8203,
                "zeta",
                950,
                "zhbopomofo",
                12563,
                "zhearmenian",
                1386,
                "zhebrevecyrillic",
                1218,
                "zhecyrillic",
                1078,
                "zhedescendercyrillic",
                1175,
                "zhedieresiscyrillic",
                1245,
                "zihiragana",
                12376,
                "zikatakana",
                12472,
                "zinorhebrew",
                1454,
                "zlinebelow",
                7829,
                "zmonospace",
                65370,
                "zohiragana",
                12382,
                "zokatakana",
                12478,
                "zparen",
                9397,
                "zretroflexhook",
                656,
                "zstroke",
                438,
                "zuhiragana",
                12378,
                "zukatakana",
                12474,
                ".notdef",
                0,
                "angbracketleftbig",
                9001,
                "angbracketleftBig",
                9001,
                "angbracketleftbigg",
                9001,
                "angbracketleftBigg",
                9001,
                "angbracketrightBig",
                9002,
                "angbracketrightbig",
                9002,
                "angbracketrightBigg",
                9002,
                "angbracketrightbigg",
                9002,
                "arrowhookleft",
                8618,
                "arrowhookright",
                8617,
                "arrowlefttophalf",
                8636,
                "arrowleftbothalf",
                8637,
                "arrownortheast",
                8599,
                "arrownorthwest",
                8598,
                "arrowrighttophalf",
                8640,
                "arrowrightbothalf",
                8641,
                "arrowsoutheast",
                8600,
                "arrowsouthwest",
                8601,
                "backslashbig",
                8726,
                "backslashBig",
                8726,
                "backslashBigg",
                8726,
                "backslashbigg",
                8726,
                "bardbl",
                8214,
                "bracehtipdownleft",
                65079,
                "bracehtipdownright",
                65079,
                "bracehtipupleft",
                65080,
                "bracehtipupright",
                65080,
                "braceleftBig",
                123,
                "braceleftbig",
                123,
                "braceleftbigg",
                123,
                "braceleftBigg",
                123,
                "bracerightBig",
                125,
                "bracerightbig",
                125,
                "bracerightbigg",
                125,
                "bracerightBigg",
                125,
                "bracketleftbig",
                91,
                "bracketleftBig",
                91,
                "bracketleftbigg",
                91,
                "bracketleftBigg",
                91,
                "bracketrightBig",
                93,
                "bracketrightbig",
                93,
                "bracketrightbigg",
                93,
                "bracketrightBigg",
                93,
                "ceilingleftbig",
                8968,
                "ceilingleftBig",
                8968,
                "ceilingleftBigg",
                8968,
                "ceilingleftbigg",
                8968,
                "ceilingrightbig",
                8969,
                "ceilingrightBig",
                8969,
                "ceilingrightbigg",
                8969,
                "ceilingrightBigg",
                8969,
                "circledotdisplay",
                8857,
                "circledottext",
                8857,
                "circlemultiplydisplay",
                8855,
                "circlemultiplytext",
                8855,
                "circleplusdisplay",
                8853,
                "circleplustext",
                8853,
                "contintegraldisplay",
                8750,
                "contintegraltext",
                8750,
                "coproductdisplay",
                8720,
                "coproducttext",
                8720,
                "floorleftBig",
                8970,
                "floorleftbig",
                8970,
                "floorleftbigg",
                8970,
                "floorleftBigg",
                8970,
                "floorrightbig",
                8971,
                "floorrightBig",
                8971,
                "floorrightBigg",
                8971,
                "floorrightbigg",
                8971,
                "hatwide",
                770,
                "hatwider",
                770,
                "hatwidest",
                770,
                "intercal",
                7488,
                "integraldisplay",
                8747,
                "integraltext",
                8747,
                "intersectiondisplay",
                8898,
                "intersectiontext",
                8898,
                "logicalanddisplay",
                8743,
                "logicalandtext",
                8743,
                "logicalordisplay",
                8744,
                "logicalortext",
                8744,
                "parenleftBig",
                40,
                "parenleftbig",
                40,
                "parenleftBigg",
                40,
                "parenleftbigg",
                40,
                "parenrightBig",
                41,
                "parenrightbig",
                41,
                "parenrightBigg",
                41,
                "parenrightbigg",
                41,
                "prime",
                8242,
                "productdisplay",
                8719,
                "producttext",
                8719,
                "radicalbig",
                8730,
                "radicalBig",
                8730,
                "radicalBigg",
                8730,
                "radicalbigg",
                8730,
                "radicalbt",
                8730,
                "radicaltp",
                8730,
                "radicalvertex",
                8730,
                "slashbig",
                47,
                "slashBig",
                47,
                "slashBigg",
                47,
                "slashbigg",
                47,
                "summationdisplay",
                8721,
                "summationtext",
                8721,
                "tildewide",
                732,
                "tildewider",
                732,
                "tildewidest",
                732,
                "uniondisplay",
                8899,
                "unionmultidisplay",
                8846,
                "unionmultitext",
                8846,
                "unionsqdisplay",
                8852,
                "unionsqtext",
                8852,
                "uniontext",
                8899,
                "vextenddouble",
                8741,
                "vextendsingle",
                8739,
              ];
            }),
            a = (0, n.getArrayLookupTableFactory)(function () {
              return [
                "space",
                32,
                "a1",
                9985,
                "a2",
                9986,
                "a202",
                9987,
                "a3",
                9988,
                "a4",
                9742,
                "a5",
                9990,
                "a119",
                9991,
                "a118",
                9992,
                "a117",
                9993,
                "a11",
                9755,
                "a12",
                9758,
                "a13",
                9996,
                "a14",
                9997,
                "a15",
                9998,
                "a16",
                9999,
                "a105",
                1e4,
                "a17",
                10001,
                "a18",
                10002,
                "a19",
                10003,
                "a20",
                10004,
                "a21",
                10005,
                "a22",
                10006,
                "a23",
                10007,
                "a24",
                10008,
                "a25",
                10009,
                "a26",
                10010,
                "a27",
                10011,
                "a28",
                10012,
                "a6",
                10013,
                "a7",
                10014,
                "a8",
                10015,
                "a9",
                10016,
                "a10",
                10017,
                "a29",
                10018,
                "a30",
                10019,
                "a31",
                10020,
                "a32",
                10021,
                "a33",
                10022,
                "a34",
                10023,
                "a35",
                9733,
                "a36",
                10025,
                "a37",
                10026,
                "a38",
                10027,
                "a39",
                10028,
                "a40",
                10029,
                "a41",
                10030,
                "a42",
                10031,
                "a43",
                10032,
                "a44",
                10033,
                "a45",
                10034,
                "a46",
                10035,
                "a47",
                10036,
                "a48",
                10037,
                "a49",
                10038,
                "a50",
                10039,
                "a51",
                10040,
                "a52",
                10041,
                "a53",
                10042,
                "a54",
                10043,
                "a55",
                10044,
                "a56",
                10045,
                "a57",
                10046,
                "a58",
                10047,
                "a59",
                10048,
                "a60",
                10049,
                "a61",
                10050,
                "a62",
                10051,
                "a63",
                10052,
                "a64",
                10053,
                "a65",
                10054,
                "a66",
                10055,
                "a67",
                10056,
                "a68",
                10057,
                "a69",
                10058,
                "a70",
                10059,
                "a71",
                9679,
                "a72",
                10061,
                "a73",
                9632,
                "a74",
                10063,
                "a203",
                10064,
                "a75",
                10065,
                "a204",
                10066,
                "a76",
                9650,
                "a77",
                9660,
                "a78",
                9670,
                "a79",
                10070,
                "a81",
                9687,
                "a82",
                10072,
                "a83",
                10073,
                "a84",
                10074,
                "a97",
                10075,
                "a98",
                10076,
                "a99",
                10077,
                "a100",
                10078,
                "a101",
                10081,
                "a102",
                10082,
                "a103",
                10083,
                "a104",
                10084,
                "a106",
                10085,
                "a107",
                10086,
                "a108",
                10087,
                "a112",
                9827,
                "a111",
                9830,
                "a110",
                9829,
                "a109",
                9824,
                "a120",
                9312,
                "a121",
                9313,
                "a122",
                9314,
                "a123",
                9315,
                "a124",
                9316,
                "a125",
                9317,
                "a126",
                9318,
                "a127",
                9319,
                "a128",
                9320,
                "a129",
                9321,
                "a130",
                10102,
                "a131",
                10103,
                "a132",
                10104,
                "a133",
                10105,
                "a134",
                10106,
                "a135",
                10107,
                "a136",
                10108,
                "a137",
                10109,
                "a138",
                10110,
                "a139",
                10111,
                "a140",
                10112,
                "a141",
                10113,
                "a142",
                10114,
                "a143",
                10115,
                "a144",
                10116,
                "a145",
                10117,
                "a146",
                10118,
                "a147",
                10119,
                "a148",
                10120,
                "a149",
                10121,
                "a150",
                10122,
                "a151",
                10123,
                "a152",
                10124,
                "a153",
                10125,
                "a154",
                10126,
                "a155",
                10127,
                "a156",
                10128,
                "a157",
                10129,
                "a158",
                10130,
                "a159",
                10131,
                "a160",
                10132,
                "a161",
                8594,
                "a163",
                8596,
                "a164",
                8597,
                "a196",
                10136,
                "a165",
                10137,
                "a192",
                10138,
                "a166",
                10139,
                "a167",
                10140,
                "a168",
                10141,
                "a169",
                10142,
                "a170",
                10143,
                "a171",
                10144,
                "a172",
                10145,
                "a173",
                10146,
                "a162",
                10147,
                "a174",
                10148,
                "a175",
                10149,
                "a176",
                10150,
                "a177",
                10151,
                "a178",
                10152,
                "a179",
                10153,
                "a193",
                10154,
                "a180",
                10155,
                "a199",
                10156,
                "a181",
                10157,
                "a200",
                10158,
                "a182",
                10159,
                "a201",
                10161,
                "a183",
                10162,
                "a184",
                10163,
                "a197",
                10164,
                "a185",
                10165,
                "a194",
                10166,
                "a198",
                10167,
                "a186",
                10168,
                "a195",
                10169,
                "a187",
                10170,
                "a188",
                10171,
                "a189",
                10172,
                "a190",
                10173,
                "a191",
                10174,
                "a89",
                10088,
                "a90",
                10089,
                "a93",
                10090,
                "a94",
                10091,
                "a91",
                10092,
                "a92",
                10093,
                "a205",
                10094,
                "a85",
                10095,
                "a206",
                10096,
                "a86",
                10097,
                "a87",
                10098,
                "a88",
                10099,
                "a95",
                10100,
                "a96",
                10101,
                ".notdef",
                0,
              ];
            });
        },
        (e, t, i) => {
          Object.defineProperty(t, "__esModule", { value: !0 });
          t.getSymbolsFonts =
            t.getSupplementalGlyphMapForCalibri =
            t.getSupplementalGlyphMapForArialBlack =
            t.getStdFontMap =
            t.getSerifFonts =
            t.getNonStdFontMap =
            t.getGlyphMapForStandardFonts =
              void 0;
          var n = i(8);
          const r = (0, n.getLookupTableFactory)(function (e) {
            e.ArialNarrow = "Helvetica";
            e["ArialNarrow-Bold"] = "Helvetica-Bold";
            e["ArialNarrow-BoldItalic"] = "Helvetica-BoldOblique";
            e["ArialNarrow-Italic"] = "Helvetica-Oblique";
            e.ArialBlack = "Helvetica";
            e["ArialBlack-Bold"] = "Helvetica-Bold";
            e["ArialBlack-BoldItalic"] = "Helvetica-BoldOblique";
            e["ArialBlack-Italic"] = "Helvetica-Oblique";
            e["Arial-Black"] = "Helvetica";
            e["Arial-Black-Bold"] = "Helvetica-Bold";
            e["Arial-Black-BoldItalic"] = "Helvetica-BoldOblique";
            e["Arial-Black-Italic"] = "Helvetica-Oblique";
            e.Arial = "Helvetica";
            e["Arial-Bold"] = "Helvetica-Bold";
            e["Arial-BoldItalic"] = "Helvetica-BoldOblique";
            e["Arial-Italic"] = "Helvetica-Oblique";
            e["Arial-BoldItalicMT"] = "Helvetica-BoldOblique";
            e["Arial-BoldMT"] = "Helvetica-Bold";
            e["Arial-ItalicMT"] = "Helvetica-Oblique";
            e.ArialMT = "Helvetica";
            e["Courier-Bold"] = "Courier-Bold";
            e["Courier-BoldItalic"] = "Courier-BoldOblique";
            e["Courier-Italic"] = "Courier-Oblique";
            e.CourierNew = "Courier";
            e["CourierNew-Bold"] = "Courier-Bold";
            e["CourierNew-BoldItalic"] = "Courier-BoldOblique";
            e["CourierNew-Italic"] = "Courier-Oblique";
            e["CourierNewPS-BoldItalicMT"] = "Courier-BoldOblique";
            e["CourierNewPS-BoldMT"] = "Courier-Bold";
            e["CourierNewPS-ItalicMT"] = "Courier-Oblique";
            e.CourierNewPSMT = "Courier";
            e.Helvetica = "Helvetica";
            e["Helvetica-Bold"] = "Helvetica-Bold";
            e["Helvetica-BoldItalic"] = "Helvetica-BoldOblique";
            e["Helvetica-BoldOblique"] = "Helvetica-BoldOblique";
            e["Helvetica-Italic"] = "Helvetica-Oblique";
            e["Helvetica-Oblique"] = "Helvetica-Oblique";
            e["Symbol-Bold"] = "Symbol";
            e["Symbol-BoldItalic"] = "Symbol";
            e["Symbol-Italic"] = "Symbol";
            e.TimesNewRoman = "Times-Roman";
            e["TimesNewRoman-Bold"] = "Times-Bold";
            e["TimesNewRoman-BoldItalic"] = "Times-BoldItalic";
            e["TimesNewRoman-Italic"] = "Times-Italic";
            e.TimesNewRomanPS = "Times-Roman";
            e["TimesNewRomanPS-Bold"] = "Times-Bold";
            e["TimesNewRomanPS-BoldItalic"] = "Times-BoldItalic";
            e["TimesNewRomanPS-BoldItalicMT"] = "Times-BoldItalic";
            e["TimesNewRomanPS-BoldMT"] = "Times-Bold";
            e["TimesNewRomanPS-Italic"] = "Times-Italic";
            e["TimesNewRomanPS-ItalicMT"] = "Times-Italic";
            e.TimesNewRomanPSMT = "Times-Roman";
            e["TimesNewRomanPSMT-Bold"] = "Times-Bold";
            e["TimesNewRomanPSMT-BoldItalic"] = "Times-BoldItalic";
            e["TimesNewRomanPSMT-Italic"] = "Times-Italic";
          });
          t.getStdFontMap = r;
          const a = (0, n.getLookupTableFactory)(function (e) {
            e.Calibri = "Helvetica";
            e["Calibri-Bold"] = "Helvetica-Bold";
            e["Calibri-BoldItalic"] = "Helvetica-BoldOblique";
            e["Calibri-Italic"] = "Helvetica-Oblique";
            e.CenturyGothic = "Helvetica";
            e["CenturyGothic-Bold"] = "Helvetica-Bold";
            e["CenturyGothic-BoldItalic"] = "Helvetica-BoldOblique";
            e["CenturyGothic-Italic"] = "Helvetica-Oblique";
            e.ComicSansMS = "Comic Sans MS";
            e["ComicSansMS-Bold"] = "Comic Sans MS-Bold";
            e["ComicSansMS-BoldItalic"] = "Comic Sans MS-BoldItalic";
            e["ComicSansMS-Italic"] = "Comic Sans MS-Italic";
            e.LucidaConsole = "Courier";
            e["LucidaConsole-Bold"] = "Courier-Bold";
            e["LucidaConsole-BoldItalic"] = "Courier-BoldOblique";
            e["LucidaConsole-Italic"] = "Courier-Oblique";
            e["LucidaSans-Demi"] = "Helvetica-Bold";
            e["MS-Gothic"] = "MS Gothic";
            e["MS-Gothic-Bold"] = "MS Gothic-Bold";
            e["MS-Gothic-BoldItalic"] = "MS Gothic-BoldItalic";
            e["MS-Gothic-Italic"] = "MS Gothic-Italic";
            e["MS-Mincho"] = "MS Mincho";
            e["MS-Mincho-Bold"] = "MS Mincho-Bold";
            e["MS-Mincho-BoldItalic"] = "MS Mincho-BoldItalic";
            e["MS-Mincho-Italic"] = "MS Mincho-Italic";
            e["MS-PGothic"] = "MS PGothic";
            e["MS-PGothic-Bold"] = "MS PGothic-Bold";
            e["MS-PGothic-BoldItalic"] = "MS PGothic-BoldItalic";
            e["MS-PGothic-Italic"] = "MS PGothic-Italic";
            e["MS-PMincho"] = "MS PMincho";
            e["MS-PMincho-Bold"] = "MS PMincho-Bold";
            e["MS-PMincho-BoldItalic"] = "MS PMincho-BoldItalic";
            e["MS-PMincho-Italic"] = "MS PMincho-Italic";
            e.NuptialScript = "Times-Italic";
            e.SegoeUISymbol = "Helvetica";
            e.Wingdings = "ZapfDingbats";
            e["Wingdings-Regular"] = "ZapfDingbats";
          });
          t.getNonStdFontMap = a;
          const s = (0, n.getLookupTableFactory)(function (e) {
            e["Adobe Jenson"] = !0;
            e["Adobe Text"] = !0;
            e.Albertus = !0;
            e.Aldus = !0;
            e.Alexandria = !0;
            e.Algerian = !0;
            e["American Typewriter"] = !0;
            e.Antiqua = !0;
            e.Apex = !0;
            e.Arno = !0;
            e.Aster = !0;
            e.Aurora = !0;
            e.Baskerville = !0;
            e.Bell = !0;
            e.Bembo = !0;
            e["Bembo Schoolbook"] = !0;
            e.Benguiat = !0;
            e["Berkeley Old Style"] = !0;
            e["Bernhard Modern"] = !0;
            e["Berthold City"] = !0;
            e.Bodoni = !0;
            e["Bauer Bodoni"] = !0;
            e["Book Antiqua"] = !0;
            e.Bookman = !0;
            e["Bordeaux Roman"] = !0;
            e["Californian FB"] = !0;
            e.Calisto = !0;
            e.Calvert = !0;
            e.Capitals = !0;
            e.Cambria = !0;
            e.Cartier = !0;
            e.Caslon = !0;
            e.Catull = !0;
            e.Centaur = !0;
            e["Century Old Style"] = !0;
            e["Century Schoolbook"] = !0;
            e.Chaparral = !0;
            e["Charis SIL"] = !0;
            e.Cheltenham = !0;
            e["Cholla Slab"] = !0;
            e.Clarendon = !0;
            e.Clearface = !0;
            e.Cochin = !0;
            e.Colonna = !0;
            e["Computer Modern"] = !0;
            e["Concrete Roman"] = !0;
            e.Constantia = !0;
            e["Cooper Black"] = !0;
            e.Corona = !0;
            e.Ecotype = !0;
            e.Egyptienne = !0;
            e.Elephant = !0;
            e.Excelsior = !0;
            e.Fairfield = !0;
            e["FF Scala"] = !0;
            e.Folkard = !0;
            e.Footlight = !0;
            e.FreeSerif = !0;
            e["Friz Quadrata"] = !0;
            e.Garamond = !0;
            e.Gentium = !0;
            e.Georgia = !0;
            e.Gloucester = !0;
            e["Goudy Old Style"] = !0;
            e["Goudy Schoolbook"] = !0;
            e["Goudy Pro Font"] = !0;
            e.Granjon = !0;
            e["Guardian Egyptian"] = !0;
            e.Heather = !0;
            e.Hercules = !0;
            e["High Tower Text"] = !0;
            e.Hiroshige = !0;
            e["Hoefler Text"] = !0;
            e["Humana Serif"] = !0;
            e.Imprint = !0;
            e["Ionic No. 5"] = !0;
            e.Janson = !0;
            e.Joanna = !0;
            e.Korinna = !0;
            e.Lexicon = !0;
            e["Liberation Serif"] = !0;
            e["Linux Libertine"] = !0;
            e.Literaturnaya = !0;
            e.Lucida = !0;
            e["Lucida Bright"] = !0;
            e.Melior = !0;
            e.Memphis = !0;
            e.Miller = !0;
            e.Minion = !0;
            e.Modern = !0;
            e["Mona Lisa"] = !0;
            e["Mrs Eaves"] = !0;
            e["MS Serif"] = !0;
            e["Museo Slab"] = !0;
            e["New York"] = !0;
            e["Nimbus Roman"] = !0;
            e["NPS Rawlinson Roadway"] = !0;
            e.NuptialScript = !0;
            e.Palatino = !0;
            e.Perpetua = !0;
            e.Plantin = !0;
            e["Plantin Schoolbook"] = !0;
            e.Playbill = !0;
            e["Poor Richard"] = !0;
            e["Rawlinson Roadway"] = !0;
            e.Renault = !0;
            e.Requiem = !0;
            e.Rockwell = !0;
            e.Roman = !0;
            e["Rotis Serif"] = !0;
            e.Sabon = !0;
            e.Scala = !0;
            e.Seagull = !0;
            e.Sistina = !0;
            e.Souvenir = !0;
            e.STIX = !0;
            e["Stone Informal"] = !0;
            e["Stone Serif"] = !0;
            e.Sylfaen = !0;
            e.Times = !0;
            e.Trajan = !0;
            e["Trinité"] = !0;
            e["Trump Mediaeval"] = !0;
            e.Utopia = !0;
            e["Vale Type"] = !0;
            e["Bitstream Vera"] = !0;
            e["Vera Serif"] = !0;
            e.Versailles = !0;
            e.Wanted = !0;
            e.Weiss = !0;
            e["Wide Latin"] = !0;
            e.Windsor = !0;
            e.XITS = !0;
          });
          t.getSerifFonts = s;
          const o = (0, n.getLookupTableFactory)(function (e) {
            e.Dingbats = !0;
            e.Symbol = !0;
            e.ZapfDingbats = !0;
          });
          t.getSymbolsFonts = o;
          const l = (0, n.getLookupTableFactory)(function (e) {
            e[2] = 10;
            e[3] = 32;
            e[4] = 33;
            e[5] = 34;
            e[6] = 35;
            e[7] = 36;
            e[8] = 37;
            e[9] = 38;
            e[10] = 39;
            e[11] = 40;
            e[12] = 41;
            e[13] = 42;
            e[14] = 43;
            e[15] = 44;
            e[16] = 45;
            e[17] = 46;
            e[18] = 47;
            e[19] = 48;
            e[20] = 49;
            e[21] = 50;
            e[22] = 51;
            e[23] = 52;
            e[24] = 53;
            e[25] = 54;
            e[26] = 55;
            e[27] = 56;
            e[28] = 57;
            e[29] = 58;
            e[30] = 894;
            e[31] = 60;
            e[32] = 61;
            e[33] = 62;
            e[34] = 63;
            e[35] = 64;
            e[36] = 65;
            e[37] = 66;
            e[38] = 67;
            e[39] = 68;
            e[40] = 69;
            e[41] = 70;
            e[42] = 71;
            e[43] = 72;
            e[44] = 73;
            e[45] = 74;
            e[46] = 75;
            e[47] = 76;
            e[48] = 77;
            e[49] = 78;
            e[50] = 79;
            e[51] = 80;
            e[52] = 81;
            e[53] = 82;
            e[54] = 83;
            e[55] = 84;
            e[56] = 85;
            e[57] = 86;
            e[58] = 87;
            e[59] = 88;
            e[60] = 89;
            e[61] = 90;
            e[62] = 91;
            e[63] = 92;
            e[64] = 93;
            e[65] = 94;
            e[66] = 95;
            e[67] = 96;
            e[68] = 97;
            e[69] = 98;
            e[70] = 99;
            e[71] = 100;
            e[72] = 101;
            e[73] = 102;
            e[74] = 103;
            e[75] = 104;
            e[76] = 105;
            e[77] = 106;
            e[78] = 107;
            e[79] = 108;
            e[80] = 109;
            e[81] = 110;
            e[82] = 111;
            e[83] = 112;
            e[84] = 113;
            e[85] = 114;
            e[86] = 115;
            e[87] = 116;
            e[88] = 117;
            e[89] = 118;
            e[90] = 119;
            e[91] = 120;
            e[92] = 121;
            e[93] = 122;
            e[94] = 123;
            e[95] = 124;
            e[96] = 125;
            e[97] = 126;
            e[98] = 196;
            e[99] = 197;
            e[100] = 199;
            e[101] = 201;
            e[102] = 209;
            e[103] = 214;
            e[104] = 220;
            e[105] = 225;
            e[106] = 224;
            e[107] = 226;
            e[108] = 228;
            e[109] = 227;
            e[110] = 229;
            e[111] = 231;
            e[112] = 233;
            e[113] = 232;
            e[114] = 234;
            e[115] = 235;
            e[116] = 237;
            e[117] = 236;
            e[118] = 238;
            e[119] = 239;
            e[120] = 241;
            e[121] = 243;
            e[122] = 242;
            e[123] = 244;
            e[124] = 246;
            e[125] = 245;
            e[126] = 250;
            e[127] = 249;
            e[128] = 251;
            e[129] = 252;
            e[130] = 8224;
            e[131] = 176;
            e[132] = 162;
            e[133] = 163;
            e[134] = 167;
            e[135] = 8226;
            e[136] = 182;
            e[137] = 223;
            e[138] = 174;
            e[139] = 169;
            e[140] = 8482;
            e[141] = 180;
            e[142] = 168;
            e[143] = 8800;
            e[144] = 198;
            e[145] = 216;
            e[146] = 8734;
            e[147] = 177;
            e[148] = 8804;
            e[149] = 8805;
            e[150] = 165;
            e[151] = 181;
            e[152] = 8706;
            e[153] = 8721;
            e[154] = 8719;
            e[156] = 8747;
            e[157] = 170;
            e[158] = 186;
            e[159] = 8486;
            e[160] = 230;
            e[161] = 248;
            e[162] = 191;
            e[163] = 161;
            e[164] = 172;
            e[165] = 8730;
            e[166] = 402;
            e[167] = 8776;
            e[168] = 8710;
            e[169] = 171;
            e[170] = 187;
            e[171] = 8230;
            e[210] = 218;
            e[223] = 711;
            e[224] = 321;
            e[225] = 322;
            e[227] = 353;
            e[229] = 382;
            e[234] = 253;
            e[252] = 263;
            e[253] = 268;
            e[254] = 269;
            e[258] = 258;
            e[260] = 260;
            e[261] = 261;
            e[265] = 280;
            e[266] = 281;
            e[268] = 283;
            e[269] = 313;
            e[275] = 323;
            e[276] = 324;
            e[278] = 328;
            e[284] = 345;
            e[285] = 346;
            e[286] = 347;
            e[292] = 367;
            e[295] = 377;
            e[296] = 378;
            e[298] = 380;
            e[305] = 963;
            e[306] = 964;
            e[307] = 966;
            e[308] = 8215;
            e[309] = 8252;
            e[310] = 8319;
            e[311] = 8359;
            e[312] = 8592;
            e[313] = 8593;
            e[337] = 9552;
            e[493] = 1039;
            e[494] = 1040;
            e[705] = 1524;
            e[706] = 8362;
            e[710] = 64288;
            e[711] = 64298;
            e[759] = 1617;
            e[761] = 1776;
            e[763] = 1778;
            e[775] = 1652;
            e[777] = 1764;
            e[778] = 1780;
            e[779] = 1781;
            e[780] = 1782;
            e[782] = 771;
            e[783] = 64726;
            e[786] = 8363;
            e[788] = 8532;
            e[790] = 768;
            e[791] = 769;
            e[792] = 768;
            e[795] = 803;
            e[797] = 64336;
            e[798] = 64337;
            e[799] = 64342;
            e[800] = 64343;
            e[801] = 64344;
            e[802] = 64345;
            e[803] = 64362;
            e[804] = 64363;
            e[805] = 64364;
            e[2424] = 7821;
            e[2425] = 7822;
            e[2426] = 7823;
            e[2427] = 7824;
            e[2428] = 7825;
            e[2429] = 7826;
            e[2430] = 7827;
            e[2433] = 7682;
            e[2678] = 8045;
            e[2679] = 8046;
            e[2830] = 1552;
            e[2838] = 686;
            e[2840] = 751;
            e[2842] = 753;
            e[2843] = 754;
            e[2844] = 755;
            e[2846] = 757;
            e[2856] = 767;
            e[2857] = 848;
            e[2858] = 849;
            e[2862] = 853;
            e[2863] = 854;
            e[2864] = 855;
            e[2865] = 861;
            e[2866] = 862;
            e[2906] = 7460;
            e[2908] = 7462;
            e[2909] = 7463;
            e[2910] = 7464;
            e[2912] = 7466;
            e[2913] = 7467;
            e[2914] = 7468;
            e[2916] = 7470;
            e[2917] = 7471;
            e[2918] = 7472;
            e[2920] = 7474;
            e[2921] = 7475;
            e[2922] = 7476;
            e[2924] = 7478;
            e[2925] = 7479;
            e[2926] = 7480;
            e[2928] = 7482;
            e[2929] = 7483;
            e[2930] = 7484;
            e[2932] = 7486;
            e[2933] = 7487;
            e[2934] = 7488;
            e[2936] = 7490;
            e[2937] = 7491;
            e[2938] = 7492;
            e[2940] = 7494;
            e[2941] = 7495;
            e[2942] = 7496;
            e[2944] = 7498;
            e[2946] = 7500;
            e[2948] = 7502;
            e[2950] = 7504;
            e[2951] = 7505;
            e[2952] = 7506;
            e[2954] = 7508;
            e[2955] = 7509;
            e[2956] = 7510;
            e[2958] = 7512;
            e[2959] = 7513;
            e[2960] = 7514;
            e[2962] = 7516;
            e[2963] = 7517;
            e[2964] = 7518;
            e[2966] = 7520;
            e[2967] = 7521;
            e[2968] = 7522;
            e[2970] = 7524;
            e[2971] = 7525;
            e[2972] = 7526;
            e[2974] = 7528;
            e[2975] = 7529;
            e[2976] = 7530;
            e[2978] = 1537;
            e[2979] = 1538;
            e[2980] = 1539;
            e[2982] = 1549;
            e[2983] = 1551;
            e[2984] = 1552;
            e[2986] = 1554;
            e[2987] = 1555;
            e[2988] = 1556;
            e[2990] = 1623;
            e[2991] = 1624;
            e[2995] = 1775;
            e[2999] = 1791;
            e[3002] = 64290;
            e[3003] = 64291;
            e[3004] = 64292;
            e[3006] = 64294;
            e[3007] = 64295;
            e[3008] = 64296;
            e[3011] = 1900;
            e[3014] = 8223;
            e[3015] = 8244;
            e[3017] = 7532;
            e[3018] = 7533;
            e[3019] = 7534;
            e[3075] = 7590;
            e[3076] = 7591;
            e[3079] = 7594;
            e[3080] = 7595;
            e[3083] = 7598;
            e[3084] = 7599;
            e[3087] = 7602;
            e[3088] = 7603;
            e[3091] = 7606;
            e[3092] = 7607;
            e[3095] = 7610;
            e[3096] = 7611;
            e[3099] = 7614;
            e[3100] = 7615;
            e[3103] = 7618;
            e[3104] = 7619;
            e[3107] = 8337;
            e[3108] = 8338;
            e[3116] = 1884;
            e[3119] = 1885;
            e[3120] = 1885;
            e[3123] = 1886;
            e[3124] = 1886;
            e[3127] = 1887;
            e[3128] = 1887;
            e[3131] = 1888;
            e[3132] = 1888;
            e[3135] = 1889;
            e[3136] = 1889;
            e[3139] = 1890;
            e[3140] = 1890;
            e[3143] = 1891;
            e[3144] = 1891;
            e[3147] = 1892;
            e[3148] = 1892;
            e[3153] = 580;
            e[3154] = 581;
            e[3157] = 584;
            e[3158] = 585;
            e[3161] = 588;
            e[3162] = 589;
            e[3165] = 891;
            e[3166] = 892;
            e[3169] = 1274;
            e[3170] = 1275;
            e[3173] = 1278;
            e[3174] = 1279;
            e[3181] = 7622;
            e[3182] = 7623;
            e[3282] = 11799;
            e[3316] = 578;
            e[3379] = 42785;
            e[3393] = 1159;
            e[3416] = 8377;
          });
          t.getGlyphMapForStandardFonts = l;
          const c = (0, n.getLookupTableFactory)(function (e) {
            e[227] = 322;
            e[264] = 261;
            e[291] = 346;
          });
          t.getSupplementalGlyphMapForArialBlack = c;
          const h = (0, n.getLookupTableFactory)(function (e) {
            e[1] = 32;
            e[4] = 65;
            e[17] = 66;
            e[18] = 67;
            e[24] = 68;
            e[28] = 69;
            e[38] = 70;
            e[39] = 71;
            e[44] = 72;
            e[47] = 73;
            e[58] = 74;
            e[60] = 75;
            e[62] = 76;
            e[68] = 77;
            e[69] = 78;
            e[75] = 79;
            e[87] = 80;
            e[89] = 81;
            e[90] = 82;
            e[94] = 83;
            e[100] = 84;
            e[104] = 85;
            e[115] = 86;
            e[116] = 87;
            e[121] = 88;
            e[122] = 89;
            e[127] = 90;
            e[258] = 97;
            e[268] = 261;
            e[271] = 98;
            e[272] = 99;
            e[273] = 263;
            e[282] = 100;
            e[286] = 101;
            e[295] = 281;
            e[296] = 102;
            e[336] = 103;
            e[346] = 104;
            e[349] = 105;
            e[361] = 106;
            e[364] = 107;
            e[367] = 108;
            e[371] = 322;
            e[373] = 109;
            e[374] = 110;
            e[381] = 111;
            e[383] = 243;
            e[393] = 112;
            e[395] = 113;
            e[396] = 114;
            e[400] = 115;
            e[401] = 347;
            e[410] = 116;
            e[437] = 117;
            e[448] = 118;
            e[449] = 119;
            e[454] = 120;
            e[455] = 121;
            e[460] = 122;
            e[463] = 380;
            e[853] = 44;
            e[855] = 58;
            e[856] = 46;
            e[876] = 47;
            e[878] = 45;
            e[882] = 45;
            e[894] = 40;
            e[895] = 41;
            e[896] = 91;
            e[897] = 93;
            e[923] = 64;
            e[1004] = 48;
            e[1005] = 49;
            e[1006] = 50;
            e[1007] = 51;
            e[1008] = 52;
            e[1009] = 53;
            e[1010] = 54;
            e[1011] = 55;
            e[1012] = 56;
            e[1013] = 57;
            e[1081] = 37;
            e[1085] = 43;
            e[1086] = 45;
          });
          t.getSupplementalGlyphMapForCalibri = h;
        },
        (e, t, i) => {
          i.r(t);
          i.d(t, {
            getNormalizedUnicodes: () => c,
            getUnicodeForGlyph: () => s,
            getUnicodeRangeFor: () => l,
            mapSpecialUnicodeValues: () => a,
            reverseIfRtl: () => h,
          });
          var n = i(8),
            r = (0, n.getLookupTableFactory)(function (e) {
              e[63721] = 169;
              e[63193] = 169;
              e[63720] = 174;
              e[63194] = 174;
              e[63722] = 8482;
              e[63195] = 8482;
              e[63729] = 9127;
              e[63730] = 9128;
              e[63731] = 9129;
              e[63740] = 9131;
              e[63741] = 9132;
              e[63742] = 9133;
              e[63726] = 9121;
              e[63727] = 9122;
              e[63728] = 9123;
              e[63737] = 9124;
              e[63738] = 9125;
              e[63739] = 9126;
              e[63723] = 9115;
              e[63724] = 9116;
              e[63725] = 9117;
              e[63734] = 9118;
              e[63735] = 9119;
              e[63736] = 9120;
            });
          function a(e) {
            if (e >= 65520 && e <= 65535) return 0;
            else if (e >= 62976 && e <= 63743) return r()[e] || e;
            else if (173 === e) return 45;
            return e;
          }
          function s(e, t) {
            var i = t[e];
            if (void 0 !== i) return i;
            if (!e) return -1;
            if ("u" === e[0]) {
              var n,
                r = e.length;
              if (7 === r && "n" === e[1] && "i" === e[2]) n = e.substring(3);
              else if (r >= 5 && r <= 7) n = e.substring(1);
              else return -1;
              if (n === n.toUpperCase())
                if ((i = parseInt(n, 16)) >= 0) return i;
            }
            return -1;
          }
          var o = [
            { begin: 0, end: 127 },
            { begin: 128, end: 255 },
            { begin: 256, end: 383 },
            { begin: 384, end: 591 },
            { begin: 592, end: 687 },
            { begin: 688, end: 767 },
            { begin: 768, end: 879 },
            { begin: 880, end: 1023 },
            { begin: 11392, end: 11519 },
            { begin: 1024, end: 1279 },
            { begin: 1328, end: 1423 },
            { begin: 1424, end: 1535 },
            { begin: 42240, end: 42559 },
            { begin: 1536, end: 1791 },
            { begin: 1984, end: 2047 },
            { begin: 2304, end: 2431 },
            { begin: 2432, end: 2559 },
            { begin: 2560, end: 2687 },
            { begin: 2688, end: 2815 },
            { begin: 2816, end: 2943 },
            { begin: 2944, end: 3071 },
            { begin: 3072, end: 3199 },
            { begin: 3200, end: 3327 },
            { begin: 3328, end: 3455 },
            { begin: 3584, end: 3711 },
            { begin: 3712, end: 3839 },
            { begin: 4256, end: 4351 },
            { begin: 6912, end: 7039 },
            { begin: 4352, end: 4607 },
            { begin: 7680, end: 7935 },
            { begin: 7936, end: 8191 },
            { begin: 8192, end: 8303 },
            { begin: 8304, end: 8351 },
            { begin: 8352, end: 8399 },
            { begin: 8400, end: 8447 },
            { begin: 8448, end: 8527 },
            { begin: 8528, end: 8591 },
            { begin: 8592, end: 8703 },
            { begin: 8704, end: 8959 },
            { begin: 8960, end: 9215 },
            { begin: 9216, end: 9279 },
            { begin: 9280, end: 9311 },
            { begin: 9312, end: 9471 },
            { begin: 9472, end: 9599 },
            { begin: 9600, end: 9631 },
            { begin: 9632, end: 9727 },
            { begin: 9728, end: 9983 },
            { begin: 9984, end: 10175 },
            { begin: 12288, end: 12351 },
            { begin: 12352, end: 12447 },
            { begin: 12448, end: 12543 },
            { begin: 12544, end: 12591 },
            { begin: 12592, end: 12687 },
            { begin: 43072, end: 43135 },
            { begin: 12800, end: 13055 },
            { begin: 13056, end: 13311 },
            { begin: 44032, end: 55215 },
            { begin: 55296, end: 57343 },
            { begin: 67840, end: 67871 },
            { begin: 19968, end: 40959 },
            { begin: 57344, end: 63743 },
            { begin: 12736, end: 12783 },
            { begin: 64256, end: 64335 },
            { begin: 64336, end: 65023 },
            { begin: 65056, end: 65071 },
            { begin: 65040, end: 65055 },
            { begin: 65104, end: 65135 },
            { begin: 65136, end: 65279 },
            { begin: 65280, end: 65519 },
            { begin: 65520, end: 65535 },
            { begin: 3840, end: 4095 },
            { begin: 1792, end: 1871 },
            { begin: 1920, end: 1983 },
            { begin: 3456, end: 3583 },
            { begin: 4096, end: 4255 },
            { begin: 4608, end: 4991 },
            { begin: 5024, end: 5119 },
            { begin: 5120, end: 5759 },
            { begin: 5760, end: 5791 },
            { begin: 5792, end: 5887 },
            { begin: 6016, end: 6143 },
            { begin: 6144, end: 6319 },
            { begin: 10240, end: 10495 },
            { begin: 40960, end: 42127 },
            { begin: 5888, end: 5919 },
            { begin: 66304, end: 66351 },
            { begin: 66352, end: 66383 },
            { begin: 66560, end: 66639 },
            { begin: 118784, end: 119039 },
            { begin: 119808, end: 120831 },
            { begin: 1044480, end: 1048573 },
            { begin: 65024, end: 65039 },
            { begin: 917504, end: 917631 },
            { begin: 6400, end: 6479 },
            { begin: 6480, end: 6527 },
            { begin: 6528, end: 6623 },
            { begin: 6656, end: 6687 },
            { begin: 11264, end: 11359 },
            { begin: 11568, end: 11647 },
            { begin: 19904, end: 19967 },
            { begin: 43008, end: 43055 },
            { begin: 65536, end: 65663 },
            { begin: 65856, end: 65935 },
            { begin: 66432, end: 66463 },
            { begin: 66464, end: 66527 },
            { begin: 66640, end: 66687 },
            { begin: 66688, end: 66735 },
            { begin: 67584, end: 67647 },
            { begin: 68096, end: 68191 },
            { begin: 119552, end: 119647 },
            { begin: 73728, end: 74751 },
            { begin: 119648, end: 119679 },
            { begin: 7040, end: 7103 },
            { begin: 7168, end: 7247 },
            { begin: 7248, end: 7295 },
            { begin: 43136, end: 43231 },
            { begin: 43264, end: 43311 },
            { begin: 43312, end: 43359 },
            { begin: 43520, end: 43615 },
            { begin: 65936, end: 65999 },
            { begin: 66e3, end: 66047 },
            { begin: 66208, end: 66271 },
            { begin: 127024, end: 127135 },
          ];
          function l(e) {
            for (var t = 0, i = o.length; t < i; t++) {
              var n = o[t];
              if (e >= n.begin && e < n.end) return t;
            }
            return -1;
          }
          var c = (0, n.getArrayLookupTableFactory)(function () {
            return [
              "¨",
              " ̈",
              "¯",
              " ̄",
              "´",
              " ́",
              "µ",
              "μ",
              "¸",
              " ̧",
              "Ĳ",
              "IJ",
              "ĳ",
              "ij",
              "Ŀ",
              "L·",
              "ŀ",
              "l·",
              "ŉ",
              "ʼn",
              "ſ",
              "s",
              "Ǆ",
              "DŽ",
              "ǅ",
              "Dž",
              "ǆ",
              "dž",
              "Ǉ",
              "LJ",
              "ǈ",
              "Lj",
              "ǉ",
              "lj",
              "Ǌ",
              "NJ",
              "ǋ",
              "Nj",
              "ǌ",
              "nj",
              "Ǳ",
              "DZ",
              "ǲ",
              "Dz",
              "ǳ",
              "dz",
              "˘",
              " ̆",
              "˙",
              " ̇",
              "˚",
              " ̊",
              "˛",
              " ̨",
              "˜",
              " ̃",
              "˝",
              " ̋",
              "ͺ",
              " ͅ",
              "΄",
              " ́",
              "ϐ",
              "β",
              "ϑ",
              "θ",
              "ϒ",
              "Υ",
              "ϕ",
              "φ",
              "ϖ",
              "π",
              "ϰ",
              "κ",
              "ϱ",
              "ρ",
              "ϲ",
              "ς",
              "ϴ",
              "Θ",
              "ϵ",
              "ε",
              "Ϲ",
              "Σ",
              "և",
              "եւ",
              "ٵ",
              "اٴ",
              "ٶ",
              "وٴ",
              "ٷ",
              "ۇٴ",
              "ٸ",
              "يٴ",
              "ำ",
              "ํา",
              "ຳ",
              "ໍາ",
              "ໜ",
              "ຫນ",
              "ໝ",
              "ຫມ",
              "ཷ",
              "ྲཱྀ",
              "ཹ",
              "ླཱྀ",
              "ẚ",
              "aʾ",
              "᾽",
              " ̓",
              "᾿",
              " ̓",
              "῀",
              " ͂",
              "῾",
              " ̔",
              " ",
              " ",
              " ",
              " ",
              " ",
              " ",
              " ",
              " ",
              " ",
              " ",
              " ",
              " ",
              " ",
              " ",
              " ",
              " ",
              "‗",
              " ̳",
              "․",
              ".",
              "‥",
              "..",
              "…",
              "...",
              "″",
              "′′",
              "‴",
              "′′′",
              "‶",
              "‵‵",
              "‷",
              "‵‵‵",
              "‼",
              "!!",
              "‾",
              " ̅",
              "⁇",
              "??",
              "⁈",
              "?!",
              "⁉",
              "!?",
              "⁗",
              "′′′′",
              " ",
              " ",
              "₨",
              "Rs",
              "℀",
              "a/c",
              "℁",
              "a/s",
              "℃",
              "°C",
              "℅",
              "c/o",
              "℆",
              "c/u",
              "ℇ",
              "Ɛ",
              "℉",
              "°F",
              "№",
              "No",
              "℡",
              "TEL",
              "ℵ",
              "א",
              "ℶ",
              "ב",
              "ℷ",
              "ג",
              "ℸ",
              "ד",
              "℻",
              "FAX",
              "Ⅰ",
              "I",
              "Ⅱ",
              "II",
              "Ⅲ",
              "III",
              "Ⅳ",
              "IV",
              "Ⅴ",
              "V",
              "Ⅵ",
              "VI",
              "Ⅶ",
              "VII",
              "Ⅷ",
              "VIII",
              "Ⅸ",
              "IX",
              "Ⅹ",
              "X",
              "Ⅺ",
              "XI",
              "Ⅻ",
              "XII",
              "Ⅼ",
              "L",
              "Ⅽ",
              "C",
              "Ⅾ",
              "D",
              "Ⅿ",
              "M",
              "ⅰ",
              "i",
              "ⅱ",
              "ii",
              "ⅲ",
              "iii",
              "ⅳ",
              "iv",
              "ⅴ",
              "v",
              "ⅵ",
              "vi",
              "ⅶ",
              "vii",
              "ⅷ",
              "viii",
              "ⅸ",
              "ix",
              "ⅹ",
              "x",
              "ⅺ",
              "xi",
              "ⅻ",
              "xii",
              "ⅼ",
              "l",
              "ⅽ",
              "c",
              "ⅾ",
              "d",
              "ⅿ",
              "m",
              "∬",
              "∫∫",
              "∭",
              "∫∫∫",
              "∯",
              "∮∮",
              "∰",
              "∮∮∮",
              "⑴",
              "(1)",
              "⑵",
              "(2)",
              "⑶",
              "(3)",
              "⑷",
              "(4)",
              "⑸",
              "(5)",
              "⑹",
              "(6)",
              "⑺",
              "(7)",
              "⑻",
              "(8)",
              "⑼",
              "(9)",
              "⑽",
              "(10)",
              "⑾",
              "(11)",
              "⑿",
              "(12)",
              "⒀",
              "(13)",
              "⒁",
              "(14)",
              "⒂",
              "(15)",
              "⒃",
              "(16)",
              "⒄",
              "(17)",
              "⒅",
              "(18)",
              "⒆",
              "(19)",
              "⒇",
              "(20)",
              "⒈",
              "1.",
              "⒉",
              "2.",
              "⒊",
              "3.",
              "⒋",
              "4.",
              "⒌",
              "5.",
              "⒍",
              "6.",
              "⒎",
              "7.",
              "⒏",
              "8.",
              "⒐",
              "9.",
              "⒑",
              "10.",
              "⒒",
              "11.",
              "⒓",
              "12.",
              "⒔",
              "13.",
              "⒕",
              "14.",
              "⒖",
              "15.",
              "⒗",
              "16.",
              "⒘",
              "17.",
              "⒙",
              "18.",
              "⒚",
              "19.",
              "⒛",
              "20.",
              "⒜",
              "(a)",
              "⒝",
              "(b)",
              "⒞",
              "(c)",
              "⒟",
              "(d)",
              "⒠",
              "(e)",
              "⒡",
              "(f)",
              "⒢",
              "(g)",
              "⒣",
              "(h)",
              "⒤",
              "(i)",
              "⒥",
              "(j)",
              "⒦",
              "(k)",
              "⒧",
              "(l)",
              "⒨",
              "(m)",
              "⒩",
              "(n)",
              "⒪",
              "(o)",
              "⒫",
              "(p)",
              "⒬",
              "(q)",
              "⒭",
              "(r)",
              "⒮",
              "(s)",
              "⒯",
              "(t)",
              "⒰",
              "(u)",
              "⒱",
              "(v)",
              "⒲",
              "(w)",
              "⒳",
              "(x)",
              "⒴",
              "(y)",
              "⒵",
              "(z)",
              "⨌",
              "∫∫∫∫",
              "⩴",
              "::=",
              "⩵",
              "==",
              "⩶",
              "===",
              "⺟",
              "母",
              "⻳",
              "龟",
              "⼀",
              "一",
              "⼁",
              "丨",
              "⼂",
              "丶",
              "⼃",
              "丿",
              "⼄",
              "乙",
              "⼅",
              "亅",
              "⼆",
              "二",
              "⼇",
              "亠",
              "⼈",
              "人",
              "⼉",
              "儿",
              "⼊",
              "入",
              "⼋",
              "八",
              "⼌",
              "冂",
              "⼍",
              "冖",
              "⼎",
              "冫",
              "⼏",
              "几",
              "⼐",
              "凵",
              "⼑",
              "刀",
              "⼒",
              "力",
              "⼓",
              "勹",
              "⼔",
              "匕",
              "⼕",
              "匚",
              "⼖",
              "匸",
              "⼗",
              "十",
              "⼘",
              "卜",
              "⼙",
              "卩",
              "⼚",
              "厂",
              "⼛",
              "厶",
              "⼜",
              "又",
              "⼝",
              "口",
              "⼞",
              "囗",
              "⼟",
              "土",
              "⼠",
              "士",
              "⼡",
              "夂",
              "⼢",
              "夊",
              "⼣",
              "夕",
              "⼤",
              "大",
              "⼥",
              "女",
              "⼦",
              "子",
              "⼧",
              "宀",
              "⼨",
              "寸",
              "⼩",
              "小",
              "⼪",
              "尢",
              "⼫",
              "尸",
              "⼬",
              "屮",
              "⼭",
              "山",
              "⼮",
              "巛",
              "⼯",
              "工",
              "⼰",
              "己",
              "⼱",
              "巾",
              "⼲",
              "干",
              "⼳",
              "幺",
              "⼴",
              "广",
              "⼵",
              "廴",
              "⼶",
              "廾",
              "⼷",
              "弋",
              "⼸",
              "弓",
              "⼹",
              "彐",
              "⼺",
              "彡",
              "⼻",
              "彳",
              "⼼",
              "心",
              "⼽",
              "戈",
              "⼾",
              "戶",
              "⼿",
              "手",
              "⽀",
              "支",
              "⽁",
              "攴",
              "⽂",
              "文",
              "⽃",
              "斗",
              "⽄",
              "斤",
              "⽅",
              "方",
              "⽆",
              "无",
              "⽇",
              "日",
              "⽈",
              "曰",
              "⽉",
              "月",
              "⽊",
              "木",
              "⽋",
              "欠",
              "⽌",
              "止",
              "⽍",
              "歹",
              "⽎",
              "殳",
              "⽏",
              "毋",
              "⽐",
              "比",
              "⽑",
              "毛",
              "⽒",
              "氏",
              "⽓",
              "气",
              "⽔",
              "水",
              "⽕",
              "火",
              "⽖",
              "爪",
              "⽗",
              "父",
              "⽘",
              "爻",
              "⽙",
              "爿",
              "⽚",
              "片",
              "⽛",
              "牙",
              "⽜",
              "牛",
              "⽝",
              "犬",
              "⽞",
              "玄",
              "⽟",
              "玉",
              "⽠",
              "瓜",
              "⽡",
              "瓦",
              "⽢",
              "甘",
              "⽣",
              "生",
              "⽤",
              "用",
              "⽥",
              "田",
              "⽦",
              "疋",
              "⽧",
              "疒",
              "⽨",
              "癶",
              "⽩",
              "白",
              "⽪",
              "皮",
              "⽫",
              "皿",
              "⽬",
              "目",
              "⽭",
              "矛",
              "⽮",
              "矢",
              "⽯",
              "石",
              "⽰",
              "示",
              "⽱",
              "禸",
              "⽲",
              "禾",
              "⽳",
              "穴",
              "⽴",
              "立",
              "⽵",
              "竹",
              "⽶",
              "米",
              "⽷",
              "糸",
              "⽸",
              "缶",
              "⽹",
              "网",
              "⽺",
              "羊",
              "⽻",
              "羽",
              "⽼",
              "老",
              "⽽",
              "而",
              "⽾",
              "耒",
              "⽿",
              "耳",
              "⾀",
              "聿",
              "⾁",
              "肉",
              "⾂",
              "臣",
              "⾃",
              "自",
              "⾄",
              "至",
              "⾅",
              "臼",
              "⾆",
              "舌",
              "⾇",
              "舛",
              "⾈",
              "舟",
              "⾉",
              "艮",
              "⾊",
              "色",
              "⾋",
              "艸",
              "⾌",
              "虍",
              "⾍",
              "虫",
              "⾎",
              "血",
              "⾏",
              "行",
              "⾐",
              "衣",
              "⾑",
              "襾",
              "⾒",
              "見",
              "⾓",
              "角",
              "⾔",
              "言",
              "⾕",
              "谷",
              "⾖",
              "豆",
              "⾗",
              "豕",
              "⾘",
              "豸",
              "⾙",
              "貝",
              "⾚",
              "赤",
              "⾛",
              "走",
              "⾜",
              "足",
              "⾝",
              "身",
              "⾞",
              "車",
              "⾟",
              "辛",
              "⾠",
              "辰",
              "⾡",
              "辵",
              "⾢",
              "邑",
              "⾣",
              "酉",
              "⾤",
              "釆",
              "⾥",
              "里",
              "⾦",
              "金",
              "⾧",
              "長",
              "⾨",
              "門",
              "⾩",
              "阜",
              "⾪",
              "隶",
              "⾫",
              "隹",
              "⾬",
              "雨",
              "⾭",
              "靑",
              "⾮",
              "非",
              "⾯",
              "面",
              "⾰",
              "革",
              "⾱",
              "韋",
              "⾲",
              "韭",
              "⾳",
              "音",
              "⾴",
              "頁",
              "⾵",
              "風",
              "⾶",
              "飛",
              "⾷",
              "食",
              "⾸",
              "首",
              "⾹",
              "香",
              "⾺",
              "馬",
              "⾻",
              "骨",
              "⾼",
              "高",
              "⾽",
              "髟",
              "⾾",
              "鬥",
              "⾿",
              "鬯",
              "⿀",
              "鬲",
              "⿁",
              "鬼",
              "⿂",
              "魚",
              "⿃",
              "鳥",
              "⿄",
              "鹵",
              "⿅",
              "鹿",
              "⿆",
              "麥",
              "⿇",
              "麻",
              "⿈",
              "黃",
              "⿉",
              "黍",
              "⿊",
              "黑",
              "⿋",
              "黹",
              "⿌",
              "黽",
              "⿍",
              "鼎",
              "⿎",
              "鼓",
              "⿏",
              "鼠",
              "⿐",
              "鼻",
              "⿑",
              "齊",
              "⿒",
              "齒",
              "⿓",
              "龍",
              "⿔",
              "龜",
              "⿕",
              "龠",
              "〶",
              "〒",
              "〸",
              "十",
              "〹",
              "卄",
              "〺",
              "卅",
              "゛",
              " ゙",
              "゜",
              " ゚",
              "ㄱ",
              "ᄀ",
              "ㄲ",
              "ᄁ",
              "ㄳ",
              "ᆪ",
              "ㄴ",
              "ᄂ",
              "ㄵ",
              "ᆬ",
              "ㄶ",
              "ᆭ",
              "ㄷ",
              "ᄃ",
              "ㄸ",
              "ᄄ",
              "ㄹ",
              "ᄅ",
              "ㄺ",
              "ᆰ",
              "ㄻ",
              "ᆱ",
              "ㄼ",
              "ᆲ",
              "ㄽ",
              "ᆳ",
              "ㄾ",
              "ᆴ",
              "ㄿ",
              "ᆵ",
              "ㅀ",
              "ᄚ",
              "ㅁ",
              "ᄆ",
              "ㅂ",
              "ᄇ",
              "ㅃ",
              "ᄈ",
              "ㅄ",
              "ᄡ",
              "ㅅ",
              "ᄉ",
              "ㅆ",
              "ᄊ",
              "ㅇ",
              "ᄋ",
              "ㅈ",
              "ᄌ",
              "ㅉ",
              "ᄍ",
              "ㅊ",
              "ᄎ",
              "ㅋ",
              "ᄏ",
              "ㅌ",
              "ᄐ",
              "ㅍ",
              "ᄑ",
              "ㅎ",
              "ᄒ",
              "ㅏ",
              "ᅡ",
              "ㅐ",
              "ᅢ",
              "ㅑ",
              "ᅣ",
              "ㅒ",
              "ᅤ",
              "ㅓ",
              "ᅥ",
              "ㅔ",
              "ᅦ",
              "ㅕ",
              "ᅧ",
              "ㅖ",
              "ᅨ",
              "ㅗ",
              "ᅩ",
              "ㅘ",
              "ᅪ",
              "ㅙ",
              "ᅫ",
              "ㅚ",
              "ᅬ",
              "ㅛ",
              "ᅭ",
              "ㅜ",
              "ᅮ",
              "ㅝ",
              "ᅯ",
              "ㅞ",
              "ᅰ",
              "ㅟ",
              "ᅱ",
              "ㅠ",
              "ᅲ",
              "ㅡ",
              "ᅳ",
              "ㅢ",
              "ᅴ",
              "ㅣ",
              "ᅵ",
              "ㅤ",
              "ᅠ",
              "ㅥ",
              "ᄔ",
              "ㅦ",
              "ᄕ",
              "ㅧ",
              "ᇇ",
              "ㅨ",
              "ᇈ",
              "ㅩ",
              "ᇌ",
              "ㅪ",
              "ᇎ",
              "ㅫ",
              "ᇓ",
              "ㅬ",
              "ᇗ",
              "ㅭ",
              "ᇙ",
              "ㅮ",
              "ᄜ",
              "ㅯ",
              "ᇝ",
              "ㅰ",
              "ᇟ",
              "ㅱ",
              "ᄝ",
              "ㅲ",
              "ᄞ",
              "ㅳ",
              "ᄠ",
              "ㅴ",
              "ᄢ",
              "ㅵ",
              "ᄣ",
              "ㅶ",
              "ᄧ",
              "ㅷ",
              "ᄩ",
              "ㅸ",
              "ᄫ",
              "ㅹ",
              "ᄬ",
              "ㅺ",
              "ᄭ",
              "ㅻ",
              "ᄮ",
              "ㅼ",
              "ᄯ",
              "ㅽ",
              "ᄲ",
              "ㅾ",
              "ᄶ",
              "ㅿ",
              "ᅀ",
              "ㆀ",
              "ᅇ",
              "ㆁ",
              "ᅌ",
              "ㆂ",
              "ᇱ",
              "ㆃ",
              "ᇲ",
              "ㆄ",
              "ᅗ",
              "ㆅ",
              "ᅘ",
              "ㆆ",
              "ᅙ",
              "ㆇ",
              "ᆄ",
              "ㆈ",
              "ᆅ",
              "ㆉ",
              "ᆈ",
              "ㆊ",
              "ᆑ",
              "ㆋ",
              "ᆒ",
              "ㆌ",
              "ᆔ",
              "ㆍ",
              "ᆞ",
              "ㆎ",
              "ᆡ",
              "㈀",
              "(ᄀ)",
              "㈁",
              "(ᄂ)",
              "㈂",
              "(ᄃ)",
              "㈃",
              "(ᄅ)",
              "㈄",
              "(ᄆ)",
              "㈅",
              "(ᄇ)",
              "㈆",
              "(ᄉ)",
              "㈇",
              "(ᄋ)",
              "㈈",
              "(ᄌ)",
              "㈉",
              "(ᄎ)",
              "㈊",
              "(ᄏ)",
              "㈋",
              "(ᄐ)",
              "㈌",
              "(ᄑ)",
              "㈍",
              "(ᄒ)",
              "㈎",
              "(가)",
              "㈏",
              "(나)",
              "㈐",
              "(다)",
              "㈑",
              "(라)",
              "㈒",
              "(마)",
              "㈓",
              "(바)",
              "㈔",
              "(사)",
              "㈕",
              "(아)",
              "㈖",
              "(자)",
              "㈗",
              "(차)",
              "㈘",
              "(카)",
              "㈙",
              "(타)",
              "㈚",
              "(파)",
              "㈛",
              "(하)",
              "㈜",
              "(주)",
              "㈝",
              "(오전)",
              "㈞",
              "(오후)",
              "㈠",
              "(一)",
              "㈡",
              "(二)",
              "㈢",
              "(三)",
              "㈣",
              "(四)",
              "㈤",
              "(五)",
              "㈥",
              "(六)",
              "㈦",
              "(七)",
              "㈧",
              "(八)",
              "㈨",
              "(九)",
              "㈩",
              "(十)",
              "㈪",
              "(月)",
              "㈫",
              "(火)",
              "㈬",
              "(水)",
              "㈭",
              "(木)",
              "㈮",
              "(金)",
              "㈯",
              "(土)",
              "㈰",
              "(日)",
              "㈱",
              "(株)",
              "㈲",
              "(有)",
              "㈳",
              "(社)",
              "㈴",
              "(名)",
              "㈵",
              "(特)",
              "㈶",
              "(財)",
              "㈷",
              "(祝)",
              "㈸",
              "(労)",
              "㈹",
              "(代)",
              "㈺",
              "(呼)",
              "㈻",
              "(学)",
              "㈼",
              "(監)",
              "㈽",
              "(企)",
              "㈾",
              "(資)",
              "㈿",
              "(協)",
              "㉀",
              "(祭)",
              "㉁",
              "(休)",
              "㉂",
              "(自)",
              "㉃",
              "(至)",
              "㋀",
              "1月",
              "㋁",
              "2月",
              "㋂",
              "3月",
              "㋃",
              "4月",
              "㋄",
              "5月",
              "㋅",
              "6月",
              "㋆",
              "7月",
              "㋇",
              "8月",
              "㋈",
              "9月",
              "㋉",
              "10月",
              "㋊",
              "11月",
              "㋋",
              "12月",
              "㍘",
              "0点",
              "㍙",
              "1点",
              "㍚",
              "2点",
              "㍛",
              "3点",
              "㍜",
              "4点",
              "㍝",
              "5点",
              "㍞",
              "6点",
              "㍟",
              "7点",
              "㍠",
              "8点",
              "㍡",
              "9点",
              "㍢",
              "10点",
              "㍣",
              "11点",
              "㍤",
              "12点",
              "㍥",
              "13点",
              "㍦",
              "14点",
              "㍧",
              "15点",
              "㍨",
              "16点",
              "㍩",
              "17点",
              "㍪",
              "18点",
              "㍫",
              "19点",
              "㍬",
              "20点",
              "㍭",
              "21点",
              "㍮",
              "22点",
              "㍯",
              "23点",
              "㍰",
              "24点",
              "㏠",
              "1日",
              "㏡",
              "2日",
              "㏢",
              "3日",
              "㏣",
              "4日",
              "㏤",
              "5日",
              "㏥",
              "6日",
              "㏦",
              "7日",
              "㏧",
              "8日",
              "㏨",
              "9日",
              "㏩",
              "10日",
              "㏪",
              "11日",
              "㏫",
              "12日",
              "㏬",
              "13日",
              "㏭",
              "14日",
              "㏮",
              "15日",
              "㏯",
              "16日",
              "㏰",
              "17日",
              "㏱",
              "18日",
              "㏲",
              "19日",
              "㏳",
              "20日",
              "㏴",
              "21日",
              "㏵",
              "22日",
              "㏶",
              "23日",
              "㏷",
              "24日",
              "㏸",
              "25日",
              "㏹",
              "26日",
              "㏺",
              "27日",
              "㏻",
              "28日",
              "㏼",
              "29日",
              "㏽",
              "30日",
              "㏾",
              "31日",
              "ﬀ",
              "ff",
              "ﬁ",
              "fi",
              "ﬂ",
              "fl",
              "ﬃ",
              "ffi",
              "ﬄ",
              "ffl",
              "ﬅ",
              "ſt",
              "ﬆ",
              "st",
              "ﬓ",
              "մն",
              "ﬔ",
              "մե",
              "ﬕ",
              "մի",
              "ﬖ",
              "վն",
              "ﬗ",
              "մխ",
              "ﭏ",
              "אל",
              "ﭐ",
              "ٱ",
              "ﭑ",
              "ٱ",
              "ﭒ",
              "ٻ",
              "ﭓ",
              "ٻ",
              "ﭔ",
              "ٻ",
              "ﭕ",
              "ٻ",
              "ﭖ",
              "پ",
              "ﭗ",
              "پ",
              "ﭘ",
              "پ",
              "ﭙ",
              "پ",
              "ﭚ",
              "ڀ",
              "ﭛ",
              "ڀ",
              "ﭜ",
              "ڀ",
              "ﭝ",
              "ڀ",
              "ﭞ",
              "ٺ",
              "ﭟ",
              "ٺ",
              "ﭠ",
              "ٺ",
              "ﭡ",
              "ٺ",
              "ﭢ",
              "ٿ",
              "ﭣ",
              "ٿ",
              "ﭤ",
              "ٿ",
              "ﭥ",
              "ٿ",
              "ﭦ",
              "ٹ",
              "ﭧ",
              "ٹ",
              "ﭨ",
              "ٹ",
              "ﭩ",
              "ٹ",
              "ﭪ",
              "ڤ",
              "ﭫ",
              "ڤ",
              "ﭬ",
              "ڤ",
              "ﭭ",
              "ڤ",
              "ﭮ",
              "ڦ",
              "ﭯ",
              "ڦ",
              "ﭰ",
              "ڦ",
              "ﭱ",
              "ڦ",
              "ﭲ",
              "ڄ",
              "ﭳ",
              "ڄ",
              "ﭴ",
              "ڄ",
              "ﭵ",
              "ڄ",
              "ﭶ",
              "ڃ",
              "ﭷ",
              "ڃ",
              "ﭸ",
              "ڃ",
              "ﭹ",
              "ڃ",
              "ﭺ",
              "چ",
              "ﭻ",
              "چ",
              "ﭼ",
              "چ",
              "ﭽ",
              "چ",
              "ﭾ",
              "ڇ",
              "ﭿ",
              "ڇ",
              "ﮀ",
              "ڇ",
              "ﮁ",
              "ڇ",
              "ﮂ",
              "ڍ",
              "ﮃ",
              "ڍ",
              "ﮄ",
              "ڌ",
              "ﮅ",
              "ڌ",
              "ﮆ",
              "ڎ",
              "ﮇ",
              "ڎ",
              "ﮈ",
              "ڈ",
              "ﮉ",
              "ڈ",
              "ﮊ",
              "ژ",
              "ﮋ",
              "ژ",
              "ﮌ",
              "ڑ",
              "ﮍ",
              "ڑ",
              "ﮎ",
              "ک",
              "ﮏ",
              "ک",
              "ﮐ",
              "ک",
              "ﮑ",
              "ک",
              "ﮒ",
              "گ",
              "ﮓ",
              "گ",
              "ﮔ",
              "گ",
              "ﮕ",
              "گ",
              "ﮖ",
              "ڳ",
              "ﮗ",
              "ڳ",
              "ﮘ",
              "ڳ",
              "ﮙ",
              "ڳ",
              "ﮚ",
              "ڱ",
              "ﮛ",
              "ڱ",
              "ﮜ",
              "ڱ",
              "ﮝ",
              "ڱ",
              "ﮞ",
              "ں",
              "ﮟ",
              "ں",
              "ﮠ",
              "ڻ",
              "ﮡ",
              "ڻ",
              "ﮢ",
              "ڻ",
              "ﮣ",
              "ڻ",
              "ﮤ",
              "ۀ",
              "ﮥ",
              "ۀ",
              "ﮦ",
              "ہ",
              "ﮧ",
              "ہ",
              "ﮨ",
              "ہ",
              "ﮩ",
              "ہ",
              "ﮪ",
              "ھ",
              "ﮫ",
              "ھ",
              "ﮬ",
              "ھ",
              "ﮭ",
              "ھ",
              "ﮮ",
              "ے",
              "ﮯ",
              "ے",
              "ﮰ",
              "ۓ",
              "ﮱ",
              "ۓ",
              "ﯓ",
              "ڭ",
              "ﯔ",
              "ڭ",
              "ﯕ",
              "ڭ",
              "ﯖ",
              "ڭ",
              "ﯗ",
              "ۇ",
              "ﯘ",
              "ۇ",
              "ﯙ",
              "ۆ",
              "ﯚ",
              "ۆ",
              "ﯛ",
              "ۈ",
              "ﯜ",
              "ۈ",
              "ﯝ",
              "ٷ",
              "ﯞ",
              "ۋ",
              "ﯟ",
              "ۋ",
              "ﯠ",
              "ۅ",
              "ﯡ",
              "ۅ",
              "ﯢ",
              "ۉ",
              "ﯣ",
              "ۉ",
              "ﯤ",
              "ې",
              "ﯥ",
              "ې",
              "ﯦ",
              "ې",
              "ﯧ",
              "ې",
              "ﯨ",
              "ى",
              "ﯩ",
              "ى",
              "ﯪ",
              "ئا",
              "ﯫ",
              "ئا",
              "ﯬ",
              "ئە",
              "ﯭ",
              "ئە",
              "ﯮ",
              "ئو",
              "ﯯ",
              "ئو",
              "ﯰ",
              "ئۇ",
              "ﯱ",
              "ئۇ",
              "ﯲ",
              "ئۆ",
              "ﯳ",
              "ئۆ",
              "ﯴ",
              "ئۈ",
              "ﯵ",
              "ئۈ",
              "ﯶ",
              "ئې",
              "ﯷ",
              "ئې",
              "ﯸ",
              "ئې",
              "ﯹ",
              "ئى",
              "ﯺ",
              "ئى",
              "ﯻ",
              "ئى",
              "ﯼ",
              "ی",
              "ﯽ",
              "ی",
              "ﯾ",
              "ی",
              "ﯿ",
              "ی",
              "ﰀ",
              "ئج",
              "ﰁ",
              "ئح",
              "ﰂ",
              "ئم",
              "ﰃ",
              "ئى",
              "ﰄ",
              "ئي",
              "ﰅ",
              "بج",
              "ﰆ",
              "بح",
              "ﰇ",
              "بخ",
              "ﰈ",
              "بم",
              "ﰉ",
              "بى",
              "ﰊ",
              "بي",
              "ﰋ",
              "تج",
              "ﰌ",
              "تح",
              "ﰍ",
              "تخ",
              "ﰎ",
              "تم",
              "ﰏ",
              "تى",
              "ﰐ",
              "تي",
              "ﰑ",
              "ثج",
              "ﰒ",
              "ثم",
              "ﰓ",
              "ثى",
              "ﰔ",
              "ثي",
              "ﰕ",
              "جح",
              "ﰖ",
              "جم",
              "ﰗ",
              "حج",
              "ﰘ",
              "حم",
              "ﰙ",
              "خج",
              "ﰚ",
              "خح",
              "ﰛ",
              "خم",
              "ﰜ",
              "سج",
              "ﰝ",
              "سح",
              "ﰞ",
              "سخ",
              "ﰟ",
              "سم",
              "ﰠ",
              "صح",
              "ﰡ",
              "صم",
              "ﰢ",
              "ضج",
              "ﰣ",
              "ضح",
              "ﰤ",
              "ضخ",
              "ﰥ",
              "ضم",
              "ﰦ",
              "طح",
              "ﰧ",
              "طم",
              "ﰨ",
              "ظم",
              "ﰩ",
              "عج",
              "ﰪ",
              "عم",
              "ﰫ",
              "غج",
              "ﰬ",
              "غم",
              "ﰭ",
              "فج",
              "ﰮ",
              "فح",
              "ﰯ",
              "فخ",
              "ﰰ",
              "فم",
              "ﰱ",
              "فى",
              "ﰲ",
              "في",
              "ﰳ",
              "قح",
              "ﰴ",
              "قم",
              "ﰵ",
              "قى",
              "ﰶ",
              "قي",
              "ﰷ",
              "كا",
              "ﰸ",
              "كج",
              "ﰹ",
              "كح",
              "ﰺ",
              "كخ",
              "ﰻ",
              "كل",
              "ﰼ",
              "كم",
              "ﰽ",
              "كى",
              "ﰾ",
              "كي",
              "ﰿ",
              "لج",
              "ﱀ",
              "لح",
              "ﱁ",
              "لخ",
              "ﱂ",
              "لم",
              "ﱃ",
              "لى",
              "ﱄ",
              "لي",
              "ﱅ",
              "مج",
              "ﱆ",
              "مح",
              "ﱇ",
              "مخ",
              "ﱈ",
              "مم",
              "ﱉ",
              "مى",
              "ﱊ",
              "مي",
              "ﱋ",
              "نج",
              "ﱌ",
              "نح",
              "ﱍ",
              "نخ",
              "ﱎ",
              "نم",
              "ﱏ",
              "نى",
              "ﱐ",
              "ني",
              "ﱑ",
              "هج",
              "ﱒ",
              "هم",
              "ﱓ",
              "هى",
              "ﱔ",
              "هي",
              "ﱕ",
              "يج",
              "ﱖ",
              "يح",
              "ﱗ",
              "يخ",
              "ﱘ",
              "يم",
              "ﱙ",
              "يى",
              "ﱚ",
              "يي",
              "ﱛ",
              "ذٰ",
              "ﱜ",
              "رٰ",
              "ﱝ",
              "ىٰ",
              "ﱞ",
              " ٌّ",
              "ﱟ",
              " ٍّ",
              "ﱠ",
              " َّ",
              "ﱡ",
              " ُّ",
              "ﱢ",
              " ِّ",
              "ﱣ",
              " ّٰ",
              "ﱤ",
              "ئر",
              "ﱥ",
              "ئز",
              "ﱦ",
              "ئم",
              "ﱧ",
              "ئن",
              "ﱨ",
              "ئى",
              "ﱩ",
              "ئي",
              "ﱪ",
              "بر",
              "ﱫ",
              "بز",
              "ﱬ",
              "بم",
              "ﱭ",
              "بن",
              "ﱮ",
              "بى",
              "ﱯ",
              "بي",
              "ﱰ",
              "تر",
              "ﱱ",
              "تز",
              "ﱲ",
              "تم",
              "ﱳ",
              "تن",
              "ﱴ",
              "تى",
              "ﱵ",
              "تي",
              "ﱶ",
              "ثر",
              "ﱷ",
              "ثز",
              "ﱸ",
              "ثم",
              "ﱹ",
              "ثن",
              "ﱺ",
              "ثى",
              "ﱻ",
              "ثي",
              "ﱼ",
              "فى",
              "ﱽ",
              "في",
              "ﱾ",
              "قى",
              "ﱿ",
              "قي",
              "ﲀ",
              "كا",
              "ﲁ",
              "كل",
              "ﲂ",
              "كم",
              "ﲃ",
              "كى",
              "ﲄ",
              "كي",
              "ﲅ",
              "لم",
              "ﲆ",
              "لى",
              "ﲇ",
              "لي",
              "ﲈ",
              "ما",
              "ﲉ",
              "مم",
              "ﲊ",
              "نر",
              "ﲋ",
              "نز",
              "ﲌ",
              "نم",
              "ﲍ",
              "نن",
              "ﲎ",
              "نى",
              "ﲏ",
              "ني",
              "ﲐ",
              "ىٰ",
              "ﲑ",
              "ير",
              "ﲒ",
              "يز",
              "ﲓ",
              "يم",
              "ﲔ",
              "ين",
              "ﲕ",
              "يى",
              "ﲖ",
              "يي",
              "ﲗ",
              "ئج",
              "ﲘ",
              "ئح",
              "ﲙ",
              "ئخ",
              "ﲚ",
              "ئم",
              "ﲛ",
              "ئه",
              "ﲜ",
              "بج",
              "ﲝ",
              "بح",
              "ﲞ",
              "بخ",
              "ﲟ",
              "بم",
              "ﲠ",
              "به",
              "ﲡ",
              "تج",
              "ﲢ",
              "تح",
              "ﲣ",
              "تخ",
              "ﲤ",
              "تم",
              "ﲥ",
              "ته",
              "ﲦ",
              "ثم",
              "ﲧ",
              "جح",
              "ﲨ",
              "جم",
              "ﲩ",
              "حج",
              "ﲪ",
              "حم",
              "ﲫ",
              "خج",
              "ﲬ",
              "خم",
              "ﲭ",
              "سج",
              "ﲮ",
              "سح",
              "ﲯ",
              "سخ",
              "ﲰ",
              "سم",
              "ﲱ",
              "صح",
              "ﲲ",
              "صخ",
              "ﲳ",
              "صم",
              "ﲴ",
              "ضج",
              "ﲵ",
              "ضح",
              "ﲶ",
              "ضخ",
              "ﲷ",
              "ضم",
              "ﲸ",
              "طح",
              "ﲹ",
              "ظم",
              "ﲺ",
              "عج",
              "ﲻ",
              "عم",
              "ﲼ",
              "غج",
              "ﲽ",
              "غم",
              "ﲾ",
              "فج",
              "ﲿ",
              "فح",
              "ﳀ",
              "فخ",
              "ﳁ",
              "فم",
              "ﳂ",
              "قح",
              "ﳃ",
              "قم",
              "ﳄ",
              "كج",
              "ﳅ",
              "كح",
              "ﳆ",
              "كخ",
              "ﳇ",
              "كل",
              "ﳈ",
              "كم",
              "ﳉ",
              "لج",
              "ﳊ",
              "لح",
              "ﳋ",
              "لخ",
              "ﳌ",
              "لم",
              "ﳍ",
              "له",
              "ﳎ",
              "مج",
              "ﳏ",
              "مح",
              "ﳐ",
              "مخ",
              "ﳑ",
              "مم",
              "ﳒ",
              "نج",
              "ﳓ",
              "نح",
              "ﳔ",
              "نخ",
              "ﳕ",
              "نم",
              "ﳖ",
              "نه",
              "ﳗ",
              "هج",
              "ﳘ",
              "هم",
              "ﳙ",
              "هٰ",
              "ﳚ",
              "يج",
              "ﳛ",
              "يح",
              "ﳜ",
              "يخ",
              "ﳝ",
              "يم",
              "ﳞ",
              "يه",
              "ﳟ",
              "ئم",
              "ﳠ",
              "ئه",
              "ﳡ",
              "بم",
              "ﳢ",
              "به",
              "ﳣ",
              "تم",
              "ﳤ",
              "ته",
              "ﳥ",
              "ثم",
              "ﳦ",
              "ثه",
              "ﳧ",
              "سم",
              "ﳨ",
              "سه",
              "ﳩ",
              "شم",
              "ﳪ",
              "شه",
              "ﳫ",
              "كل",
              "ﳬ",
              "كم",
              "ﳭ",
              "لم",
              "ﳮ",
              "نم",
              "ﳯ",
              "نه",
              "ﳰ",
              "يم",
              "ﳱ",
              "يه",
              "ﳲ",
              "ـَّ",
              "ﳳ",
              "ـُّ",
              "ﳴ",
              "ـِّ",
              "ﳵ",
              "طى",
              "ﳶ",
              "طي",
              "ﳷ",
              "عى",
              "ﳸ",
              "عي",
              "ﳹ",
              "غى",
              "ﳺ",
              "غي",
              "ﳻ",
              "سى",
              "ﳼ",
              "سي",
              "ﳽ",
              "شى",
              "ﳾ",
              "شي",
              "ﳿ",
              "حى",
              "ﴀ",
              "حي",
              "ﴁ",
              "جى",
              "ﴂ",
              "جي",
              "ﴃ",
              "خى",
              "ﴄ",
              "خي",
              "ﴅ",
              "صى",
              "ﴆ",
              "صي",
              "ﴇ",
              "ضى",
              "ﴈ",
              "ضي",
              "ﴉ",
              "شج",
              "ﴊ",
              "شح",
              "ﴋ",
              "شخ",
              "ﴌ",
              "شم",
              "ﴍ",
              "شر",
              "ﴎ",
              "سر",
              "ﴏ",
              "صر",
              "ﴐ",
              "ضر",
              "ﴑ",
              "طى",
              "ﴒ",
              "طي",
              "ﴓ",
              "عى",
              "ﴔ",
              "عي",
              "ﴕ",
              "غى",
              "ﴖ",
              "غي",
              "ﴗ",
              "سى",
              "ﴘ",
              "سي",
              "ﴙ",
              "شى",
              "ﴚ",
              "شي",
              "ﴛ",
              "حى",
              "ﴜ",
              "حي",
              "ﴝ",
              "جى",
              "ﴞ",
              "جي",
              "ﴟ",
              "خى",
              "ﴠ",
              "خي",
              "ﴡ",
              "صى",
              "ﴢ",
              "صي",
              "ﴣ",
              "ضى",
              "ﴤ",
              "ضي",
              "ﴥ",
              "شج",
              "ﴦ",
              "شح",
              "ﴧ",
              "شخ",
              "ﴨ",
              "شم",
              "ﴩ",
              "شر",
              "ﴪ",
              "سر",
              "ﴫ",
              "صر",
              "ﴬ",
              "ضر",
              "ﴭ",
              "شج",
              "ﴮ",
              "شح",
              "ﴯ",
              "شخ",
              "ﴰ",
              "شم",
              "ﴱ",
              "سه",
              "ﴲ",
              "شه",
              "ﴳ",
              "طم",
              "ﴴ",
              "سج",
              "ﴵ",
              "سح",
              "ﴶ",
              "سخ",
              "ﴷ",
              "شج",
              "ﴸ",
              "شح",
              "ﴹ",
              "شخ",
              "ﴺ",
              "طم",
              "ﴻ",
              "ظم",
              "ﴼ",
              "اً",
              "ﴽ",
              "اً",
              "ﵐ",
              "تجم",
              "ﵑ",
              "تحج",
              "ﵒ",
              "تحج",
              "ﵓ",
              "تحم",
              "ﵔ",
              "تخم",
              "ﵕ",
              "تمج",
              "ﵖ",
              "تمح",
              "ﵗ",
              "تمخ",
              "ﵘ",
              "جمح",
              "ﵙ",
              "جمح",
              "ﵚ",
              "حمي",
              "ﵛ",
              "حمى",
              "ﵜ",
              "سحج",
              "ﵝ",
              "سجح",
              "ﵞ",
              "سجى",
              "ﵟ",
              "سمح",
              "ﵠ",
              "سمح",
              "ﵡ",
              "سمج",
              "ﵢ",
              "سمم",
              "ﵣ",
              "سمم",
              "ﵤ",
              "صحح",
              "ﵥ",
              "صحح",
              "ﵦ",
              "صمم",
              "ﵧ",
              "شحم",
              "ﵨ",
              "شحم",
              "ﵩ",
              "شجي",
              "ﵪ",
              "شمخ",
              "ﵫ",
              "شمخ",
              "ﵬ",
              "شمم",
              "ﵭ",
              "شمم",
              "ﵮ",
              "ضحى",
              "ﵯ",
              "ضخم",
              "ﵰ",
              "ضخم",
              "ﵱ",
              "طمح",
              "ﵲ",
              "طمح",
              "ﵳ",
              "طمم",
              "ﵴ",
              "طمي",
              "ﵵ",
              "عجم",
              "ﵶ",
              "عمم",
              "ﵷ",
              "عمم",
              "ﵸ",
              "عمى",
              "ﵹ",
              "غمم",
              "ﵺ",
              "غمي",
              "ﵻ",
              "غمى",
              "ﵼ",
              "فخم",
              "ﵽ",
              "فخم",
              "ﵾ",
              "قمح",
              "ﵿ",
              "قمم",
              "ﶀ",
              "لحم",
              "ﶁ",
              "لحي",
              "ﶂ",
              "لحى",
              "ﶃ",
              "لجج",
              "ﶄ",
              "لجج",
              "ﶅ",
              "لخم",
              "ﶆ",
              "لخم",
              "ﶇ",
              "لمح",
              "ﶈ",
              "لمح",
              "ﶉ",
              "محج",
              "ﶊ",
              "محم",
              "ﶋ",
              "محي",
              "ﶌ",
              "مجح",
              "ﶍ",
              "مجم",
              "ﶎ",
              "مخج",
              "ﶏ",
              "مخم",
              "ﶒ",
              "مجخ",
              "ﶓ",
              "همج",
              "ﶔ",
              "همم",
              "ﶕ",
              "نحم",
              "ﶖ",
              "نحى",
              "ﶗ",
              "نجم",
              "ﶘ",
              "نجم",
              "ﶙ",
              "نجى",
              "ﶚ",
              "نمي",
              "ﶛ",
              "نمى",
              "ﶜ",
              "يمم",
              "ﶝ",
              "يمم",
              "ﶞ",
              "بخي",
              "ﶟ",
              "تجي",
              "ﶠ",
              "تجى",
              "ﶡ",
              "تخي",
              "ﶢ",
              "تخى",
              "ﶣ",
              "تمي",
              "ﶤ",
              "تمى",
              "ﶥ",
              "جمي",
              "ﶦ",
              "جحى",
              "ﶧ",
              "جمى",
              "ﶨ",
              "سخى",
              "ﶩ",
              "صحي",
              "ﶪ",
              "شحي",
              "ﶫ",
              "ضحي",
              "ﶬ",
              "لجي",
              "ﶭ",
              "لمي",
              "ﶮ",
              "يحي",
              "ﶯ",
              "يجي",
              "ﶰ",
              "يمي",
              "ﶱ",
              "ممي",
              "ﶲ",
              "قمي",
              "ﶳ",
              "نحي",
              "ﶴ",
              "قمح",
              "ﶵ",
              "لحم",
              "ﶶ",
              "عمي",
              "ﶷ",
              "كمي",
              "ﶸ",
              "نجح",
              "ﶹ",
              "مخي",
              "ﶺ",
              "لجم",
              "ﶻ",
              "كمم",
              "ﶼ",
              "لجم",
              "ﶽ",
              "نجح",
              "ﶾ",
              "جحي",
              "ﶿ",
              "حجي",
              "ﷀ",
              "مجي",
              "ﷁ",
              "فمي",
              "ﷂ",
              "بحي",
              "ﷃ",
              "كمم",
              "ﷄ",
              "عجم",
              "ﷅ",
              "صمم",
              "ﷆ",
              "سخي",
              "ﷇ",
              "نجي",
              "﹉",
              "‾",
              "﹊",
              "‾",
              "﹋",
              "‾",
              "﹌",
              "‾",
              "﹍",
              "_",
              "﹎",
              "_",
              "﹏",
              "_",
              "ﺀ",
              "ء",
              "ﺁ",
              "آ",
              "ﺂ",
              "آ",
              "ﺃ",
              "أ",
              "ﺄ",
              "أ",
              "ﺅ",
              "ؤ",
              "ﺆ",
              "ؤ",
              "ﺇ",
              "إ",
              "ﺈ",
              "إ",
              "ﺉ",
              "ئ",
              "ﺊ",
              "ئ",
              "ﺋ",
              "ئ",
              "ﺌ",
              "ئ",
              "ﺍ",
              "ا",
              "ﺎ",
              "ا",
              "ﺏ",
              "ب",
              "ﺐ",
              "ب",
              "ﺑ",
              "ب",
              "ﺒ",
              "ب",
              "ﺓ",
              "ة",
              "ﺔ",
              "ة",
              "ﺕ",
              "ت",
              "ﺖ",
              "ت",
              "ﺗ",
              "ت",
              "ﺘ",
              "ت",
              "ﺙ",
              "ث",
              "ﺚ",
              "ث",
              "ﺛ",
              "ث",
              "ﺜ",
              "ث",
              "ﺝ",
              "ج",
              "ﺞ",
              "ج",
              "ﺟ",
              "ج",
              "ﺠ",
              "ج",
              "ﺡ",
              "ح",
              "ﺢ",
              "ح",
              "ﺣ",
              "ح",
              "ﺤ",
              "ح",
              "ﺥ",
              "خ",
              "ﺦ",
              "خ",
              "ﺧ",
              "خ",
              "ﺨ",
              "خ",
              "ﺩ",
              "د",
              "ﺪ",
              "د",
              "ﺫ",
              "ذ",
              "ﺬ",
              "ذ",
              "ﺭ",
              "ر",
              "ﺮ",
              "ر",
              "ﺯ",
              "ز",
              "ﺰ",
              "ز",
              "ﺱ",
              "س",
              "ﺲ",
              "س",
              "ﺳ",
              "س",
              "ﺴ",
              "س",
              "ﺵ",
              "ش",
              "ﺶ",
              "ش",
              "ﺷ",
              "ش",
              "ﺸ",
              "ش",
              "ﺹ",
              "ص",
              "ﺺ",
              "ص",
              "ﺻ",
              "ص",
              "ﺼ",
              "ص",
              "ﺽ",
              "ض",
              "ﺾ",
              "ض",
              "ﺿ",
              "ض",
              "ﻀ",
              "ض",
              "ﻁ",
              "ط",
              "ﻂ",
              "ط",
              "ﻃ",
              "ط",
              "ﻄ",
              "ط",
              "ﻅ",
              "ظ",
              "ﻆ",
              "ظ",
              "ﻇ",
              "ظ",
              "ﻈ",
              "ظ",
              "ﻉ",
              "ع",
              "ﻊ",
              "ع",
              "ﻋ",
              "ع",
              "ﻌ",
              "ع",
              "ﻍ",
              "غ",
              "ﻎ",
              "غ",
              "ﻏ",
              "غ",
              "ﻐ",
              "غ",
              "ﻑ",
              "ف",
              "ﻒ",
              "ف",
              "ﻓ",
              "ف",
              "ﻔ",
              "ف",
              "ﻕ",
              "ق",
              "ﻖ",
              "ق",
              "ﻗ",
              "ق",
              "ﻘ",
              "ق",
              "ﻙ",
              "ك",
              "ﻚ",
              "ك",
              "ﻛ",
              "ك",
              "ﻜ",
              "ك",
              "ﻝ",
              "ل",
              "ﻞ",
              "ل",
              "ﻟ",
              "ل",
              "ﻠ",
              "ل",
              "ﻡ",
              "م",
              "ﻢ",
              "م",
              "ﻣ",
              "م",
              "ﻤ",
              "م",
              "ﻥ",
              "ن",
              "ﻦ",
              "ن",
              "ﻧ",
              "ن",
              "ﻨ",
              "ن",
              "ﻩ",
              "ه",
              "ﻪ",
              "ه",
              "ﻫ",
              "ه",
              "ﻬ",
              "ه",
              "ﻭ",
              "و",
              "ﻮ",
              "و",
              "ﻯ",
              "ى",
              "ﻰ",
              "ى",
              "ﻱ",
              "ي",
              "ﻲ",
              "ي",
              "ﻳ",
              "ي",
              "ﻴ",
              "ي",
              "ﻵ",
              "لآ",
              "ﻶ",
              "لآ",
              "ﻷ",
              "لأ",
              "ﻸ",
              "لأ",
              "ﻹ",
              "لإ",
              "ﻺ",
              "لإ",
              "ﻻ",
              "لا",
              "ﻼ",
              "لا",
            ];
          });
          function h(e) {
            var t = e.length;
            if (
              t <= 1 ||
              !(function (e) {
                var t = o[13];
                if (e >= t.begin && e < t.end) return !0;
                if (e >= (t = o[11]).begin && e < t.end) return !0;
                else return !1;
              })(e.charCodeAt(0))
            )
              return e;
            for (var i = "", n = t - 1; n >= 0; n--) i += e[n];
            return i;
          }
        },
        (e, t, i) => {
          Object.defineProperty(t, "__esModule", { value: !0 });
          t.FontRendererFactory = void 0;
          var n = i(2),
            r = i(30),
            a = i(33),
            s = i(32),
            o = i(12),
            l = (function () {
              function e(e, t) {
                return (
                  (e[t] << 24) | (e[t + 1] << 16) | (e[t + 2] << 8) | e[t + 3]
                );
              }
              function t(e, t) {
                return (e[t] << 8) | e[t + 1];
              }
              function i(e) {
                const t = e.length;
                let i = 32768;
                if (t < 1240) i = 107;
                else if (t < 33900) i = 1131;
                return i;
              }
              function l(i, r, a) {
                var s,
                  o,
                  l,
                  c = 1 === t(i, r + 2) ? e(i, r + 8) : e(i, r + 16),
                  h = t(i, r + c);
                if (4 === h) {
                  t(i, r + c + 2);
                  var u = t(i, r + c + 6) >> 1;
                  o = r + c + 14;
                  s = [];
                  for (l = 0; l < u; l++, o += 2) s[l] = { end: t(i, o) };
                  o += 2;
                  for (l = 0; l < u; l++, o += 2) s[l].start = t(i, o);
                  for (l = 0; l < u; l++, o += 2) s[l].idDelta = t(i, o);
                  for (l = 0; l < u; l++, o += 2) {
                    var d = t(i, o);
                    if (0 !== d) {
                      s[l].ids = [];
                      for (
                        var f = 0, p = s[l].end - s[l].start + 1;
                        f < p;
                        f++
                      ) {
                        s[l].ids[f] = t(i, o + d);
                        d += 2;
                      }
                    }
                  }
                  return s;
                } else if (12 === h) {
                  e(i, r + c + 4);
                  var g = e(i, r + c + 12);
                  o = r + c + 16;
                  s = [];
                  for (l = 0; l < g; l++) {
                    s.push({
                      start: e(i, o),
                      end: e(i, o + 4),
                      idDelta: e(i, o + 8) - e(i, o),
                    });
                    o += 12;
                  }
                  return s;
                }
                throw new n.FormatError(`unsupported cmap: ${h}`);
              }
              function c(e, t, i, n) {
                var a = new r.CFFParser(
                  new o.Stream(e, t, i - t),
                  {},
                  n
                ).parse();
                return {
                  glyphs: a.charStrings.objects,
                  subrs:
                    a.topDict.privateDict &&
                    a.topDict.privateDict.subrsIndex &&
                    a.topDict.privateDict.subrsIndex.objects,
                  gsubrs: a.globalSubrIndex && a.globalSubrIndex.objects,
                  isCFFCIDFont: a.isCIDFont,
                  fdSelect: a.fdSelect,
                  fdArray: a.fdArray,
                };
              }
              function h(e, t) {
                for (
                  var i = t.codePointAt(0), n = 0, r = 0, a = e.length - 1;
                  r < a;

                ) {
                  var s = (r + a + 1) >> 1;
                  if (i < e[s].start) a = s - 1;
                  else r = s;
                }
                if (e[r].start <= i && i <= e[r].end)
                  n =
                    (e[r].idDelta + (e[r].ids ? e[r].ids[i - e[r].start] : i)) &
                    65535;
                return { charCode: i, glyphId: n };
              }
              function u(e, t, i) {
                function n(e, i) {
                  t.push({ cmd: "moveTo", args: [e, i] });
                }
                function r(e, i) {
                  t.push({ cmd: "lineTo", args: [e, i] });
                }
                function a(e, i, n, r) {
                  t.push({ cmd: "quadraticCurveTo", args: [e, i, n, r] });
                }
                var s,
                  o = 0,
                  l = ((e[o] << 24) | (e[o + 1] << 16)) >> 16,
                  c = 0,
                  h = 0;
                o += 10;
                if (l < 0)
                  do {
                    s = (e[o] << 8) | e[o + 1];
                    var d,
                      f,
                      p = (e[o + 2] << 8) | e[o + 3];
                    o += 4;
                    if (1 & s) {
                      d = ((e[o] << 24) | (e[o + 1] << 16)) >> 16;
                      f = ((e[o + 2] << 24) | (e[o + 3] << 16)) >> 16;
                      o += 4;
                    } else {
                      d = e[o++];
                      f = e[o++];
                    }
                    if (2 & s) {
                      c = d;
                      h = f;
                    } else {
                      c = 0;
                      h = 0;
                    }
                    var g = 1,
                      m = 1,
                      v = 0,
                      b = 0;
                    if (8 & s) {
                      g = m = ((e[o] << 24) | (e[o + 1] << 16)) / 1073741824;
                      o += 2;
                    } else if (64 & s) {
                      g = ((e[o] << 24) | (e[o + 1] << 16)) / 1073741824;
                      m = ((e[o + 2] << 24) | (e[o + 3] << 16)) / 1073741824;
                      o += 4;
                    } else if (128 & s) {
                      g = ((e[o] << 24) | (e[o + 1] << 16)) / 1073741824;
                      v = ((e[o + 2] << 24) | (e[o + 3] << 16)) / 1073741824;
                      b = ((e[o + 4] << 24) | (e[o + 5] << 16)) / 1073741824;
                      m = ((e[o + 6] << 24) | (e[o + 7] << 16)) / 1073741824;
                      o += 8;
                    }
                    var y = i.glyphs[p];
                    if (y) {
                      t.push({ cmd: "save" });
                      t.push({ cmd: "transform", args: [g, v, b, m, c, h] });
                      u(y, t, i);
                      t.push({ cmd: "restore" });
                    }
                  } while (32 & s);
                else {
                  var w,
                    x,
                    k = [];
                  for (w = 0; w < l; w++) {
                    k.push((e[o] << 8) | e[o + 1]);
                    o += 2;
                  }
                  o += 2 + ((e[o] << 8) | e[o + 1]);
                  for (var C = k[k.length - 1] + 1, S = []; S.length < C; ) {
                    var _ = 1;
                    if (8 & (s = e[o++])) _ += e[o++];
                    for (; _-- > 0; ) S.push({ flags: s });
                  }
                  for (w = 0; w < C; w++) {
                    switch (18 & S[w].flags) {
                      case 0:
                        c += ((e[o] << 24) | (e[o + 1] << 16)) >> 16;
                        o += 2;
                        break;
                      case 2:
                        c -= e[o++];
                        break;
                      case 18:
                        c += e[o++];
                    }
                    S[w].x = c;
                  }
                  for (w = 0; w < C; w++) {
                    switch (36 & S[w].flags) {
                      case 0:
                        h += ((e[o] << 24) | (e[o + 1] << 16)) >> 16;
                        o += 2;
                        break;
                      case 4:
                        h -= e[o++];
                        break;
                      case 36:
                        h += e[o++];
                    }
                    S[w].y = h;
                  }
                  var A = 0;
                  for (o = 0; o < l; o++) {
                    var F = k[o],
                      T = S.slice(A, F + 1);
                    if (1 & T[0].flags) T.push(T[0]);
                    else if (1 & T[T.length - 1].flags)
                      T.unshift(T[T.length - 1]);
                    else {
                      var P = {
                        flags: 1,
                        x: (T[0].x + T[T.length - 1].x) / 2,
                        y: (T[0].y + T[T.length - 1].y) / 2,
                      };
                      T.unshift(P);
                      T.push(P);
                    }
                    n(T[0].x, T[0].y);
                    for (w = 1, x = T.length; w < x; w++)
                      if (1 & T[w].flags) r(T[w].x, T[w].y);
                      else if (1 & T[w + 1].flags) {
                        a(T[w].x, T[w].y, T[w + 1].x, T[w + 1].y);
                        w++;
                      } else
                        a(
                          T[w].x,
                          T[w].y,
                          (T[w].x + T[w + 1].x) / 2,
                          (T[w].y + T[w + 1].y) / 2
                        );
                    A = F + 1;
                  }
                }
              }
              function d(e, t, r, a) {
                function o(e, i) {
                  t.push({ cmd: "moveTo", args: [e, i] });
                }
                function l(e, i) {
                  t.push({ cmd: "lineTo", args: [e, i] });
                }
                function c(e, i, n, r, a, s) {
                  t.push({ cmd: "bezierCurveTo", args: [e, i, n, r, a, s] });
                }
                var u = [],
                  f = 0,
                  p = 0,
                  g = 0;
                !(function e(m) {
                  for (var v = 0; v < m.length; ) {
                    var b,
                      y,
                      w,
                      x,
                      k,
                      C,
                      S,
                      _,
                      A = !1,
                      F = m[v++];
                    switch (F) {
                      case 1:
                      case 3:
                        g += u.length >> 1;
                        A = !0;
                        break;
                      case 4:
                        p += u.pop();
                        o(f, p);
                        A = !0;
                        break;
                      case 5:
                        for (; u.length > 0; ) {
                          f += u.shift();
                          p += u.shift();
                          l(f, p);
                        }
                        break;
                      case 6:
                        for (; u.length > 0; ) {
                          l((f += u.shift()), p);
                          if (0 === u.length) break;
                          p += u.shift();
                          l(f, p);
                        }
                        break;
                      case 7:
                        for (; u.length > 0; ) {
                          p += u.shift();
                          l(f, p);
                          if (0 === u.length) break;
                          l((f += u.shift()), p);
                        }
                        break;
                      case 8:
                        for (; u.length > 0; ) {
                          b = f + u.shift();
                          w = p + u.shift();
                          y = b + u.shift();
                          x = w + u.shift();
                          f = y + u.shift();
                          p = x + u.shift();
                          c(b, w, y, x, f, p);
                        }
                        break;
                      case 10:
                        S = u.pop();
                        _ = null;
                        if (r.isCFFCIDFont) {
                          const e = r.fdSelect.getFDIndex(a);
                          if (e >= 0 && e < r.fdArray.length) {
                            const t = r.fdArray[e];
                            let n;
                            if (t.privateDict && t.privateDict.subrsIndex)
                              n = t.privateDict.subrsIndex.objects;
                            if (n) _ = n[(S += i(n))];
                          } else
                            (0, n.warn)("Invalid fd index for glyph index.");
                        } else _ = r.subrs[S + r.subrsBias];
                        if (_) e(_);
                        break;
                      case 11:
                        return;
                      case 12:
                        switch ((F = m[v++])) {
                          case 34:
                            y = (b = f + u.shift()) + u.shift();
                            k = p + u.shift();
                            f = y + u.shift();
                            c(b, p, y, k, f, k);
                            y = (b = f + u.shift()) + u.shift();
                            f = y + u.shift();
                            c(b, k, y, p, f, p);
                            break;
                          case 35:
                            b = f + u.shift();
                            w = p + u.shift();
                            y = b + u.shift();
                            x = w + u.shift();
                            f = y + u.shift();
                            p = x + u.shift();
                            c(b, w, y, x, f, p);
                            b = f + u.shift();
                            w = p + u.shift();
                            y = b + u.shift();
                            x = w + u.shift();
                            f = y + u.shift();
                            p = x + u.shift();
                            c(b, w, y, x, f, p);
                            u.pop();
                            break;
                          case 36:
                            c(
                              (b = f + u.shift()),
                              (k = p + u.shift()),
                              (y = b + u.shift()),
                              (C = k + u.shift()),
                              (f = y + u.shift()),
                              C
                            );
                            c(
                              (b = f + u.shift()),
                              C,
                              (y = b + u.shift()),
                              C + u.shift(),
                              (f = y + u.shift()),
                              p
                            );
                            break;
                          case 37:
                            var T = f,
                              P = p;
                            b = f + u.shift();
                            w = p + u.shift();
                            y = b + u.shift();
                            x = w + u.shift();
                            f = y + u.shift();
                            p = x + u.shift();
                            c(b, w, y, x, f, p);
                            b = f + u.shift();
                            w = p + u.shift();
                            y = b + u.shift();
                            x = w + u.shift();
                            f = y;
                            p = x;
                            if (Math.abs(f - T) > Math.abs(p - P))
                              f += u.shift();
                            else p += u.shift();
                            c(b, w, y, x, f, p);
                            break;
                          default:
                            throw new n.FormatError(
                              `unknown operator: 12 ${F}`
                            );
                        }
                        break;
                      case 14:
                        if (u.length >= 4) {
                          var E = u.pop(),
                            I = u.pop();
                          p = u.pop();
                          f = u.pop();
                          t.push({ cmd: "save" });
                          t.push({ cmd: "translate", args: [f, p] });
                          var D = h(
                            r.cmap,
                            String.fromCharCode(
                              r.glyphNameMap[s.StandardEncoding[E]]
                            )
                          );
                          d(r.glyphs[D.glyphId], t, r, D.glyphId);
                          t.push({ cmd: "restore" });
                          D = h(
                            r.cmap,
                            String.fromCharCode(
                              r.glyphNameMap[s.StandardEncoding[I]]
                            )
                          );
                          d(r.glyphs[D.glyphId], t, r, D.glyphId);
                        }
                        return;
                      case 18:
                        g += u.length >> 1;
                        A = !0;
                        break;
                      case 19:
                      case 20:
                        v += ((g += u.length >> 1) + 7) >> 3;
                        A = !0;
                        break;
                      case 21:
                        p += u.pop();
                        o((f += u.pop()), p);
                        A = !0;
                        break;
                      case 22:
                        o((f += u.pop()), p);
                        A = !0;
                        break;
                      case 23:
                        g += u.length >> 1;
                        A = !0;
                        break;
                      case 24:
                        for (; u.length > 2; ) {
                          b = f + u.shift();
                          w = p + u.shift();
                          y = b + u.shift();
                          x = w + u.shift();
                          f = y + u.shift();
                          p = x + u.shift();
                          c(b, w, y, x, f, p);
                        }
                        f += u.shift();
                        p += u.shift();
                        l(f, p);
                        break;
                      case 25:
                        for (; u.length > 6; ) {
                          f += u.shift();
                          p += u.shift();
                          l(f, p);
                        }
                        b = f + u.shift();
                        w = p + u.shift();
                        y = b + u.shift();
                        x = w + u.shift();
                        f = y + u.shift();
                        p = x + u.shift();
                        c(b, w, y, x, f, p);
                        break;
                      case 26:
                        if (u.length % 2) f += u.shift();
                        for (; u.length > 0; ) {
                          b = f;
                          w = p + u.shift();
                          y = b + u.shift();
                          x = w + u.shift();
                          f = y;
                          p = x + u.shift();
                          c(b, w, y, x, f, p);
                        }
                        break;
                      case 27:
                        if (u.length % 2) p += u.shift();
                        for (; u.length > 0; )
                          c(
                            (b = f + u.shift()),
                            (w = p),
                            (y = b + u.shift()),
                            (x = w + u.shift()),
                            (f = y + u.shift()),
                            (p = x)
                          );
                        break;
                      case 28:
                        u.push(((m[v] << 24) | (m[v + 1] << 16)) >> 16);
                        v += 2;
                        break;
                      case 29:
                        S = u.pop() + r.gsubrsBias;
                        if ((_ = r.gsubrs[S])) e(_);
                        break;
                      case 30:
                        for (; u.length > 0; ) {
                          b = f;
                          w = p + u.shift();
                          y = b + u.shift();
                          x = w + u.shift();
                          f = y + u.shift();
                          p = x + (1 === u.length ? u.shift() : 0);
                          c(b, w, y, x, f, p);
                          if (0 === u.length) break;
                          b = f + u.shift();
                          w = p;
                          y = b + u.shift();
                          x = w + u.shift();
                          p = x + u.shift();
                          c(
                            b,
                            w,
                            y,
                            x,
                            (f = y + (1 === u.length ? u.shift() : 0)),
                            p
                          );
                        }
                        break;
                      case 31:
                        for (; u.length > 0; ) {
                          b = f + u.shift();
                          w = p;
                          y = b + u.shift();
                          x = w + u.shift();
                          p = x + u.shift();
                          c(
                            b,
                            w,
                            y,
                            x,
                            (f = y + (1 === u.length ? u.shift() : 0)),
                            p
                          );
                          if (0 === u.length) break;
                          b = f;
                          w = p + u.shift();
                          y = b + u.shift();
                          x = w + u.shift();
                          f = y + u.shift();
                          p = x + (1 === u.length ? u.shift() : 0);
                          c(b, w, y, x, f, p);
                        }
                        break;
                      default:
                        if (F < 32)
                          throw new n.FormatError(`unknown operator: ${F}`);
                        if (F < 247) u.push(F - 139);
                        else if (F < 251)
                          u.push(256 * (F - 247) + m[v++] + 108);
                        else if (F < 255)
                          u.push(256 * -(F - 251) - m[v++] - 108);
                        else {
                          u.push(
                            ((m[v] << 24) |
                              (m[v + 1] << 16) |
                              (m[v + 2] << 8) |
                              m[v + 3]) /
                              65536
                          );
                          v += 4;
                        }
                    }
                    if (A) u.length = 0;
                  }
                })(e);
              }
              const f = [];
              class p {
                constructor(e) {
                  if (this.constructor === p)
                    (0, n.unreachable)("Cannot initialize CompiledFont.");
                  this.fontMatrix = e;
                  this.compiledGlyphs = Object.create(null);
                  this.compiledCharCodeToGlyphId = Object.create(null);
                }
                getPathJs(e) {
                  const t = h(this.cmap, e);
                  let i = this.compiledGlyphs[t.glyphId];
                  if (!i) {
                    i = this.compileGlyph(this.glyphs[t.glyphId], t.glyphId);
                    this.compiledGlyphs[t.glyphId] = i;
                  }
                  if (void 0 === this.compiledCharCodeToGlyphId[t.charCode])
                    this.compiledCharCodeToGlyphId[t.charCode] = t.glyphId;
                  return i;
                }
                compileGlyph(e, t) {
                  if (!e || 0 === e.length || 14 === e[0]) return f;
                  let i = this.fontMatrix;
                  if (this.isCFFCIDFont) {
                    const e = this.fdSelect.getFDIndex(t);
                    if (e >= 0 && e < this.fdArray.length)
                      i =
                        this.fdArray[e].getByName("FontMatrix") ||
                        n.FONT_IDENTITY_MATRIX;
                    else (0, n.warn)("Invalid fd index for glyph index.");
                  }
                  const r = [];
                  r.push({ cmd: "save" });
                  r.push({ cmd: "transform", args: i.slice() });
                  r.push({ cmd: "scale", args: ["size", "-size"] });
                  this.compileGlyphImpl(e, r, t);
                  r.push({ cmd: "restore" });
                  return r;
                }
                compileGlyphImpl() {
                  (0, n.unreachable)("Children classes should implement this.");
                }
                hasBuiltPath(e) {
                  const t = h(this.cmap, e);
                  return (
                    void 0 !== this.compiledGlyphs[t.glyphId] &&
                    void 0 !== this.compiledCharCodeToGlyphId[t.charCode]
                  );
                }
              }
              class g extends p {
                constructor(e, t, i) {
                  super(i || [488e-6, 0, 0, 488e-6, 0, 0]);
                  this.glyphs = e;
                  this.cmap = t;
                }
                compileGlyphImpl(e, t) {
                  u(e, t, this);
                }
              }
              class m extends p {
                constructor(e, t, n, r) {
                  super(n || [0.001, 0, 0, 0.001, 0, 0]);
                  this.glyphs = e.glyphs;
                  this.gsubrs = e.gsubrs || [];
                  this.subrs = e.subrs || [];
                  this.cmap = t;
                  this.glyphNameMap = r || (0, a.getGlyphsUnicode)();
                  this.gsubrsBias = i(this.gsubrs);
                  this.subrsBias = i(this.subrs);
                  this.isCFFCIDFont = e.isCFFCIDFont;
                  this.fdSelect = e.fdSelect;
                  this.fdArray = e.fdArray;
                }
                compileGlyphImpl(e, t, i) {
                  d(e, t, this, i);
                }
              }
              return {
                create: function (i, r) {
                  for (
                    var a,
                      s,
                      o,
                      h,
                      u,
                      d,
                      f = new Uint8Array(i.data),
                      p = t(f, 4),
                      v = 0,
                      b = 12;
                    v < p;
                    v++, b += 16
                  ) {
                    var y = (0, n.bytesToString)(f.subarray(b, b + 4)),
                      w = e(f, b + 8),
                      x = e(f, b + 12);
                    switch (y) {
                      case "cmap":
                        a = l(f, w);
                        break;
                      case "glyf":
                        s = f.subarray(w, w + x);
                        break;
                      case "loca":
                        o = f.subarray(w, w + x);
                        break;
                      case "head":
                        d = t(f, w + 18);
                        u = t(f, w + 50);
                        break;
                      case "CFF ":
                        h = c(f, w, w + x, r);
                    }
                  }
                  if (s) {
                    var k = !d ? i.fontMatrix : [1 / d, 0, 0, 1 / d, 0, 0];
                    return new g(
                      (function (e, t, i) {
                        var n, r;
                        if (i) {
                          n = 4;
                          r = function (e, t) {
                            return (
                              (e[t] << 24) |
                              (e[t + 1] << 16) |
                              (e[t + 2] << 8) |
                              e[t + 3]
                            );
                          };
                        } else {
                          n = 2;
                          r = function (e, t) {
                            return (e[t] << 9) | (e[t + 1] << 1);
                          };
                        }
                        for (
                          var a = [], s = r(t, 0), o = n;
                          o < t.length;
                          o += n
                        ) {
                          var l = r(t, o);
                          a.push(e.subarray(s, l));
                          s = l;
                        }
                        return a;
                      })(s, o, u),
                      a,
                      k
                    );
                  }
                  return new m(h, a, i.fontMatrix, i.glyphNameMap);
                },
              };
            })();
          t.FontRendererFactory = l;
        },
        (e, t, i) => {
          Object.defineProperty(t, "__esModule", { value: !0 });
          t.Type1Parser = void 0;
          var n = i(32),
            r = i(8),
            a = i(12),
            s = i(2),
            o = (function () {
              var e = [1],
                t = [3],
                i = [4],
                n = [5],
                r = [6],
                a = [7],
                o = [8],
                l = [12, 35],
                c = [14],
                h = [21],
                u = [22],
                d = [30],
                f = [31];
              function p() {
                this.width = 0;
                this.lsb = 0;
                this.flexing = !1;
                this.output = [];
                this.stack = [];
              }
              p.prototype = {
                convert: function (p, g, m) {
                  for (var v, b, y, w = p.length, x = !1, k = 0; k < w; k++) {
                    var C = p[k];
                    if (!(C < 32)) {
                      if (C <= 246) C -= 139;
                      else if (C <= 250) C = 256 * (C - 247) + p[++k] + 108;
                      else if (C <= 254) C = -256 * (C - 251) - p[++k] - 108;
                      else
                        C =
                          ((255 & p[++k]) << 24) |
                          ((255 & p[++k]) << 16) |
                          ((255 & p[++k]) << 8) |
                          ((255 & p[++k]) << 0);
                      this.stack.push(C);
                    } else {
                      if (12 === C) C = (C << 8) + p[++k];
                      switch (C) {
                        case 1:
                          if (1) {
                            this.stack = [];
                            break;
                          }
                          x = this.executeCommand(2, e);
                          break;
                        case 3:
                          if (1) {
                            this.stack = [];
                            break;
                          }
                          x = this.executeCommand(2, t);
                          break;
                        case 4:
                          if (this.flexing) {
                            if (this.stack.length < 1) {
                              x = !0;
                              break;
                            }
                            var S = this.stack.pop();
                            this.stack.push(0, S);
                            break;
                          }
                          x = this.executeCommand(1, i);
                          break;
                        case 5:
                          x = this.executeCommand(2, n);
                          break;
                        case 6:
                          x = this.executeCommand(1, r);
                          break;
                        case 7:
                          x = this.executeCommand(1, a);
                          break;
                        case 8:
                          x = this.executeCommand(6, o);
                          break;
                        case 9:
                          this.stack = [];
                          break;
                        case 10:
                          if (this.stack.length < 1) {
                            x = !0;
                            break;
                          }
                          if (!g[(y = this.stack.pop())]) {
                            x = !0;
                            break;
                          }
                          x = this.convert(g[y], g, m);
                          break;
                        case 11:
                          return x;
                        case 13:
                          if (this.stack.length < 2) {
                            x = !0;
                            break;
                          }
                          v = this.stack.pop();
                          b = this.stack.pop();
                          this.lsb = b;
                          this.width = v;
                          this.stack.push(v, b);
                          x = this.executeCommand(2, u);
                          break;
                        case 14:
                          this.output.push(c[0]);
                          break;
                        case 21:
                          if (this.flexing) break;
                          x = this.executeCommand(2, h);
                          break;
                        case 22:
                          if (this.flexing) {
                            this.stack.push(0);
                            break;
                          }
                          x = this.executeCommand(1, u);
                          break;
                        case 30:
                          x = this.executeCommand(4, d);
                          break;
                        case 31:
                          x = this.executeCommand(4, f);
                          break;
                        case 3072:
                          this.stack = [];
                          break;
                        case 3073:
                          if (1) {
                            this.stack = [];
                            break;
                          }
                          x = this.executeCommand(2, t);
                          break;
                        case 3074:
                          if (1) {
                            this.stack = [];
                            break;
                          }
                          x = this.executeCommand(2, e);
                          break;
                        case 3078:
                          if (m) {
                            const e = this.stack[this.stack.length - 5];
                            this.seac = this.stack.splice(-4, 4);
                            this.seac[0] += this.lsb - e;
                            x = this.executeCommand(0, c);
                          } else x = this.executeCommand(4, c);
                          break;
                        case 3079:
                          if (this.stack.length < 4) {
                            x = !0;
                            break;
                          }
                          this.stack.pop();
                          v = this.stack.pop();
                          var _ = this.stack.pop();
                          b = this.stack.pop();
                          this.lsb = b;
                          this.width = v;
                          this.stack.push(v, b, _);
                          x = this.executeCommand(3, h);
                          break;
                        case 3084:
                          if (this.stack.length < 2) {
                            x = !0;
                            break;
                          }
                          var A = this.stack.pop(),
                            F = this.stack.pop();
                          this.stack.push(F / A);
                          break;
                        case 3088:
                          if (this.stack.length < 2) {
                            x = !0;
                            break;
                          }
                          y = this.stack.pop();
                          var T = this.stack.pop();
                          if (0 === y && 3 === T) {
                            var P = this.stack.splice(
                              this.stack.length - 17,
                              17
                            );
                            this.stack.push(
                              P[2] + P[0],
                              P[3] + P[1],
                              P[4],
                              P[5],
                              P[6],
                              P[7],
                              P[8],
                              P[9],
                              P[10],
                              P[11],
                              P[12],
                              P[13],
                              P[14]
                            );
                            x = this.executeCommand(13, l, !0);
                            this.flexing = !1;
                            this.stack.push(P[15], P[16]);
                          } else if (1 === y && 0 === T) this.flexing = !0;
                          break;
                        case 3089:
                          break;
                        case 3105:
                          this.stack = [];
                          break;
                        default:
                          (0, s.warn)(
                            'Unknown type 1 charstring command of "' + C + '"'
                          );
                      }
                      if (x) break;
                    }
                  }
                  return x;
                },
                executeCommand(e, t, i) {
                  var n = this.stack.length;
                  if (e > n) return !0;
                  for (var r = n - e, a = r; a < n; a++) {
                    var s = this.stack[a];
                    if (Number.isInteger(s))
                      this.output.push(28, (s >> 8) & 255, 255 & s);
                    else {
                      s = (65536 * s) | 0;
                      this.output.push(
                        255,
                        (s >> 24) & 255,
                        (s >> 16) & 255,
                        (s >> 8) & 255,
                        255 & s
                      );
                    }
                  }
                  this.output.push.apply(this.output, t);
                  if (i) this.stack.splice(r, e);
                  else this.stack.length = 0;
                  return !1;
                },
              };
              return p;
            })(),
            l = (function () {
              function e(e) {
                return (
                  (e >= 48 && e <= 57) ||
                  (e >= 65 && e <= 70) ||
                  (e >= 97 && e <= 102)
                );
              }
              function t(e, t, i) {
                if (i >= e.length) return new Uint8Array(0);
                var n,
                  r,
                  a = 0 | t;
                for (n = 0; n < i; n++)
                  a = (52845 * (e[n] + a) + 22719) & 65535;
                var s = e.length - i,
                  o = new Uint8Array(s);
                for (n = i, r = 0; r < s; n++, r++) {
                  var l = e[n];
                  o[r] = l ^ (a >> 8);
                  a = (52845 * (l + a) + 22719) & 65535;
                }
                return o;
              }
              function i(e) {
                return (
                  47 === e ||
                  91 === e ||
                  93 === e ||
                  123 === e ||
                  125 === e ||
                  40 === e ||
                  41 === e
                );
              }
              function s(i, n, s) {
                if (n) {
                  var o = i.getBytes(),
                    l = !(
                      (e(o[0]) || (0, r.isWhiteSpace)(o[0])) &&
                      e(o[1]) &&
                      e(o[2]) &&
                      e(o[3]) &&
                      e(o[4]) &&
                      e(o[5]) &&
                      e(o[6]) &&
                      e(o[7])
                    );
                  i = new a.Stream(
                    l
                      ? t(o, 55665, 4)
                      : (function (t, i, n) {
                          var r,
                            a,
                            s = 55665,
                            o = t.length,
                            l = new Uint8Array(o >>> 1);
                          for (r = 0, a = 0; r < o; r++) {
                            var c = t[r];
                            if (e(c)) {
                              r++;
                              for (var h; r < o && !e((h = t[r])); ) r++;
                              if (r < o) {
                                var u = parseInt(String.fromCharCode(c, h), 16);
                                l[a++] = u ^ (s >> 8);
                                s = (52845 * (u + s) + 22719) & 65535;
                              }
                            }
                          }
                          return l.slice(4, a);
                        })(o)
                  );
                }
                this.seacAnalysisEnabled = !!s;
                this.stream = i;
                this.nextChar();
              }
              s.prototype = {
                readNumberArray: function () {
                  this.getToken();
                  for (var e = []; ; ) {
                    var t = this.getToken();
                    if (null === t || "]" === t || "}" === t) break;
                    e.push(parseFloat(t || 0));
                  }
                  return e;
                },
                readNumber: function () {
                  var e = this.getToken();
                  return parseFloat(e || 0);
                },
                readInt: function () {
                  var e = this.getToken();
                  return 0 | parseInt(e || 0, 10);
                },
                readBoolean: function () {
                  return "true" === this.getToken() ? 1 : 0;
                },
                nextChar: function () {
                  return (this.currentChar = this.stream.getByte());
                },
                getToken: function () {
                  for (var e = !1, t = this.currentChar; ; ) {
                    if (-1 === t) return null;
                    if (e) {
                      if (10 === t || 13 === t) e = !1;
                    } else if (37 === t) e = !0;
                    else if (!(0, r.isWhiteSpace)(t)) break;
                    t = this.nextChar();
                  }
                  if (i(t)) {
                    this.nextChar();
                    return String.fromCharCode(t);
                  }
                  var n = "";
                  do {
                    n += String.fromCharCode(t);
                    t = this.nextChar();
                  } while (t >= 0 && !(0, r.isWhiteSpace)(t) && !i(t));
                  return n;
                },
                readCharStrings: function (e, i) {
                  if (-1 === i) return e;
                  else return t(e, 4330, i);
                },
                extractFontProgram: function (e) {
                  var t = this.stream,
                    i = [],
                    n = [],
                    r = Object.create(null);
                  r.lenIV = 4;
                  for (
                    var a,
                      s,
                      l,
                      c,
                      h,
                      u = {
                        subrs: [],
                        charstrings: [],
                        properties: { privateData: r },
                      };
                    null !== (a = this.getToken());

                  )
                    if ("/" === a)
                      switch ((a = this.getToken())) {
                        case "CharStrings":
                          this.getToken();
                          this.getToken();
                          this.getToken();
                          this.getToken();
                          for (
                            ;
                            null !== (a = this.getToken()) && "end" !== a;

                          )
                            if ("/" === a) {
                              var d = this.getToken();
                              s = this.readInt();
                              this.getToken();
                              l = s > 0 ? t.getBytes(s) : new Uint8Array(0);
                              c = u.properties.privateData.lenIV;
                              h = this.readCharStrings(l, c);
                              this.nextChar();
                              if ("noaccess" === (a = this.getToken()))
                                this.getToken();
                              n.push({ glyph: d, encoded: h });
                            }
                          break;
                        case "Subrs":
                          this.readInt();
                          this.getToken();
                          for (; "dup" === this.getToken(); ) {
                            const e = this.readInt();
                            s = this.readInt();
                            this.getToken();
                            l = s > 0 ? t.getBytes(s) : new Uint8Array(0);
                            c = u.properties.privateData.lenIV;
                            h = this.readCharStrings(l, c);
                            this.nextChar();
                            if ("noaccess" === (a = this.getToken()))
                              this.getToken();
                            i[e] = h;
                          }
                          break;
                        case "BlueValues":
                        case "OtherBlues":
                        case "FamilyBlues":
                        case "FamilyOtherBlues":
                          var f = this.readNumberArray();
                          if ((f.length > 0 && f.length, 0))
                            u.properties.privateData[a] = f;
                          break;
                        case "StemSnapH":
                        case "StemSnapV":
                          u.properties.privateData[a] = this.readNumberArray();
                          break;
                        case "StdHW":
                        case "StdVW":
                          u.properties.privateData[a] =
                            this.readNumberArray()[0];
                          break;
                        case "BlueShift":
                        case "lenIV":
                        case "BlueFuzz":
                        case "BlueScale":
                        case "LanguageGroup":
                        case "ExpansionFactor":
                          u.properties.privateData[a] = this.readNumber();
                          break;
                        case "ForceBold":
                          u.properties.privateData[a] = this.readBoolean();
                      }
                  for (var p = 0; p < n.length; p++) {
                    d = n[p].glyph;
                    h = n[p].encoded;
                    var g = new o(),
                      m = g.convert(h, i, this.seacAnalysisEnabled),
                      v = g.output;
                    if (m) v = [14];
                    const t = {
                      glyphName: d,
                      charstring: v,
                      width: g.width,
                      lsb: g.lsb,
                      seac: g.seac,
                    };
                    if (".notdef" === d) u.charstrings.unshift(t);
                    else u.charstrings.push(t);
                    if (e.builtInEncoding) {
                      const t = e.builtInEncoding.indexOf(d);
                      if (
                        t > -1 &&
                        void 0 === e.widths[t] &&
                        t >= e.firstChar &&
                        t <= e.lastChar
                      )
                        e.widths[t] = g.width;
                    }
                  }
                  return u;
                },
                extractFontHeader: function (e) {
                  for (var t; null !== (t = this.getToken()); )
                    if ("/" === t)
                      switch ((t = this.getToken())) {
                        case "FontMatrix":
                          var i = this.readNumberArray();
                          e.fontMatrix = i;
                          break;
                        case "Encoding":
                          var r,
                            a = this.getToken();
                          if (!/^\d+$/.test(a)) r = (0, n.getEncoding)(a);
                          else {
                            r = [];
                            var s = 0 | parseInt(a, 10);
                            this.getToken();
                            for (var o = 0; o < s; o++) {
                              t = this.getToken();
                              for (; "dup" !== t && "def" !== t; )
                                if (null === (t = this.getToken())) return;
                              if ("def" === t) break;
                              var l = this.readInt();
                              this.getToken();
                              var c = this.getToken();
                              r[l] = c;
                              this.getToken();
                            }
                          }
                          e.builtInEncoding = r;
                          break;
                        case "FontBBox":
                          var h = this.readNumberArray();
                          e.ascent = Math.max(h[3], h[1]);
                          e.descent = Math.min(h[1], h[3]);
                          e.ascentScaled = !0;
                      }
                },
              };
              return s;
            })();
          t.Type1Parser = l;
        },
        (e, t, i) => {
          Object.defineProperty(t, "__esModule", { value: !0 });
          t.getTilingPatternIR = function (e, t, i) {
            const r = t.getArray("Matrix"),
              a = n.Util.normalizeRect(t.getArray("BBox")),
              s = t.get("XStep"),
              o = t.get("YStep"),
              l = t.get("PaintType"),
              c = t.get("TilingType");
            if (a[2] - a[0] == 0 || a[3] - a[1] == 0)
              throw new n.FormatError(
                `Invalid getTilingPatternIR /BBox array: [${a}].`
              );
            return ["TilingPattern", i, e, r, a, s, o, l, c];
          };
          t.Pattern = void 0;
          var n = i(2),
            r = i(23),
            a = i(5),
            s = i(8),
            o = (function () {
              function e() {
                (0, n.unreachable)("should not call Pattern constructor");
              }
              e.prototype = {
                getPattern: function (e) {
                  (0, n.unreachable)(`Should not call Pattern.getStyle: ${e}`);
                },
              };
              e.parseShading = function (e, t, i, r, o, c, h) {
                var u = (0, a.isStream)(e) ? e.dict : e,
                  d = u.get("ShadingType");
                try {
                  switch (d) {
                    case 2:
                    case 3:
                      return new l.RadialAxial(u, t, i, r, c, h);
                    case 4:
                    case 5:
                    case 6:
                    case 7:
                      return new l.Mesh(e, t, i, r, c, h);
                    default:
                      throw new n.FormatError("Unsupported ShadingType: " + d);
                  }
                } catch (e) {
                  if (e instanceof s.MissingDataException) throw e;
                  o.send("UnsupportedFeature", {
                    featureId: n.UNSUPPORTED_FEATURES.shadingPattern,
                  });
                  (0, n.warn)(e);
                  return new l.Dummy();
                }
              };
              return e;
            })();
          t.Pattern = o;
          var l = { SMALL_NUMBER: 1e-6 };
          l.RadialAxial = (function () {
            function e(e, t, i, a, s, o) {
              this.matrix = t;
              this.coordsArr = e.getArray("Coords");
              this.shadingType = e.get("ShadingType");
              this.type = "Pattern";
              const c = r.ColorSpace.parse({
                cs: e.getRaw("ColorSpace") || e.getRaw("CS"),
                xref: i,
                resources: a,
                pdfFunctionFactory: s,
                localColorSpaceCache: o,
              });
              this.cs = c;
              const h = e.getArray("BBox");
              if (Array.isArray(h) && 4 === h.length)
                this.bbox = n.Util.normalizeRect(h);
              else this.bbox = null;
              var u = 0,
                d = 1;
              if (e.has("Domain")) {
                var f = e.getArray("Domain");
                u = f[0];
                d = f[1];
              }
              var p = !1,
                g = !1;
              if (e.has("Extend")) {
                var m = e.getArray("Extend");
                p = m[0];
                g = m[1];
              }
              if (!(3 !== this.shadingType || (p && g))) {
                var v = this.coordsArr[0],
                  b = this.coordsArr[1],
                  y = this.coordsArr[2],
                  w = this.coordsArr[3],
                  x = this.coordsArr[4],
                  k = this.coordsArr[5],
                  C = Math.sqrt((v - w) * (v - w) + (b - x) * (b - x));
                if (y <= k + C && k <= y + C)
                  (0, n.warn)("Unsupported radial gradient.");
              }
              this.extendStart = p;
              this.extendEnd = g;
              var S = e.getRaw("Function"),
                _ = s.createFromArray(S);
              const A = (d - u) / 10;
              var F = (this.colorStops = []);
              if (!(u >= d || A <= 0)) {
                var T,
                  P = new Float32Array(c.numComps),
                  E = new Float32Array(1);
                for (let e = 0; e <= 10; e++) {
                  E[0] = u + e * A;
                  _(E, 0, P, 0);
                  T = c.getRgb(P, 0);
                  var I = n.Util.makeHexColor(T[0], T[1], T[2]);
                  F.push([e / 10, I]);
                }
                var D = "transparent";
                if (e.has("Background")) {
                  T = c.getRgb(e.get("Background"), 0);
                  D = n.Util.makeHexColor(T[0], T[1], T[2]);
                }
                if (!p) {
                  F.unshift([0, D]);
                  F[1][0] += l.SMALL_NUMBER;
                }
                if (!g) {
                  F[F.length - 1][0] -= l.SMALL_NUMBER;
                  F.push([1, D]);
                }
                this.colorStops = F;
              } else (0, n.info)("Bad shading domain.");
            }
            e.prototype = {
              getIR: function () {
                var e,
                  t,
                  i,
                  r,
                  a,
                  s = this.coordsArr,
                  o = this.shadingType;
                if (2 === o) {
                  t = [s[0], s[1]];
                  i = [s[2], s[3]];
                  r = null;
                  a = null;
                  e = "axial";
                } else if (3 === o) {
                  t = [s[0], s[1]];
                  i = [s[3], s[4]];
                  r = s[2];
                  a = s[5];
                  e = "radial";
                } else (0, n.unreachable)(`getPattern type unknown: ${o}`);
                var l = this.matrix;
                if (l) {
                  t = n.Util.applyTransform(t, l);
                  i = n.Util.applyTransform(i, l);
                  if (3 === o) {
                    var c = n.Util.singularValueDecompose2dScale(l);
                    r *= c[0];
                    a *= c[1];
                  }
                }
                return [
                  "RadialAxial",
                  e,
                  this.bbox,
                  this.colorStops,
                  t,
                  i,
                  r,
                  a,
                ];
              },
            };
            return e;
          })();
          l.Mesh = (function () {
            function e(e, t) {
              this.stream = e;
              this.context = t;
              this.buffer = 0;
              this.bufferLength = 0;
              var i = t.numComps;
              this.tmpCompsBuf = new Float32Array(i);
              var n = t.colorSpace.numComps;
              this.tmpCsCompsBuf = t.colorFn
                ? new Float32Array(n)
                : this.tmpCompsBuf;
            }
            e.prototype = {
              get hasData() {
                if (this.stream.end) return this.stream.pos < this.stream.end;
                if (this.bufferLength > 0) return !0;
                var e = this.stream.getByte();
                if (e < 0) return !1;
                this.buffer = e;
                this.bufferLength = 8;
                return !0;
              },
              readBits: function (e) {
                var t = this.buffer,
                  i = this.bufferLength;
                if (32 === e) {
                  if (0 === i)
                    return (
                      ((this.stream.getByte() << 24) |
                        (this.stream.getByte() << 16) |
                        (this.stream.getByte() << 8) |
                        this.stream.getByte()) >>>
                      0
                    );
                  t =
                    (t << 24) |
                    (this.stream.getByte() << 16) |
                    (this.stream.getByte() << 8) |
                    this.stream.getByte();
                  var n = this.stream.getByte();
                  this.buffer = n & ((1 << i) - 1);
                  return ((t << (8 - i)) | ((255 & n) >> i)) >>> 0;
                }
                if (8 === e && 0 === i) return this.stream.getByte();
                for (; i < e; ) {
                  t = (t << 8) | this.stream.getByte();
                  i += 8;
                }
                i -= e;
                this.bufferLength = i;
                this.buffer = t & ((1 << i) - 1);
                return t >> i;
              },
              align: function () {
                this.buffer = 0;
                this.bufferLength = 0;
              },
              readFlag: function () {
                return this.readBits(this.context.bitsPerFlag);
              },
              readCoordinate: function () {
                var e = this.context.bitsPerCoordinate,
                  t = this.readBits(e),
                  i = this.readBits(e),
                  n = this.context.decode,
                  r = e < 32 ? 1 / ((1 << e) - 1) : 2.3283064365386963e-10;
                return [
                  t * r * (n[1] - n[0]) + n[0],
                  i * r * (n[3] - n[2]) + n[2],
                ];
              },
              readComponents: function () {
                for (
                  var e = this.context.numComps,
                    t = this.context.bitsPerComponent,
                    i = t < 32 ? 1 / ((1 << t) - 1) : 2.3283064365386963e-10,
                    n = this.context.decode,
                    r = this.tmpCompsBuf,
                    a = 0,
                    s = 4;
                  a < e;
                  a++, s += 2
                ) {
                  var o = this.readBits(t);
                  r[a] = o * i * (n[s + 1] - n[s]) + n[s];
                }
                var l = this.tmpCsCompsBuf;
                if (this.context.colorFn) this.context.colorFn(r, 0, l, 0);
                return this.context.colorSpace.getRgb(l, 0);
              },
            };
            var t,
              i =
                ((t = []),
                function (e) {
                  if (!t[e])
                    t[e] = (function (e) {
                      for (var t = [], i = 0; i <= e; i++) {
                        var n = i / e,
                          r = 1 - n;
                        t.push(
                          new Float32Array([
                            r * r * r,
                            3 * n * r * r,
                            3 * n * n * r,
                            n * n * n,
                          ])
                        );
                      }
                      return t;
                    })(e);
                  return t[e];
                });
            function s(e, t) {
              var r = e.figures[t];
              (0, n.assert)("patch" === r.type, "Unexpected patch mesh figure");
              var a = e.coords,
                s = e.colors,
                o = r.coords,
                l = r.colors,
                c = Math.min(a[o[0]][0], a[o[3]][0], a[o[12]][0], a[o[15]][0]),
                h = Math.min(a[o[0]][1], a[o[3]][1], a[o[12]][1], a[o[15]][1]),
                u = Math.max(a[o[0]][0], a[o[3]][0], a[o[12]][0], a[o[15]][0]),
                d = Math.max(a[o[0]][1], a[o[3]][1], a[o[12]][1], a[o[15]][1]),
                f = Math.ceil((20 * (u - c)) / (e.bounds[2] - e.bounds[0]));
              f = Math.max(3, Math.min(20, f));
              var p = Math.ceil((20 * (d - h)) / (e.bounds[3] - e.bounds[1]));
              p = Math.max(3, Math.min(20, p));
              for (
                var g = f + 1,
                  m = new Int32Array((p + 1) * g),
                  v = new Int32Array((p + 1) * g),
                  b = 0,
                  y = new Uint8Array(3),
                  w = new Uint8Array(3),
                  x = s[l[0]],
                  k = s[l[1]],
                  C = s[l[2]],
                  S = s[l[3]],
                  _ = i(p),
                  A = i(f),
                  F = 0;
                F <= p;
                F++
              ) {
                y[0] = ((x[0] * (p - F) + C[0] * F) / p) | 0;
                y[1] = ((x[1] * (p - F) + C[1] * F) / p) | 0;
                y[2] = ((x[2] * (p - F) + C[2] * F) / p) | 0;
                w[0] = ((k[0] * (p - F) + S[0] * F) / p) | 0;
                w[1] = ((k[1] * (p - F) + S[1] * F) / p) | 0;
                w[2] = ((k[2] * (p - F) + S[2] * F) / p) | 0;
                for (var T = 0; T <= f; T++, b++)
                  if ((0 !== F && F !== p) || (0 !== T && T !== f)) {
                    for (var P = 0, E = 0, I = 0, D = 0; D <= 3; D++)
                      for (var O = 0; O <= 3; O++, I++) {
                        var R = _[F][D] * A[T][O];
                        P += a[o[I]][0] * R;
                        E += a[o[I]][1] * R;
                      }
                    m[b] = a.length;
                    a.push([P, E]);
                    v[b] = s.length;
                    var N = new Uint8Array(3);
                    N[0] = ((y[0] * (f - T) + w[0] * T) / f) | 0;
                    N[1] = ((y[1] * (f - T) + w[1] * T) / f) | 0;
                    N[2] = ((y[2] * (f - T) + w[2] * T) / f) | 0;
                    s.push(N);
                  }
              }
              m[0] = o[0];
              v[0] = l[0];
              m[f] = o[3];
              v[f] = l[1];
              m[g * p] = o[12];
              v[g * p] = l[2];
              m[g * p + f] = o[15];
              v[g * p + f] = l[3];
              e.figures[t] = {
                type: "lattice",
                coords: m,
                colors: v,
                verticesPerRow: g,
              };
            }
            function o(e) {
              for (
                var t = e.coords[0][0],
                  i = e.coords[0][1],
                  n = t,
                  r = i,
                  a = 1,
                  s = e.coords.length;
                a < s;
                a++
              ) {
                var o = e.coords[a][0],
                  l = e.coords[a][1];
                t = t > o ? o : t;
                i = i > l ? l : i;
                n = n < o ? o : n;
                r = r < l ? l : r;
              }
              e.bounds = [t, i, n, r];
            }
            function l(t, i, l, c, h, u) {
              if (!(0, a.isStream)(t))
                throw new n.FormatError("Mesh data is not a stream");
              var d = t.dict;
              this.matrix = i;
              this.shadingType = d.get("ShadingType");
              this.type = "Pattern";
              const f = d.getArray("BBox");
              if (Array.isArray(f) && 4 === f.length)
                this.bbox = n.Util.normalizeRect(f);
              else this.bbox = null;
              const p = r.ColorSpace.parse({
                cs: d.getRaw("ColorSpace") || d.getRaw("CS"),
                xref: l,
                resources: c,
                pdfFunctionFactory: h,
                localColorSpaceCache: u,
              });
              this.cs = p;
              this.background = d.has("Background")
                ? p.getRgb(d.get("Background"), 0)
                : null;
              var g = d.getRaw("Function"),
                m = g ? h.createFromArray(g) : null;
              this.coords = [];
              this.colors = [];
              this.figures = [];
              var v = new e(t, {
                  bitsPerCoordinate: d.get("BitsPerCoordinate"),
                  bitsPerComponent: d.get("BitsPerComponent"),
                  bitsPerFlag: d.get("BitsPerFlag"),
                  decode: d.getArray("Decode"),
                  colorFn: m,
                  colorSpace: p,
                  numComps: m ? 1 : p.numComps,
                }),
                b = !1;
              switch (this.shadingType) {
                case 4:
                  !(function (e, t) {
                    for (
                      var i = e.coords, r = e.colors, a = [], s = [], o = 0;
                      t.hasData;

                    ) {
                      var l = t.readFlag(),
                        c = t.readCoordinate(),
                        h = t.readComponents();
                      if (0 === o) {
                        if (!(0 <= l && l <= 2))
                          throw new n.FormatError("Unknown type4 flag");
                        switch (l) {
                          case 0:
                            o = 3;
                            break;
                          case 1:
                            s.push(s[s.length - 2], s[s.length - 1]);
                            o = 1;
                            break;
                          case 2:
                            s.push(s[s.length - 3], s[s.length - 1]);
                            o = 1;
                        }
                        a.push(l);
                      }
                      s.push(i.length);
                      i.push(c);
                      r.push(h);
                      o--;
                      t.align();
                    }
                    e.figures.push({
                      type: "triangles",
                      coords: new Int32Array(s),
                      colors: new Int32Array(s),
                    });
                  })(this, v);
                  break;
                case 5:
                  var y = 0 | d.get("VerticesPerRow");
                  if (y < 2) throw new n.FormatError("Invalid VerticesPerRow");
                  !(function (e, t, i) {
                    for (var n = e.coords, r = e.colors, a = []; t.hasData; ) {
                      var s = t.readCoordinate(),
                        o = t.readComponents();
                      a.push(n.length);
                      n.push(s);
                      r.push(o);
                    }
                    e.figures.push({
                      type: "lattice",
                      coords: new Int32Array(a),
                      colors: new Int32Array(a),
                      verticesPerRow: i,
                    });
                  })(this, v, y);
                  break;
                case 6:
                  !(function (e, t) {
                    for (
                      var i = e.coords,
                        r = e.colors,
                        a = new Int32Array(16),
                        s = new Int32Array(4);
                      t.hasData;

                    ) {
                      var o,
                        l,
                        c = t.readFlag();
                      if (!(0 <= c && c <= 3))
                        throw new n.FormatError("Unknown type6 flag");
                      var h = i.length;
                      for (o = 0, l = 0 !== c ? 8 : 12; o < l; o++)
                        i.push(t.readCoordinate());
                      var u,
                        d,
                        f,
                        p,
                        g = r.length;
                      for (o = 0, l = 0 !== c ? 2 : 4; o < l; o++)
                        r.push(t.readComponents());
                      switch (c) {
                        case 0:
                          a[12] = h + 3;
                          a[13] = h + 4;
                          a[14] = h + 5;
                          a[15] = h + 6;
                          a[8] = h + 2;
                          a[11] = h + 7;
                          a[4] = h + 1;
                          a[7] = h + 8;
                          a[0] = h;
                          a[1] = h + 11;
                          a[2] = h + 10;
                          a[3] = h + 9;
                          s[2] = g + 1;
                          s[3] = g + 2;
                          s[0] = g;
                          s[1] = g + 3;
                          break;
                        case 1:
                          u = a[12];
                          d = a[13];
                          f = a[14];
                          p = a[15];
                          a[12] = p;
                          a[13] = h + 0;
                          a[14] = h + 1;
                          a[15] = h + 2;
                          a[8] = f;
                          a[11] = h + 3;
                          a[4] = d;
                          a[7] = h + 4;
                          a[0] = u;
                          a[1] = h + 7;
                          a[2] = h + 6;
                          a[3] = h + 5;
                          u = s[2];
                          d = s[3];
                          s[2] = d;
                          s[3] = g;
                          s[0] = u;
                          s[1] = g + 1;
                          break;
                        case 2:
                          u = a[15];
                          d = a[11];
                          a[12] = a[3];
                          a[13] = h + 0;
                          a[14] = h + 1;
                          a[15] = h + 2;
                          a[8] = a[7];
                          a[11] = h + 3;
                          a[4] = d;
                          a[7] = h + 4;
                          a[0] = u;
                          a[1] = h + 7;
                          a[2] = h + 6;
                          a[3] = h + 5;
                          u = s[3];
                          s[2] = s[1];
                          s[3] = g;
                          s[0] = u;
                          s[1] = g + 1;
                          break;
                        case 3:
                          a[12] = a[0];
                          a[13] = h + 0;
                          a[14] = h + 1;
                          a[15] = h + 2;
                          a[8] = a[1];
                          a[11] = h + 3;
                          a[4] = a[2];
                          a[7] = h + 4;
                          a[0] = a[3];
                          a[1] = h + 7;
                          a[2] = h + 6;
                          a[3] = h + 5;
                          s[2] = s[0];
                          s[3] = g;
                          s[0] = s[1];
                          s[1] = g + 1;
                      }
                      a[5] = i.length;
                      i.push([
                        (-4 * i[a[0]][0] -
                          i[a[15]][0] +
                          6 * (i[a[4]][0] + i[a[1]][0]) -
                          2 * (i[a[12]][0] + i[a[3]][0]) +
                          3 * (i[a[13]][0] + i[a[7]][0])) /
                          9,
                        (-4 * i[a[0]][1] -
                          i[a[15]][1] +
                          6 * (i[a[4]][1] + i[a[1]][1]) -
                          2 * (i[a[12]][1] + i[a[3]][1]) +
                          3 * (i[a[13]][1] + i[a[7]][1])) /
                          9,
                      ]);
                      a[6] = i.length;
                      i.push([
                        (-4 * i[a[3]][0] -
                          i[a[12]][0] +
                          6 * (i[a[2]][0] + i[a[7]][0]) -
                          2 * (i[a[0]][0] + i[a[15]][0]) +
                          3 * (i[a[4]][0] + i[a[14]][0])) /
                          9,
                        (-4 * i[a[3]][1] -
                          i[a[12]][1] +
                          6 * (i[a[2]][1] + i[a[7]][1]) -
                          2 * (i[a[0]][1] + i[a[15]][1]) +
                          3 * (i[a[4]][1] + i[a[14]][1])) /
                          9,
                      ]);
                      a[9] = i.length;
                      i.push([
                        (-4 * i[a[12]][0] -
                          i[a[3]][0] +
                          6 * (i[a[8]][0] + i[a[13]][0]) -
                          2 * (i[a[0]][0] + i[a[15]][0]) +
                          3 * (i[a[11]][0] + i[a[1]][0])) /
                          9,
                        (-4 * i[a[12]][1] -
                          i[a[3]][1] +
                          6 * (i[a[8]][1] + i[a[13]][1]) -
                          2 * (i[a[0]][1] + i[a[15]][1]) +
                          3 * (i[a[11]][1] + i[a[1]][1])) /
                          9,
                      ]);
                      a[10] = i.length;
                      i.push([
                        (-4 * i[a[15]][0] -
                          i[a[0]][0] +
                          6 * (i[a[11]][0] + i[a[14]][0]) -
                          2 * (i[a[12]][0] + i[a[3]][0]) +
                          3 * (i[a[2]][0] + i[a[8]][0])) /
                          9,
                        (-4 * i[a[15]][1] -
                          i[a[0]][1] +
                          6 * (i[a[11]][1] + i[a[14]][1]) -
                          2 * (i[a[12]][1] + i[a[3]][1]) +
                          3 * (i[a[2]][1] + i[a[8]][1])) /
                          9,
                      ]);
                      e.figures.push({
                        type: "patch",
                        coords: new Int32Array(a),
                        colors: new Int32Array(s),
                      });
                    }
                  })(this, v);
                  b = !0;
                  break;
                case 7:
                  !(function (e, t) {
                    for (
                      var i = e.coords,
                        r = e.colors,
                        a = new Int32Array(16),
                        s = new Int32Array(4);
                      t.hasData;

                    ) {
                      var o,
                        l,
                        c = t.readFlag();
                      if (!(0 <= c && c <= 3))
                        throw new n.FormatError("Unknown type7 flag");
                      var h = i.length;
                      for (o = 0, l = 0 !== c ? 12 : 16; o < l; o++)
                        i.push(t.readCoordinate());
                      var u,
                        d,
                        f,
                        p,
                        g = r.length;
                      for (o = 0, l = 0 !== c ? 2 : 4; o < l; o++)
                        r.push(t.readComponents());
                      switch (c) {
                        case 0:
                          a[12] = h + 3;
                          a[13] = h + 4;
                          a[14] = h + 5;
                          a[15] = h + 6;
                          a[8] = h + 2;
                          a[9] = h + 13;
                          a[10] = h + 14;
                          a[11] = h + 7;
                          a[4] = h + 1;
                          a[5] = h + 12;
                          a[6] = h + 15;
                          a[7] = h + 8;
                          a[0] = h;
                          a[1] = h + 11;
                          a[2] = h + 10;
                          a[3] = h + 9;
                          s[2] = g + 1;
                          s[3] = g + 2;
                          s[0] = g;
                          s[1] = g + 3;
                          break;
                        case 1:
                          u = a[12];
                          d = a[13];
                          f = a[14];
                          p = a[15];
                          a[12] = p;
                          a[13] = h + 0;
                          a[14] = h + 1;
                          a[15] = h + 2;
                          a[8] = f;
                          a[9] = h + 9;
                          a[10] = h + 10;
                          a[11] = h + 3;
                          a[4] = d;
                          a[5] = h + 8;
                          a[6] = h + 11;
                          a[7] = h + 4;
                          a[0] = u;
                          a[1] = h + 7;
                          a[2] = h + 6;
                          a[3] = h + 5;
                          u = s[2];
                          d = s[3];
                          s[2] = d;
                          s[3] = g;
                          s[0] = u;
                          s[1] = g + 1;
                          break;
                        case 2:
                          u = a[15];
                          d = a[11];
                          a[12] = a[3];
                          a[13] = h + 0;
                          a[14] = h + 1;
                          a[15] = h + 2;
                          a[8] = a[7];
                          a[9] = h + 9;
                          a[10] = h + 10;
                          a[11] = h + 3;
                          a[4] = d;
                          a[5] = h + 8;
                          a[6] = h + 11;
                          a[7] = h + 4;
                          a[0] = u;
                          a[1] = h + 7;
                          a[2] = h + 6;
                          a[3] = h + 5;
                          u = s[3];
                          s[2] = s[1];
                          s[3] = g;
                          s[0] = u;
                          s[1] = g + 1;
                          break;
                        case 3:
                          a[12] = a[0];
                          a[13] = h + 0;
                          a[14] = h + 1;
                          a[15] = h + 2;
                          a[8] = a[1];
                          a[9] = h + 9;
                          a[10] = h + 10;
                          a[11] = h + 3;
                          a[4] = a[2];
                          a[5] = h + 8;
                          a[6] = h + 11;
                          a[7] = h + 4;
                          a[0] = a[3];
                          a[1] = h + 7;
                          a[2] = h + 6;
                          a[3] = h + 5;
                          s[2] = s[0];
                          s[3] = g;
                          s[0] = s[1];
                          s[1] = g + 1;
                      }
                      e.figures.push({
                        type: "patch",
                        coords: new Int32Array(a),
                        colors: new Int32Array(s),
                      });
                    }
                  })(this, v);
                  b = !0;
                  break;
                default:
                  (0, n.unreachable)("Unsupported mesh type.");
              }
              if (b) {
                o(this);
                for (var w = 0, x = this.figures.length; w < x; w++) s(this, w);
              }
              o(this);
              !(function (e) {
                var t,
                  i,
                  n,
                  r,
                  a = e.coords,
                  s = new Float32Array(2 * a.length);
                for (t = 0, n = 0, i = a.length; t < i; t++) {
                  var o = a[t];
                  s[n++] = o[0];
                  s[n++] = o[1];
                }
                e.coords = s;
                var l = e.colors,
                  c = new Uint8Array(3 * l.length);
                for (t = 0, n = 0, i = l.length; t < i; t++) {
                  var h = l[t];
                  c[n++] = h[0];
                  c[n++] = h[1];
                  c[n++] = h[2];
                }
                e.colors = c;
                var u = e.figures;
                for (t = 0, i = u.length; t < i; t++) {
                  var d = u[t],
                    f = d.coords,
                    p = d.colors;
                  for (n = 0, r = f.length; n < r; n++) {
                    f[n] *= 2;
                    p[n] *= 3;
                  }
                }
              })(this);
            }
            l.prototype = {
              getIR: function () {
                return [
                  "Mesh",
                  this.shadingType,
                  this.coords,
                  this.colors,
                  this.figures,
                  this.bounds,
                  this.matrix,
                  this.bbox,
                  this.background,
                ];
              },
            };
            return l;
          })();
          l.Dummy = (function () {
            function e() {
              this.type = "Pattern";
            }
            e.prototype = {
              getIR: function () {
                return ["Dummy"];
              },
            };
            return e;
          })();
        },
        (e, t, i) => {
          Object.defineProperty(t, "__esModule", { value: !0 });
          t.isPDFFunction = function (e) {
            var t;
            if ("object" != typeof e) return !1;
            else if ((0, n.isDict)(e)) t = e;
            else if ((0, n.isStream)(e)) t = e.dict;
            else return !1;
            return t.has("FunctionType");
          };
          t.PostScriptEvaluator =
            t.PostScriptCompiler =
            t.PDFFunctionFactory =
              void 0;
          var n = i(5),
            r = i(2),
            a = i(40),
            s = i(24);
          t.PDFFunctionFactory = class {
            constructor({ xref: e, isEvalSupported: t = !0 }) {
              this.xref = e;
              this.isEvalSupported = !1 !== t;
            }
            create(e) {
              const t = this.getCached(e);
              if (t) return t;
              const i = l.parse({
                xref: this.xref,
                isEvalSupported: this.isEvalSupported,
                fn: e instanceof n.Ref ? this.xref.fetch(e) : e,
              });
              this._cache(e, i);
              return i;
            }
            createFromArray(e) {
              const t = this.getCached(e);
              if (t) return t;
              const i = l.parseArray({
                xref: this.xref,
                isEvalSupported: this.isEvalSupported,
                fnObj: e instanceof n.Ref ? this.xref.fetch(e) : e,
              });
              this._cache(e, i);
              return i;
            }
            getCached(e) {
              let t;
              if (e instanceof n.Ref) t = e;
              else if (e instanceof n.Dict) t = e.objId;
              else if ((0, n.isStream)(e)) t = e.dict && e.dict.objId;
              if (t) {
                const e = this._localFunctionCache.getByRef(t);
                if (e) return e;
              }
              return null;
            }
            _cache(e, t) {
              if (!t)
                throw new Error(
                  'PDFFunctionFactory._cache - expected "parsedFunction" argument.'
                );
              let i;
              if (e instanceof n.Ref) i = e;
              else if (e instanceof n.Dict) i = e.objId;
              else if ((0, n.isStream)(e)) i = e.dict && e.dict.objId;
              if (i) this._localFunctionCache.set(null, i, t);
            }
            get _localFunctionCache() {
              return (0, r.shadow)(
                this,
                "_localFunctionCache",
                new s.LocalFunctionCache()
              );
            }
          };
          function o(e) {
            if (!Array.isArray(e)) return null;
            const t = e.length;
            for (let i = 0; i < t; i++)
              if ("number" != typeof e[i]) {
                const i = new Array(t);
                for (let n = 0; n < t; n++) i[n] = +e[n];
                return i;
              }
            return e;
          }
          var l = {
              getSampleArray(e, t, i, n) {
                var r,
                  a,
                  s = 1;
                for (r = 0, a = e.length; r < a; r++) s *= e[r];
                s *= t;
                var o = new Array(s),
                  l = 0,
                  c = 0,
                  h = 1 / (2 ** i - 1),
                  u = n.getBytes((s * i + 7) / 8),
                  d = 0;
                for (r = 0; r < s; r++) {
                  for (; l < i; ) {
                    c <<= 8;
                    c |= u[d++];
                    l += 8;
                  }
                  l -= i;
                  o[r] = (c >> l) * h;
                  c &= (1 << l) - 1;
                }
                return o;
              },
              getIR({ xref: e, isEvalSupported: t, fn: i }) {
                var n = i.dict;
                if (!n) n = i;
                var a = [
                  this.constructSampled,
                  null,
                  this.constructInterpolated,
                  this.constructStiched,
                  this.constructPostScript,
                ][n.get("FunctionType")];
                if (!a) throw new r.FormatError("Unknown type of function");
                return a.call(this, {
                  xref: e,
                  isEvalSupported: t,
                  fn: i,
                  dict: n,
                });
              },
              fromIR({ xref: e, isEvalSupported: t, IR: i }) {
                switch (i[0]) {
                  case 0:
                    return this.constructSampledFromIR({
                      xref: e,
                      isEvalSupported: t,
                      IR: i,
                    });
                  case 2:
                    return this.constructInterpolatedFromIR({
                      xref: e,
                      isEvalSupported: t,
                      IR: i,
                    });
                  case 3:
                    return this.constructStichedFromIR({
                      xref: e,
                      isEvalSupported: t,
                      IR: i,
                    });
                  default:
                    return this.constructPostScriptFromIR({
                      xref: e,
                      isEvalSupported: t,
                      IR: i,
                    });
                }
              },
              parse({ xref: e, isEvalSupported: t, fn: i }) {
                const n = this.getIR({ xref: e, isEvalSupported: t, fn: i });
                return this.fromIR({ xref: e, isEvalSupported: t, IR: n });
              },
              parseArray({ xref: e, isEvalSupported: t, fnObj: i }) {
                if (!Array.isArray(i))
                  return this.parse({ xref: e, isEvalSupported: t, fn: i });
                for (var n = [], r = 0, a = i.length; r < a; r++)
                  n.push(
                    this.parse({
                      xref: e,
                      isEvalSupported: t,
                      fn: e.fetchIfRef(i[r]),
                    })
                  );
                return function (e, t, i, r) {
                  for (var a = 0, s = n.length; a < s; a++)
                    n[a](e, t, i, r + a);
                };
              },
              constructSampled({
                xref: e,
                isEvalSupported: t,
                fn: i,
                dict: n,
              }) {
                function a(e) {
                  for (var t = e.length, i = [], n = 0, r = 0; r < t; r += 2) {
                    i[n] = [e[r], e[r + 1]];
                    ++n;
                  }
                  return i;
                }
                var s = o(n.getArray("Domain")),
                  l = o(n.getArray("Range"));
                if (!s || !l) throw new r.FormatError("No domain or range");
                var c = s.length / 2,
                  h = l.length / 2;
                s = a(s);
                l = a(l);
                var u = o(n.getArray("Size")),
                  d = n.get("BitsPerSample"),
                  f = n.get("Order") || 1;
                if (1 !== f)
                  (0, r.info)(
                    "No support for cubic spline interpolation: " + f
                  );
                var p = o(n.getArray("Encode"));
                if (!p) {
                  p = [];
                  for (var g = 0; g < c; ++g) p.push([0, u[g] - 1]);
                } else p = a(p);
                var m = o(n.getArray("Decode"));
                if (!m) m = l;
                else m = a(m);
                return [
                  0,
                  c,
                  s,
                  p,
                  m,
                  this.getSampleArray(u, h, d, i),
                  u,
                  h,
                  2 ** d - 1,
                  l,
                ];
              },
              constructSampledFromIR({ xref: e, isEvalSupported: t, IR: i }) {
                function n(e, t, i, n, r) {
                  return n + ((r - n) / (i - t)) * (e - t);
                }
                return function (e, t, r, a) {
                  var s,
                    o,
                    l = i[1],
                    c = i[2],
                    h = i[3],
                    u = i[4],
                    d = i[5],
                    f = i[6],
                    p = i[7],
                    g = i[9],
                    m = 1 << l,
                    v = new Float64Array(m),
                    b = new Uint32Array(m);
                  for (o = 0; o < m; o++) v[o] = 1;
                  var y = p,
                    w = 1;
                  for (s = 0; s < l; ++s) {
                    var x = c[s][0],
                      k = c[s][1],
                      C = n(
                        Math.min(Math.max(e[t + s], x), k),
                        x,
                        k,
                        h[s][0],
                        h[s][1]
                      ),
                      S = f[s],
                      _ =
                        (C = Math.min(Math.max(C, 0), S - 1)) < S - 1
                          ? Math.floor(C)
                          : C - 1,
                      A = _ + 1 - C,
                      F = C - _,
                      T = _ * y,
                      P = T + y;
                    for (o = 0; o < m; o++)
                      if (o & w) {
                        v[o] *= F;
                        b[o] += P;
                      } else {
                        v[o] *= A;
                        b[o] += T;
                      }
                    y *= S;
                    w <<= 1;
                  }
                  for (o = 0; o < p; ++o) {
                    var E = 0;
                    for (s = 0; s < m; s++) E += d[b[s] + o] * v[s];
                    E = n(E, 0, 1, u[o][0], u[o][1]);
                    r[a + o] = Math.min(Math.max(E, g[o][0]), g[o][1]);
                  }
                };
              },
              constructInterpolated({
                xref: e,
                isEvalSupported: t,
                fn: i,
                dict: n,
              }) {
                for (
                  var r = o(n.getArray("C0")) || [0],
                    a = o(n.getArray("C1")) || [1],
                    s = n.get("N"),
                    l = r.length,
                    c = [],
                    h = 0;
                  h < l;
                  ++h
                )
                  c.push(a[h] - r[h]);
                return [2, r, c, s];
              },
              constructInterpolatedFromIR({
                xref: e,
                isEvalSupported: t,
                IR: i,
              }) {
                var n = i[1],
                  r = i[2],
                  a = i[3],
                  s = r.length;
                return function (e, t, i, o) {
                  for (var l = 1 === a ? e[t] : e[t] ** a, c = 0; c < s; ++c)
                    i[o + c] = n[c] + l * r[c];
                };
              },
              constructStiched({
                xref: e,
                isEvalSupported: t,
                fn: i,
                dict: n,
              }) {
                var a = o(n.getArray("Domain"));
                if (!a) throw new r.FormatError("No domain");
                if (1 != a.length / 2)
                  throw new r.FormatError("Bad domain for stiched function");
                for (
                  var s = n.get("Functions"), l = [], c = 0, h = s.length;
                  c < h;
                  ++c
                )
                  l.push(
                    this.parse({
                      xref: e,
                      isEvalSupported: t,
                      fn: e.fetchIfRef(s[c]),
                    })
                  );
                return [
                  3,
                  a,
                  o(n.getArray("Bounds")),
                  o(n.getArray("Encode")),
                  l,
                ];
              },
              constructStichedFromIR({ xref: e, isEvalSupported: t, IR: i }) {
                var n = i[1],
                  r = i[2],
                  a = i[3],
                  s = i[4],
                  o = new Float32Array(1);
                return function (e, t, i, l) {
                  for (
                    var c = (function (e, t, i) {
                        if (e > i) e = i;
                        else if (e < t) e = t;
                        return e;
                      })(e[t], n[0], n[1]),
                      h = 0,
                      u = r.length;
                    h < u && !(c < r[h]);
                    ++h
                  );
                  var d = n[0];
                  if (h > 0) d = r[h - 1];
                  var f = n[1];
                  if (h < r.length) f = r[h];
                  var p = a[2 * h],
                    g = a[2 * h + 1];
                  o[0] = d === f ? p : p + ((c - d) * (g - p)) / (f - d);
                  s[h](o, 0, i, l);
                };
              },
              constructPostScript({
                xref: e,
                isEvalSupported: t,
                fn: i,
                dict: n,
              }) {
                var s = o(n.getArray("Domain")),
                  l = o(n.getArray("Range"));
                if (!s) throw new r.FormatError("No domain.");
                if (!l) throw new r.FormatError("No range.");
                var c = new a.PostScriptLexer(i);
                return [4, s, l, new a.PostScriptParser(c).parse()];
              },
              constructPostScriptFromIR({
                xref: e,
                isEvalSupported: t,
                IR: i,
              }) {
                var n = i[1],
                  a = i[2],
                  s = i[3];
                if (t && r.IsEvalSupportedCached.value) {
                  const e = new u().compile(s, n, a);
                  if (e)
                    return new Function(
                      "src",
                      "srcOffset",
                      "dest",
                      "destOffset",
                      e
                    );
                }
                (0, r.info)("Unable to compile PS function");
                var o = a.length >> 1,
                  l = n.length >> 1,
                  c = new h(s),
                  d = Object.create(null),
                  f = 8192,
                  p = new Float32Array(l);
                return function (e, t, i, n) {
                  var r,
                    s,
                    h = "",
                    u = p;
                  for (r = 0; r < l; r++) {
                    s = e[t + r];
                    u[r] = s;
                    h += s + "_";
                  }
                  var g = d[h];
                  if (void 0 === g) {
                    var m = new Float32Array(o),
                      v = c.execute(u),
                      b = v.length - o;
                    for (r = 0; r < o; r++) {
                      s = v[b + r];
                      var y = a[2 * r];
                      if (s < y) s = y;
                      else if (s > (y = a[2 * r + 1])) s = y;
                      m[r] = s;
                    }
                    if (f > 0) {
                      f--;
                      d[h] = m;
                    }
                    i.set(m, n);
                  } else i.set(g, n);
                };
              },
            },
            c = (function () {
              function e(e) {
                this.stack = !e ? [] : Array.prototype.slice.call(e, 0);
              }
              e.prototype = {
                push: function (e) {
                  if (this.stack.length >= 100)
                    throw new Error("PostScript function stack overflow.");
                  this.stack.push(e);
                },
                pop: function () {
                  if (this.stack.length <= 0)
                    throw new Error("PostScript function stack underflow.");
                  return this.stack.pop();
                },
                copy: function (e) {
                  if (this.stack.length + e >= 100)
                    throw new Error("PostScript function stack overflow.");
                  for (
                    var t = this.stack, i = t.length - e, n = e - 1;
                    n >= 0;
                    n--, i++
                  )
                    t.push(t[i]);
                },
                index: function (e) {
                  this.push(this.stack[this.stack.length - e - 1]);
                },
                roll: function (e, t) {
                  var i,
                    n,
                    r,
                    a = this.stack,
                    s = a.length - e,
                    o = a.length - 1,
                    l = s + (t - Math.floor(t / e) * e);
                  for (i = s, n = o; i < n; i++, n--) {
                    r = a[i];
                    a[i] = a[n];
                    a[n] = r;
                  }
                  for (i = s, n = l - 1; i < n; i++, n--) {
                    r = a[i];
                    a[i] = a[n];
                    a[n] = r;
                  }
                  for (i = l, n = o; i < n; i++, n--) {
                    r = a[i];
                    a[i] = a[n];
                    a[n] = r;
                  }
                },
              };
              return e;
            })(),
            h = (function () {
              function e(e) {
                this.operators = e;
              }
              e.prototype = {
                execute: function (e) {
                  for (
                    var t,
                      i,
                      n,
                      a = new c(e),
                      s = 0,
                      o = this.operators,
                      l = o.length;
                    s < l;

                  )
                    if ("number" != typeof (t = o[s++]))
                      switch (t) {
                        case "jz":
                          n = a.pop();
                          if (!(i = a.pop())) s = n;
                          break;
                        case "j":
                          s = i = a.pop();
                          break;
                        case "abs":
                          i = a.pop();
                          a.push(Math.abs(i));
                          break;
                        case "add":
                          n = a.pop();
                          i = a.pop();
                          a.push(i + n);
                          break;
                        case "and":
                          n = a.pop();
                          i = a.pop();
                          if ((0, r.isBool)(i) && (0, r.isBool)(n))
                            a.push(i && n);
                          else a.push(i & n);
                          break;
                        case "atan":
                          i = a.pop();
                          a.push(Math.atan(i));
                          break;
                        case "bitshift":
                          n = a.pop();
                          if ((i = a.pop()) > 0) a.push(i << n);
                          else a.push(i >> n);
                          break;
                        case "ceiling":
                          i = a.pop();
                          a.push(Math.ceil(i));
                          break;
                        case "copy":
                          i = a.pop();
                          a.copy(i);
                          break;
                        case "cos":
                          i = a.pop();
                          a.push(Math.cos(i));
                          break;
                        case "cvi":
                          i = 0 | a.pop();
                          a.push(i);
                          break;
                        case "cvr":
                          break;
                        case "div":
                          n = a.pop();
                          i = a.pop();
                          a.push(i / n);
                          break;
                        case "dup":
                          a.copy(1);
                          break;
                        case "eq":
                          n = a.pop();
                          i = a.pop();
                          a.push(i === n);
                          break;
                        case "exch":
                          a.roll(2, 1);
                          break;
                        case "exp":
                          n = a.pop();
                          i = a.pop();
                          a.push(i ** n);
                          break;
                        case "false":
                          a.push(!1);
                          break;
                        case "floor":
                          i = a.pop();
                          a.push(Math.floor(i));
                          break;
                        case "ge":
                          n = a.pop();
                          i = a.pop();
                          a.push(i >= n);
                          break;
                        case "gt":
                          n = a.pop();
                          i = a.pop();
                          a.push(i > n);
                          break;
                        case "idiv":
                          n = a.pop();
                          i = a.pop();
                          a.push((i / n) | 0);
                          break;
                        case "index":
                          i = a.pop();
                          a.index(i);
                          break;
                        case "le":
                          n = a.pop();
                          i = a.pop();
                          a.push(i <= n);
                          break;
                        case "ln":
                          i = a.pop();
                          a.push(Math.log(i));
                          break;
                        case "log":
                          i = a.pop();
                          a.push(Math.log(i) / Math.LN10);
                          break;
                        case "lt":
                          n = a.pop();
                          i = a.pop();
                          a.push(i < n);
                          break;
                        case "mod":
                          n = a.pop();
                          i = a.pop();
                          a.push(i % n);
                          break;
                        case "mul":
                          n = a.pop();
                          i = a.pop();
                          a.push(i * n);
                          break;
                        case "ne":
                          n = a.pop();
                          i = a.pop();
                          a.push(i !== n);
                          break;
                        case "neg":
                          i = a.pop();
                          a.push(-i);
                          break;
                        case "not":
                          i = a.pop();
                          if ((0, r.isBool)(i)) a.push(!i);
                          else a.push(~i);
                          break;
                        case "or":
                          n = a.pop();
                          i = a.pop();
                          if ((0, r.isBool)(i) && (0, r.isBool)(n))
                            a.push(i || n);
                          else a.push(i | n);
                          break;
                        case "pop":
                          a.pop();
                          break;
                        case "roll":
                          n = a.pop();
                          i = a.pop();
                          a.roll(i, n);
                          break;
                        case "round":
                          i = a.pop();
                          a.push(Math.round(i));
                          break;
                        case "sin":
                          i = a.pop();
                          a.push(Math.sin(i));
                          break;
                        case "sqrt":
                          i = a.pop();
                          a.push(Math.sqrt(i));
                          break;
                        case "sub":
                          n = a.pop();
                          i = a.pop();
                          a.push(i - n);
                          break;
                        case "true":
                          a.push(!0);
                          break;
                        case "truncate":
                          i = (i = a.pop()) < 0 ? Math.ceil(i) : Math.floor(i);
                          a.push(i);
                          break;
                        case "xor":
                          n = a.pop();
                          i = a.pop();
                          if ((0, r.isBool)(i) && (0, r.isBool)(n))
                            a.push(i !== n);
                          else a.push(i ^ n);
                          break;
                        default:
                          throw new r.FormatError(`Unknown operator ${t}`);
                      }
                    else a.push(t);
                  return a.stack;
                },
              };
              return e;
            })();
          t.PostScriptEvaluator = h;
          var u = (function () {
            function e(e) {
              this.type = e;
            }
            e.prototype.visit = function (e) {
              (0, r.unreachable)("abstract method");
            };
            function t(t, i, n) {
              e.call(this, "args");
              this.index = t;
              this.min = i;
              this.max = n;
            }
            t.prototype = Object.create(e.prototype);
            t.prototype.visit = function (e) {
              e.visitArgument(this);
            };
            function i(t) {
              e.call(this, "literal");
              this.number = t;
              this.min = t;
              this.max = t;
            }
            i.prototype = Object.create(e.prototype);
            i.prototype.visit = function (e) {
              e.visitLiteral(this);
            };
            function n(t, i, n, r, a) {
              e.call(this, "binary");
              this.op = t;
              this.arg1 = i;
              this.arg2 = n;
              this.min = r;
              this.max = a;
            }
            n.prototype = Object.create(e.prototype);
            n.prototype.visit = function (e) {
              e.visitBinaryOperation(this);
            };
            function a(t, i) {
              e.call(this, "max");
              this.arg = t;
              this.min = t.min;
              this.max = i;
            }
            a.prototype = Object.create(e.prototype);
            a.prototype.visit = function (e) {
              e.visitMin(this);
            };
            function s(t, i, n) {
              e.call(this, "var");
              this.index = t;
              this.min = i;
              this.max = n;
            }
            s.prototype = Object.create(e.prototype);
            s.prototype.visit = function (e) {
              e.visitVariable(this);
            };
            function o(t, i) {
              e.call(this, "definition");
              this.variable = t;
              this.arg = i;
            }
            o.prototype = Object.create(e.prototype);
            o.prototype.visit = function (e) {
              e.visitVariableDefinition(this);
            };
            function l() {
              this.parts = [];
            }
            l.prototype = {
              visitArgument(e) {
                this.parts.push(
                  "Math.max(",
                  e.min,
                  ", Math.min(",
                  e.max,
                  ", src[srcOffset + ",
                  e.index,
                  "]))"
                );
              },
              visitVariable(e) {
                this.parts.push("v", e.index);
              },
              visitLiteral(e) {
                this.parts.push(e.number);
              },
              visitBinaryOperation(e) {
                this.parts.push("(");
                e.arg1.visit(this);
                this.parts.push(" ", e.op, " ");
                e.arg2.visit(this);
                this.parts.push(")");
              },
              visitVariableDefinition(e) {
                this.parts.push("var ");
                e.variable.visit(this);
                this.parts.push(" = ");
                e.arg.visit(this);
                this.parts.push(";");
              },
              visitMin(e) {
                this.parts.push("Math.min(");
                e.arg.visit(this);
                this.parts.push(", ", e.max, ")");
              },
              toString() {
                return this.parts.join("");
              },
            };
            function c(e, t) {
              if ("literal" === t.type && 0 === t.number) return e;
              if ("literal" === e.type && 0 === e.number) return t;
              if ("literal" === t.type && "literal" === e.type)
                return new i(e.number + t.number);
              else return new n("+", e, t, e.min + t.min, e.max + t.max);
            }
            function h(e, t) {
              if ("literal" === t.type)
                if (0 === t.number) return new i(0);
                else if (1 === t.number) return e;
                else if ("literal" === e.type)
                  return new i(e.number * t.number);
              if ("literal" === e.type)
                if (0 === e.number) return new i(0);
                else if (1 === e.number) return t;
              return new n(
                "*",
                e,
                t,
                Math.min(
                  e.min * t.min,
                  e.min * t.max,
                  e.max * t.min,
                  e.max * t.max
                ),
                Math.max(
                  e.min * t.min,
                  e.min * t.max,
                  e.max * t.min,
                  e.max * t.max
                )
              );
            }
            function u(e, t) {
              if ("literal" === t.type)
                if (0 === t.number) return e;
                else if ("literal" === e.type)
                  return new i(e.number - t.number);
              if (
                "binary" === t.type &&
                "-" === t.op &&
                "literal" === e.type &&
                1 === e.number &&
                "literal" === t.arg1.type &&
                1 === t.arg1.number
              )
                return t.arg2;
              else return new n("-", e, t, e.min - t.max, e.max - t.min);
            }
            function d(e, t) {
              if (e.min >= t) return new i(t);
              else if (e.max <= t) return e;
              return new a(e, t);
            }
            function f() {}
            f.prototype = {
              compile: function (e, n, r) {
                var a,
                  f,
                  p,
                  g,
                  m,
                  v,
                  b,
                  y,
                  w = [],
                  x = [],
                  k = n.length >> 1,
                  C = r.length >> 1,
                  S = 0;
                for (let e = 0; e < k; e++)
                  w.push(new t(e, n[2 * e], n[2 * e + 1]));
                for (let t = 0, n = e.length; t < n; t++)
                  if ("number" != typeof (y = e[t]))
                    switch (y) {
                      case "add":
                        if (w.length < 2) return null;
                        g = w.pop();
                        p = w.pop();
                        w.push(c(p, g));
                        break;
                      case "cvr":
                        if (w.length < 1) return null;
                        break;
                      case "mul":
                        if (w.length < 2) return null;
                        g = w.pop();
                        p = w.pop();
                        w.push(h(p, g));
                        break;
                      case "sub":
                        if (w.length < 2) return null;
                        g = w.pop();
                        p = w.pop();
                        w.push(u(p, g));
                        break;
                      case "exch":
                        if (w.length < 2) return null;
                        m = w.pop();
                        v = w.pop();
                        w.push(m, v);
                        break;
                      case "pop":
                        if (w.length < 1) return null;
                        w.pop();
                        break;
                      case "index":
                        if (w.length < 1) return null;
                        if ("literal" !== (p = w.pop()).type) return null;
                        if (
                          (a = p.number) < 0 ||
                          !Number.isInteger(a) ||
                          w.length < a
                        )
                          return null;
                        if (
                          "literal" === (m = w[w.length - a - 1]).type ||
                          "var" === m.type
                        ) {
                          w.push(m);
                          break;
                        }
                        b = new s(S++, m.min, m.max);
                        w[w.length - a - 1] = b;
                        w.push(b);
                        x.push(new o(b, m));
                        break;
                      case "dup":
                        if (w.length < 1) return null;
                        if (
                          "number" == typeof e[t + 1] &&
                          "gt" === e[t + 2] &&
                          e[t + 3] === t + 7 &&
                          "jz" === e[t + 4] &&
                          "pop" === e[t + 5] &&
                          e[t + 6] === e[t + 1]
                        ) {
                          p = w.pop();
                          w.push(d(p, e[t + 1]));
                          t += 6;
                          break;
                        }
                        if (
                          "literal" === (m = w[w.length - 1]).type ||
                          "var" === m.type
                        ) {
                          w.push(m);
                          break;
                        }
                        b = new s(S++, m.min, m.max);
                        w[w.length - 1] = b;
                        w.push(b);
                        x.push(new o(b, m));
                        break;
                      case "roll":
                        if (w.length < 2) return null;
                        g = w.pop();
                        p = w.pop();
                        if ("literal" !== g.type || "literal" !== p.type)
                          return null;
                        f = g.number;
                        if (
                          (a = p.number) <= 0 ||
                          !Number.isInteger(a) ||
                          !Number.isInteger(f) ||
                          w.length < a
                        )
                          return null;
                        if (0 == (f = ((f % a) + a) % a)) break;
                        Array.prototype.push.apply(
                          w,
                          w.splice(w.length - a, a - f)
                        );
                        break;
                      default:
                        return null;
                    }
                  else w.push(new i(y));
                if (w.length !== C) return null;
                var _ = [];
                x.forEach(function (e) {
                  var t = new l();
                  e.visit(t);
                  _.push(t.toString());
                });
                w.forEach(function (e, t) {
                  var i = new l();
                  e.visit(i);
                  var n = r[2 * t],
                    a = r[2 * t + 1],
                    s = [i.toString()];
                  if (n > e.min) {
                    s.unshift("Math.max(", n, ", ");
                    s.push(")");
                  }
                  if (a < e.max) {
                    s.unshift("Math.min(", a, ", ");
                    s.push(")");
                  }
                  s.unshift("dest[destOffset + ", t, "] = ");
                  s.push(";");
                  _.push(s.join(""));
                });
                return _.join("\n");
              },
            };
            return f;
          })();
          t.PostScriptCompiler = u;
        },
        (e, t, i) => {
          Object.defineProperty(t, "__esModule", { value: !0 });
          t.PostScriptParser = t.PostScriptLexer = void 0;
          var n = i(2),
            r = i(5),
            a = i(8);
          t.PostScriptParser = class {
            constructor(e) {
              this.lexer = e;
              this.operators = [];
              this.token = null;
              this.prev = null;
            }
            nextToken() {
              this.prev = this.token;
              this.token = this.lexer.getToken();
            }
            accept(e) {
              if (this.token.type === e) {
                this.nextToken();
                return !0;
              }
              return !1;
            }
            expect(e) {
              if (this.accept(e)) return !0;
              throw new n.FormatError(
                `Unexpected symbol: found ${this.token.type} expected ${e}.`
              );
            }
            parse() {
              this.nextToken();
              this.expect(s.LBRACE);
              this.parseBlock();
              this.expect(s.RBRACE);
              return this.operators;
            }
            parseBlock() {
              for (;;)
                if (this.accept(s.NUMBER)) this.operators.push(this.prev.value);
                else if (this.accept(s.OPERATOR))
                  this.operators.push(this.prev.value);
                else if (this.accept(s.LBRACE)) this.parseCondition();
                else return;
            }
            parseCondition() {
              const e = this.operators.length;
              this.operators.push(null, null);
              this.parseBlock();
              this.expect(s.RBRACE);
              if (this.accept(s.IF)) {
                this.operators[e] = this.operators.length;
                this.operators[e + 1] = "jz";
              } else if (this.accept(s.LBRACE)) {
                const t = this.operators.length;
                this.operators.push(null, null);
                const i = this.operators.length;
                this.parseBlock();
                this.expect(s.RBRACE);
                this.expect(s.IFELSE);
                this.operators[t] = this.operators.length;
                this.operators[t + 1] = "j";
                this.operators[e] = i;
                this.operators[e + 1] = "jz";
              } else
                throw new n.FormatError(
                  "PS Function: error parsing conditional."
                );
            }
          };
          const s = {
              LBRACE: 0,
              RBRACE: 1,
              NUMBER: 2,
              OPERATOR: 3,
              IF: 4,
              IFELSE: 5,
            },
            o = (function () {
              const e = Object.create(null);
              class t {
                constructor(e, t) {
                  this.type = e;
                  this.value = t;
                }
                static getOperator(i) {
                  const n = e[i];
                  if (n) return n;
                  else return (e[i] = new t(s.OPERATOR, i));
                }
                static get LBRACE() {
                  return (0, n.shadow)(this, "LBRACE", new t(s.LBRACE, "{"));
                }
                static get RBRACE() {
                  return (0, n.shadow)(this, "RBRACE", new t(s.RBRACE, "}"));
                }
                static get IF() {
                  return (0, n.shadow)(this, "IF", new t(s.IF, "IF"));
                }
                static get IFELSE() {
                  return (0, n.shadow)(
                    this,
                    "IFELSE",
                    new t(s.IFELSE, "IFELSE")
                  );
                }
              }
              return t;
            })();
          t.PostScriptLexer = class {
            constructor(e) {
              this.stream = e;
              this.nextChar();
              this.strBuf = [];
            }
            nextChar() {
              return (this.currentChar = this.stream.getByte());
            }
            getToken() {
              let e = !1,
                t = this.currentChar;
              for (;;) {
                if (t < 0) return r.EOF;
                if (e) {
                  if (10 === t || 13 === t) e = !1;
                } else if (37 === t) e = !0;
                else if (!(0, a.isWhiteSpace)(t)) break;
                t = this.nextChar();
              }
              switch (0 | t) {
                case 48:
                case 49:
                case 50:
                case 51:
                case 52:
                case 53:
                case 54:
                case 55:
                case 56:
                case 57:
                case 43:
                case 45:
                case 46:
                  return new o(s.NUMBER, this.getNumber());
                case 123:
                  this.nextChar();
                  return o.LBRACE;
                case 125:
                  this.nextChar();
                  return o.RBRACE;
              }
              const i = this.strBuf;
              i.length = 0;
              i[0] = String.fromCharCode(t);
              for (
                ;
                (t = this.nextChar()) >= 0 &&
                ((t >= 65 && t <= 90) || (t >= 97 && t <= 122));

              )
                i.push(String.fromCharCode(t));
              const n = i.join("");
              switch (n.toLowerCase()) {
                case "if":
                  return o.IF;
                case "ifelse":
                  return o.IFELSE;
                default:
                  return o.getOperator(n);
              }
            }
            getNumber() {
              let e = this.currentChar;
              const t = this.strBuf;
              t.length = 0;
              t[0] = String.fromCharCode(e);
              for (
                ;
                (e = this.nextChar()) >= 0 &&
                ((e >= 48 && e <= 57) || 45 === e || 46 === e);

              )
                t.push(String.fromCharCode(e));
              const i = parseFloat(t.join(""));
              if (isNaN(i))
                throw new n.FormatError(`Invalid floating point number: ${i}`);
              return i;
            }
          };
        },
        (e, t, i) => {
          Object.defineProperty(t, "__esModule", { value: !0 });
          t.bidi = function (e, t, i) {
            var p = !0,
              g = e.length;
            if (0 === g || i) return u(e, p, i);
            d.length = g;
            f.length = g;
            var m,
              v,
              b = 0;
            for (m = 0; m < g; ++m) {
              d[m] = e.charAt(m);
              var y = e.charCodeAt(m),
                w = "L";
              if (y <= 255) w = r[y];
              else if (1424 <= y && y <= 1524) w = "R";
              else if (1536 <= y && y <= 1791) {
                if (!(w = a[255 & y]))
                  (0, n.warn)(
                    "Bidi: invalid Unicode character " + y.toString(16)
                  );
              } else if (1792 <= y && y <= 2220) w = "AL";
              if ("R" === w || "AL" === w || "AN" === w) b++;
              f[m] = w;
            }
            if (0 === b) return u(e, (p = !0));
            if (-1 === t)
              if (b / g < 0.3) {
                p = !0;
                t = 0;
              } else {
                p = !1;
                t = 1;
              }
            var x = [];
            for (m = 0; m < g; ++m) x[m] = t;
            var k,
              C = s(t) ? "R" : "L",
              S = C,
              _ = S,
              A = S;
            for (m = 0; m < g; ++m)
              if ("NSM" === f[m]) f[m] = A;
              else A = f[m];
            A = S;
            for (m = 0; m < g; ++m)
              if ("EN" === (k = f[m])) f[m] = "AL" === A ? "AN" : "EN";
              else if ("R" === k || "L" === k || "AL" === k) A = k;
            for (m = 0; m < g; ++m) if ("AL" === (k = f[m])) f[m] = "R";
            for (m = 1; m < g - 1; ++m) {
              if ("ES" === f[m] && "EN" === f[m - 1] && "EN" === f[m + 1])
                f[m] = "EN";
              if (
                "CS" === f[m] &&
                ("EN" === f[m - 1] || "AN" === f[m - 1]) &&
                f[m + 1] === f[m - 1]
              )
                f[m] = f[m - 1];
            }
            for (m = 0; m < g; ++m)
              if ("EN" === f[m]) {
                var F;
                for (F = m - 1; F >= 0 && "ET" === f[F]; --F) f[F] = "EN";
                for (F = m + 1; F < g && "ET" === f[F]; ++F) f[F] = "EN";
              }
            for (m = 0; m < g; ++m)
              if ("WS" === (k = f[m]) || "ES" === k || "ET" === k || "CS" === k)
                f[m] = "ON";
            A = S;
            for (m = 0; m < g; ++m)
              if ("EN" === (k = f[m])) f[m] = "L" === A ? "L" : "EN";
              else if ("R" === k || "L" === k) A = k;
            for (m = 0; m < g; ++m)
              if ("ON" === f[m]) {
                var T = l(f, m + 1, "ON"),
                  P = S;
                if (m > 0) P = f[m - 1];
                var E = _;
                if (T + 1 < g) E = f[T + 1];
                if ("L" !== P) P = "R";
                if ("L" !== E) E = "R";
                if (P === E) c(f, m, T, P);
                m = T - 1;
              }
            for (m = 0; m < g; ++m) if ("ON" === f[m]) f[m] = C;
            for (m = 0; m < g; ++m) {
              k = f[m];
              if (o(x[m])) {
                if ("R" === k) x[m] += 1;
                else if ("AN" === k || "EN" === k) x[m] += 2;
              } else if ("L" === k || "AN" === k || "EN" === k) x[m] += 1;
            }
            var I,
              D = -1,
              O = 99;
            for (m = 0, v = x.length; m < v; ++m) {
              if (D < (I = x[m])) D = I;
              if (O > I && s(I)) O = I;
            }
            for (I = D; I >= O; --I) {
              var R = -1;
              for (m = 0, v = x.length; m < v; ++m)
                if (x[m] < I) {
                  if (R >= 0) {
                    h(d, R, m);
                    R = -1;
                  }
                } else if (R < 0) R = m;
              if (R >= 0) h(d, R, x.length);
            }
            for (m = 0, v = d.length; m < v; ++m) {
              var N = d[m];
              if ("<" === N || ">" === N) d[m] = "";
            }
            return u(d.join(""), p);
          };
          var n = i(2),
            r = [
              "BN",
              "BN",
              "BN",
              "BN",
              "BN",
              "BN",
              "BN",
              "BN",
              "BN",
              "S",
              "B",
              "S",
              "WS",
              "B",
              "BN",
              "BN",
              "BN",
              "BN",
              "BN",
              "BN",
              "BN",
              "BN",
              "BN",
              "BN",
              "BN",
              "BN",
              "BN",
              "BN",
              "B",
              "B",
              "B",
              "S",
              "WS",
              "ON",
              "ON",
              "ET",
              "ET",
              "ET",
              "ON",
              "ON",
              "ON",
              "ON",
              "ON",
              "ES",
              "CS",
              "ES",
              "CS",
              "CS",
              "EN",
              "EN",
              "EN",
              "EN",
              "EN",
              "EN",
              "EN",
              "EN",
              "EN",
              "EN",
              "CS",
              "ON",
              "ON",
              "ON",
              "ON",
              "ON",
              "ON",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "ON",
              "ON",
              "ON",
              "ON",
              "ON",
              "ON",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "ON",
              "ON",
              "ON",
              "ON",
              "BN",
              "BN",
              "BN",
              "BN",
              "BN",
              "BN",
              "B",
              "BN",
              "BN",
              "BN",
              "BN",
              "BN",
              "BN",
              "BN",
              "BN",
              "BN",
              "BN",
              "BN",
              "BN",
              "BN",
              "BN",
              "BN",
              "BN",
              "BN",
              "BN",
              "BN",
              "BN",
              "BN",
              "BN",
              "BN",
              "BN",
              "BN",
              "BN",
              "CS",
              "ON",
              "ET",
              "ET",
              "ET",
              "ET",
              "ON",
              "ON",
              "ON",
              "ON",
              "L",
              "ON",
              "ON",
              "BN",
              "ON",
              "ON",
              "ET",
              "ET",
              "EN",
              "EN",
              "ON",
              "L",
              "ON",
              "ON",
              "ON",
              "EN",
              "L",
              "ON",
              "ON",
              "ON",
              "ON",
              "ON",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "ON",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "ON",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
              "L",
            ],
            a = [
              "AN",
              "AN",
              "AN",
              "AN",
              "AN",
              "AN",
              "ON",
              "ON",
              "AL",
              "ET",
              "ET",
              "AL",
              "CS",
              "AL",
              "ON",
              "ON",
              "NSM",
              "NSM",
              "NSM",
              "NSM",
              "NSM",
              "NSM",
              "NSM",
              "NSM",
              "NSM",
              "NSM",
              "NSM",
              "AL",
              "AL",
              "",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "NSM",
              "NSM",
              "NSM",
              "NSM",
              "NSM",
              "NSM",
              "NSM",
              "NSM",
              "NSM",
              "NSM",
              "NSM",
              "NSM",
              "NSM",
              "NSM",
              "NSM",
              "NSM",
              "NSM",
              "NSM",
              "NSM",
              "NSM",
              "NSM",
              "AN",
              "AN",
              "AN",
              "AN",
              "AN",
              "AN",
              "AN",
              "AN",
              "AN",
              "AN",
              "ET",
              "AN",
              "AN",
              "AL",
              "AL",
              "AL",
              "NSM",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "NSM",
              "NSM",
              "NSM",
              "NSM",
              "NSM",
              "NSM",
              "NSM",
              "AN",
              "ON",
              "NSM",
              "NSM",
              "NSM",
              "NSM",
              "NSM",
              "NSM",
              "AL",
              "AL",
              "NSM",
              "NSM",
              "ON",
              "NSM",
              "NSM",
              "NSM",
              "NSM",
              "AL",
              "AL",
              "EN",
              "EN",
              "EN",
              "EN",
              "EN",
              "EN",
              "EN",
              "EN",
              "EN",
              "EN",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
              "AL",
            ];
          function s(e) {
            return 0 != (1 & e);
          }
          function o(e) {
            return 0 == (1 & e);
          }
          function l(e, t, i) {
            for (var n = t, r = e.length; n < r; ++n) if (e[n] !== i) return n;
            return n;
          }
          function c(e, t, i, n) {
            for (var r = t; r < i; ++r) e[r] = n;
          }
          function h(e, t, i) {
            for (var n = t, r = i - 1; n < r; ++n, --r) {
              var a = e[n];
              e[n] = e[r];
              e[r] = a;
            }
          }
          function u(e, t, i = !1) {
            let n = "ltr";
            if (i) n = "ttb";
            else if (!t) n = "rtl";
            return { str: e, dir: n };
          }
          var d = [],
            f = [];
        },
        (e, t, i) => {
          Object.defineProperty(t, "__esModule", { value: !0 });
          t.getMetrics = void 0;
          var n = i(8),
            r = (0, n.getLookupTableFactory)(function (e) {
              e.Courier = 600;
              e["Courier-Bold"] = 600;
              e["Courier-BoldOblique"] = 600;
              e["Courier-Oblique"] = 600;
              e.Helvetica = (0, n.getLookupTableFactory)(function (e) {
                e.space = 278;
                e.exclam = 278;
                e.quotedbl = 355;
                e.numbersign = 556;
                e.dollar = 556;
                e.percent = 889;
                e.ampersand = 667;
                e.quoteright = 222;
                e.parenleft = 333;
                e.parenright = 333;
                e.asterisk = 389;
                e.plus = 584;
                e.comma = 278;
                e.hyphen = 333;
                e.period = 278;
                e.slash = 278;
                e.zero = 556;
                e.one = 556;
                e.two = 556;
                e.three = 556;
                e.four = 556;
                e.five = 556;
                e.six = 556;
                e.seven = 556;
                e.eight = 556;
                e.nine = 556;
                e.colon = 278;
                e.semicolon = 278;
                e.less = 584;
                e.equal = 584;
                e.greater = 584;
                e.question = 556;
                e.at = 1015;
                e.A = 667;
                e.B = 667;
                e.C = 722;
                e.D = 722;
                e.E = 667;
                e.F = 611;
                e.G = 778;
                e.H = 722;
                e.I = 278;
                e.J = 500;
                e.K = 667;
                e.L = 556;
                e.M = 833;
                e.N = 722;
                e.O = 778;
                e.P = 667;
                e.Q = 778;
                e.R = 722;
                e.S = 667;
                e.T = 611;
                e.U = 722;
                e.V = 667;
                e.W = 944;
                e.X = 667;
                e.Y = 667;
                e.Z = 611;
                e.bracketleft = 278;
                e.backslash = 278;
                e.bracketright = 278;
                e.asciicircum = 469;
                e.underscore = 556;
                e.quoteleft = 222;
                e.a = 556;
                e.b = 556;
                e.c = 500;
                e.d = 556;
                e.e = 556;
                e.f = 278;
                e.g = 556;
                e.h = 556;
                e.i = 222;
                e.j = 222;
                e.k = 500;
                e.l = 222;
                e.m = 833;
                e.n = 556;
                e.o = 556;
                e.p = 556;
                e.q = 556;
                e.r = 333;
                e.s = 500;
                e.t = 278;
                e.u = 556;
                e.v = 500;
                e.w = 722;
                e.x = 500;
                e.y = 500;
                e.z = 500;
                e.braceleft = 334;
                e.bar = 260;
                e.braceright = 334;
                e.asciitilde = 584;
                e.exclamdown = 333;
                e.cent = 556;
                e.sterling = 556;
                e.fraction = 167;
                e.yen = 556;
                e.florin = 556;
                e.section = 556;
                e.currency = 556;
                e.quotesingle = 191;
                e.quotedblleft = 333;
                e.guillemotleft = 556;
                e.guilsinglleft = 333;
                e.guilsinglright = 333;
                e.fi = 500;
                e.fl = 500;
                e.endash = 556;
                e.dagger = 556;
                e.daggerdbl = 556;
                e.periodcentered = 278;
                e.paragraph = 537;
                e.bullet = 350;
                e.quotesinglbase = 222;
                e.quotedblbase = 333;
                e.quotedblright = 333;
                e.guillemotright = 556;
                e.ellipsis = 1e3;
                e.perthousand = 1e3;
                e.questiondown = 611;
                e.grave = 333;
                e.acute = 333;
                e.circumflex = 333;
                e.tilde = 333;
                e.macron = 333;
                e.breve = 333;
                e.dotaccent = 333;
                e.dieresis = 333;
                e.ring = 333;
                e.cedilla = 333;
                e.hungarumlaut = 333;
                e.ogonek = 333;
                e.caron = 333;
                e.emdash = 1e3;
                e.AE = 1e3;
                e.ordfeminine = 370;
                e.Lslash = 556;
                e.Oslash = 778;
                e.OE = 1e3;
                e.ordmasculine = 365;
                e.ae = 889;
                e.dotlessi = 278;
                e.lslash = 222;
                e.oslash = 611;
                e.oe = 944;
                e.germandbls = 611;
                e.Idieresis = 278;
                e.eacute = 556;
                e.abreve = 556;
                e.uhungarumlaut = 556;
                e.ecaron = 556;
                e.Ydieresis = 667;
                e.divide = 584;
                e.Yacute = 667;
                e.Acircumflex = 667;
                e.aacute = 556;
                e.Ucircumflex = 722;
                e.yacute = 500;
                e.scommaaccent = 500;
                e.ecircumflex = 556;
                e.Uring = 722;
                e.Udieresis = 722;
                e.aogonek = 556;
                e.Uacute = 722;
                e.uogonek = 556;
                e.Edieresis = 667;
                e.Dcroat = 722;
                e.commaaccent = 250;
                e.copyright = 737;
                e.Emacron = 667;
                e.ccaron = 500;
                e.aring = 556;
                e.Ncommaaccent = 722;
                e.lacute = 222;
                e.agrave = 556;
                e.Tcommaaccent = 611;
                e.Cacute = 722;
                e.atilde = 556;
                e.Edotaccent = 667;
                e.scaron = 500;
                e.scedilla = 500;
                e.iacute = 278;
                e.lozenge = 471;
                e.Rcaron = 722;
                e.Gcommaaccent = 778;
                e.ucircumflex = 556;
                e.acircumflex = 556;
                e.Amacron = 667;
                e.rcaron = 333;
                e.ccedilla = 500;
                e.Zdotaccent = 611;
                e.Thorn = 667;
                e.Omacron = 778;
                e.Racute = 722;
                e.Sacute = 667;
                e.dcaron = 643;
                e.Umacron = 722;
                e.uring = 556;
                e.threesuperior = 333;
                e.Ograve = 778;
                e.Agrave = 667;
                e.Abreve = 667;
                e.multiply = 584;
                e.uacute = 556;
                e.Tcaron = 611;
                e.partialdiff = 476;
                e.ydieresis = 500;
                e.Nacute = 722;
                e.icircumflex = 278;
                e.Ecircumflex = 667;
                e.adieresis = 556;
                e.edieresis = 556;
                e.cacute = 500;
                e.nacute = 556;
                e.umacron = 556;
                e.Ncaron = 722;
                e.Iacute = 278;
                e.plusminus = 584;
                e.brokenbar = 260;
                e.registered = 737;
                e.Gbreve = 778;
                e.Idotaccent = 278;
                e.summation = 600;
                e.Egrave = 667;
                e.racute = 333;
                e.omacron = 556;
                e.Zacute = 611;
                e.Zcaron = 611;
                e.greaterequal = 549;
                e.Eth = 722;
                e.Ccedilla = 722;
                e.lcommaaccent = 222;
                e.tcaron = 317;
                e.eogonek = 556;
                e.Uogonek = 722;
                e.Aacute = 667;
                e.Adieresis = 667;
                e.egrave = 556;
                e.zacute = 500;
                e.iogonek = 222;
                e.Oacute = 778;
                e.oacute = 556;
                e.amacron = 556;
                e.sacute = 500;
                e.idieresis = 278;
                e.Ocircumflex = 778;
                e.Ugrave = 722;
                e.Delta = 612;
                e.thorn = 556;
                e.twosuperior = 333;
                e.Odieresis = 778;
                e.mu = 556;
                e.igrave = 278;
                e.ohungarumlaut = 556;
                e.Eogonek = 667;
                e.dcroat = 556;
                e.threequarters = 834;
                e.Scedilla = 667;
                e.lcaron = 299;
                e.Kcommaaccent = 667;
                e.Lacute = 556;
                e.trademark = 1e3;
                e.edotaccent = 556;
                e.Igrave = 278;
                e.Imacron = 278;
                e.Lcaron = 556;
                e.onehalf = 834;
                e.lessequal = 549;
                e.ocircumflex = 556;
                e.ntilde = 556;
                e.Uhungarumlaut = 722;
                e.Eacute = 667;
                e.emacron = 556;
                e.gbreve = 556;
                e.onequarter = 834;
                e.Scaron = 667;
                e.Scommaaccent = 667;
                e.Ohungarumlaut = 778;
                e.degree = 400;
                e.ograve = 556;
                e.Ccaron = 722;
                e.ugrave = 556;
                e.radical = 453;
                e.Dcaron = 722;
                e.rcommaaccent = 333;
                e.Ntilde = 722;
                e.otilde = 556;
                e.Rcommaaccent = 722;
                e.Lcommaaccent = 556;
                e.Atilde = 667;
                e.Aogonek = 667;
                e.Aring = 667;
                e.Otilde = 778;
                e.zdotaccent = 500;
                e.Ecaron = 667;
                e.Iogonek = 278;
                e.kcommaaccent = 500;
                e.minus = 584;
                e.Icircumflex = 278;
                e.ncaron = 556;
                e.tcommaaccent = 278;
                e.logicalnot = 584;
                e.odieresis = 556;
                e.udieresis = 556;
                e.notequal = 549;
                e.gcommaaccent = 556;
                e.eth = 556;
                e.zcaron = 500;
                e.ncommaaccent = 556;
                e.onesuperior = 333;
                e.imacron = 278;
                e.Euro = 556;
              });
              e["Helvetica-Bold"] = (0, n.getLookupTableFactory)(function (e) {
                e.space = 278;
                e.exclam = 333;
                e.quotedbl = 474;
                e.numbersign = 556;
                e.dollar = 556;
                e.percent = 889;
                e.ampersand = 722;
                e.quoteright = 278;
                e.parenleft = 333;
                e.parenright = 333;
                e.asterisk = 389;
                e.plus = 584;
                e.comma = 278;
                e.hyphen = 333;
                e.period = 278;
                e.slash = 278;
                e.zero = 556;
                e.one = 556;
                e.two = 556;
                e.three = 556;
                e.four = 556;
                e.five = 556;
                e.six = 556;
                e.seven = 556;
                e.eight = 556;
                e.nine = 556;
                e.colon = 333;
                e.semicolon = 333;
                e.less = 584;
                e.equal = 584;
                e.greater = 584;
                e.question = 611;
                e.at = 975;
                e.A = 722;
                e.B = 722;
                e.C = 722;
                e.D = 722;
                e.E = 667;
                e.F = 611;
                e.G = 778;
                e.H = 722;
                e.I = 278;
                e.J = 556;
                e.K = 722;
                e.L = 611;
                e.M = 833;
                e.N = 722;
                e.O = 778;
                e.P = 667;
                e.Q = 778;
                e.R = 722;
                e.S = 667;
                e.T = 611;
                e.U = 722;
                e.V = 667;
                e.W = 944;
                e.X = 667;
                e.Y = 667;
                e.Z = 611;
                e.bracketleft = 333;
                e.backslash = 278;
                e.bracketright = 333;
                e.asciicircum = 584;
                e.underscore = 556;
                e.quoteleft = 278;
                e.a = 556;
                e.b = 611;
                e.c = 556;
                e.d = 611;
                e.e = 556;
                e.f = 333;
                e.g = 611;
                e.h = 611;
                e.i = 278;
                e.j = 278;
                e.k = 556;
                e.l = 278;
                e.m = 889;
                e.n = 611;
                e.o = 611;
                e.p = 611;
                e.q = 611;
                e.r = 389;
                e.s = 556;
                e.t = 333;
                e.u = 611;
                e.v = 556;
                e.w = 778;
                e.x = 556;
                e.y = 556;
                e.z = 500;
                e.braceleft = 389;
                e.bar = 280;
                e.braceright = 389;
                e.asciitilde = 584;
                e.exclamdown = 333;
                e.cent = 556;
                e.sterling = 556;
                e.fraction = 167;
                e.yen = 556;
                e.florin = 556;
                e.section = 556;
                e.currency = 556;
                e.quotesingle = 238;
                e.quotedblleft = 500;
                e.guillemotleft = 556;
                e.guilsinglleft = 333;
                e.guilsinglright = 333;
                e.fi = 611;
                e.fl = 611;
                e.endash = 556;
                e.dagger = 556;
                e.daggerdbl = 556;
                e.periodcentered = 278;
                e.paragraph = 556;
                e.bullet = 350;
                e.quotesinglbase = 278;
                e.quotedblbase = 500;
                e.quotedblright = 500;
                e.guillemotright = 556;
                e.ellipsis = 1e3;
                e.perthousand = 1e3;
                e.questiondown = 611;
                e.grave = 333;
                e.acute = 333;
                e.circumflex = 333;
                e.tilde = 333;
                e.macron = 333;
                e.breve = 333;
                e.dotaccent = 333;
                e.dieresis = 333;
                e.ring = 333;
                e.cedilla = 333;
                e.hungarumlaut = 333;
                e.ogonek = 333;
                e.caron = 333;
                e.emdash = 1e3;
                e.AE = 1e3;
                e.ordfeminine = 370;
                e.Lslash = 611;
                e.Oslash = 778;
                e.OE = 1e3;
                e.ordmasculine = 365;
                e.ae = 889;
                e.dotlessi = 278;
                e.lslash = 278;
                e.oslash = 611;
                e.oe = 944;
                e.germandbls = 611;
                e.Idieresis = 278;
                e.eacute = 556;
                e.abreve = 556;
                e.uhungarumlaut = 611;
                e.ecaron = 556;
                e.Ydieresis = 667;
                e.divide = 584;
                e.Yacute = 667;
                e.Acircumflex = 722;
                e.aacute = 556;
                e.Ucircumflex = 722;
                e.yacute = 556;
                e.scommaaccent = 556;
                e.ecircumflex = 556;
                e.Uring = 722;
                e.Udieresis = 722;
                e.aogonek = 556;
                e.Uacute = 722;
                e.uogonek = 611;
                e.Edieresis = 667;
                e.Dcroat = 722;
                e.commaaccent = 250;
                e.copyright = 737;
                e.Emacron = 667;
                e.ccaron = 556;
                e.aring = 556;
                e.Ncommaaccent = 722;
                e.lacute = 278;
                e.agrave = 556;
                e.Tcommaaccent = 611;
                e.Cacute = 722;
                e.atilde = 556;
                e.Edotaccent = 667;
                e.scaron = 556;
                e.scedilla = 556;
                e.iacute = 278;
                e.lozenge = 494;
                e.Rcaron = 722;
                e.Gcommaaccent = 778;
                e.ucircumflex = 611;
                e.acircumflex = 556;
                e.Amacron = 722;
                e.rcaron = 389;
                e.ccedilla = 556;
                e.Zdotaccent = 611;
                e.Thorn = 667;
                e.Omacron = 778;
                e.Racute = 722;
                e.Sacute = 667;
                e.dcaron = 743;
                e.Umacron = 722;
                e.uring = 611;
                e.threesuperior = 333;
                e.Ograve = 778;
                e.Agrave = 722;
                e.Abreve = 722;
                e.multiply = 584;
                e.uacute = 611;
                e.Tcaron = 611;
                e.partialdiff = 494;
                e.ydieresis = 556;
                e.Nacute = 722;
                e.icircumflex = 278;
                e.Ecircumflex = 667;
                e.adieresis = 556;
                e.edieresis = 556;
                e.cacute = 556;
                e.nacute = 611;
                e.umacron = 611;
                e.Ncaron = 722;
                e.Iacute = 278;
                e.plusminus = 584;
                e.brokenbar = 280;
                e.registered = 737;
                e.Gbreve = 778;
                e.Idotaccent = 278;
                e.summation = 600;
                e.Egrave = 667;
                e.racute = 389;
                e.omacron = 611;
                e.Zacute = 611;
                e.Zcaron = 611;
                e.greaterequal = 549;
                e.Eth = 722;
                e.Ccedilla = 722;
                e.lcommaaccent = 278;
                e.tcaron = 389;
                e.eogonek = 556;
                e.Uogonek = 722;
                e.Aacute = 722;
                e.Adieresis = 722;
                e.egrave = 556;
                e.zacute = 500;
                e.iogonek = 278;
                e.Oacute = 778;
                e.oacute = 611;
                e.amacron = 556;
                e.sacute = 556;
                e.idieresis = 278;
                e.Ocircumflex = 778;
                e.Ugrave = 722;
                e.Delta = 612;
                e.thorn = 611;
                e.twosuperior = 333;
                e.Odieresis = 778;
                e.mu = 611;
                e.igrave = 278;
                e.ohungarumlaut = 611;
                e.Eogonek = 667;
                e.dcroat = 611;
                e.threequarters = 834;
                e.Scedilla = 667;
                e.lcaron = 400;
                e.Kcommaaccent = 722;
                e.Lacute = 611;
                e.trademark = 1e3;
                e.edotaccent = 556;
                e.Igrave = 278;
                e.Imacron = 278;
                e.Lcaron = 611;
                e.onehalf = 834;
                e.lessequal = 549;
                e.ocircumflex = 611;
                e.ntilde = 611;
                e.Uhungarumlaut = 722;
                e.Eacute = 667;
                e.emacron = 556;
                e.gbreve = 611;
                e.onequarter = 834;
                e.Scaron = 667;
                e.Scommaaccent = 667;
                e.Ohungarumlaut = 778;
                e.degree = 400;
                e.ograve = 611;
                e.Ccaron = 722;
                e.ugrave = 611;
                e.radical = 549;
                e.Dcaron = 722;
                e.rcommaaccent = 389;
                e.Ntilde = 722;
                e.otilde = 611;
                e.Rcommaaccent = 722;
                e.Lcommaaccent = 611;
                e.Atilde = 722;
                e.Aogonek = 722;
                e.Aring = 722;
                e.Otilde = 778;
                e.zdotaccent = 500;
                e.Ecaron = 667;
                e.Iogonek = 278;
                e.kcommaaccent = 556;
                e.minus = 584;
                e.Icircumflex = 278;
                e.ncaron = 611;
                e.tcommaaccent = 333;
                e.logicalnot = 584;
                e.odieresis = 611;
                e.udieresis = 611;
                e.notequal = 549;
                e.gcommaaccent = 611;
                e.eth = 611;
                e.zcaron = 500;
                e.ncommaaccent = 611;
                e.onesuperior = 333;
                e.imacron = 278;
                e.Euro = 556;
              });
              e["Helvetica-BoldOblique"] = (0, n.getLookupTableFactory)(
                function (e) {
                  e.space = 278;
                  e.exclam = 333;
                  e.quotedbl = 474;
                  e.numbersign = 556;
                  e.dollar = 556;
                  e.percent = 889;
                  e.ampersand = 722;
                  e.quoteright = 278;
                  e.parenleft = 333;
                  e.parenright = 333;
                  e.asterisk = 389;
                  e.plus = 584;
                  e.comma = 278;
                  e.hyphen = 333;
                  e.period = 278;
                  e.slash = 278;
                  e.zero = 556;
                  e.one = 556;
                  e.two = 556;
                  e.three = 556;
                  e.four = 556;
                  e.five = 556;
                  e.six = 556;
                  e.seven = 556;
                  e.eight = 556;
                  e.nine = 556;
                  e.colon = 333;
                  e.semicolon = 333;
                  e.less = 584;
                  e.equal = 584;
                  e.greater = 584;
                  e.question = 611;
                  e.at = 975;
                  e.A = 722;
                  e.B = 722;
                  e.C = 722;
                  e.D = 722;
                  e.E = 667;
                  e.F = 611;
                  e.G = 778;
                  e.H = 722;
                  e.I = 278;
                  e.J = 556;
                  e.K = 722;
                  e.L = 611;
                  e.M = 833;
                  e.N = 722;
                  e.O = 778;
                  e.P = 667;
                  e.Q = 778;
                  e.R = 722;
                  e.S = 667;
                  e.T = 611;
                  e.U = 722;
                  e.V = 667;
                  e.W = 944;
                  e.X = 667;
                  e.Y = 667;
                  e.Z = 611;
                  e.bracketleft = 333;
                  e.backslash = 278;
                  e.bracketright = 333;
                  e.asciicircum = 584;
                  e.underscore = 556;
                  e.quoteleft = 278;
                  e.a = 556;
                  e.b = 611;
                  e.c = 556;
                  e.d = 611;
                  e.e = 556;
                  e.f = 333;
                  e.g = 611;
                  e.h = 611;
                  e.i = 278;
                  e.j = 278;
                  e.k = 556;
                  e.l = 278;
                  e.m = 889;
                  e.n = 611;
                  e.o = 611;
                  e.p = 611;
                  e.q = 611;
                  e.r = 389;
                  e.s = 556;
                  e.t = 333;
                  e.u = 611;
                  e.v = 556;
                  e.w = 778;
                  e.x = 556;
                  e.y = 556;
                  e.z = 500;
                  e.braceleft = 389;
                  e.bar = 280;
                  e.braceright = 389;
                  e.asciitilde = 584;
                  e.exclamdown = 333;
                  e.cent = 556;
                  e.sterling = 556;
                  e.fraction = 167;
                  e.yen = 556;
                  e.florin = 556;
                  e.section = 556;
                  e.currency = 556;
                  e.quotesingle = 238;
                  e.quotedblleft = 500;
                  e.guillemotleft = 556;
                  e.guilsinglleft = 333;
                  e.guilsinglright = 333;
                  e.fi = 611;
                  e.fl = 611;
                  e.endash = 556;
                  e.dagger = 556;
                  e.daggerdbl = 556;
                  e.periodcentered = 278;
                  e.paragraph = 556;
                  e.bullet = 350;
                  e.quotesinglbase = 278;
                  e.quotedblbase = 500;
                  e.quotedblright = 500;
                  e.guillemotright = 556;
                  e.ellipsis = 1e3;
                  e.perthousand = 1e3;
                  e.questiondown = 611;
                  e.grave = 333;
                  e.acute = 333;
                  e.circumflex = 333;
                  e.tilde = 333;
                  e.macron = 333;
                  e.breve = 333;
                  e.dotaccent = 333;
                  e.dieresis = 333;
                  e.ring = 333;
                  e.cedilla = 333;
                  e.hungarumlaut = 333;
                  e.ogonek = 333;
                  e.caron = 333;
                  e.emdash = 1e3;
                  e.AE = 1e3;
                  e.ordfeminine = 370;
                  e.Lslash = 611;
                  e.Oslash = 778;
                  e.OE = 1e3;
                  e.ordmasculine = 365;
                  e.ae = 889;
                  e.dotlessi = 278;
                  e.lslash = 278;
                  e.oslash = 611;
                  e.oe = 944;
                  e.germandbls = 611;
                  e.Idieresis = 278;
                  e.eacute = 556;
                  e.abreve = 556;
                  e.uhungarumlaut = 611;
                  e.ecaron = 556;
                  e.Ydieresis = 667;
                  e.divide = 584;
                  e.Yacute = 667;
                  e.Acircumflex = 722;
                  e.aacute = 556;
                  e.Ucircumflex = 722;
                  e.yacute = 556;
                  e.scommaaccent = 556;
                  e.ecircumflex = 556;
                  e.Uring = 722;
                  e.Udieresis = 722;
                  e.aogonek = 556;
                  e.Uacute = 722;
                  e.uogonek = 611;
                  e.Edieresis = 667;
                  e.Dcroat = 722;
                  e.commaaccent = 250;
                  e.copyright = 737;
                  e.Emacron = 667;
                  e.ccaron = 556;
                  e.aring = 556;
                  e.Ncommaaccent = 722;
                  e.lacute = 278;
                  e.agrave = 556;
                  e.Tcommaaccent = 611;
                  e.Cacute = 722;
                  e.atilde = 556;
                  e.Edotaccent = 667;
                  e.scaron = 556;
                  e.scedilla = 556;
                  e.iacute = 278;
                  e.lozenge = 494;
                  e.Rcaron = 722;
                  e.Gcommaaccent = 778;
                  e.ucircumflex = 611;
                  e.acircumflex = 556;
                  e.Amacron = 722;
                  e.rcaron = 389;
                  e.ccedilla = 556;
                  e.Zdotaccent = 611;
                  e.Thorn = 667;
                  e.Omacron = 778;
                  e.Racute = 722;
                  e.Sacute = 667;
                  e.dcaron = 743;
                  e.Umacron = 722;
                  e.uring = 611;
                  e.threesuperior = 333;
                  e.Ograve = 778;
                  e.Agrave = 722;
                  e.Abreve = 722;
                  e.multiply = 584;
                  e.uacute = 611;
                  e.Tcaron = 611;
                  e.partialdiff = 494;
                  e.ydieresis = 556;
                  e.Nacute = 722;
                  e.icircumflex = 278;
                  e.Ecircumflex = 667;
                  e.adieresis = 556;
                  e.edieresis = 556;
                  e.cacute = 556;
                  e.nacute = 611;
                  e.umacron = 611;
                  e.Ncaron = 722;
                  e.Iacute = 278;
                  e.plusminus = 584;
                  e.brokenbar = 280;
                  e.registered = 737;
                  e.Gbreve = 778;
                  e.Idotaccent = 278;
                  e.summation = 600;
                  e.Egrave = 667;
                  e.racute = 389;
                  e.omacron = 611;
                  e.Zacute = 611;
                  e.Zcaron = 611;
                  e.greaterequal = 549;
                  e.Eth = 722;
                  e.Ccedilla = 722;
                  e.lcommaaccent = 278;
                  e.tcaron = 389;
                  e.eogonek = 556;
                  e.Uogonek = 722;
                  e.Aacute = 722;
                  e.Adieresis = 722;
                  e.egrave = 556;
                  e.zacute = 500;
                  e.iogonek = 278;
                  e.Oacute = 778;
                  e.oacute = 611;
                  e.amacron = 556;
                  e.sacute = 556;
                  e.idieresis = 278;
                  e.Ocircumflex = 778;
                  e.Ugrave = 722;
                  e.Delta = 612;
                  e.thorn = 611;
                  e.twosuperior = 333;
                  e.Odieresis = 778;
                  e.mu = 611;
                  e.igrave = 278;
                  e.ohungarumlaut = 611;
                  e.Eogonek = 667;
                  e.dcroat = 611;
                  e.threequarters = 834;
                  e.Scedilla = 667;
                  e.lcaron = 400;
                  e.Kcommaaccent = 722;
                  e.Lacute = 611;
                  e.trademark = 1e3;
                  e.edotaccent = 556;
                  e.Igrave = 278;
                  e.Imacron = 278;
                  e.Lcaron = 611;
                  e.onehalf = 834;
                  e.lessequal = 549;
                  e.ocircumflex = 611;
                  e.ntilde = 611;
                  e.Uhungarumlaut = 722;
                  e.Eacute = 667;
                  e.emacron = 556;
                  e.gbreve = 611;
                  e.onequarter = 834;
                  e.Scaron = 667;
                  e.Scommaaccent = 667;
                  e.Ohungarumlaut = 778;
                  e.degree = 400;
                  e.ograve = 611;
                  e.Ccaron = 722;
                  e.ugrave = 611;
                  e.radical = 549;
                  e.Dcaron = 722;
                  e.rcommaaccent = 389;
                  e.Ntilde = 722;
                  e.otilde = 611;
                  e.Rcommaaccent = 722;
                  e.Lcommaaccent = 611;
                  e.Atilde = 722;
                  e.Aogonek = 722;
                  e.Aring = 722;
                  e.Otilde = 778;
                  e.zdotaccent = 500;
                  e.Ecaron = 667;
                  e.Iogonek = 278;
                  e.kcommaaccent = 556;
                  e.minus = 584;
                  e.Icircumflex = 278;
                  e.ncaron = 611;
                  e.tcommaaccent = 333;
                  e.logicalnot = 584;
                  e.odieresis = 611;
                  e.udieresis = 611;
                  e.notequal = 549;
                  e.gcommaaccent = 611;
                  e.eth = 611;
                  e.zcaron = 500;
                  e.ncommaaccent = 611;
                  e.onesuperior = 333;
                  e.imacron = 278;
                  e.Euro = 556;
                }
              );
              e["Helvetica-Oblique"] = (0, n.getLookupTableFactory)(function (
                e
              ) {
                e.space = 278;
                e.exclam = 278;
                e.quotedbl = 355;
                e.numbersign = 556;
                e.dollar = 556;
                e.percent = 889;
                e.ampersand = 667;
                e.quoteright = 222;
                e.parenleft = 333;
                e.parenright = 333;
                e.asterisk = 389;
                e.plus = 584;
                e.comma = 278;
                e.hyphen = 333;
                e.period = 278;
                e.slash = 278;
                e.zero = 556;
                e.one = 556;
                e.two = 556;
                e.three = 556;
                e.four = 556;
                e.five = 556;
                e.six = 556;
                e.seven = 556;
                e.eight = 556;
                e.nine = 556;
                e.colon = 278;
                e.semicolon = 278;
                e.less = 584;
                e.equal = 584;
                e.greater = 584;
                e.question = 556;
                e.at = 1015;
                e.A = 667;
                e.B = 667;
                e.C = 722;
                e.D = 722;
                e.E = 667;
                e.F = 611;
                e.G = 778;
                e.H = 722;
                e.I = 278;
                e.J = 500;
                e.K = 667;
                e.L = 556;
                e.M = 833;
                e.N = 722;
                e.O = 778;
                e.P = 667;
                e.Q = 778;
                e.R = 722;
                e.S = 667;
                e.T = 611;
                e.U = 722;
                e.V = 667;
                e.W = 944;
                e.X = 667;
                e.Y = 667;
                e.Z = 611;
                e.bracketleft = 278;
                e.backslash = 278;
                e.bracketright = 278;
                e.asciicircum = 469;
                e.underscore = 556;
                e.quoteleft = 222;
                e.a = 556;
                e.b = 556;
                e.c = 500;
                e.d = 556;
                e.e = 556;
                e.f = 278;
                e.g = 556;
                e.h = 556;
                e.i = 222;
                e.j = 222;
                e.k = 500;
                e.l = 222;
                e.m = 833;
                e.n = 556;
                e.o = 556;
                e.p = 556;
                e.q = 556;
                e.r = 333;
                e.s = 500;
                e.t = 278;
                e.u = 556;
                e.v = 500;
                e.w = 722;
                e.x = 500;
                e.y = 500;
                e.z = 500;
                e.braceleft = 334;
                e.bar = 260;
                e.braceright = 334;
                e.asciitilde = 584;
                e.exclamdown = 333;
                e.cent = 556;
                e.sterling = 556;
                e.fraction = 167;
                e.yen = 556;
                e.florin = 556;
                e.section = 556;
                e.currency = 556;
                e.quotesingle = 191;
                e.quotedblleft = 333;
                e.guillemotleft = 556;
                e.guilsinglleft = 333;
                e.guilsinglright = 333;
                e.fi = 500;
                e.fl = 500;
                e.endash = 556;
                e.dagger = 556;
                e.daggerdbl = 556;
                e.periodcentered = 278;
                e.paragraph = 537;
                e.bullet = 350;
                e.quotesinglbase = 222;
                e.quotedblbase = 333;
                e.quotedblright = 333;
                e.guillemotright = 556;
                e.ellipsis = 1e3;
                e.perthousand = 1e3;
                e.questiondown = 611;
                e.grave = 333;
                e.acute = 333;
                e.circumflex = 333;
                e.tilde = 333;
                e.macron = 333;
                e.breve = 333;
                e.dotaccent = 333;
                e.dieresis = 333;
                e.ring = 333;
                e.cedilla = 333;
                e.hungarumlaut = 333;
                e.ogonek = 333;
                e.caron = 333;
                e.emdash = 1e3;
                e.AE = 1e3;
                e.ordfeminine = 370;
                e.Lslash = 556;
                e.Oslash = 778;
                e.OE = 1e3;
                e.ordmasculine = 365;
                e.ae = 889;
                e.dotlessi = 278;
                e.lslash = 222;
                e.oslash = 611;
                e.oe = 944;
                e.germandbls = 611;
                e.Idieresis = 278;
                e.eacute = 556;
                e.abreve = 556;
                e.uhungarumlaut = 556;
                e.ecaron = 556;
                e.Ydieresis = 667;
                e.divide = 584;
                e.Yacute = 667;
                e.Acircumflex = 667;
                e.aacute = 556;
                e.Ucircumflex = 722;
                e.yacute = 500;
                e.scommaaccent = 500;
                e.ecircumflex = 556;
                e.Uring = 722;
                e.Udieresis = 722;
                e.aogonek = 556;
                e.Uacute = 722;
                e.uogonek = 556;
                e.Edieresis = 667;
                e.Dcroat = 722;
                e.commaaccent = 250;
                e.copyright = 737;
                e.Emacron = 667;
                e.ccaron = 500;
                e.aring = 556;
                e.Ncommaaccent = 722;
                e.lacute = 222;
                e.agrave = 556;
                e.Tcommaaccent = 611;
                e.Cacute = 722;
                e.atilde = 556;
                e.Edotaccent = 667;
                e.scaron = 500;
                e.scedilla = 500;
                e.iacute = 278;
                e.lozenge = 471;
                e.Rcaron = 722;
                e.Gcommaaccent = 778;
                e.ucircumflex = 556;
                e.acircumflex = 556;
                e.Amacron = 667;
                e.rcaron = 333;
                e.ccedilla = 500;
                e.Zdotaccent = 611;
                e.Thorn = 667;
                e.Omacron = 778;
                e.Racute = 722;
                e.Sacute = 667;
                e.dcaron = 643;
                e.Umacron = 722;
                e.uring = 556;
                e.threesuperior = 333;
                e.Ograve = 778;
                e.Agrave = 667;
                e.Abreve = 667;
                e.multiply = 584;
                e.uacute = 556;
                e.Tcaron = 611;
                e.partialdiff = 476;
                e.ydieresis = 500;
                e.Nacute = 722;
                e.icircumflex = 278;
                e.Ecircumflex = 667;
                e.adieresis = 556;
                e.edieresis = 556;
                e.cacute = 500;
                e.nacute = 556;
                e.umacron = 556;
                e.Ncaron = 722;
                e.Iacute = 278;
                e.plusminus = 584;
                e.brokenbar = 260;
                e.registered = 737;
                e.Gbreve = 778;
                e.Idotaccent = 278;
                e.summation = 600;
                e.Egrave = 667;
                e.racute = 333;
                e.omacron = 556;
                e.Zacute = 611;
                e.Zcaron = 611;
                e.greaterequal = 549;
                e.Eth = 722;
                e.Ccedilla = 722;
                e.lcommaaccent = 222;
                e.tcaron = 317;
                e.eogonek = 556;
                e.Uogonek = 722;
                e.Aacute = 667;
                e.Adieresis = 667;
                e.egrave = 556;
                e.zacute = 500;
                e.iogonek = 222;
                e.Oacute = 778;
                e.oacute = 556;
                e.amacron = 556;
                e.sacute = 500;
                e.idieresis = 278;
                e.Ocircumflex = 778;
                e.Ugrave = 722;
                e.Delta = 612;
                e.thorn = 556;
                e.twosuperior = 333;
                e.Odieresis = 778;
                e.mu = 556;
                e.igrave = 278;
                e.ohungarumlaut = 556;
                e.Eogonek = 667;
                e.dcroat = 556;
                e.threequarters = 834;
                e.Scedilla = 667;
                e.lcaron = 299;
                e.Kcommaaccent = 667;
                e.Lacute = 556;
                e.trademark = 1e3;
                e.edotaccent = 556;
                e.Igrave = 278;
                e.Imacron = 278;
                e.Lcaron = 556;
                e.onehalf = 834;
                e.lessequal = 549;
                e.ocircumflex = 556;
                e.ntilde = 556;
                e.Uhungarumlaut = 722;
                e.Eacute = 667;
                e.emacron = 556;
                e.gbreve = 556;
                e.onequarter = 834;
                e.Scaron = 667;
                e.Scommaaccent = 667;
                e.Ohungarumlaut = 778;
                e.degree = 400;
                e.ograve = 556;
                e.Ccaron = 722;
                e.ugrave = 556;
                e.radical = 453;
                e.Dcaron = 722;
                e.rcommaaccent = 333;
                e.Ntilde = 722;
                e.otilde = 556;
                e.Rcommaaccent = 722;
                e.Lcommaaccent = 556;
                e.Atilde = 667;
                e.Aogonek = 667;
                e.Aring = 667;
                e.Otilde = 778;
                e.zdotaccent = 500;
                e.Ecaron = 667;
                e.Iogonek = 278;
                e.kcommaaccent = 500;
                e.minus = 584;
                e.Icircumflex = 278;
                e.ncaron = 556;
                e.tcommaaccent = 278;
                e.logicalnot = 584;
                e.odieresis = 556;
                e.udieresis = 556;
                e.notequal = 549;
                e.gcommaaccent = 556;
                e.eth = 556;
                e.zcaron = 500;
                e.ncommaaccent = 556;
                e.onesuperior = 333;
                e.imacron = 278;
                e.Euro = 556;
              });
              e.Symbol = (0, n.getLookupTableFactory)(function (e) {
                e.space = 250;
                e.exclam = 333;
                e.universal = 713;
                e.numbersign = 500;
                e.existential = 549;
                e.percent = 833;
                e.ampersand = 778;
                e.suchthat = 439;
                e.parenleft = 333;
                e.parenright = 333;
                e.asteriskmath = 500;
                e.plus = 549;
                e.comma = 250;
                e.minus = 549;
                e.period = 250;
                e.slash = 278;
                e.zero = 500;
                e.one = 500;
                e.two = 500;
                e.three = 500;
                e.four = 500;
                e.five = 500;
                e.six = 500;
                e.seven = 500;
                e.eight = 500;
                e.nine = 500;
                e.colon = 278;
                e.semicolon = 278;
                e.less = 549;
                e.equal = 549;
                e.greater = 549;
                e.question = 444;
                e.congruent = 549;
                e.Alpha = 722;
                e.Beta = 667;
                e.Chi = 722;
                e.Delta = 612;
                e.Epsilon = 611;
                e.Phi = 763;
                e.Gamma = 603;
                e.Eta = 722;
                e.Iota = 333;
                e.theta1 = 631;
                e.Kappa = 722;
                e.Lambda = 686;
                e.Mu = 889;
                e.Nu = 722;
                e.Omicron = 722;
                e.Pi = 768;
                e.Theta = 741;
                e.Rho = 556;
                e.Sigma = 592;
                e.Tau = 611;
                e.Upsilon = 690;
                e.sigma1 = 439;
                e.Omega = 768;
                e.Xi = 645;
                e.Psi = 795;
                e.Zeta = 611;
                e.bracketleft = 333;
                e.therefore = 863;
                e.bracketright = 333;
                e.perpendicular = 658;
                e.underscore = 500;
                e.radicalex = 500;
                e.alpha = 631;
                e.beta = 549;
                e.chi = 549;
                e.delta = 494;
                e.epsilon = 439;
                e.phi = 521;
                e.gamma = 411;
                e.eta = 603;
                e.iota = 329;
                e.phi1 = 603;
                e.kappa = 549;
                e.lambda = 549;
                e.mu = 576;
                e.nu = 521;
                e.omicron = 549;
                e.pi = 549;
                e.theta = 521;
                e.rho = 549;
                e.sigma = 603;
                e.tau = 439;
                e.upsilon = 576;
                e.omega1 = 713;
                e.omega = 686;
                e.xi = 493;
                e.psi = 686;
                e.zeta = 494;
                e.braceleft = 480;
                e.bar = 200;
                e.braceright = 480;
                e.similar = 549;
                e.Euro = 750;
                e.Upsilon1 = 620;
                e.minute = 247;
                e.lessequal = 549;
                e.fraction = 167;
                e.infinity = 713;
                e.florin = 500;
                e.club = 753;
                e.diamond = 753;
                e.heart = 753;
                e.spade = 753;
                e.arrowboth = 1042;
                e.arrowleft = 987;
                e.arrowup = 603;
                e.arrowright = 987;
                e.arrowdown = 603;
                e.degree = 400;
                e.plusminus = 549;
                e.second = 411;
                e.greaterequal = 549;
                e.multiply = 549;
                e.proportional = 713;
                e.partialdiff = 494;
                e.bullet = 460;
                e.divide = 549;
                e.notequal = 549;
                e.equivalence = 549;
                e.approxequal = 549;
                e.ellipsis = 1e3;
                e.arrowvertex = 603;
                e.arrowhorizex = 1e3;
                e.carriagereturn = 658;
                e.aleph = 823;
                e.Ifraktur = 686;
                e.Rfraktur = 795;
                e.weierstrass = 987;
                e.circlemultiply = 768;
                e.circleplus = 768;
                e.emptyset = 823;
                e.intersection = 768;
                e.union = 768;
                e.propersuperset = 713;
                e.reflexsuperset = 713;
                e.notsubset = 713;
                e.propersubset = 713;
                e.reflexsubset = 713;
                e.element = 713;
                e.notelement = 713;
                e.angle = 768;
                e.gradient = 713;
                e.registerserif = 790;
                e.copyrightserif = 790;
                e.trademarkserif = 890;
                e.product = 823;
                e.radical = 549;
                e.dotmath = 250;
                e.logicalnot = 713;
                e.logicaland = 603;
                e.logicalor = 603;
                e.arrowdblboth = 1042;
                e.arrowdblleft = 987;
                e.arrowdblup = 603;
                e.arrowdblright = 987;
                e.arrowdbldown = 603;
                e.lozenge = 494;
                e.angleleft = 329;
                e.registersans = 790;
                e.copyrightsans = 790;
                e.trademarksans = 786;
                e.summation = 713;
                e.parenlefttp = 384;
                e.parenleftex = 384;
                e.parenleftbt = 384;
                e.bracketlefttp = 384;
                e.bracketleftex = 384;
                e.bracketleftbt = 384;
                e.bracelefttp = 494;
                e.braceleftmid = 494;
                e.braceleftbt = 494;
                e.braceex = 494;
                e.angleright = 329;
                e.integral = 274;
                e.integraltp = 686;
                e.integralex = 686;
                e.integralbt = 686;
                e.parenrighttp = 384;
                e.parenrightex = 384;
                e.parenrightbt = 384;
                e.bracketrighttp = 384;
                e.bracketrightex = 384;
                e.bracketrightbt = 384;
                e.bracerighttp = 494;
                e.bracerightmid = 494;
                e.bracerightbt = 494;
                e.apple = 790;
              });
              e["Times-Roman"] = (0, n.getLookupTableFactory)(function (e) {
                e.space = 250;
                e.exclam = 333;
                e.quotedbl = 408;
                e.numbersign = 500;
                e.dollar = 500;
                e.percent = 833;
                e.ampersand = 778;
                e.quoteright = 333;
                e.parenleft = 333;
                e.parenright = 333;
                e.asterisk = 500;
                e.plus = 564;
                e.comma = 250;
                e.hyphen = 333;
                e.period = 250;
                e.slash = 278;
                e.zero = 500;
                e.one = 500;
                e.two = 500;
                e.three = 500;
                e.four = 500;
                e.five = 500;
                e.six = 500;
                e.seven = 500;
                e.eight = 500;
                e.nine = 500;
                e.colon = 278;
                e.semicolon = 278;
                e.less = 564;
                e.equal = 564;
                e.greater = 564;
                e.question = 444;
                e.at = 921;
                e.A = 722;
                e.B = 667;
                e.C = 667;
                e.D = 722;
                e.E = 611;
                e.F = 556;
                e.G = 722;
                e.H = 722;
                e.I = 333;
                e.J = 389;
                e.K = 722;
                e.L = 611;
                e.M = 889;
                e.N = 722;
                e.O = 722;
                e.P = 556;
                e.Q = 722;
                e.R = 667;
                e.S = 556;
                e.T = 611;
                e.U = 722;
                e.V = 722;
                e.W = 944;
                e.X = 722;
                e.Y = 722;
                e.Z = 611;
                e.bracketleft = 333;
                e.backslash = 278;
                e.bracketright = 333;
                e.asciicircum = 469;
                e.underscore = 500;
                e.quoteleft = 333;
                e.a = 444;
                e.b = 500;
                e.c = 444;
                e.d = 500;
                e.e = 444;
                e.f = 333;
                e.g = 500;
                e.h = 500;
                e.i = 278;
                e.j = 278;
                e.k = 500;
                e.l = 278;
                e.m = 778;
                e.n = 500;
                e.o = 500;
                e.p = 500;
                e.q = 500;
                e.r = 333;
                e.s = 389;
                e.t = 278;
                e.u = 500;
                e.v = 500;
                e.w = 722;
                e.x = 500;
                e.y = 500;
                e.z = 444;
                e.braceleft = 480;
                e.bar = 200;
                e.braceright = 480;
                e.asciitilde = 541;
                e.exclamdown = 333;
                e.cent = 500;
                e.sterling = 500;
                e.fraction = 167;
                e.yen = 500;
                e.florin = 500;
                e.section = 500;
                e.currency = 500;
                e.quotesingle = 180;
                e.quotedblleft = 444;
                e.guillemotleft = 500;
                e.guilsinglleft = 333;
                e.guilsinglright = 333;
                e.fi = 556;
                e.fl = 556;
                e.endash = 500;
                e.dagger = 500;
                e.daggerdbl = 500;
                e.periodcentered = 250;
                e.paragraph = 453;
                e.bullet = 350;
                e.quotesinglbase = 333;
                e.quotedblbase = 444;
                e.quotedblright = 444;
                e.guillemotright = 500;
                e.ellipsis = 1e3;
                e.perthousand = 1e3;
                e.questiondown = 444;
                e.grave = 333;
                e.acute = 333;
                e.circumflex = 333;
                e.tilde = 333;
                e.macron = 333;
                e.breve = 333;
                e.dotaccent = 333;
                e.dieresis = 333;
                e.ring = 333;
                e.cedilla = 333;
                e.hungarumlaut = 333;
                e.ogonek = 333;
                e.caron = 333;
                e.emdash = 1e3;
                e.AE = 889;
                e.ordfeminine = 276;
                e.Lslash = 611;
                e.Oslash = 722;
                e.OE = 889;
                e.ordmasculine = 310;
                e.ae = 667;
                e.dotlessi = 278;
                e.lslash = 278;
                e.oslash = 500;
                e.oe = 722;
                e.germandbls = 500;
                e.Idieresis = 333;
                e.eacute = 444;
                e.abreve = 444;
                e.uhungarumlaut = 500;
                e.ecaron = 444;
                e.Ydieresis = 722;
                e.divide = 564;
                e.Yacute = 722;
                e.Acircumflex = 722;
                e.aacute = 444;
                e.Ucircumflex = 722;
                e.yacute = 500;
                e.scommaaccent = 389;
                e.ecircumflex = 444;
                e.Uring = 722;
                e.Udieresis = 722;
                e.aogonek = 444;
                e.Uacute = 722;
                e.uogonek = 500;
                e.Edieresis = 611;
                e.Dcroat = 722;
                e.commaaccent = 250;
                e.copyright = 760;
                e.Emacron = 611;
                e.ccaron = 444;
                e.aring = 444;
                e.Ncommaaccent = 722;
                e.lacute = 278;
                e.agrave = 444;
                e.Tcommaaccent = 611;
                e.Cacute = 667;
                e.atilde = 444;
                e.Edotaccent = 611;
                e.scaron = 389;
                e.scedilla = 389;
                e.iacute = 278;
                e.lozenge = 471;
                e.Rcaron = 667;
                e.Gcommaaccent = 722;
                e.ucircumflex = 500;
                e.acircumflex = 444;
                e.Amacron = 722;
                e.rcaron = 333;
                e.ccedilla = 444;
                e.Zdotaccent = 611;
                e.Thorn = 556;
                e.Omacron = 722;
                e.Racute = 667;
                e.Sacute = 556;
                e.dcaron = 588;
                e.Umacron = 722;
                e.uring = 500;
                e.threesuperior = 300;
                e.Ograve = 722;
                e.Agrave = 722;
                e.Abreve = 722;
                e.multiply = 564;
                e.uacute = 500;
                e.Tcaron = 611;
                e.partialdiff = 476;
                e.ydieresis = 500;
                e.Nacute = 722;
                e.icircumflex = 278;
                e.Ecircumflex = 611;
                e.adieresis = 444;
                e.edieresis = 444;
                e.cacute = 444;
                e.nacute = 500;
                e.umacron = 500;
                e.Ncaron = 722;
                e.Iacute = 333;
                e.plusminus = 564;
                e.brokenbar = 200;
                e.registered = 760;
                e.Gbreve = 722;
                e.Idotaccent = 333;
                e.summation = 600;
                e.Egrave = 611;
                e.racute = 333;
                e.omacron = 500;
                e.Zacute = 611;
                e.Zcaron = 611;
                e.greaterequal = 549;
                e.Eth = 722;
                e.Ccedilla = 667;
                e.lcommaaccent = 278;
                e.tcaron = 326;
                e.eogonek = 444;
                e.Uogonek = 722;
                e.Aacute = 722;
                e.Adieresis = 722;
                e.egrave = 444;
                e.zacute = 444;
                e.iogonek = 278;
                e.Oacute = 722;
                e.oacute = 500;
                e.amacron = 444;
                e.sacute = 389;
                e.idieresis = 278;
                e.Ocircumflex = 722;
                e.Ugrave = 722;
                e.Delta = 612;
                e.thorn = 500;
                e.twosuperior = 300;
                e.Odieresis = 722;
                e.mu = 500;
                e.igrave = 278;
                e.ohungarumlaut = 500;
                e.Eogonek = 611;
                e.dcroat = 500;
                e.threequarters = 750;
                e.Scedilla = 556;
                e.lcaron = 344;
                e.Kcommaaccent = 722;
                e.Lacute = 611;
                e.trademark = 980;
                e.edotaccent = 444;
                e.Igrave = 333;
                e.Imacron = 333;
                e.Lcaron = 611;
                e.onehalf = 750;
                e.lessequal = 549;
                e.ocircumflex = 500;
                e.ntilde = 500;
                e.Uhungarumlaut = 722;
                e.Eacute = 611;
                e.emacron = 444;
                e.gbreve = 500;
                e.onequarter = 750;
                e.Scaron = 556;
                e.Scommaaccent = 556;
                e.Ohungarumlaut = 722;
                e.degree = 400;
                e.ograve = 500;
                e.Ccaron = 667;
                e.ugrave = 500;
                e.radical = 453;
                e.Dcaron = 722;
                e.rcommaaccent = 333;
                e.Ntilde = 722;
                e.otilde = 500;
                e.Rcommaaccent = 667;
                e.Lcommaaccent = 611;
                e.Atilde = 722;
                e.Aogonek = 722;
                e.Aring = 722;
                e.Otilde = 722;
                e.zdotaccent = 444;
                e.Ecaron = 611;
                e.Iogonek = 333;
                e.kcommaaccent = 500;
                e.minus = 564;
                e.Icircumflex = 333;
                e.ncaron = 500;
                e.tcommaaccent = 278;
                e.logicalnot = 564;
                e.odieresis = 500;
                e.udieresis = 500;
                e.notequal = 549;
                e.gcommaaccent = 500;
                e.eth = 500;
                e.zcaron = 444;
                e.ncommaaccent = 500;
                e.onesuperior = 300;
                e.imacron = 278;
                e.Euro = 500;
              });
              e["Times-Bold"] = (0, n.getLookupTableFactory)(function (e) {
                e.space = 250;
                e.exclam = 333;
                e.quotedbl = 555;
                e.numbersign = 500;
                e.dollar = 500;
                e.percent = 1e3;
                e.ampersand = 833;
                e.quoteright = 333;
                e.parenleft = 333;
                e.parenright = 333;
                e.asterisk = 500;
                e.plus = 570;
                e.comma = 250;
                e.hyphen = 333;
                e.period = 250;
                e.slash = 278;
                e.zero = 500;
                e.one = 500;
                e.two = 500;
                e.three = 500;
                e.four = 500;
                e.five = 500;
                e.six = 500;
                e.seven = 500;
                e.eight = 500;
                e.nine = 500;
                e.colon = 333;
                e.semicolon = 333;
                e.less = 570;
                e.equal = 570;
                e.greater = 570;
                e.question = 500;
                e.at = 930;
                e.A = 722;
                e.B = 667;
                e.C = 722;
                e.D = 722;
                e.E = 667;
                e.F = 611;
                e.G = 778;
                e.H = 778;
                e.I = 389;
                e.J = 500;
                e.K = 778;
                e.L = 667;
                e.M = 944;
                e.N = 722;
                e.O = 778;
                e.P = 611;
                e.Q = 778;
                e.R = 722;
                e.S = 556;
                e.T = 667;
                e.U = 722;
                e.V = 722;
                e.W = 1e3;
                e.X = 722;
                e.Y = 722;
                e.Z = 667;
                e.bracketleft = 333;
                e.backslash = 278;
                e.bracketright = 333;
                e.asciicircum = 581;
                e.underscore = 500;
                e.quoteleft = 333;
                e.a = 500;
                e.b = 556;
                e.c = 444;
                e.d = 556;
                e.e = 444;
                e.f = 333;
                e.g = 500;
                e.h = 556;
                e.i = 278;
                e.j = 333;
                e.k = 556;
                e.l = 278;
                e.m = 833;
                e.n = 556;
                e.o = 500;
                e.p = 556;
                e.q = 556;
                e.r = 444;
                e.s = 389;
                e.t = 333;
                e.u = 556;
                e.v = 500;
                e.w = 722;
                e.x = 500;
                e.y = 500;
                e.z = 444;
                e.braceleft = 394;
                e.bar = 220;
                e.braceright = 394;
                e.asciitilde = 520;
                e.exclamdown = 333;
                e.cent = 500;
                e.sterling = 500;
                e.fraction = 167;
                e.yen = 500;
                e.florin = 500;
                e.section = 500;
                e.currency = 500;
                e.quotesingle = 278;
                e.quotedblleft = 500;
                e.guillemotleft = 500;
                e.guilsinglleft = 333;
                e.guilsinglright = 333;
                e.fi = 556;
                e.fl = 556;
                e.endash = 500;
                e.dagger = 500;
                e.daggerdbl = 500;
                e.periodcentered = 250;
                e.paragraph = 540;
                e.bullet = 350;
                e.quotesinglbase = 333;
                e.quotedblbase = 500;
                e.quotedblright = 500;
                e.guillemotright = 500;
                e.ellipsis = 1e3;
                e.perthousand = 1e3;
                e.questiondown = 500;
                e.grave = 333;
                e.acute = 333;
                e.circumflex = 333;
                e.tilde = 333;
                e.macron = 333;
                e.breve = 333;
                e.dotaccent = 333;
                e.dieresis = 333;
                e.ring = 333;
                e.cedilla = 333;
                e.hungarumlaut = 333;
                e.ogonek = 333;
                e.caron = 333;
                e.emdash = 1e3;
                e.AE = 1e3;
                e.ordfeminine = 300;
                e.Lslash = 667;
                e.Oslash = 778;
                e.OE = 1e3;
                e.ordmasculine = 330;
                e.ae = 722;
                e.dotlessi = 278;
                e.lslash = 278;
                e.oslash = 500;
                e.oe = 722;
                e.germandbls = 556;
                e.Idieresis = 389;
                e.eacute = 444;
                e.abreve = 500;
                e.uhungarumlaut = 556;
                e.ecaron = 444;
                e.Ydieresis = 722;
                e.divide = 570;
                e.Yacute = 722;
                e.Acircumflex = 722;
                e.aacute = 500;
                e.Ucircumflex = 722;
                e.yacute = 500;
                e.scommaaccent = 389;
                e.ecircumflex = 444;
                e.Uring = 722;
                e.Udieresis = 722;
                e.aogonek = 500;
                e.Uacute = 722;
                e.uogonek = 556;
                e.Edieresis = 667;
                e.Dcroat = 722;
                e.commaaccent = 250;
                e.copyright = 747;
                e.Emacron = 667;
                e.ccaron = 444;
                e.aring = 500;
                e.Ncommaaccent = 722;
                e.lacute = 278;
                e.agrave = 500;
                e.Tcommaaccent = 667;
                e.Cacute = 722;
                e.atilde = 500;
                e.Edotaccent = 667;
                e.scaron = 389;
                e.scedilla = 389;
                e.iacute = 278;
                e.lozenge = 494;
                e.Rcaron = 722;
                e.Gcommaaccent = 778;
                e.ucircumflex = 556;
                e.acircumflex = 500;
                e.Amacron = 722;
                e.rcaron = 444;
                e.ccedilla = 444;
                e.Zdotaccent = 667;
                e.Thorn = 611;
                e.Omacron = 778;
                e.Racute = 722;
                e.Sacute = 556;
                e.dcaron = 672;
                e.Umacron = 722;
                e.uring = 556;
                e.threesuperior = 300;
                e.Ograve = 778;
                e.Agrave = 722;
                e.Abreve = 722;
                e.multiply = 570;
                e.uacute = 556;
                e.Tcaron = 667;
                e.partialdiff = 494;
                e.ydieresis = 500;
                e.Nacute = 722;
                e.icircumflex = 278;
                e.Ecircumflex = 667;
                e.adieresis = 500;
                e.edieresis = 444;
                e.cacute = 444;
                e.nacute = 556;
                e.umacron = 556;
                e.Ncaron = 722;
                e.Iacute = 389;
                e.plusminus = 570;
                e.brokenbar = 220;
                e.registered = 747;
                e.Gbreve = 778;
                e.Idotaccent = 389;
                e.summation = 600;
                e.Egrave = 667;
                e.racute = 444;
                e.omacron = 500;
                e.Zacute = 667;
                e.Zcaron = 667;
                e.greaterequal = 549;
                e.Eth = 722;
                e.Ccedilla = 722;
                e.lcommaaccent = 278;
                e.tcaron = 416;
                e.eogonek = 444;
                e.Uogonek = 722;
                e.Aacute = 722;
                e.Adieresis = 722;
                e.egrave = 444;
                e.zacute = 444;
                e.iogonek = 278;
                e.Oacute = 778;
                e.oacute = 500;
                e.amacron = 500;
                e.sacute = 389;
                e.idieresis = 278;
                e.Ocircumflex = 778;
                e.Ugrave = 722;
                e.Delta = 612;
                e.thorn = 556;
                e.twosuperior = 300;
                e.Odieresis = 778;
                e.mu = 556;
                e.igrave = 278;
                e.ohungarumlaut = 500;
                e.Eogonek = 667;
                e.dcroat = 556;
                e.threequarters = 750;
                e.Scedilla = 556;
                e.lcaron = 394;
                e.Kcommaaccent = 778;
                e.Lacute = 667;
                e.trademark = 1e3;
                e.edotaccent = 444;
                e.Igrave = 389;
                e.Imacron = 389;
                e.Lcaron = 667;
                e.onehalf = 750;
                e.lessequal = 549;
                e.ocircumflex = 500;
                e.ntilde = 556;
                e.Uhungarumlaut = 722;
                e.Eacute = 667;
                e.emacron = 444;
                e.gbreve = 500;
                e.onequarter = 750;
                e.Scaron = 556;
                e.Scommaaccent = 556;
                e.Ohungarumlaut = 778;
                e.degree = 400;
                e.ograve = 500;
                e.Ccaron = 722;
                e.ugrave = 556;
                e.radical = 549;
                e.Dcaron = 722;
                e.rcommaaccent = 444;
                e.Ntilde = 722;
                e.otilde = 500;
                e.Rcommaaccent = 722;
                e.Lcommaaccent = 667;
                e.Atilde = 722;
                e.Aogonek = 722;
                e.Aring = 722;
                e.Otilde = 778;
                e.zdotaccent = 444;
                e.Ecaron = 667;
                e.Iogonek = 389;
                e.kcommaaccent = 556;
                e.minus = 570;
                e.Icircumflex = 389;
                e.ncaron = 556;
                e.tcommaaccent = 333;
                e.logicalnot = 570;
                e.odieresis = 500;
                e.udieresis = 556;
                e.notequal = 549;
                e.gcommaaccent = 500;
                e.eth = 500;
                e.zcaron = 444;
                e.ncommaaccent = 556;
                e.onesuperior = 300;
                e.imacron = 278;
                e.Euro = 500;
              });
              e["Times-BoldItalic"] = (0, n.getLookupTableFactory)(function (
                e
              ) {
                e.space = 250;
                e.exclam = 389;
                e.quotedbl = 555;
                e.numbersign = 500;
                e.dollar = 500;
                e.percent = 833;
                e.ampersand = 778;
                e.quoteright = 333;
                e.parenleft = 333;
                e.parenright = 333;
                e.asterisk = 500;
                e.plus = 570;
                e.comma = 250;
                e.hyphen = 333;
                e.period = 250;
                e.slash = 278;
                e.zero = 500;
                e.one = 500;
                e.two = 500;
                e.three = 500;
                e.four = 500;
                e.five = 500;
                e.six = 500;
                e.seven = 500;
                e.eight = 500;
                e.nine = 500;
                e.colon = 333;
                e.semicolon = 333;
                e.less = 570;
                e.equal = 570;
                e.greater = 570;
                e.question = 500;
                e.at = 832;
                e.A = 667;
                e.B = 667;
                e.C = 667;
                e.D = 722;
                e.E = 667;
                e.F = 667;
                e.G = 722;
                e.H = 778;
                e.I = 389;
                e.J = 500;
                e.K = 667;
                e.L = 611;
                e.M = 889;
                e.N = 722;
                e.O = 722;
                e.P = 611;
                e.Q = 722;
                e.R = 667;
                e.S = 556;
                e.T = 611;
                e.U = 722;
                e.V = 667;
                e.W = 889;
                e.X = 667;
                e.Y = 611;
                e.Z = 611;
                e.bracketleft = 333;
                e.backslash = 278;
                e.bracketright = 333;
                e.asciicircum = 570;
                e.underscore = 500;
                e.quoteleft = 333;
                e.a = 500;
                e.b = 500;
                e.c = 444;
                e.d = 500;
                e.e = 444;
                e.f = 333;
                e.g = 500;
                e.h = 556;
                e.i = 278;
                e.j = 278;
                e.k = 500;
                e.l = 278;
                e.m = 778;
                e.n = 556;
                e.o = 500;
                e.p = 500;
                e.q = 500;
                e.r = 389;
                e.s = 389;
                e.t = 278;
                e.u = 556;
                e.v = 444;
                e.w = 667;
                e.x = 500;
                e.y = 444;
                e.z = 389;
                e.braceleft = 348;
                e.bar = 220;
                e.braceright = 348;
                e.asciitilde = 570;
                e.exclamdown = 389;
                e.cent = 500;
                e.sterling = 500;
                e.fraction = 167;
                e.yen = 500;
                e.florin = 500;
                e.section = 500;
                e.currency = 500;
                e.quotesingle = 278;
                e.quotedblleft = 500;
                e.guillemotleft = 500;
                e.guilsinglleft = 333;
                e.guilsinglright = 333;
                e.fi = 556;
                e.fl = 556;
                e.endash = 500;
                e.dagger = 500;
                e.daggerdbl = 500;
                e.periodcentered = 250;
                e.paragraph = 500;
                e.bullet = 350;
                e.quotesinglbase = 333;
                e.quotedblbase = 500;
                e.quotedblright = 500;
                e.guillemotright = 500;
                e.ellipsis = 1e3;
                e.perthousand = 1e3;
                e.questiondown = 500;
                e.grave = 333;
                e.acute = 333;
                e.circumflex = 333;
                e.tilde = 333;
                e.macron = 333;
                e.breve = 333;
                e.dotaccent = 333;
                e.dieresis = 333;
                e.ring = 333;
                e.cedilla = 333;
                e.hungarumlaut = 333;
                e.ogonek = 333;
                e.caron = 333;
                e.emdash = 1e3;
                e.AE = 944;
                e.ordfeminine = 266;
                e.Lslash = 611;
                e.Oslash = 722;
                e.OE = 944;
                e.ordmasculine = 300;
                e.ae = 722;
                e.dotlessi = 278;
                e.lslash = 278;
                e.oslash = 500;
                e.oe = 722;
                e.germandbls = 500;
                e.Idieresis = 389;
                e.eacute = 444;
                e.abreve = 500;
                e.uhungarumlaut = 556;
                e.ecaron = 444;
                e.Ydieresis = 611;
                e.divide = 570;
                e.Yacute = 611;
                e.Acircumflex = 667;
                e.aacute = 500;
                e.Ucircumflex = 722;
                e.yacute = 444;
                e.scommaaccent = 389;
                e.ecircumflex = 444;
                e.Uring = 722;
                e.Udieresis = 722;
                e.aogonek = 500;
                e.Uacute = 722;
                e.uogonek = 556;
                e.Edieresis = 667;
                e.Dcroat = 722;
                e.commaaccent = 250;
                e.copyright = 747;
                e.Emacron = 667;
                e.ccaron = 444;
                e.aring = 500;
                e.Ncommaaccent = 722;
                e.lacute = 278;
                e.agrave = 500;
                e.Tcommaaccent = 611;
                e.Cacute = 667;
                e.atilde = 500;
                e.Edotaccent = 667;
                e.scaron = 389;
                e.scedilla = 389;
                e.iacute = 278;
                e.lozenge = 494;
                e.Rcaron = 667;
                e.Gcommaaccent = 722;
                e.ucircumflex = 556;
                e.acircumflex = 500;
                e.Amacron = 667;
                e.rcaron = 389;
                e.ccedilla = 444;
                e.Zdotaccent = 611;
                e.Thorn = 611;
                e.Omacron = 722;
                e.Racute = 667;
                e.Sacute = 556;
                e.dcaron = 608;
                e.Umacron = 722;
                e.uring = 556;
                e.threesuperior = 300;
                e.Ograve = 722;
                e.Agrave = 667;
                e.Abreve = 667;
                e.multiply = 570;
                e.uacute = 556;
                e.Tcaron = 611;
                e.partialdiff = 494;
                e.ydieresis = 444;
                e.Nacute = 722;
                e.icircumflex = 278;
                e.Ecircumflex = 667;
                e.adieresis = 500;
                e.edieresis = 444;
                e.cacute = 444;
                e.nacute = 556;
                e.umacron = 556;
                e.Ncaron = 722;
                e.Iacute = 389;
                e.plusminus = 570;
                e.brokenbar = 220;
                e.registered = 747;
                e.Gbreve = 722;
                e.Idotaccent = 389;
                e.summation = 600;
                e.Egrave = 667;
                e.racute = 389;
                e.omacron = 500;
                e.Zacute = 611;
                e.Zcaron = 611;
                e.greaterequal = 549;
                e.Eth = 722;
                e.Ccedilla = 667;
                e.lcommaaccent = 278;
                e.tcaron = 366;
                e.eogonek = 444;
                e.Uogonek = 722;
                e.Aacute = 667;
                e.Adieresis = 667;
                e.egrave = 444;
                e.zacute = 389;
                e.iogonek = 278;
                e.Oacute = 722;
                e.oacute = 500;
                e.amacron = 500;
                e.sacute = 389;
                e.idieresis = 278;
                e.Ocircumflex = 722;
                e.Ugrave = 722;
                e.Delta = 612;
                e.thorn = 500;
                e.twosuperior = 300;
                e.Odieresis = 722;
                e.mu = 576;
                e.igrave = 278;
                e.ohungarumlaut = 500;
                e.Eogonek = 667;
                e.dcroat = 500;
                e.threequarters = 750;
                e.Scedilla = 556;
                e.lcaron = 382;
                e.Kcommaaccent = 667;
                e.Lacute = 611;
                e.trademark = 1e3;
                e.edotaccent = 444;
                e.Igrave = 389;
                e.Imacron = 389;
                e.Lcaron = 611;
                e.onehalf = 750;
                e.lessequal = 549;
                e.ocircumflex = 500;
                e.ntilde = 556;
                e.Uhungarumlaut = 722;
                e.Eacute = 667;
                e.emacron = 444;
                e.gbreve = 500;
                e.onequarter = 750;
                e.Scaron = 556;
                e.Scommaaccent = 556;
                e.Ohungarumlaut = 722;
                e.degree = 400;
                e.ograve = 500;
                e.Ccaron = 667;
                e.ugrave = 556;
                e.radical = 549;
                e.Dcaron = 722;
                e.rcommaaccent = 389;
                e.Ntilde = 722;
                e.otilde = 500;
                e.Rcommaaccent = 667;
                e.Lcommaaccent = 611;
                e.Atilde = 667;
                e.Aogonek = 667;
                e.Aring = 667;
                e.Otilde = 722;
                e.zdotaccent = 389;
                e.Ecaron = 667;
                e.Iogonek = 389;
                e.kcommaaccent = 500;
                e.minus = 606;
                e.Icircumflex = 389;
                e.ncaron = 556;
                e.tcommaaccent = 278;
                e.logicalnot = 606;
                e.odieresis = 500;
                e.udieresis = 556;
                e.notequal = 549;
                e.gcommaaccent = 500;
                e.eth = 500;
                e.zcaron = 389;
                e.ncommaaccent = 556;
                e.onesuperior = 300;
                e.imacron = 278;
                e.Euro = 500;
              });
              e["Times-Italic"] = (0, n.getLookupTableFactory)(function (e) {
                e.space = 250;
                e.exclam = 333;
                e.quotedbl = 420;
                e.numbersign = 500;
                e.dollar = 500;
                e.percent = 833;
                e.ampersand = 778;
                e.quoteright = 333;
                e.parenleft = 333;
                e.parenright = 333;
                e.asterisk = 500;
                e.plus = 675;
                e.comma = 250;
                e.hyphen = 333;
                e.period = 250;
                e.slash = 278;
                e.zero = 500;
                e.one = 500;
                e.two = 500;
                e.three = 500;
                e.four = 500;
                e.five = 500;
                e.six = 500;
                e.seven = 500;
                e.eight = 500;
                e.nine = 500;
                e.colon = 333;
                e.semicolon = 333;
                e.less = 675;
                e.equal = 675;
                e.greater = 675;
                e.question = 500;
                e.at = 920;
                e.A = 611;
                e.B = 611;
                e.C = 667;
                e.D = 722;
                e.E = 611;
                e.F = 611;
                e.G = 722;
                e.H = 722;
                e.I = 333;
                e.J = 444;
                e.K = 667;
                e.L = 556;
                e.M = 833;
                e.N = 667;
                e.O = 722;
                e.P = 611;
                e.Q = 722;
                e.R = 611;
                e.S = 500;
                e.T = 556;
                e.U = 722;
                e.V = 611;
                e.W = 833;
                e.X = 611;
                e.Y = 556;
                e.Z = 556;
                e.bracketleft = 389;
                e.backslash = 278;
                e.bracketright = 389;
                e.asciicircum = 422;
                e.underscore = 500;
                e.quoteleft = 333;
                e.a = 500;
                e.b = 500;
                e.c = 444;
                e.d = 500;
                e.e = 444;
                e.f = 278;
                e.g = 500;
                e.h = 500;
                e.i = 278;
                e.j = 278;
                e.k = 444;
                e.l = 278;
                e.m = 722;
                e.n = 500;
                e.o = 500;
                e.p = 500;
                e.q = 500;
                e.r = 389;
                e.s = 389;
                e.t = 278;
                e.u = 500;
                e.v = 444;
                e.w = 667;
                e.x = 444;
                e.y = 444;
                e.z = 389;
                e.braceleft = 400;
                e.bar = 275;
                e.braceright = 400;
                e.asciitilde = 541;
                e.exclamdown = 389;
                e.cent = 500;
                e.sterling = 500;
                e.fraction = 167;
                e.yen = 500;
                e.florin = 500;
                e.section = 500;
                e.currency = 500;
                e.quotesingle = 214;
                e.quotedblleft = 556;
                e.guillemotleft = 500;
                e.guilsinglleft = 333;
                e.guilsinglright = 333;
                e.fi = 500;
                e.fl = 500;
                e.endash = 500;
                e.dagger = 500;
                e.daggerdbl = 500;
                e.periodcentered = 250;
                e.paragraph = 523;
                e.bullet = 350;
                e.quotesinglbase = 333;
                e.quotedblbase = 556;
                e.quotedblright = 556;
                e.guillemotright = 500;
                e.ellipsis = 889;
                e.perthousand = 1e3;
                e.questiondown = 500;
                e.grave = 333;
                e.acute = 333;
                e.circumflex = 333;
                e.tilde = 333;
                e.macron = 333;
                e.breve = 333;
                e.dotaccent = 333;
                e.dieresis = 333;
                e.ring = 333;
                e.cedilla = 333;
                e.hungarumlaut = 333;
                e.ogonek = 333;
                e.caron = 333;
                e.emdash = 889;
                e.AE = 889;
                e.ordfeminine = 276;
                e.Lslash = 556;
                e.Oslash = 722;
                e.OE = 944;
                e.ordmasculine = 310;
                e.ae = 667;
                e.dotlessi = 278;
                e.lslash = 278;
                e.oslash = 500;
                e.oe = 667;
                e.germandbls = 500;
                e.Idieresis = 333;
                e.eacute = 444;
                e.abreve = 500;
                e.uhungarumlaut = 500;
                e.ecaron = 444;
                e.Ydieresis = 556;
                e.divide = 675;
                e.Yacute = 556;
                e.Acircumflex = 611;
                e.aacute = 500;
                e.Ucircumflex = 722;
                e.yacute = 444;
                e.scommaaccent = 389;
                e.ecircumflex = 444;
                e.Uring = 722;
                e.Udieresis = 722;
                e.aogonek = 500;
                e.Uacute = 722;
                e.uogonek = 500;
                e.Edieresis = 611;
                e.Dcroat = 722;
                e.commaaccent = 250;
                e.copyright = 760;
                e.Emacron = 611;
                e.ccaron = 444;
                e.aring = 500;
                e.Ncommaaccent = 667;
                e.lacute = 278;
                e.agrave = 500;
                e.Tcommaaccent = 556;
                e.Cacute = 667;
                e.atilde = 500;
                e.Edotaccent = 611;
                e.scaron = 389;
                e.scedilla = 389;
                e.iacute = 278;
                e.lozenge = 471;
                e.Rcaron = 611;
                e.Gcommaaccent = 722;
                e.ucircumflex = 500;
                e.acircumflex = 500;
                e.Amacron = 611;
                e.rcaron = 389;
                e.ccedilla = 444;
                e.Zdotaccent = 556;
                e.Thorn = 611;
                e.Omacron = 722;
                e.Racute = 611;
                e.Sacute = 500;
                e.dcaron = 544;
                e.Umacron = 722;
                e.uring = 500;
                e.threesuperior = 300;
                e.Ograve = 722;
                e.Agrave = 611;
                e.Abreve = 611;
                e.multiply = 675;
                e.uacute = 500;
                e.Tcaron = 556;
                e.partialdiff = 476;
                e.ydieresis = 444;
                e.Nacute = 667;
                e.icircumflex = 278;
                e.Ecircumflex = 611;
                e.adieresis = 500;
                e.edieresis = 444;
                e.cacute = 444;
                e.nacute = 500;
                e.umacron = 500;
                e.Ncaron = 667;
                e.Iacute = 333;
                e.plusminus = 675;
                e.brokenbar = 275;
                e.registered = 760;
                e.Gbreve = 722;
                e.Idotaccent = 333;
                e.summation = 600;
                e.Egrave = 611;
                e.racute = 389;
                e.omacron = 500;
                e.Zacute = 556;
                e.Zcaron = 556;
                e.greaterequal = 549;
                e.Eth = 722;
                e.Ccedilla = 667;
                e.lcommaaccent = 278;
                e.tcaron = 300;
                e.eogonek = 444;
                e.Uogonek = 722;
                e.Aacute = 611;
                e.Adieresis = 611;
                e.egrave = 444;
                e.zacute = 389;
                e.iogonek = 278;
                e.Oacute = 722;
                e.oacute = 500;
                e.amacron = 500;
                e.sacute = 389;
                e.idieresis = 278;
                e.Ocircumflex = 722;
                e.Ugrave = 722;
                e.Delta = 612;
                e.thorn = 500;
                e.twosuperior = 300;
                e.Odieresis = 722;
                e.mu = 500;
                e.igrave = 278;
                e.ohungarumlaut = 500;
                e.Eogonek = 611;
                e.dcroat = 500;
                e.threequarters = 750;
                e.Scedilla = 500;
                e.lcaron = 300;
                e.Kcommaaccent = 667;
                e.Lacute = 556;
                e.trademark = 980;
                e.edotaccent = 444;
                e.Igrave = 333;
                e.Imacron = 333;
                e.Lcaron = 611;
                e.onehalf = 750;
                e.lessequal = 549;
                e.ocircumflex = 500;
                e.ntilde = 500;
                e.Uhungarumlaut = 722;
                e.Eacute = 611;
                e.emacron = 444;
                e.gbreve = 500;
                e.onequarter = 750;
                e.Scaron = 500;
                e.Scommaaccent = 500;
                e.Ohungarumlaut = 722;
                e.degree = 400;
                e.ograve = 500;
                e.Ccaron = 667;
                e.ugrave = 500;
                e.radical = 453;
                e.Dcaron = 722;
                e.rcommaaccent = 389;
                e.Ntilde = 667;
                e.otilde = 500;
                e.Rcommaaccent = 611;
                e.Lcommaaccent = 556;
                e.Atilde = 611;
                e.Aogonek = 611;
                e.Aring = 611;
                e.Otilde = 722;
                e.zdotaccent = 389;
                e.Ecaron = 611;
                e.Iogonek = 333;
                e.kcommaaccent = 444;
                e.minus = 675;
                e.Icircumflex = 333;
                e.ncaron = 500;
                e.tcommaaccent = 278;
                e.logicalnot = 675;
                e.odieresis = 500;
                e.udieresis = 500;
                e.notequal = 549;
                e.gcommaaccent = 500;
                e.eth = 500;
                e.zcaron = 389;
                e.ncommaaccent = 500;
                e.onesuperior = 300;
                e.imacron = 278;
                e.Euro = 500;
              });
              e.ZapfDingbats = (0, n.getLookupTableFactory)(function (e) {
                e.space = 278;
                e.a1 = 974;
                e.a2 = 961;
                e.a202 = 974;
                e.a3 = 980;
                e.a4 = 719;
                e.a5 = 789;
                e.a119 = 790;
                e.a118 = 791;
                e.a117 = 690;
                e.a11 = 960;
                e.a12 = 939;
                e.a13 = 549;
                e.a14 = 855;
                e.a15 = 911;
                e.a16 = 933;
                e.a105 = 911;
                e.a17 = 945;
                e.a18 = 974;
                e.a19 = 755;
                e.a20 = 846;
                e.a21 = 762;
                e.a22 = 761;
                e.a23 = 571;
                e.a24 = 677;
                e.a25 = 763;
                e.a26 = 760;
                e.a27 = 759;
                e.a28 = 754;
                e.a6 = 494;
                e.a7 = 552;
                e.a8 = 537;
                e.a9 = 577;
                e.a10 = 692;
                e.a29 = 786;
                e.a30 = 788;
                e.a31 = 788;
                e.a32 = 790;
                e.a33 = 793;
                e.a34 = 794;
                e.a35 = 816;
                e.a36 = 823;
                e.a37 = 789;
                e.a38 = 841;
                e.a39 = 823;
                e.a40 = 833;
                e.a41 = 816;
                e.a42 = 831;
                e.a43 = 923;
                e.a44 = 744;
                e.a45 = 723;
                e.a46 = 749;
                e.a47 = 790;
                e.a48 = 792;
                e.a49 = 695;
                e.a50 = 776;
                e.a51 = 768;
                e.a52 = 792;
                e.a53 = 759;
                e.a54 = 707;
                e.a55 = 708;
                e.a56 = 682;
                e.a57 = 701;
                e.a58 = 826;
                e.a59 = 815;
                e.a60 = 789;
                e.a61 = 789;
                e.a62 = 707;
                e.a63 = 687;
                e.a64 = 696;
                e.a65 = 689;
                e.a66 = 786;
                e.a67 = 787;
                e.a68 = 713;
                e.a69 = 791;
                e.a70 = 785;
                e.a71 = 791;
                e.a72 = 873;
                e.a73 = 761;
                e.a74 = 762;
                e.a203 = 762;
                e.a75 = 759;
                e.a204 = 759;
                e.a76 = 892;
                e.a77 = 892;
                e.a78 = 788;
                e.a79 = 784;
                e.a81 = 438;
                e.a82 = 138;
                e.a83 = 277;
                e.a84 = 415;
                e.a97 = 392;
                e.a98 = 392;
                e.a99 = 668;
                e.a100 = 668;
                e.a89 = 390;
                e.a90 = 390;
                e.a93 = 317;
                e.a94 = 317;
                e.a91 = 276;
                e.a92 = 276;
                e.a205 = 509;
                e.a85 = 509;
                e.a206 = 410;
                e.a86 = 410;
                e.a87 = 234;
                e.a88 = 234;
                e.a95 = 334;
                e.a96 = 334;
                e.a101 = 732;
                e.a102 = 544;
                e.a103 = 544;
                e.a104 = 910;
                e.a106 = 667;
                e.a107 = 760;
                e.a108 = 760;
                e.a112 = 776;
                e.a111 = 595;
                e.a110 = 694;
                e.a109 = 626;
                e.a120 = 788;
                e.a121 = 788;
                e.a122 = 788;
                e.a123 = 788;
                e.a124 = 788;
                e.a125 = 788;
                e.a126 = 788;
                e.a127 = 788;
                e.a128 = 788;
                e.a129 = 788;
                e.a130 = 788;
                e.a131 = 788;
                e.a132 = 788;
                e.a133 = 788;
                e.a134 = 788;
                e.a135 = 788;
                e.a136 = 788;
                e.a137 = 788;
                e.a138 = 788;
                e.a139 = 788;
                e.a140 = 788;
                e.a141 = 788;
                e.a142 = 788;
                e.a143 = 788;
                e.a144 = 788;
                e.a145 = 788;
                e.a146 = 788;
                e.a147 = 788;
                e.a148 = 788;
                e.a149 = 788;
                e.a150 = 788;
                e.a151 = 788;
                e.a152 = 788;
                e.a153 = 788;
                e.a154 = 788;
                e.a155 = 788;
                e.a156 = 788;
                e.a157 = 788;
                e.a158 = 788;
                e.a159 = 788;
                e.a160 = 894;
                e.a161 = 838;
                e.a163 = 1016;
                e.a164 = 458;
                e.a196 = 748;
                e.a165 = 924;
                e.a192 = 748;
                e.a166 = 918;
                e.a167 = 927;
                e.a168 = 928;
                e.a169 = 928;
                e.a170 = 834;
                e.a171 = 873;
                e.a172 = 828;
                e.a173 = 924;
                e.a162 = 924;
                e.a174 = 917;
                e.a175 = 930;
                e.a176 = 931;
                e.a177 = 463;
                e.a178 = 883;
                e.a179 = 836;
                e.a193 = 836;
                e.a180 = 867;
                e.a199 = 867;
                e.a181 = 696;
                e.a200 = 696;
                e.a182 = 874;
                e.a201 = 874;
                e.a183 = 760;
                e.a184 = 946;
                e.a197 = 771;
                e.a185 = 865;
                e.a194 = 771;
                e.a198 = 888;
                e.a186 = 967;
                e.a195 = 888;
                e.a187 = 831;
                e.a188 = 873;
                e.a189 = 927;
                e.a190 = 970;
                e.a191 = 918;
              });
            });
          t.getMetrics = r;
        },
        (e, t, i) => {
          Object.defineProperty(t, "__esModule", { value: !0 });
          t.MurmurHash3_64 = void 0;
          var n = i(2);
          const r = 3285377520,
            a = 4294901760,
            s = 65535;
          t.MurmurHash3_64 = class {
            constructor(e) {
              this.h1 = e ? 4294967295 & e : r;
              this.h2 = e ? 4294967295 & e : r;
            }
            update(e) {
              let t, i;
              if ((0, n.isString)(e)) {
                t = new Uint8Array(2 * e.length);
                i = 0;
                for (let n = 0, r = e.length; n < r; n++) {
                  const r = e.charCodeAt(n);
                  if (r <= 255) t[i++] = r;
                  else {
                    t[i++] = r >>> 8;
                    t[i++] = 255 & r;
                  }
                }
              } else if ((0, n.isArrayBuffer)(e)) {
                t = e.slice();
                i = t.byteLength;
              } else
                throw new Error(
                  "Wrong data format in MurmurHash3_64_update. Input must be a string or array."
                );
              const r = i >> 2,
                o = i - 4 * r,
                l = new Uint32Array(t.buffer, 0, r);
              let c = 0,
                h = 0,
                u = this.h1,
                d = this.h2;
              const f = 3432918353,
                p = 461845907,
                g = 11601,
                m = 13715;
              for (let e = 0; e < r; e++)
                if (1 & e) {
                  c = l[e];
                  c = ((c * f) & a) | ((c * g) & s);
                  c = (c << 15) | (c >>> 17);
                  c = ((c * p) & a) | ((c * m) & s);
                  u ^= c;
                  u = (u << 13) | (u >>> 19);
                  u = 5 * u + 3864292196;
                } else {
                  h = l[e];
                  h = ((h * f) & a) | ((h * g) & s);
                  h = (h << 15) | (h >>> 17);
                  h = ((h * p) & a) | ((h * m) & s);
                  d ^= h;
                  d = (d << 13) | (d >>> 19);
                  d = 5 * d + 3864292196;
                }
              c = 0;
              switch (o) {
                case 3:
                  c ^= t[4 * r + 2] << 16;
                case 2:
                  c ^= t[4 * r + 1] << 8;
                case 1:
                  c ^= t[4 * r];
                  c = ((c * f) & a) | ((c * g) & s);
                  c = (c << 15) | (c >>> 17);
                  c = ((c * p) & a) | ((c * m) & s);
                  if (1 & r) u ^= c;
                  else d ^= c;
              }
              this.h1 = u;
              this.h2 = d;
            }
            hexdigest() {
              let e = this.h1,
                t = this.h2;
              e ^= t >>> 1;
              e = ((3981806797 * e) & a) | ((36045 * e) & s);
              t =
                ((4283543511 * t) & a) |
                (((2950163797 * ((t << 16) | (e >>> 16))) & a) >>> 16);
              e ^= t >>> 1;
              e = ((444984403 * e) & a) | ((60499 * e) & s);
              t =
                ((3301882366 * t) & a) |
                (((3120437893 * ((t << 16) | (e >>> 16))) & a) >>> 16);
              e ^= t >>> 1;
              const i = (e >>> 0).toString(16),
                n = (t >>> 0).toString(16);
              return i.padStart(8, "0") + n.padStart(8, "0");
            }
          };
        },
        (e, t, i) => {
          Object.defineProperty(t, "__esModule", { value: !0 });
          t.OperatorList = void 0;
          var n = i(2),
            r = (function () {
              function e(e, t, i, n, r) {
                for (var a = e, s = 0, o = t.length - 1; s < o; s++) {
                  var l = t[s];
                  a = a[l] || (a[l] = []);
                }
                a[t[t.length - 1]] = { checkFn: i, iterateFn: n, processFn: r };
              }
              var t = [];
              e(
                t,
                [
                  n.OPS.save,
                  n.OPS.transform,
                  n.OPS.paintInlineImageXObject,
                  n.OPS.restore,
                ],
                null,
                function (e, t) {
                  var i = e.fnArray,
                    r = (t - (e.iCurr - 3)) % 4;
                  switch (r) {
                    case 0:
                      return i[t] === n.OPS.save;
                    case 1:
                      return i[t] === n.OPS.transform;
                    case 2:
                      return i[t] === n.OPS.paintInlineImageXObject;
                    case 3:
                      return i[t] === n.OPS.restore;
                  }
                  throw new Error(
                    `iterateInlineImageGroup - invalid pos: ${r}`
                  );
                },
                function (e, t) {
                  var i = e.fnArray,
                    r = e.argsArray,
                    a = e.iCurr,
                    s = a - 3,
                    o = a - 2,
                    l = a - 1,
                    c = Math.min(Math.floor((t - s) / 4), 200);
                  if (c < 10) return t - ((t - s) % 4);
                  var h,
                    u = 0,
                    d = [],
                    f = 0,
                    p = 1,
                    g = 1;
                  for (h = 0; h < c; h++) {
                    var m = r[o + (h << 2)],
                      v = r[l + (h << 2)][0];
                    if (p + v.width > 1e3) {
                      u = Math.max(u, p);
                      g += f + 2;
                      p = 0;
                      f = 0;
                    }
                    d.push({
                      transform: m,
                      x: p,
                      y: g,
                      w: v.width,
                      h: v.height,
                    });
                    p += v.width + 2;
                    f = Math.max(f, v.height);
                  }
                  var b = Math.max(u, p) + 1,
                    y = g + f + 1,
                    w = new Uint8ClampedArray(b * y * 4),
                    x = b << 2;
                  for (h = 0; h < c; h++) {
                    var k = r[l + (h << 2)][0].data,
                      C = d[h].w << 2,
                      S = 0,
                      _ = (d[h].x + d[h].y * b) << 2;
                    w.set(k.subarray(0, C), _ - x);
                    for (var A = 0, F = d[h].h; A < F; A++) {
                      w.set(k.subarray(S, S + C), _);
                      S += C;
                      _ += x;
                    }
                    w.set(k.subarray(S - C, S), _);
                    for (; _ >= 0; ) {
                      k[_ - 4] = k[_];
                      k[_ - 3] = k[_ + 1];
                      k[_ - 2] = k[_ + 2];
                      k[_ - 1] = k[_ + 3];
                      k[_ + C] = k[_ + C - 4];
                      k[_ + C + 1] = k[_ + C - 3];
                      k[_ + C + 2] = k[_ + C - 2];
                      k[_ + C + 3] = k[_ + C - 1];
                      _ -= x;
                    }
                  }
                  i.splice(s, 4 * c, n.OPS.paintInlineImageXObjectGroup);
                  r.splice(s, 4 * c, [
                    {
                      width: b,
                      height: y,
                      kind: n.ImageKind.RGBA_32BPP,
                      data: w,
                    },
                    d,
                  ]);
                  return s + 1;
                }
              );
              e(
                t,
                [
                  n.OPS.save,
                  n.OPS.transform,
                  n.OPS.paintImageMaskXObject,
                  n.OPS.restore,
                ],
                null,
                function (e, t) {
                  var i = e.fnArray,
                    r = (t - (e.iCurr - 3)) % 4;
                  switch (r) {
                    case 0:
                      return i[t] === n.OPS.save;
                    case 1:
                      return i[t] === n.OPS.transform;
                    case 2:
                      return i[t] === n.OPS.paintImageMaskXObject;
                    case 3:
                      return i[t] === n.OPS.restore;
                  }
                  throw new Error(`iterateImageMaskGroup - invalid pos: ${r}`);
                },
                function (e, t) {
                  var i,
                    r = e.fnArray,
                    a = e.argsArray,
                    s = e.iCurr,
                    o = s - 3,
                    l = s - 2,
                    c = s - 1,
                    h = Math.floor((t - o) / 4);
                  if (
                    (h = (function (e, t, i, r) {
                      for (var a = e + 2, s = 0; s < t; s++) {
                        var o = r[a + 4 * s],
                          l = 1 === o.length && o[0];
                        if (
                          !l ||
                          1 !== l.width ||
                          1 !== l.height ||
                          (l.data.length &&
                            (1 !== l.data.length || 0 !== l.data[0]))
                        )
                          break;
                        else i[a + 4 * s] = n.OPS.paintSolidColorImageMask;
                      }
                      return t - s;
                    })(o, h, r, a)) < 10
                  )
                    return t - ((t - o) % 4);
                  var u,
                    d,
                    f = !1,
                    p = a[c][0];
                  const g = a[l][0],
                    m = a[l][1],
                    v = a[l][2],
                    b = a[l][3];
                  if (m === v) {
                    f = !0;
                    u = l + 4;
                    var y = c + 4;
                    for (i = 1; i < h; i++, u += 4, y += 4) {
                      d = a[u];
                      if (
                        a[y][0] !== p ||
                        d[0] !== g ||
                        d[1] !== m ||
                        d[2] !== v ||
                        d[3] !== b
                      ) {
                        if (i < 10) f = !1;
                        else h = i;
                        break;
                      }
                    }
                  }
                  if (f) {
                    h = Math.min(h, 1e3);
                    var w = new Float32Array(2 * h);
                    u = l;
                    for (i = 0; i < h; i++, u += 4) {
                      d = a[u];
                      w[i << 1] = d[4];
                      w[1 + (i << 1)] = d[5];
                    }
                    r.splice(o, 4 * h, n.OPS.paintImageMaskXObjectRepeat);
                    a.splice(o, 4 * h, [p, g, m, v, b, w]);
                  } else {
                    h = Math.min(h, 100);
                    var x = [];
                    for (i = 0; i < h; i++) {
                      d = a[l + (i << 2)];
                      var k = a[c + (i << 2)][0];
                      x.push({
                        data: k.data,
                        width: k.width,
                        height: k.height,
                        transform: d,
                      });
                    }
                    r.splice(o, 4 * h, n.OPS.paintImageMaskXObjectGroup);
                    a.splice(o, 4 * h, [x]);
                  }
                  return o + 1;
                }
              );
              e(
                t,
                [
                  n.OPS.save,
                  n.OPS.transform,
                  n.OPS.paintImageXObject,
                  n.OPS.restore,
                ],
                function (e) {
                  var t = e.argsArray,
                    i = e.iCurr - 2;
                  return 0 === t[i][1] && 0 === t[i][2];
                },
                function (e, t) {
                  var i = e.fnArray,
                    r = e.argsArray,
                    a = (t - (e.iCurr - 3)) % 4;
                  switch (a) {
                    case 0:
                      return i[t] === n.OPS.save;
                    case 1:
                      if (i[t] !== n.OPS.transform) return !1;
                      var s = e.iCurr - 2,
                        o = r[s][0],
                        l = r[s][3];
                      if (
                        r[t][0] !== o ||
                        0 !== r[t][1] ||
                        0 !== r[t][2] ||
                        r[t][3] !== l
                      )
                        return !1;
                      else return !0;
                    case 2:
                      if (i[t] !== n.OPS.paintImageXObject) return !1;
                      var c = r[e.iCurr - 1][0];
                      if (r[t][0] !== c) return !1;
                      else return !0;
                    case 3:
                      return i[t] === n.OPS.restore;
                  }
                  throw new Error(`iterateImageGroup - invalid pos: ${a}`);
                },
                function (e, t) {
                  var i = e.fnArray,
                    r = e.argsArray,
                    a = e.iCurr,
                    s = a - 3,
                    o = a - 2,
                    l = r[a - 1][0],
                    c = r[o][0],
                    h = r[o][3],
                    u = Math.min(Math.floor((t - s) / 4), 1e3);
                  if (u < 3) return t - ((t - s) % 4);
                  for (
                    var d = new Float32Array(2 * u), f = o, p = 0;
                    p < u;
                    p++, f += 4
                  ) {
                    var g = r[f];
                    d[p << 1] = g[4];
                    d[1 + (p << 1)] = g[5];
                  }
                  var m = [l, c, h, d];
                  i.splice(s, 4 * u, n.OPS.paintImageXObjectRepeat);
                  r.splice(s, 4 * u, m);
                  return s + 1;
                }
              );
              e(
                t,
                [
                  n.OPS.beginText,
                  n.OPS.setFont,
                  n.OPS.setTextMatrix,
                  n.OPS.showText,
                  n.OPS.endText,
                ],
                null,
                function (e, t) {
                  var i = e.fnArray,
                    r = e.argsArray,
                    a = (t - (e.iCurr - 4)) % 5;
                  switch (a) {
                    case 0:
                      return i[t] === n.OPS.beginText;
                    case 1:
                      return i[t] === n.OPS.setFont;
                    case 2:
                      return i[t] === n.OPS.setTextMatrix;
                    case 3:
                      if (i[t] !== n.OPS.showText) return !1;
                      var s = e.iCurr - 3,
                        o = r[s][0],
                        l = r[s][1];
                      if (r[t][0] !== o || r[t][1] !== l) return !1;
                      else return !0;
                    case 4:
                      return i[t] === n.OPS.endText;
                  }
                  throw new Error(`iterateShowTextGroup - invalid pos: ${a}`);
                },
                function (e, t) {
                  var i = e.fnArray,
                    n = e.argsArray,
                    r = e.iCurr,
                    a = r - 4,
                    s = r - 3,
                    o = r - 2,
                    l = r - 1,
                    c = r,
                    h = n[s][0],
                    u = n[s][1],
                    d = Math.min(Math.floor((t - a) / 5), 1e3);
                  if (d < 3) return t - ((t - a) % 5);
                  var f = a;
                  if (
                    a >= 4 &&
                    i[a - 4] === i[s] &&
                    i[a - 3] === i[o] &&
                    i[a - 2] === i[l] &&
                    i[a - 1] === i[c] &&
                    n[a - 4][0] === h &&
                    n[a - 4][1] === u
                  ) {
                    d++;
                    f -= 5;
                  }
                  for (var p = f + 4, g = 1; g < d; g++) {
                    i.splice(p, 3);
                    n.splice(p, 3);
                    p += 2;
                  }
                  return p + 1;
                }
              );
              function i(e) {
                this.queue = e;
                this.state = null;
                this.context = {
                  iCurr: 0,
                  fnArray: e.fnArray,
                  argsArray: e.argsArray,
                };
                this.match = null;
                this.lastProcessed = 0;
              }
              i.prototype = {
                _optimize() {
                  const e = this.queue.fnArray;
                  let i = this.lastProcessed,
                    n = e.length,
                    r = this.state,
                    a = this.match;
                  if (!r && !a && i + 1 === n && !t[e[i]]) {
                    this.lastProcessed = n;
                    return;
                  }
                  const s = this.context;
                  for (; i < n; ) {
                    if (a) {
                      if ((0, a.iterateFn)(s, i)) {
                        i++;
                        continue;
                      }
                      i = (0, a.processFn)(s, i + 1);
                      n = e.length;
                      a = null;
                      r = null;
                      if (i >= n) break;
                    }
                    r = (r || t)[e[i]];
                    if (r && !Array.isArray(r)) {
                      s.iCurr = i;
                      i++;
                      if (!r.checkFn || (0, r.checkFn)(s)) {
                        a = r;
                        r = null;
                      } else r = null;
                    } else i++;
                  }
                  this.state = r;
                  this.match = a;
                  this.lastProcessed = i;
                },
                push(e, t) {
                  this.queue.fnArray.push(e);
                  this.queue.argsArray.push(t);
                  this._optimize();
                },
                flush() {
                  for (; this.match; ) {
                    const e = this.queue.fnArray.length;
                    this.lastProcessed = (0, this.match.processFn)(
                      this.context,
                      e
                    );
                    this.match = null;
                    this.state = null;
                    this._optimize();
                  }
                },
                reset() {
                  this.state = null;
                  this.match = null;
                  this.lastProcessed = 0;
                },
              };
              return i;
            })(),
            a = (function () {
              function e(e) {
                this.queue = e;
              }
              e.prototype = {
                push(e, t) {
                  this.queue.fnArray.push(e);
                  this.queue.argsArray.push(t);
                },
                flush() {},
                reset() {},
              };
              return e;
            })(),
            s = (function () {
              function e(e, t) {
                this._streamSink = t;
                this.fnArray = [];
                this.argsArray = [];
                if (t && "oplist" !== e) this.optimizer = new r(this);
                else this.optimizer = new a(this);
                this.dependencies = new Set();
                this._totalLength = 0;
                this.weight = 0;
                this._resolved = t ? null : Promise.resolve();
              }
              e.prototype = {
                get length() {
                  return this.argsArray.length;
                },
                get ready() {
                  return this._resolved || this._streamSink.ready;
                },
                get totalLength() {
                  return this._totalLength + this.length;
                },
                addOp(e, t) {
                  this.optimizer.push(e, t);
                  this.weight++;
                  if (this._streamSink)
                    if (this.weight >= 1e3) this.flush();
                    else if (
                      this.weight >= 995 &&
                      (e === n.OPS.restore || e === n.OPS.endText)
                    )
                      this.flush();
                },
                addDependency(e) {
                  if (!this.dependencies.has(e)) {
                    this.dependencies.add(e);
                    this.addOp(n.OPS.dependency, [e]);
                  }
                },
                addDependencies(e) {
                  for (const t of e) this.addDependency(t);
                },
                addOpList(t) {
                  if (t instanceof e) {
                    for (const e of t.dependencies) this.dependencies.add(e);
                    for (var i = 0, r = t.length; i < r; i++)
                      this.addOp(t.fnArray[i], t.argsArray[i]);
                  } else
                    (0, n.warn)(
                      'addOpList - ignoring invalid "opList" parameter.'
                    );
                },
                getIR() {
                  return {
                    fnArray: this.fnArray,
                    argsArray: this.argsArray,
                    length: this.length,
                  };
                },
                get _transfers() {
                  const e = [],
                    { fnArray: t, argsArray: i, length: r } = this;
                  for (let a = 0; a < r; a++)
                    switch (t[a]) {
                      case n.OPS.paintInlineImageXObject:
                      case n.OPS.paintInlineImageXObjectGroup:
                      case n.OPS.paintImageMaskXObject:
                        const t = i[a][0];
                        if (!t.cached) e.push(t.data.buffer);
                    }
                  return e;
                },
                flush(e = !1) {
                  this.optimizer.flush();
                  const t = this.length;
                  this._totalLength += t;
                  this._streamSink.enqueue(
                    {
                      fnArray: this.fnArray,
                      argsArray: this.argsArray,
                      lastChunk: e,
                      length: t,
                    },
                    1,
                    this._transfers
                  );
                  this.dependencies.clear();
                  this.fnArray.length = 0;
                  this.argsArray.length = 0;
                  this.weight = 0;
                  this.optimizer.reset();
                },
              };
              return e;
            })();
          t.OperatorList = s;
        },
        (e, t, i) => {
          Object.defineProperty(t, "__esModule", { value: !0 });
          t.PDFImage = void 0;
          var n = i(2),
            r = i(5),
            a = i(23),
            s = i(12),
            o = i(18),
            l = i(21);
          function c(e, t, i, n) {
            if ((e = t + e * i) < 0) e = 0;
            else if (e > n) e = n;
            return e;
          }
          function h(e, t, i, n, r, a) {
            var s = r * a;
            let o;
            if (t <= 8) o = new Uint8Array(s);
            else if (t <= 16) o = new Uint16Array(s);
            else o = new Uint32Array(s);
            var l,
              c,
              h,
              u,
              d = i / r,
              f = n / a,
              p = 0,
              g = new Uint16Array(r),
              m = i;
            for (l = 0; l < r; l++) g[l] = Math.floor(l * d);
            for (l = 0; l < a; l++) {
              h = Math.floor(l * f) * m;
              for (c = 0; c < r; c++) {
                u = h + g[c];
                o[p++] = e[u];
              }
            }
            return o;
          }
          class u {
            constructor({
              xref: e,
              res: t,
              image: i,
              isInline: s = !1,
              smask: o = null,
              mask: c = null,
              isMask: h = !1,
              pdfFunctionFactory: d,
              localColorSpaceCache: f,
            }) {
              this.image = i;
              var p = i.dict;
              const g = p.get("Filter");
              if ((0, r.isName)(g))
                switch (g.name) {
                  case "JPXDecode":
                    var m = new l.JpxImage();
                    m.parseImageProperties(i.stream);
                    i.stream.reset();
                    i.width = m.width;
                    i.height = m.height;
                    i.bitsPerComponent = m.bitsPerComponent;
                    i.numComps = m.componentsCount;
                    break;
                  case "JBIG2Decode":
                    i.bitsPerComponent = 1;
                    i.numComps = 1;
                }
              let v = p.get("Width", "W"),
                b = p.get("Height", "H");
              if (
                Number.isInteger(i.width) &&
                i.width > 0 &&
                Number.isInteger(i.height) &&
                i.height > 0 &&
                (i.width !== v || i.height !== b)
              ) {
                (0, n.warn)(
                  "PDFImage - using the Width/Height of the image data, rather than the image dictionary."
                );
                v = i.width;
                b = i.height;
              }
              if (v < 1 || b < 1)
                throw new n.FormatError(
                  `Invalid image width: ${v} or height: ${b}`
                );
              this.width = v;
              this.height = b;
              this.interpolate = p.get("Interpolate", "I") || !1;
              this.imageMask = p.get("ImageMask", "IM") || !1;
              this.matte = p.get("Matte") || !1;
              var y = i.bitsPerComponent;
              if (!y)
                if (!(y = p.get("BitsPerComponent", "BPC")))
                  if (this.imageMask) y = 1;
                  else
                    throw new n.FormatError(
                      `Bits per component missing in image: ${this.imageMask}`
                    );
              this.bpc = y;
              if (!this.imageMask) {
                let o = p.getRaw("ColorSpace") || p.getRaw("CS");
                if (!o) {
                  (0, n.info)("JPX images (which do not require color spaces)");
                  switch (i.numComps) {
                    case 1:
                      o = r.Name.get("DeviceGray");
                      break;
                    case 3:
                      o = r.Name.get("DeviceRGB");
                      break;
                    case 4:
                      o = r.Name.get("DeviceCMYK");
                      break;
                    default:
                      throw new Error(
                        `JPX images with ${i.numComps} color components not supported.`
                      );
                  }
                }
                this.colorSpace = a.ColorSpace.parse({
                  cs: o,
                  xref: e,
                  resources: s ? t : null,
                  pdfFunctionFactory: d,
                  localColorSpaceCache: f,
                });
                this.numComps = this.colorSpace.numComps;
              }
              this.decode = p.getArray("Decode", "D");
              this.needsDecode = !1;
              if (
                this.decode &&
                ((this.colorSpace &&
                  !this.colorSpace.isDefaultDecode(this.decode, y)) ||
                  (h && !a.ColorSpace.isDefaultDecode(this.decode, 1)))
              ) {
                this.needsDecode = !0;
                var w = (1 << y) - 1;
                this.decodeCoefficients = [];
                this.decodeAddends = [];
                const e = this.colorSpace && "Indexed" === this.colorSpace.name;
                for (var x = 0, k = 0; x < this.decode.length; x += 2, ++k) {
                  var C = this.decode[x],
                    S = this.decode[x + 1];
                  this.decodeCoefficients[k] = e ? (S - C) / w : S - C;
                  this.decodeAddends[k] = e ? C : w * C;
                }
              }
              if (o)
                this.smask = new u({
                  xref: e,
                  res: t,
                  image: o,
                  isInline: s,
                  pdfFunctionFactory: d,
                  localColorSpaceCache: f,
                });
              else if (c)
                if ((0, r.isStream)(c))
                  if (!c.dict.get("ImageMask", "IM"))
                    (0, n.warn)("Ignoring /Mask in image without /ImageMask.");
                  else
                    this.mask = new u({
                      xref: e,
                      res: t,
                      image: c,
                      isInline: s,
                      isMask: !0,
                      pdfFunctionFactory: d,
                      localColorSpaceCache: f,
                    });
                else this.mask = c;
            }
            static async buildImage({
              xref: e,
              res: t,
              image: i,
              isInline: a = !1,
              pdfFunctionFactory: s,
              localColorSpaceCache: o,
            }) {
              const l = i;
              let c = null,
                h = null;
              const d = i.dict.get("SMask"),
                f = i.dict.get("Mask");
              if (d) c = d;
              else if (f)
                if ((0, r.isStream)(f) || Array.isArray(f)) h = f;
                else (0, n.warn)("Unsupported mask format.");
              return new u({
                xref: e,
                res: t,
                image: l,
                isInline: a,
                smask: c,
                mask: h,
                pdfFunctionFactory: s,
                localColorSpaceCache: o,
              });
            }
            static createMask({
              imgArray: e,
              width: t,
              height: i,
              imageIsFromDecodeStream: n,
              inverseDecode: r,
            }) {
              var a,
                s,
                o = ((t + 7) >> 3) * i,
                l = e.byteLength;
              if (n && (!r || o === l)) a = e;
              else if (!r) (a = new Uint8ClampedArray(l)).set(e);
              else {
                (a = new Uint8ClampedArray(o)).set(e);
                for (s = l; s < o; s++) a[s] = 255;
              }
              if (r) for (s = 0; s < l; s++) a[s] ^= 255;
              return { data: a, width: t, height: i };
            }
            get drawWidth() {
              return Math.max(
                this.width,
                (this.smask && this.smask.width) || 0,
                (this.mask && this.mask.width) || 0
              );
            }
            get drawHeight() {
              return Math.max(
                this.height,
                (this.smask && this.smask.height) || 0,
                (this.mask && this.mask.height) || 0
              );
            }
            decodeBuffer(e) {
              var t,
                i,
                n = this.bpc,
                r = this.numComps,
                a = this.decodeAddends,
                s = this.decodeCoefficients,
                o = (1 << n) - 1;
              if (1 !== n) {
                var l = 0;
                for (t = 0, i = this.width * this.height; t < i; t++)
                  for (var h = 0; h < r; h++) {
                    e[l] = c(e[l], a[h], s[h], o);
                    l++;
                  }
              } else for (t = 0, i = e.length; t < i; t++) e[t] = +!e[t];
            }
            getComponents(e) {
              var t = this.bpc;
              if (8 === t) return e;
              var i = this.width,
                n = this.height,
                r = this.numComps,
                a = i * n * r,
                s = 0;
              let o;
              if (t <= 8) o = new Uint8Array(a);
              else if (t <= 16) o = new Uint16Array(a);
              else o = new Uint32Array(a);
              var l,
                c,
                h = i * r,
                u = (1 << t) - 1,
                d = 0;
              if (1 === t)
                for (var f, p, g, m = 0; m < n; m++) {
                  p = d + (-8 & h);
                  g = d + h;
                  for (; d < p; ) {
                    c = e[s++];
                    o[d] = (c >> 7) & 1;
                    o[d + 1] = (c >> 6) & 1;
                    o[d + 2] = (c >> 5) & 1;
                    o[d + 3] = (c >> 4) & 1;
                    o[d + 4] = (c >> 3) & 1;
                    o[d + 5] = (c >> 2) & 1;
                    o[d + 6] = (c >> 1) & 1;
                    o[d + 7] = 1 & c;
                    d += 8;
                  }
                  if (d < g) {
                    c = e[s++];
                    f = 128;
                    for (; d < g; ) {
                      o[d++] = +!!(c & f);
                      f >>= 1;
                    }
                  }
                }
              else {
                var v = 0;
                c = 0;
                for (d = 0, l = a; d < l; ++d) {
                  if (d % h == 0) {
                    c = 0;
                    v = 0;
                  }
                  for (; v < t; ) {
                    c = (c << 8) | e[s++];
                    v += 8;
                  }
                  var b = v - t;
                  let i = c >> b;
                  if (i < 0) i = 0;
                  else if (i > u) i = u;
                  o[d] = i;
                  c &= (1 << b) - 1;
                  v = b;
                }
              }
              return o;
            }
            fillOpacity(e, t, i, r, a) {
              var s,
                o,
                l,
                c,
                d,
                f,
                p = this.smask,
                g = this.mask;
              if (p) {
                o = p.width;
                l = p.height;
                s = new Uint8ClampedArray(o * l);
                p.fillGrayBuffer(s);
                if (o !== t || l !== i) s = h(s, p.bpc, o, l, t, i);
              } else if (g)
                if (g instanceof u) {
                  o = g.width;
                  l = g.height;
                  s = new Uint8ClampedArray(o * l);
                  g.numComps = 1;
                  g.fillGrayBuffer(s);
                  for (c = 0, d = o * l; c < d; ++c) s[c] = 255 - s[c];
                  if (o !== t || l !== i) s = h(s, g.bpc, o, l, t, i);
                } else if (Array.isArray(g)) {
                  s = new Uint8ClampedArray(t * i);
                  var m = this.numComps;
                  for (c = 0, d = t * i; c < d; ++c) {
                    var v = 0,
                      b = c * m;
                    for (f = 0; f < m; ++f) {
                      var y = a[b + f],
                        w = 2 * f;
                      if (y < g[w] || y > g[w + 1]) {
                        v = 255;
                        break;
                      }
                    }
                    s[c] = v;
                  }
                } else throw new n.FormatError("Unknown mask format.");
              if (s)
                for (c = 0, f = 3, d = t * r; c < d; ++c, f += 4) e[f] = s[c];
              else for (c = 0, f = 3, d = t * r; c < d; ++c, f += 4) e[f] = 255;
            }
            undoPreblend(e, t, i) {
              var n = this.smask && this.smask.matte;
              if (n)
                for (
                  var r = this.colorSpace.getRgb(n, 0),
                    a = r[0],
                    s = r[1],
                    o = r[2],
                    l = t * i * 4,
                    c = 0;
                  c < l;
                  c += 4
                ) {
                  var h = e[c + 3];
                  if (0 !== h) {
                    var u = 255 / h;
                    e[c] = (e[c] - a) * u + a;
                    e[c + 1] = (e[c + 1] - s) * u + s;
                    e[c + 2] = (e[c + 2] - o) * u + o;
                  } else {
                    e[c] = 255;
                    e[c + 1] = 255;
                    e[c + 2] = 255;
                  }
                }
            }
            createImageData(e = !1) {
              var t,
                i = this.drawWidth,
                r = this.drawHeight,
                a = { width: i, height: r, kind: 0, data: null },
                l = this.numComps,
                c = this.width,
                h = this.height,
                u = this.bpc,
                d = (c * l * u + 7) >> 3;
              if (!e) {
                var f;
                if ("DeviceGray" === this.colorSpace.name && 1 === u)
                  f = n.ImageKind.GRAYSCALE_1BPP;
                else if (
                  "DeviceRGB" === this.colorSpace.name &&
                  8 === u &&
                  !this.needsDecode
                )
                  f = n.ImageKind.RGB_24BPP;
                if (f && !this.smask && !this.mask && i === c && r === h) {
                  a.kind = f;
                  t = this.getImageBytes(h * d);
                  if (this.image instanceof s.DecodeStream) a.data = t;
                  else {
                    var p = new Uint8ClampedArray(t.length);
                    p.set(t);
                    a.data = p;
                  }
                  if (this.needsDecode) {
                    (0, n.assert)(
                      f === n.ImageKind.GRAYSCALE_1BPP,
                      "PDFImage.createImageData: The image must be grayscale."
                    );
                    for (var g = a.data, m = 0, v = g.length; m < v; m++)
                      g[m] ^= 255;
                  }
                  return a;
                }
                if (
                  this.image instanceof o.JpegStream &&
                  !this.smask &&
                  !this.mask
                ) {
                  let e = h * d;
                  switch (this.colorSpace.name) {
                    case "DeviceGray":
                      e *= 3;
                    case "DeviceRGB":
                    case "DeviceCMYK":
                      a.kind = n.ImageKind.RGB_24BPP;
                      a.data = this.getImageBytes(e, i, r, !0);
                      return a;
                  }
                }
              }
              var b,
                y,
                w =
                  0 | ((((t = this.getImageBytes(h * d)).length / d) * r) / h),
                x = this.getComponents(t);
              if (!e && !this.smask && !this.mask) {
                a.kind = n.ImageKind.RGB_24BPP;
                a.data = new Uint8ClampedArray(i * r * 3);
                b = 0;
                y = !1;
              } else {
                a.kind = n.ImageKind.RGBA_32BPP;
                a.data = new Uint8ClampedArray(i * r * 4);
                b = 1;
                y = !0;
                this.fillOpacity(a.data, i, r, w, x);
              }
              if (this.needsDecode) this.decodeBuffer(x);
              this.colorSpace.fillRgb(a.data, c, h, i, r, w, u, x, b);
              if (y) this.undoPreblend(a.data, i, w);
              return a;
            }
            fillGrayBuffer(e) {
              var t = this.numComps;
              if (1 !== t)
                throw new n.FormatError(
                  `Reading gray scale from a color image: ${t}`
                );
              var i,
                r,
                a = this.width,
                s = this.height,
                o = this.bpc,
                l = (a * t * o + 7) >> 3,
                c = this.getImageBytes(s * l),
                h = this.getComponents(c);
              if (1 !== o) {
                if (this.needsDecode) this.decodeBuffer(h);
                r = a * s;
                var u = 255 / ((1 << o) - 1);
                for (i = 0; i < r; ++i) e[i] = u * h[i];
              } else {
                r = a * s;
                if (this.needsDecode)
                  for (i = 0; i < r; ++i) e[i] = (h[i] - 1) & 255;
                else for (i = 0; i < r; ++i) e[i] = 255 & -h[i];
              }
            }
            getImageBytes(e, t, i, n = !1) {
              this.image.reset();
              this.image.drawWidth = t || this.width;
              this.image.drawHeight = i || this.height;
              this.image.forceRGB = !!n;
              return this.image.getBytes(e, !0);
            }
          }
          t.PDFImage = u;
        },
        (e, t, i) => {
          Object.defineProperty(t, "__esModule", { value: !0 });
          t.incrementalUpdate = function ({
            originalData: e,
            xrefInfo: t,
            newRefs: i,
            xref: c = null,
            datasetsRef: d = null,
          }) {
            !(function (e, t, i) {
              if (null === e || null === i) return;
              const r = i.fetchIfRef(e),
                o = (0, n.bytesToString)(r.getBytes()),
                l = new s.SimpleXMLParser({
                  hasAttributes: !0,
                }).parseFromString(o);
              for (const { xfa: e } of t) {
                if (!e) continue;
                const { path: t, value: i } = e;
                if (!t) continue;
                const r = l.documentElement.searchNode(
                  (0, a.parseXFAPath)(t),
                  0
                );
                if (r) r.childNodes = [new s.SimpleDOMNode("#text", i)];
                else (0, n.warn)(`Node not found for path: ${t}`);
              }
              const c = [];
              l.documentElement.dump(c);
              let h = c.join("");
              const u = i.encrypt;
              if (u) h = u.createCipherTransform(e.num, e.gen).encryptString(h);
              const d =
                `${e.num} ${e.gen} obj\n<< /Type /EmbeddedFile /Length ${h.length}>>\nstream\n` +
                h +
                "\nendstream\nendobj\n";
              t.push({ ref: e, data: d });
            })(d, i, c);
            const f = new r.Dict(null),
              p = t.newRef;
            let g, m;
            const v = e[e.length - 1];
            if (10 === v || 13 === v) {
              g = [];
              m = e.length;
            } else {
              g = ["\n"];
              m = e.length + 1;
            }
            f.set("Size", p.num + 1);
            f.set("Prev", t.startXRef);
            f.set("Type", r.Name.get("XRef"));
            if (null !== t.rootRef) f.set("Root", t.rootRef);
            if (null !== t.infoRef) f.set("Info", t.infoRef);
            if (null !== t.encrypt) f.set("Encrypt", t.encrypt);
            i.push({ ref: p, data: "" });
            i = i.sort((e, t) => e.ref.num - t.ref.num);
            const b = [[0, 1, 65535]],
              y = [0, 1];
            let w = 0;
            for (const { ref: e, data: t } of i) {
              w = Math.max(w, m);
              b.push([1, m, Math.min(e.gen, 65535)]);
              m += t.length;
              y.push(e.num);
              y.push(1);
              g.push(t);
            }
            f.set("Index", y);
            if (0 !== t.fileIds.length) {
              const e = (function (e, t) {
                const i = Math.floor(Date.now() / 1e3),
                  r = t.filename || "",
                  a = [i.toString(), r, e.toString()];
                let s = a.reduce((e, t) => e + t.length, 0);
                for (const e of Object.values(t.info)) {
                  a.push(e);
                  s += e.length;
                }
                const l = new Uint8Array(s);
                let c = 0;
                for (const e of a) {
                  u(e, c, l);
                  c += e.length;
                }
                return (0, n.bytesToString)((0, o.calculateMD5)(l));
              })(m, t);
              f.set("ID", [t.fileIds[0], e]);
            }
            const x = [1, Math.ceil(Math.log2(w) / 8), 2],
              k = (x[0] + x[1] + x[2]) * b.length;
            f.set("W", x);
            f.set("Length", k);
            g.push(`${p.num} ${p.gen} obj\n`);
            l(f, g, null);
            g.push(" stream\n");
            const C = g.reduce((e, t) => e + t.length, 0),
              S = `\nendstream\nendobj\nstartxref\n${m}\n%%EOF\n`,
              _ = new Uint8Array(e.length + C + k + S.length);
            _.set(e);
            let A = e.length;
            for (const e of g) {
              u(e, A, _);
              A += e.length;
            }
            for (const [e, t, i] of b) {
              A = h(e, x[0], A, _);
              A = h(t, x[1], A, _);
              A = h(i, x[2], A, _);
            }
            u(S, A, _);
            return _;
          };
          t.writeDict = l;
          var n = i(2),
            r = i(5),
            a = i(8),
            s = i(47),
            o = i(22);
          function l(e, t, i) {
            t.push("<<");
            for (const n of e.getKeys()) {
              t.push(` /${(0, a.escapePDFName)(n)} `);
              c(e.getRaw(n), t, i);
            }
            t.push(">>");
          }
          function c(e, t, i) {
            if ((0, r.isName)(e)) t.push(`/${(0, a.escapePDFName)(e.name)}`);
            else if ((0, r.isRef)(e)) t.push(`${e.num} ${e.gen} R`);
            else if (Array.isArray(e))
              !(function (e, t, i) {
                t.push("[");
                let n = !0;
                for (const r of e) {
                  if (!n) t.push(" ");
                  else n = !1;
                  c(r, t, i);
                }
                t.push("]");
              })(e, t, i);
            else if ("string" == typeof e) {
              if (null !== i) e = i.encryptString(e);
              t.push(`(${(0, n.escapeString)(e)})`);
            } else if ("number" == typeof e)
              t.push(
                (function (e) {
                  if (Number.isInteger(e)) return e.toString();
                  const t = Math.round(100 * e);
                  if (t % 100 == 0) return (t / 100).toString();
                  if (t % 10 == 0) return e.toFixed(1);
                  else return e.toFixed(2);
                })(e)
              );
            else if ((0, r.isDict)(e)) l(e, t, i);
            else if ((0, r.isStream)(e))
              !(function (e, t, i) {
                l(e.dict, t, i);
                t.push(" stream\n");
                let r = (0, n.bytesToString)(e.getBytes());
                if (null !== i) r = i.encryptString(r);
                t.push(r);
                t.push("\nendstream\n");
              })(e, t, i);
          }
          function h(e, t, i, n) {
            for (let r = t + i - 1; r > i - 1; r--) {
              n[r] = 255 & e;
              e >>= 8;
            }
            return i + t;
          }
          function u(e, t, i) {
            for (let n = 0, r = e.length; n < r; n++)
              i[t + n] = 255 & e.charCodeAt(n);
          }
        },
        (e, t, i) => {
          Object.defineProperty(t, "__esModule", { value: !0 });
          t.SimpleXMLParser = t.SimpleDOMNode = void 0;
          var n = i(2);
          function r(e, t) {
            const i = e[t];
            return " " === i || "\n" === i || "\r" === i || "\t" === i;
          }
          class a {
            constructor(e, t) {
              this.nodeName = e;
              this.nodeValue = t;
              Object.defineProperty(this, "parentNode", {
                value: null,
                writable: !0,
              });
            }
            get firstChild() {
              return this.childNodes && this.childNodes[0];
            }
            get nextSibling() {
              const e = this.parentNode.childNodes;
              if (!e) return;
              const t = e.indexOf(this);
              if (-1 !== t) return e[t + 1];
              else return;
            }
            get textContent() {
              if (!this.childNodes) return this.nodeValue || "";
              else
                return this.childNodes
                  .map(function (e) {
                    return e.textContent;
                  })
                  .join("");
            }
            hasChildNodes() {
              return this.childNodes && this.childNodes.length > 0;
            }
            searchNode(e, t) {
              if (t >= e.length) return this;
              const i = e[t],
                n = [];
              let r = this;
              for (;;) {
                if (i.name === r.nodeName)
                  if (0 === i.pos) {
                    const i = r.searchNode(e, t + 1);
                    if (null !== i) return i;
                  } else if (0 === n.length) return null;
                  else {
                    const [a] = n.pop();
                    let s = 0;
                    for (const n of a.childNodes)
                      if (i.name === n.nodeName) {
                        if (s === i.pos) return n.searchNode(e, t + 1);
                        s++;
                      }
                    return r.searchNode(e, t + 1);
                  }
                if (r.childNodes && 0 !== r.childNodes.length) {
                  n.push([r, 0]);
                  r = r.childNodes[0];
                } else if (0 === n.length) return null;
                else {
                  for (; 0 !== n.length; ) {
                    const [e, t] = n.pop(),
                      i = t + 1;
                    if (i < e.childNodes.length) {
                      n.push([e, i]);
                      r = e.childNodes[i];
                      break;
                    }
                  }
                  if (0 === n.length) return null;
                }
              }
            }
            dump(e) {
              if ("#text" !== this.nodeName) {
                e.push(`<${this.nodeName}`);
                if (this.attributes)
                  for (const t of this.attributes)
                    e.push(` ${t.name}="${(0, n.encodeToXmlString)(t.value)}"`);
                if (this.hasChildNodes()) {
                  e.push(">");
                  for (const t of this.childNodes) t.dump(e);
                  e.push(`</${this.nodeName}>`);
                } else if (this.nodeValue)
                  e.push(
                    `>${(0, n.encodeToXmlString)(this.nodeValue)}</${
                      this.nodeName
                    }>`
                  );
                else e.push("/>");
              } else e.push((0, n.encodeToXmlString)(this.nodeValue));
            }
          }
          t.SimpleDOMNode = a;
          t.SimpleXMLParser = class extends (
            class {
              _resolveEntities(e) {
                return e.replace(/&([^;]+);/g, (e, t) => {
                  if ("#x" === t.substring(0, 2))
                    return String.fromCodePoint(parseInt(t.substring(2), 16));
                  else if ("#" === t.substring(0, 1))
                    return String.fromCodePoint(parseInt(t.substring(1), 10));
                  switch (t) {
                    case "lt":
                      return "<";
                    case "gt":
                      return ">";
                    case "amp":
                      return "&";
                    case "quot":
                      return '"';
                  }
                  return this.onResolveEntity(t);
                });
              }
              _parseContent(e, t) {
                const i = [];
                let n = t;
                function a() {
                  for (; n < e.length && r(e, n); ) ++n;
                }
                for (
                  ;
                  n < e.length && !r(e, n) && ">" !== e[n] && "/" !== e[n];

                )
                  ++n;
                const s = e.substring(t, n);
                a();
                for (
                  ;
                  n < e.length && ">" !== e[n] && "/" !== e[n] && "?" !== e[n];

                ) {
                  a();
                  let t = "",
                    s = "";
                  for (; n < e.length && !r(e, n) && "=" !== e[n]; ) {
                    t += e[n];
                    ++n;
                  }
                  a();
                  if ("=" !== e[n]) return null;
                  ++n;
                  a();
                  const o = e[n];
                  if ('"' !== o && "'" !== o) return null;
                  const l = e.indexOf(o, ++n);
                  if (l < 0) return null;
                  s = e.substring(n, l);
                  i.push({ name: t, value: this._resolveEntities(s) });
                  n = l + 1;
                  a();
                }
                return { name: s, attributes: i, parsed: n - t };
              }
              _parseProcessingInstruction(e, t) {
                let i = t;
                for (
                  ;
                  i < e.length && !r(e, i) && ">" !== e[i] && "/" !== e[i];

                )
                  ++i;
                const n = e.substring(t, i);
                !(function () {
                  for (; i < e.length && r(e, i); ) ++i;
                })();
                const a = i;
                for (; i < e.length && ("?" !== e[i] || ">" !== e[i + 1]); )
                  ++i;
                return { name: n, value: e.substring(a, i), parsed: i - t };
              }
              parseXml(e) {
                let t = 0;
                for (; t < e.length; ) {
                  let i = t;
                  if ("<" === e[t]) {
                    ++i;
                    let t;
                    switch (e[i]) {
                      case "/":
                        ++i;
                        t = e.indexOf(">", i);
                        if (t < 0) {
                          this.onError(-9);
                          return;
                        }
                        this.onEndElement(e.substring(i, t));
                        i = t + 1;
                        break;
                      case "?":
                        ++i;
                        const n = this._parseProcessingInstruction(e, i);
                        if (
                          "?>" !== e.substring(i + n.parsed, i + n.parsed + 2)
                        ) {
                          this.onError(-3);
                          return;
                        }
                        this.onPi(n.name, n.value);
                        i += n.parsed + 2;
                        break;
                      case "!":
                        if ("--" === e.substring(i + 1, i + 3)) {
                          t = e.indexOf("--\x3e", i + 3);
                          if (t < 0) {
                            this.onError(-5);
                            return;
                          }
                          this.onComment(e.substring(i + 3, t));
                          i = t + 3;
                        } else if ("[CDATA[" === e.substring(i + 1, i + 8)) {
                          t = e.indexOf("]]>", i + 8);
                          if (t < 0) {
                            this.onError(-2);
                            return;
                          }
                          this.onCdata(e.substring(i + 8, t));
                          i = t + 3;
                        } else if ("DOCTYPE" === e.substring(i + 1, i + 8)) {
                          const n = e.indexOf("[", i + 8);
                          let r = !1;
                          t = e.indexOf(">", i + 8);
                          if (t < 0) {
                            this.onError(-4);
                            return;
                          }
                          if (n > 0 && t > n) {
                            t = e.indexOf("]>", i + 8);
                            if (t < 0) {
                              this.onError(-4);
                              return;
                            }
                            r = !0;
                          }
                          const a = e.substring(i + 8, t + (r ? 1 : 0));
                          this.onDoctype(a);
                          i = t + (r ? 2 : 1);
                        } else {
                          this.onError(-6);
                          return;
                        }
                        break;
                      default:
                        const r = this._parseContent(e, i);
                        if (null === r) {
                          this.onError(-6);
                          return;
                        }
                        let a = !1;
                        if (
                          "/>" === e.substring(i + r.parsed, i + r.parsed + 2)
                        )
                          a = !0;
                        else if (
                          ">" !== e.substring(i + r.parsed, i + r.parsed + 1)
                        ) {
                          this.onError(-9);
                          return;
                        }
                        this.onBeginElement(r.name, r.attributes, a);
                        i += r.parsed + (a ? 2 : 1);
                    }
                  } else {
                    for (; i < e.length && "<" !== e[i]; ) i++;
                    const n = e.substring(t, i);
                    this.onText(this._resolveEntities(n));
                  }
                  t = i;
                }
              }
              onResolveEntity(e) {
                return `&${e};`;
              }
              onPi(e, t) {}
              onComment(e) {}
              onCdata(e) {}
              onDoctype(e) {}
              onText(e) {}
              onBeginElement(e, t, i) {}
              onEndElement(e) {}
              onError(e) {}
            }
          ) {
            constructor({ hasAttributes: e = !1, lowerCaseName: t = !1 }) {
              super();
              this._currentFragment = null;
              this._stack = null;
              this._errorCode = 0;
              this._hasAttributes = e;
              this._lowerCaseName = t;
            }
            parseFromString(e) {
              this._currentFragment = [];
              this._stack = [];
              this._errorCode = 0;
              this.parseXml(e);
              if (0 !== this._errorCode) return;
              const [t] = this._currentFragment;
              if (t) return { documentElement: t };
              else return;
            }
            onResolveEntity(e) {
              switch (e) {
                case "apos":
                  return "'";
              }
              return super.onResolveEntity(e);
            }
            onText(e) {
              if (
                (function (e) {
                  for (let t = 0, i = e.length; t < i; t++)
                    if (!r(e, t)) return !1;
                  return !0;
                })(e)
              )
                return;
              const t = new a("#text", e);
              this._currentFragment.push(t);
            }
            onCdata(e) {
              const t = new a("#text", e);
              this._currentFragment.push(t);
            }
            onBeginElement(e, t, i) {
              if (this._lowerCaseName) e = e.toLowerCase();
              const n = new a(e);
              n.childNodes = [];
              if (this._hasAttributes) n.attributes = t;
              this._currentFragment.push(n);
              if (!i) {
                this._stack.push(this._currentFragment);
                this._currentFragment = n.childNodes;
              }
            }
            onEndElement(e) {
              this._currentFragment = this._stack.pop() || [];
              const t = this._currentFragment[this._currentFragment.length - 1];
              if (t)
                for (let e = 0, i = t.childNodes.length; e < i; e++)
                  t.childNodes[e].parentNode = t;
            }
            onError(e) {
              this._errorCode = e;
            }
          };
        },
        (e, t, i) => {
          Object.defineProperty(t, "__esModule", { value: !0 });
          t.MessageHandler = void 0;
          var n = i(2);
          function r(e) {
            if ("object" != typeof e || null === e) return e;
            switch (e.name) {
              case "AbortException":
                return new n.AbortException(e.message);
              case "MissingPDFException":
                return new n.MissingPDFException(e.message);
              case "UnexpectedResponseException":
                return new n.UnexpectedResponseException(e.message, e.status);
              case "UnknownErrorException":
                return new n.UnknownErrorException(e.message, e.details);
              default:
                return new n.UnknownErrorException(e.message, e.toString());
            }
          }
          t.MessageHandler = class {
            constructor(e, t, i) {
              this.sourceName = e;
              this.targetName = t;
              this.comObj = i;
              this.callbackId = 1;
              this.streamId = 1;
              this.postMessageTransfers = !0;
              this.streamSinks = Object.create(null);
              this.streamControllers = Object.create(null);
              this.callbackCapabilities = Object.create(null);
              this.actionHandler = Object.create(null);
              this._onComObjOnMessage = (e) => {
                const t = e.data;
                if (t.targetName !== this.sourceName) return;
                if (t.stream) {
                  this._processStreamMessage(t);
                  return;
                }
                if (t.callback) {
                  const e = t.callbackId,
                    i = this.callbackCapabilities[e];
                  if (!i) throw new Error(`Cannot resolve callback ${e}`);
                  delete this.callbackCapabilities[e];
                  if (1 === t.callback) i.resolve(t.data);
                  else if (2 === t.callback) i.reject(r(t.reason));
                  else throw new Error("Unexpected callback case");
                  return;
                }
                const n = this.actionHandler[t.action];
                if (!n)
                  throw new Error(`Unknown action from worker: ${t.action}`);
                if (!t.callbackId)
                  if (!t.streamId) n(t.data);
                  else this._createStreamSink(t);
                else {
                  const e = this.sourceName,
                    a = t.sourceName;
                  new Promise(function (e) {
                    e(n(t.data));
                  }).then(
                    function (n) {
                      i.postMessage({
                        sourceName: e,
                        targetName: a,
                        callback: 1,
                        callbackId: t.callbackId,
                        data: n,
                      });
                    },
                    function (n) {
                      i.postMessage({
                        sourceName: e,
                        targetName: a,
                        callback: 2,
                        callbackId: t.callbackId,
                        reason: r(n),
                      });
                    }
                  );
                }
              };
              i.addEventListener("message", this._onComObjOnMessage);
            }
            on(e, t) {
              const i = this.actionHandler;
              if (i[e])
                throw new Error(`There is already an actionName called "${e}"`);
              i[e] = t;
            }
            send(e, t, i) {
              this._postMessage(
                {
                  sourceName: this.sourceName,
                  targetName: this.targetName,
                  action: e,
                  data: t,
                },
                i
              );
            }
            sendWithPromise(e, t, i) {
              const r = this.callbackId++,
                a = (0, n.createPromiseCapability)();
              this.callbackCapabilities[r] = a;
              try {
                this._postMessage(
                  {
                    sourceName: this.sourceName,
                    targetName: this.targetName,
                    action: e,
                    callbackId: r,
                    data: t,
                  },
                  i
                );
              } catch (e) {
                a.reject(e);
              }
              return a.promise;
            }
            sendWithStream(e, t, i, a) {
              const s = this.streamId++,
                o = this.sourceName,
                l = this.targetName,
                c = this.comObj;
              return new ReadableStream(
                {
                  start: (i) => {
                    const r = (0, n.createPromiseCapability)();
                    this.streamControllers[s] = {
                      controller: i,
                      startCall: r,
                      pullCall: null,
                      cancelCall: null,
                      isClosed: !1,
                    };
                    this._postMessage(
                      {
                        sourceName: o,
                        targetName: l,
                        action: e,
                        streamId: s,
                        data: t,
                        desiredSize: i.desiredSize,
                      },
                      a
                    );
                    return r.promise;
                  },
                  pull: (e) => {
                    const t = (0, n.createPromiseCapability)();
                    this.streamControllers[s].pullCall = t;
                    c.postMessage({
                      sourceName: o,
                      targetName: l,
                      stream: 6,
                      streamId: s,
                      desiredSize: e.desiredSize,
                    });
                    return t.promise;
                  },
                  cancel: (e) => {
                    (0, n.assert)(
                      e instanceof Error,
                      "cancel must have a valid reason"
                    );
                    const t = (0, n.createPromiseCapability)();
                    this.streamControllers[s].cancelCall = t;
                    this.streamControllers[s].isClosed = !0;
                    c.postMessage({
                      sourceName: o,
                      targetName: l,
                      stream: 1,
                      streamId: s,
                      reason: r(e),
                    });
                    return t.promise;
                  },
                },
                i
              );
            }
            _createStreamSink(e) {
              const t = this,
                i = this.actionHandler[e.action],
                a = e.streamId,
                s = this.sourceName,
                o = e.sourceName,
                l = this.comObj,
                c = {
                  enqueue(e, i = 1, r) {
                    if (this.isCancelled) return;
                    const l = this.desiredSize;
                    this.desiredSize -= i;
                    if (l > 0 && this.desiredSize <= 0) {
                      this.sinkCapability = (0, n.createPromiseCapability)();
                      this.ready = this.sinkCapability.promise;
                    }
                    t._postMessage(
                      {
                        sourceName: s,
                        targetName: o,
                        stream: 4,
                        streamId: a,
                        chunk: e,
                      },
                      r
                    );
                  },
                  close() {
                    if (!this.isCancelled) {
                      this.isCancelled = !0;
                      l.postMessage({
                        sourceName: s,
                        targetName: o,
                        stream: 3,
                        streamId: a,
                      });
                      delete t.streamSinks[a];
                    }
                  },
                  error(e) {
                    (0, n.assert)(
                      e instanceof Error,
                      "error must have a valid reason"
                    );
                    if (!this.isCancelled) {
                      this.isCancelled = !0;
                      l.postMessage({
                        sourceName: s,
                        targetName: o,
                        stream: 5,
                        streamId: a,
                        reason: r(e),
                      });
                    }
                  },
                  sinkCapability: (0, n.createPromiseCapability)(),
                  onPull: null,
                  onCancel: null,
                  isCancelled: !1,
                  desiredSize: e.desiredSize,
                  ready: null,
                };
              c.sinkCapability.resolve();
              c.ready = c.sinkCapability.promise;
              this.streamSinks[a] = c;
              new Promise(function (t) {
                t(i(e.data, c));
              }).then(
                function () {
                  l.postMessage({
                    sourceName: s,
                    targetName: o,
                    stream: 8,
                    streamId: a,
                    success: !0,
                  });
                },
                function (e) {
                  l.postMessage({
                    sourceName: s,
                    targetName: o,
                    stream: 8,
                    streamId: a,
                    reason: r(e),
                  });
                }
              );
            }
            _processStreamMessage(e) {
              const t = e.streamId,
                i = this.sourceName,
                a = e.sourceName,
                s = this.comObj;
              switch (e.stream) {
                case 8:
                  if (e.success) this.streamControllers[t].startCall.resolve();
                  else this.streamControllers[t].startCall.reject(r(e.reason));
                  break;
                case 7:
                  if (e.success) this.streamControllers[t].pullCall.resolve();
                  else this.streamControllers[t].pullCall.reject(r(e.reason));
                  break;
                case 6:
                  if (!this.streamSinks[t]) {
                    s.postMessage({
                      sourceName: i,
                      targetName: a,
                      stream: 7,
                      streamId: t,
                      success: !0,
                    });
                    break;
                  }
                  if (this.streamSinks[t].desiredSize <= 0 && e.desiredSize > 0)
                    this.streamSinks[t].sinkCapability.resolve();
                  this.streamSinks[t].desiredSize = e.desiredSize;
                  const { onPull: o } = this.streamSinks[e.streamId];
                  new Promise(function (e) {
                    e(o && o());
                  }).then(
                    function () {
                      s.postMessage({
                        sourceName: i,
                        targetName: a,
                        stream: 7,
                        streamId: t,
                        success: !0,
                      });
                    },
                    function (e) {
                      s.postMessage({
                        sourceName: i,
                        targetName: a,
                        stream: 7,
                        streamId: t,
                        reason: r(e),
                      });
                    }
                  );
                  break;
                case 4:
                  (0, n.assert)(
                    this.streamControllers[t],
                    "enqueue should have stream controller"
                  );
                  if (this.streamControllers[t].isClosed) break;
                  this.streamControllers[t].controller.enqueue(e.chunk);
                  break;
                case 3:
                  (0, n.assert)(
                    this.streamControllers[t],
                    "close should have stream controller"
                  );
                  if (this.streamControllers[t].isClosed) break;
                  this.streamControllers[t].isClosed = !0;
                  this.streamControllers[t].controller.close();
                  this._deleteStreamController(t);
                  break;
                case 5:
                  (0, n.assert)(
                    this.streamControllers[t],
                    "error should have stream controller"
                  );
                  this.streamControllers[t].controller.error(r(e.reason));
                  this._deleteStreamController(t);
                  break;
                case 2:
                  if (e.success) this.streamControllers[t].cancelCall.resolve();
                  else this.streamControllers[t].cancelCall.reject(r(e.reason));
                  this._deleteStreamController(t);
                  break;
                case 1:
                  if (!this.streamSinks[t]) break;
                  const { onCancel: l } = this.streamSinks[e.streamId];
                  new Promise(function (t) {
                    t(l && l(r(e.reason)));
                  }).then(
                    function () {
                      s.postMessage({
                        sourceName: i,
                        targetName: a,
                        stream: 2,
                        streamId: t,
                        success: !0,
                      });
                    },
                    function (e) {
                      s.postMessage({
                        sourceName: i,
                        targetName: a,
                        stream: 2,
                        streamId: t,
                        reason: r(e),
                      });
                    }
                  );
                  this.streamSinks[t].sinkCapability.reject(r(e.reason));
                  this.streamSinks[t].isCancelled = !0;
                  delete this.streamSinks[t];
                  break;
                default:
                  throw new Error("Unexpected stream case");
              }
            }
            async _deleteStreamController(e) {
              await Promise.allSettled(
                [
                  this.streamControllers[e].startCall,
                  this.streamControllers[e].pullCall,
                  this.streamControllers[e].cancelCall,
                ].map(function (e) {
                  return e && e.promise;
                })
              );
              delete this.streamControllers[e];
            }
            _postMessage(e, t) {
              if (t && this.postMessageTransfers) this.comObj.postMessage(e, t);
              else this.comObj.postMessage(e);
            }
            destroy() {
              this.comObj.removeEventListener(
                "message",
                this._onComObjOnMessage
              );
            }
          };
        },
        (e, t, i) => {
          Object.defineProperty(t, "__esModule", { value: !0 });
          t.PDFWorkerStream = void 0;
          var n = i(2);
          t.PDFWorkerStream = class {
            constructor(e) {
              this._msgHandler = e;
              this._contentLength = null;
              this._fullRequestReader = null;
              this._rangeRequestReaders = [];
            }
            getFullReader() {
              (0, n.assert)(
                !this._fullRequestReader,
                "PDFWorkerStream.getFullReader can only be called once."
              );
              this._fullRequestReader = new r(this._msgHandler);
              return this._fullRequestReader;
            }
            getRangeReader(e, t) {
              const i = new a(e, t, this._msgHandler);
              this._rangeRequestReaders.push(i);
              return i;
            }
            cancelAllRequests(e) {
              if (this._fullRequestReader) this._fullRequestReader.cancel(e);
              this._rangeRequestReaders.slice(0).forEach(function (t) {
                t.cancel(e);
              });
            }
          };
          class r {
            constructor(e) {
              this._msgHandler = e;
              this.onProgress = null;
              this._contentLength = null;
              this._isRangeSupported = !1;
              this._isStreamingSupported = !1;
              const t = this._msgHandler.sendWithStream("GetReader");
              this._reader = t.getReader();
              this._headersReady = this._msgHandler
                .sendWithPromise("ReaderHeadersReady")
                .then((e) => {
                  this._isStreamingSupported = e.isStreamingSupported;
                  this._isRangeSupported = e.isRangeSupported;
                  this._contentLength = e.contentLength;
                });
            }
            get headersReady() {
              return this._headersReady;
            }
            get contentLength() {
              return this._contentLength;
            }
            get isStreamingSupported() {
              return this._isStreamingSupported;
            }
            get isRangeSupported() {
              return this._isRangeSupported;
            }
            async read() {
              const { value: e, done: t } = await this._reader.read();
              if (t) return { value: void 0, done: !0 };
              else return { value: e.buffer, done: !1 };
            }
            cancel(e) {
              this._reader.cancel(e);
            }
          }
          class a {
            constructor(e, t, i) {
              this._msgHandler = i;
              this.onProgress = null;
              const n = this._msgHandler.sendWithStream("GetRangeReader", {
                begin: e,
                end: t,
              });
              this._reader = n.getReader();
            }
            get isStreamingSupported() {
              return !1;
            }
            async read() {
              const { value: e, done: t } = await this._reader.read();
              if (t) return { value: void 0, done: !0 };
              else return { value: e.buffer, done: !1 };
            }
            cancel(e) {
              this._reader.cancel(e);
            }
          }
        },
      ],
      t = {};
    function i(n) {
      if (t[n]) return t[n].exports;
      var r = (t[n] = { exports: {} });
      e[n](r, r.exports, i);
      return r.exports;
    }
    i.d = (e, t) => {
      for (var n in t)
        if (i.o(t, n) && !i.o(e, n))
          Object.defineProperty(e, n, { enumerable: !0, get: t[n] });
    };
    i.o = (e, t) => Object.prototype.hasOwnProperty.call(e, t);
    i.r = (e) => {
      if ("undefined" != typeof Symbol && Symbol.toStringTag)
        Object.defineProperty(e, Symbol.toStringTag, { value: "Module" });
      Object.defineProperty(e, "__esModule", { value: !0 });
    };
    return i(0);
  })();
});
!(function (e, t) {
  "object" == typeof exports && "undefined" != typeof module
    ? t(exports)
    : "function" == typeof define && define.amd
    ? define(["exports"], t)
    : t(((e = e || self).PDFLib = {}));
})(this, function (e) {
  "use strict";
  var t = function (e, i) {
    return (t =
      Object.setPrototypeOf ||
      ({ __proto__: [] } instanceof Array &&
        function (e, t) {
          e.__proto__ = t;
        }) ||
      function (e, t) {
        for (var i in t) if (t.hasOwnProperty(i)) e[i] = t[i];
      })(e, i);
  };
  function i(e, i) {
    t(e, i);
    function n() {
      this.constructor = e;
    }
    e.prototype =
      null === i ? Object.create(i) : ((n.prototype = i.prototype), new n());
  }
  var n = function () {
    return (n =
      Object.assign ||
      function (e) {
        for (var t, i = 1, n = arguments.length; i < n; i++) {
          t = arguments[i];
          for (var r in t)
            if (Object.prototype.hasOwnProperty.call(t, r)) e[r] = t[r];
        }
        return e;
      }).apply(this, arguments);
  };
  function r(e, t, i, n) {
    return new (i || (i = Promise))(function (r, a) {
      function s(e) {
        try {
          l(n.next(e));
        } catch (e) {
          a(e);
        }
      }
      function o(e) {
        try {
          l(n.throw(e));
        } catch (e) {
          a(e);
        }
      }
      function l(e) {
        e.done
          ? r(e.value)
          : ((t = e.value),
            t instanceof i
              ? t
              : new i(function (e) {
                  e(t);
                })).then(s, o);
        var t;
      }
      l((n = n.apply(e, t || [])).next());
    });
  }
  function a(e, t) {
    var i,
      n,
      r,
      a,
      s = {
        label: 0,
        sent: function () {
          if (1 & r[0]) throw r[1];
          return r[1];
        },
        trys: [],
        ops: [],
      };
    return (
      (a = { next: o(0), throw: o(1), return: o(2) }),
      "function" == typeof Symbol &&
        (a[Symbol.iterator] = function () {
          return this;
        }),
      a
    );
    function o(a) {
      return function (o) {
        return (function (a) {
          if (i) throw new TypeError("Generator is already executing.");
          for (; s; )
            try {
              if (
                ((i = 1),
                n &&
                  (r =
                    2 & a[0]
                      ? n.return
                      : a[0]
                      ? n.throw || ((r = n.return) && r.call(n), 0)
                      : n.next) &&
                  !(r = r.call(n, a[1])).done)
              )
                return r;
              if (((n = 0), r)) a = [2 & a[0], r.value];
              switch (a[0]) {
                case 0:
                case 1:
                  r = a;
                  break;
                case 4:
                  s.label++;
                  return { value: a[1], done: !1 };
                case 5:
                  s.label++;
                  n = a[1];
                  a = [0];
                  continue;
                case 7:
                  a = s.ops.pop();
                  s.trys.pop();
                  continue;
                default:
                  if (
                    !((r = s.trys), (r = r.length > 0 && r[r.length - 1])) &&
                    (6 === a[0] || 2 === a[0])
                  ) {
                    s = 0;
                    continue;
                  }
                  if (3 === a[0] && (!r || (a[1] > r[0] && a[1] < r[3]))) {
                    s.label = a[1];
                    break;
                  }
                  if (6 === a[0] && s.label < r[1]) {
                    s.label = r[1];
                    r = a;
                    break;
                  }
                  if (r && s.label < r[2]) {
                    s.label = r[2];
                    s.ops.push(a);
                    break;
                  }
                  if (r[2]) s.ops.pop();
                  s.trys.pop();
                  continue;
              }
              a = t.call(e, s);
            } catch (e) {
              a = [6, e];
              n = 0;
            } finally {
              i = r = 0;
            }
          if (5 & a[0]) throw a[1];
          return { value: a[0] ? a[1] : void 0, done: !0 };
        })([a, o]);
      };
    }
  }
  function s() {
    for (var e = 0, t = 0, i = arguments.length; t < i; t++)
      e += arguments[t].length;
    var n = Array(e),
      r = 0;
    for (t = 0; t < i; t++)
      for (var a = arguments[t], s = 0, o = a.length; s < o; s++, r++)
        n[r] = a[s];
    return n;
  }
  for (
    var o = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
      l = new Uint8Array(256),
      c = 0;
    c < o.length;
    c++
  )
    l[o.charCodeAt(c)] = c;
  var h,
    u = function (e) {
      for (var t = "", i = e.length, n = 0; n < i; n += 3) {
        t += o[e[n] >> 2];
        t += o[((3 & e[n]) << 4) | (e[n + 1] >> 4)];
        t += o[((15 & e[n + 1]) << 2) | (e[n + 2] >> 6)];
        t += o[63 & e[n + 2]];
      }
      if (i % 3 == 2) t = t.substring(0, t.length - 1) + "=";
      else if (i % 3 == 1) t = t.substring(0, t.length - 2) + "==";
      return t;
    },
    d = function (e) {
      var t,
        i,
        n,
        r,
        a,
        s = 0.75 * e.length,
        o = e.length,
        c = 0;
      if ("=" === e[e.length - 1]) {
        s--;
        if ("=" === e[e.length - 2]) s--;
      }
      var h = new Uint8Array(s);
      for (t = 0; t < o; t += 4) {
        i = l[e.charCodeAt(t)];
        n = l[e.charCodeAt(t + 1)];
        r = l[e.charCodeAt(t + 2)];
        a = l[e.charCodeAt(t + 3)];
        h[c++] = (i << 2) | (n >> 4);
        h[c++] = ((15 & n) << 4) | (r >> 2);
        h[c++] = ((3 & r) << 6) | (63 & a);
      }
      return h;
    },
    f = /^(data)?:?([\w\/\+]+)?;?(charset=[\w-]+|base64)?.*,/i,
    p = function (e) {
      var t = e.trim(),
        i = t.substring(0, 100).match(f);
      if (!i) return d(t);
      var n = i[0],
        r = t.substring(n.length);
      return d(r);
    },
    g = function (e) {
      return e.charCodeAt(0);
    },
    m = function (e) {
      return e.codePointAt(0);
    },
    v = function (e, t) {
      return x(e.toString(16), t, "0").toUpperCase();
    },
    b = function (e) {
      return v(e, 2);
    },
    y = function (e) {
      return String.fromCharCode(e);
    },
    w = function (e) {
      return y(parseInt(e, 16));
    },
    x = function (e, t, i) {
      for (var n = "", r = 0, a = t - e.length; r < a; r++) n += i;
      return n + e;
    },
    k = function (e, t, i) {
      for (var n = e.length, r = 0; r < n; r++) t[i++] = e.charCodeAt(r);
      return n;
    },
    C = function (e, t) {
      if (void 0 === t) t = 4;
      return e + "-" + Math.floor(Math.random() * Math.pow(10, t));
    },
    S = function (e) {
      return e.replace(/[.*+?^${}()|[\]\\]/g, "\\$&");
    },
    _ = function (e) {
      return e
        .replace(/\t|\u0085|\u2028|\u2029/g, "    ")
        .replace(/[\b\v]/g, "");
    },
    A = ["\\n", "\\f", "\\r", "\\u000B"],
    F = function (e) {
      return /^[\n\f\r\u000B]$/.test(e);
    },
    T = function (e) {
      return e.split(/[\n\f\r\u000B]/);
    },
    P = function (e) {
      return e.replace(/[\n\f\r\u000B]/g, " ");
    },
    E = function (e, t) {
      var i,
        n = e.charCodeAt(t),
        r = t + 1,
        a = 1;
      if (n >= 55296 && n <= 56319 && e.length > r)
        if ((i = e.charCodeAt(r)) >= 56320 && i <= 57343) a = 2;
      return [e.slice(t, t + a), a];
    },
    I = function (e) {
      for (var t = [], i = 0, n = e.length; i < n; ) {
        var r = E(e, i),
          a = r[0],
          s = r[1];
        t.push(a);
        i += s;
      }
      return t;
    },
    D = function (e, t, i, n) {
      for (
        var r = (function (e) {
            for (
              var t = A.join("|"), i = ["$"], n = 0, r = e.length;
              n < r;
              n++
            ) {
              var a = e[n];
              if (F(a))
                throw new TypeError("`wordBreak` must not include " + t);
              i.push("" === a ? "." : S(a));
            }
            var s = i.join("|");
            return new RegExp("(" + t + ")|((.*?)(" + s + "))", "gm");
          })(t),
          a = _(e).match(r),
          s = "",
          o = 0,
          l = [],
          c = function () {
            if ("" !== s) l.push(s);
            s = "";
            o = 0;
          },
          h = 0,
          u = a.length;
        h < u;
        h++
      ) {
        var d = a[h];
        if (F(d)) c();
        else {
          var f = n(d);
          if (o + f > i) c();
          s += d;
          o += f;
        }
      }
      c();
      return l;
    },
    O =
      /^D:(\d\d\d\d)(\d\d)?(\d\d)?(\d\d)?(\d\d)?(\d\d)?([+\-Z])?(\d\d)?'?(\d\d)?'?$/,
    R = function (e) {
      var t = e.match(O);
      if (t) {
        var i = t[1],
          n = t[2],
          r = void 0 === n ? "01" : n,
          a = t[3],
          s = void 0 === a ? "01" : a,
          o = t[4],
          l = void 0 === o ? "00" : o,
          c = t[5],
          h = void 0 === c ? "00" : c,
          u = t[6],
          d = void 0 === u ? "00" : u,
          f = t[7],
          p = void 0 === f ? "Z" : f,
          g = t[8],
          m = void 0 === g ? "00" : g,
          v = t[9];
        return new Date(
          i +
            "-" +
            r +
            "-" +
            s +
            "T" +
            l +
            ":" +
            h +
            ":" +
            d +
            ("Z" === p ? "Z" : "" + p + m + ":" + (void 0 === v ? "00" : v))
        );
      }
    },
    N = function (e, t) {
      for (var i, n, r = 0; r < e.length; ) {
        var a = e.substring(r).match(t);
        if (!a) return { match: n, pos: r };
        n = a;
        r += (null !== (i = a.index) && void 0 !== i ? i : 0) + a[0].length;
      }
      return { match: n, pos: r };
    },
    M = function (e) {
      return e[e.length - 1];
    },
    B = function (e) {
      if (e instanceof Uint8Array) return e;
      for (var t = e.length, i = new Uint8Array(t), n = 0; n < t; n++)
        i[n] = e.charCodeAt(n);
      return i;
    },
    L = function () {
      for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
      for (var i = e.length, n = [], r = 0; r < i; r++) {
        var a = e[r];
        n[r] = a instanceof Uint8Array ? a : B(a);
      }
      var s = 0;
      for (r = 0; r < i; r++) s += e[r].length;
      for (var o = new Uint8Array(s), l = 0, c = 0; c < i; c++)
        for (var h = n[c], u = 0, d = h.length; u < d; u++) o[l++] = h[u];
      return o;
    },
    U = function (e) {
      for (var t = 0, i = 0, n = e.length; i < n; i++) t += e[i].length;
      var r = new Uint8Array(t),
        a = 0;
      for (i = 0, n = e.length; i < n; i++) {
        var s = e[i];
        r.set(s, a);
        a += s.length;
      }
      return r;
    },
    z = function (e) {
      for (var t = "", i = 0, n = e.length; i < n; i++) t += y(e[i]);
      return t;
    },
    j = function (e, t) {
      return e.id - t.id;
    },
    q = function (e, t) {
      for (var i = [], n = 0, r = e.length; n < r; n++) {
        var a = e[n],
          s = e[n - 1];
        if (0 === n || t(a) !== t(s)) i.push(a);
      }
      return i;
    },
    H = function (e) {
      for (var t = e.length, i = 0, n = Math.floor(t / 2); i < n; i++) {
        var r = i,
          a = t - i - 1,
          s = e[i];
        e[r] = e[a];
        e[a] = s;
      }
      return e;
    },
    W = function (e) {
      for (var t = 0, i = 0, n = e.length; i < n; i++) t += e[i];
      return t;
    },
    G = function (e, t) {
      for (var i = new Array(t - e), n = 0, r = i.length; n < r; n++)
        i[n] = e + n;
      return i;
    },
    V = function (e, t) {
      for (var i = new Array(t.length), n = 0, r = t.length; n < r; n++)
        i[n] = e[t[n]];
      return i;
    },
    X = function (e) {
      return (
        e instanceof Uint8Array ||
        e instanceof ArrayBuffer ||
        "string" == typeof e
      );
    },
    K = function (e) {
      if ("string" == typeof e) return p(e);
      else if (e instanceof ArrayBuffer) return new Uint8Array(e);
      else if (e instanceof Uint8Array) return e;
      else
        throw new TypeError(
          "`input` must be one of `string | ArrayBuffer | Uint8Array`"
        );
    },
    Y = function () {
      return new Promise(function (e) {
        setTimeout(function () {
          return e();
        }, 0);
      });
    },
    Z = function (e, t) {
      if (void 0 === t) t = !0;
      var i = [];
      if (t) i.push(65279);
      for (var n = 0, r = e.length; n < r; ) {
        var a = e.codePointAt(n);
        if (a < 65536) {
          i.push(a);
          n += 1;
        } else if (a < 1114112) {
          i.push(Q(a), ee(a));
          n += 2;
        } else throw new Error("Invalid code point: 0x" + b(a));
      }
      return new Uint16Array(i);
    },
    J = function (e) {
      return e >= 0 && e <= 65535;
    },
    $ = function (e) {
      return e >= 65536 && e <= 1114111;
    },
    Q = function (e) {
      return Math.floor((e - 65536) / 1024) + 55296;
    },
    ee = function (e) {
      return ((e - 65536) % 1024) + 56320;
    };
  !(function (e) {
    e.BigEndian = "BigEndian";
    e.LittleEndian = "LittleEndian";
  })(h || (h = {}));
  var te = "�".codePointAt(0),
    ie = function (e, t) {
      if (void 0 === t) t = !0;
      if (e.length <= 1) return String.fromCodePoint(te);
      for (
        var i = t ? se(e) : h.BigEndian, n = t ? 2 : 0, r = [];
        e.length - n >= 2;

      ) {
        var a = ae(e[n++], e[n++], i);
        if (ne(a))
          if (e.length - n < 2) r.push(te);
          else {
            var s = ae(e[n++], e[n++], i);
            if (re(s)) r.push(a, s);
            else r.push(te);
          }
        else if (re(a)) {
          n += 2;
          r.push(te);
        } else r.push(a);
      }
      if (n < e.length) r.push(te);
      return String.fromCodePoint.apply(String, r);
    },
    ne = function (e) {
      return e >= 55296 && e <= 56319;
    },
    re = function (e) {
      return e >= 56320 && e <= 57343;
    },
    ae = function (e, t, i) {
      if (i === h.LittleEndian) return (t << 8) | e;
      if (i === h.BigEndian) return (e << 8) | t;
      throw new Error("Invalid byteOrder: " + i);
    },
    se = function (e) {
      return oe(e) ? h.BigEndian : le(e) ? h.LittleEndian : h.BigEndian;
    },
    oe = function (e) {
      return 254 === e[0] && 255 === e[1];
    },
    le = function (e) {
      return 255 === e[0] && 254 === e[1];
    },
    ce = function (e) {
      return oe(e) || le(e);
    },
    he = function (e) {
      var t = String(e);
      if (Math.abs(e) < 1) {
        if ((n = parseInt(e.toString().split("e-")[1]))) {
          var i = e < 0;
          if (i) e *= -1;
          e *= Math.pow(10, n - 1);
          t = "0." + new Array(n).join("0") + e.toString().substring(2);
          if (i) t = "-" + t;
        }
      } else {
        var n;
        if ((n = parseInt(e.toString().split("+")[1])) > 20) {
          n -= 20;
          t = (e /= Math.pow(10, n)).toString() + new Array(n + 1).join("0");
        }
      }
      return t;
    },
    ue = function (e) {
      return Math.ceil(e.toString(2).length / 8);
    },
    de = function (e) {
      for (var t = new Uint8Array(ue(e)), i = 1; i <= t.length; i++)
        t[i - 1] = e >> (8 * (t.length - i));
      return t;
    },
    fe = function (e) {
      throw new Error(e);
    };
  function pe(e, t, i) {
    return (
      e(
        (i = {
          path: t,
          exports: {},
          require: function (e, t) {
            return (function () {
              throw new Error(
                "Dynamic requires are not currently supported by @rollup/plugin-commonjs"
              );
            })(null == t && i.path);
          },
        }),
        i.exports
      ),
      i.exports
    );
  }
  var ge = pe(function (e, t) {
    var i =
      "undefined" != typeof Uint8Array &&
      "undefined" != typeof Uint16Array &&
      "undefined" != typeof Int32Array;
    function n(e, t) {
      return Object.prototype.hasOwnProperty.call(e, t);
    }
    t.assign = function (e) {
      for (var t = Array.prototype.slice.call(arguments, 1); t.length; ) {
        var i = t.shift();
        if (i) {
          if ("object" != typeof i)
            throw new TypeError(i + "must be non-object");
          for (var r in i) if (n(i, r)) e[r] = i[r];
        }
      }
      return e;
    };
    t.shrinkBuf = function (e, t) {
      if (e.length === t) return e;
      if (e.subarray) return e.subarray(0, t);
      e.length = t;
      return e;
    };
    var r = {
        arraySet: function (e, t, i, n, r) {
          if (!t.subarray || !e.subarray)
            for (var a = 0; a < n; a++) e[r + a] = t[i + a];
          else e.set(t.subarray(i, i + n), r);
        },
        flattenChunks: function (e) {
          var t, i, n, r, a, s;
          n = 0;
          for (t = 0, i = e.length; t < i; t++) n += e[t].length;
          s = new Uint8Array(n);
          r = 0;
          for (t = 0, i = e.length; t < i; t++) {
            a = e[t];
            s.set(a, r);
            r += a.length;
          }
          return s;
        },
      },
      a = {
        arraySet: function (e, t, i, n, r) {
          for (var a = 0; a < n; a++) e[r + a] = t[i + a];
        },
        flattenChunks: function (e) {
          return [].concat.apply([], e);
        },
      };
    t.setTyped = function (e) {
      if (e) {
        t.Buf8 = Uint8Array;
        t.Buf16 = Uint16Array;
        t.Buf32 = Int32Array;
        t.assign(t, r);
      } else {
        t.Buf8 = Array;
        t.Buf16 = Array;
        t.Buf32 = Array;
        t.assign(t, a);
      }
    };
    t.setTyped(i);
  });
  function me(e) {
    for (var t = e.length; --t >= 0; ) e[t] = 0;
  }
  var ve = [
      0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5,
      5, 5, 5, 0,
    ],
    be = [
      0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10,
      11, 11, 12, 12, 13, 13,
    ],
    ye = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7],
    we = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15],
    xe = new Array(576);
  me(xe);
  var ke = new Array(60);
  me(ke);
  var Ce = new Array(512);
  me(Ce);
  var Se = new Array(256);
  me(Se);
  var _e = new Array(29);
  me(_e);
  var Ae,
    Fe,
    Te,
    Pe = new Array(30);
  me(Pe);
  function Ee(e, t, i, n, r) {
    this.static_tree = e;
    this.extra_bits = t;
    this.extra_base = i;
    this.elems = n;
    this.max_length = r;
    this.has_stree = e && e.length;
  }
  function Ie(e, t) {
    this.dyn_tree = e;
    this.max_code = 0;
    this.stat_desc = t;
  }
  function De(e) {
    return e < 256 ? Ce[e] : Ce[256 + (e >>> 7)];
  }
  function Oe(e, t) {
    e.pending_buf[e.pending++] = 255 & t;
    e.pending_buf[e.pending++] = (t >>> 8) & 255;
  }
  function Re(e, t, i) {
    if (e.bi_valid > 16 - i) {
      e.bi_buf |= (t << e.bi_valid) & 65535;
      Oe(e, e.bi_buf);
      e.bi_buf = t >> (16 - e.bi_valid);
      e.bi_valid += i - 16;
    } else {
      e.bi_buf |= (t << e.bi_valid) & 65535;
      e.bi_valid += i;
    }
  }
  function Ne(e, t, i) {
    Re(e, i[2 * t], i[2 * t + 1]);
  }
  function Me(e, t) {
    var i = 0;
    do {
      i |= 1 & e;
      e >>>= 1;
      i <<= 1;
    } while (--t > 0);
    return i >>> 1;
  }
  function Be(e, t, i) {
    var n,
      r,
      a = new Array(16),
      s = 0;
    for (n = 1; n <= 15; n++) a[n] = s = (s + i[n - 1]) << 1;
    for (r = 0; r <= t; r++) {
      var o = e[2 * r + 1];
      if (0 !== o) e[2 * r] = Me(a[o]++, o);
    }
  }
  function Le(e) {
    var t;
    for (t = 0; t < 286; t++) e.dyn_ltree[2 * t] = 0;
    for (t = 0; t < 30; t++) e.dyn_dtree[2 * t] = 0;
    for (t = 0; t < 19; t++) e.bl_tree[2 * t] = 0;
    e.dyn_ltree[512] = 1;
    e.opt_len = e.static_len = 0;
    e.last_lit = e.matches = 0;
  }
  function Ue(e) {
    if (e.bi_valid > 8) Oe(e, e.bi_buf);
    else if (e.bi_valid > 0) e.pending_buf[e.pending++] = e.bi_buf;
    e.bi_buf = 0;
    e.bi_valid = 0;
  }
  function ze(e, t, i, n) {
    var r = 2 * t,
      a = 2 * i;
    return e[r] < e[a] || (e[r] === e[a] && n[t] <= n[i]);
  }
  function je(e, t, i) {
    for (var n = e.heap[i], r = i << 1; r <= e.heap_len; ) {
      if (r < e.heap_len && ze(t, e.heap[r + 1], e.heap[r], e.depth)) r++;
      if (ze(t, n, e.heap[r], e.depth)) break;
      e.heap[i] = e.heap[r];
      i = r;
      r <<= 1;
    }
    e.heap[i] = n;
  }
  function qe(e, t, i) {
    var n,
      r,
      a,
      s,
      o = 0;
    if (0 !== e.last_lit)
      do {
        n =
          (e.pending_buf[e.d_buf + 2 * o] << 8) |
          e.pending_buf[e.d_buf + 2 * o + 1];
        r = e.pending_buf[e.l_buf + o];
        o++;
        if (0 === n) Ne(e, r, t);
        else {
          Ne(e, (a = Se[r]) + 256 + 1, t);
          if (0 !== (s = ve[a])) Re(e, (r -= _e[a]), s);
          Ne(e, (a = De(--n)), i);
          if (0 !== (s = be[a])) Re(e, (n -= Pe[a]), s);
        }
      } while (o < e.last_lit);
    Ne(e, 256, t);
  }
  function He(e, t) {
    var i,
      n,
      r,
      a = t.dyn_tree,
      s = t.stat_desc.static_tree,
      o = t.stat_desc.has_stree,
      l = t.stat_desc.elems,
      c = -1;
    e.heap_len = 0;
    e.heap_max = 573;
    for (i = 0; i < l; i++)
      if (0 !== a[2 * i]) {
        e.heap[++e.heap_len] = c = i;
        e.depth[i] = 0;
      } else a[2 * i + 1] = 0;
    for (; e.heap_len < 2; ) {
      a[2 * (r = e.heap[++e.heap_len] = c < 2 ? ++c : 0)] = 1;
      e.depth[r] = 0;
      e.opt_len--;
      if (o) e.static_len -= s[2 * r + 1];
    }
    t.max_code = c;
    for (i = e.heap_len >> 1; i >= 1; i--) je(e, a, i);
    r = l;
    do {
      i = e.heap[1];
      e.heap[1] = e.heap[e.heap_len--];
      je(e, a, 1);
      n = e.heap[1];
      e.heap[--e.heap_max] = i;
      e.heap[--e.heap_max] = n;
      a[2 * r] = a[2 * i] + a[2 * n];
      e.depth[r] = (e.depth[i] >= e.depth[n] ? e.depth[i] : e.depth[n]) + 1;
      a[2 * i + 1] = a[2 * n + 1] = r;
      e.heap[1] = r++;
      je(e, a, 1);
    } while (e.heap_len >= 2);
    e.heap[--e.heap_max] = e.heap[1];
    !(function (e, t) {
      var i,
        n,
        r,
        a,
        s,
        o,
        l = t.dyn_tree,
        c = t.max_code,
        h = t.stat_desc.static_tree,
        u = t.stat_desc.has_stree,
        d = t.stat_desc.extra_bits,
        f = t.stat_desc.extra_base,
        p = t.stat_desc.max_length,
        g = 0;
      for (a = 0; a <= 15; a++) e.bl_count[a] = 0;
      l[2 * e.heap[e.heap_max] + 1] = 0;
      for (i = e.heap_max + 1; i < 573; i++) {
        if ((a = l[2 * l[2 * (n = e.heap[i]) + 1] + 1] + 1) > p) {
          a = p;
          g++;
        }
        l[2 * n + 1] = a;
        if (!(n > c)) {
          e.bl_count[a]++;
          s = 0;
          if (n >= f) s = d[n - f];
          o = l[2 * n];
          e.opt_len += o * (a + s);
          if (u) e.static_len += o * (h[2 * n + 1] + s);
        }
      }
      if (0 !== g) {
        do {
          a = p - 1;
          for (; 0 === e.bl_count[a]; ) a--;
          e.bl_count[a]--;
          e.bl_count[a + 1] += 2;
          e.bl_count[p]--;
          g -= 2;
        } while (g > 0);
        for (a = p; 0 !== a; a--) {
          n = e.bl_count[a];
          for (; 0 !== n; )
            if (!((r = e.heap[--i]) > c)) {
              if (l[2 * r + 1] !== a) {
                e.opt_len += (a - l[2 * r + 1]) * l[2 * r];
                l[2 * r + 1] = a;
              }
              n--;
            }
        }
      }
    })(e, t);
    Be(a, c, e.bl_count);
  }
  function We(e, t, i) {
    var n,
      r,
      a = -1,
      s = t[1],
      o = 0,
      l = 7,
      c = 4;
    if (0 === s) {
      l = 138;
      c = 3;
    }
    t[2 * (i + 1) + 1] = 65535;
    for (n = 0; n <= i; n++) {
      r = s;
      s = t[2 * (n + 1) + 1];
      if (!(++o < l && r === s)) {
        if (o < c) e.bl_tree[2 * r] += o;
        else if (0 !== r) {
          if (r !== a) e.bl_tree[2 * r]++;
          e.bl_tree[32]++;
        } else if (o <= 10) e.bl_tree[34]++;
        else e.bl_tree[36]++;
        o = 0;
        a = r;
        if (0 === s) {
          l = 138;
          c = 3;
        } else if (r === s) {
          l = 6;
          c = 3;
        } else {
          l = 7;
          c = 4;
        }
      }
    }
  }
  function Ge(e, t, i) {
    var n,
      r,
      a = -1,
      s = t[1],
      o = 0,
      l = 7,
      c = 4;
    if (0 === s) {
      l = 138;
      c = 3;
    }
    for (n = 0; n <= i; n++) {
      r = s;
      s = t[2 * (n + 1) + 1];
      if (!(++o < l && r === s)) {
        if (o < c)
          do {
            Ne(e, r, e.bl_tree);
          } while (0 != --o);
        else if (0 !== r) {
          if (r !== a) {
            Ne(e, r, e.bl_tree);
            o--;
          }
          Ne(e, 16, e.bl_tree);
          Re(e, o - 3, 2);
        } else if (o <= 10) {
          Ne(e, 17, e.bl_tree);
          Re(e, o - 3, 3);
        } else {
          Ne(e, 18, e.bl_tree);
          Re(e, o - 11, 7);
        }
        o = 0;
        a = r;
        if (0 === s) {
          l = 138;
          c = 3;
        } else if (r === s) {
          l = 6;
          c = 3;
        } else {
          l = 7;
          c = 4;
        }
      }
    }
  }
  var Ve = !1;
  function Xe(e, t, i, n) {
    Re(e, 0 + (n ? 1 : 0), 3);
    !(function (e, t, i, n) {
      Ue(e);
      if (1) {
        Oe(e, i);
        Oe(e, ~i);
      }
      ge.arraySet(e.pending_buf, e.window, t, i, e.pending);
      e.pending += i;
    })(e, t, i);
  }
  var Ke,
    Ye = {
      _tr_init: function (e) {
        if (!Ve) {
          !(function () {
            var e,
              t,
              i,
              n,
              r,
              a = new Array(16);
            i = 0;
            for (n = 0; n < 28; n++) {
              _e[n] = i;
              for (e = 0; e < 1 << ve[n]; e++) Se[i++] = n;
            }
            Se[i - 1] = n;
            r = 0;
            for (n = 0; n < 16; n++) {
              Pe[n] = r;
              for (e = 0; e < 1 << be[n]; e++) Ce[r++] = n;
            }
            r >>= 7;
            for (; n < 30; n++) {
              Pe[n] = r << 7;
              for (e = 0; e < 1 << (be[n] - 7); e++) Ce[256 + r++] = n;
            }
            for (t = 0; t <= 15; t++) a[t] = 0;
            e = 0;
            for (; e <= 143; ) {
              xe[2 * e + 1] = 8;
              e++;
              a[8]++;
            }
            for (; e <= 255; ) {
              xe[2 * e + 1] = 9;
              e++;
              a[9]++;
            }
            for (; e <= 279; ) {
              xe[2 * e + 1] = 7;
              e++;
              a[7]++;
            }
            for (; e <= 287; ) {
              xe[2 * e + 1] = 8;
              e++;
              a[8]++;
            }
            Be(xe, 287, a);
            for (e = 0; e < 30; e++) {
              ke[2 * e + 1] = 5;
              ke[2 * e] = Me(e, 5);
            }
            Ae = new Ee(xe, ve, 257, 286, 15);
            Fe = new Ee(ke, be, 0, 30, 15);
            Te = new Ee(new Array(0), ye, 0, 19, 7);
          })();
          Ve = !0;
        }
        e.l_desc = new Ie(e.dyn_ltree, Ae);
        e.d_desc = new Ie(e.dyn_dtree, Fe);
        e.bl_desc = new Ie(e.bl_tree, Te);
        e.bi_buf = 0;
        e.bi_valid = 0;
        Le(e);
      },
      _tr_stored_block: Xe,
      _tr_flush_block: function (e, t, i, n) {
        var r,
          a,
          s = 0;
        if (e.level > 0) {
          if (2 === e.strm.data_type)
            e.strm.data_type = (function (e) {
              var t,
                i = 4093624447;
              for (t = 0; t <= 31; t++, i >>>= 1)
                if (1 & i && 0 !== e.dyn_ltree[2 * t]) return 0;
              if (
                0 !== e.dyn_ltree[18] ||
                0 !== e.dyn_ltree[20] ||
                0 !== e.dyn_ltree[26]
              )
                return 1;
              for (t = 32; t < 256; t++) if (0 !== e.dyn_ltree[2 * t]) return 1;
              return 0;
            })(e);
          He(e, e.l_desc);
          He(e, e.d_desc);
          s = (function (e) {
            var t;
            We(e, e.dyn_ltree, e.l_desc.max_code);
            We(e, e.dyn_dtree, e.d_desc.max_code);
            He(e, e.bl_desc);
            for (t = 18; t >= 3 && 0 === e.bl_tree[2 * we[t] + 1]; t--);
            e.opt_len += 3 * (t + 1) + 5 + 5 + 4;
            return t;
          })(e);
          r = (e.opt_len + 3 + 7) >>> 3;
          if ((a = (e.static_len + 3 + 7) >>> 3) <= r) r = a;
        } else r = a = i + 5;
        if (i + 4 <= r && -1 !== t) Xe(e, t, i, n);
        else if (4 === e.strategy || a === r) {
          Re(e, 2 + (n ? 1 : 0), 3);
          qe(e, xe, ke);
        } else {
          Re(e, 4 + (n ? 1 : 0), 3);
          !(function (e, t, i, n) {
            var r;
            Re(e, t - 257, 5);
            Re(e, i - 1, 5);
            Re(e, n - 4, 4);
            for (r = 0; r < n; r++) Re(e, e.bl_tree[2 * we[r] + 1], 3);
            Ge(e, e.dyn_ltree, t - 1);
            Ge(e, e.dyn_dtree, i - 1);
          })(e, e.l_desc.max_code + 1, e.d_desc.max_code + 1, s + 1);
          qe(e, e.dyn_ltree, e.dyn_dtree);
        }
        Le(e);
        if (n) Ue(e);
      },
      _tr_tally: function (e, t, i) {
        e.pending_buf[e.d_buf + 2 * e.last_lit] = (t >>> 8) & 255;
        e.pending_buf[e.d_buf + 2 * e.last_lit + 1] = 255 & t;
        e.pending_buf[e.l_buf + e.last_lit] = 255 & i;
        e.last_lit++;
        if (0 === t) e.dyn_ltree[2 * i]++;
        else {
          e.matches++;
          t--;
          e.dyn_ltree[2 * (Se[i] + 256 + 1)]++;
          e.dyn_dtree[2 * De(t)]++;
        }
        return e.last_lit === e.lit_bufsize - 1;
      },
      _tr_align: function (e) {
        Re(e, 2, 3);
        Ne(e, 256, xe);
        !(function (e) {
          if (16 === e.bi_valid) {
            Oe(e, e.bi_buf);
            e.bi_buf = 0;
            e.bi_valid = 0;
          } else if (e.bi_valid >= 8) {
            e.pending_buf[e.pending++] = 255 & e.bi_buf;
            e.bi_buf >>= 8;
            e.bi_valid -= 8;
          }
        })(e);
      },
    },
    Ze = function (e, t, i, n) {
      for (
        var r = (65535 & e) | 0, a = ((e >>> 16) & 65535) | 0, s = 0;
        0 !== i;

      ) {
        i -= s = i > 2e3 ? 2e3 : i;
        do {
          a = (a + (r = (r + t[n++]) | 0)) | 0;
        } while (--s);
        r %= 65521;
        a %= 65521;
      }
      return r | (a << 16) | 0;
    },
    Je = (function () {
      for (var e, t = [], i = 0; i < 256; i++) {
        e = i;
        for (var n = 0; n < 8; n++)
          e = 1 & e ? 3988292384 ^ (e >>> 1) : e >>> 1;
        t[i] = e;
      }
      return t;
    })(),
    $e = function (e, t, i, n) {
      var r = Je,
        a = n + i;
      e ^= -1;
      for (var s = n; s < a; s++) e = (e >>> 8) ^ r[255 & (e ^ t[s])];
      return -1 ^ e;
    },
    Qe = {
      2: "need dictionary",
      1: "stream end",
      0: "",
      "-1": "file error",
      "-2": "stream error",
      "-3": "data error",
      "-4": "insufficient memory",
      "-5": "buffer error",
      "-6": "incompatible version",
    },
    et = -2,
    tt = 258,
    it = 262,
    nt = 103,
    rt = 113,
    at = 666;
  function st(e, t) {
    e.msg = Qe[t];
    return t;
  }
  function ot(e) {
    return (e << 1) - (e > 4 ? 9 : 0);
  }
  function lt(e) {
    for (var t = e.length; --t >= 0; ) e[t] = 0;
  }
  function ct(e) {
    var t = e.state,
      i = t.pending;
    if (i > e.avail_out) i = e.avail_out;
    if (0 !== i) {
      ge.arraySet(e.output, t.pending_buf, t.pending_out, i, e.next_out);
      e.next_out += i;
      t.pending_out += i;
      e.total_out += i;
      e.avail_out -= i;
      t.pending -= i;
      if (0 === t.pending) t.pending_out = 0;
    }
  }
  function ht(e, t) {
    Ye._tr_flush_block(
      e,
      e.block_start >= 0 ? e.block_start : -1,
      e.strstart - e.block_start,
      t
    );
    e.block_start = e.strstart;
    ct(e.strm);
  }
  function ut(e, t) {
    e.pending_buf[e.pending++] = t;
  }
  function dt(e, t) {
    e.pending_buf[e.pending++] = (t >>> 8) & 255;
    e.pending_buf[e.pending++] = 255 & t;
  }
  function ft(e, t, i, n) {
    var r = e.avail_in;
    if (r > n) r = n;
    if (0 === r) return 0;
    e.avail_in -= r;
    ge.arraySet(t, e.input, e.next_in, r, i);
    if (1 === e.state.wrap) e.adler = Ze(e.adler, t, r, i);
    else if (2 === e.state.wrap) e.adler = $e(e.adler, t, r, i);
    e.next_in += r;
    e.total_in += r;
    return r;
  }
  function pt(e, t) {
    var i,
      n,
      r = e.max_chain_length,
      a = e.strstart,
      s = e.prev_length,
      o = e.nice_match,
      l = e.strstart > e.w_size - it ? e.strstart - (e.w_size - it) : 0,
      c = e.window,
      h = e.w_mask,
      u = e.prev,
      d = e.strstart + tt,
      f = c[a + s - 1],
      p = c[a + s];
    if (e.prev_length >= e.good_match) r >>= 2;
    if (o > e.lookahead) o = e.lookahead;
    do {
      if (
        c[(i = t) + s] === p &&
        c[i + s - 1] === f &&
        c[i] === c[a] &&
        c[++i] === c[a + 1]
      ) {
        a += 2;
        i++;
        do {} while (
          c[++a] === c[++i] &&
          c[++a] === c[++i] &&
          c[++a] === c[++i] &&
          c[++a] === c[++i] &&
          c[++a] === c[++i] &&
          c[++a] === c[++i] &&
          c[++a] === c[++i] &&
          c[++a] === c[++i] &&
          a < d
        );
        n = tt - (d - a);
        a = d - tt;
        if (n > s) {
          e.match_start = t;
          s = n;
          if (n >= o) break;
          f = c[a + s - 1];
          p = c[a + s];
        }
      }
    } while ((t = u[t & h]) > l && 0 != --r);
    if (s <= e.lookahead) return s;
    else return e.lookahead;
  }
  function gt(e) {
    var t,
      i,
      n,
      r,
      a,
      s = e.w_size;
    do {
      r = e.window_size - e.lookahead - e.strstart;
      if (e.strstart >= s + (s - it)) {
        ge.arraySet(e.window, e.window, s, s, 0);
        e.match_start -= s;
        e.strstart -= s;
        e.block_start -= s;
        t = i = e.hash_size;
        do {
          n = e.head[--t];
          e.head[t] = n >= s ? n - s : 0;
        } while (--i);
        t = i = s;
        do {
          n = e.prev[--t];
          e.prev[t] = n >= s ? n - s : 0;
        } while (--i);
        r += s;
      }
      if (0 === e.strm.avail_in) break;
      i = ft(e.strm, e.window, e.strstart + e.lookahead, r);
      e.lookahead += i;
      if (e.lookahead + e.insert >= 3) {
        a = e.strstart - e.insert;
        e.ins_h = e.window[a];
        e.ins_h = ((e.ins_h << e.hash_shift) ^ e.window[a + 1]) & e.hash_mask;
        for (; e.insert; ) {
          e.ins_h =
            ((e.ins_h << e.hash_shift) ^ e.window[a + 3 - 1]) & e.hash_mask;
          e.prev[a & e.w_mask] = e.head[e.ins_h];
          e.head[e.ins_h] = a;
          a++;
          e.insert--;
          if (e.lookahead + e.insert < 3) break;
        }
      }
    } while (e.lookahead < it && 0 !== e.strm.avail_in);
  }
  function mt(e, t) {
    for (var i, n; ; ) {
      if (e.lookahead < it) {
        gt(e);
        if (e.lookahead < it && 0 === t) return 1;
        if (0 === e.lookahead) break;
      }
      i = 0;
      if (e.lookahead >= 3) {
        e.ins_h =
          ((e.ins_h << e.hash_shift) ^ e.window[e.strstart + 3 - 1]) &
          e.hash_mask;
        i = e.prev[e.strstart & e.w_mask] = e.head[e.ins_h];
        e.head[e.ins_h] = e.strstart;
      }
      if (0 !== i && e.strstart - i <= e.w_size - it) e.match_length = pt(e, i);
      if (e.match_length >= 3) {
        n = Ye._tr_tally(e, e.strstart - e.match_start, e.match_length - 3);
        e.lookahead -= e.match_length;
        if (e.match_length <= e.max_lazy_match && e.lookahead >= 3) {
          e.match_length--;
          do {
            e.strstart++;
            e.ins_h =
              ((e.ins_h << e.hash_shift) ^ e.window[e.strstart + 3 - 1]) &
              e.hash_mask;
            i = e.prev[e.strstart & e.w_mask] = e.head[e.ins_h];
            e.head[e.ins_h] = e.strstart;
          } while (0 != --e.match_length);
          e.strstart++;
        } else {
          e.strstart += e.match_length;
          e.match_length = 0;
          e.ins_h = e.window[e.strstart];
          e.ins_h =
            ((e.ins_h << e.hash_shift) ^ e.window[e.strstart + 1]) &
            e.hash_mask;
        }
      } else {
        n = Ye._tr_tally(e, 0, e.window[e.strstart]);
        e.lookahead--;
        e.strstart++;
      }
      if (n) {
        ht(e, !1);
        if (0 === e.strm.avail_out) return 1;
      }
    }
    e.insert = e.strstart < 2 ? e.strstart : 2;
    if (4 === t) {
      ht(e, !0);
      if (0 === e.strm.avail_out) return 3;
      else return 4;
    }
    if (e.last_lit) {
      ht(e, !1);
      if (0 === e.strm.avail_out) return 1;
    }
    return 2;
  }
  function vt(e, t) {
    for (var i, n, r; ; ) {
      if (e.lookahead < it) {
        gt(e);
        if (e.lookahead < it && 0 === t) return 1;
        if (0 === e.lookahead) break;
      }
      i = 0;
      if (e.lookahead >= 3) {
        e.ins_h =
          ((e.ins_h << e.hash_shift) ^ e.window[e.strstart + 3 - 1]) &
          e.hash_mask;
        i = e.prev[e.strstart & e.w_mask] = e.head[e.ins_h];
        e.head[e.ins_h] = e.strstart;
      }
      e.prev_length = e.match_length;
      e.prev_match = e.match_start;
      e.match_length = 2;
      if (
        0 !== i &&
        e.prev_length < e.max_lazy_match &&
        e.strstart - i <= e.w_size - it
      ) {
        e.match_length = pt(e, i);
        if (
          e.match_length <= 5 &&
          (1 === e.strategy ||
            (3 === e.match_length && e.strstart - e.match_start > 4096))
        )
          e.match_length = 2;
      }
      if (e.prev_length >= 3 && e.match_length <= e.prev_length) {
        r = e.strstart + e.lookahead - 3;
        n = Ye._tr_tally(e, e.strstart - 1 - e.prev_match, e.prev_length - 3);
        e.lookahead -= e.prev_length - 1;
        e.prev_length -= 2;
        do {
          if (++e.strstart <= r) {
            e.ins_h =
              ((e.ins_h << e.hash_shift) ^ e.window[e.strstart + 3 - 1]) &
              e.hash_mask;
            i = e.prev[e.strstart & e.w_mask] = e.head[e.ins_h];
            e.head[e.ins_h] = e.strstart;
          }
        } while (0 != --e.prev_length);
        e.match_available = 0;
        e.match_length = 2;
        e.strstart++;
        if (n) {
          ht(e, !1);
          if (0 === e.strm.avail_out) return 1;
        }
      } else if (e.match_available) {
        if ((n = Ye._tr_tally(e, 0, e.window[e.strstart - 1]))) ht(e, !1);
        e.strstart++;
        e.lookahead--;
        if (0 === e.strm.avail_out) return 1;
      } else {
        e.match_available = 1;
        e.strstart++;
        e.lookahead--;
      }
    }
    if (e.match_available) {
      n = Ye._tr_tally(e, 0, e.window[e.strstart - 1]);
      e.match_available = 0;
    }
    e.insert = e.strstart < 2 ? e.strstart : 2;
    if (4 === t) {
      ht(e, !0);
      if (0 === e.strm.avail_out) return 3;
      else return 4;
    }
    if (e.last_lit) {
      ht(e, !1);
      if (0 === e.strm.avail_out) return 1;
    }
    return 2;
  }
  function bt(e, t, i, n, r) {
    this.good_length = e;
    this.max_lazy = t;
    this.nice_length = i;
    this.max_chain = n;
    this.func = r;
  }
  Ke = [
    new bt(0, 0, 0, 0, function (e, t) {
      var i = 65535;
      if (i > e.pending_buf_size - 5) i = e.pending_buf_size - 5;
      for (;;) {
        if (e.lookahead <= 1) {
          gt(e);
          if (0 === e.lookahead && 0 === t) return 1;
          if (0 === e.lookahead) break;
        }
        e.strstart += e.lookahead;
        e.lookahead = 0;
        var n = e.block_start + i;
        if (0 === e.strstart || e.strstart >= n) {
          e.lookahead = e.strstart - n;
          e.strstart = n;
          ht(e, !1);
          if (0 === e.strm.avail_out) return 1;
        }
        if (e.strstart - e.block_start >= e.w_size - it) {
          ht(e, !1);
          if (0 === e.strm.avail_out) return 1;
        }
      }
      e.insert = 0;
      if (4 === t) {
        ht(e, !0);
        if (0 === e.strm.avail_out) return 3;
        else return 4;
      }
      if (e.strstart > e.block_start) {
        ht(e, !1);
        if (0 === e.strm.avail_out) return 1;
      }
      return 1;
    }),
    new bt(4, 4, 8, 4, mt),
    new bt(4, 5, 16, 8, mt),
    new bt(4, 6, 32, 32, mt),
    new bt(4, 4, 16, 16, vt),
    new bt(8, 16, 32, 32, vt),
    new bt(8, 16, 128, 128, vt),
    new bt(8, 32, 128, 256, vt),
    new bt(32, 128, 258, 1024, vt),
    new bt(32, 258, 258, 4096, vt),
  ];
  function yt() {
    this.strm = null;
    this.status = 0;
    this.pending_buf = null;
    this.pending_buf_size = 0;
    this.pending_out = 0;
    this.pending = 0;
    this.wrap = 0;
    this.gzhead = null;
    this.gzindex = 0;
    this.method = 8;
    this.last_flush = -1;
    this.w_size = 0;
    this.w_bits = 0;
    this.w_mask = 0;
    this.window = null;
    this.window_size = 0;
    this.prev = null;
    this.head = null;
    this.ins_h = 0;
    this.hash_size = 0;
    this.hash_bits = 0;
    this.hash_mask = 0;
    this.hash_shift = 0;
    this.block_start = 0;
    this.match_length = 0;
    this.prev_match = 0;
    this.match_available = 0;
    this.strstart = 0;
    this.match_start = 0;
    this.lookahead = 0;
    this.prev_length = 0;
    this.max_chain_length = 0;
    this.max_lazy_match = 0;
    this.level = 0;
    this.strategy = 0;
    this.good_match = 0;
    this.nice_match = 0;
    this.dyn_ltree = new ge.Buf16(1146);
    this.dyn_dtree = new ge.Buf16(122);
    this.bl_tree = new ge.Buf16(78);
    lt(this.dyn_ltree);
    lt(this.dyn_dtree);
    lt(this.bl_tree);
    this.l_desc = null;
    this.d_desc = null;
    this.bl_desc = null;
    this.bl_count = new ge.Buf16(16);
    this.heap = new ge.Buf16(573);
    lt(this.heap);
    this.heap_len = 0;
    this.heap_max = 0;
    this.depth = new ge.Buf16(573);
    lt(this.depth);
    this.l_buf = 0;
    this.lit_bufsize = 0;
    this.last_lit = 0;
    this.d_buf = 0;
    this.opt_len = 0;
    this.static_len = 0;
    this.matches = 0;
    this.insert = 0;
    this.bi_buf = 0;
    this.bi_valid = 0;
  }
  function wt(e) {
    var t;
    if (!e || !e.state) return st(e, et);
    e.total_in = e.total_out = 0;
    e.data_type = 2;
    (t = e.state).pending = 0;
    t.pending_out = 0;
    if (t.wrap < 0) t.wrap = -t.wrap;
    t.status = t.wrap ? 42 : rt;
    e.adler = 2 === t.wrap ? 0 : 1;
    t.last_flush = 0;
    Ye._tr_init(t);
    return 0;
  }
  function xt(e) {
    var t = wt(e);
    if (0 === t)
      !(function (e) {
        e.window_size = 2 * e.w_size;
        lt(e.head);
        e.max_lazy_match = Ke[e.level].max_lazy;
        e.good_match = Ke[e.level].good_length;
        e.nice_match = Ke[e.level].nice_length;
        e.max_chain_length = Ke[e.level].max_chain;
        e.strstart = 0;
        e.block_start = 0;
        e.lookahead = 0;
        e.insert = 0;
        e.match_length = e.prev_length = 2;
        e.match_available = 0;
        e.ins_h = 0;
      })(e.state);
    return t;
  }
  function kt(e, t, i, n, r, a) {
    if (!e) return et;
    var s = 1;
    if (-1 === t) t = 6;
    if (n < 0) {
      s = 0;
      n = -n;
    } else if (n > 15) {
      s = 2;
      n -= 16;
    }
    if (
      r < 1 ||
      r > 9 ||
      8 !== i ||
      n < 8 ||
      n > 15 ||
      t < 0 ||
      t > 9 ||
      a < 0 ||
      a > 4
    )
      return st(e, et);
    if (8 === n) n = 9;
    var o = new yt();
    e.state = o;
    o.strm = e;
    o.wrap = s;
    o.gzhead = null;
    o.w_bits = n;
    o.w_size = 1 << o.w_bits;
    o.w_mask = o.w_size - 1;
    o.hash_bits = r + 7;
    o.hash_size = 1 << o.hash_bits;
    o.hash_mask = o.hash_size - 1;
    o.hash_shift = ~~((o.hash_bits + 3 - 1) / 3);
    o.window = new ge.Buf8(2 * o.w_size);
    o.head = new ge.Buf16(o.hash_size);
    o.prev = new ge.Buf16(o.w_size);
    o.lit_bufsize = 1 << (r + 6);
    o.pending_buf_size = 4 * o.lit_bufsize;
    o.pending_buf = new ge.Buf8(o.pending_buf_size);
    o.d_buf = 1 * o.lit_bufsize;
    o.l_buf = 3 * o.lit_bufsize;
    o.level = t;
    o.strategy = a;
    o.method = i;
    return xt(e);
  }
  var Ct = {
      deflateInit: function (e, t) {
        return kt(e, t, 8, 15, 8, 0);
      },
      deflateInit2: kt,
      deflateReset: xt,
      deflateResetKeep: wt,
      deflateSetHeader: function (e, t) {
        if (!e || !e.state) return et;
        if (2 !== e.state.wrap) return et;
        e.state.gzhead = t;
        return 0;
      },
      deflate: function (e, t) {
        var i, n, r, a;
        if (!e || !e.state || t > 5 || t < 0) return e ? st(e, et) : et;
        n = e.state;
        if (
          !e.output ||
          (!e.input && 0 !== e.avail_in) ||
          (n.status === at && 4 !== t)
        )
          return st(e, 0 === e.avail_out ? -5 : et);
        n.strm = e;
        i = n.last_flush;
        n.last_flush = t;
        if (42 === n.status)
          if (2 === n.wrap) {
            e.adler = 0;
            ut(n, 31);
            ut(n, 139);
            ut(n, 8);
            if (!n.gzhead) {
              ut(n, 0);
              ut(n, 0);
              ut(n, 0);
              ut(n, 0);
              ut(n, 0);
              ut(n, 9 === n.level ? 2 : n.strategy >= 2 || n.level < 2 ? 4 : 0);
              ut(n, 3);
              n.status = rt;
            } else {
              ut(
                n,
                (n.gzhead.text ? 1 : 0) +
                  (n.gzhead.hcrc ? 2 : 0) +
                  (!n.gzhead.extra ? 0 : 4) +
                  (!n.gzhead.name ? 0 : 8) +
                  (!n.gzhead.comment ? 0 : 16)
              );
              ut(n, 255 & n.gzhead.time);
              ut(n, (n.gzhead.time >> 8) & 255);
              ut(n, (n.gzhead.time >> 16) & 255);
              ut(n, (n.gzhead.time >> 24) & 255);
              ut(n, 9 === n.level ? 2 : n.strategy >= 2 || n.level < 2 ? 4 : 0);
              ut(n, 255 & n.gzhead.os);
              if (n.gzhead.extra && n.gzhead.extra.length) {
                ut(n, 255 & n.gzhead.extra.length);
                ut(n, (n.gzhead.extra.length >> 8) & 255);
              }
              if (n.gzhead.hcrc)
                e.adler = $e(e.adler, n.pending_buf, n.pending, 0);
              n.gzindex = 0;
              n.status = 69;
            }
          } else {
            var s = (8 + ((n.w_bits - 8) << 4)) << 8,
              o = -1;
            if (n.strategy >= 2 || n.level < 2) o = 0;
            else if (n.level < 6) o = 1;
            else if (6 === n.level) o = 2;
            else o = 3;
            s |= o << 6;
            if (0 !== n.strstart) s |= 32;
            s += 31 - (s % 31);
            n.status = rt;
            dt(n, s);
            if (0 !== n.strstart) {
              dt(n, e.adler >>> 16);
              dt(n, 65535 & e.adler);
            }
            e.adler = 1;
          }
        if (69 === n.status)
          if (n.gzhead.extra) {
            r = n.pending;
            for (; n.gzindex < (65535 & n.gzhead.extra.length); ) {
              if (n.pending === n.pending_buf_size) {
                if (n.gzhead.hcrc && n.pending > r)
                  e.adler = $e(e.adler, n.pending_buf, n.pending - r, r);
                ct(e);
                r = n.pending;
                if (n.pending === n.pending_buf_size) break;
              }
              ut(n, 255 & n.gzhead.extra[n.gzindex]);
              n.gzindex++;
            }
            if (n.gzhead.hcrc && n.pending > r)
              e.adler = $e(e.adler, n.pending_buf, n.pending - r, r);
            if (n.gzindex === n.gzhead.extra.length) {
              n.gzindex = 0;
              n.status = 73;
            }
          } else n.status = 73;
        if (73 === n.status)
          if (n.gzhead.name) {
            r = n.pending;
            do {
              if (n.pending === n.pending_buf_size) {
                if (n.gzhead.hcrc && n.pending > r)
                  e.adler = $e(e.adler, n.pending_buf, n.pending - r, r);
                ct(e);
                r = n.pending;
                if (n.pending === n.pending_buf_size) {
                  a = 1;
                  break;
                }
              }
              if (n.gzindex < n.gzhead.name.length)
                a = 255 & n.gzhead.name.charCodeAt(n.gzindex++);
              else a = 0;
              ut(n, a);
            } while (0 !== a);
            if (n.gzhead.hcrc && n.pending > r)
              e.adler = $e(e.adler, n.pending_buf, n.pending - r, r);
            if (0 === a) {
              n.gzindex = 0;
              n.status = 91;
            }
          } else n.status = 91;
        if (91 === n.status)
          if (n.gzhead.comment) {
            r = n.pending;
            do {
              if (n.pending === n.pending_buf_size) {
                if (n.gzhead.hcrc && n.pending > r)
                  e.adler = $e(e.adler, n.pending_buf, n.pending - r, r);
                ct(e);
                r = n.pending;
                if (n.pending === n.pending_buf_size) {
                  a = 1;
                  break;
                }
              }
              if (n.gzindex < n.gzhead.comment.length)
                a = 255 & n.gzhead.comment.charCodeAt(n.gzindex++);
              else a = 0;
              ut(n, a);
            } while (0 !== a);
            if (n.gzhead.hcrc && n.pending > r)
              e.adler = $e(e.adler, n.pending_buf, n.pending - r, r);
            if (0 === a) n.status = nt;
          } else n.status = nt;
        if (n.status === nt)
          if (n.gzhead.hcrc) {
            if (n.pending + 2 > n.pending_buf_size) ct(e);
            if (n.pending + 2 <= n.pending_buf_size) {
              ut(n, 255 & e.adler);
              ut(n, (e.adler >> 8) & 255);
              e.adler = 0;
              n.status = rt;
            }
          } else n.status = rt;
        if (0 !== n.pending) {
          ct(e);
          if (0 === e.avail_out) {
            n.last_flush = -1;
            return 0;
          }
        } else if (0 === e.avail_in && ot(t) <= ot(i) && 4 !== t)
          return st(e, -5);
        if (n.status === at && 0 !== e.avail_in) return st(e, -5);
        if (
          0 !== e.avail_in ||
          0 !== n.lookahead ||
          (0 !== t && n.status !== at)
        ) {
          var l =
            2 === n.strategy
              ? (function (e, t) {
                  for (var i; ; ) {
                    if (0 === e.lookahead) {
                      gt(e);
                      if (0 === e.lookahead) {
                        if (0 === t) return 1;
                        break;
                      }
                    }
                    e.match_length = 0;
                    i = Ye._tr_tally(e, 0, e.window[e.strstart]);
                    e.lookahead--;
                    e.strstart++;
                    if (i) {
                      ht(e, !1);
                      if (0 === e.strm.avail_out) return 1;
                    }
                  }
                  e.insert = 0;
                  if (4 === t) {
                    ht(e, !0);
                    if (0 === e.strm.avail_out) return 3;
                    else return 4;
                  }
                  if (e.last_lit) {
                    ht(e, !1);
                    if (0 === e.strm.avail_out) return 1;
                  }
                  return 2;
                })(n, t)
              : 3 === n.strategy
              ? (function (e, t) {
                  for (var i, n, r, a, s = e.window; ; ) {
                    if (e.lookahead <= tt) {
                      gt(e);
                      if (e.lookahead <= tt && 0 === t) return 1;
                      if (0 === e.lookahead) break;
                    }
                    e.match_length = 0;
                    if (e.lookahead >= 3 && e.strstart > 0)
                      if (
                        (n = s[(r = e.strstart - 1)]) === s[++r] &&
                        n === s[++r] &&
                        n === s[++r]
                      ) {
                        a = e.strstart + tt;
                        do {} while (
                          n === s[++r] &&
                          n === s[++r] &&
                          n === s[++r] &&
                          n === s[++r] &&
                          n === s[++r] &&
                          n === s[++r] &&
                          n === s[++r] &&
                          n === s[++r] &&
                          r < a
                        );
                        e.match_length = tt - (a - r);
                        if (e.match_length > e.lookahead)
                          e.match_length = e.lookahead;
                      }
                    if (e.match_length >= 3) {
                      i = Ye._tr_tally(e, 1, e.match_length - 3);
                      e.lookahead -= e.match_length;
                      e.strstart += e.match_length;
                      e.match_length = 0;
                    } else {
                      i = Ye._tr_tally(e, 0, e.window[e.strstart]);
                      e.lookahead--;
                      e.strstart++;
                    }
                    if (i) {
                      ht(e, !1);
                      if (0 === e.strm.avail_out) return 1;
                    }
                  }
                  e.insert = 0;
                  if (4 === t) {
                    ht(e, !0);
                    if (0 === e.strm.avail_out) return 3;
                    else return 4;
                  }
                  if (e.last_lit) {
                    ht(e, !1);
                    if (0 === e.strm.avail_out) return 1;
                  }
                  return 2;
                })(n, t)
              : Ke[n.level].func(n, t);
          if (3 === l || 4 === l) n.status = at;
          if (1 === l || 3 === l) {
            if (0 === e.avail_out) n.last_flush = -1;
            return 0;
          }
          if (2 === l) {
            if (1 === t) Ye._tr_align(n);
            else if (5 !== t) {
              Ye._tr_stored_block(n, 0, 0, !1);
              if (3 === t) {
                lt(n.head);
                if (0 === n.lookahead) {
                  n.strstart = 0;
                  n.block_start = 0;
                  n.insert = 0;
                }
              }
            }
            ct(e);
            if (0 === e.avail_out) {
              n.last_flush = -1;
              return 0;
            }
          }
        }
        if (4 !== t) return 0;
        if (n.wrap <= 0) return 1;
        if (2 === n.wrap) {
          ut(n, 255 & e.adler);
          ut(n, (e.adler >> 8) & 255);
          ut(n, (e.adler >> 16) & 255);
          ut(n, (e.adler >> 24) & 255);
          ut(n, 255 & e.total_in);
          ut(n, (e.total_in >> 8) & 255);
          ut(n, (e.total_in >> 16) & 255);
          ut(n, (e.total_in >> 24) & 255);
        } else {
          dt(n, e.adler >>> 16);
          dt(n, 65535 & e.adler);
        }
        ct(e);
        if (n.wrap > 0) n.wrap = -n.wrap;
        return 0 !== n.pending ? 0 : 1;
      },
      deflateEnd: function (e) {
        var t;
        if (!e || !e.state) return et;
        if (
          42 !== (t = e.state.status) &&
          69 !== t &&
          73 !== t &&
          91 !== t &&
          t !== nt &&
          t !== rt &&
          t !== at
        )
          return st(e, et);
        e.state = null;
        return t === rt ? st(e, -3) : 0;
      },
      deflateSetDictionary: function (e, t) {
        var i,
          n,
          r,
          a,
          s,
          o,
          l,
          c,
          h = t.length;
        if (!e || !e.state) return et;
        if (
          2 === (a = (i = e.state).wrap) ||
          (1 === a && 42 !== i.status) ||
          i.lookahead
        )
          return et;
        if (1 === a) e.adler = Ze(e.adler, t, h, 0);
        i.wrap = 0;
        if (h >= i.w_size) {
          if (0 === a) {
            lt(i.head);
            i.strstart = 0;
            i.block_start = 0;
            i.insert = 0;
          }
          c = new ge.Buf8(i.w_size);
          ge.arraySet(c, t, h - i.w_size, i.w_size, 0);
          t = c;
          h = i.w_size;
        }
        s = e.avail_in;
        o = e.next_in;
        l = e.input;
        e.avail_in = h;
        e.next_in = 0;
        e.input = t;
        gt(i);
        for (; i.lookahead >= 3; ) {
          n = i.strstart;
          r = i.lookahead - 2;
          do {
            i.ins_h =
              ((i.ins_h << i.hash_shift) ^ i.window[n + 3 - 1]) & i.hash_mask;
            i.prev[n & i.w_mask] = i.head[i.ins_h];
            i.head[i.ins_h] = n;
            n++;
          } while (--r);
          i.strstart = n;
          i.lookahead = 2;
          gt(i);
        }
        i.strstart += i.lookahead;
        i.block_start = i.strstart;
        i.insert = i.lookahead;
        i.lookahead = 0;
        i.match_length = i.prev_length = 2;
        i.match_available = 0;
        e.next_in = o;
        e.input = l;
        e.avail_in = s;
        i.wrap = a;
        return 0;
      },
      deflateInfo: "pako deflate (from Nodeca project)",
    },
    St = !0,
    _t = !0;
  try {
    String.fromCharCode.apply(null, [0]);
  } catch (e) {
    St = !1;
  }
  try {
    String.fromCharCode.apply(null, new Uint8Array(1));
  } catch (e) {
    _t = !1;
  }
  for (var At = new ge.Buf8(256), Ft = 0; Ft < 256; Ft++)
    At[Ft] =
      Ft >= 252
        ? 6
        : Ft >= 248
        ? 5
        : Ft >= 240
        ? 4
        : Ft >= 224
        ? 3
        : Ft >= 192
        ? 2
        : 1;
  At[254] = At[254] = 1;
  function Tt(e, t) {
    if (t < 65534)
      if ((e.subarray && _t) || (!e.subarray && St))
        return String.fromCharCode.apply(null, ge.shrinkBuf(e, t));
    for (var i = "", n = 0; n < t; n++) i += String.fromCharCode(e[n]);
    return i;
  }
  var Pt = function (e) {
      var t,
        i,
        n,
        r,
        a,
        s = e.length,
        o = 0;
      for (r = 0; r < s; r++) {
        if (55296 == (64512 & (i = e.charCodeAt(r))) && r + 1 < s)
          if (56320 == (64512 & (n = e.charCodeAt(r + 1)))) {
            i = 65536 + ((i - 55296) << 10) + (n - 56320);
            r++;
          }
        o += i < 128 ? 1 : i < 2048 ? 2 : i < 65536 ? 3 : 4;
      }
      t = new ge.Buf8(o);
      for (a = 0, r = 0; a < o; r++) {
        if (55296 == (64512 & (i = e.charCodeAt(r))) && r + 1 < s)
          if (56320 == (64512 & (n = e.charCodeAt(r + 1)))) {
            i = 65536 + ((i - 55296) << 10) + (n - 56320);
            r++;
          }
        if (i < 128) t[a++] = i;
        else if (i < 2048) {
          t[a++] = 192 | (i >>> 6);
          t[a++] = 128 | (63 & i);
        } else if (i < 65536) {
          t[a++] = 224 | (i >>> 12);
          t[a++] = 128 | ((i >>> 6) & 63);
          t[a++] = 128 | (63 & i);
        } else {
          t[a++] = 240 | (i >>> 18);
          t[a++] = 128 | ((i >>> 12) & 63);
          t[a++] = 128 | ((i >>> 6) & 63);
          t[a++] = 128 | (63 & i);
        }
      }
      return t;
    },
    Et = function (e, t) {
      var i,
        n,
        r,
        a,
        s = t || e.length,
        o = new Array(2 * s);
      for (n = 0, i = 0; i < s; )
        if (!((r = e[i++]) < 128))
          if (!((a = At[r]) > 4)) {
            r &= 2 === a ? 31 : 3 === a ? 15 : 7;
            for (; a > 1 && i < s; ) {
              r = (r << 6) | (63 & e[i++]);
              a--;
            }
            if (!(a > 1))
              if (r < 65536) o[n++] = r;
              else {
                r -= 65536;
                o[n++] = 55296 | ((r >> 10) & 1023);
                o[n++] = 56320 | (1023 & r);
              }
            else o[n++] = 65533;
          } else {
            o[n++] = 65533;
            i += a - 1;
          }
        else o[n++] = r;
      return Tt(o, n);
    },
    It = function (e, t) {
      var i;
      if ((t = t || e.length) > e.length) t = e.length;
      i = t - 1;
      for (; i >= 0 && 128 == (192 & e[i]); ) i--;
      if (i < 0) return t;
      if (0 === i) return t;
      else return i + At[e[i]] > t ? i : t;
    },
    Dt = function () {
      this.input = null;
      this.next_in = 0;
      this.avail_in = 0;
      this.total_in = 0;
      this.output = null;
      this.next_out = 0;
      this.avail_out = 0;
      this.total_out = 0;
      this.msg = "";
      this.state = null;
      this.data_type = 2;
      this.adler = 0;
    },
    Ot = Object.prototype.toString;
  function Rt(e) {
    if (!(this instanceof Rt)) return new Rt(e);
    this.options = ge.assign(
      {
        level: -1,
        method: 8,
        chunkSize: 16384,
        windowBits: 15,
        memLevel: 8,
        strategy: 0,
        to: "",
      },
      e || {}
    );
    var t = this.options;
    if (t.raw && t.windowBits > 0) t.windowBits = -t.windowBits;
    else if (t.gzip && t.windowBits > 0 && t.windowBits < 16)
      t.windowBits += 16;
    this.err = 0;
    this.msg = "";
    this.ended = !1;
    this.chunks = [];
    this.strm = new Dt();
    this.strm.avail_out = 0;
    var i = Ct.deflateInit2(
      this.strm,
      t.level,
      t.method,
      t.windowBits,
      t.memLevel,
      t.strategy
    );
    if (0 !== i) throw new Error(Qe[i]);
    if (t.header) Ct.deflateSetHeader(this.strm, t.header);
    if (t.dictionary) {
      var n;
      if ("string" == typeof t.dictionary) n = Pt(t.dictionary);
      else if ("[object ArrayBuffer]" === Ot.call(t.dictionary))
        n = new Uint8Array(t.dictionary);
      else n = t.dictionary;
      if (0 !== (i = Ct.deflateSetDictionary(this.strm, n)))
        throw new Error(Qe[i]);
      this._dict_set = !0;
    }
  }
  Rt.prototype.push = function (e, t) {
    var i,
      n,
      r,
      a = this.strm,
      s = this.options.chunkSize;
    if (this.ended) return !1;
    n = t === ~~t ? t : !0 === t ? 4 : 0;
    if ("string" == typeof e) a.input = Pt(e);
    else if ("[object ArrayBuffer]" === Ot.call(e)) a.input = new Uint8Array(e);
    else a.input = e;
    a.next_in = 0;
    a.avail_in = a.input.length;
    do {
      if (0 === a.avail_out) {
        a.output = new ge.Buf8(s);
        a.next_out = 0;
        a.avail_out = s;
      }
      if (1 !== (i = Ct.deflate(a, n)) && 0 !== i) {
        this.onEnd(i);
        this.ended = !0;
        return !1;
      }
      if (0 === a.avail_out || (0 === a.avail_in && (4 === n || 2 === n)))
        if ("string" === this.options.to)
          this.onData(Tt((r = ge.shrinkBuf(a.output, a.next_out)), r.length));
        else this.onData(ge.shrinkBuf(a.output, a.next_out));
    } while ((a.avail_in > 0 || 0 === a.avail_out) && 1 !== i);
    if (4 === n) {
      i = Ct.deflateEnd(this.strm);
      this.onEnd(i);
      this.ended = !0;
      return 0 === i;
    }
    if (2 === n) {
      this.onEnd(0);
      a.avail_out = 0;
      return !0;
    }
    return !0;
  };
  Rt.prototype.onData = function (e) {
    this.chunks.push(e);
  };
  Rt.prototype.onEnd = function (e) {
    if (0 === e)
      if ("string" === this.options.to) this.result = this.chunks.join("");
      else this.result = ge.flattenChunks(this.chunks);
    this.chunks = [];
    this.err = e;
    this.msg = this.strm.msg;
  };
  function Nt(e, t) {
    var i = new Rt(t);
    i.push(e, !0);
    if (i.err) throw i.msg || Qe[i.err];
    return i.result;
  }
  var Mt = {
      Deflate: Rt,
      deflate: Nt,
      deflateRaw: function (e, t) {
        (t = t || {}).raw = !0;
        return Nt(e, t);
      },
      gzip: function (e, t) {
        (t = t || {}).gzip = !0;
        return Nt(e, t);
      },
    },
    Bt = function (e, t) {
      var i,
        n,
        r,
        a,
        s,
        o,
        l,
        c,
        h,
        u,
        d,
        f,
        p,
        g,
        m,
        v,
        b,
        y,
        w,
        x,
        k,
        C,
        S,
        _,
        A;
      i = e.state;
      n = e.next_in;
      _ = e.input;
      r = n + (e.avail_in - 5);
      a = e.next_out;
      A = e.output;
      s = a - (t - e.avail_out);
      o = a + (e.avail_out - 257);
      l = i.dmax;
      c = i.wsize;
      h = i.whave;
      u = i.wnext;
      d = i.window;
      f = i.hold;
      p = i.bits;
      g = i.lencode;
      m = i.distcode;
      v = (1 << i.lenbits) - 1;
      b = (1 << i.distbits) - 1;
      e: do {
        if (p < 15) {
          f += _[n++] << p;
          p += 8;
          f += _[n++] << p;
          p += 8;
        }
        y = g[f & v];
        t: for (;;) {
          f >>>= w = y >>> 24;
          p -= w;
          if (0 == (w = (y >>> 16) & 255)) A[a++] = 65535 & y;
          else if (16 & w) {
            x = 65535 & y;
            if ((w &= 15)) {
              if (p < w) {
                f += _[n++] << p;
                p += 8;
              }
              x += f & ((1 << w) - 1);
              f >>>= w;
              p -= w;
            }
            if (p < 15) {
              f += _[n++] << p;
              p += 8;
              f += _[n++] << p;
              p += 8;
            }
            y = m[f & b];
            i: for (;;) {
              f >>>= w = y >>> 24;
              p -= w;
              if (16 & (w = (y >>> 16) & 255)) {
                k = 65535 & y;
                if (p < (w &= 15)) {
                  f += _[n++] << p;
                  if ((p += 8) < w) {
                    f += _[n++] << p;
                    p += 8;
                  }
                }
                if ((k += f & ((1 << w) - 1)) > l) {
                  e.msg = "invalid distance too far back";
                  i.mode = 30;
                  break e;
                }
                f >>>= w;
                p -= w;
                if (k > (w = a - s)) {
                  if ((w = k - w) > h)
                    if (i.sane) {
                      e.msg = "invalid distance too far back";
                      i.mode = 30;
                      break e;
                    }
                  C = 0;
                  S = d;
                  if (0 === u) {
                    C += c - w;
                    if (w < x) {
                      x -= w;
                      do {
                        A[a++] = d[C++];
                      } while (--w);
                      C = a - k;
                      S = A;
                    }
                  } else if (u < w) {
                    C += c + u - w;
                    if ((w -= u) < x) {
                      x -= w;
                      do {
                        A[a++] = d[C++];
                      } while (--w);
                      C = 0;
                      if (u < x) {
                        x -= w = u;
                        do {
                          A[a++] = d[C++];
                        } while (--w);
                        C = a - k;
                        S = A;
                      }
                    }
                  } else {
                    C += u - w;
                    if (w < x) {
                      x -= w;
                      do {
                        A[a++] = d[C++];
                      } while (--w);
                      C = a - k;
                      S = A;
                    }
                  }
                  for (; x > 2; ) {
                    A[a++] = S[C++];
                    A[a++] = S[C++];
                    A[a++] = S[C++];
                    x -= 3;
                  }
                  if (x) {
                    A[a++] = S[C++];
                    if (x > 1) A[a++] = S[C++];
                  }
                } else {
                  C = a - k;
                  do {
                    A[a++] = A[C++];
                    A[a++] = A[C++];
                    A[a++] = A[C++];
                    x -= 3;
                  } while (x > 2);
                  if (x) {
                    A[a++] = A[C++];
                    if (x > 1) A[a++] = A[C++];
                  }
                }
              } else if (0 == (64 & w)) {
                y = m[(65535 & y) + (f & ((1 << w) - 1))];
                continue i;
              } else {
                e.msg = "invalid distance code";
                i.mode = 30;
                break e;
              }
              break;
            }
          } else if (0 == (64 & w)) {
            y = g[(65535 & y) + (f & ((1 << w) - 1))];
            continue t;
          } else if (32 & w) {
            i.mode = 12;
            break e;
          } else {
            e.msg = "invalid literal/length code";
            i.mode = 30;
            break e;
          }
          break;
        }
      } while (n < r && a < o);
      n -= x = p >> 3;
      f &= (1 << (p -= x << 3)) - 1;
      e.next_in = n;
      e.next_out = a;
      e.avail_in = n < r ? r - n + 5 : 5 - (n - r);
      e.avail_out = a < o ? o - a + 257 : 257 - (a - o);
      i.hold = f;
      i.bits = p;
    },
    Lt = [
      3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59,
      67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0,
    ],
    Ut = [
      16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18, 19, 19,
      19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78,
    ],
    zt = [
      1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513,
      769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577, 0, 0,
    ],
    jt = [
      16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22, 23, 23,
      24, 24, 25, 25, 26, 26, 27, 27, 28, 28, 29, 29, 64, 64,
    ],
    qt = function (e, t, i, n, r, a, s, o) {
      var l,
        c,
        h,
        u,
        d,
        f,
        p,
        g,
        m,
        v = o.bits,
        b = 0,
        y = 0,
        w = 0,
        x = 0,
        k = 0,
        C = 0,
        S = 0,
        _ = 0,
        A = 0,
        F = 0,
        T = null,
        P = 0,
        E = new ge.Buf16(16),
        I = new ge.Buf16(16),
        D = null,
        O = 0;
      for (b = 0; b <= 15; b++) E[b] = 0;
      for (y = 0; y < n; y++) E[t[i + y]]++;
      k = v;
      for (x = 15; x >= 1 && 0 === E[x]; x--);
      if (k > x) k = x;
      if (0 === x) {
        r[a++] = 20971520;
        r[a++] = 20971520;
        o.bits = 1;
        return 0;
      }
      for (w = 1; w < x && 0 === E[w]; w++);
      if (k < w) k = w;
      _ = 1;
      for (b = 1; b <= 15; b++) {
        _ <<= 1;
        if ((_ -= E[b]) < 0) return -1;
      }
      if (_ > 0 && (0 === e || 1 !== x)) return -1;
      I[1] = 0;
      for (b = 1; b < 15; b++) I[b + 1] = I[b] + E[b];
      for (y = 0; y < n; y++) if (0 !== t[i + y]) s[I[t[i + y]]++] = y;
      if (0 === e) {
        T = D = s;
        f = 19;
      } else if (1 === e) {
        T = Lt;
        P -= 257;
        D = Ut;
        O -= 257;
        f = 256;
      } else {
        T = zt;
        D = jt;
        f = -1;
      }
      F = 0;
      y = 0;
      b = w;
      d = a;
      C = k;
      S = 0;
      h = -1;
      u = (A = 1 << k) - 1;
      if ((1 === e && A > 852) || (2 === e && A > 592)) return 1;
      for (;;) {
        p = b - S;
        if (s[y] < f) {
          g = 0;
          m = s[y];
        } else if (s[y] > f) {
          g = D[O + s[y]];
          m = T[P + s[y]];
        } else {
          g = 96;
          m = 0;
        }
        l = 1 << (b - S);
        w = c = 1 << C;
        do {
          r[d + (F >> S) + (c -= l)] = (p << 24) | (g << 16) | m | 0;
        } while (0 !== c);
        l = 1 << (b - 1);
        for (; F & l; ) l >>= 1;
        if (0 !== l) {
          F &= l - 1;
          F += l;
        } else F = 0;
        y++;
        if (0 == --E[b]) {
          if (b === x) break;
          b = t[i + s[y]];
        }
        if (b > k && (F & u) !== h) {
          if (0 === S) S = k;
          d += w;
          _ = 1 << (C = b - S);
          for (; C + S < x && !((_ -= E[C + S]) <= 0); ) {
            C++;
            _ <<= 1;
          }
          A += 1 << C;
          if ((1 === e && A > 852) || (2 === e && A > 592)) return 1;
          r[(h = F & u)] = (k << 24) | (C << 16) | (d - a) | 0;
        }
      }
      if (0 !== F) r[d + F] = ((b - S) << 24) | (64 << 16) | 0;
      o.bits = k;
      return 0;
    },
    Ht = -2,
    Wt = 12,
    Gt = 30;
  function Vt(e) {
    return (
      ((e >>> 24) & 255) +
      ((e >>> 8) & 65280) +
      ((65280 & e) << 8) +
      ((255 & e) << 24)
    );
  }
  function Xt() {
    this.mode = 0;
    this.last = !1;
    this.wrap = 0;
    this.havedict = !1;
    this.flags = 0;
    this.dmax = 0;
    this.check = 0;
    this.total = 0;
    this.head = null;
    this.wbits = 0;
    this.wsize = 0;
    this.whave = 0;
    this.wnext = 0;
    this.window = null;
    this.hold = 0;
    this.bits = 0;
    this.length = 0;
    this.offset = 0;
    this.extra = 0;
    this.lencode = null;
    this.distcode = null;
    this.lenbits = 0;
    this.distbits = 0;
    this.ncode = 0;
    this.nlen = 0;
    this.ndist = 0;
    this.have = 0;
    this.next = null;
    this.lens = new ge.Buf16(320);
    this.work = new ge.Buf16(288);
    this.lendyn = null;
    this.distdyn = null;
    this.sane = 0;
    this.back = 0;
    this.was = 0;
  }
  function Kt(e) {
    var t;
    if (!e || !e.state) return Ht;
    t = e.state;
    e.total_in = e.total_out = t.total = 0;
    e.msg = "";
    if (t.wrap) e.adler = 1 & t.wrap;
    t.mode = 1;
    t.last = 0;
    t.havedict = 0;
    t.dmax = 32768;
    t.head = null;
    t.hold = 0;
    t.bits = 0;
    t.lencode = t.lendyn = new ge.Buf32(852);
    t.distcode = t.distdyn = new ge.Buf32(592);
    t.sane = 1;
    t.back = -1;
    return 0;
  }
  function Yt(e) {
    var t;
    if (!e || !e.state) return Ht;
    (t = e.state).wsize = 0;
    t.whave = 0;
    t.wnext = 0;
    return Kt(e);
  }
  function Zt(e, t) {
    var i, n;
    if (!e || !e.state) return Ht;
    n = e.state;
    if (t < 0) {
      i = 0;
      t = -t;
    } else {
      i = 1 + (t >> 4);
      if (t < 48) t &= 15;
    }
    if (t && (t < 8 || t > 15)) return Ht;
    if (null !== n.window && n.wbits !== t) n.window = null;
    n.wrap = i;
    n.wbits = t;
    return Yt(e);
  }
  function Jt(e, t) {
    var i, n;
    if (!e) return Ht;
    n = new Xt();
    e.state = n;
    n.window = null;
    if (0 !== (i = Zt(e, t))) e.state = null;
    return i;
  }
  var $t,
    Qt,
    ei = !0;
  function ti(e) {
    if (ei) {
      var t;
      $t = new ge.Buf32(512);
      Qt = new ge.Buf32(32);
      t = 0;
      for (; t < 144; ) e.lens[t++] = 8;
      for (; t < 256; ) e.lens[t++] = 9;
      for (; t < 280; ) e.lens[t++] = 7;
      for (; t < 288; ) e.lens[t++] = 8;
      qt(1, e.lens, 0, 288, $t, 0, e.work, { bits: 9 });
      t = 0;
      for (; t < 32; ) e.lens[t++] = 5;
      qt(2, e.lens, 0, 32, Qt, 0, e.work, { bits: 5 });
      ei = !1;
    }
    e.lencode = $t;
    e.lenbits = 9;
    e.distcode = Qt;
    e.distbits = 5;
  }
  function ii(e, t, i, n) {
    var r,
      a = e.state;
    if (null === a.window) {
      a.wsize = 1 << a.wbits;
      a.wnext = 0;
      a.whave = 0;
      a.window = new ge.Buf8(a.wsize);
    }
    if (n >= a.wsize) {
      ge.arraySet(a.window, t, i - a.wsize, a.wsize, 0);
      a.wnext = 0;
      a.whave = a.wsize;
    } else {
      if ((r = a.wsize - a.wnext) > n) r = n;
      ge.arraySet(a.window, t, i - n, r, a.wnext);
      if ((n -= r)) {
        ge.arraySet(a.window, t, i - n, n, 0);
        a.wnext = n;
        a.whave = a.wsize;
      } else {
        a.wnext += r;
        if (a.wnext === a.wsize) a.wnext = 0;
        if (a.whave < a.wsize) a.whave += r;
      }
    }
    return 0;
  }
  var ni = {
      inflateReset: Yt,
      inflateReset2: Zt,
      inflateResetKeep: Kt,
      inflateInit: function (e) {
        return Jt(e, 15);
      },
      inflateInit2: Jt,
      inflate: function (e, t) {
        var i,
          n,
          r,
          a,
          s,
          o,
          l,
          c,
          h,
          u,
          d,
          f,
          p,
          g,
          m,
          v,
          b,
          y,
          w,
          x,
          k,
          C,
          S,
          _,
          A = 0,
          F = new ge.Buf8(4),
          T = [
            16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15,
          ];
        if (!e || !e.state || !e.output || (!e.input && 0 !== e.avail_in))
          return Ht;
        if ((i = e.state).mode === Wt) i.mode = 13;
        s = e.next_out;
        r = e.output;
        l = e.avail_out;
        a = e.next_in;
        n = e.input;
        o = e.avail_in;
        c = i.hold;
        h = i.bits;
        u = o;
        d = l;
        C = 0;
        e: for (;;)
          switch (i.mode) {
            case 1:
              if (0 === i.wrap) {
                i.mode = 13;
                break;
              }
              for (; h < 16; ) {
                if (0 === o) break e;
                o--;
                c += n[a++] << h;
                h += 8;
              }
              if (2 & i.wrap && 35615 === c) {
                i.check = 0;
                F[0] = 255 & c;
                F[1] = (c >>> 8) & 255;
                i.check = $e(i.check, F, 2, 0);
                c = 0;
                h = 0;
                i.mode = 2;
                break;
              }
              i.flags = 0;
              if (i.head) i.head.done = !1;
              if (!(1 & i.wrap) || (((255 & c) << 8) + (c >> 8)) % 31) {
                e.msg = "incorrect header check";
                i.mode = Gt;
                break;
              }
              if (8 != (15 & c)) {
                e.msg = "unknown compression method";
                i.mode = Gt;
                break;
              }
              h -= 4;
              k = 8 + (15 & (c >>>= 4));
              if (0 === i.wbits) i.wbits = k;
              else if (k > i.wbits) {
                e.msg = "invalid window size";
                i.mode = Gt;
                break;
              }
              i.dmax = 1 << k;
              e.adler = i.check = 1;
              i.mode = 512 & c ? 10 : Wt;
              c = 0;
              h = 0;
              break;
            case 2:
              for (; h < 16; ) {
                if (0 === o) break e;
                o--;
                c += n[a++] << h;
                h += 8;
              }
              i.flags = c;
              if (8 != (255 & i.flags)) {
                e.msg = "unknown compression method";
                i.mode = Gt;
                break;
              }
              if (57344 & i.flags) {
                e.msg = "unknown header flags set";
                i.mode = Gt;
                break;
              }
              if (i.head) i.head.text = (c >> 8) & 1;
              if (512 & i.flags) {
                F[0] = 255 & c;
                F[1] = (c >>> 8) & 255;
                i.check = $e(i.check, F, 2, 0);
              }
              c = 0;
              h = 0;
              i.mode = 3;
            case 3:
              for (; h < 32; ) {
                if (0 === o) break e;
                o--;
                c += n[a++] << h;
                h += 8;
              }
              if (i.head) i.head.time = c;
              if (512 & i.flags) {
                F[0] = 255 & c;
                F[1] = (c >>> 8) & 255;
                F[2] = (c >>> 16) & 255;
                F[3] = (c >>> 24) & 255;
                i.check = $e(i.check, F, 4, 0);
              }
              c = 0;
              h = 0;
              i.mode = 4;
            case 4:
              for (; h < 16; ) {
                if (0 === o) break e;
                o--;
                c += n[a++] << h;
                h += 8;
              }
              if (i.head) {
                i.head.xflags = 255 & c;
                i.head.os = c >> 8;
              }
              if (512 & i.flags) {
                F[0] = 255 & c;
                F[1] = (c >>> 8) & 255;
                i.check = $e(i.check, F, 2, 0);
              }
              c = 0;
              h = 0;
              i.mode = 5;
            case 5:
              if (1024 & i.flags) {
                for (; h < 16; ) {
                  if (0 === o) break e;
                  o--;
                  c += n[a++] << h;
                  h += 8;
                }
                i.length = c;
                if (i.head) i.head.extra_len = c;
                if (512 & i.flags) {
                  F[0] = 255 & c;
                  F[1] = (c >>> 8) & 255;
                  i.check = $e(i.check, F, 2, 0);
                }
                c = 0;
                h = 0;
              } else if (i.head) i.head.extra = null;
              i.mode = 6;
            case 6:
              if (1024 & i.flags) {
                if ((f = i.length) > o) f = o;
                if (f) {
                  if (i.head) {
                    k = i.head.extra_len - i.length;
                    if (!i.head.extra)
                      i.head.extra = new Array(i.head.extra_len);
                    ge.arraySet(i.head.extra, n, a, f, k);
                  }
                  if (512 & i.flags) i.check = $e(i.check, n, f, a);
                  o -= f;
                  a += f;
                  i.length -= f;
                }
                if (i.length) break e;
              }
              i.length = 0;
              i.mode = 7;
            case 7:
              if (2048 & i.flags) {
                if (0 === o) break e;
                f = 0;
                do {
                  k = n[a + f++];
                  if (i.head && k && i.length < 65536)
                    i.head.name += String.fromCharCode(k);
                } while (k && f < o);
                if (512 & i.flags) i.check = $e(i.check, n, f, a);
                o -= f;
                a += f;
                if (k) break e;
              } else if (i.head) i.head.name = null;
              i.length = 0;
              i.mode = 8;
            case 8:
              if (4096 & i.flags) {
                if (0 === o) break e;
                f = 0;
                do {
                  k = n[a + f++];
                  if (i.head && k && i.length < 65536)
                    i.head.comment += String.fromCharCode(k);
                } while (k && f < o);
                if (512 & i.flags) i.check = $e(i.check, n, f, a);
                o -= f;
                a += f;
                if (k) break e;
              } else if (i.head) i.head.comment = null;
              i.mode = 9;
            case 9:
              if (512 & i.flags) {
                for (; h < 16; ) {
                  if (0 === o) break e;
                  o--;
                  c += n[a++] << h;
                  h += 8;
                }
                if (c !== (65535 & i.check)) {
                  e.msg = "header crc mismatch";
                  i.mode = Gt;
                  break;
                }
                c = 0;
                h = 0;
              }
              if (i.head) {
                i.head.hcrc = (i.flags >> 9) & 1;
                i.head.done = !0;
              }
              e.adler = i.check = 0;
              i.mode = Wt;
              break;
            case 10:
              for (; h < 32; ) {
                if (0 === o) break e;
                o--;
                c += n[a++] << h;
                h += 8;
              }
              e.adler = i.check = Vt(c);
              c = 0;
              h = 0;
              i.mode = 11;
            case 11:
              if (0 === i.havedict) {
                e.next_out = s;
                e.avail_out = l;
                e.next_in = a;
                e.avail_in = o;
                i.hold = c;
                i.bits = h;
                return 2;
              }
              e.adler = i.check = 1;
              i.mode = Wt;
            case Wt:
              if (5 === t || 6 === t) break e;
            case 13:
              if (i.last) {
                c >>>= 7 & h;
                h -= 7 & h;
                i.mode = 27;
                break;
              }
              for (; h < 3; ) {
                if (0 === o) break e;
                o--;
                c += n[a++] << h;
                h += 8;
              }
              i.last = 1 & c;
              h -= 1;
              switch (3 & (c >>>= 1)) {
                case 0:
                  i.mode = 14;
                  break;
                case 1:
                  ti(i);
                  i.mode = 20;
                  if (6 === t) {
                    c >>>= 2;
                    h -= 2;
                    break e;
                  }
                  break;
                case 2:
                  i.mode = 17;
                  break;
                case 3:
                  e.msg = "invalid block type";
                  i.mode = Gt;
              }
              c >>>= 2;
              h -= 2;
              break;
            case 14:
              c >>>= 7 & h;
              h -= 7 & h;
              for (; h < 32; ) {
                if (0 === o) break e;
                o--;
                c += n[a++] << h;
                h += 8;
              }
              if ((65535 & c) != ((c >>> 16) ^ 65535)) {
                e.msg = "invalid stored block lengths";
                i.mode = Gt;
                break;
              }
              i.length = 65535 & c;
              c = 0;
              h = 0;
              i.mode = 15;
              if (6 === t) break e;
            case 15:
              i.mode = 16;
            case 16:
              if ((f = i.length)) {
                if (f > o) f = o;
                if (f > l) f = l;
                if (0 === f) break e;
                ge.arraySet(r, n, a, f, s);
                o -= f;
                a += f;
                l -= f;
                s += f;
                i.length -= f;
                break;
              }
              i.mode = Wt;
              break;
            case 17:
              for (; h < 14; ) {
                if (0 === o) break e;
                o--;
                c += n[a++] << h;
                h += 8;
              }
              i.nlen = 257 + (31 & c);
              c >>>= 5;
              h -= 5;
              i.ndist = 1 + (31 & c);
              c >>>= 5;
              h -= 5;
              i.ncode = 4 + (15 & c);
              c >>>= 4;
              h -= 4;
              if (i.nlen > 286 || i.ndist > 30) {
                e.msg = "too many length or distance symbols";
                i.mode = Gt;
                break;
              }
              i.have = 0;
              i.mode = 18;
            case 18:
              for (; i.have < i.ncode; ) {
                for (; h < 3; ) {
                  if (0 === o) break e;
                  o--;
                  c += n[a++] << h;
                  h += 8;
                }
                i.lens[T[i.have++]] = 7 & c;
                c >>>= 3;
                h -= 3;
              }
              for (; i.have < 19; ) i.lens[T[i.have++]] = 0;
              i.lencode = i.lendyn;
              i.lenbits = 7;
              S = { bits: i.lenbits };
              C = qt(0, i.lens, 0, 19, i.lencode, 0, i.work, S);
              i.lenbits = S.bits;
              if (C) {
                e.msg = "invalid code lengths set";
                i.mode = Gt;
                break;
              }
              i.have = 0;
              i.mode = 19;
            case 19:
              for (; i.have < i.nlen + i.ndist; ) {
                for (;;) {
                  v =
                    ((A = i.lencode[c & ((1 << i.lenbits) - 1)]) >>> 16) & 255;
                  b = 65535 & A;
                  if ((m = A >>> 24) <= h) break;
                  if (0 === o) break e;
                  o--;
                  c += n[a++] << h;
                  h += 8;
                }
                if (b < 16) {
                  c >>>= m;
                  h -= m;
                  i.lens[i.have++] = b;
                } else {
                  if (16 === b) {
                    _ = m + 2;
                    for (; h < _; ) {
                      if (0 === o) break e;
                      o--;
                      c += n[a++] << h;
                      h += 8;
                    }
                    c >>>= m;
                    h -= m;
                    if (0 === i.have) {
                      e.msg = "invalid bit length repeat";
                      i.mode = Gt;
                      break;
                    }
                    k = i.lens[i.have - 1];
                    f = 3 + (3 & c);
                    c >>>= 2;
                    h -= 2;
                  } else if (17 === b) {
                    _ = m + 3;
                    for (; h < _; ) {
                      if (0 === o) break e;
                      o--;
                      c += n[a++] << h;
                      h += 8;
                    }
                    h -= m;
                    k = 0;
                    f = 3 + (7 & (c >>>= m));
                    c >>>= 3;
                    h -= 3;
                  } else {
                    _ = m + 7;
                    for (; h < _; ) {
                      if (0 === o) break e;
                      o--;
                      c += n[a++] << h;
                      h += 8;
                    }
                    h -= m;
                    k = 0;
                    f = 11 + (127 & (c >>>= m));
                    c >>>= 7;
                    h -= 7;
                  }
                  if (i.have + f > i.nlen + i.ndist) {
                    e.msg = "invalid bit length repeat";
                    i.mode = Gt;
                    break;
                  }
                  for (; f--; ) i.lens[i.have++] = k;
                }
              }
              if (i.mode === Gt) break;
              if (0 === i.lens[256]) {
                e.msg = "invalid code -- missing end-of-block";
                i.mode = Gt;
                break;
              }
              i.lenbits = 9;
              S = { bits: i.lenbits };
              C = qt(1, i.lens, 0, i.nlen, i.lencode, 0, i.work, S);
              i.lenbits = S.bits;
              if (C) {
                e.msg = "invalid literal/lengths set";
                i.mode = Gt;
                break;
              }
              i.distbits = 6;
              i.distcode = i.distdyn;
              S = { bits: i.distbits };
              C = qt(2, i.lens, i.nlen, i.ndist, i.distcode, 0, i.work, S);
              i.distbits = S.bits;
              if (C) {
                e.msg = "invalid distances set";
                i.mode = Gt;
                break;
              }
              i.mode = 20;
              if (6 === t) break e;
            case 20:
              i.mode = 21;
            case 21:
              if (o >= 6 && l >= 258) {
                e.next_out = s;
                e.avail_out = l;
                e.next_in = a;
                e.avail_in = o;
                i.hold = c;
                i.bits = h;
                Bt(e, d);
                s = e.next_out;
                r = e.output;
                l = e.avail_out;
                a = e.next_in;
                n = e.input;
                o = e.avail_in;
                c = i.hold;
                h = i.bits;
                if (i.mode === Wt) i.back = -1;
                break;
              }
              i.back = 0;
              for (;;) {
                v = ((A = i.lencode[c & ((1 << i.lenbits) - 1)]) >>> 16) & 255;
                b = 65535 & A;
                if ((m = A >>> 24) <= h) break;
                if (0 === o) break e;
                o--;
                c += n[a++] << h;
                h += 8;
              }
              if (v && 0 == (240 & v)) {
                y = m;
                w = v;
                x = b;
                for (;;) {
                  v =
                    ((A = i.lencode[x + ((c & ((1 << (y + w)) - 1)) >> y)]) >>>
                      16) &
                    255;
                  b = 65535 & A;
                  if (y + (m = A >>> 24) <= h) break;
                  if (0 === o) break e;
                  o--;
                  c += n[a++] << h;
                  h += 8;
                }
                c >>>= y;
                h -= y;
                i.back += y;
              }
              c >>>= m;
              h -= m;
              i.back += m;
              i.length = b;
              if (0 === v) {
                i.mode = 26;
                break;
              }
              if (32 & v) {
                i.back = -1;
                i.mode = Wt;
                break;
              }
              if (64 & v) {
                e.msg = "invalid literal/length code";
                i.mode = Gt;
                break;
              }
              i.extra = 15 & v;
              i.mode = 22;
            case 22:
              if (i.extra) {
                _ = i.extra;
                for (; h < _; ) {
                  if (0 === o) break e;
                  o--;
                  c += n[a++] << h;
                  h += 8;
                }
                i.length += c & ((1 << i.extra) - 1);
                c >>>= i.extra;
                h -= i.extra;
                i.back += i.extra;
              }
              i.was = i.length;
              i.mode = 23;
            case 23:
              for (;;) {
                v =
                  ((A = i.distcode[c & ((1 << i.distbits) - 1)]) >>> 16) & 255;
                b = 65535 & A;
                if ((m = A >>> 24) <= h) break;
                if (0 === o) break e;
                o--;
                c += n[a++] << h;
                h += 8;
              }
              if (0 == (240 & v)) {
                y = m;
                w = v;
                x = b;
                for (;;) {
                  v =
                    ((A = i.distcode[x + ((c & ((1 << (y + w)) - 1)) >> y)]) >>>
                      16) &
                    255;
                  b = 65535 & A;
                  if (y + (m = A >>> 24) <= h) break;
                  if (0 === o) break e;
                  o--;
                  c += n[a++] << h;
                  h += 8;
                }
                c >>>= y;
                h -= y;
                i.back += y;
              }
              c >>>= m;
              h -= m;
              i.back += m;
              if (64 & v) {
                e.msg = "invalid distance code";
                i.mode = Gt;
                break;
              }
              i.offset = b;
              i.extra = 15 & v;
              i.mode = 24;
            case 24:
              if (i.extra) {
                _ = i.extra;
                for (; h < _; ) {
                  if (0 === o) break e;
                  o--;
                  c += n[a++] << h;
                  h += 8;
                }
                i.offset += c & ((1 << i.extra) - 1);
                c >>>= i.extra;
                h -= i.extra;
                i.back += i.extra;
              }
              if (i.offset > i.dmax) {
                e.msg = "invalid distance too far back";
                i.mode = Gt;
                break;
              }
              i.mode = 25;
            case 25:
              if (0 === l) break e;
              f = d - l;
              if (i.offset > f) {
                if ((f = i.offset - f) > i.whave)
                  if (i.sane) {
                    e.msg = "invalid distance too far back";
                    i.mode = Gt;
                    break;
                  }
                if (f > i.wnext) {
                  f -= i.wnext;
                  p = i.wsize - f;
                } else p = i.wnext - f;
                if (f > i.length) f = i.length;
                g = i.window;
              } else {
                g = r;
                p = s - i.offset;
                f = i.length;
              }
              if (f > l) f = l;
              l -= f;
              i.length -= f;
              do {
                r[s++] = g[p++];
              } while (--f);
              if (0 === i.length) i.mode = 21;
              break;
            case 26:
              if (0 === l) break e;
              r[s++] = i.length;
              l--;
              i.mode = 21;
              break;
            case 27:
              if (i.wrap) {
                for (; h < 32; ) {
                  if (0 === o) break e;
                  o--;
                  c |= n[a++] << h;
                  h += 8;
                }
                d -= l;
                e.total_out += d;
                i.total += d;
                if (d)
                  e.adler = i.check = i.flags
                    ? $e(i.check, r, d, s - d)
                    : Ze(i.check, r, d, s - d);
                d = l;
                if ((i.flags ? c : Vt(c)) !== i.check) {
                  e.msg = "incorrect data check";
                  i.mode = Gt;
                  break;
                }
                c = 0;
                h = 0;
              }
              i.mode = 28;
            case 28:
              if (i.wrap && i.flags) {
                for (; h < 32; ) {
                  if (0 === o) break e;
                  o--;
                  c += n[a++] << h;
                  h += 8;
                }
                if (c !== (4294967295 & i.total)) {
                  e.msg = "incorrect length check";
                  i.mode = Gt;
                  break;
                }
                c = 0;
                h = 0;
              }
              i.mode = 29;
            case 29:
              C = 1;
              break e;
            case Gt:
              C = -3;
              break e;
            case 31:
              return -4;
            case 32:
            default:
              return Ht;
          }
        e.next_out = s;
        e.avail_out = l;
        e.next_in = a;
        e.avail_in = o;
        i.hold = c;
        i.bits = h;
        if (
          i.wsize ||
          (d !== e.avail_out && i.mode < Gt && (i.mode < 27 || 4 !== t))
        )
          if (ii(e, e.output, e.next_out, d - e.avail_out));
        u -= e.avail_in;
        d -= e.avail_out;
        e.total_in += u;
        e.total_out += d;
        i.total += d;
        if (i.wrap && d)
          e.adler = i.check = i.flags
            ? $e(i.check, r, d, e.next_out - d)
            : Ze(i.check, r, d, e.next_out - d);
        e.data_type =
          i.bits +
          (i.last ? 64 : 0) +
          (i.mode === Wt ? 128 : 0) +
          (20 === i.mode || 15 === i.mode ? 256 : 0);
        if (((0 === u && 0 === d) || 4 === t) && 0 === C) C = -5;
        return C;
      },
      inflateEnd: function (e) {
        if (!e || !e.state) return Ht;
        var t = e.state;
        if (t.window) t.window = null;
        e.state = null;
        return 0;
      },
      inflateGetHeader: function (e, t) {
        var i;
        if (!e || !e.state) return Ht;
        if (0 == (2 & (i = e.state).wrap)) return Ht;
        i.head = t;
        t.done = !1;
        return 0;
      },
      inflateSetDictionary: function (e, t) {
        var i,
          n = t.length;
        if (!e || !e.state) return Ht;
        if (0 !== (i = e.state).wrap && 11 !== i.mode) return Ht;
        if (11 === i.mode) if (Ze(1, t, n, 0) !== i.check) return -3;
        if (ii(e, t, n, n)) {
          i.mode = 31;
          return -4;
        }
        i.havedict = 1;
        return 0;
      },
      inflateInfo: "pako inflate (from Nodeca project)",
    },
    ri = {
      Z_NO_FLUSH: 0,
      Z_PARTIAL_FLUSH: 1,
      Z_SYNC_FLUSH: 2,
      Z_FULL_FLUSH: 3,
      Z_FINISH: 4,
      Z_BLOCK: 5,
      Z_TREES: 6,
      Z_OK: 0,
      Z_STREAM_END: 1,
      Z_NEED_DICT: 2,
      Z_ERRNO: -1,
      Z_STREAM_ERROR: -2,
      Z_DATA_ERROR: -3,
      Z_BUF_ERROR: -5,
      Z_NO_COMPRESSION: 0,
      Z_BEST_SPEED: 1,
      Z_BEST_COMPRESSION: 9,
      Z_DEFAULT_COMPRESSION: -1,
      Z_FILTERED: 1,
      Z_HUFFMAN_ONLY: 2,
      Z_RLE: 3,
      Z_FIXED: 4,
      Z_DEFAULT_STRATEGY: 0,
      Z_BINARY: 0,
      Z_TEXT: 1,
      Z_UNKNOWN: 2,
      Z_DEFLATED: 8,
    },
    ai = function () {
      this.text = 0;
      this.time = 0;
      this.xflags = 0;
      this.os = 0;
      this.extra = null;
      this.extra_len = 0;
      this.name = "";
      this.comment = "";
      this.hcrc = 0;
      this.done = !1;
    },
    si = Object.prototype.toString;
  function oi(e) {
    if (!(this instanceof oi)) return new oi(e);
    this.options = ge.assign(
      { chunkSize: 16384, windowBits: 0, to: "" },
      e || {}
    );
    var t = this.options;
    if (t.raw && t.windowBits >= 0 && t.windowBits < 16) {
      t.windowBits = -t.windowBits;
      if (0 === t.windowBits) t.windowBits = -15;
    }
    if (t.windowBits >= 0 && t.windowBits < 16 && (!e || !e.windowBits))
      t.windowBits += 32;
    if (t.windowBits > 15 && t.windowBits < 48)
      if (0 == (15 & t.windowBits)) t.windowBits |= 15;
    this.err = 0;
    this.msg = "";
    this.ended = !1;
    this.chunks = [];
    this.strm = new Dt();
    this.strm.avail_out = 0;
    var i = ni.inflateInit2(this.strm, t.windowBits);
    if (i !== ri.Z_OK) throw new Error(Qe[i]);
    this.header = new ai();
    ni.inflateGetHeader(this.strm, this.header);
    if (t.dictionary) {
      if ("string" == typeof t.dictionary) t.dictionary = Pt(t.dictionary);
      else if ("[object ArrayBuffer]" === si.call(t.dictionary))
        t.dictionary = new Uint8Array(t.dictionary);
      if (t.raw)
        if ((i = ni.inflateSetDictionary(this.strm, t.dictionary)) !== ri.Z_OK)
          throw new Error(Qe[i]);
    }
  }
  oi.prototype.push = function (e, t) {
    var i,
      n,
      r,
      a,
      s,
      o = this.strm,
      l = this.options.chunkSize,
      c = this.options.dictionary,
      h = !1;
    if (this.ended) return !1;
    n = t === ~~t ? t : !0 === t ? ri.Z_FINISH : ri.Z_NO_FLUSH;
    if ("string" == typeof e)
      o.input = (function (e) {
        for (var t = new ge.Buf8(e.length), i = 0, n = t.length; i < n; i++)
          t[i] = e.charCodeAt(i);
        return t;
      })(e);
    else if ("[object ArrayBuffer]" === si.call(e)) o.input = new Uint8Array(e);
    else o.input = e;
    o.next_in = 0;
    o.avail_in = o.input.length;
    do {
      if (0 === o.avail_out) {
        o.output = new ge.Buf8(l);
        o.next_out = 0;
        o.avail_out = l;
      }
      if ((i = ni.inflate(o, ri.Z_NO_FLUSH)) === ri.Z_NEED_DICT && c)
        i = ni.inflateSetDictionary(this.strm, c);
      if (i === ri.Z_BUF_ERROR && !0 === h) {
        i = ri.Z_OK;
        h = !1;
      }
      if (i !== ri.Z_STREAM_END && i !== ri.Z_OK) {
        this.onEnd(i);
        this.ended = !0;
        return !1;
      }
      if (o.next_out)
        if (
          0 === o.avail_out ||
          i === ri.Z_STREAM_END ||
          (0 === o.avail_in && (n === ri.Z_FINISH || n === ri.Z_SYNC_FLUSH))
        )
          if ("string" === this.options.to) {
            r = It(o.output, o.next_out);
            a = o.next_out - r;
            s = Et(o.output, r);
            o.next_out = a;
            o.avail_out = l - a;
            if (a) ge.arraySet(o.output, o.output, r, a, 0);
            this.onData(s);
          } else this.onData(ge.shrinkBuf(o.output, o.next_out));
      if (0 === o.avail_in && 0 === o.avail_out) h = !0;
    } while ((o.avail_in > 0 || 0 === o.avail_out) && i !== ri.Z_STREAM_END);
    if (i === ri.Z_STREAM_END) n = ri.Z_FINISH;
    if (n === ri.Z_FINISH) {
      i = ni.inflateEnd(this.strm);
      this.onEnd(i);
      this.ended = !0;
      return i === ri.Z_OK;
    }
    if (n === ri.Z_SYNC_FLUSH) {
      this.onEnd(ri.Z_OK);
      o.avail_out = 0;
      return !0;
    }
    return !0;
  };
  oi.prototype.onData = function (e) {
    this.chunks.push(e);
  };
  oi.prototype.onEnd = function (e) {
    if (e === ri.Z_OK)
      if ("string" === this.options.to) this.result = this.chunks.join("");
      else this.result = ge.flattenChunks(this.chunks);
    this.chunks = [];
    this.err = e;
    this.msg = this.strm.msg;
  };
  function li(e, t) {
    var i = new oi(t);
    i.push(e, !0);
    if (i.err) throw i.msg || Qe[i.err];
    return i.result;
  }
  var ci = {
      Inflate: oi,
      inflate: li,
      inflateRaw: function (e, t) {
        (t = t || {}).raw = !0;
        return li(e, t);
      },
      ungzip: li,
    },
    hi = {};
  (0, ge.assign)(hi, Mt, ci, ri);
  for (
    var ui = hi,
      di = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
      fi = new Uint8Array(256),
      pi = 0;
    pi < di.length;
    pi++
  )
    fi[di.charCodeAt(pi)] = pi;
  var gi,
    mi = function (e) {
      return (function (e) {
        for (var t = "", i = 0; i < e.length; i++)
          t += String.fromCharCode(e[i]);
        return t;
      })(
        ui.inflate(
          (function (e) {
            var t,
              i,
              n,
              r,
              a,
              s = 0.75 * e.length,
              o = e.length,
              l = 0;
            if ("=" === e[e.length - 1]) {
              s--;
              if ("=" === e[e.length - 2]) s--;
            }
            var c = new Uint8Array(s);
            for (t = 0; t < o; t += 4) {
              i = fi[e.charCodeAt(t)];
              n = fi[e.charCodeAt(t + 1)];
              r = fi[e.charCodeAt(t + 2)];
              a = fi[e.charCodeAt(t + 3)];
              c[l++] = (i << 2) | (n >> 4);
              c[l++] = ((15 & n) << 4) | (r >> 2);
              c[l++] = ((3 & r) << 6) | (63 & a);
            }
            return c;
          })(e)
        )
      );
    },
    vi = {
      Courier:
        "eJyFWdtSGzkQ/RXXPO1WmZSBEAJvjnESb8AmGENCKg+ypj3Wohk5ugAmlX9fzUCyW6s+ysuUfVqXvh61Zr4XI1PX1PjiuLg6C05U1Ns/Ojx42TsYHB4eFf3irWn8VNQUB4xMsIpsCwatU1DUSm8T+JpUtW7XP6NShToiEy+0ksOm0nHkIP53b9UDlefKy3Vx7G2gfjFaCyukJzundu74wVNTUnlhatE8a/XmjXkojr/s7O33d/YOBv3D3YP+68HB136xiEOtVg2dG6e8Mk1xvLM7GPxHcLlW8rYh54rjOLO4Iuu6YcVgsP9iMBjELabGK/lkymZrWxt6f8g/e7tHr4/68Xk06J673XOve+53z8PesDRL6s23zlPtepNGGrsxVngqX/R6Q617F+1qrndBjuxdRONu4ziqVE01l2vqHNgtMveiKYUtf0rjwJHYvH/26MGrvX7x6ee/l3uv+sXQydZPtjh+tXfUL07o1/+d3YPDfjH35fvrOHO3+3n1/LN19hl5q2T0x5fvxfWnOL/11zQq4jYiuuFH/38wPUgt6hT/Fkw0dKlTSRPqZevnqkllpdFa2BTfkJVtdiYCUUeRi94BGnQBY9YTlhpNKyQC04RrV3S3zCwdXIrKWFQihdfbzZoY66MpyjCWOC3cOoUfyZoUNQ0TJX/PjPRrS8zYVSxZBlV3zFinHhiQ7jjriPdpoziFpdGGWcNRrYBIt1WcbvotCCYHK0uxDhkzvwVyHVOksWd0H6bQmxQapdBJCo1T6G0KvUuh9yk0SaG/UuhDCp2m0FkKTVNolkLnKfQxhS5SaJ5Clym0SKGrFLpOoU8p9DmFblJoGU+iW/I8bSyjDNTp8zzIKVIpqawMDIuGlrRdPDiYEun4jVeG4ZwlU2MM/zIVxHABU1AMy6WQSqG/U4ihV6aEGW8xVcvQ3oZxZQox3MDQC+P7kEJ3KXSfQgyTbhnS5/MLJMKSO0y78bls9EqX8KgvzT3jZ/50bo9L3fYraQq1XR3Ls1vu7FhpYxV7HoBVZLDxGJeMA7uycarrOmHXwnuzCipKagMooBV3C/9GDFy/YqpjxSR+bORYmilFVXFH2hPOtmJPDUcbO7LE1H7shURlxYYjtdj6E2PFv+5dCpfxcF4KXPQrAEBOWquNU0yhRkv92gTUKT4d+nxqRwdwrY+QwXONS8fkK01MOYO6qoW0XA4vLXEbl8YLyddbGa9axNpv2SqU8SoWG26Gu0NTCRtqLQKzjalik8mwtBSsHVTzCTtkWh5jy1Xs8fim8BQcsDOE8xvUkeSCZncQvL/b3pKpTg32NQhnVo+lGa+yMeWZoE1wPAmknwBJE/IRJRC6z1iDUt0pLps/A82GucoQYNIiN2kLJrnu2oVqhHJLLvg6WWA3CFQMC6BdQBPGeJOTSBDc/SNrqPz5voLZClGOBHkgeL9MswpolKOAUS+zq43QaoBVxxmedMBMBwlRgd21eaSmYgQXYIt3WSNDtkhywiEKqQWKSGjrTcZzl2tjmcVmaPcL4Lc5wEug7QJtEPjM7N5tuNA1OExPNAMpOEQ4oNU6aK82mmkzAzDwEhgYWy2vhC7VirldbTE1TME+Kpcs42yaZU4dLJJAjwbRIAroFDhoAhZq37zFhoF7/ba05pYa9g5kqVIOdL3vQLAnOUYJsar5q8gY5JQFBhnkmRsw4QZ47PklF3gFNvZMhzKCpKCzvOVR6wdPRyQYovYhk5XAwY+oNNDeMxQRdPSgSDm0MzZilm1LgIUnpD0TK8+TtL83GUbEqtXMKw0FNDL5PnOMXF+CDqfj8ZjANiYyo9o8k698Rn7I5vEpCJy3oqRaWEZzyrDCBHhpghLnFGgdnbYWmjkZ2psJKHCTy6gGdE2L38QP+IeQQRXg0mjQc1S5oPJOmGdDN8trXkaW4L52GBCiEVAiQDYvleTCcAIWsllrpiA+BuAX+bTOSodgzSHkaL7nmoF1HjMVMkanPdr7NmsKaAQm2VIAKvj85cZUbbwbw70fwVwasCguhb5W5S+03EH+CIxqsktFl+MTQqEaH4f2O+TXfvGBbHMulG2/Hn/98Q/b2xEO",
      "Courier-Bold":
        "eJyFWdtyGjkQ/RVqnnar8Bb4lpg3jEnCxgEvGDtxKg9iphm01oyILrZxKv++mrGd3az6KC8UnNa0+nrUGr5lI11VVLtskF198FaU1Dns9w9OOkf7/ePDrJu90bWbiorCgpH2RpLZO9WqaCReqZ8lnReJqKTa/SwL8DXJctPs9Lxs4oSS+bAuVVjXC7/tG/lAxYV0+SYbOOOpm402wojckVlQ8+T4wVFdUDHXlaifrTs91Q/Z4PNeMLu7t3/U6746POm+7vW/dLNlWGuUrOlCW+mkrrPBXr/X+4/gciPz25qszQbhyeyKjG2XZb3ewR+9Xi/sMdVO5k+ebHemcaHzW/57p3/y+qQbPk967We//TxoP191hoVeUWexs44q25nUuTZbbYSj4o9OZ6hUZ97osZ05WTJ3AQ37jMOqQtblIt9QG7lWycKJuhCmeJGGhSOxffccyqPj/W728eXX4cFJNxvavAmRyQbH++HnGf34vdc/etXNFq54d50NXh+2X6/C137v+CnQH8gZmYdQfP6WXX8MCppQTYMlditCBL53/wfTQ65EFeNfvQ6erlQsqX21akJc1rGs0EoJE+NbMnlToZFAVEFkQ3iABW2uGH3CUK1ojUTgMWEbjfaWeUp5G6N5aCwRw5vddkOM98EVqRlPrBJ2E8OPZHSM6prJkrtnVrqNIWbtOjQrg8o7Zq2VDwxId5x3xMe0lpzBuVaa0WGpkkCkmgaON/3qBVODpaHQiIybXz3ZliTi3DO2D2PoNIZGMXQWQ+MYehNDb2PoXQxNYujPGHofQ+cx9CGGpjE0i6GLGPorhuYxtIihyxhaxtBVDF3H0McY+hRDNzG0CqfQLTmeNlZBBvr0+TnIKbmUuTS5Z1jUN6xtw8nBtEjLb7wxDOesmB5j+JfpIIYLmIZiWC6GZAz9HUMMvTItzESL6VqG9rZMKGOI4QaGXpjY+xi6i6H7GGKYdMeQPl9foBBW3GHark9Vo5OqgEd9oe+ZOPOnc3NcqmZgiUuomehYnt1xZ8daaSPZ8wBoyb0Jx3jOBLBtGyvbiRNOLXw0Sy+DpNKAAhpxq/gXYhD6NdMda6bwwyTH0kwhypI70p5wdhR7Gjia3JEhpvfDLCRKI7YcqYXJnxgv/g3vSthEhNNSEKIfCQByUkpurWQaNXjqNtqjSfHp0OdLOwSAG31E7h03uLRMvlbEtDPoq0rkhqvhlSFu40I7kfP9VoRLFrH+G7YLcypCQLkJ1delML5SwjPb6DIMmQxL54L1gyq+YIfMyKNNsQ4zHj8UnoMDdoZwfoMqkJxX7A6Cj3czWzLdqcC+GuGM9tCa4RobSp5J2gTnk0D5CVA0Pp1RAqn7hC0o5J3kqvkTsGyY6gwBHlqmHtqBh2x77UI9QimVS75PljgMAjXDEljn0QNjvMlZIAju/pF0NH95VcFshSgnB3Ug+LhMkwYoVKOAUS+T2kZIG2DVcYInLXDTQkKUYHelH6kuGcEcbPE26aRPNklKOEQpNcCQHPp6k4jc5UYbRtkM7T4HcVsAvADWLtEGnq/M9t2G9e2Aw8xEM1CCQ4QDWq28cnKrmDHTAwcvgYNh1HJSqEKumdvVDlPDFOwjU8UyTpZZ4tTBohzYUSMaRAmdggBNgKLmzVsYGLjXbyujb6lm70CGSmnB1PsWJHuSYhQfupq/ioxBTRngkEaRuQEP3ICIPb/kAq/Axo6ZUEaQFFSStxwa/eDpiARDND4kqhIE+BG1Btp7hjKCjh6UKYt2xk7MkmMJ8PCMlGNy5XiSdvc6wYjYtIp5pSGBRTo9Z45R6Asw4bQ8HgrYhEJmTFsk6pWvyPfJOj4HiXNGFFQJw1hOCVaYgChNUOGcA6tD0DZCMSdDczMBDa5TFVWDqWn5i/yB+BByqARcGhx6ziqXVD4Ii2TqZmnLi8AS3L8dGqRoBIzwkM0LmXNpOAOKTNKbKciPBvg8XdZJ6RDoHEKO5meuGdDzmOiQMTrt0d63SVfAIDBJtgIwwaUvN7ps8l1r7v0I5lKPRUEV+rcqfaHlDvJH4FSdVBVCjk8IiXp87Jv/Ib90s/dk6gshTfPv8Zfv/wDUfBK2",
      "Courier-Oblique":
        "eJyFWVtT2zgU/isZP+3OhE5Iy/UtDaHNFhI2IdDS4UGxFUeLbKW6AKHT/77Hhnbb1fnUFw98x9K5fzpyvmZDU1Wy9tlxdnUenChlZ3e//+awc7B32D/Kutmpqf1EVJJeGJpglbQ706VWX4JshEHrX4Wdn4SiUnr7q5jga6nKdaPvXBYqVISMvdAqH9Slpjd3dvuEuFP1KIsL5fN1duxtkN1suBZW5F7auWxWjx69rAtZzEwl6hc73741j9nx553+QXenv9frHr456h729m672YJetVrV8sI45ZWpG0W93k+Cy7XK72rpXHZMK7MraV37WtbrvX7V6/VIxcR4lT87s9naxovOH/mfnd2jw6MuPY967XO3ffbb5+v2edAZFGYpO/Ot87JynXGdG7sxVnhZvOp0Blp3Zs1urjOTTtp7QknbiN4qVF3O87VsQ9huMveiLoQtvkvpxaHYvH+J6d4+Be/j9//e9Pe72cDlTZxsdrzfP+pmJ/LH/zu7ewfdbO6L99e0crf98+rlzybY59JblVM8Pn/Nrj/S+iZeEzLEbQSF4Vv3f7B8zLWoYvxLMOToUseSOlTLJs5lHcsKo7WwMb6RNm/qNRKIikSOogMsaBPG7CesrLVcIRFYJlyzo7tjVungYjSnNhMxvN5u1pLxnlxRhvHEaeHWMfwkrYlRUzNZ8g/Mm35tJfPuipqWQdU9865Tjwwo7znvJB/TWnEG50YbZg8nKwVEuuniWOmXIJgaLK2kPmTcJBJzLVPEuWdsH8TQ2xgaxtBJDI1i6DSG3sXQ+xgax9BfMfQhhs5i6DyGJjE0jaGLGPo7hmYxNI+hyxhaxNBVDF3H0McY+hRDNzG0pJPoTnqeNpYkA336sg5ySq5UrmweGBYNDWk7OjiYFmn5jTeG4Zwl02MM/zIdxHAB01AMy8WQiqF/YoihV6aFmWgxXcvQ3oYJZQwx3MDQCxP7EEP3MfQQQwyTbhnS5+sLFMKSO0zb91PV6JUu4FFfmAcmzvzp3ByXuplX4hJqpjqWZ7fc2bHSxir2PAC75MHSMZ4zAWzbxql27oRTCx/NMiiSVAZQQCNuN/6NGIR+xXTHiil8GuRYmilEWXJH2jPOjmLPA0eTO2kl0/s0C4nSig1HanQJkIwX/4V3KVwiwmkpCNGPBAC51FptnGIalTz1axPQpPh86POlTQHgRh+RB88NLi2Tr7Rk2hn0VSVyy9Xw0kpOcWG8yPl+K+iyJVn/LduFOV3GaOBmuDvUpbCh0iIwakxJQybD0rlg/ZAVX7ADZuQxtljRjMcPhWfggJ0inFdQEckFzWoQfLyb2ZLpTg30GoQzu1Nr0lWWSp5J2hjnU4LyE6BoQjqjEqTuE7agUPeKq+ZPwLJBqjMEWLRILdqCRa69dqEekaktF3yfLHAYBGqGBbAuoAUjrOSECIK7fyQdzb9/r2BUIcrJQR0IPi6TpAEa1Shg1MvkbkO0G2DVUYInHXDTQUJUQLs2T7IuGcEMqHiXdDIkmyQlHKCUWmBIDn29SUTucm0ss9kUaZ+BuM0BXgBrF0hB4Cuz/bbhQjvgMDPRFJTgAOGAVqugvdpoZswMwMFL4CCNWl4JXagVc7vaYmqYAD0qVSyjZJklTh0syoEdNaJBlNAJCNAYbNR8eaOBgfv8trTmTtbsHcjKUjkw9b4DyR6nGCVQV/NXkRGoKQscMigyN2DBDYjYy0cu8Als5JkJZQhJQSd5y6PRD56OSDBA40OiKkGAn1BrIN1TlBF09KBMOaQZOzFNjiXAwxOpPZMrz5O0fzAJRsSmVcwnDQUsMuk5c4RCX4AJp+VxKmBLhcyYNk/UK1+RH5J1fAYS560oZCUsY7lMsMIYRGmMCucMWE1BWwvNnAzNzQQ0uElVVA2mpsVv8gfiI5FDJeBScuglq1xS+SDMk6mbpi0viCW4XzsMSNEQGBEgmxcq59JwAjaySW8mID8G4LN0WSelA7DnAHI0P3NNwT5PiQ4ZodMe6b5LugIGgXGyFYAJPn25MWWT79pw30cwlwYsoq3Qr1XpCy13kD8Bp+rkVhRyfEIo1OOj0PwOedvNPkhbXwhlm1+Pb7/9C/NFF2U=",
      "Courier-BoldOblique":
        "eJyFWdtyGjkQ/RVqnnarcAo7vuE3jEnCxgEvGDtxKg9iRgxaa0ZEF9s4lX/fnrGdTVZ9lBcKTmvU96PW8C0bmqqStc9OsqsPwYlSdnaPDvb6naP+3v5+1s3emNpPRCVpwdAEq6TdOTW6mC61+hpksyBo/euCTrOg89MKUSm9/XUNwddSletGcbOcfo+90Cof1KWmdTu7e4S4N+pBFhfK5+vsxNsgu9lwLazIvbRz2Tw7evCyLmQxM5Won809PTUP2cnnnYOj7s7eQa97fNjvHvd2v3SzBS21WtXywjjllakbRb3eT4LLtcpva+lcdkJPZlfSunZZ1uu9ftXr9UjFxHiVP7my2drGh84f+Z+d3f5xv0uf/V77udt+vm4/jzqDwixlZ751XlauM65zYzfGCi+LV53OQOvOrNnHdWbSSXtHKOkZ0apC1eU8X8s2dO0mcy/qQtjiRUoLh2Lz7jmWB4cUto8vv/Zf97vZwOVNhGx2crhHP8/kj987uxShbO6Ld9fZyfF++/WKvu72Dp/i/EF6q3IKxedv2fVH2qAJ1YQscRtBEfje/R8sH3Itqhj/Ggx5utSxpA7VsglxWceywmgtbIxvpM2bio0EoiKRo/AAC9pcMfsJK2stV0gEHhOu2dHdMk/p4GI0p0YTMbzebtaS8Z5cUYbxxGnh1jH8KK2JUVMzWfL3zEq/tpJZu6JuZVB1x6x16oEB5R3nneRjWivO4Nxow+zhZKWASDcNHCv9GgRTg6WV1IiMm8ReriWJOPeM7YMYOo2hYQydxdAoht7E0NsYehdD4xj6K4bex9B5DH2IoUkMTWPoIob+jqFZDM1j6DKGFjF0FUPXMfQxhj7F0E0MLekQupWep40lyUCfPj8HOSVXKlc2DwyLhoa1HZ0cTIu0/MYbw3DOkukxhn+ZDmK4gGkohuViSMXQPzHE0CvTwky0mK5laG/DhDKGGG5g6IWJfYihuxi6jyGGSbcM6fP1BQphyR2m7fpUNXqlC3jUF+aeiTN/OjfHpW4GlriEmoGO5dktd3astLGKPQ/ALnmwdIznTADbtnGqHTnh1MJHswyKJJUBFNCI241/IwahXzHdsWIKnyY5lmYKUZbckfaEs6PY08DR5E5ayfQ+zUKitGLDkRpdASTjxX/hXQqXiHBaCkL0IwFALrVWG6eYRiVP/doENCk+Hfp8aVMAuNFH5MFzg0vL5CstmXYGfVWJ3HI1vLSSU1wYL3K+3wq6ZUnWf8t2YS4LCig3oYa6FDZUWgRGjSlpyGRYOhesH7LiC3bAjDzGFiua8fih8BwcsFOE8woqIrmgWQ2Cj3czWzLdqYFeg3Bmd2pNusVSyTNJG+N8SlB+AhRNSGdUgtR9whYU6k5x1fwJWDZIdYYADy1SD23BQ669dqEekaktF3yfLHAYBGqGBbAuoAdGWMkZEQR3/0g6mr+8qmBUIcrJQR0IPi6TpAEa1Shg1MvkbkO0G2DVUYInHXDTQUJUQLs2j7IuGcEMqHibdDIkmyQlHKCUWmBIDn29SUTucm0ss9kUaZ+BuM0BXgBrF0hB4CuzfbfhQjvgMDPRFJTgAOGAVqugvdpoZswMwMFL4CCNWl4JXagVc7vaYmqYAD0qVSyjZJklTh0syoEdNaJBlNAJCNAYbNS8eaOBgXv9trTmVtbsHcjKUjkw9b4FyR6nGCVQV/NXkRGoKQscMigyN+CBGxCx55dc4BXYyDMTyhCSgk7ylkejHzwdkWCAxodEVYIAP6LWQLqnKCPo6EGZckgzdmKaHEuAh2dSeyZXnidpf28SjIhNq5hXGgpYZNJz5giFvgATTsvjVMCWCpkxbZ6oV74i3yfr+BwkzltRyEpYxnKZYIUxiNIYFc45sJqCthaaORmamwlocJOqqBpMTYvf5A/ERyKHSsCl5NBzVrmk8kGYJ1M3TVteEEtw/3YYkKIhMCJANi9UzqXhDGxkk95MQH4MwGfpsk5KB2DPAeRofuaagn0eEx0yQqc90n2bdAUMAuNkKwATfPpyY8om37Xh3o9gLg1YRFuhf6vSF1ruIH8ETtXJrSjk+IRQqMdHofkf8ks3ey9tfSGUbf49/vL9XxrnGMA=",
      Helvetica:
        "",
      "Helvetica-Bold":
        "",
      "Helvetica-Oblique":
        "",
      "Helvetica-BoldOblique":
        "",
      "Times-Roman":
        "",
      "Times-Bold":
        "",
      "Times-Italic":
        "",
      "Times-BoldItalic":
        "",
      Symbol:
        "eJx9WFlv2zgQ/iuGnnYBt5DkS85bmk13g27SoEkPbNEHWqIlIhSpklSuov99R7JIkSLtFyGZjxzN8c0h/4oueF1jpqKz6Mt1K1GJZ4s4S+PZYrvdbqJ59J4zdYNqDAfuXuodp52spdSToZrQl6n0KyZl1Sm/xgVpa5BcKURJfs5KCgdj+F++J8+4uCUqr6IzJVo8jy4qJFCusLjD3d27BucE0cGYd+/4c3T2/U2SxfM36XYxT+JtDI8k/jGPPrMCC0oYvuWSKMJZdPYmiWMLuK9I/sCwlNHZCuRfsJD9sSiOk7dxnMFbbrgieefGBW9eROfA7I/8z1myzVbz7rnpn9vuCW/unpvZecF3eHb3IhWu5eyK5Vw0XCCFi7ezc0pnvRo5E1hi8QhCeM0lHCoIK+/yCvdR67zrfd2THPA7VfzzNTrbpv2fX+BPeH8fm2usBMnBg++/oq/forO08+QGNMgGgeG/5wfxYrE4iPFzTlFt5JtkkLeMPIL/EFoNreJBE2vrXReako3YcqvVEXCTKWJdzPS7Gizyjk/mZZvsAKC66d7FCgMtF4NC2eaVqpDyLW+QwIzi/TGoD6tvPQL7BJEPNVKVb39DW2mkJnY5FALyD9eEhU6DL4SPrqTaS0mRrHyDXrHgvpQz7AvVU+CkqgQOnN3zVgSkkFVfKslzQIgfMfPFOBxWRiyDjcs5p5wFIoFr4kImprQrP59WP1ubiVpcCgxlNLq5XC4PwM8Wy77EvSs5ZyU0EpuFaXqAzmlTjVlerzcH8TuskH/4oiLj0WQQ/oWpdXadJAfxZSOJ7exmPfD01lYSD8K/kU0288JLS7Mh+hW337dINCPA5MRX8QE1jXU8Wx/E/6J6V4zyLBtCdd36Km4Cso+QTOG4N6T5dvRusxxsu6/scK5Wgw2fKovZ20HxHSnrQDjv0WjEejvw7/MkxmMD6ZQkvnEfa1xayperg/ibZfN2kN1K4lvxHw4lZAfD6QErpy1lOt2QF4H3XATa8HDP7VnrVWY6SoNZQfKWokBRt90Ak7mt2GACwTVE8bNPE+Tw3VTIzkmQqRuLqsvtUGaFw3cTcjzJxSod3tjYSnQgS4fvpgyc8KaDZuLwXR8FtYlv8YPD9rHBuGxfbQYG1q1vL2v9+3zC9nF0EF+BqoLBFBbbjRfSYbsJprLYboxtpx1Fj23esXoMhqlx7rB9uR2OPxP/aCMDmX61/Vhm8cha7HA91bzbWUR1z0/m8tLUKSyJ1qWNHqeXrTUf16lb76Or6XIzTmWFA4mHyeLOkUS3+H23UpJQPAnbE0bUS2CSUi6IdWM13Mhpu/OlBUE1t/YbA1QYCeWLYVsrRh+SeDm0RCQEf9pxa3Xpds4RcpJhqNVDbXPkzqTpOJcK/mT1VO17gUtn57C3J3cpMlUucW77Px3hRwZ83VJFGvriJ6YRHJboLmnWPUNXWAC7FbQg+/0IrjUL4RMFBxhYkEdSBLxiXB0xD8TkEZorywPXoP0I/jxhXGzWKEoJUFgeiTvs3srq2eO9Hq2Aeq92S9eDIgeYwIeawKoVY+KyVOumuBmpY0r+CgrgQVn7ohl9n6aIoc4TJjB0lEDWvmaGa05ETrGfPRd3lm1jI64b9SKtBJlbhAFTgEhuqWoUvlhCFdwRBW613cNWqnGYyDAdj+OQfdnugpBWHUa14jAKbbN2tlDrfR6mXUT9p7F3peyGvHNBb0UCl933GHgmyN6Hc/0R6+KZxiG7Ba6ReJjg6RiAos0DpTRsHWNz1s284Mr58DI+UF52N8B7vyIGzP4+nGJcWLXiNMtiR0/0S0BPtExAj3ZNwE42zh11e6duTZS/YlZaK6DebfrkOsb4aURMnsqiA+viHpPowDrwsoX1y6moRTZ20cMXtmpOgFYf8sGd8kFrRw4ptuCQagu2lJvwmpXEUu2DNSlOoEf12vY4aXOZkG6WY8OC4hzrwHRcjVhWepjd4KdYKK7jrx5H89WjRxPWoycydlS3jZ/I2VS/G9yp9gB6PG1T1aY4YAp3LfPHPPqABbtFRHS/jf34/T82FAfb",
      ZapfDingbats:
        "eJxtmNtu20YQhl+F4FULyMGeD7pz3AY1ChtG7NpFA18w1NomIlECSRcxgrx7SVk7+wOdG8H5OJydf2Z2d5gf9cV+t0v9VK/r+6vXsXlOlbHe28paq229qj/t++m62aXZ4J/m8PRb1z9/baZxefK63Z6eXN5dVMvTCh83u277xr/6kLrnl2XNq7TpXnczuZyabdee98/b2VzM/x4/dd/T5qab2pd6PQ2vaVVfvDRD005puE3Lu7eH1HbN9hTjx4/77/X6y5lcnUmjVzHIVVDicVX/1W/SsO36dLMfu6nb9/X6TAoBD+5euvZbn8axXtuZ36dhPJrVQqgPQoh5hev91LWLkIv94W1Ygq9+aX+tZAx2tfz64284/sblN/rqfLP/mqrbt3FKu7G67Nv9cNgPzZQ2H6rz7bb6vLgZq89pTMO/M/xfEqturJpqSM/d7GJIm2oamk3aNcO3av80O5xh3yyKmm1193ZIT02bqovTKjP+MAf++7zsZvZ3276kYyWWXB0z99S18/PbafPHQ71W4fjn/fxnFO+ZvkrT0LVzTr78qB/+nk38bHM9exgP8zr1z9U7jt6840YW5uSJKcZOCaBBnKgm5mU8MVNYyMwWFvO7Ukagkmgg6sDWQ5yFFqjzUrLEaQ3BEmiwNsMSaZS0vgWfOkPHWQowNeTUc0kumnxZvsgPxlGai6VTGUqAVCTQ6QkWnc77DKEiLktSUBJKqHIQZ86d8gCpHYoiEzMsb1ubYy8vW50DChB5ZhGqrijD0EqUIeiaEHIfCg5Kpuu0ApiToaGPSY0uaQsyr65L2oKi1yFt1PLaQ3lzfXTgXodGoJYzglndSLDMPg1sTPJpQJHJigw0QrGERqD9YhyTOgONQDUyuF1zaxuokc/BW2ztXCMrGZ9WMW1oQZHIXWNBkSCfRZEL5BMUiZw6CzVSFCfUSGZFNjIldoKDkonTKQiJIGzWmFd3BizJJ9SINoLDriOfUCOZS+zg+KGD1qGiLNMLxtJD1/ns00ON6EzyUCM6vbxhoBKaqbG3DFQCNiL1iHccBPV0DHhQH/JW8EW90dkyFKGywCJU0WkVSvSGeiSUODWFFD0HYdPQVoiRgfPMA+/nnRgiAyNYSjpWNQcNSMrtFCUH4ZIRpSCWocFCSuhCEY6hoUClc0WC52BJlCYYLQdhN+hygRRRlo5BKRRLS6oihSqh+ZzzRGG1Mo4Iz1LoP0qsxDGFzk0JE42ji0jCPejomJKCuwil4m5CiRMEUMVSzVLDUstSx1Juc0oVWMpqY295qVltmtWmWW2a1aZZbZrVplltmtWmWW2G1WZYbYbVZlhthtVmWG2G1WZYbYbVZlhtltVmWW2W1WZZbZbVZlltltVmWW2W1QYjQCh7E2aAQHeGhCFgPoNoy8KNb2wxBhmGKBxoUZXlLGsLI6AsftEDHV0wIURVbANLcTKlGGBIKPOAxCmhePCKUwFzAmpDFRQvjA9R06Hq8TONvshgKDCuRAZTXigUxjxNFfKRo3CLhnIJBMFRvMZpqpNBMlQJzGT5WFQMVQI/AikPMIhEU1aDjqJvQwmjSHB05cC9jbYwc5UtAHNLhDw41ha+lEqF4JaH3gmB61SYcqInxTDmQK8v08vjqv4zDf1N0w3Lf4A8/vwPpfK11w==",
    };
  !(function (e) {
    e.Courier = "Courier";
    e.CourierBold = "Courier-Bold";
    e.CourierOblique = "Courier-Oblique";
    e.CourierBoldOblique = "Courier-BoldOblique";
    e.Helvetica = "Helvetica";
    e.HelveticaBold = "Helvetica-Bold";
    e.HelveticaOblique = "Helvetica-Oblique";
    e.HelveticaBoldOblique = "Helvetica-BoldOblique";
    e.TimesRoman = "Times-Roman";
    e.TimesRomanBold = "Times-Bold";
    e.TimesRomanItalic = "Times-Italic";
    e.TimesRomanBoldItalic = "Times-BoldItalic";
    e.Symbol = "Symbol";
    e.ZapfDingbats = "ZapfDingbats";
  })(gi || (gi = {}));
  for (
    var bi = {},
      yi = (function () {
        function e() {
          var e = this;
          this.getWidthOfGlyph = function (t) {
            return e.CharWidths[t];
          };
          this.getXAxisKerningForPair = function (t, i) {
            return (e.KernPairXAmounts[t] || {})[i];
          };
        }
        e.load = function (t) {
          var i = bi[t];
          if (i) return i;
          var n = mi(vi[t]),
            r = Object.assign(new e(), JSON.parse(n));
          r.CharWidths = r.CharMetrics.reduce(function (e, t) {
            e[t.N] = t.WX;
            return e;
          }, {});
          r.KernPairXAmounts = r.KernPairs.reduce(function (e, t) {
            var i = t[0],
              n = t[1],
              r = t[2];
            if (!e[i]) e[i] = {};
            e[i][n] = r;
            return e;
          }, {});
          bi[t] = r;
          return r;
        };
        return e;
      })(),
      wi = mi(
        "eJztWsuy48iN/Ret74KZfHtX47meqfGjPHaXx4/wgpJ4JbooUU1JVXXb0f9u4JwESF13R7TD29koIpFi8gCJBHDA/Pvm+nraTuPmZ3/f5HHzs7/k8WlzvXS7fvPXp02eqyR/2vRfd2N3gqhUUfm0Od9P236+DoczxLWK66fNpZ93/fkGWaOy5mnTnUR67c57lRaZSItM/tnN/XnsX/DfIqg0JOk8HI4UK4BCAFzG+xWCQgXF02Y3nU4dJJVKKrx5mPgKBVMImOvYXY+QKJRCoHzXzxMErQrap810hqaloioF1e0L5kvFUwqe23Hu+Q+1TinWeZnuMwSKrRRsL8Nn/kOxlYLtOnzFWE1Viqmu/eceVioVaylYe1OwVKilQD0PCYgiLRtVcJz4kEItW13mNLi0UsCVAB77KyxTKeJKEPff3rsREkVcCeLD3He3HqArBV0J6G/v/fU2cK1WH23l0e3c7T71N9uUVv/c5i73bWlVs1Y0u5/3srO7aQb2EPUB+eUTva0TYgG5mGbbzZSUkJTpn75ygF4PThhq1SMGMds4HYZdN54n/rdWc8rv02bfH9I2hbqGsKbPnIYzHSc0qmTIxI6nuwpiAIQmU8F4Gy7jK8RwntAI1v3wedj39FmFECp508s4zUOyGmwpKrwbL8eOIlVU//Yf/S1J9C212Pa/uuSwbVDYlWzxf/aj/UtfWgm258t1GG1X1BVawfdnX0xdoRbjPCdBVGs1svo3R/tPVD1r2YL3k0kUfC04f9ldLkmk0NVwv+pO232SKXa126/vHAO5wPxNGivsRsZ/HDhWzLVg/iBuOSfMUTGrTX+b/qSIG0H8u+NEl1J4jcD7/XBI9kDcUYN/0/FNCDuNAP64skYOeLrykUsjElWC9+cmAEAB9NtrEijCplaE/YHvKuC5Iup8zxBAWtFrayakC2QC8uCbhggSskx9zXYNQSRkeuZWQBFKQowabNIfS/qeqOgSOFTINcC4DKcnE70H2zqElJAJ3k++dwgrIRPA47J5iCwr724RWELINFBTAAWiCL7SOogrIQj6abWBOH8hCPoL/4a4EoJgn9MWIq40lcY52cJAGbCHMgkpA3g9t7e0sRWgB1HnvjJYRez6yrSTlYJvRZmdCQhe80Pa24roNYL75uLo10WyKYHVeFLjYnImilM0qPDOJOKWNGlFCJsIrw/qsNv7OPY3SnNYSQ9DP46DLHylvGCcEFU08Nz6JIVx9Chd+93ENNhEWroSuC8SAi0WNznNpqH9+c5k1RQ0nIbi9/LnTzdmoKZAaAwaib/0g0Ti29wxG8gUgLey/O8eHmmqt4eiKTNYo416LPrLkcIWa2u06eZ5+mLBXCaoTp4m7pckBm41P8Qe0mUG6DUCYWY/fTmnCQbwkCa2043vrhA2gqakncwM3aGfe9GAj1Vw9qiuzPW2o4Or4PcxhmUu4atwAGKMy8wCscJhiDFfJh1lhY2K6mo250DrTJXOC82EUgVIkTMmOd0moqC5Dd24H15e0hRKJS0Cvg7Xm9RKgz9ErdWrTpfb6zV5Wx2ytwlDZLplUQ/8Ye72Qyq5RI5kqY4t6fe0iHOItdCYbo8zKOi0vLjvjrdjZ2IYRAPUZZ72910SI7vEiL9LaHSvrZFkipKOf02y8gc9vEbmKHQjRP95uH6ShZI9c9pao41otTPLICMETXSC5jLNupbP8bxo2Dy/DOfh9prk8BKNk935MPIo1jiKUSNQqiVSVSozBWYan5nmNMGz1+r6AleO8KJJwXdk2H8XwgVVP31AticBhdvqIZPwNPcvqWhqah74iIB6GsYuvbdGeYFS93yY775hPNh6giUlzNNXr/eaJmNYKrnLKznOt4ZsEQ6f5ZCfWVvJFK2Xs5BcP8ND23r5uJqDyaPmM90Oscl9a87aIC3HLCxz+uOzNFgOhA+P4XRq8hPTjP3Xhzn4oiYIm1svybSpOX03zDuJX4kqyAx3rrKZdZ3XNMggGh9lsUt/Fm+7m+1bGCxqOttPN/fOFiExKh+xnb1d0gz8qiiXmS0r5YxLaaULN/TaOsu4WEgTS3Fd1TCvlsvj9F1/PvQpPzHAZqiN9yZEntcyaDfet0mGOKLl5LGX6EMhU5ZGkf3QnVIWqvJA5FoG7KbLK1BcBcyLTfNYZGr7g8ar+WEWm63VgmSefX/q5k+r6Rplrdo/Heb+q00gKzcWUiVy3pY5RkGL7kept7/zSRS8Uc+Kw+nOV5ukqeu1KqtZ2Ds2a6yrWZghX/NS7q3OwQZ5WM0tgGCBPK7muPM6B2fP8wditayKMKG5YzW7rIvzkJcPs8vKOBGaRJxo+boMocrFfe407G0SJlJS7pO+KOrwqKkAcw4lp28Xi28vU7AM2Lfz9gUITKM8fJlcnoRtlJIvkwsSRtD2kXkuC8M2ytbX08vSME4ZHqd9cTQgojL5hXr60uhDxDJfTy7WQ3kXy2I9q+t+L7V+d3nZD+fDtrtdf7iZ8gPUNhVNSLOdFKmrqgg5UGR5ktUWkERW4ETnYSnQpK5PsqU2k3I5yZbCTGhJki0lmbJ2ypxOd8rYKXM23Slnp6yxclZkVZK1li1EVlMWmY0yyJokC5bIRdYm6sDCW/9X54knZEYnurpKJCEzNtHVdYqTmdGJrm6SiJRMsdWJmTS1MYWuSZwAHg3D5dSJO6tnpqPiNXIHapSQHkL9WNCyDwEZymTtQzyGcfx/rQVukWUP4RgGS29oG5RieEMSVKm67GISoHZUs0g6TKImlZMdbde2cDMFUCZBSBWevKlNIlRrBNQkEVpt0CXUSYTWGvzG1q5TldeFIklgFfiMvQ6tNXgMtk5IM+qSAjbJSpOh4wdUtYnQYgOqxkRosgFVayK02SJsYCJ02tRw9HkVodUG00UTodcG4+UmQrdN0dPhVYR2m8KPBhX1t/bkumgaofzWplwXDT2Oo9K2Lhp6dogUvT+HBpGC98fQxlDs/lSVCr/OVGZ7CGY3lXEIKyD3fylyrQS63P4VjTl0uRkGJxB+l5th2CBS5LkZhg0iRZ6bYdgPUqC5aYMEh8CSmzrsCinU3PRBKkNYyQ0qTgSiSmFQcSAQVAqDimSFmFIYVPaKFGphUNktUqiFQUVaUvLVFbaHSEZK47vC0LNfpOgLQ8+OkaIvDD2SjZbOXWHokWBQgJeGHkmlwaEz9EglKHFKQ48og8qmNPQgJEp0u9LQg4mAjJeGnm0rRV8aeratFH1p6EE8tBnQlYYebSutwLrS0KNrhRZYZegRbpV3dpWhR8tKSU9XGXr2rJTsdJXBTz0ruLjhT00rVaAyBVLTSjWoTIPUs1IVKlOBbSulAV1lOrBzpZS2q0wJNq8yhH7TovIOb1cb5tSXUny14Ut9KUYQUyS1phRgbaDZmEIiFrKThCnpIMMYGrZh0JBo7M01e+H65sZeUpPp6ZsbX4+dcH1xa1YgxYsIAWYF9rXBI1p/L9tiiL6ZmYGtrYpZybaz8caUCA1iA4iIPcEN0ZAQIuq70g2ZPCOQ7R+yE5riIjTojfMRESbsge1zHMhgsSlk5PR4u0WnQDraMOdEE7JTj7dbhAqpw4K3W4wKGZv3eHtempBkA+nHQldgrwXHM1jwCgj0pB7BwlcIbI7BnhbAAmsvHNJgISyw+MIxDRbEAqsvHNRgYSyw/GqZSE0j1l84rMFCWWABhuMaLJgFVmA4sMHCWUi8CRpZQAvkSzizwUJaIE/CoQ0W1ALpEU5tsLDGDzqg6yI0jaKzfxGaRuRBOLjBglsgAcpYHZhG5D04usECXCDdQd0WLMQFshwc6GBBLqQOETSyMBdIa3DMgwW6QD6Dcx4s1AXyDpSRYmoTsrpmzWKQyDJw0GWjTci2GCBZIAtkFDj+wSJZIJPA+Q8WygIJRCQkw8meFCJAsGAWCu8BiNAsjzTAXkKwEBfYg2IQqM3y7EFFauT/ZAcUGlk0DAU7nyzETPeSHBIa1aZmSe4IjWpTsyRphEa1qVmSTFMjU7Mki4ZGreEsSZ+hUWO6s7+bc4/8cdJlaNSYQdjTRbEbM3+c5BgaWTgOSA7stkSLiqFiCwbgLUiHinQX4C1Kh4pEl+BN94oEl+DNdBWJLcH74yS0AG8RPeCjRmRZ3JiR0ZWKrItbW7MmZWVlbG+vSVWxHY2tyW+lJTUy0yEVgdTKmmYlNplKagSDCMFlTIaH8GmVMWkpIj6sMsQv+Ae3UmUIX3AP6q0yRC94x/IOBC84B4+VyhC7yHTIELQRhGgM32hchmAM14hMRCpEMIZrNC6DJvAMWkxl0ASOQYOpDJqACrX+EmgCX9EQ8f3T5stwlggXf/otCfss8O19uvX7LfqmP3Z1AiRPP2JPY2pA/vTbFIhHqhFedB2s0/2v3bIAG1z14yH8CVcvwJFFoePr5cgbDv9/G+Pfvo2BUIP6ix0r8EO9ZYARuKFeMMAIvFA/gWMESqifiTACG9QrBTpCBFGK9wuMQKz0UgJGoH+C7L8xAvPTL40Y4au7gPkfjEAB9SYBRmB/eokAIxA/vT6AETifXh7ACHRPrwroqAFX0i/5GIEmCZb/xQj8Tu8LYARqp5cFMAKr03sCGIHQ6SUBjMDlBMsfMLIP//+HERicXlzACORNsPxJR2iW4I4FRj92EQa8TTuGInY3/vHrMSBwuoPX3TDot4c7osKPXJtBm0XLvsPc0XfRZkHNhxE4nLZsMQJ902/jDOQIkriXkAL7JhEyNh1ZemtZ98IxCZvebeCYZE3AHjkmUdMPGRyTpAm6v3FMgqY3EjgmOdPPZhyTmOlFBIwZxHEPgWNeJ9BbBxyz+af9c45J2PRMcEyyph8EOSZP03PMMTmaXjLgmN0+vWLAMfBpFfeZY7838AVjNilxLYJj4NOy7ZVjUju9zcHxv3/FiVcKULCpf9yGcb9qEOPL/6pp7GyO2cU+S7N2AaOzDMHKBXxO4/goyYBiZ3S7+yxxf0fNKud0r31a0gnddp4+9WfTpHJOt/r4yfIlfVDq5z7dgWABg8amf4SBnLxZQ9A0718keFqMZSGDNurhPoxjf5r84LGeQY/77d0vb3QvyYc1DTrd9nWo56movd196uyqy792faz2prfkJHyAHPiBONTe+kZ2ephrlhb4Ll0HSRfRNOLxqk5onB1LWu4kCPAGRmicIDOZ6j67Ro0T5V2/F6t1lDpTlkz6iMTpspj/JI53H83+jZNmt/+ybY2TZ1lRctmcUldonEDLxLEbGV5aZ9AwRnqAJmydSFu6c2dunU6/8yDIL5Og0+8W67VOp98xsL6kr1H8FglO/W45Uq1z6ncPXto6rX432zlpnVW/e6bAGfXPV0aOmXPqZwcbM+fUzw42Zs6pnx/BxsyJ9fMaV8ycW79fre3c+v1qbefW79+u7QT7/ePazrGf+UE7Zk6wf+Mmi8EJ9ocFQnCC/WGBEJxgf3gDgddNNIp/WC3Mb12i24cHXIEfkcs3FzGDM/UPnnJjcKb+cQXOmfrHFThn6h/fgItO1z8+4IjO2P+0LBOdsX9znHgBKUYn7Id+Pkklvh3TCgtpX9DFhbSvll1I+1t0C3NfTBcX5v4IeSHv5sYxX7g7H86dt+/Wbpw7c+8XsLkz934Bmztz79+AzZ2+9w+4cmfww2ptZ/DDam1n8MPbtZ3GDw9rs9ui3KZPblw4tz8vJiuc208LhMK5/bRAKJzbT28gFE7wp9XCTvCnR1zO8ZeLw7Fwjj8tTlw4x78v0Ern+PcFWukc//4GWulE//6AonSu/7paxrn+zZ2YnRclRK/rBXJsCAjxh2cKEAWVJ02ku/wOoFv2+12XkmnODwHgW4uQGVbZ0uM7mAJ1b/68/JlpUMnWdy5MF6/Vd5eL19YYSPd6FqPwBkNQo/h2NQxdQQ3bn/dpCxrGrqCW7U8rKZl/mfi0Xytk3Am66ZhYbg4y+KAVslDwbXdNL2d5qU5hnYBlTZaa6hs2t1qWdaeeTptcLco+hl5R7w4H5uOGcQbtEkpT18GusOI2xT9dYcVJf7zCSjmbD+Iud2s1NPRb9E+0UICmizb8ZK/+5JOLOulSqwaw5VJr2vB8dSFn89fvv/8H0oq1dA=="
      ),
      xi = JSON.parse(wi),
      ki = function (e, t) {
        var i = this;
        this.canEncodeUnicodeCodePoint = function (e) {
          return (e in i.unicodeMappings);
        };
        this.encodeUnicodeCodePoint = function (e) {
          var t = i.unicodeMappings[e];
          if (!t) {
            var n = String.fromCharCode(e),
              r =
                "0x" +
                (function (e, t, i) {
                  for (var n = "", r = 0, a = 4 - e.length; r < a; r++)
                    n += "0";
                  return n + e;
                })(e.toString(16)),
              a = i.name + ' cannot encode "' + n + '" (' + r + ")";
            throw new Error(a);
          }
          return { code: t[0], name: t[1] };
        };
        this.name = e;
        this.supportedCodePoints = Object.keys(t)
          .map(Number)
          .sort(function (e, t) {
            return e - t;
          });
        this.unicodeMappings = t;
      },
      Ci = {
        Symbol: new ki("Symbol", xi.symbol),
        ZapfDingbats: new ki("ZapfDingbats", xi.zapfdingbats),
        WinAnsi: new ki("WinAnsi", xi.win1252),
      },
      Si = function (e) {
        return Object.keys(e).map(function (t) {
          return e[t];
        });
      },
      _i = Si(gi),
      Ai = function (e) {
        return _i.includes(e);
      },
      Fi = function (e, t) {
        return (
          e.x === t.x &&
          e.y === t.y &&
          e.width === t.width &&
          e.height === t.height
        );
      },
      Ti = function (e) {
        return "`" + e + "`";
      },
      Pi = function (e) {
        return "'" + e + "'";
      },
      Ei = function (e) {
        var t = typeof e;
        if ("string" === t) return Pi(e);
        else if ("undefined" === t) return Ti(e);
        else return e;
      },
      Ii = function (e, t, i) {
        for (var n = new Array(i.length), r = 0, a = i.length; r < a; r++) {
          var s = i[r];
          n[r] = Ei(s);
        }
        var o = n.join(" or ");
        return Ti(t) + " must be one of " + o + ", but was actually " + Ei(e);
      },
      Di = function (e, t, i) {
        if (!Array.isArray(i)) i = Si(i);
        for (var n = 0, r = i.length; n < r; n++) if (e === i[n]) return;
        throw new TypeError(Ii(e, t, i));
      },
      Oi = function (e, t, i) {
        if (!Array.isArray(i)) i = Si(i);
        Di(e, t, i.concat(void 0));
      },
      Ri = function (e, t, i) {
        if (!Array.isArray(i)) i = Si(i);
        for (var n = 0, r = e.length; n < r; n++) Di(e[n], t, i);
      },
      Ni = function (e) {
        if (null === e) return "null";
        if (void 0 === e) return "undefined";
        if ("string" == typeof e) return "string";
        if (isNaN(e)) return "NaN";
        if ("number" == typeof e) return "number";
        if ("boolean" == typeof e) return "boolean";
        if ("symbol" == typeof e) return "symbol";
        if ("bigint" == typeof e) return "bigint";
        if (e.constructor && e.constructor.name) return e.constructor.name;
        if (e.name) return e.name;
        if (e.constructor) return String(e.constructor);
        else return String(e);
      },
      Mi = function (e, t) {
        if ("null" === t) return null === e;
        if ("undefined" === t) return void 0 === e;
        if ("string" === t) return "string" == typeof e;
        if ("number" === t) return "number" == typeof e && !isNaN(e);
        if ("boolean" === t) return "boolean" == typeof e;
        if ("symbol" === t) return "symbol" == typeof e;
        if ("bigint" === t) return "bigint" == typeof e;
        if (t === Date) return e instanceof Date;
        if (t === Array) return e instanceof Array;
        if (t === Uint8Array) return e instanceof Uint8Array;
        if (t === ArrayBuffer) return e instanceof ArrayBuffer;
        if (t === Function) return e instanceof Function;
        else return e instanceof t[0];
      },
      Bi = function (e, t, i) {
        for (var n = new Array(i.length), r = 0, a = i.length; r < a; r++) {
          var s = i[r];
          if ("null" === s) n[r] = Ti("null");
          if ("undefined" === s) n[r] = Ti("undefined");
          if ("string" === s) n[r] = Ti("string");
          else if ("number" === s) n[r] = Ti("number");
          else if ("boolean" === s) n[r] = Ti("boolean");
          else if ("symbol" === s) n[r] = Ti("symbol");
          else if ("bigint" === s) n[r] = Ti("bigint");
          else if (s === Array) n[r] = Ti("Array");
          else if (s === Uint8Array) n[r] = Ti("Uint8Array");
          else if (s === ArrayBuffer) n[r] = Ti("ArrayBuffer");
          else n[r] = Ti(s[1]);
        }
        var o = n.join(" or ");
        return (
          Ti(t) +
          " must be of type " +
          o +
          ", but was actually of type " +
          Ti(Ni(e))
        );
      },
      Li = function (e, t, i) {
        for (var n = 0, r = i.length; n < r; n++) if (Mi(e, i[n])) return;
        throw new TypeError(Bi(e, t, i));
      },
      Ui = function (e, t, i) {
        Li(e, t, i.concat("undefined"));
      },
      zi = function (e, t, i) {
        for (var n = 0, r = e.length; n < r; n++) Li(e[n], t, i);
      },
      ji = function (e, t, i, n) {
        Li(e, t, ["number"]);
        Li(i, "min", ["number"]);
        Li(n, "max", ["number"]);
        n = Math.max(i, n);
        if (e < i || e > n)
          throw new Error(
            Ti(t) +
              " must be at least " +
              i +
              " and at most " +
              n +
              ", but was actually " +
              e
          );
      },
      qi = function (e, t, i, n) {
        Li(e, t, ["number", "undefined"]);
        if ("number" == typeof e) ji(e, t, i, n);
      },
      Hi = function (e, t, i) {
        Li(e, t, ["number"]);
        if (e % i != 0)
          throw new Error(
            Ti(t) + " must be a multiple of " + i + ", but was actually " + e
          );
      },
      Wi = function (e, t) {
        if (!Number.isInteger(e))
          throw new Error(Ti(t) + " must be an integer, but was actually " + e);
      },
      Gi = function (e, t) {
        if (![1, 0].includes(Math.sign(e)))
          throw new Error(
            Ti(t) + " must be a positive number or 0, but was actually " + e
          );
      },
      Vi = new Uint16Array(256),
      Xi = 0;
    Xi < 256;
    Xi++
  )
    Vi[Xi] = Xi;
  Vi[22] = g("");
  Vi[24] = g("˘");
  Vi[25] = g("ˇ");
  Vi[26] = g("ˆ");
  Vi[27] = g("˙");
  Vi[28] = g("˝");
  Vi[29] = g("˛");
  Vi[30] = g("˚");
  Vi[31] = g("˜");
  Vi[127] = g("�");
  Vi[128] = g("•");
  Vi[129] = g("†");
  Vi[130] = g("‡");
  Vi[131] = g("…");
  Vi[132] = g("—");
  Vi[133] = g("–");
  Vi[134] = g("ƒ");
  Vi[135] = g("⁄");
  Vi[136] = g("‹");
  Vi[137] = g("›");
  Vi[138] = g("−");
  Vi[139] = g("‰");
  Vi[140] = g("„");
  Vi[141] = g("“");
  Vi[142] = g("”");
  Vi[143] = g("‘");
  Vi[144] = g("’");
  Vi[145] = g("‚");
  Vi[146] = g("™");
  Vi[147] = g("ﬁ");
  Vi[148] = g("ﬂ");
  Vi[149] = g("Ł");
  Vi[150] = g("Œ");
  Vi[151] = g("Š");
  Vi[152] = g("Ÿ");
  Vi[153] = g("Ž");
  Vi[154] = g("ı");
  Vi[155] = g("ł");
  Vi[156] = g("œ");
  Vi[157] = g("š");
  Vi[158] = g("ž");
  Vi[159] = g("�");
  Vi[160] = g("€");
  Vi[173] = g("�");
  var Ki,
    Yi = function (e) {
      for (var t = new Array(e.length), i = 0, n = e.length; i < n; i++)
        t[i] = Vi[e[i]];
      return String.fromCodePoint.apply(String, t);
    },
    Zi = (function () {
      function e(e) {
        this.populate = e;
        this.value = void 0;
      }
      e.prototype.getValue = function () {
        return this.value;
      };
      e.prototype.access = function () {
        if (!this.value) this.value = this.populate();
        return this.value;
      };
      e.prototype.invalidate = function () {
        this.value = void 0;
      };
      e.populatedBy = function (t) {
        return new e(t);
      };
      return e;
    })(),
    Ji = (function (e) {
      i(t, e);
      function t(t, i) {
        var n = "Method " + t + "." + i + "() not implemented";
        return e.call(this, n) || this;
      }
      return t;
    })(Error),
    $i = (function (e) {
      i(t, e);
      function t(t) {
        var i = "Cannot construct " + t + " - it has a private constructor";
        return e.call(this, i) || this;
      }
      return t;
    })(Error),
    Qi = (function (e) {
      i(t, e);
      function t(t, i) {
        var n = function (e) {
            var t, i;
            return null !== (t = null == e ? void 0 : e.name) && void 0 !== t
              ? t
              : null === (i = null == e ? void 0 : e.constructor) ||
                void 0 === i
              ? void 0
              : i.name;
          },
          r =
            "Expected instance of " +
            (Array.isArray(t) ? t.map(n) : [n(t)]).join(" or ") +
            ", but got instance of " +
            (i ? n(i) : i);
        return e.call(this, r) || this;
      }
      return t;
    })(Error),
    en = (function (e) {
      i(t, e);
      function t(t) {
        var i = t + " stream encoding not supported";
        return e.call(this, i) || this;
      }
      return t;
    })(Error),
    tn = (function (e) {
      i(t, e);
      function t(t, i) {
        var n = "Cannot call " + t + "." + i + "() more than once";
        return e.call(this, n) || this;
      }
      return t;
    })(Error),
    nn = (function (e) {
      i(t, e);
      function t(t) {
        var i = "Missing catalog (ref=" + t + ")";
        return e.call(this, i) || this;
      }
      return t;
    })(Error),
    rn = (function (e) {
      i(t, e);
      function t() {
        return e.call(this, "Can't embed page with missing Contents") || this;
      }
      return t;
    })(Error),
    an = (function (e) {
      i(t, e);
      function t(t) {
        var i,
          n,
          r,
          a =
            "Unrecognized stream type: " +
            (null !==
              (r =
                null !==
                  (n =
                    null === (i = null == t ? void 0 : t.contructor) ||
                    void 0 === i
                      ? void 0
                      : i.name) && void 0 !== n
                  ? n
                  : null == t
                  ? void 0
                  : t.name) && void 0 !== r
              ? r
              : t);
        return e.call(this, a) || this;
      }
      return t;
    })(Error),
    sn = (function (e) {
      i(t, e);
      function t() {
        return (
          e.call(
            this,
            "Found mismatched contexts while embedding pages. All pages in the array passed to `PDFDocument.embedPages()` must be from the same document."
          ) || this
        );
      }
      return t;
    })(Error),
    on = (function (e) {
      i(t, e);
      function t(t) {
        var i =
          "Attempted to convert PDFArray with " +
          t +
          " elements to rectangle, but must have exactly 4 elements.";
        return e.call(this, i) || this;
      }
      return t;
    })(Error),
    ln = (function (e) {
      i(t, e);
      function t(t) {
        var i =
          'Attempted to convert "' +
          t +
          '" to a date, but it does not match the PDF date string format.';
        return e.call(this, i) || this;
      }
      return t;
    })(Error),
    cn = (function (e) {
      i(t, e);
      function t(t, i) {
        var n =
          "Invalid targetIndex specified: targetIndex=" +
          t +
          " must be less than Count=" +
          i;
        return e.call(this, n) || this;
      }
      return t;
    })(Error),
    hn = (function (e) {
      i(t, e);
      function t(t, i) {
        var n =
          "Failed to " +
          i +
          " at targetIndex=" +
          t +
          " due to corrupt page tree: It is likely that one or more 'Count' entries are invalid";
        return e.call(this, n) || this;
      }
      return t;
    })(Error),
    un = (function (e) {
      i(t, e);
      function t(t, i, n) {
        var r =
          "index should be at least " +
          i +
          " and at most " +
          n +
          ", but was actually " +
          t;
        return e.call(this, r) || this;
      }
      return t;
    })(Error),
    dn = (function (e) {
      i(t, e);
      function t() {
        return e.call(this, "Attempted to set invalid field value") || this;
      }
      return t;
    })(Error),
    fn = (function (e) {
      i(t, e);
      function t() {
        return (
          e.call(
            this,
            "Attempted to select multiple values for single-select field"
          ) || this
        );
      }
      return t;
    })(Error),
    pn = (function (e) {
      i(t, e);
      function t(t) {
        var i = "No /DA (default appearance) entry found for field: " + t;
        return e.call(this, i) || this;
      }
      return t;
    })(Error),
    gn = (function (e) {
      i(t, e);
      function t(t) {
        var i = "No Tf operator found for DA of field: " + t;
        return e.call(this, i) || this;
      }
      return t;
    })(Error),
    mn = (function (e) {
      i(t, e);
      function t(t, i) {
        var n =
          "Failed to parse number (line:" +
          t.line +
          " col:" +
          t.column +
          " offset=" +
          t.offset +
          '): "' +
          i +
          '"';
        return e.call(this, n) || this;
      }
      return t;
    })(Error),
    vn = (function (e) {
      i(t, e);
      function t(t, i) {
        var n =
          "Failed to parse PDF document (line:" +
          t.line +
          " col:" +
          t.column +
          " offset=" +
          t.offset +
          "): " +
          i;
        return e.call(this, n) || this;
      }
      return t;
    })(Error),
    bn = (function (e) {
      i(t, e);
      function t(t, i, n) {
        var r = "Expected next byte to be " + i + " but it was actually " + n;
        return e.call(this, t, r) || this;
      }
      return t;
    })(vn),
    yn = (function (e) {
      i(t, e);
      function t(t, i) {
        var n =
          "Failed to parse PDF object starting with the following byte: " + i;
        return e.call(this, t, n) || this;
      }
      return t;
    })(vn),
    wn = (function (e) {
      i(t, e);
      function t(t) {
        return e.call(this, t, "Failed to parse invalid PDF object") || this;
      }
      return t;
    })(vn),
    xn = (function (e) {
      i(t, e);
      function t(t) {
        return e.call(this, t, "Failed to parse PDF stream") || this;
      }
      return t;
    })(vn),
    kn = (function (e) {
      i(t, e);
      function t(t) {
        return (
          e.call(
            this,
            t,
            "Failed to parse PDF literal string due to unbalanced parenthesis"
          ) || this
        );
      }
      return t;
    })(vn),
    Cn = (function (e) {
      i(t, e);
      function t(t) {
        return e.call(this, t, "Parser stalled") || this;
      }
      return t;
    })(vn),
    Sn = (function (e) {
      i(t, e);
      function t(t) {
        return e.call(this, t, "No PDF header found") || this;
      }
      return t;
    })(vn),
    _n = (function (e) {
      i(t, e);
      function t(t, i) {
        var n = "Did not find expected keyword '" + z(i) + "'";
        return e.call(this, t, n) || this;
      }
      return t;
    })(vn);
  !(function (e) {
    e[(e.Null = 0)] = "Null";
    e[(e.Backspace = 8)] = "Backspace";
    e[(e.Tab = 9)] = "Tab";
    e[(e.Newline = 10)] = "Newline";
    e[(e.FormFeed = 12)] = "FormFeed";
    e[(e.CarriageReturn = 13)] = "CarriageReturn";
    e[(e.Space = 32)] = "Space";
    e[(e.ExclamationPoint = 33)] = "ExclamationPoint";
    e[(e.Hash = 35)] = "Hash";
    e[(e.Percent = 37)] = "Percent";
    e[(e.LeftParen = 40)] = "LeftParen";
    e[(e.RightParen = 41)] = "RightParen";
    e[(e.Plus = 43)] = "Plus";
    e[(e.Minus = 45)] = "Minus";
    e[(e.Dash = 45)] = "Dash";
    e[(e.Period = 46)] = "Period";
    e[(e.ForwardSlash = 47)] = "ForwardSlash";
    e[(e.Zero = 48)] = "Zero";
    e[(e.One = 49)] = "One";
    e[(e.Two = 50)] = "Two";
    e[(e.Three = 51)] = "Three";
    e[(e.Four = 52)] = "Four";
    e[(e.Five = 53)] = "Five";
    e[(e.Six = 54)] = "Six";
    e[(e.Seven = 55)] = "Seven";
    e[(e.Eight = 56)] = "Eight";
    e[(e.Nine = 57)] = "Nine";
    e[(e.LessThan = 60)] = "LessThan";
    e[(e.GreaterThan = 62)] = "GreaterThan";
    e[(e.A = 65)] = "A";
    e[(e.D = 68)] = "D";
    e[(e.E = 69)] = "E";
    e[(e.F = 70)] = "F";
    e[(e.O = 79)] = "O";
    e[(e.P = 80)] = "P";
    e[(e.R = 82)] = "R";
    e[(e.LeftSquareBracket = 91)] = "LeftSquareBracket";
    e[(e.BackSlash = 92)] = "BackSlash";
    e[(e.RightSquareBracket = 93)] = "RightSquareBracket";
    e[(e.a = 97)] = "a";
    e[(e.b = 98)] = "b";
    e[(e.d = 100)] = "d";
    e[(e.e = 101)] = "e";
    e[(e.f = 102)] = "f";
    e[(e.i = 105)] = "i";
    e[(e.j = 106)] = "j";
    e[(e.l = 108)] = "l";
    e[(e.m = 109)] = "m";
    e[(e.n = 110)] = "n";
    e[(e.o = 111)] = "o";
    e[(e.r = 114)] = "r";
    e[(e.s = 115)] = "s";
    e[(e.t = 116)] = "t";
    e[(e.u = 117)] = "u";
    e[(e.x = 120)] = "x";
    e[(e.LeftCurly = 123)] = "LeftCurly";
    e[(e.RightCurly = 125)] = "RightCurly";
    e[(e.Tilde = 126)] = "Tilde";
  })(Ki || (Ki = {}));
  var An = Ki,
    Fn = pe(function (e, t) {
      var i =
        "undefined" != typeof Uint8Array &&
        "undefined" != typeof Uint16Array &&
        "undefined" != typeof Int32Array;
      function n(e, t) {
        return Object.prototype.hasOwnProperty.call(e, t);
      }
      t.assign = function (e) {
        for (var t = Array.prototype.slice.call(arguments, 1); t.length; ) {
          var i = t.shift();
          if (i) {
            if ("object" != typeof i)
              throw new TypeError(i + "must be non-object");
            for (var r in i) if (n(i, r)) e[r] = i[r];
          }
        }
        return e;
      };
      t.shrinkBuf = function (e, t) {
        if (e.length === t) return e;
        if (e.subarray) return e.subarray(0, t);
        e.length = t;
        return e;
      };
      var r = {
          arraySet: function (e, t, i, n, r) {
            if (!t.subarray || !e.subarray)
              for (var a = 0; a < n; a++) e[r + a] = t[i + a];
            else e.set(t.subarray(i, i + n), r);
          },
          flattenChunks: function (e) {
            var t, i, n, r, a, s;
            n = 0;
            for (t = 0, i = e.length; t < i; t++) n += e[t].length;
            s = new Uint8Array(n);
            r = 0;
            for (t = 0, i = e.length; t < i; t++) {
              a = e[t];
              s.set(a, r);
              r += a.length;
            }
            return s;
          },
        },
        a = {
          arraySet: function (e, t, i, n, r) {
            for (var a = 0; a < n; a++) e[r + a] = t[i + a];
          },
          flattenChunks: function (e) {
            return [].concat.apply([], e);
          },
        };
      t.setTyped = function (e) {
        if (e) {
          t.Buf8 = Uint8Array;
          t.Buf16 = Uint16Array;
          t.Buf32 = Int32Array;
          t.assign(t, r);
        } else {
          t.Buf8 = Array;
          t.Buf16 = Array;
          t.Buf32 = Array;
          t.assign(t, a);
        }
      };
      t.setTyped(i);
    });
  function Tn(e) {
    for (var t = e.length; --t >= 0; ) e[t] = 0;
  }
  var Pn = [
      0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5,
      5, 5, 5, 0,
    ],
    En = [
      0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10,
      11, 11, 12, 12, 13, 13,
    ],
    In = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7],
    Dn = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15],
    On = new Array(576);
  Tn(On);
  var Rn = new Array(60);
  Tn(Rn);
  var Nn = new Array(512);
  Tn(Nn);
  var Mn = new Array(256);
  Tn(Mn);
  var Bn = new Array(29);
  Tn(Bn);
  var Ln,
    Un,
    zn,
    jn = new Array(30);
  Tn(jn);
  function qn(e, t, i, n, r) {
    this.static_tree = e;
    this.extra_bits = t;
    this.extra_base = i;
    this.elems = n;
    this.max_length = r;
    this.has_stree = e && e.length;
  }
  function Hn(e, t) {
    this.dyn_tree = e;
    this.max_code = 0;
    this.stat_desc = t;
  }
  function Wn(e) {
    return e < 256 ? Nn[e] : Nn[256 + (e >>> 7)];
  }
  function Gn(e, t) {
    e.pending_buf[e.pending++] = 255 & t;
    e.pending_buf[e.pending++] = (t >>> 8) & 255;
  }
  function Vn(e, t, i) {
    if (e.bi_valid > 16 - i) {
      e.bi_buf |= (t << e.bi_valid) & 65535;
      Gn(e, e.bi_buf);
      e.bi_buf = t >> (16 - e.bi_valid);
      e.bi_valid += i - 16;
    } else {
      e.bi_buf |= (t << e.bi_valid) & 65535;
      e.bi_valid += i;
    }
  }
  function Xn(e, t, i) {
    Vn(e, i[2 * t], i[2 * t + 1]);
  }
  function Kn(e, t) {
    var i = 0;
    do {
      i |= 1 & e;
      e >>>= 1;
      i <<= 1;
    } while (--t > 0);
    return i >>> 1;
  }
  function Yn(e, t, i) {
    var n,
      r,
      a = new Array(16),
      s = 0;
    for (n = 1; n <= 15; n++) a[n] = s = (s + i[n - 1]) << 1;
    for (r = 0; r <= t; r++) {
      var o = e[2 * r + 1];
      if (0 !== o) e[2 * r] = Kn(a[o]++, o);
    }
  }
  function Zn(e) {
    var t;
    for (t = 0; t < 286; t++) e.dyn_ltree[2 * t] = 0;
    for (t = 0; t < 30; t++) e.dyn_dtree[2 * t] = 0;
    for (t = 0; t < 19; t++) e.bl_tree[2 * t] = 0;
    e.dyn_ltree[512] = 1;
    e.opt_len = e.static_len = 0;
    e.last_lit = e.matches = 0;
  }
  function Jn(e) {
    if (e.bi_valid > 8) Gn(e, e.bi_buf);
    else if (e.bi_valid > 0) e.pending_buf[e.pending++] = e.bi_buf;
    e.bi_buf = 0;
    e.bi_valid = 0;
  }
  function $n(e, t, i, n) {
    var r = 2 * t,
      a = 2 * i;
    return e[r] < e[a] || (e[r] === e[a] && n[t] <= n[i]);
  }
  function Qn(e, t, i) {
    for (var n = e.heap[i], r = i << 1; r <= e.heap_len; ) {
      if (r < e.heap_len && $n(t, e.heap[r + 1], e.heap[r], e.depth)) r++;
      if ($n(t, n, e.heap[r], e.depth)) break;
      e.heap[i] = e.heap[r];
      i = r;
      r <<= 1;
    }
    e.heap[i] = n;
  }
  function er(e, t, i) {
    var n,
      r,
      a,
      s,
      o = 0;
    if (0 !== e.last_lit)
      do {
        n =
          (e.pending_buf[e.d_buf + 2 * o] << 8) |
          e.pending_buf[e.d_buf + 2 * o + 1];
        r = e.pending_buf[e.l_buf + o];
        o++;
        if (0 === n) Xn(e, r, t);
        else {
          Xn(e, (a = Mn[r]) + 256 + 1, t);
          if (0 !== (s = Pn[a])) Vn(e, (r -= Bn[a]), s);
          Xn(e, (a = Wn(--n)), i);
          if (0 !== (s = En[a])) Vn(e, (n -= jn[a]), s);
        }
      } while (o < e.last_lit);
    Xn(e, 256, t);
  }
  function tr(e, t) {
    var i,
      n,
      r,
      a = t.dyn_tree,
      s = t.stat_desc.static_tree,
      o = t.stat_desc.has_stree,
      l = t.stat_desc.elems,
      c = -1;
    e.heap_len = 0;
    e.heap_max = 573;
    for (i = 0; i < l; i++)
      if (0 !== a[2 * i]) {
        e.heap[++e.heap_len] = c = i;
        e.depth[i] = 0;
      } else a[2 * i + 1] = 0;
    for (; e.heap_len < 2; ) {
      a[2 * (r = e.heap[++e.heap_len] = c < 2 ? ++c : 0)] = 1;
      e.depth[r] = 0;
      e.opt_len--;
      if (o) e.static_len -= s[2 * r + 1];
    }
    t.max_code = c;
    for (i = e.heap_len >> 1; i >= 1; i--) Qn(e, a, i);
    r = l;
    do {
      i = e.heap[1];
      e.heap[1] = e.heap[e.heap_len--];
      Qn(e, a, 1);
      n = e.heap[1];
      e.heap[--e.heap_max] = i;
      e.heap[--e.heap_max] = n;
      a[2 * r] = a[2 * i] + a[2 * n];
      e.depth[r] = (e.depth[i] >= e.depth[n] ? e.depth[i] : e.depth[n]) + 1;
      a[2 * i + 1] = a[2 * n + 1] = r;
      e.heap[1] = r++;
      Qn(e, a, 1);
    } while (e.heap_len >= 2);
    e.heap[--e.heap_max] = e.heap[1];
    !(function (e, t) {
      var i,
        n,
        r,
        a,
        s,
        o,
        l = t.dyn_tree,
        c = t.max_code,
        h = t.stat_desc.static_tree,
        u = t.stat_desc.has_stree,
        d = t.stat_desc.extra_bits,
        f = t.stat_desc.extra_base,
        p = t.stat_desc.max_length,
        g = 0;
      for (a = 0; a <= 15; a++) e.bl_count[a] = 0;
      l[2 * e.heap[e.heap_max] + 1] = 0;
      for (i = e.heap_max + 1; i < 573; i++) {
        if ((a = l[2 * l[2 * (n = e.heap[i]) + 1] + 1] + 1) > p) {
          a = p;
          g++;
        }
        l[2 * n + 1] = a;
        if (!(n > c)) {
          e.bl_count[a]++;
          s = 0;
          if (n >= f) s = d[n - f];
          o = l[2 * n];
          e.opt_len += o * (a + s);
          if (u) e.static_len += o * (h[2 * n + 1] + s);
        }
      }
      if (0 !== g) {
        do {
          a = p - 1;
          for (; 0 === e.bl_count[a]; ) a--;
          e.bl_count[a]--;
          e.bl_count[a + 1] += 2;
          e.bl_count[p]--;
          g -= 2;
        } while (g > 0);
        for (a = p; 0 !== a; a--) {
          n = e.bl_count[a];
          for (; 0 !== n; )
            if (!((r = e.heap[--i]) > c)) {
              if (l[2 * r + 1] !== a) {
                e.opt_len += (a - l[2 * r + 1]) * l[2 * r];
                l[2 * r + 1] = a;
              }
              n--;
            }
        }
      }
    })(e, t);
    Yn(a, c, e.bl_count);
  }
  function ir(e, t, i) {
    var n,
      r,
      a = -1,
      s = t[1],
      o = 0,
      l = 7,
      c = 4;
    if (0 === s) {
      l = 138;
      c = 3;
    }
    t[2 * (i + 1) + 1] = 65535;
    for (n = 0; n <= i; n++) {
      r = s;
      s = t[2 * (n + 1) + 1];
      if (!(++o < l && r === s)) {
        if (o < c) e.bl_tree[2 * r] += o;
        else if (0 !== r) {
          if (r !== a) e.bl_tree[2 * r]++;
          e.bl_tree[32]++;
        } else if (o <= 10) e.bl_tree[34]++;
        else e.bl_tree[36]++;
        o = 0;
        a = r;
        if (0 === s) {
          l = 138;
          c = 3;
        } else if (r === s) {
          l = 6;
          c = 3;
        } else {
          l = 7;
          c = 4;
        }
      }
    }
  }
  function nr(e, t, i) {
    var n,
      r,
      a = -1,
      s = t[1],
      o = 0,
      l = 7,
      c = 4;
    if (0 === s) {
      l = 138;
      c = 3;
    }
    for (n = 0; n <= i; n++) {
      r = s;
      s = t[2 * (n + 1) + 1];
      if (!(++o < l && r === s)) {
        if (o < c)
          do {
            Xn(e, r, e.bl_tree);
          } while (0 != --o);
        else if (0 !== r) {
          if (r !== a) {
            Xn(e, r, e.bl_tree);
            o--;
          }
          Xn(e, 16, e.bl_tree);
          Vn(e, o - 3, 2);
        } else if (o <= 10) {
          Xn(e, 17, e.bl_tree);
          Vn(e, o - 3, 3);
        } else {
          Xn(e, 18, e.bl_tree);
          Vn(e, o - 11, 7);
        }
        o = 0;
        a = r;
        if (0 === s) {
          l = 138;
          c = 3;
        } else if (r === s) {
          l = 6;
          c = 3;
        } else {
          l = 7;
          c = 4;
        }
      }
    }
  }
  var rr = !1;
  function ar(e, t, i, n) {
    Vn(e, 0 + (n ? 1 : 0), 3);
    !(function (e, t, i, n) {
      Jn(e);
      if (1) {
        Gn(e, i);
        Gn(e, ~i);
      }
      Fn.arraySet(e.pending_buf, e.window, t, i, e.pending);
      e.pending += i;
    })(e, t, i);
  }
  var sr,
    or = {
      _tr_init: function (e) {
        if (!rr) {
          !(function () {
            var e,
              t,
              i,
              n,
              r,
              a = new Array(16);
            i = 0;
            for (n = 0; n < 28; n++) {
              Bn[n] = i;
              for (e = 0; e < 1 << Pn[n]; e++) Mn[i++] = n;
            }
            Mn[i - 1] = n;
            r = 0;
            for (n = 0; n < 16; n++) {
              jn[n] = r;
              for (e = 0; e < 1 << En[n]; e++) Nn[r++] = n;
            }
            r >>= 7;
            for (; n < 30; n++) {
              jn[n] = r << 7;
              for (e = 0; e < 1 << (En[n] - 7); e++) Nn[256 + r++] = n;
            }
            for (t = 0; t <= 15; t++) a[t] = 0;
            e = 0;
            for (; e <= 143; ) {
              On[2 * e + 1] = 8;
              e++;
              a[8]++;
            }
            for (; e <= 255; ) {
              On[2 * e + 1] = 9;
              e++;
              a[9]++;
            }
            for (; e <= 279; ) {
              On[2 * e + 1] = 7;
              e++;
              a[7]++;
            }
            for (; e <= 287; ) {
              On[2 * e + 1] = 8;
              e++;
              a[8]++;
            }
            Yn(On, 287, a);
            for (e = 0; e < 30; e++) {
              Rn[2 * e + 1] = 5;
              Rn[2 * e] = Kn(e, 5);
            }
            Ln = new qn(On, Pn, 257, 286, 15);
            Un = new qn(Rn, En, 0, 30, 15);
            zn = new qn(new Array(0), In, 0, 19, 7);
          })();
          rr = !0;
        }
        e.l_desc = new Hn(e.dyn_ltree, Ln);
        e.d_desc = new Hn(e.dyn_dtree, Un);
        e.bl_desc = new Hn(e.bl_tree, zn);
        e.bi_buf = 0;
        e.bi_valid = 0;
        Zn(e);
      },
      _tr_stored_block: ar,
      _tr_flush_block: function (e, t, i, n) {
        var r,
          a,
          s = 0;
        if (e.level > 0) {
          if (2 === e.strm.data_type)
            e.strm.data_type = (function (e) {
              var t,
                i = 4093624447;
              for (t = 0; t <= 31; t++, i >>>= 1)
                if (1 & i && 0 !== e.dyn_ltree[2 * t]) return 0;
              if (
                0 !== e.dyn_ltree[18] ||
                0 !== e.dyn_ltree[20] ||
                0 !== e.dyn_ltree[26]
              )
                return 1;
              for (t = 32; t < 256; t++) if (0 !== e.dyn_ltree[2 * t]) return 1;
              return 0;
            })(e);
          tr(e, e.l_desc);
          tr(e, e.d_desc);
          s = (function (e) {
            var t;
            ir(e, e.dyn_ltree, e.l_desc.max_code);
            ir(e, e.dyn_dtree, e.d_desc.max_code);
            tr(e, e.bl_desc);
            for (t = 18; t >= 3 && 0 === e.bl_tree[2 * Dn[t] + 1]; t--);
            e.opt_len += 3 * (t + 1) + 5 + 5 + 4;
            return t;
          })(e);
          r = (e.opt_len + 3 + 7) >>> 3;
          if ((a = (e.static_len + 3 + 7) >>> 3) <= r) r = a;
        } else r = a = i + 5;
        if (i + 4 <= r && -1 !== t) ar(e, t, i, n);
        else if (4 === e.strategy || a === r) {
          Vn(e, 2 + (n ? 1 : 0), 3);
          er(e, On, Rn);
        } else {
          Vn(e, 4 + (n ? 1 : 0), 3);
          !(function (e, t, i, n) {
            var r;
            Vn(e, t - 257, 5);
            Vn(e, i - 1, 5);
            Vn(e, n - 4, 4);
            for (r = 0; r < n; r++) Vn(e, e.bl_tree[2 * Dn[r] + 1], 3);
            nr(e, e.dyn_ltree, t - 1);
            nr(e, e.dyn_dtree, i - 1);
          })(e, e.l_desc.max_code + 1, e.d_desc.max_code + 1, s + 1);
          er(e, e.dyn_ltree, e.dyn_dtree);
        }
        Zn(e);
        if (n) Jn(e);
      },
      _tr_tally: function (e, t, i) {
        e.pending_buf[e.d_buf + 2 * e.last_lit] = (t >>> 8) & 255;
        e.pending_buf[e.d_buf + 2 * e.last_lit + 1] = 255 & t;
        e.pending_buf[e.l_buf + e.last_lit] = 255 & i;
        e.last_lit++;
        if (0 === t) e.dyn_ltree[2 * i]++;
        else {
          e.matches++;
          t--;
          e.dyn_ltree[2 * (Mn[i] + 256 + 1)]++;
          e.dyn_dtree[2 * Wn(t)]++;
        }
        return e.last_lit === e.lit_bufsize - 1;
      },
      _tr_align: function (e) {
        Vn(e, 2, 3);
        Xn(e, 256, On);
        !(function (e) {
          if (16 === e.bi_valid) {
            Gn(e, e.bi_buf);
            e.bi_buf = 0;
            e.bi_valid = 0;
          } else if (e.bi_valid >= 8) {
            e.pending_buf[e.pending++] = 255 & e.bi_buf;
            e.bi_buf >>= 8;
            e.bi_valid -= 8;
          }
        })(e);
      },
    },
    lr = function (e, t, i, n) {
      for (
        var r = (65535 & e) | 0, a = ((e >>> 16) & 65535) | 0, s = 0;
        0 !== i;

      ) {
        i -= s = i > 2e3 ? 2e3 : i;
        do {
          a = (a + (r = (r + t[n++]) | 0)) | 0;
        } while (--s);
        r %= 65521;
        a %= 65521;
      }
      return r | (a << 16) | 0;
    },
    cr = (function () {
      for (var e, t = [], i = 0; i < 256; i++) {
        e = i;
        for (var n = 0; n < 8; n++)
          e = 1 & e ? 3988292384 ^ (e >>> 1) : e >>> 1;
        t[i] = e;
      }
      return t;
    })(),
    hr = function (e, t, i, n) {
      var r = cr,
        a = n + i;
      e ^= -1;
      for (var s = n; s < a; s++) e = (e >>> 8) ^ r[255 & (e ^ t[s])];
      return -1 ^ e;
    },
    ur = {
      2: "need dictionary",
      1: "stream end",
      0: "",
      "-1": "file error",
      "-2": "stream error",
      "-3": "data error",
      "-4": "insufficient memory",
      "-5": "buffer error",
      "-6": "incompatible version",
    },
    dr = -2,
    fr = 258,
    pr = 262,
    gr = 103,
    mr = 113,
    vr = 666;
  function br(e, t) {
    e.msg = ur[t];
    return t;
  }
  function yr(e) {
    return (e << 1) - (e > 4 ? 9 : 0);
  }
  function wr(e) {
    for (var t = e.length; --t >= 0; ) e[t] = 0;
  }
  function xr(e) {
    var t = e.state,
      i = t.pending;
    if (i > e.avail_out) i = e.avail_out;
    if (0 !== i) {
      Fn.arraySet(e.output, t.pending_buf, t.pending_out, i, e.next_out);
      e.next_out += i;
      t.pending_out += i;
      e.total_out += i;
      e.avail_out -= i;
      t.pending -= i;
      if (0 === t.pending) t.pending_out = 0;
    }
  }
  function kr(e, t) {
    or._tr_flush_block(
      e,
      e.block_start >= 0 ? e.block_start : -1,
      e.strstart - e.block_start,
      t
    );
    e.block_start = e.strstart;
    xr(e.strm);
  }
  function Cr(e, t) {
    e.pending_buf[e.pending++] = t;
  }
  function Sr(e, t) {
    e.pending_buf[e.pending++] = (t >>> 8) & 255;
    e.pending_buf[e.pending++] = 255 & t;
  }
  function _r(e, t, i, n) {
    var r = e.avail_in;
    if (r > n) r = n;
    if (0 === r) return 0;
    e.avail_in -= r;
    Fn.arraySet(t, e.input, e.next_in, r, i);
    if (1 === e.state.wrap) e.adler = lr(e.adler, t, r, i);
    else if (2 === e.state.wrap) e.adler = hr(e.adler, t, r, i);
    e.next_in += r;
    e.total_in += r;
    return r;
  }
  function Ar(e, t) {
    var i,
      n,
      r = e.max_chain_length,
      a = e.strstart,
      s = e.prev_length,
      o = e.nice_match,
      l = e.strstart > e.w_size - pr ? e.strstart - (e.w_size - pr) : 0,
      c = e.window,
      h = e.w_mask,
      u = e.prev,
      d = e.strstart + fr,
      f = c[a + s - 1],
      p = c[a + s];
    if (e.prev_length >= e.good_match) r >>= 2;
    if (o > e.lookahead) o = e.lookahead;
    do {
      if (
        c[(i = t) + s] === p &&
        c[i + s - 1] === f &&
        c[i] === c[a] &&
        c[++i] === c[a + 1]
      ) {
        a += 2;
        i++;
        do {} while (
          c[++a] === c[++i] &&
          c[++a] === c[++i] &&
          c[++a] === c[++i] &&
          c[++a] === c[++i] &&
          c[++a] === c[++i] &&
          c[++a] === c[++i] &&
          c[++a] === c[++i] &&
          c[++a] === c[++i] &&
          a < d
        );
        n = fr - (d - a);
        a = d - fr;
        if (n > s) {
          e.match_start = t;
          s = n;
          if (n >= o) break;
          f = c[a + s - 1];
          p = c[a + s];
        }
      }
    } while ((t = u[t & h]) > l && 0 != --r);
    if (s <= e.lookahead) return s;
    else return e.lookahead;
  }
  function Fr(e) {
    var t,
      i,
      n,
      r,
      a,
      s = e.w_size;
    do {
      r = e.window_size - e.lookahead - e.strstart;
      if (e.strstart >= s + (s - pr)) {
        Fn.arraySet(e.window, e.window, s, s, 0);
        e.match_start -= s;
        e.strstart -= s;
        e.block_start -= s;
        t = i = e.hash_size;
        do {
          n = e.head[--t];
          e.head[t] = n >= s ? n - s : 0;
        } while (--i);
        t = i = s;
        do {
          n = e.prev[--t];
          e.prev[t] = n >= s ? n - s : 0;
        } while (--i);
        r += s;
      }
      if (0 === e.strm.avail_in) break;
      i = _r(e.strm, e.window, e.strstart + e.lookahead, r);
      e.lookahead += i;
      if (e.lookahead + e.insert >= 3) {
        a = e.strstart - e.insert;
        e.ins_h = e.window[a];
        e.ins_h = ((e.ins_h << e.hash_shift) ^ e.window[a + 1]) & e.hash_mask;
        for (; e.insert; ) {
          e.ins_h =
            ((e.ins_h << e.hash_shift) ^ e.window[a + 3 - 1]) & e.hash_mask;
          e.prev[a & e.w_mask] = e.head[e.ins_h];
          e.head[e.ins_h] = a;
          a++;
          e.insert--;
          if (e.lookahead + e.insert < 3) break;
        }
      }
    } while (e.lookahead < pr && 0 !== e.strm.avail_in);
  }
  function Tr(e, t) {
    for (var i, n; ; ) {
      if (e.lookahead < pr) {
        Fr(e);
        if (e.lookahead < pr && 0 === t) return 1;
        if (0 === e.lookahead) break;
      }
      i = 0;
      if (e.lookahead >= 3) {
        e.ins_h =
          ((e.ins_h << e.hash_shift) ^ e.window[e.strstart + 3 - 1]) &
          e.hash_mask;
        i = e.prev[e.strstart & e.w_mask] = e.head[e.ins_h];
        e.head[e.ins_h] = e.strstart;
      }
      if (0 !== i && e.strstart - i <= e.w_size - pr) e.match_length = Ar(e, i);
      if (e.match_length >= 3) {
        n = or._tr_tally(e, e.strstart - e.match_start, e.match_length - 3);
        e.lookahead -= e.match_length;
        if (e.match_length <= e.max_lazy_match && e.lookahead >= 3) {
          e.match_length--;
          do {
            e.strstart++;
            e.ins_h =
              ((e.ins_h << e.hash_shift) ^ e.window[e.strstart + 3 - 1]) &
              e.hash_mask;
            i = e.prev[e.strstart & e.w_mask] = e.head[e.ins_h];
            e.head[e.ins_h] = e.strstart;
          } while (0 != --e.match_length);
          e.strstart++;
        } else {
          e.strstart += e.match_length;
          e.match_length = 0;
          e.ins_h = e.window[e.strstart];
          e.ins_h =
            ((e.ins_h << e.hash_shift) ^ e.window[e.strstart + 1]) &
            e.hash_mask;
        }
      } else {
        n = or._tr_tally(e, 0, e.window[e.strstart]);
        e.lookahead--;
        e.strstart++;
      }
      if (n) {
        kr(e, !1);
        if (0 === e.strm.avail_out) return 1;
      }
    }
    e.insert = e.strstart < 2 ? e.strstart : 2;
    if (4 === t) {
      kr(e, !0);
      if (0 === e.strm.avail_out) return 3;
      else return 4;
    }
    if (e.last_lit) {
      kr(e, !1);
      if (0 === e.strm.avail_out) return 1;
    }
    return 2;
  }
  function Pr(e, t) {
    for (var i, n, r; ; ) {
      if (e.lookahead < pr) {
        Fr(e);
        if (e.lookahead < pr && 0 === t) return 1;
        if (0 === e.lookahead) break;
      }
      i = 0;
      if (e.lookahead >= 3) {
        e.ins_h =
          ((e.ins_h << e.hash_shift) ^ e.window[e.strstart + 3 - 1]) &
          e.hash_mask;
        i = e.prev[e.strstart & e.w_mask] = e.head[e.ins_h];
        e.head[e.ins_h] = e.strstart;
      }
      e.prev_length = e.match_length;
      e.prev_match = e.match_start;
      e.match_length = 2;
      if (
        0 !== i &&
        e.prev_length < e.max_lazy_match &&
        e.strstart - i <= e.w_size - pr
      ) {
        e.match_length = Ar(e, i);
        if (
          e.match_length <= 5 &&
          (1 === e.strategy ||
            (3 === e.match_length && e.strstart - e.match_start > 4096))
        )
          e.match_length = 2;
      }
      if (e.prev_length >= 3 && e.match_length <= e.prev_length) {
        r = e.strstart + e.lookahead - 3;
        n = or._tr_tally(e, e.strstart - 1 - e.prev_match, e.prev_length - 3);
        e.lookahead -= e.prev_length - 1;
        e.prev_length -= 2;
        do {
          if (++e.strstart <= r) {
            e.ins_h =
              ((e.ins_h << e.hash_shift) ^ e.window[e.strstart + 3 - 1]) &
              e.hash_mask;
            i = e.prev[e.strstart & e.w_mask] = e.head[e.ins_h];
            e.head[e.ins_h] = e.strstart;
          }
        } while (0 != --e.prev_length);
        e.match_available = 0;
        e.match_length = 2;
        e.strstart++;
        if (n) {
          kr(e, !1);
          if (0 === e.strm.avail_out) return 1;
        }
      } else if (e.match_available) {
        if ((n = or._tr_tally(e, 0, e.window[e.strstart - 1]))) kr(e, !1);
        e.strstart++;
        e.lookahead--;
        if (0 === e.strm.avail_out) return 1;
      } else {
        e.match_available = 1;
        e.strstart++;
        e.lookahead--;
      }
    }
    if (e.match_available) {
      n = or._tr_tally(e, 0, e.window[e.strstart - 1]);
      e.match_available = 0;
    }
    e.insert = e.strstart < 2 ? e.strstart : 2;
    if (4 === t) {
      kr(e, !0);
      if (0 === e.strm.avail_out) return 3;
      else return 4;
    }
    if (e.last_lit) {
      kr(e, !1);
      if (0 === e.strm.avail_out) return 1;
    }
    return 2;
  }
  function Er(e, t, i, n, r) {
    this.good_length = e;
    this.max_lazy = t;
    this.nice_length = i;
    this.max_chain = n;
    this.func = r;
  }
  sr = [
    new Er(0, 0, 0, 0, function (e, t) {
      var i = 65535;
      if (i > e.pending_buf_size - 5) i = e.pending_buf_size - 5;
      for (;;) {
        if (e.lookahead <= 1) {
          Fr(e);
          if (0 === e.lookahead && 0 === t) return 1;
          if (0 === e.lookahead) break;
        }
        e.strstart += e.lookahead;
        e.lookahead = 0;
        var n = e.block_start + i;
        if (0 === e.strstart || e.strstart >= n) {
          e.lookahead = e.strstart - n;
          e.strstart = n;
          kr(e, !1);
          if (0 === e.strm.avail_out) return 1;
        }
        if (e.strstart - e.block_start >= e.w_size - pr) {
          kr(e, !1);
          if (0 === e.strm.avail_out) return 1;
        }
      }
      e.insert = 0;
      if (4 === t) {
        kr(e, !0);
        if (0 === e.strm.avail_out) return 3;
        else return 4;
      }
      if (e.strstart > e.block_start) {
        kr(e, !1);
        if (0 === e.strm.avail_out) return 1;
      }
      return 1;
    }),
    new Er(4, 4, 8, 4, Tr),
    new Er(4, 5, 16, 8, Tr),
    new Er(4, 6, 32, 32, Tr),
    new Er(4, 4, 16, 16, Pr),
    new Er(8, 16, 32, 32, Pr),
    new Er(8, 16, 128, 128, Pr),
    new Er(8, 32, 128, 256, Pr),
    new Er(32, 128, 258, 1024, Pr),
    new Er(32, 258, 258, 4096, Pr),
  ];
  function Ir() {
    this.strm = null;
    this.status = 0;
    this.pending_buf = null;
    this.pending_buf_size = 0;
    this.pending_out = 0;
    this.pending = 0;
    this.wrap = 0;
    this.gzhead = null;
    this.gzindex = 0;
    this.method = 8;
    this.last_flush = -1;
    this.w_size = 0;
    this.w_bits = 0;
    this.w_mask = 0;
    this.window = null;
    this.window_size = 0;
    this.prev = null;
    this.head = null;
    this.ins_h = 0;
    this.hash_size = 0;
    this.hash_bits = 0;
    this.hash_mask = 0;
    this.hash_shift = 0;
    this.block_start = 0;
    this.match_length = 0;
    this.prev_match = 0;
    this.match_available = 0;
    this.strstart = 0;
    this.match_start = 0;
    this.lookahead = 0;
    this.prev_length = 0;
    this.max_chain_length = 0;
    this.max_lazy_match = 0;
    this.level = 0;
    this.strategy = 0;
    this.good_match = 0;
    this.nice_match = 0;
    this.dyn_ltree = new Fn.Buf16(1146);
    this.dyn_dtree = new Fn.Buf16(122);
    this.bl_tree = new Fn.Buf16(78);
    wr(this.dyn_ltree);
    wr(this.dyn_dtree);
    wr(this.bl_tree);
    this.l_desc = null;
    this.d_desc = null;
    this.bl_desc = null;
    this.bl_count = new Fn.Buf16(16);
    this.heap = new Fn.Buf16(573);
    wr(this.heap);
    this.heap_len = 0;
    this.heap_max = 0;
    this.depth = new Fn.Buf16(573);
    wr(this.depth);
    this.l_buf = 0;
    this.lit_bufsize = 0;
    this.last_lit = 0;
    this.d_buf = 0;
    this.opt_len = 0;
    this.static_len = 0;
    this.matches = 0;
    this.insert = 0;
    this.bi_buf = 0;
    this.bi_valid = 0;
  }
  function Dr(e) {
    var t;
    if (!e || !e.state) return br(e, dr);
    e.total_in = e.total_out = 0;
    e.data_type = 2;
    (t = e.state).pending = 0;
    t.pending_out = 0;
    if (t.wrap < 0) t.wrap = -t.wrap;
    t.status = t.wrap ? 42 : mr;
    e.adler = 2 === t.wrap ? 0 : 1;
    t.last_flush = 0;
    or._tr_init(t);
    return 0;
  }
  function Or(e) {
    var t = Dr(e);
    if (0 === t)
      !(function (e) {
        e.window_size = 2 * e.w_size;
        wr(e.head);
        e.max_lazy_match = sr[e.level].max_lazy;
        e.good_match = sr[e.level].good_length;
        e.nice_match = sr[e.level].nice_length;
        e.max_chain_length = sr[e.level].max_chain;
        e.strstart = 0;
        e.block_start = 0;
        e.lookahead = 0;
        e.insert = 0;
        e.match_length = e.prev_length = 2;
        e.match_available = 0;
        e.ins_h = 0;
      })(e.state);
    return t;
  }
  function Rr(e, t, i, n, r, a) {
    if (!e) return dr;
    var s = 1;
    if (-1 === t) t = 6;
    if (n < 0) {
      s = 0;
      n = -n;
    } else if (n > 15) {
      s = 2;
      n -= 16;
    }
    if (
      r < 1 ||
      r > 9 ||
      8 !== i ||
      n < 8 ||
      n > 15 ||
      t < 0 ||
      t > 9 ||
      a < 0 ||
      a > 4
    )
      return br(e, dr);
    if (8 === n) n = 9;
    var o = new Ir();
    e.state = o;
    o.strm = e;
    o.wrap = s;
    o.gzhead = null;
    o.w_bits = n;
    o.w_size = 1 << o.w_bits;
    o.w_mask = o.w_size - 1;
    o.hash_bits = r + 7;
    o.hash_size = 1 << o.hash_bits;
    o.hash_mask = o.hash_size - 1;
    o.hash_shift = ~~((o.hash_bits + 3 - 1) / 3);
    o.window = new Fn.Buf8(2 * o.w_size);
    o.head = new Fn.Buf16(o.hash_size);
    o.prev = new Fn.Buf16(o.w_size);
    o.lit_bufsize = 1 << (r + 6);
    o.pending_buf_size = 4 * o.lit_bufsize;
    o.pending_buf = new Fn.Buf8(o.pending_buf_size);
    o.d_buf = 1 * o.lit_bufsize;
    o.l_buf = 3 * o.lit_bufsize;
    o.level = t;
    o.strategy = a;
    o.method = i;
    return Or(e);
  }
  var Nr = {
      deflateInit: function (e, t) {
        return Rr(e, t, 8, 15, 8, 0);
      },
      deflateInit2: Rr,
      deflateReset: Or,
      deflateResetKeep: Dr,
      deflateSetHeader: function (e, t) {
        if (!e || !e.state) return dr;
        if (2 !== e.state.wrap) return dr;
        e.state.gzhead = t;
        return 0;
      },
      deflate: function (e, t) {
        var i, n, r, a;
        if (!e || !e.state || t > 5 || t < 0) return e ? br(e, dr) : dr;
        n = e.state;
        if (
          !e.output ||
          (!e.input && 0 !== e.avail_in) ||
          (n.status === vr && 4 !== t)
        )
          return br(e, 0 === e.avail_out ? -5 : dr);
        n.strm = e;
        i = n.last_flush;
        n.last_flush = t;
        if (42 === n.status)
          if (2 === n.wrap) {
            e.adler = 0;
            Cr(n, 31);
            Cr(n, 139);
            Cr(n, 8);
            if (!n.gzhead) {
              Cr(n, 0);
              Cr(n, 0);
              Cr(n, 0);
              Cr(n, 0);
              Cr(n, 0);
              Cr(n, 9 === n.level ? 2 : n.strategy >= 2 || n.level < 2 ? 4 : 0);
              Cr(n, 3);
              n.status = mr;
            } else {
              Cr(
                n,
                (n.gzhead.text ? 1 : 0) +
                  (n.gzhead.hcrc ? 2 : 0) +
                  (!n.gzhead.extra ? 0 : 4) +
                  (!n.gzhead.name ? 0 : 8) +
                  (!n.gzhead.comment ? 0 : 16)
              );
              Cr(n, 255 & n.gzhead.time);
              Cr(n, (n.gzhead.time >> 8) & 255);
              Cr(n, (n.gzhead.time >> 16) & 255);
              Cr(n, (n.gzhead.time >> 24) & 255);
              Cr(n, 9 === n.level ? 2 : n.strategy >= 2 || n.level < 2 ? 4 : 0);
              Cr(n, 255 & n.gzhead.os);
              if (n.gzhead.extra && n.gzhead.extra.length) {
                Cr(n, 255 & n.gzhead.extra.length);
                Cr(n, (n.gzhead.extra.length >> 8) & 255);
              }
              if (n.gzhead.hcrc)
                e.adler = hr(e.adler, n.pending_buf, n.pending, 0);
              n.gzindex = 0;
              n.status = 69;
            }
          } else {
            var s = (8 + ((n.w_bits - 8) << 4)) << 8,
              o = -1;
            if (n.strategy >= 2 || n.level < 2) o = 0;
            else if (n.level < 6) o = 1;
            else if (6 === n.level) o = 2;
            else o = 3;
            s |= o << 6;
            if (0 !== n.strstart) s |= 32;
            s += 31 - (s % 31);
            n.status = mr;
            Sr(n, s);
            if (0 !== n.strstart) {
              Sr(n, e.adler >>> 16);
              Sr(n, 65535 & e.adler);
            }
            e.adler = 1;
          }
        if (69 === n.status)
          if (n.gzhead.extra) {
            r = n.pending;
            for (; n.gzindex < (65535 & n.gzhead.extra.length); ) {
              if (n.pending === n.pending_buf_size) {
                if (n.gzhead.hcrc && n.pending > r)
                  e.adler = hr(e.adler, n.pending_buf, n.pending - r, r);
                xr(e);
                r = n.pending;
                if (n.pending === n.pending_buf_size) break;
              }
              Cr(n, 255 & n.gzhead.extra[n.gzindex]);
              n.gzindex++;
            }
            if (n.gzhead.hcrc && n.pending > r)
              e.adler = hr(e.adler, n.pending_buf, n.pending - r, r);
            if (n.gzindex === n.gzhead.extra.length) {
              n.gzindex = 0;
              n.status = 73;
            }
          } else n.status = 73;
        if (73 === n.status)
          if (n.gzhead.name) {
            r = n.pending;
            do {
              if (n.pending === n.pending_buf_size) {
                if (n.gzhead.hcrc && n.pending > r)
                  e.adler = hr(e.adler, n.pending_buf, n.pending - r, r);
                xr(e);
                r = n.pending;
                if (n.pending === n.pending_buf_size) {
                  a = 1;
                  break;
                }
              }
              if (n.gzindex < n.gzhead.name.length)
                a = 255 & n.gzhead.name.charCodeAt(n.gzindex++);
              else a = 0;
              Cr(n, a);
            } while (0 !== a);
            if (n.gzhead.hcrc && n.pending > r)
              e.adler = hr(e.adler, n.pending_buf, n.pending - r, r);
            if (0 === a) {
              n.gzindex = 0;
              n.status = 91;
            }
          } else n.status = 91;
        if (91 === n.status)
          if (n.gzhead.comment) {
            r = n.pending;
            do {
              if (n.pending === n.pending_buf_size) {
                if (n.gzhead.hcrc && n.pending > r)
                  e.adler = hr(e.adler, n.pending_buf, n.pending - r, r);
                xr(e);
                r = n.pending;
                if (n.pending === n.pending_buf_size) {
                  a = 1;
                  break;
                }
              }
              if (n.gzindex < n.gzhead.comment.length)
                a = 255 & n.gzhead.comment.charCodeAt(n.gzindex++);
              else a = 0;
              Cr(n, a);
            } while (0 !== a);
            if (n.gzhead.hcrc && n.pending > r)
              e.adler = hr(e.adler, n.pending_buf, n.pending - r, r);
            if (0 === a) n.status = gr;
          } else n.status = gr;
        if (n.status === gr)
          if (n.gzhead.hcrc) {
            if (n.pending + 2 > n.pending_buf_size) xr(e);
            if (n.pending + 2 <= n.pending_buf_size) {
              Cr(n, 255 & e.adler);
              Cr(n, (e.adler >> 8) & 255);
              e.adler = 0;
              n.status = mr;
            }
          } else n.status = mr;
        if (0 !== n.pending) {
          xr(e);
          if (0 === e.avail_out) {
            n.last_flush = -1;
            return 0;
          }
        } else if (0 === e.avail_in && yr(t) <= yr(i) && 4 !== t)
          return br(e, -5);
        if (n.status === vr && 0 !== e.avail_in) return br(e, -5);
        if (
          0 !== e.avail_in ||
          0 !== n.lookahead ||
          (0 !== t && n.status !== vr)
        ) {
          var l =
            2 === n.strategy
              ? (function (e, t) {
                  for (var i; ; ) {
                    if (0 === e.lookahead) {
                      Fr(e);
                      if (0 === e.lookahead) {
                        if (0 === t) return 1;
                        break;
                      }
                    }
                    e.match_length = 0;
                    i = or._tr_tally(e, 0, e.window[e.strstart]);
                    e.lookahead--;
                    e.strstart++;
                    if (i) {
                      kr(e, !1);
                      if (0 === e.strm.avail_out) return 1;
                    }
                  }
                  e.insert = 0;
                  if (4 === t) {
                    kr(e, !0);
                    if (0 === e.strm.avail_out) return 3;
                    else return 4;
                  }
                  if (e.last_lit) {
                    kr(e, !1);
                    if (0 === e.strm.avail_out) return 1;
                  }
                  return 2;
                })(n, t)
              : 3 === n.strategy
              ? (function (e, t) {
                  for (var i, n, r, a, s = e.window; ; ) {
                    if (e.lookahead <= fr) {
                      Fr(e);
                      if (e.lookahead <= fr && 0 === t) return 1;
                      if (0 === e.lookahead) break;
                    }
                    e.match_length = 0;
                    if (e.lookahead >= 3 && e.strstart > 0)
                      if (
                        (n = s[(r = e.strstart - 1)]) === s[++r] &&
                        n === s[++r] &&
                        n === s[++r]
                      ) {
                        a = e.strstart + fr;
                        do {} while (
                          n === s[++r] &&
                          n === s[++r] &&
                          n === s[++r] &&
                          n === s[++r] &&
                          n === s[++r] &&
                          n === s[++r] &&
                          n === s[++r] &&
                          n === s[++r] &&
                          r < a
                        );
                        e.match_length = fr - (a - r);
                        if (e.match_length > e.lookahead)
                          e.match_length = e.lookahead;
                      }
                    if (e.match_length >= 3) {
                      i = or._tr_tally(e, 1, e.match_length - 3);
                      e.lookahead -= e.match_length;
                      e.strstart += e.match_length;
                      e.match_length = 0;
                    } else {
                      i = or._tr_tally(e, 0, e.window[e.strstart]);
                      e.lookahead--;
                      e.strstart++;
                    }
                    if (i) {
                      kr(e, !1);
                      if (0 === e.strm.avail_out) return 1;
                    }
                  }
                  e.insert = 0;
                  if (4 === t) {
                    kr(e, !0);
                    if (0 === e.strm.avail_out) return 3;
                    else return 4;
                  }
                  if (e.last_lit) {
                    kr(e, !1);
                    if (0 === e.strm.avail_out) return 1;
                  }
                  return 2;
                })(n, t)
              : sr[n.level].func(n, t);
          if (3 === l || 4 === l) n.status = vr;
          if (1 === l || 3 === l) {
            if (0 === e.avail_out) n.last_flush = -1;
            return 0;
          }
          if (2 === l) {
            if (1 === t) or._tr_align(n);
            else if (5 !== t) {
              or._tr_stored_block(n, 0, 0, !1);
              if (3 === t) {
                wr(n.head);
                if (0 === n.lookahead) {
                  n.strstart = 0;
                  n.block_start = 0;
                  n.insert = 0;
                }
              }
            }
            xr(e);
            if (0 === e.avail_out) {
              n.last_flush = -1;
              return 0;
            }
          }
        }
        if (4 !== t) return 0;
        if (n.wrap <= 0) return 1;
        if (2 === n.wrap) {
          Cr(n, 255 & e.adler);
          Cr(n, (e.adler >> 8) & 255);
          Cr(n, (e.adler >> 16) & 255);
          Cr(n, (e.adler >> 24) & 255);
          Cr(n, 255 & e.total_in);
          Cr(n, (e.total_in >> 8) & 255);
          Cr(n, (e.total_in >> 16) & 255);
          Cr(n, (e.total_in >> 24) & 255);
        } else {
          Sr(n, e.adler >>> 16);
          Sr(n, 65535 & e.adler);
        }
        xr(e);
        if (n.wrap > 0) n.wrap = -n.wrap;
        return 0 !== n.pending ? 0 : 1;
      },
      deflateEnd: function (e) {
        var t;
        if (!e || !e.state) return dr;
        if (
          42 !== (t = e.state.status) &&
          69 !== t &&
          73 !== t &&
          91 !== t &&
          t !== gr &&
          t !== mr &&
          t !== vr
        )
          return br(e, dr);
        e.state = null;
        return t === mr ? br(e, -3) : 0;
      },
      deflateSetDictionary: function (e, t) {
        var i,
          n,
          r,
          a,
          s,
          o,
          l,
          c,
          h = t.length;
        if (!e || !e.state) return dr;
        if (
          2 === (a = (i = e.state).wrap) ||
          (1 === a && 42 !== i.status) ||
          i.lookahead
        )
          return dr;
        if (1 === a) e.adler = lr(e.adler, t, h, 0);
        i.wrap = 0;
        if (h >= i.w_size) {
          if (0 === a) {
            wr(i.head);
            i.strstart = 0;
            i.block_start = 0;
            i.insert = 0;
          }
          c = new Fn.Buf8(i.w_size);
          Fn.arraySet(c, t, h - i.w_size, i.w_size, 0);
          t = c;
          h = i.w_size;
        }
        s = e.avail_in;
        o = e.next_in;
        l = e.input;
        e.avail_in = h;
        e.next_in = 0;
        e.input = t;
        Fr(i);
        for (; i.lookahead >= 3; ) {
          n = i.strstart;
          r = i.lookahead - 2;
          do {
            i.ins_h =
              ((i.ins_h << i.hash_shift) ^ i.window[n + 3 - 1]) & i.hash_mask;
            i.prev[n & i.w_mask] = i.head[i.ins_h];
            i.head[i.ins_h] = n;
            n++;
          } while (--r);
          i.strstart = n;
          i.lookahead = 2;
          Fr(i);
        }
        i.strstart += i.lookahead;
        i.block_start = i.strstart;
        i.insert = i.lookahead;
        i.lookahead = 0;
        i.match_length = i.prev_length = 2;
        i.match_available = 0;
        e.next_in = o;
        e.input = l;
        e.avail_in = s;
        i.wrap = a;
        return 0;
      },
      deflateInfo: "pako deflate (from Nodeca project)",
    },
    Mr = !0,
    Br = !0;
  try {
    String.fromCharCode.apply(null, [0]);
  } catch (e) {
    Mr = !1;
  }
  try {
    String.fromCharCode.apply(null, new Uint8Array(1));
  } catch (e) {
    Br = !1;
  }
  for (var Lr = new Fn.Buf8(256), Ur = 0; Ur < 256; Ur++)
    Lr[Ur] =
      Ur >= 252
        ? 6
        : Ur >= 248
        ? 5
        : Ur >= 240
        ? 4
        : Ur >= 224
        ? 3
        : Ur >= 192
        ? 2
        : 1;
  Lr[254] = Lr[254] = 1;
  function zr(e, t) {
    if (t < 65534)
      if ((e.subarray && Br) || (!e.subarray && Mr))
        return String.fromCharCode.apply(null, Fn.shrinkBuf(e, t));
    for (var i = "", n = 0; n < t; n++) i += String.fromCharCode(e[n]);
    return i;
  }
  var jr = function (e) {
      var t,
        i,
        n,
        r,
        a,
        s = e.length,
        o = 0;
      for (r = 0; r < s; r++) {
        if (55296 == (64512 & (i = e.charCodeAt(r))) && r + 1 < s)
          if (56320 == (64512 & (n = e.charCodeAt(r + 1)))) {
            i = 65536 + ((i - 55296) << 10) + (n - 56320);
            r++;
          }
        o += i < 128 ? 1 : i < 2048 ? 2 : i < 65536 ? 3 : 4;
      }
      t = new Fn.Buf8(o);
      for (a = 0, r = 0; a < o; r++) {
        if (55296 == (64512 & (i = e.charCodeAt(r))) && r + 1 < s)
          if (56320 == (64512 & (n = e.charCodeAt(r + 1)))) {
            i = 65536 + ((i - 55296) << 10) + (n - 56320);
            r++;
          }
        if (i < 128) t[a++] = i;
        else if (i < 2048) {
          t[a++] = 192 | (i >>> 6);
          t[a++] = 128 | (63 & i);
        } else if (i < 65536) {
          t[a++] = 224 | (i >>> 12);
          t[a++] = 128 | ((i >>> 6) & 63);
          t[a++] = 128 | (63 & i);
        } else {
          t[a++] = 240 | (i >>> 18);
          t[a++] = 128 | ((i >>> 12) & 63);
          t[a++] = 128 | ((i >>> 6) & 63);
          t[a++] = 128 | (63 & i);
        }
      }
      return t;
    },
    qr = function (e, t) {
      var i,
        n,
        r,
        a,
        s = t || e.length,
        o = new Array(2 * s);
      for (n = 0, i = 0; i < s; )
        if (!((r = e[i++]) < 128))
          if (!((a = Lr[r]) > 4)) {
            r &= 2 === a ? 31 : 3 === a ? 15 : 7;
            for (; a > 1 && i < s; ) {
              r = (r << 6) | (63 & e[i++]);
              a--;
            }
            if (!(a > 1))
              if (r < 65536) o[n++] = r;
              else {
                r -= 65536;
                o[n++] = 55296 | ((r >> 10) & 1023);
                o[n++] = 56320 | (1023 & r);
              }
            else o[n++] = 65533;
          } else {
            o[n++] = 65533;
            i += a - 1;
          }
        else o[n++] = r;
      return zr(o, n);
    },
    Hr = function (e, t) {
      var i;
      if ((t = t || e.length) > e.length) t = e.length;
      i = t - 1;
      for (; i >= 0 && 128 == (192 & e[i]); ) i--;
      if (i < 0) return t;
      if (0 === i) return t;
      else return i + Lr[e[i]] > t ? i : t;
    },
    Wr = function () {
      this.input = null;
      this.next_in = 0;
      this.avail_in = 0;
      this.total_in = 0;
      this.output = null;
      this.next_out = 0;
      this.avail_out = 0;
      this.total_out = 0;
      this.msg = "";
      this.state = null;
      this.data_type = 2;
      this.adler = 0;
    },
    Gr = Object.prototype.toString;
  function Vr(e) {
    if (!(this instanceof Vr)) return new Vr(e);
    this.options = Fn.assign(
      {
        level: -1,
        method: 8,
        chunkSize: 16384,
        windowBits: 15,
        memLevel: 8,
        strategy: 0,
        to: "",
      },
      e || {}
    );
    var t = this.options;
    if (t.raw && t.windowBits > 0) t.windowBits = -t.windowBits;
    else if (t.gzip && t.windowBits > 0 && t.windowBits < 16)
      t.windowBits += 16;
    this.err = 0;
    this.msg = "";
    this.ended = !1;
    this.chunks = [];
    this.strm = new Wr();
    this.strm.avail_out = 0;
    var i = Nr.deflateInit2(
      this.strm,
      t.level,
      t.method,
      t.windowBits,
      t.memLevel,
      t.strategy
    );
    if (0 !== i) throw new Error(ur[i]);
    if (t.header) Nr.deflateSetHeader(this.strm, t.header);
    if (t.dictionary) {
      var n;
      if ("string" == typeof t.dictionary) n = jr(t.dictionary);
      else if ("[object ArrayBuffer]" === Gr.call(t.dictionary))
        n = new Uint8Array(t.dictionary);
      else n = t.dictionary;
      if (0 !== (i = Nr.deflateSetDictionary(this.strm, n)))
        throw new Error(ur[i]);
      this._dict_set = !0;
    }
  }
  Vr.prototype.push = function (e, t) {
    var i,
      n,
      r,
      a = this.strm,
      s = this.options.chunkSize;
    if (this.ended) return !1;
    n = t === ~~t ? t : !0 === t ? 4 : 0;
    if ("string" == typeof e) a.input = jr(e);
    else if ("[object ArrayBuffer]" === Gr.call(e)) a.input = new Uint8Array(e);
    else a.input = e;
    a.next_in = 0;
    a.avail_in = a.input.length;
    do {
      if (0 === a.avail_out) {
        a.output = new Fn.Buf8(s);
        a.next_out = 0;
        a.avail_out = s;
      }
      if (1 !== (i = Nr.deflate(a, n)) && 0 !== i) {
        this.onEnd(i);
        this.ended = !0;
        return !1;
      }
      if (0 === a.avail_out || (0 === a.avail_in && (4 === n || 2 === n)))
        if ("string" === this.options.to)
          this.onData(zr((r = Fn.shrinkBuf(a.output, a.next_out)), r.length));
        else this.onData(Fn.shrinkBuf(a.output, a.next_out));
    } while ((a.avail_in > 0 || 0 === a.avail_out) && 1 !== i);
    if (4 === n) {
      i = Nr.deflateEnd(this.strm);
      this.onEnd(i);
      this.ended = !0;
      return 0 === i;
    }
    if (2 === n) {
      this.onEnd(0);
      a.avail_out = 0;
      return !0;
    }
    return !0;
  };
  Vr.prototype.onData = function (e) {
    this.chunks.push(e);
  };
  Vr.prototype.onEnd = function (e) {
    if (0 === e)
      if ("string" === this.options.to) this.result = this.chunks.join("");
      else this.result = Fn.flattenChunks(this.chunks);
    this.chunks = [];
    this.err = e;
    this.msg = this.strm.msg;
  };
  function Xr(e, t) {
    var i = new Vr(t);
    i.push(e, !0);
    if (i.err) throw i.msg || ur[i.err];
    return i.result;
  }
  var Kr = {
      Deflate: Vr,
      deflate: Xr,
      deflateRaw: function (e, t) {
        (t = t || {}).raw = !0;
        return Xr(e, t);
      },
      gzip: function (e, t) {
        (t = t || {}).gzip = !0;
        return Xr(e, t);
      },
    },
    Yr = function (e, t) {
      var i,
        n,
        r,
        a,
        s,
        o,
        l,
        c,
        h,
        u,
        d,
        f,
        p,
        g,
        m,
        v,
        b,
        y,
        w,
        x,
        k,
        C,
        S,
        _,
        A;
      i = e.state;
      n = e.next_in;
      _ = e.input;
      r = n + (e.avail_in - 5);
      a = e.next_out;
      A = e.output;
      s = a - (t - e.avail_out);
      o = a + (e.avail_out - 257);
      l = i.dmax;
      c = i.wsize;
      h = i.whave;
      u = i.wnext;
      d = i.window;
      f = i.hold;
      p = i.bits;
      g = i.lencode;
      m = i.distcode;
      v = (1 << i.lenbits) - 1;
      b = (1 << i.distbits) - 1;
      e: do {
        if (p < 15) {
          f += _[n++] << p;
          p += 8;
          f += _[n++] << p;
          p += 8;
        }
        y = g[f & v];
        t: for (;;) {
          f >>>= w = y >>> 24;
          p -= w;
          if (0 == (w = (y >>> 16) & 255)) A[a++] = 65535 & y;
          else if (16 & w) {
            x = 65535 & y;
            if ((w &= 15)) {
              if (p < w) {
                f += _[n++] << p;
                p += 8;
              }
              x += f & ((1 << w) - 1);
              f >>>= w;
              p -= w;
            }
            if (p < 15) {
              f += _[n++] << p;
              p += 8;
              f += _[n++] << p;
              p += 8;
            }
            y = m[f & b];
            i: for (;;) {
              f >>>= w = y >>> 24;
              p -= w;
              if (16 & (w = (y >>> 16) & 255)) {
                k = 65535 & y;
                if (p < (w &= 15)) {
                  f += _[n++] << p;
                  if ((p += 8) < w) {
                    f += _[n++] << p;
                    p += 8;
                  }
                }
                if ((k += f & ((1 << w) - 1)) > l) {
                  e.msg = "invalid distance too far back";
                  i.mode = 30;
                  break e;
                }
                f >>>= w;
                p -= w;
                if (k > (w = a - s)) {
                  if ((w = k - w) > h)
                    if (i.sane) {
                      e.msg = "invalid distance too far back";
                      i.mode = 30;
                      break e;
                    }
                  C = 0;
                  S = d;
                  if (0 === u) {
                    C += c - w;
                    if (w < x) {
                      x -= w;
                      do {
                        A[a++] = d[C++];
                      } while (--w);
                      C = a - k;
                      S = A;
                    }
                  } else if (u < w) {
                    C += c + u - w;
                    if ((w -= u) < x) {
                      x -= w;
                      do {
                        A[a++] = d[C++];
                      } while (--w);
                      C = 0;
                      if (u < x) {
                        x -= w = u;
                        do {
                          A[a++] = d[C++];
                        } while (--w);
                        C = a - k;
                        S = A;
                      }
                    }
                  } else {
                    C += u - w;
                    if (w < x) {
                      x -= w;
                      do {
                        A[a++] = d[C++];
                      } while (--w);
                      C = a - k;
                      S = A;
                    }
                  }
                  for (; x > 2; ) {
                    A[a++] = S[C++];
                    A[a++] = S[C++];
                    A[a++] = S[C++];
                    x -= 3;
                  }
                  if (x) {
                    A[a++] = S[C++];
                    if (x > 1) A[a++] = S[C++];
                  }
                } else {
                  C = a - k;
                  do {
                    A[a++] = A[C++];
                    A[a++] = A[C++];
                    A[a++] = A[C++];
                    x -= 3;
                  } while (x > 2);
                  if (x) {
                    A[a++] = A[C++];
                    if (x > 1) A[a++] = A[C++];
                  }
                }
              } else if (0 == (64 & w)) {
                y = m[(65535 & y) + (f & ((1 << w) - 1))];
                continue i;
              } else {
                e.msg = "invalid distance code";
                i.mode = 30;
                break e;
              }
              break;
            }
          } else if (0 == (64 & w)) {
            y = g[(65535 & y) + (f & ((1 << w) - 1))];
            continue t;
          } else if (32 & w) {
            i.mode = 12;
            break e;
          } else {
            e.msg = "invalid literal/length code";
            i.mode = 30;
            break e;
          }
          break;
        }
      } while (n < r && a < o);
      n -= x = p >> 3;
      f &= (1 << (p -= x << 3)) - 1;
      e.next_in = n;
      e.next_out = a;
      e.avail_in = n < r ? r - n + 5 : 5 - (n - r);
      e.avail_out = a < o ? o - a + 257 : 257 - (a - o);
      i.hold = f;
      i.bits = p;
    },
    Zr = [
      3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59,
      67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0,
    ],
    Jr = [
      16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18, 19, 19,
      19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78,
    ],
    $r = [
      1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513,
      769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577, 0, 0,
    ],
    Qr = [
      16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22, 23, 23,
      24, 24, 25, 25, 26, 26, 27, 27, 28, 28, 29, 29, 64, 64,
    ],
    ea = function (e, t, i, n, r, a, s, o) {
      var l,
        c,
        h,
        u,
        d,
        f,
        p,
        g,
        m,
        v = o.bits,
        b = 0,
        y = 0,
        w = 0,
        x = 0,
        k = 0,
        C = 0,
        S = 0,
        _ = 0,
        A = 0,
        F = 0,
        T = null,
        P = 0,
        E = new Fn.Buf16(16),
        I = new Fn.Buf16(16),
        D = null,
        O = 0;
      for (b = 0; b <= 15; b++) E[b] = 0;
      for (y = 0; y < n; y++) E[t[i + y]]++;
      k = v;
      for (x = 15; x >= 1 && 0 === E[x]; x--);
      if (k > x) k = x;
      if (0 === x) {
        r[a++] = 20971520;
        r[a++] = 20971520;
        o.bits = 1;
        return 0;
      }
      for (w = 1; w < x && 0 === E[w]; w++);
      if (k < w) k = w;
      _ = 1;
      for (b = 1; b <= 15; b++) {
        _ <<= 1;
        if ((_ -= E[b]) < 0) return -1;
      }
      if (_ > 0 && (0 === e || 1 !== x)) return -1;
      I[1] = 0;
      for (b = 1; b < 15; b++) I[b + 1] = I[b] + E[b];
      for (y = 0; y < n; y++) if (0 !== t[i + y]) s[I[t[i + y]]++] = y;
      if (0 === e) {
        T = D = s;
        f = 19;
      } else if (1 === e) {
        T = Zr;
        P -= 257;
        D = Jr;
        O -= 257;
        f = 256;
      } else {
        T = $r;
        D = Qr;
        f = -1;
      }
      F = 0;
      y = 0;
      b = w;
      d = a;
      C = k;
      S = 0;
      h = -1;
      u = (A = 1 << k) - 1;
      if ((1 === e && A > 852) || (2 === e && A > 592)) return 1;
      for (;;) {
        p = b - S;
        if (s[y] < f) {
          g = 0;
          m = s[y];
        } else if (s[y] > f) {
          g = D[O + s[y]];
          m = T[P + s[y]];
        } else {
          g = 96;
          m = 0;
        }
        l = 1 << (b - S);
        w = c = 1 << C;
        do {
          r[d + (F >> S) + (c -= l)] = (p << 24) | (g << 16) | m | 0;
        } while (0 !== c);
        l = 1 << (b - 1);
        for (; F & l; ) l >>= 1;
        if (0 !== l) {
          F &= l - 1;
          F += l;
        } else F = 0;
        y++;
        if (0 == --E[b]) {
          if (b === x) break;
          b = t[i + s[y]];
        }
        if (b > k && (F & u) !== h) {
          if (0 === S) S = k;
          d += w;
          _ = 1 << (C = b - S);
          for (; C + S < x && !((_ -= E[C + S]) <= 0); ) {
            C++;
            _ <<= 1;
          }
          A += 1 << C;
          if ((1 === e && A > 852) || (2 === e && A > 592)) return 1;
          r[(h = F & u)] = (k << 24) | (C << 16) | (d - a) | 0;
        }
      }
      if (0 !== F) r[d + F] = ((b - S) << 24) | (64 << 16) | 0;
      o.bits = k;
      return 0;
    },
    ta = -2,
    ia = 12,
    na = 30;
  function ra(e) {
    return (
      ((e >>> 24) & 255) +
      ((e >>> 8) & 65280) +
      ((65280 & e) << 8) +
      ((255 & e) << 24)
    );
  }
  function aa() {
    this.mode = 0;
    this.last = !1;
    this.wrap = 0;
    this.havedict = !1;
    this.flags = 0;
    this.dmax = 0;
    this.check = 0;
    this.total = 0;
    this.head = null;
    this.wbits = 0;
    this.wsize = 0;
    this.whave = 0;
    this.wnext = 0;
    this.window = null;
    this.hold = 0;
    this.bits = 0;
    this.length = 0;
    this.offset = 0;
    this.extra = 0;
    this.lencode = null;
    this.distcode = null;
    this.lenbits = 0;
    this.distbits = 0;
    this.ncode = 0;
    this.nlen = 0;
    this.ndist = 0;
    this.have = 0;
    this.next = null;
    this.lens = new Fn.Buf16(320);
    this.work = new Fn.Buf16(288);
    this.lendyn = null;
    this.distdyn = null;
    this.sane = 0;
    this.back = 0;
    this.was = 0;
  }
  function sa(e) {
    var t;
    if (!e || !e.state) return ta;
    t = e.state;
    e.total_in = e.total_out = t.total = 0;
    e.msg = "";
    if (t.wrap) e.adler = 1 & t.wrap;
    t.mode = 1;
    t.last = 0;
    t.havedict = 0;
    t.dmax = 32768;
    t.head = null;
    t.hold = 0;
    t.bits = 0;
    t.lencode = t.lendyn = new Fn.Buf32(852);
    t.distcode = t.distdyn = new Fn.Buf32(592);
    t.sane = 1;
    t.back = -1;
    return 0;
  }
  function oa(e) {
    var t;
    if (!e || !e.state) return ta;
    (t = e.state).wsize = 0;
    t.whave = 0;
    t.wnext = 0;
    return sa(e);
  }
  function la(e, t) {
    var i, n;
    if (!e || !e.state) return ta;
    n = e.state;
    if (t < 0) {
      i = 0;
      t = -t;
    } else {
      i = 1 + (t >> 4);
      if (t < 48) t &= 15;
    }
    if (t && (t < 8 || t > 15)) return ta;
    if (null !== n.window && n.wbits !== t) n.window = null;
    n.wrap = i;
    n.wbits = t;
    return oa(e);
  }
  function ca(e, t) {
    var i, n;
    if (!e) return ta;
    n = new aa();
    e.state = n;
    n.window = null;
    if (0 !== (i = la(e, t))) e.state = null;
    return i;
  }
  var ha,
    ua,
    da = !0;
  function fa(e) {
    if (da) {
      var t;
      ha = new Fn.Buf32(512);
      ua = new Fn.Buf32(32);
      t = 0;
      for (; t < 144; ) e.lens[t++] = 8;
      for (; t < 256; ) e.lens[t++] = 9;
      for (; t < 280; ) e.lens[t++] = 7;
      for (; t < 288; ) e.lens[t++] = 8;
      ea(1, e.lens, 0, 288, ha, 0, e.work, { bits: 9 });
      t = 0;
      for (; t < 32; ) e.lens[t++] = 5;
      ea(2, e.lens, 0, 32, ua, 0, e.work, { bits: 5 });
      da = !1;
    }
    e.lencode = ha;
    e.lenbits = 9;
    e.distcode = ua;
    e.distbits = 5;
  }
  function pa(e, t, i, n) {
    var r,
      a = e.state;
    if (null === a.window) {
      a.wsize = 1 << a.wbits;
      a.wnext = 0;
      a.whave = 0;
      a.window = new Fn.Buf8(a.wsize);
    }
    if (n >= a.wsize) {
      Fn.arraySet(a.window, t, i - a.wsize, a.wsize, 0);
      a.wnext = 0;
      a.whave = a.wsize;
    } else {
      if ((r = a.wsize - a.wnext) > n) r = n;
      Fn.arraySet(a.window, t, i - n, r, a.wnext);
      if ((n -= r)) {
        Fn.arraySet(a.window, t, i - n, n, 0);
        a.wnext = n;
        a.whave = a.wsize;
      } else {
        a.wnext += r;
        if (a.wnext === a.wsize) a.wnext = 0;
        if (a.whave < a.wsize) a.whave += r;
      }
    }
    return 0;
  }
  var ga = {
      inflateReset: oa,
      inflateReset2: la,
      inflateResetKeep: sa,
      inflateInit: function (e) {
        return ca(e, 15);
      },
      inflateInit2: ca,
      inflate: function (e, t) {
        var i,
          n,
          r,
          a,
          s,
          o,
          l,
          c,
          h,
          u,
          d,
          f,
          p,
          g,
          m,
          v,
          b,
          y,
          w,
          x,
          k,
          C,
          S,
          _,
          A = 0,
          F = new Fn.Buf8(4),
          T = [
            16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15,
          ];
        if (!e || !e.state || !e.output || (!e.input && 0 !== e.avail_in))
          return ta;
        if ((i = e.state).mode === ia) i.mode = 13;
        s = e.next_out;
        r = e.output;
        l = e.avail_out;
        a = e.next_in;
        n = e.input;
        o = e.avail_in;
        c = i.hold;
        h = i.bits;
        u = o;
        d = l;
        C = 0;
        e: for (;;)
          switch (i.mode) {
            case 1:
              if (0 === i.wrap) {
                i.mode = 13;
                break;
              }
              for (; h < 16; ) {
                if (0 === o) break e;
                o--;
                c += n[a++] << h;
                h += 8;
              }
              if (2 & i.wrap && 35615 === c) {
                i.check = 0;
                F[0] = 255 & c;
                F[1] = (c >>> 8) & 255;
                i.check = hr(i.check, F, 2, 0);
                c = 0;
                h = 0;
                i.mode = 2;
                break;
              }
              i.flags = 0;
              if (i.head) i.head.done = !1;
              if (!(1 & i.wrap) || (((255 & c) << 8) + (c >> 8)) % 31) {
                e.msg = "incorrect header check";
                i.mode = na;
                break;
              }
              if (8 != (15 & c)) {
                e.msg = "unknown compression method";
                i.mode = na;
                break;
              }
              h -= 4;
              k = 8 + (15 & (c >>>= 4));
              if (0 === i.wbits) i.wbits = k;
              else if (k > i.wbits) {
                e.msg = "invalid window size";
                i.mode = na;
                break;
              }
              i.dmax = 1 << k;
              e.adler = i.check = 1;
              i.mode = 512 & c ? 10 : ia;
              c = 0;
              h = 0;
              break;
            case 2:
              for (; h < 16; ) {
                if (0 === o) break e;
                o--;
                c += n[a++] << h;
                h += 8;
              }
              i.flags = c;
              if (8 != (255 & i.flags)) {
                e.msg = "unknown compression method";
                i.mode = na;
                break;
              }
              if (57344 & i.flags) {
                e.msg = "unknown header flags set";
                i.mode = na;
                break;
              }
              if (i.head) i.head.text = (c >> 8) & 1;
              if (512 & i.flags) {
                F[0] = 255 & c;
                F[1] = (c >>> 8) & 255;
                i.check = hr(i.check, F, 2, 0);
              }
              c = 0;
              h = 0;
              i.mode = 3;
            case 3:
              for (; h < 32; ) {
                if (0 === o) break e;
                o--;
                c += n[a++] << h;
                h += 8;
              }
              if (i.head) i.head.time = c;
              if (512 & i.flags) {
                F[0] = 255 & c;
                F[1] = (c >>> 8) & 255;
                F[2] = (c >>> 16) & 255;
                F[3] = (c >>> 24) & 255;
                i.check = hr(i.check, F, 4, 0);
              }
              c = 0;
              h = 0;
              i.mode = 4;
            case 4:
              for (; h < 16; ) {
                if (0 === o) break e;
                o--;
                c += n[a++] << h;
                h += 8;
              }
              if (i.head) {
                i.head.xflags = 255 & c;
                i.head.os = c >> 8;
              }
              if (512 & i.flags) {
                F[0] = 255 & c;
                F[1] = (c >>> 8) & 255;
                i.check = hr(i.check, F, 2, 0);
              }
              c = 0;
              h = 0;
              i.mode = 5;
            case 5:
              if (1024 & i.flags) {
                for (; h < 16; ) {
                  if (0 === o) break e;
                  o--;
                  c += n[a++] << h;
                  h += 8;
                }
                i.length = c;
                if (i.head) i.head.extra_len = c;
                if (512 & i.flags) {
                  F[0] = 255 & c;
                  F[1] = (c >>> 8) & 255;
                  i.check = hr(i.check, F, 2, 0);
                }
                c = 0;
                h = 0;
              } else if (i.head) i.head.extra = null;
              i.mode = 6;
            case 6:
              if (1024 & i.flags) {
                if ((f = i.length) > o) f = o;
                if (f) {
                  if (i.head) {
                    k = i.head.extra_len - i.length;
                    if (!i.head.extra)
                      i.head.extra = new Array(i.head.extra_len);
                    Fn.arraySet(i.head.extra, n, a, f, k);
                  }
                  if (512 & i.flags) i.check = hr(i.check, n, f, a);
                  o -= f;
                  a += f;
                  i.length -= f;
                }
                if (i.length) break e;
              }
              i.length = 0;
              i.mode = 7;
            case 7:
              if (2048 & i.flags) {
                if (0 === o) break e;
                f = 0;
                do {
                  k = n[a + f++];
                  if (i.head && k && i.length < 65536)
                    i.head.name += String.fromCharCode(k);
                } while (k && f < o);
                if (512 & i.flags) i.check = hr(i.check, n, f, a);
                o -= f;
                a += f;
                if (k) break e;
              } else if (i.head) i.head.name = null;
              i.length = 0;
              i.mode = 8;
            case 8:
              if (4096 & i.flags) {
                if (0 === o) break e;
                f = 0;
                do {
                  k = n[a + f++];
                  if (i.head && k && i.length < 65536)
                    i.head.comment += String.fromCharCode(k);
                } while (k && f < o);
                if (512 & i.flags) i.check = hr(i.check, n, f, a);
                o -= f;
                a += f;
                if (k) break e;
              } else if (i.head) i.head.comment = null;
              i.mode = 9;
            case 9:
              if (512 & i.flags) {
                for (; h < 16; ) {
                  if (0 === o) break e;
                  o--;
                  c += n[a++] << h;
                  h += 8;
                }
                if (c !== (65535 & i.check)) {
                  e.msg = "header crc mismatch";
                  i.mode = na;
                  break;
                }
                c = 0;
                h = 0;
              }
              if (i.head) {
                i.head.hcrc = (i.flags >> 9) & 1;
                i.head.done = !0;
              }
              e.adler = i.check = 0;
              i.mode = ia;
              break;
            case 10:
              for (; h < 32; ) {
                if (0 === o) break e;
                o--;
                c += n[a++] << h;
                h += 8;
              }
              e.adler = i.check = ra(c);
              c = 0;
              h = 0;
              i.mode = 11;
            case 11:
              if (0 === i.havedict) {
                e.next_out = s;
                e.avail_out = l;
                e.next_in = a;
                e.avail_in = o;
                i.hold = c;
                i.bits = h;
                return 2;
              }
              e.adler = i.check = 1;
              i.mode = ia;
            case ia:
              if (5 === t || 6 === t) break e;
            case 13:
              if (i.last) {
                c >>>= 7 & h;
                h -= 7 & h;
                i.mode = 27;
                break;
              }
              for (; h < 3; ) {
                if (0 === o) break e;
                o--;
                c += n[a++] << h;
                h += 8;
              }
              i.last = 1 & c;
              h -= 1;
              switch (3 & (c >>>= 1)) {
                case 0:
                  i.mode = 14;
                  break;
                case 1:
                  fa(i);
                  i.mode = 20;
                  if (6 === t) {
                    c >>>= 2;
                    h -= 2;
                    break e;
                  }
                  break;
                case 2:
                  i.mode = 17;
                  break;
                case 3:
                  e.msg = "invalid block type";
                  i.mode = na;
              }
              c >>>= 2;
              h -= 2;
              break;
            case 14:
              c >>>= 7 & h;
              h -= 7 & h;
              for (; h < 32; ) {
                if (0 === o) break e;
                o--;
                c += n[a++] << h;
                h += 8;
              }
              if ((65535 & c) != ((c >>> 16) ^ 65535)) {
                e.msg = "invalid stored block lengths";
                i.mode = na;
                break;
              }
              i.length = 65535 & c;
              c = 0;
              h = 0;
              i.mode = 15;
              if (6 === t) break e;
            case 15:
              i.mode = 16;
            case 16:
              if ((f = i.length)) {
                if (f > o) f = o;
                if (f > l) f = l;
                if (0 === f) break e;
                Fn.arraySet(r, n, a, f, s);
                o -= f;
                a += f;
                l -= f;
                s += f;
                i.length -= f;
                break;
              }
              i.mode = ia;
              break;
            case 17:
              for (; h < 14; ) {
                if (0 === o) break e;
                o--;
                c += n[a++] << h;
                h += 8;
              }
              i.nlen = 257 + (31 & c);
              c >>>= 5;
              h -= 5;
              i.ndist = 1 + (31 & c);
              c >>>= 5;
              h -= 5;
              i.ncode = 4 + (15 & c);
              c >>>= 4;
              h -= 4;
              if (i.nlen > 286 || i.ndist > 30) {
                e.msg = "too many length or distance symbols";
                i.mode = na;
                break;
              }
              i.have = 0;
              i.mode = 18;
            case 18:
              for (; i.have < i.ncode; ) {
                for (; h < 3; ) {
                  if (0 === o) break e;
                  o--;
                  c += n[a++] << h;
                  h += 8;
                }
                i.lens[T[i.have++]] = 7 & c;
                c >>>= 3;
                h -= 3;
              }
              for (; i.have < 19; ) i.lens[T[i.have++]] = 0;
              i.lencode = i.lendyn;
              i.lenbits = 7;
              S = { bits: i.lenbits };
              C = ea(0, i.lens, 0, 19, i.lencode, 0, i.work, S);
              i.lenbits = S.bits;
              if (C) {
                e.msg = "invalid code lengths set";
                i.mode = na;
                break;
              }
              i.have = 0;
              i.mode = 19;
            case 19:
              for (; i.have < i.nlen + i.ndist; ) {
                for (;;) {
                  v =
                    ((A = i.lencode[c & ((1 << i.lenbits) - 1)]) >>> 16) & 255;
                  b = 65535 & A;
                  if ((m = A >>> 24) <= h) break;
                  if (0 === o) break e;
                  o--;
                  c += n[a++] << h;
                  h += 8;
                }
                if (b < 16) {
                  c >>>= m;
                  h -= m;
                  i.lens[i.have++] = b;
                } else {
                  if (16 === b) {
                    _ = m + 2;
                    for (; h < _; ) {
                      if (0 === o) break e;
                      o--;
                      c += n[a++] << h;
                      h += 8;
                    }
                    c >>>= m;
                    h -= m;
                    if (0 === i.have) {
                      e.msg = "invalid bit length repeat";
                      i.mode = na;
                      break;
                    }
                    k = i.lens[i.have - 1];
                    f = 3 + (3 & c);
                    c >>>= 2;
                    h -= 2;
                  } else if (17 === b) {
                    _ = m + 3;
                    for (; h < _; ) {
                      if (0 === o) break e;
                      o--;
                      c += n[a++] << h;
                      h += 8;
                    }
                    h -= m;
                    k = 0;
                    f = 3 + (7 & (c >>>= m));
                    c >>>= 3;
                    h -= 3;
                  } else {
                    _ = m + 7;
                    for (; h < _; ) {
                      if (0 === o) break e;
                      o--;
                      c += n[a++] << h;
                      h += 8;
                    }
                    h -= m;
                    k = 0;
                    f = 11 + (127 & (c >>>= m));
                    c >>>= 7;
                    h -= 7;
                  }
                  if (i.have + f > i.nlen + i.ndist) {
                    e.msg = "invalid bit length repeat";
                    i.mode = na;
                    break;
                  }
                  for (; f--; ) i.lens[i.have++] = k;
                }
              }
              if (i.mode === na) break;
              if (0 === i.lens[256]) {
                e.msg = "invalid code -- missing end-of-block";
                i.mode = na;
                break;
              }
              i.lenbits = 9;
              S = { bits: i.lenbits };
              C = ea(1, i.lens, 0, i.nlen, i.lencode, 0, i.work, S);
              i.lenbits = S.bits;
              if (C) {
                e.msg = "invalid literal/lengths set";
                i.mode = na;
                break;
              }
              i.distbits = 6;
              i.distcode = i.distdyn;
              S = { bits: i.distbits };
              C = ea(2, i.lens, i.nlen, i.ndist, i.distcode, 0, i.work, S);
              i.distbits = S.bits;
              if (C) {
                e.msg = "invalid distances set";
                i.mode = na;
                break;
              }
              i.mode = 20;
              if (6 === t) break e;
            case 20:
              i.mode = 21;
            case 21:
              if (o >= 6 && l >= 258) {
                e.next_out = s;
                e.avail_out = l;
                e.next_in = a;
                e.avail_in = o;
                i.hold = c;
                i.bits = h;
                Yr(e, d);
                s = e.next_out;
                r = e.output;
                l = e.avail_out;
                a = e.next_in;
                n = e.input;
                o = e.avail_in;
                c = i.hold;
                h = i.bits;
                if (i.mode === ia) i.back = -1;
                break;
              }
              i.back = 0;
              for (;;) {
                v = ((A = i.lencode[c & ((1 << i.lenbits) - 1)]) >>> 16) & 255;
                b = 65535 & A;
                if ((m = A >>> 24) <= h) break;
                if (0 === o) break e;
                o--;
                c += n[a++] << h;
                h += 8;
              }
              if (v && 0 == (240 & v)) {
                y = m;
                w = v;
                x = b;
                for (;;) {
                  v =
                    ((A = i.lencode[x + ((c & ((1 << (y + w)) - 1)) >> y)]) >>>
                      16) &
                    255;
                  b = 65535 & A;
                  if (y + (m = A >>> 24) <= h) break;
                  if (0 === o) break e;
                  o--;
                  c += n[a++] << h;
                  h += 8;
                }
                c >>>= y;
                h -= y;
                i.back += y;
              }
              c >>>= m;
              h -= m;
              i.back += m;
              i.length = b;
              if (0 === v) {
                i.mode = 26;
                break;
              }
              if (32 & v) {
                i.back = -1;
                i.mode = ia;
                break;
              }
              if (64 & v) {
                e.msg = "invalid literal/length code";
                i.mode = na;
                break;
              }
              i.extra = 15 & v;
              i.mode = 22;
            case 22:
              if (i.extra) {
                _ = i.extra;
                for (; h < _; ) {
                  if (0 === o) break e;
                  o--;
                  c += n[a++] << h;
                  h += 8;
                }
                i.length += c & ((1 << i.extra) - 1);
                c >>>= i.extra;
                h -= i.extra;
                i.back += i.extra;
              }
              i.was = i.length;
              i.mode = 23;
            case 23:
              for (;;) {
                v =
                  ((A = i.distcode[c & ((1 << i.distbits) - 1)]) >>> 16) & 255;
                b = 65535 & A;
                if ((m = A >>> 24) <= h) break;
                if (0 === o) break e;
                o--;
                c += n[a++] << h;
                h += 8;
              }
              if (0 == (240 & v)) {
                y = m;
                w = v;
                x = b;
                for (;;) {
                  v =
                    ((A = i.distcode[x + ((c & ((1 << (y + w)) - 1)) >> y)]) >>>
                      16) &
                    255;
                  b = 65535 & A;
                  if (y + (m = A >>> 24) <= h) break;
                  if (0 === o) break e;
                  o--;
                  c += n[a++] << h;
                  h += 8;
                }
                c >>>= y;
                h -= y;
                i.back += y;
              }
              c >>>= m;
              h -= m;
              i.back += m;
              if (64 & v) {
                e.msg = "invalid distance code";
                i.mode = na;
                break;
              }
              i.offset = b;
              i.extra = 15 & v;
              i.mode = 24;
            case 24:
              if (i.extra) {
                _ = i.extra;
                for (; h < _; ) {
                  if (0 === o) break e;
                  o--;
                  c += n[a++] << h;
                  h += 8;
                }
                i.offset += c & ((1 << i.extra) - 1);
                c >>>= i.extra;
                h -= i.extra;
                i.back += i.extra;
              }
              if (i.offset > i.dmax) {
                e.msg = "invalid distance too far back";
                i.mode = na;
                break;
              }
              i.mode = 25;
            case 25:
              if (0 === l) break e;
              f = d - l;
              if (i.offset > f) {
                if ((f = i.offset - f) > i.whave)
                  if (i.sane) {
                    e.msg = "invalid distance too far back";
                    i.mode = na;
                    break;
                  }
                if (f > i.wnext) {
                  f -= i.wnext;
                  p = i.wsize - f;
                } else p = i.wnext - f;
                if (f > i.length) f = i.length;
                g = i.window;
              } else {
                g = r;
                p = s - i.offset;
                f = i.length;
              }
              if (f > l) f = l;
              l -= f;
              i.length -= f;
              do {
                r[s++] = g[p++];
              } while (--f);
              if (0 === i.length) i.mode = 21;
              break;
            case 26:
              if (0 === l) break e;
              r[s++] = i.length;
              l--;
              i.mode = 21;
              break;
            case 27:
              if (i.wrap) {
                for (; h < 32; ) {
                  if (0 === o) break e;
                  o--;
                  c |= n[a++] << h;
                  h += 8;
                }
                d -= l;
                e.total_out += d;
                i.total += d;
                if (d)
                  e.adler = i.check = i.flags
                    ? hr(i.check, r, d, s - d)
                    : lr(i.check, r, d, s - d);
                d = l;
                if ((i.flags ? c : ra(c)) !== i.check) {
                  e.msg = "incorrect data check";
                  i.mode = na;
                  break;
                }
                c = 0;
                h = 0;
              }
              i.mode = 28;
            case 28:
              if (i.wrap && i.flags) {
                for (; h < 32; ) {
                  if (0 === o) break e;
                  o--;
                  c += n[a++] << h;
                  h += 8;
                }
                if (c !== (4294967295 & i.total)) {
                  e.msg = "incorrect length check";
                  i.mode = na;
                  break;
                }
                c = 0;
                h = 0;
              }
              i.mode = 29;
            case 29:
              C = 1;
              break e;
            case na:
              C = -3;
              break e;
            case 31:
              return -4;
            case 32:
            default:
              return ta;
          }
        e.next_out = s;
        e.avail_out = l;
        e.next_in = a;
        e.avail_in = o;
        i.hold = c;
        i.bits = h;
        if (
          i.wsize ||
          (d !== e.avail_out && i.mode < na && (i.mode < 27 || 4 !== t))
        )
          if (pa(e, e.output, e.next_out, d - e.avail_out));
        u -= e.avail_in;
        d -= e.avail_out;
        e.total_in += u;
        e.total_out += d;
        i.total += d;
        if (i.wrap && d)
          e.adler = i.check = i.flags
            ? hr(i.check, r, d, e.next_out - d)
            : lr(i.check, r, d, e.next_out - d);
        e.data_type =
          i.bits +
          (i.last ? 64 : 0) +
          (i.mode === ia ? 128 : 0) +
          (20 === i.mode || 15 === i.mode ? 256 : 0);
        if (((0 === u && 0 === d) || 4 === t) && 0 === C) C = -5;
        return C;
      },
      inflateEnd: function (e) {
        if (!e || !e.state) return ta;
        var t = e.state;
        if (t.window) t.window = null;
        e.state = null;
        return 0;
      },
      inflateGetHeader: function (e, t) {
        var i;
        if (!e || !e.state) return ta;
        if (0 == (2 & (i = e.state).wrap)) return ta;
        i.head = t;
        t.done = !1;
        return 0;
      },
      inflateSetDictionary: function (e, t) {
        var i,
          n = t.length;
        if (!e || !e.state) return ta;
        if (0 !== (i = e.state).wrap && 11 !== i.mode) return ta;
        if (11 === i.mode) if (lr(1, t, n, 0) !== i.check) return -3;
        if (pa(e, t, n, n)) {
          i.mode = 31;
          return -4;
        }
        i.havedict = 1;
        return 0;
      },
      inflateInfo: "pako inflate (from Nodeca project)",
    },
    ma = {
      Z_NO_FLUSH: 0,
      Z_PARTIAL_FLUSH: 1,
      Z_SYNC_FLUSH: 2,
      Z_FULL_FLUSH: 3,
      Z_FINISH: 4,
      Z_BLOCK: 5,
      Z_TREES: 6,
      Z_OK: 0,
      Z_STREAM_END: 1,
      Z_NEED_DICT: 2,
      Z_ERRNO: -1,
      Z_STREAM_ERROR: -2,
      Z_DATA_ERROR: -3,
      Z_BUF_ERROR: -5,
      Z_NO_COMPRESSION: 0,
      Z_BEST_SPEED: 1,
      Z_BEST_COMPRESSION: 9,
      Z_DEFAULT_COMPRESSION: -1,
      Z_FILTERED: 1,
      Z_HUFFMAN_ONLY: 2,
      Z_RLE: 3,
      Z_FIXED: 4,
      Z_DEFAULT_STRATEGY: 0,
      Z_BINARY: 0,
      Z_TEXT: 1,
      Z_UNKNOWN: 2,
      Z_DEFLATED: 8,
    },
    va = function () {
      this.text = 0;
      this.time = 0;
      this.xflags = 0;
      this.os = 0;
      this.extra = null;
      this.extra_len = 0;
      this.name = "";
      this.comment = "";
      this.hcrc = 0;
      this.done = !1;
    },
    ba = Object.prototype.toString;
  function ya(e) {
    if (!(this instanceof ya)) return new ya(e);
    this.options = Fn.assign(
      { chunkSize: 16384, windowBits: 0, to: "" },
      e || {}
    );
    var t = this.options;
    if (t.raw && t.windowBits >= 0 && t.windowBits < 16) {
      t.windowBits = -t.windowBits;
      if (0 === t.windowBits) t.windowBits = -15;
    }
    if (t.windowBits >= 0 && t.windowBits < 16 && (!e || !e.windowBits))
      t.windowBits += 32;
    if (t.windowBits > 15 && t.windowBits < 48)
      if (0 == (15 & t.windowBits)) t.windowBits |= 15;
    this.err = 0;
    this.msg = "";
    this.ended = !1;
    this.chunks = [];
    this.strm = new Wr();
    this.strm.avail_out = 0;
    var i = ga.inflateInit2(this.strm, t.windowBits);
    if (i !== ma.Z_OK) throw new Error(ur[i]);
    this.header = new va();
    ga.inflateGetHeader(this.strm, this.header);
    if (t.dictionary) {
      if ("string" == typeof t.dictionary) t.dictionary = jr(t.dictionary);
      else if ("[object ArrayBuffer]" === ba.call(t.dictionary))
        t.dictionary = new Uint8Array(t.dictionary);
      if (t.raw)
        if ((i = ga.inflateSetDictionary(this.strm, t.dictionary)) !== ma.Z_OK)
          throw new Error(ur[i]);
    }
  }
  ya.prototype.push = function (e, t) {
    var i,
      n,
      r,
      a,
      s,
      o = this.strm,
      l = this.options.chunkSize,
      c = this.options.dictionary,
      h = !1;
    if (this.ended) return !1;
    n = t === ~~t ? t : !0 === t ? ma.Z_FINISH : ma.Z_NO_FLUSH;
    if ("string" == typeof e)
      o.input = (function (e) {
        for (var t = new Fn.Buf8(e.length), i = 0, n = t.length; i < n; i++)
          t[i] = e.charCodeAt(i);
        return t;
      })(e);
    else if ("[object ArrayBuffer]" === ba.call(e)) o.input = new Uint8Array(e);
    else o.input = e;
    o.next_in = 0;
    o.avail_in = o.input.length;
    do {
      if (0 === o.avail_out) {
        o.output = new Fn.Buf8(l);
        o.next_out = 0;
        o.avail_out = l;
      }
      if ((i = ga.inflate(o, ma.Z_NO_FLUSH)) === ma.Z_NEED_DICT && c)
        i = ga.inflateSetDictionary(this.strm, c);
      if (i === ma.Z_BUF_ERROR && !0 === h) {
        i = ma.Z_OK;
        h = !1;
      }
      if (i !== ma.Z_STREAM_END && i !== ma.Z_OK) {
        this.onEnd(i);
        this.ended = !0;
        return !1;
      }
      if (o.next_out)
        if (
          0 === o.avail_out ||
          i === ma.Z_STREAM_END ||
          (0 === o.avail_in && (n === ma.Z_FINISH || n === ma.Z_SYNC_FLUSH))
        )
          if ("string" === this.options.to) {
            r = Hr(o.output, o.next_out);
            a = o.next_out - r;
            s = qr(o.output, r);
            o.next_out = a;
            o.avail_out = l - a;
            if (a) Fn.arraySet(o.output, o.output, r, a, 0);
            this.onData(s);
          } else this.onData(Fn.shrinkBuf(o.output, o.next_out));
      if (0 === o.avail_in && 0 === o.avail_out) h = !0;
    } while ((o.avail_in > 0 || 0 === o.avail_out) && i !== ma.Z_STREAM_END);
    if (i === ma.Z_STREAM_END) n = ma.Z_FINISH;
    if (n === ma.Z_FINISH) {
      i = ga.inflateEnd(this.strm);
      this.onEnd(i);
      this.ended = !0;
      return i === ma.Z_OK;
    }
    if (n === ma.Z_SYNC_FLUSH) {
      this.onEnd(ma.Z_OK);
      o.avail_out = 0;
      return !0;
    }
    return !0;
  };
  ya.prototype.onData = function (e) {
    this.chunks.push(e);
  };
  ya.prototype.onEnd = function (e) {
    if (e === ma.Z_OK)
      if ("string" === this.options.to) this.result = this.chunks.join("");
      else this.result = Fn.flattenChunks(this.chunks);
    this.chunks = [];
    this.err = e;
    this.msg = this.strm.msg;
  };
  function wa(e, t) {
    var i = new ya(t);
    i.push(e, !0);
    if (i.err) throw i.msg || ur[i.err];
    return i.result;
  }
  var xa = {
      Inflate: ya,
      inflate: wa,
      inflateRaw: function (e, t) {
        (t = t || {}).raw = !0;
        return wa(e, t);
      },
      ungzip: wa,
    },
    ka = {};
  (0, Fn.assign)(ka, Kr, xa, ma);
  var Ca = ka,
    Sa = (function () {
      function e(e, t) {
        this.major = String(e);
        this.minor = String(t);
      }
      e.prototype.toString = function () {
        var e = y(129);
        return "%PDF-" + this.major + "." + this.minor + "\n%" + e + e + e + e;
      };
      e.prototype.sizeInBytes = function () {
        return 12 + this.major.length + this.minor.length;
      };
      e.prototype.copyBytesInto = function (e, t) {
        var i = t;
        e[t++] = An.Percent;
        e[t++] = An.P;
        e[t++] = An.D;
        e[t++] = An.F;
        e[t++] = An.Dash;
        t += k(this.major, e, t);
        e[t++] = An.Period;
        t += k(this.minor, e, t);
        e[t++] = An.Newline;
        e[t++] = An.Percent;
        e[t++] = 129;
        e[t++] = 129;
        e[t++] = 129;
        e[t++] = 129;
        return t - i;
      };
      e.forVersion = function (t, i) {
        return new e(t, i);
      };
      return e;
    })(),
    _a = (function () {
      function e() {}
      e.prototype.clone = function (e) {
        throw new Ji(this.constructor.name, "clone");
      };
      e.prototype.toString = function () {
        throw new Ji(this.constructor.name, "toString");
      };
      e.prototype.sizeInBytes = function () {
        throw new Ji(this.constructor.name, "sizeInBytes");
      };
      e.prototype.copyBytesInto = function (e, t) {
        throw new Ji(this.constructor.name, "copyBytesInto");
      };
      return e;
    })(),
    Aa = (function (e) {
      i(t, e);
      function t(t) {
        var i = e.call(this) || this;
        i.numberValue = t;
        i.stringValue = he(t);
        return i;
      }
      t.prototype.asNumber = function () {
        return this.numberValue;
      };
      t.prototype.value = function () {
        return this.numberValue;
      };
      t.prototype.clone = function () {
        return t.of(this.numberValue);
      };
      t.prototype.toString = function () {
        return this.stringValue;
      };
      t.prototype.sizeInBytes = function () {
        return this.stringValue.length;
      };
      t.prototype.copyBytesInto = function (e, t) {
        t += k(this.stringValue, e, t);
        return this.stringValue.length;
      };
      t.of = function (e) {
        return new t(e);
      };
      return t;
    })(_a),
    Fa = (function (e) {
      i(t, e);
      function t(t) {
        var i = e.call(this) || this;
        i.array = [];
        i.context = t;
        return i;
      }
      t.prototype.size = function () {
        return this.array.length;
      };
      t.prototype.push = function (e) {
        this.array.push(e);
      };
      t.prototype.insert = function (e, t) {
        this.array.splice(e, 0, t);
      };
      t.prototype.indexOf = function (e) {
        var t = this.array.indexOf(e);
        return -1 === t ? void 0 : t;
      };
      t.prototype.remove = function (e) {
        this.array.splice(e, 1);
      };
      t.prototype.set = function (e, t) {
        this.array[e] = t;
      };
      t.prototype.get = function (e) {
        return this.array[e];
      };
      t.prototype.lookupMaybe = function (e) {
        for (var t, i = [], n = 1; n < arguments.length; n++)
          i[n - 1] = arguments[n];
        return (t = this.context).lookupMaybe.apply(t, s([this.get(e)], i));
      };
      t.prototype.lookup = function (e) {
        for (var t, i = [], n = 1; n < arguments.length; n++)
          i[n - 1] = arguments[n];
        return (t = this.context).lookup.apply(t, s([this.get(e)], i));
      };
      t.prototype.asRectangle = function () {
        if (4 !== this.size()) throw new on(this.size());
        var e = this.lookup(0, Aa).asNumber(),
          t = this.lookup(1, Aa).asNumber();
        return {
          x: e,
          y: t,
          width: this.lookup(2, Aa).asNumber() - e,
          height: this.lookup(3, Aa).asNumber() - t,
        };
      };
      t.prototype.asArray = function () {
        return this.array.slice();
      };
      t.prototype.clone = function (e) {
        for (
          var i = t.withContext(e || this.context), n = 0, r = this.size();
          n < r;
          n++
        )
          i.push(this.array[n]);
        return i;
      };
      t.prototype.toString = function () {
        for (var e = "[ ", t = 0, i = this.size(); t < i; t++) {
          e += this.get(t).toString();
          e += " ";
        }
        return e + "]";
      };
      t.prototype.sizeInBytes = function () {
        for (var e = 3, t = 0, i = this.size(); t < i; t++)
          e += this.get(t).sizeInBytes() + 1;
        return e;
      };
      t.prototype.copyBytesInto = function (e, t) {
        var i = t;
        e[t++] = An.LeftSquareBracket;
        e[t++] = An.Space;
        for (var n = 0, r = this.size(); n < r; n++) {
          t += this.get(n).copyBytesInto(e, t);
          e[t++] = An.Space;
        }
        e[t++] = An.RightSquareBracket;
        return t - i;
      };
      t.withContext = function (e) {
        return new t(e);
      };
      return t;
    })(_a),
    Ta = {},
    Pa = (function (e) {
      i(t, e);
      function t(t, i) {
        var n = this;
        if (t !== Ta) throw new $i("PDFBool");
        (n = e.call(this) || this).value = i;
        return n;
      }
      t.prototype.asBoolean = function () {
        return this.value;
      };
      t.prototype.clone = function () {
        return this;
      };
      t.prototype.toString = function () {
        return String(this.value);
      };
      t.prototype.sizeInBytes = function () {
        return this.value ? 4 : 5;
      };
      t.prototype.copyBytesInto = function (e, t) {
        if (this.value) {
          e[t++] = An.t;
          e[t++] = An.r;
          e[t++] = An.u;
          e[t++] = An.e;
          return 4;
        } else {
          e[t++] = An.f;
          e[t++] = An.a;
          e[t++] = An.l;
          e[t++] = An.s;
          e[t++] = An.e;
          return 5;
        }
      };
      t.True = new t(Ta, !0);
      t.False = new t(Ta, !1);
      return t;
    })(_a),
    Ea = new ((function (e) {
      i(t, e);
      function t() {
        return (null !== e && e.apply(this, arguments)) || this;
      }
      t.prototype.asNull = function () {
        return null;
      };
      t.prototype.clone = function () {
        return this;
      };
      t.prototype.toString = function () {
        return "null";
      };
      t.prototype.sizeInBytes = function () {
        return 4;
      };
      t.prototype.copyBytesInto = function (e, t) {
        e[t++] = An.n;
        e[t++] = An.u;
        e[t++] = An.l;
        e[t++] = An.l;
        return 4;
      };
      return t;
    })(_a))(),
    Ia = (function (e) {
      i(t, e);
      function t(t, i) {
        var n = e.call(this) || this;
        n.dict = t;
        n.context = i;
        return n;
      }
      t.prototype.keys = function () {
        return Array.from(this.dict.keys());
      };
      t.prototype.values = function () {
        return Array.from(this.dict.values());
      };
      t.prototype.entries = function () {
        return Array.from(this.dict.entries());
      };
      t.prototype.set = function (e, t) {
        this.dict.set(e, t);
      };
      t.prototype.get = function (e, t) {
        if (void 0 === t) t = !1;
        var i = this.dict.get(e);
        if (i !== Ea || t) return i;
      };
      t.prototype.has = function (e) {
        var t = this.dict.get(e);
        return void 0 !== t && t !== Ea;
      };
      t.prototype.lookupMaybe = function (e) {
        for (var t, i = [], n = 1; n < arguments.length; n++)
          i[n - 1] = arguments[n];
        var r = i.includes(Ea),
          a = (t = this.context).lookupMaybe.apply(t, s([this.get(e, r)], i));
        if (a !== Ea || r) return a;
      };
      t.prototype.lookup = function (e) {
        for (var t, i = [], n = 1; n < arguments.length; n++)
          i[n - 1] = arguments[n];
        var r = i.includes(Ea),
          a = (t = this.context).lookup.apply(t, s([this.get(e, r)], i));
        if (a !== Ea || r) return a;
      };
      t.prototype.delete = function (e) {
        return this.dict.delete(e);
      };
      t.prototype.asMap = function () {
        return new Map(this.dict);
      };
      t.prototype.clone = function (e) {
        for (
          var i = t.withContext(e || this.context),
            n = this.entries(),
            r = 0,
            a = n.length;
          r < a;
          r++
        ) {
          var s = n[r],
            o = s[0],
            l = s[1];
          i.set(o, l);
        }
        return i;
      };
      t.prototype.toString = function () {
        for (
          var e = "<<\n", t = this.entries(), i = 0, n = t.length;
          i < n;
          i++
        ) {
          var r = t[i],
            a = r[0],
            s = r[1];
          e += a.toString() + " " + s.toString() + "\n";
        }
        return e + ">>";
      };
      t.prototype.sizeInBytes = function () {
        for (var e = 5, t = this.entries(), i = 0, n = t.length; i < n; i++) {
          var r = t[i],
            a = r[0],
            s = r[1];
          e += a.sizeInBytes() + s.sizeInBytes() + 2;
        }
        return e;
      };
      t.prototype.copyBytesInto = function (e, t) {
        var i = t;
        e[t++] = An.LessThan;
        e[t++] = An.LessThan;
        e[t++] = An.Newline;
        for (var n = this.entries(), r = 0, a = n.length; r < a; r++) {
          var s = n[r],
            o = s[0],
            l = s[1];
          t += o.copyBytesInto(e, t);
          e[t++] = An.Space;
          t += l.copyBytesInto(e, t);
          e[t++] = An.Newline;
        }
        e[t++] = An.GreaterThan;
        e[t++] = An.GreaterThan;
        return t - i;
      };
      t.withContext = function (e) {
        return new t(new Map(), e);
      };
      t.fromMapWithContext = function (e, i) {
        return new t(e, i);
      };
      return t;
    })(_a),
    Da = new Uint8Array(256);
  Da[An.LeftParen] = 1;
  Da[An.RightParen] = 1;
  Da[An.LessThan] = 1;
  Da[An.GreaterThan] = 1;
  Da[An.LeftSquareBracket] = 1;
  Da[An.RightSquareBracket] = 1;
  Da[An.LeftCurly] = 1;
  Da[An.RightCurly] = 1;
  Da[An.ForwardSlash] = 1;
  Da[An.Percent] = 1;
  var Oa = new Uint8Array(256);
  Oa[An.Null] = 1;
  Oa[An.Tab] = 1;
  Oa[An.Newline] = 1;
  Oa[An.FormFeed] = 1;
  Oa[An.CarriageReturn] = 1;
  Oa[An.Space] = 1;
  for (var Ra = new Uint8Array(256), Na = 0; Na < 256; Na++)
    Ra[Na] = Oa[Na] || Da[Na] ? 1 : 0;
  Ra[An.Hash] = 1;
  var Ma,
    Ba = {},
    La = new Map(),
    Ua = (function (e) {
      i(t, e);
      function t(t, i) {
        var n = this;
        if (t !== Ba) throw new $i("PDFName");
        n = e.call(this) || this;
        for (var r, a = "/", s = 0, o = i.length; s < o; s++) {
          var l = i[s],
            c = g(l);
          a +=
            (r = c) >= An.ExclamationPoint && r <= An.Tilde && !Ra[r]
              ? l
              : "#" + b(c);
        }
        n.encodedName = a;
        return n;
      }
      t.prototype.asBytes = function () {
        for (
          var e = [],
            t = "",
            i = !1,
            n = function (t) {
              if (void 0 !== t) e.push(t);
              i = !1;
            },
            r = 1,
            a = this.encodedName.length;
          r < a;
          r++
        ) {
          var s = this.encodedName[r],
            o = g(s),
            l = this.encodedName[r + 1];
          if (!i)
            if (o === An.Hash) i = !0;
            else n(o);
          else if (
            (o >= An.Zero && o <= An.Nine) ||
            (o >= An.a && o <= An.f) ||
            (o >= An.A && o <= An.F)
          ) {
            if (
              2 === (t += s).length ||
              !(
                (l >= "0" && l <= "9") ||
                (l >= "a" && l <= "f") ||
                (l >= "A" && l <= "F")
              )
            ) {
              n(parseInt(t, 16));
              t = "";
            }
          } else n(o);
        }
        return new Uint8Array(e);
      };
      t.prototype.decodeText = function () {
        var e = this.asBytes();
        return String.fromCharCode.apply(String, Array.from(e));
      };
      t.prototype.asString = function () {
        return this.encodedName;
      };
      t.prototype.value = function () {
        return this.encodedName;
      };
      t.prototype.clone = function () {
        return this;
      };
      t.prototype.toString = function () {
        return this.encodedName;
      };
      t.prototype.sizeInBytes = function () {
        return this.encodedName.length;
      };
      t.prototype.copyBytesInto = function (e, t) {
        t += k(this.encodedName, e, t);
        return this.encodedName.length;
      };
      t.of = function (e) {
        var i = (function (e) {
            return e.replace(/#([\dABCDEF]{2})/g, function (e, t) {
              return w(t);
            });
          })(e),
          n = La.get(i);
        if (!n) {
          n = new t(Ba, i);
          La.set(i, n);
        }
        return n;
      };
      t.Length = t.of("Length");
      t.FlateDecode = t.of("FlateDecode");
      t.Resources = t.of("Resources");
      t.Font = t.of("Font");
      t.XObject = t.of("XObject");
      t.ExtGState = t.of("ExtGState");
      t.Contents = t.of("Contents");
      t.Type = t.of("Type");
      t.Parent = t.of("Parent");
      t.MediaBox = t.of("MediaBox");
      t.Page = t.of("Page");
      t.Annots = t.of("Annots");
      t.TrimBox = t.of("TrimBox");
      t.ArtBox = t.of("ArtBox");
      t.BleedBox = t.of("BleedBox");
      t.CropBox = t.of("CropBox");
      t.Rotate = t.of("Rotate");
      t.Title = t.of("Title");
      t.Author = t.of("Author");
      t.Subject = t.of("Subject");
      t.Creator = t.of("Creator");
      t.Keywords = t.of("Keywords");
      t.Producer = t.of("Producer");
      t.CreationDate = t.of("CreationDate");
      t.ModDate = t.of("ModDate");
      return t;
    })(_a),
    za = (function (e) {
      i(t, e);
      function t(t) {
        var i = e.call(this) || this;
        i.dict = t;
        return i;
      }
      t.prototype.clone = function (e) {
        throw new Ji(this.constructor.name, "clone");
      };
      t.prototype.getContentsString = function () {
        throw new Ji(this.constructor.name, "getContentsString");
      };
      t.prototype.getContents = function () {
        throw new Ji(this.constructor.name, "getContents");
      };
      t.prototype.getContentsSize = function () {
        throw new Ji(this.constructor.name, "getContentsSize");
      };
      t.prototype.updateDict = function () {
        var e = this.getContentsSize();
        this.dict.set(Ua.Length, Aa.of(e));
      };
      t.prototype.sizeInBytes = function () {
        this.updateDict();
        return this.dict.sizeInBytes() + this.getContentsSize() + 18;
      };
      t.prototype.toString = function () {
        this.updateDict();
        var e = this.dict.toString();
        e += "\nstream\n";
        return (e += this.getContentsString()) + "\nendstream";
      };
      t.prototype.copyBytesInto = function (e, t) {
        this.updateDict();
        var i = t;
        t += this.dict.copyBytesInto(e, t);
        e[t++] = An.Newline;
        e[t++] = An.s;
        e[t++] = An.t;
        e[t++] = An.r;
        e[t++] = An.e;
        e[t++] = An.a;
        e[t++] = An.m;
        e[t++] = An.Newline;
        for (var n = this.getContents(), r = 0, a = n.length; r < a; r++)
          e[t++] = n[r];
        e[t++] = An.Newline;
        e[t++] = An.e;
        e[t++] = An.n;
        e[t++] = An.d;
        e[t++] = An.s;
        e[t++] = An.t;
        e[t++] = An.r;
        e[t++] = An.e;
        e[t++] = An.a;
        e[t++] = An.m;
        return t - i;
      };
      return t;
    })(_a),
    ja = (function (e) {
      i(t, e);
      function t(t, i) {
        var n = e.call(this, t) || this;
        n.contents = i;
        return n;
      }
      t.prototype.asUint8Array = function () {
        return this.contents.slice();
      };
      t.prototype.clone = function (e) {
        return t.of(this.dict.clone(e), this.contents.slice());
      };
      t.prototype.getContentsString = function () {
        return z(this.contents);
      };
      t.prototype.getContents = function () {
        return this.contents;
      };
      t.prototype.getContentsSize = function () {
        return this.contents.length;
      };
      t.of = function (e, i) {
        return new t(e, i);
      };
      return t;
    })(za),
    qa = {},
    Ha = new Map(),
    Wa = (function (e) {
      i(t, e);
      function t(t, i, n) {
        var r = this;
        if (t !== qa) throw new $i("PDFRef");
        (r = e.call(this) || this).objectNumber = i;
        r.generationNumber = n;
        r.tag = i + " " + n + " R";
        return r;
      }
      t.prototype.clone = function () {
        return this;
      };
      t.prototype.toString = function () {
        return this.tag;
      };
      t.prototype.sizeInBytes = function () {
        return this.tag.length;
      };
      t.prototype.copyBytesInto = function (e, t) {
        t += k(this.tag, e, t);
        return this.tag.length;
      };
      t.of = function (e, i) {
        if (void 0 === i) i = 0;
        var n = e + " " + i + " R",
          r = Ha.get(n);
        if (!r) {
          r = new t(qa, e, i);
          Ha.set(n, r);
        }
        return r;
      };
      return t;
    })(_a),
    Ga = (function () {
      function e(e, t) {
        this.name = e;
        this.args = t || [];
      }
      e.prototype.clone = function (t) {
        for (
          var i = new Array(this.args.length), n = 0, r = i.length;
          n < r;
          n++
        ) {
          var a = this.args[n];
          i[n] = a instanceof _a ? a.clone(t) : a;
        }
        return e.of(this.name, i);
      };
      e.prototype.toString = function () {
        for (var e = "", t = 0, i = this.args.length; t < i; t++)
          e += String(this.args[t]) + " ";
        return e + this.name;
      };
      e.prototype.sizeInBytes = function () {
        for (var e = 0, t = 0, i = this.args.length; t < i; t++) {
          var n = this.args[t];
          e += (n instanceof _a ? n.sizeInBytes() : n.length) + 1;
        }
        return e + this.name.length;
      };
      e.prototype.copyBytesInto = function (e, t) {
        for (var i = t, n = 0, r = this.args.length; n < r; n++) {
          var a = this.args[n];
          if (a instanceof _a) t += a.copyBytesInto(e, t);
          else t += k(a, e, t);
          e[t++] = An.Space;
        }
        return (t += k(this.name, e, t)) - i;
      };
      e.of = function (t, i) {
        return new e(t, i);
      };
      return e;
    })();
  !(function (e) {
    e.NonStrokingColor = "sc";
    e.NonStrokingColorN = "scn";
    e.NonStrokingColorRgb = "rg";
    e.NonStrokingColorGray = "g";
    e.NonStrokingColorCmyk = "k";
    e.NonStrokingColorspace = "cs";
    e.StrokingColor = "SC";
    e.StrokingColorN = "SCN";
    e.StrokingColorRgb = "RG";
    e.StrokingColorGray = "G";
    e.StrokingColorCmyk = "K";
    e.StrokingColorspace = "CS";
    e.BeginMarkedContentSequence = "BDC";
    e.BeginMarkedContent = "BMC";
    e.EndMarkedContent = "EMC";
    e.MarkedContentPointWithProps = "DP";
    e.MarkedContentPoint = "MP";
    e.DrawObject = "Do";
    e.ConcatTransformationMatrix = "cm";
    e.PopGraphicsState = "Q";
    e.PushGraphicsState = "q";
    e.SetFlatness = "i";
    e.SetGraphicsStateParams = "gs";
    e.SetLineCapStyle = "J";
    e.SetLineDashPattern = "d";
    e.SetLineJoinStyle = "j";
    e.SetLineMiterLimit = "M";
    e.SetLineWidth = "w";
    e.SetTextMatrix = "Tm";
    e.SetRenderingIntent = "ri";
    e.AppendRectangle = "re";
    e.BeginInlineImage = "BI";
    e.BeginInlineImageData = "ID";
    e.EndInlineImage = "EI";
    e.ClipEvenOdd = "W*";
    e.ClipNonZero = "W";
    e.CloseAndStroke = "s";
    e.CloseFillEvenOddAndStroke = "b*";
    e.CloseFillNonZeroAndStroke = "b";
    e.ClosePath = "h";
    e.AppendBezierCurve = "c";
    e.CurveToReplicateFinalPoint = "y";
    e.CurveToReplicateInitialPoint = "v";
    e.EndPath = "n";
    e.FillEvenOddAndStroke = "B*";
    e.FillEvenOdd = "f*";
    e.FillNonZeroAndStroke = "B";
    e.FillNonZero = "f";
    e.LegacyFillNonZero = "F";
    e.LineTo = "l";
    e.MoveTo = "m";
    e.ShadingFill = "sh";
    e.StrokePath = "S";
    e.BeginText = "BT";
    e.EndText = "ET";
    e.MoveText = "Td";
    e.MoveTextSetLeading = "TD";
    e.NextLine = "T*";
    e.SetCharacterSpacing = "Tc";
    e.SetFontAndSize = "Tf";
    e.SetTextHorizontalScaling = "Tz";
    e.SetTextLineHeight = "TL";
    e.SetTextRenderingMode = "Tr";
    e.SetTextRise = "Ts";
    e.SetWordSpacing = "Tw";
    e.ShowText = "Tj";
    e.ShowTextAdjusted = "TJ";
    e.ShowTextLine = "'";
    e.ShowTextLineAndSpace = '"';
    e.Type3D0 = "d0";
    e.Type3D1 = "d1";
    e.BeginCompatibilitySection = "BX";
    e.EndCompatibilitySection = "EX";
  })(Ma || (Ma = {}));
  var Va,
    Xa = Ma,
    Ka = (function (e) {
      i(t, e);
      function t(t, i) {
        var n = e.call(this, t) || this;
        n.computeContents = function () {
          var e = n.getUnencodedContents();
          return n.encode ? Ca.deflate(e) : e;
        };
        n.encode = i;
        if (i) t.set(Ua.of("Filter"), Ua.of("FlateDecode"));
        n.contentsCache = Zi.populatedBy(n.computeContents);
        return n;
      }
      t.prototype.getContents = function () {
        return this.contentsCache.access();
      };
      t.prototype.getContentsSize = function () {
        return this.contentsCache.access().length;
      };
      t.prototype.getUnencodedContents = function () {
        throw new Ji(this.constructor.name, "getUnencodedContents");
      };
      return t;
    })(za),
    Ya = (function (e) {
      i(t, e);
      function t(t, i, n) {
        if (void 0 === n) n = !0;
        var r = e.call(this, t, n) || this;
        r.operators = i;
        return r;
      }
      t.prototype.push = function () {
        for (var e, t = [], i = 0; i < arguments.length; i++)
          t[i] = arguments[i];
        (e = this.operators).push.apply(e, t);
      };
      t.prototype.clone = function (e) {
        for (
          var i = new Array(this.operators.length),
            n = 0,
            r = this.operators.length;
          n < r;
          n++
        )
          i[n] = this.operators[n].clone(e);
        var a = this.dict,
          s = this.encode;
        return t.of(a.clone(e), i, s);
      };
      t.prototype.getContentsString = function () {
        for (var e = "", t = 0, i = this.operators.length; t < i; t++)
          e += this.operators[t] + "\n";
        return e;
      };
      t.prototype.getUnencodedContents = function () {
        for (
          var e = new Uint8Array(this.getUnencodedContentsSize()),
            t = 0,
            i = 0,
            n = this.operators.length;
          i < n;
          i++
        ) {
          t += this.operators[i].copyBytesInto(e, t);
          e[t++] = An.Newline;
        }
        return e;
      };
      t.prototype.getUnencodedContentsSize = function () {
        for (var e = 0, t = 0, i = this.operators.length; t < i; t++)
          e += this.operators[t].sizeInBytes() + 1;
        return e;
      };
      t.of = function (e, i, n) {
        if (void 0 === n) n = !0;
        return new t(e, i, n);
      };
      return t;
    })(Ka),
    Za = function (e, t) {
      var i = e[0],
        n = t[0];
      return i.objectNumber - n.objectNumber;
    },
    Ja = (function () {
      function e() {
        this.largestObjectNumber = 0;
        this.header = Sa.forVersion(1, 7);
        this.trailerInfo = {};
        this.indirectObjects = new Map();
      }
      e.prototype.assign = function (e, t) {
        this.indirectObjects.set(e, t);
        if (e.objectNumber > this.largestObjectNumber)
          this.largestObjectNumber = e.objectNumber;
      };
      e.prototype.nextRef = function () {
        this.largestObjectNumber += 1;
        return Wa.of(this.largestObjectNumber);
      };
      e.prototype.register = function (e) {
        var t = this.nextRef();
        this.assign(t, e);
        return t;
      };
      e.prototype.delete = function (e) {
        return this.indirectObjects.delete(e);
      };
      e.prototype.lookupMaybe = function (e) {
        for (var t = [], i = 1; i < arguments.length; i++)
          t[i - 1] = arguments[i];
        var n = t.includes(Ea),
          r = e instanceof Wa ? this.indirectObjects.get(e) : e;
        if (r && (r !== Ea || n)) {
          for (var a = 0, s = t.length; a < s; a++) {
            var o = t[a];
            if (o === Ea) {
              if (r === Ea) return r;
            } else if (r instanceof o) return r;
          }
          throw new Qi(t, r);
        }
      };
      e.prototype.lookup = function (e) {
        for (var t = [], i = 1; i < arguments.length; i++)
          t[i - 1] = arguments[i];
        var n = e instanceof Wa ? this.indirectObjects.get(e) : e;
        if (0 === t.length) return n;
        for (var r = 0, a = t.length; r < a; r++) {
          var s = t[r];
          if (s === Ea) {
            if (n === Ea) return n;
          } else if (n instanceof s) return n;
        }
        throw new Qi(t, n);
      };
      e.prototype.getObjectRef = function (e) {
        for (
          var t = Array.from(this.indirectObjects.entries()),
            i = 0,
            n = t.length;
          i < n;
          i++
        ) {
          var r = t[i],
            a = r[0];
          if (r[1] === e) return a;
        }
      };
      e.prototype.enumerateIndirectObjects = function () {
        return Array.from(this.indirectObjects.entries()).sort(Za);
      };
      e.prototype.obj = function (e) {
        if (e instanceof _a) return e;
        else if (null == e) return Ea;
        else if ("string" == typeof e) return Ua.of(e);
        else if ("number" == typeof e) return Aa.of(e);
        else if ("boolean" == typeof e) return e ? Pa.True : Pa.False;
        else if (Array.isArray(e)) {
          for (var t = Fa.withContext(this), i = 0, n = e.length; i < n; i++)
            t.push(this.obj(e[i]));
          return t;
        } else {
          var r = Ia.withContext(this),
            a = Object.keys(e);
          for (i = 0, n = a.length; i < n; i++) {
            var s = a[i],
              o = e[s];
            if (void 0 !== o) r.set(Ua.of(s), this.obj(o));
          }
          return r;
        }
      };
      e.prototype.stream = function (e, t) {
        if (void 0 === t) t = {};
        return ja.of(this.obj(t), B(e));
      };
      e.prototype.flateStream = function (e, t) {
        if (void 0 === t) t = {};
        return this.stream(
          Ca.deflate(B(e)),
          n(n({}, t), { Filter: "FlateDecode" })
        );
      };
      e.prototype.contentStream = function (e, t) {
        if (void 0 === t) t = {};
        return Ya.of(this.obj(t), e);
      };
      e.prototype.formXObject = function (e, t) {
        if (void 0 === t) t = {};
        return this.contentStream(
          e,
          n(
            n(
              {
                BBox: this.obj([0, 0, 0, 0]),
                Matrix: this.obj([1, 0, 0, 1, 0, 0]),
              },
              t
            ),
            { Type: "XObject", Subtype: "Form" }
          )
        );
      };
      e.prototype.getPushGraphicsStateContentStream = function () {
        if (this.pushGraphicsStateContentStreamRef)
          return this.pushGraphicsStateContentStreamRef;
        var e = this.obj({}),
          t = Ga.of(Xa.PushGraphicsState),
          i = Ya.of(e, [t]);
        this.pushGraphicsStateContentStreamRef = this.register(i);
        return this.pushGraphicsStateContentStreamRef;
      };
      e.prototype.getPopGraphicsStateContentStream = function () {
        if (this.popGraphicsStateContentStreamRef)
          return this.popGraphicsStateContentStreamRef;
        var e = this.obj({}),
          t = Ga.of(Xa.PopGraphicsState),
          i = Ya.of(e, [t]);
        this.popGraphicsStateContentStreamRef = this.register(i);
        return this.popGraphicsStateContentStreamRef;
      };
      e.create = function () {
        return new e();
      };
      return e;
    })(),
    $a = (function (e) {
      i(t, e);
      function t(t, i, n) {
        if (void 0 === n) n = !0;
        var r = e.call(this, t, i) || this;
        r.normalized = !1;
        r.autoNormalizeCTM = n;
        return r;
      }
      t.prototype.clone = function (e) {
        for (
          var i = t.fromMapWithContext(
              new Map(),
              e || this.context,
              this.autoNormalizeCTM
            ),
            n = this.entries(),
            r = 0,
            a = n.length;
          r < a;
          r++
        ) {
          var s = n[r],
            o = s[0],
            l = s[1];
          i.set(o, l);
        }
        return i;
      };
      t.prototype.Parent = function () {
        return this.lookupMaybe(Ua.Parent, Ia);
      };
      t.prototype.Contents = function () {
        return this.lookup(Ua.of("Contents"));
      };
      t.prototype.Annots = function () {
        return this.lookupMaybe(Ua.Annots, Fa);
      };
      t.prototype.BleedBox = function () {
        return this.lookupMaybe(Ua.BleedBox, Fa);
      };
      t.prototype.TrimBox = function () {
        return this.lookupMaybe(Ua.TrimBox, Fa);
      };
      t.prototype.ArtBox = function () {
        return this.lookupMaybe(Ua.ArtBox, Fa);
      };
      t.prototype.Resources = function () {
        var e = this.getInheritableAttribute(Ua.Resources);
        return this.context.lookupMaybe(e, Ia);
      };
      t.prototype.MediaBox = function () {
        var e = this.getInheritableAttribute(Ua.MediaBox);
        return this.context.lookup(e, Fa);
      };
      t.prototype.CropBox = function () {
        var e = this.getInheritableAttribute(Ua.CropBox);
        return this.context.lookupMaybe(e, Fa);
      };
      t.prototype.Rotate = function () {
        var e = this.getInheritableAttribute(Ua.Rotate);
        return this.context.lookupMaybe(e, Aa);
      };
      t.prototype.getInheritableAttribute = function (e) {
        var t;
        this.ascend(function (i) {
          if (!t) t = i.get(e);
        });
        return t;
      };
      t.prototype.setParent = function (e) {
        this.set(Ua.Parent, e);
      };
      t.prototype.addContentStream = function (e) {
        var t = this.normalizedEntries().Contents || this.context.obj([]);
        this.set(Ua.Contents, t);
        t.push(e);
      };
      t.prototype.wrapContentStreams = function (e, t) {
        var i = this.Contents();
        if (i instanceof Fa) {
          i.insert(0, e);
          i.push(t);
          return !0;
        }
        return !1;
      };
      t.prototype.addAnnot = function (e) {
        this.normalizedEntries().Annots.push(e);
      };
      t.prototype.removeAnnot = function (e) {
        var t = this.normalizedEntries().Annots,
          i = t.indexOf(e);
        if (void 0 !== i) t.remove(i);
      };
      t.prototype.setFontDictionary = function (e, t) {
        this.normalizedEntries().Font.set(e, t);
      };
      t.prototype.setXObject = function (e, t) {
        this.normalizedEntries().XObject.set(e, t);
      };
      t.prototype.setExtGState = function (e, t) {
        this.normalizedEntries().ExtGState.set(e, t);
      };
      t.prototype.ascend = function (e) {
        e(this);
        var t = this.Parent();
        if (t) t.ascend(e);
      };
      t.prototype.normalize = function () {
        if (!this.normalized) {
          var e = this.context,
            t = this.get(Ua.Contents);
          if (this.context.lookup(t) instanceof za)
            this.set(Ua.Contents, e.obj([t]));
          if (this.autoNormalizeCTM)
            this.wrapContentStreams(
              this.context.getPushGraphicsStateContentStream(),
              this.context.getPopGraphicsStateContentStream()
            );
          var i = this.getInheritableAttribute(Ua.Resources),
            n = e.lookupMaybe(i, Ia) || e.obj({});
          this.set(Ua.Resources, n);
          var r = n.lookupMaybe(Ua.Font, Ia) || e.obj({});
          n.set(Ua.Font, r);
          var a = n.lookupMaybe(Ua.XObject, Ia) || e.obj({});
          n.set(Ua.XObject, a);
          var s = n.lookupMaybe(Ua.ExtGState, Ia) || e.obj({});
          n.set(Ua.ExtGState, s);
          var o = this.Annots() || e.obj([]);
          this.set(Ua.Annots, o);
          this.normalized = !0;
        }
      };
      t.prototype.normalizedEntries = function () {
        this.normalize();
        var e = this.Annots(),
          t = this.Resources();
        return {
          Annots: e,
          Resources: t,
          Contents: this.Contents(),
          Font: t.lookup(Ua.Font, Ia),
          XObject: t.lookup(Ua.XObject, Ia),
          ExtGState: t.lookup(Ua.ExtGState, Ia),
        };
      };
      t.InheritableEntries = ["Resources", "MediaBox", "CropBox", "Rotate"];
      t.withContextAndParent = function (e, i) {
        var n = new Map();
        n.set(Ua.Type, Ua.Page);
        n.set(Ua.Parent, i);
        n.set(Ua.Resources, e.obj({}));
        n.set(Ua.MediaBox, e.obj([0, 0, 612, 792]));
        return new t(n, e, !1);
      };
      t.fromMapWithContext = function (e, i, n) {
        if (void 0 === n) n = !0;
        return new t(e, i, n);
      };
      return t;
    })(Ia),
    Qa = (function () {
      function e(e, t) {
        var i = this;
        this.traversedObjects = new Map();
        this.copy = function (e) {
          return e instanceof $a
            ? i.copyPDFPage(e)
            : e instanceof Ia
            ? i.copyPDFDict(e)
            : e instanceof Fa
            ? i.copyPDFArray(e)
            : e instanceof za
            ? i.copyPDFStream(e)
            : e instanceof Wa
            ? i.copyPDFIndirectObject(e)
            : e.clone();
        };
        this.copyPDFPage = function (e) {
          for (
            var t = e.clone(), n = $a.InheritableEntries, r = 0, a = n.length;
            r < a;
            r++
          ) {
            var s = Ua.of(n[r]),
              o = t.getInheritableAttribute(s);
            if (!t.get(s) && o) t.set(s, o);
          }
          t.delete(Ua.of("Parent"));
          return i.copyPDFDict(t);
        };
        this.copyPDFDict = function (e) {
          if (i.traversedObjects.has(e)) return i.traversedObjects.get(e);
          var t = e.clone(i.dest);
          i.traversedObjects.set(e, t);
          for (var n = e.entries(), r = 0, a = n.length; r < a; r++) {
            var s = n[r],
              o = s[0],
              l = s[1];
            t.set(o, i.copy(l));
          }
          return t;
        };
        this.copyPDFArray = function (e) {
          if (i.traversedObjects.has(e)) return i.traversedObjects.get(e);
          var t = e.clone(i.dest);
          i.traversedObjects.set(e, t);
          for (var n = 0, r = e.size(); n < r; n++) {
            var a = e.get(n);
            t.set(n, i.copy(a));
          }
          return t;
        };
        this.copyPDFStream = function (e) {
          if (i.traversedObjects.has(e)) return i.traversedObjects.get(e);
          var t = e.clone(i.dest);
          i.traversedObjects.set(e, t);
          for (var n = e.dict.entries(), r = 0, a = n.length; r < a; r++) {
            var s = n[r],
              o = s[0],
              l = s[1];
            t.dict.set(o, i.copy(l));
          }
          return t;
        };
        this.copyPDFIndirectObject = function (e) {
          if (!i.traversedObjects.has(e)) {
            var t = i.dest.nextRef();
            i.traversedObjects.set(e, t);
            var n = i.src.lookup(e);
            if (n) {
              var r = i.copy(n);
              i.dest.assign(t, r);
            }
          }
          return i.traversedObjects.get(e);
        };
        this.src = e;
        this.dest = t;
      }
      e.for = function (t, i) {
        return new e(t, i);
      };
      return e;
    })(),
    es = (function () {
      function e(e) {
        this.subsections = e ? [[e]] : [];
        this.chunkIdx = 0;
        this.chunkLength = e ? 1 : 0;
      }
      e.prototype.addEntry = function (e, t) {
        this.append({ ref: e, offset: t, deleted: !1 });
      };
      e.prototype.addDeletedEntry = function (e, t) {
        this.append({ ref: e, offset: t, deleted: !0 });
      };
      e.prototype.toString = function () {
        for (var e = "xref\n", t = 0, i = this.subsections.length; t < i; t++) {
          var n = this.subsections[t];
          e += n[0].ref.objectNumber + " " + n.length + "\n";
          for (var r = 0, a = n.length; r < a; r++) {
            var s = n[r];
            e += x(String(s.offset), 10, "0");
            e += " ";
            e += x(String(s.ref.generationNumber), 5, "0");
            e += " ";
            e += s.deleted ? "f" : "n";
            e += " \n";
          }
        }
        return e;
      };
      e.prototype.sizeInBytes = function () {
        for (var e = 5, t = 0, i = this.subsections.length; t < i; t++) {
          var n = this.subsections[t],
            r = n.length,
            a = n[0];
          e += 2;
          e += String(a.ref.objectNumber).length;
          e += String(r).length;
          e += 20 * r;
        }
        return e;
      };
      e.prototype.copyBytesInto = function (e, t) {
        var i = t;
        e[t++] = An.x;
        e[t++] = An.r;
        e[t++] = An.e;
        e[t++] = An.f;
        e[t++] = An.Newline;
        return (
          (t += this.copySubsectionsIntoBuffer(this.subsections, e, t)) - i
        );
      };
      e.prototype.copySubsectionsIntoBuffer = function (e, t, i) {
        for (var n = i, r = e.length, a = 0; a < r; a++) {
          var s = this.subsections[a],
            o = String(s[0].ref.objectNumber);
          i += k(o, t, i);
          t[i++] = An.Space;
          var l = String(s.length);
          i += k(l, t, i);
          t[i++] = An.Newline;
          i += this.copyEntriesIntoBuffer(s, t, i);
        }
        return i - n;
      };
      e.prototype.copyEntriesIntoBuffer = function (e, t, i) {
        for (var n = e.length, r = 0; r < n; r++) {
          var a = e[r],
            s = x(String(a.offset), 10, "0");
          i += k(s, t, i);
          t[i++] = An.Space;
          var o = x(String(a.ref.generationNumber), 5, "0");
          i += k(o, t, i);
          t[i++] = An.Space;
          t[i++] = a.deleted ? An.f : An.n;
          t[i++] = An.Space;
          t[i++] = An.Newline;
        }
        return 20 * n;
      };
      e.prototype.append = function (e) {
        if (0 !== this.chunkLength) {
          var t = this.subsections[this.chunkIdx],
            i = t[this.chunkLength - 1];
          if (e.ref.objectNumber - i.ref.objectNumber > 1) {
            this.subsections.push([e]);
            this.chunkIdx += 1;
            this.chunkLength = 1;
          } else {
            t.push(e);
            this.chunkLength += 1;
          }
        } else {
          this.subsections.push([e]);
          this.chunkIdx = 0;
          this.chunkLength = 1;
        }
      };
      e.create = function () {
        return new e({ ref: Wa.of(0, 65535), offset: 0, deleted: !0 });
      };
      e.createEmpty = function () {
        return new e();
      };
      return e;
    })(),
    ts = (function () {
      function e(e) {
        this.lastXRefOffset = String(e);
      }
      e.prototype.toString = function () {
        return "startxref\n" + this.lastXRefOffset + "\n%%EOF";
      };
      e.prototype.sizeInBytes = function () {
        return 16 + this.lastXRefOffset.length;
      };
      e.prototype.copyBytesInto = function (e, t) {
        var i = t;
        e[t++] = An.s;
        e[t++] = An.t;
        e[t++] = An.a;
        e[t++] = An.r;
        e[t++] = An.t;
        e[t++] = An.x;
        e[t++] = An.r;
        e[t++] = An.e;
        e[t++] = An.f;
        e[t++] = An.Newline;
        t += k(this.lastXRefOffset, e, t);
        e[t++] = An.Newline;
        e[t++] = An.Percent;
        e[t++] = An.Percent;
        e[t++] = An.E;
        e[t++] = An.O;
        e[t++] = An.F;
        return t - i;
      };
      e.forLastCrossRefSectionOffset = function (t) {
        return new e(t);
      };
      return e;
    })(),
    is = (function () {
      function e(e) {
        this.dict = e;
      }
      e.prototype.toString = function () {
        return "trailer\n" + this.dict.toString();
      };
      e.prototype.sizeInBytes = function () {
        return 8 + this.dict.sizeInBytes();
      };
      e.prototype.copyBytesInto = function (e, t) {
        var i = t;
        e[t++] = An.t;
        e[t++] = An.r;
        e[t++] = An.a;
        e[t++] = An.i;
        e[t++] = An.l;
        e[t++] = An.e;
        e[t++] = An.r;
        e[t++] = An.Newline;
        return (t += this.dict.copyBytesInto(e, t)) - i;
      };
      e.of = function (t) {
        return new e(t);
      };
      return e;
    })(),
    ns = (function (e) {
      i(t, e);
      function t(t, i, n) {
        if (void 0 === n) n = !0;
        var r = e.call(this, t.obj({}), n) || this;
        r.objects = i;
        r.offsets = r.computeObjectOffsets();
        r.offsetsString = r.computeOffsetsString();
        r.dict.set(Ua.of("Type"), Ua.of("ObjStm"));
        r.dict.set(Ua.of("N"), Aa.of(r.objects.length));
        r.dict.set(Ua.of("First"), Aa.of(r.offsetsString.length));
        return r;
      }
      t.prototype.getObjectsCount = function () {
        return this.objects.length;
      };
      t.prototype.clone = function (e) {
        return t.withContextAndObjects(
          e || this.dict.context,
          this.objects.slice(),
          this.encode
        );
      };
      t.prototype.getContentsString = function () {
        for (
          var e = this.offsetsString, t = 0, i = this.objects.length;
          t < i;
          t++
        )
          e += this.objects[t][1] + "\n";
        return e;
      };
      t.prototype.getUnencodedContents = function () {
        for (
          var e = new Uint8Array(this.getUnencodedContentsSize()),
            t = k(this.offsetsString, e, 0),
            i = 0,
            n = this.objects.length;
          i < n;
          i++
        ) {
          t += this.objects[i][1].copyBytesInto(e, t);
          e[t++] = An.Newline;
        }
        return e;
      };
      t.prototype.getUnencodedContentsSize = function () {
        return (
          this.offsetsString.length +
          M(this.offsets)[1] +
          M(this.objects)[1].sizeInBytes() +
          1
        );
      };
      t.prototype.computeOffsetsString = function () {
        for (var e = "", t = 0, i = this.offsets.length; t < i; t++) {
          var n = this.offsets[t];
          e += n[0] + " " + n[1] + " ";
        }
        return e;
      };
      t.prototype.computeObjectOffsets = function () {
        for (
          var e = 0,
            t = new Array(this.objects.length),
            i = 0,
            n = this.objects.length;
          i < n;
          i++
        ) {
          var r = this.objects[i],
            a = r[0],
            s = r[1];
          t[i] = [a.objectNumber, e];
          e += s.sizeInBytes() + 1;
        }
        return t;
      };
      t.withContextAndObjects = function (e, i, n) {
        if (void 0 === n) n = !0;
        return new t(e, i, n);
      };
      return t;
    })(Ka),
    rs = (function () {
      function e(e, t) {
        var i = this;
        this.parsedObjects = 0;
        this.shouldWaitForTick = function (e) {
          i.parsedObjects += e;
          return i.parsedObjects % i.objectsPerTick == 0;
        };
        this.context = e;
        this.objectsPerTick = t;
      }
      e.prototype.serializeToBuffer = function () {
        return r(this, void 0, void 0, function () {
          var e, t, i, n, r, s, o, l, c, h, u, d, f, p, g, m, v;
          return a(this, function (a) {
            switch (a.label) {
              case 0:
                return [4, this.computeBufferSize()];
              case 1:
                (e = a.sent()),
                  (t = e.size),
                  (i = e.header),
                  (n = e.indirectObjects),
                  (r = e.xref),
                  (s = e.trailerDict),
                  (o = e.trailer);
                l = 0;
                c = new Uint8Array(t);
                l += i.copyBytesInto(c, l);
                c[l++] = An.Newline;
                c[l++] = An.Newline;
                (h = 0), (u = n.length);
                a.label = 2;
              case 2:
                if (!(h < u)) return [3, 5];
                (d = n[h]), (f = d[0]), (p = d[1]);
                g = String(f.objectNumber);
                l += k(g, c, l);
                c[l++] = An.Space;
                m = String(f.generationNumber);
                l += k(m, c, l);
                c[l++] = An.Space;
                c[l++] = An.o;
                c[l++] = An.b;
                c[l++] = An.j;
                c[l++] = An.Newline;
                l += p.copyBytesInto(c, l);
                c[l++] = An.Newline;
                c[l++] = An.e;
                c[l++] = An.n;
                c[l++] = An.d;
                c[l++] = An.o;
                c[l++] = An.b;
                c[l++] = An.j;
                c[l++] = An.Newline;
                c[l++] = An.Newline;
                v = p instanceof ns ? p.getObjectsCount() : 1;
                if (!this.shouldWaitForTick(v)) return [3, 4];
                else return [4, Y()];
              case 3:
                a.sent();
                a.label = 4;
              case 4:
                h++;
                return [3, 2];
              case 5:
                if (r) {
                  l += r.copyBytesInto(c, l);
                  c[l++] = An.Newline;
                }
                if (s) {
                  l += s.copyBytesInto(c, l);
                  c[l++] = An.Newline;
                  c[l++] = An.Newline;
                }
                l += o.copyBytesInto(c, l);
                return [2, c];
            }
          });
        });
      };
      e.prototype.computeIndirectObjectSize = function (e) {
        var t = e[0],
          i = e[1];
        return t.sizeInBytes() + 3 + (i.sizeInBytes() + 9);
      };
      e.prototype.createTrailerDict = function () {
        return this.context.obj({
          Size: this.context.largestObjectNumber + 1,
          Root: this.context.trailerInfo.Root,
          Encrypt: this.context.trailerInfo.Encrypt,
          Info: this.context.trailerInfo.Info,
          ID: this.context.trailerInfo.ID,
        });
      };
      e.prototype.computeBufferSize = function () {
        return r(this, void 0, void 0, function () {
          var e, t, i, n, r, s, o, l, c, h, u;
          return a(this, function (a) {
            switch (a.label) {
              case 0:
                e = Sa.forVersion(1, 7);
                t = e.sizeInBytes() + 2;
                i = es.create();
                n = this.context.enumerateIndirectObjects();
                (r = 0), (s = n.length);
                a.label = 1;
              case 1:
                if (!(r < s)) return [3, 4];
                o = n[r];
                l = o[0];
                i.addEntry(l, t);
                t += this.computeIndirectObjectSize(o);
                if (!this.shouldWaitForTick(1)) return [3, 3];
                else return [4, Y()];
              case 2:
                a.sent();
                a.label = 3;
              case 3:
                r++;
                return [3, 1];
              case 4:
                c = t;
                t += i.sizeInBytes() + 1;
                h = is.of(this.createTrailerDict());
                t += h.sizeInBytes() + 2;
                u = ts.forLastCrossRefSectionOffset(c);
                return [
                  2,
                  {
                    size: (t += u.sizeInBytes()),
                    header: e,
                    indirectObjects: n,
                    xref: i,
                    trailerDict: h,
                    trailer: u,
                  },
                ];
            }
          });
        });
      };
      e.forContext = function (t, i) {
        return new e(t, i);
      };
      return e;
    })(),
    as = (function (e) {
      i(t, e);
      function t(t) {
        var i = e.call(this) || this;
        i.data = t;
        return i;
      }
      t.prototype.clone = function () {
        return t.of(this.data.slice());
      };
      t.prototype.toString = function () {
        return "PDFInvalidObject(" + this.data.length + " bytes)";
      };
      t.prototype.sizeInBytes = function () {
        return this.data.length;
      };
      t.prototype.copyBytesInto = function (e, t) {
        for (var i = this.data.length, n = 0; n < i; n++) e[t++] = this.data[n];
        return i;
      };
      t.of = function (e) {
        return new t(e);
      };
      return t;
    })(_a);
  !(function (e) {
    e[(e.Deleted = 0)] = "Deleted";
    e[(e.Uncompressed = 1)] = "Uncompressed";
    e[(e.Compressed = 2)] = "Compressed";
  })(Va || (Va = {}));
  var ss = (function (e) {
      i(t, e);
      function t(t, i, n) {
        if (void 0 === n) n = !0;
        var r = e.call(this, t, n) || this;
        r.computeIndex = function () {
          for (var e = [], t = 0, i = 0, n = r.entries.length; i < n; i++) {
            var a = r.entries[i],
              s = r.entries[i - 1];
            if (0 === i) e.push(a.ref.objectNumber);
            else if (a.ref.objectNumber - s.ref.objectNumber > 1) {
              e.push(t);
              e.push(a.ref.objectNumber);
              t = 0;
            }
            t += 1;
          }
          e.push(t);
          return e;
        };
        r.computeEntryTuples = function () {
          for (
            var e = new Array(r.entries.length), t = 0, i = r.entries.length;
            t < i;
            t++
          ) {
            var n = r.entries[t];
            if (n.type === Va.Deleted) {
              var a = n.type,
                s = n.nextFreeObjectNumber,
                o = n.ref;
              e[t] = [a, s, o.generationNumber];
            }
            if (n.type === Va.Uncompressed) {
              a = n.type;
              var l = n.offset;
              o = n.ref;
              e[t] = [a, l, o.generationNumber];
            }
            if (n.type === Va.Compressed) {
              a = n.type;
              var c = n.objectStreamRef,
                h = n.index;
              e[t] = [a, c.objectNumber, h];
            }
          }
          return e;
        };
        r.computeMaxEntryByteWidths = function () {
          for (
            var e = r.entryTuplesCache.access(),
              t = [0, 0, 0],
              i = 0,
              n = e.length;
            i < n;
            i++
          ) {
            var a = e[i],
              s = a[0],
              o = a[1],
              l = a[2],
              c = ue(s),
              h = ue(o),
              u = ue(l);
            if (c > t[0]) t[0] = c;
            if (h > t[1]) t[1] = h;
            if (u > t[2]) t[2] = u;
          }
          return t;
        };
        r.entries = i || [];
        r.entryTuplesCache = Zi.populatedBy(r.computeEntryTuples);
        r.maxByteWidthsCache = Zi.populatedBy(r.computeMaxEntryByteWidths);
        r.indexCache = Zi.populatedBy(r.computeIndex);
        t.set(Ua.of("Type"), Ua.of("XRef"));
        return r;
      }
      t.prototype.addDeletedEntry = function (e, t) {
        var i = Va.Deleted;
        this.entries.push({ type: i, ref: e, nextFreeObjectNumber: t });
        this.entryTuplesCache.invalidate();
        this.maxByteWidthsCache.invalidate();
        this.indexCache.invalidate();
        this.contentsCache.invalidate();
      };
      t.prototype.addUncompressedEntry = function (e, t) {
        var i = Va.Uncompressed;
        this.entries.push({ type: i, ref: e, offset: t });
        this.entryTuplesCache.invalidate();
        this.maxByteWidthsCache.invalidate();
        this.indexCache.invalidate();
        this.contentsCache.invalidate();
      };
      t.prototype.addCompressedEntry = function (e, t, i) {
        var n = Va.Compressed;
        this.entries.push({ type: n, ref: e, objectStreamRef: t, index: i });
        this.entryTuplesCache.invalidate();
        this.maxByteWidthsCache.invalidate();
        this.indexCache.invalidate();
        this.contentsCache.invalidate();
      };
      t.prototype.clone = function (e) {
        var i = this,
          n = i.dict,
          r = i.entries,
          a = i.encode;
        return t.of(n.clone(e), r.slice(), a);
      };
      t.prototype.getContentsString = function () {
        for (
          var e = this.entryTuplesCache.access(),
            t = this.maxByteWidthsCache.access(),
            i = "",
            n = 0,
            r = e.length;
          n < r;
          n++
        ) {
          for (
            var a = e[n],
              s = a[0],
              o = a[1],
              l = a[2],
              c = H(de(s)),
              h = H(de(o)),
              u = H(de(l)),
              d = t[0] - 1;
            d >= 0;
            d--
          )
            i += (c[d] || 0).toString(2);
          for (d = t[1] - 1; d >= 0; d--) i += (h[d] || 0).toString(2);
          for (d = t[2] - 1; d >= 0; d--) i += (u[d] || 0).toString(2);
        }
        return i;
      };
      t.prototype.getUnencodedContents = function () {
        for (
          var e = this.entryTuplesCache.access(),
            t = this.maxByteWidthsCache.access(),
            i = new Uint8Array(this.getUnencodedContentsSize()),
            n = 0,
            r = 0,
            a = e.length;
          r < a;
          r++
        ) {
          for (
            var s = e[r],
              o = s[0],
              l = s[1],
              c = s[2],
              h = H(de(o)),
              u = H(de(l)),
              d = H(de(c)),
              f = t[0] - 1;
            f >= 0;
            f--
          )
            i[n++] = h[f] || 0;
          for (f = t[1] - 1; f >= 0; f--) i[n++] = u[f] || 0;
          for (f = t[2] - 1; f >= 0; f--) i[n++] = d[f] || 0;
        }
        return i;
      };
      t.prototype.getUnencodedContentsSize = function () {
        var e = this.maxByteWidthsCache.access();
        return W(e) * this.entries.length;
      };
      t.prototype.updateDict = function () {
        e.prototype.updateDict.call(this);
        var t = this.maxByteWidthsCache.access(),
          i = this.indexCache.access(),
          n = this.dict.context;
        this.dict.set(Ua.of("W"), n.obj(t));
        this.dict.set(Ua.of("Index"), n.obj(i));
      };
      t.create = function (e, i) {
        if (void 0 === i) i = !0;
        var n = new t(e, [], i);
        n.addDeletedEntry(Wa.of(0, 65535), 0);
        return n;
      };
      t.of = function (e, i, n) {
        if (void 0 === n) n = !0;
        return new t(e, i, n);
      };
      return t;
    })(Ka),
    os = (function (e) {
      i(t, e);
      function t(t, i, n, r) {
        var a = e.call(this, t, i) || this;
        a.encodeStreams = n;
        a.objectsPerStream = r;
        return a;
      }
      t.prototype.computeBufferSize = function () {
        return r(this, void 0, void 0, function () {
          var e, t, i, n, r, s, o, l, c, h, u, d, f, p, g, m, v, b, y;
          return a(this, function (a) {
            switch (a.label) {
              case 0:
                e = this.context.largestObjectNumber + 1;
                t = Sa.forVersion(1, 7);
                i = t.sizeInBytes() + 2;
                n = ss.create(this.createTrailerDict(), this.encodeStreams);
                r = [];
                s = [];
                o = [];
                l = this.context.enumerateIndirectObjects();
                (d = 0), (f = l.length);
                a.label = 1;
              case 1:
                if (!(d < f)) return [3, 6];
                c = l[d];
                (g = c[0]), (h = c[1]);
                if (
                  !(
                    g === this.context.trailerInfo.Encrypt ||
                    h instanceof za ||
                    h instanceof as ||
                    0 !== g.generationNumber
                  )
                )
                  return [3, 4];
                r.push(c);
                n.addUncompressedEntry(g, i);
                i += this.computeIndirectObjectSize(c);
                if (!this.shouldWaitForTick(1)) return [3, 3];
                else return [4, Y()];
              case 2:
                a.sent();
                a.label = 3;
              case 3:
                return [3, 5];
              case 4:
                p = M(s);
                u = M(o);
                if (!p || p.length % this.objectsPerStream == 0) {
                  p = [];
                  s.push(p);
                  u = Wa.of(e++);
                  o.push(u);
                }
                n.addCompressedEntry(g, u, p.length);
                p.push(c);
                a.label = 5;
              case 5:
                d++;
                return [3, 1];
              case 6:
                (d = 0), (f = s.length);
                a.label = 7;
              case 7:
                if (!(d < f)) return [3, 10];
                p = s[d];
                g = o[d];
                m = ns.withContextAndObjects(
                  this.context,
                  p,
                  this.encodeStreams
                );
                n.addUncompressedEntry(g, i);
                i += this.computeIndirectObjectSize([g, m]);
                r.push([g, m]);
                if (!this.shouldWaitForTick(p.length)) return [3, 9];
                else return [4, Y()];
              case 8:
                a.sent();
                a.label = 9;
              case 9:
                d++;
                return [3, 7];
              case 10:
                v = Wa.of(e++);
                n.dict.set(Ua.of("Size"), Aa.of(e));
                n.addUncompressedEntry(v, i);
                b = i;
                i += this.computeIndirectObjectSize([v, n]);
                r.push([v, n]);
                y = ts.forLastCrossRefSectionOffset(b);
                return [
                  2,
                  {
                    size: (i += y.sizeInBytes()),
                    header: t,
                    indirectObjects: r,
                    trailer: y,
                  },
                ];
            }
          });
        });
      };
      t.forContext = function (e, i, n, r) {
        if (void 0 === n) n = !0;
        if (void 0 === r) r = 50;
        return new t(e, i, n, r);
      };
      return t;
    })(rs),
    ls = (function (e) {
      i(t, e);
      function t(t) {
        var i = e.call(this) || this;
        i.value = t;
        return i;
      }
      t.prototype.asBytes = function () {
        for (
          var e = this.value + (this.value.length % 2 == 1 ? "0" : ""),
            t = e.length,
            i = new Uint8Array(e.length / 2),
            n = 0,
            r = 0;
          n < t;

        ) {
          var a = parseInt(e.substring(n, n + 2), 16);
          i[r] = a;
          n += 2;
          r += 1;
        }
        return i;
      };
      t.prototype.decodeText = function () {
        var e = this.asBytes();
        if (ce(e)) return ie(e);
        else return Yi(e);
      };
      t.prototype.decodeDate = function () {
        var e = this.decodeText(),
          t = R(e);
        if (!t) throw new ln(e);
        return t;
      };
      t.prototype.asString = function () {
        return this.value;
      };
      t.prototype.clone = function () {
        return t.of(this.value);
      };
      t.prototype.toString = function () {
        return "<" + this.value + ">";
      };
      t.prototype.sizeInBytes = function () {
        return this.value.length + 2;
      };
      t.prototype.copyBytesInto = function (e, t) {
        e[t++] = An.LessThan;
        t += k(this.value, e, t);
        e[t++] = An.GreaterThan;
        return this.value.length + 2;
      };
      t.of = function (e) {
        return new t(e);
      };
      t.fromText = function (e) {
        for (var i = Z(e), n = "", r = 0, a = i.length; r < a; r++)
          n += v(i[r], 4);
        return new t(n);
      };
      return t;
    })(_a),
    cs = (function () {
      function e(e, t) {
        this.encoding =
          e === gi.ZapfDingbats
            ? Ci.ZapfDingbats
            : e === gi.Symbol
            ? Ci.Symbol
            : Ci.WinAnsi;
        this.font = yi.load(e);
        this.fontName = this.font.FontName;
        this.customName = t;
      }
      e.prototype.encodeText = function (e) {
        for (
          var t = this.encodeTextAsGlyphs(e),
            i = new Array(t.length),
            n = 0,
            r = t.length;
          n < r;
          n++
        )
          i[n] = b(t[n].code);
        return ls.of(i.join(""));
      };
      e.prototype.widthOfTextAtSize = function (e, t) {
        for (
          var i = this.encodeTextAsGlyphs(e), n = 0, r = 0, a = i.length;
          r < a;
          r++
        ) {
          var s = i[r].name,
            o = (i[r + 1] || {}).name,
            l = this.font.getXAxisKerningForPair(s, o) || 0;
          n += this.widthOfGlyph(s) + l;
        }
        return n * (t / 1e3);
      };
      e.prototype.heightOfFontAtSize = function (e, t) {
        if (void 0 === t) t = {};
        var i = t.descender,
          n = void 0 === i ? !0 : i,
          r = this.font,
          a = r.Ascender,
          s = r.Descender,
          o = r.FontBBox,
          l = (a || o[3]) - (s || o[1]);
        if (!n) l += s || 0;
        return (l / 1e3) * e;
      };
      e.prototype.sizeOfFontAtHeight = function (e) {
        var t = this.font,
          i = t.Ascender,
          n = t.Descender,
          r = t.FontBBox;
        return (1e3 * e) / ((i || r[3]) - (n || r[1]));
      };
      e.prototype.embedIntoContext = function (e, t) {
        var i = e.obj({
          Type: "Font",
          Subtype: "Type1",
          BaseFont: this.customName || this.fontName,
          Encoding: this.encoding === Ci.WinAnsi ? "WinAnsiEncoding" : void 0,
        });
        if (t) {
          e.assign(t, i);
          return t;
        } else return e.register(i);
      };
      e.prototype.widthOfGlyph = function (e) {
        return this.font.getWidthOfGlyph(e) || 250;
      };
      e.prototype.encodeTextAsGlyphs = function (e) {
        for (
          var t = Array.from(e), i = new Array(t.length), n = 0, r = t.length;
          n < r;
          n++
        ) {
          var a = m(t[n]);
          i[n] = this.encoding.encodeUnicodeCodePoint(a);
        }
        return i;
      };
      e.for = function (t, i) {
        return new e(t, i);
      };
      return e;
    })(),
    hs = function () {
      for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
      return "<" + e.join("") + ">";
    },
    us = function (e) {
      return v(e, 4);
    },
    ds = function (e) {
      if (J(e)) return us(e);
      if ($(e)) {
        var t = Q(e),
          i = ee(e);
        return "" + us(t) + us(i);
      }
      var n = b(e);
      throw new Error("0x" + n + " is not a valid UTF-8 or UTF-16 codepoint.");
    },
    fs = (function (e) {
      i(t, e);
      function t(t) {
        var i = e.call(this) || this;
        i.value = t;
        return i;
      }
      t.prototype.asBytes = function () {
        for (
          var e = [],
            t = "",
            i = !1,
            n = function (t) {
              if (void 0 !== t) e.push(t);
              i = !1;
            },
            r = 0,
            a = this.value.length;
          r < a;
          r++
        ) {
          var s = this.value[r],
            o = g(s),
            l = this.value[r + 1];
          if (!i)
            if (o === An.BackSlash) i = !0;
            else n(o);
          else if (o === An.Newline) n();
          else if (o === An.CarriageReturn) n();
          else if (o === An.n) n(An.Newline);
          else if (o === An.r) n(An.CarriageReturn);
          else if (o === An.t) n(An.Tab);
          else if (o === An.b) n(An.Backspace);
          else if (o === An.f) n(An.FormFeed);
          else if (o === An.LeftParen) n(An.LeftParen);
          else if (o === An.RightParen) n(An.RightParen);
          else if (o === An.Backspace) n(An.BackSlash);
          else if (o >= An.Zero && o <= An.Seven) {
            if (3 === (t += s).length || !(l >= "0" && l <= "7")) {
              n(parseInt(t, 8));
              t = "";
            }
          } else n(o);
        }
        return new Uint8Array(e);
      };
      t.prototype.decodeText = function () {
        var e = this.asBytes();
        if (ce(e)) return ie(e);
        else return Yi(e);
      };
      t.prototype.decodeDate = function () {
        var e = this.decodeText(),
          t = R(e);
        if (!t) throw new ln(e);
        return t;
      };
      t.prototype.asString = function () {
        return this.value;
      };
      t.prototype.clone = function () {
        return t.of(this.value);
      };
      t.prototype.toString = function () {
        return "(" + this.value + ")";
      };
      t.prototype.sizeInBytes = function () {
        return this.value.length + 2;
      };
      t.prototype.copyBytesInto = function (e, t) {
        e[t++] = An.LeftParen;
        t += k(this.value, e, t);
        e[t++] = An.RightParen;
        return this.value.length + 2;
      };
      t.of = function (e) {
        return new t(e);
      };
      t.fromDate = function (e) {
        return new t(
          "D:" +
            x(String(e.getUTCFullYear()), 4, "0") +
            x(String(e.getUTCMonth() + 1), 2, "0") +
            x(String(e.getUTCDate()), 2, "0") +
            x(String(e.getUTCHours()), 2, "0") +
            x(String(e.getUTCMinutes()), 2, "0") +
            x(String(e.getUTCSeconds()), 2, "0") +
            "Z"
        );
      };
      return t;
    })(_a),
    ps = (function () {
      function e(e, t, i, n) {
        var r = this;
        this.allGlyphsInFontSortedById = function () {
          for (
            var e = new Array(r.font.characterSet.length), t = 0, i = e.length;
            t < i;
            t++
          ) {
            var n = r.font.characterSet[t];
            e[t] = r.font.glyphForCodePoint(n);
          }
          return q(e.sort(j), function (e) {
            return e.id;
          });
        };
        this.font = e;
        this.scale = 1e3 / this.font.unitsPerEm;
        this.fontData = t;
        this.fontName = this.font.postscriptName || "Font";
        this.customName = i;
        this.fontFeatures = n;
        this.baseFontName = "";
        this.glyphCache = Zi.populatedBy(this.allGlyphsInFontSortedById);
      }
      e.for = function (t, i, n, s) {
        return r(this, void 0, void 0, function () {
          return a(this, function (r) {
            switch (r.label) {
              case 0:
                return [4, t.create(i)];
              case 1:
                return [2, new e(r.sent(), i, n, s)];
            }
          });
        });
      };
      e.prototype.encodeText = function (e) {
        for (
          var t = this.font.layout(e, this.fontFeatures).glyphs,
            i = new Array(t.length),
            n = 0,
            r = t.length;
          n < r;
          n++
        )
          i[n] = v(t[n].id, 4);
        return ls.of(i.join(""));
      };
      e.prototype.widthOfTextAtSize = function (e, t) {
        for (
          var i = this.font.layout(e, this.fontFeatures).glyphs,
            n = 0,
            r = 0,
            a = i.length;
          r < a;
          r++
        )
          n += i[r].advanceWidth * this.scale;
        return n * (t / 1e3);
      };
      e.prototype.heightOfFontAtSize = function (e, t) {
        if (void 0 === t) t = {};
        var i = t.descender,
          n = void 0 === i ? !0 : i,
          r = this.font,
          a = r.ascent,
          s = r.descent,
          o = r.bbox,
          l = (a || o.maxY) * this.scale - (s || o.minY) * this.scale;
        if (!n) l -= Math.abs(s) || 0;
        return (l / 1e3) * e;
      };
      e.prototype.sizeOfFontAtHeight = function (e) {
        var t = this.font,
          i = t.ascent,
          n = t.descent,
          r = t.bbox;
        return (
          (1e3 * e) / ((i || r.maxY) * this.scale - (n || r.minY) * this.scale)
        );
      };
      e.prototype.embedIntoContext = function (e, t) {
        this.baseFontName = this.customName || C(this.fontName);
        return this.embedFontDict(e, t);
      };
      e.prototype.embedFontDict = function (e, t) {
        return r(this, void 0, void 0, function () {
          var i, n, r;
          return a(this, function (a) {
            switch (a.label) {
              case 0:
                return [4, this.embedCIDFontDict(e)];
              case 1:
                i = a.sent();
                n = this.embedUnicodeCmap(e);
                r = e.obj({
                  Type: "Font",
                  Subtype: "Type0",
                  BaseFont: this.baseFontName,
                  Encoding: "Identity-H",
                  DescendantFonts: [i],
                  ToUnicode: n,
                });
                if (t) {
                  e.assign(t, r);
                  return [2, t];
                } else return [2, e.register(r)];
            }
          });
        });
      };
      e.prototype.isCFF = function () {
        return this.font.cff;
      };
      e.prototype.embedCIDFontDict = function (e) {
        return r(this, void 0, void 0, function () {
          var t, i;
          return a(this, function (n) {
            switch (n.label) {
              case 0:
                return [4, this.embedFontDescriptor(e)];
              case 1:
                t = n.sent();
                i = e.obj({
                  Type: "Font",
                  Subtype: this.isCFF() ? "CIDFontType0" : "CIDFontType2",
                  CIDToGIDMap: "Identity",
                  BaseFont: this.baseFontName,
                  CIDSystemInfo: {
                    Registry: fs.of("Adobe"),
                    Ordering: fs.of("Identity"),
                    Supplement: 0,
                  },
                  FontDescriptor: t,
                  W: this.computeWidths(),
                });
                return [2, e.register(i)];
            }
          });
        });
      };
      e.prototype.embedFontDescriptor = function (e) {
        return r(this, void 0, void 0, function () {
          var t, i, n, r, s, o, l, c, h, u, d, f, p, g, m;
          return a(this, function (a) {
            switch (a.label) {
              case 0:
                return [4, this.embedFontStream(e)];
              case 1:
                t = a.sent();
                i = this.scale;
                (n = this.font),
                  (r = n.italicAngle),
                  (s = n.ascent),
                  (o = n.descent),
                  (l = n.capHeight),
                  (c = n.xHeight);
                (h = this.font.bbox),
                  (u = h.minX),
                  (d = h.minY),
                  (f = h.maxX),
                  (p = h.maxY);
                g = e.obj(
                  (((m = {
                    Type: "FontDescriptor",
                    FontName: this.baseFontName,
                    Flags:
                      ((v = this.font),
                      (b = v["OS/2"] ? v["OS/2"].sFamilyClass : 0),
                      (function (e) {
                        var t = 0,
                          i = function (e) {
                            t |= 1 << (e - 1);
                          };
                        if (e.fixedPitch) i(1);
                        if (e.serif) i(2);
                        if (e.symbolic) i(3);
                        if (e.script) i(4);
                        if (e.nonsymbolic) i(6);
                        if (e.italic) i(7);
                        if (e.allCap) i(17);
                        if (e.smallCap) i(18);
                        if (e.forceBold) i(19);
                        return t;
                      })({
                        fixedPitch: v.post.isFixedPitch,
                        serif: 1 <= b && b <= 7,
                        symbolic: !0,
                        script: 10 === b,
                        italic: v.head.macStyle.italic,
                      })),
                    FontBBox: [u * i, d * i, f * i, p * i],
                    ItalicAngle: r,
                    Ascent: s * i,
                    Descent: o * i,
                    CapHeight: (l || s) * i,
                    XHeight: (c || 0) * i,
                    StemV: 0,
                  })[this.isCFF() ? "FontFile3" : "FontFile2"] = t),
                  m)
                );
                return [2, e.register(g)];
            }
            var v, b;
          });
        });
      };
      e.prototype.serializeFont = function () {
        return r(this, void 0, void 0, function () {
          return a(this, function (e) {
            return [2, this.fontData];
          });
        });
      };
      e.prototype.embedFontStream = function (e) {
        return r(this, void 0, void 0, function () {
          var t, i, n;
          return a(this, function (r) {
            switch (r.label) {
              case 0:
                n = (i = e).flateStream;
                return [4, this.serializeFont()];
              case 1:
                t = n.apply(i, [
                  r.sent(),
                  { Subtype: this.isCFF() ? "CIDFontType0C" : void 0 },
                ]);
                return [2, e.register(t)];
            }
          });
        });
      };
      e.prototype.embedUnicodeCmap = function (e) {
        var t = (function (e, t) {
            for (var i = new Array(e.length), n = 0, r = e.length; n < r; n++) {
              var a = e[n],
                s = hs(us(t(a))),
                o = hs.apply(void 0, a.codePoints.map(ds));
              i[n] = [s, o];
            }
            return (function (e) {
              return (
                "/CIDInit /ProcSet findresource begin\n12 dict begin\nbegincmap\n/CIDSystemInfo <<\n  /Registry (Adobe)\n  /Ordering (UCS)\n  /Supplement 0\n>> def\n/CMapName /Adobe-Identity-UCS def\n/CMapType 2 def\n1 begincodespacerange\n<0000><ffff>\nendcodespacerange\n" +
                e.length +
                " beginbfchar\n" +
                e
                  .map(function (e) {
                    return e[0] + " " + e[1];
                  })
                  .join("\n") +
                "\nendbfchar\nendcmap\nCMapName currentdict /CMap defineresource pop\nend\nend"
              );
            })(i);
          })(this.glyphCache.access(), this.glyphId.bind(this)),
          i = e.flateStream(t);
        return e.register(i);
      };
      e.prototype.glyphId = function (e) {
        return e ? e.id : -1;
      };
      e.prototype.computeWidths = function () {
        for (
          var e = this.glyphCache.access(), t = [], i = [], n = 0, r = e.length;
          n < r;
          n++
        ) {
          var a = e[n],
            s = e[n - 1],
            o = this.glyphId(a),
            l = this.glyphId(s);
          if (0 === n) t.push(o);
          else if (o - l != 1) {
            t.push(i);
            t.push(o);
            i = [];
          }
          i.push(a.advanceWidth * this.scale);
        }
        t.push(i);
        return t;
      };
      return e;
    })(),
    gs = (function (e) {
      i(t, e);
      function t(t, i, n, r) {
        var a = e.call(this, t, i, n, r) || this;
        a.subset = a.font.createSubset();
        a.glyphs = [];
        a.glyphCache = Zi.populatedBy(function () {
          return a.glyphs;
        });
        a.glyphIdMap = new Map();
        return a;
      }
      t.for = function (e, i, n, s) {
        return r(this, void 0, void 0, function () {
          return a(this, function (r) {
            switch (r.label) {
              case 0:
                return [4, e.create(i)];
              case 1:
                return [2, new t(r.sent(), i, n, s)];
            }
          });
        });
      };
      t.prototype.encodeText = function (e) {
        for (
          var t = this.font.layout(e, this.fontFeatures).glyphs,
            i = new Array(t.length),
            n = 0,
            r = t.length;
          n < r;
          n++
        ) {
          var a = t[n],
            s = this.subset.includeGlyph(a);
          this.glyphs[s - 1] = a;
          this.glyphIdMap.set(a.id, s);
          i[n] = v(s, 4);
        }
        this.glyphCache.invalidate();
        return ls.of(i.join(""));
      };
      t.prototype.isCFF = function () {
        return this.subset.cff;
      };
      t.prototype.glyphId = function (e) {
        return e ? this.glyphIdMap.get(e.id) : -1;
      };
      t.prototype.serializeFont = function () {
        var e = this;
        return new Promise(function (t, i) {
          var n = [];
          e.subset
            .encodeStream()
            .on("data", function (e) {
              return n.push(e);
            })
            .on("end", function () {
              return t(U(n));
            })
            .on("error", function (e) {
              return i(e);
            });
        });
      };
      return t;
    })(ps);
  !(function (e) {
    e.Source = "Source";
    e.Data = "Data";
    e.Alternative = "Alternative";
    e.Supplement = "Supplement";
    e.EncryptedPayload = "EncryptedPayload";
    e.FormData = "EncryptedPayload";
    e.Schema = "Schema";
    e.Unspecified = "Unspecified";
  })(e.AFRelationship || (e.AFRelationship = {}));
  var ms,
    vs = (function () {
      function e(e, t, i) {
        if (void 0 === i) i = {};
        this.fileData = e;
        this.fileName = t;
        this.options = i;
      }
      e.for = function (t, i, n) {
        if (void 0 === n) n = {};
        return new e(t, i, n);
      };
      e.prototype.embedIntoContext = function (e, t) {
        return r(this, void 0, void 0, function () {
          var i, n, r, s, o, l, c, h, u;
          return a(this, function (a) {
            (i = this.options),
              (n = i.mimeType),
              (r = i.description),
              (s = i.creationDate),
              (o = i.modificationDate),
              (l = i.afRelationship);
            c = e.flateStream(this.fileData, {
              Type: "EmbeddedFile",
              Subtype: null != n ? n : void 0,
              Params: {
                Size: this.fileData.length,
                CreationDate: s ? fs.fromDate(s) : void 0,
                ModDate: o ? fs.fromDate(o) : void 0,
              },
            });
            h = e.register(c);
            u = e.obj({
              Type: "Filespec",
              F: fs.of(this.fileName),
              UF: ls.fromText(this.fileName),
              EF: { F: h },
              Desc: r ? ls.fromText(r) : void 0,
              AFRelationship: null != l ? l : void 0,
            });
            if (t) {
              e.assign(t, u);
              return [2, t];
            } else return [2, e.register(u)];
          });
        });
      };
      return e;
    })(),
    bs = [
      65472, 65473, 65474, 65475, 65477, 65478, 65479, 65480, 65481, 65482,
      65483, 65484, 65485, 65486, 65487,
    ];
  !(function (e) {
    e.DeviceGray = "DeviceGray";
    e.DeviceRGB = "DeviceRGB";
    e.DeviceCMYK = "DeviceCMYK";
  })(ms || (ms = {}));
  var ys = { 1: ms.DeviceGray, 3: ms.DeviceRGB, 4: ms.DeviceCMYK },
    ws = (function () {
      function e(e, t, i, n, r) {
        this.imageData = e;
        this.bitsPerComponent = t;
        this.width = i;
        this.height = n;
        this.colorSpace = r;
      }
      e.for = function (t) {
        return r(this, void 0, void 0, function () {
          var i, n, r, s, o, l, c, h;
          return a(this, function (a) {
            if (65496 !== (i = new DataView(t.buffer)).getUint16(0))
              throw new Error("SOI not found in JPEG");
            n = 2;
            for (; n < i.byteLength; ) {
              r = i.getUint16(n);
              n += 2;
              if (bs.includes(r)) break;
              n += i.getUint16(n);
            }
            if (!bs.includes(r)) throw new Error("Invalid JPEG");
            n += 2;
            s = i.getUint8(n++);
            o = i.getUint16(n);
            n += 2;
            l = i.getUint16(n);
            n += 2;
            c = i.getUint8(n++);
            if (!(h = ys[c])) throw new Error("Unknown JPEG channel.");
            return [2, new e(t, s, l, o, h)];
          });
        });
      };
      e.prototype.embedIntoContext = function (e, t) {
        return r(this, void 0, void 0, function () {
          var i;
          return a(this, function (n) {
            i = e.stream(this.imageData, {
              Type: "XObject",
              Subtype: "Image",
              BitsPerComponent: this.bitsPerComponent,
              Width: this.width,
              Height: this.height,
              ColorSpace: this.colorSpace,
              Filter: "DCTDecode",
              Decode:
                this.colorSpace === ms.DeviceCMYK
                  ? [1, 0, 1, 0, 1, 0, 1, 0]
                  : void 0,
            });
            if (t) {
              e.assign(t, i);
              return [2, t];
            } else return [2, e.register(i)];
          });
        });
      };
      return e;
    })(),
    xs = pe(function (e, t) {
      var i =
        "undefined" != typeof Uint8Array &&
        "undefined" != typeof Uint16Array &&
        "undefined" != typeof Int32Array;
      function n(e, t) {
        return Object.prototype.hasOwnProperty.call(e, t);
      }
      t.assign = function (e) {
        for (var t = Array.prototype.slice.call(arguments, 1); t.length; ) {
          var i = t.shift();
          if (i) {
            if ("object" != typeof i)
              throw new TypeError(i + "must be non-object");
            for (var r in i) if (n(i, r)) e[r] = i[r];
          }
        }
        return e;
      };
      t.shrinkBuf = function (e, t) {
        if (e.length === t) return e;
        if (e.subarray) return e.subarray(0, t);
        e.length = t;
        return e;
      };
      var r = {
          arraySet: function (e, t, i, n, r) {
            if (!t.subarray || !e.subarray)
              for (var a = 0; a < n; a++) e[r + a] = t[i + a];
            else e.set(t.subarray(i, i + n), r);
          },
          flattenChunks: function (e) {
            var t, i, n, r, a, s;
            n = 0;
            for (t = 0, i = e.length; t < i; t++) n += e[t].length;
            s = new Uint8Array(n);
            r = 0;
            for (t = 0, i = e.length; t < i; t++) {
              a = e[t];
              s.set(a, r);
              r += a.length;
            }
            return s;
          },
        },
        a = {
          arraySet: function (e, t, i, n, r) {
            for (var a = 0; a < n; a++) e[r + a] = t[i + a];
          },
          flattenChunks: function (e) {
            return [].concat.apply([], e);
          },
        };
      t.setTyped = function (e) {
        if (e) {
          t.Buf8 = Uint8Array;
          t.Buf16 = Uint16Array;
          t.Buf32 = Int32Array;
          t.assign(t, r);
        } else {
          t.Buf8 = Array;
          t.Buf16 = Array;
          t.Buf32 = Array;
          t.assign(t, a);
        }
      };
      t.setTyped(i);
    });
  function ks(e) {
    for (var t = e.length; --t >= 0; ) e[t] = 0;
  }
  var Cs = [
      0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5,
      5, 5, 5, 0,
    ],
    Ss = [
      0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10,
      11, 11, 12, 12, 13, 13,
    ],
    _s = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7],
    As = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15],
    Fs = new Array(576);
  ks(Fs);
  var Ts = new Array(60);
  ks(Ts);
  var Ps = new Array(512);
  ks(Ps);
  var Es = new Array(256);
  ks(Es);
  var Is = new Array(29);
  ks(Is);
  var Ds,
    Os,
    Rs,
    Ns = new Array(30);
  ks(Ns);
  function Ms(e, t, i, n, r) {
    this.static_tree = e;
    this.extra_bits = t;
    this.extra_base = i;
    this.elems = n;
    this.max_length = r;
    this.has_stree = e && e.length;
  }
  function Bs(e, t) {
    this.dyn_tree = e;
    this.max_code = 0;
    this.stat_desc = t;
  }
  function Ls(e) {
    return e < 256 ? Ps[e] : Ps[256 + (e >>> 7)];
  }
  function Us(e, t) {
    e.pending_buf[e.pending++] = 255 & t;
    e.pending_buf[e.pending++] = (t >>> 8) & 255;
  }
  function zs(e, t, i) {
    if (e.bi_valid > 16 - i) {
      e.bi_buf |= (t << e.bi_valid) & 65535;
      Us(e, e.bi_buf);
      e.bi_buf = t >> (16 - e.bi_valid);
      e.bi_valid += i - 16;
    } else {
      e.bi_buf |= (t << e.bi_valid) & 65535;
      e.bi_valid += i;
    }
  }
  function js(e, t, i) {
    zs(e, i[2 * t], i[2 * t + 1]);
  }
  function qs(e, t) {
    var i = 0;
    do {
      i |= 1 & e;
      e >>>= 1;
      i <<= 1;
    } while (--t > 0);
    return i >>> 1;
  }
  function Hs(e, t, i) {
    var n,
      r,
      a = new Array(16),
      s = 0;
    for (n = 1; n <= 15; n++) a[n] = s = (s + i[n - 1]) << 1;
    for (r = 0; r <= t; r++) {
      var o = e[2 * r + 1];
      if (0 !== o) e[2 * r] = qs(a[o]++, o);
    }
  }
  function Ws(e) {
    var t;
    for (t = 0; t < 286; t++) e.dyn_ltree[2 * t] = 0;
    for (t = 0; t < 30; t++) e.dyn_dtree[2 * t] = 0;
    for (t = 0; t < 19; t++) e.bl_tree[2 * t] = 0;
    e.dyn_ltree[512] = 1;
    e.opt_len = e.static_len = 0;
    e.last_lit = e.matches = 0;
  }
  function Gs(e) {
    if (e.bi_valid > 8) Us(e, e.bi_buf);
    else if (e.bi_valid > 0) e.pending_buf[e.pending++] = e.bi_buf;
    e.bi_buf = 0;
    e.bi_valid = 0;
  }
  function Vs(e, t, i, n) {
    var r = 2 * t,
      a = 2 * i;
    return e[r] < e[a] || (e[r] === e[a] && n[t] <= n[i]);
  }
  function Xs(e, t, i) {
    for (var n = e.heap[i], r = i << 1; r <= e.heap_len; ) {
      if (r < e.heap_len && Vs(t, e.heap[r + 1], e.heap[r], e.depth)) r++;
      if (Vs(t, n, e.heap[r], e.depth)) break;
      e.heap[i] = e.heap[r];
      i = r;
      r <<= 1;
    }
    e.heap[i] = n;
  }
  function Ks(e, t, i) {
    var n,
      r,
      a,
      s,
      o = 0;
    if (0 !== e.last_lit)
      do {
        n =
          (e.pending_buf[e.d_buf + 2 * o] << 8) |
          e.pending_buf[e.d_buf + 2 * o + 1];
        r = e.pending_buf[e.l_buf + o];
        o++;
        if (0 === n) js(e, r, t);
        else {
          js(e, (a = Es[r]) + 256 + 1, t);
          if (0 !== (s = Cs[a])) zs(e, (r -= Is[a]), s);
          js(e, (a = Ls(--n)), i);
          if (0 !== (s = Ss[a])) zs(e, (n -= Ns[a]), s);
        }
      } while (o < e.last_lit);
    js(e, 256, t);
  }
  function Ys(e, t) {
    var i,
      n,
      r,
      a = t.dyn_tree,
      s = t.stat_desc.static_tree,
      o = t.stat_desc.has_stree,
      l = t.stat_desc.elems,
      c = -1;
    e.heap_len = 0;
    e.heap_max = 573;
    for (i = 0; i < l; i++)
      if (0 !== a[2 * i]) {
        e.heap[++e.heap_len] = c = i;
        e.depth[i] = 0;
      } else a[2 * i + 1] = 0;
    for (; e.heap_len < 2; ) {
      a[2 * (r = e.heap[++e.heap_len] = c < 2 ? ++c : 0)] = 1;
      e.depth[r] = 0;
      e.opt_len--;
      if (o) e.static_len -= s[2 * r + 1];
    }
    t.max_code = c;
    for (i = e.heap_len >> 1; i >= 1; i--) Xs(e, a, i);
    r = l;
    do {
      i = e.heap[1];
      e.heap[1] = e.heap[e.heap_len--];
      Xs(e, a, 1);
      n = e.heap[1];
      e.heap[--e.heap_max] = i;
      e.heap[--e.heap_max] = n;
      a[2 * r] = a[2 * i] + a[2 * n];
      e.depth[r] = (e.depth[i] >= e.depth[n] ? e.depth[i] : e.depth[n]) + 1;
      a[2 * i + 1] = a[2 * n + 1] = r;
      e.heap[1] = r++;
      Xs(e, a, 1);
    } while (e.heap_len >= 2);
    e.heap[--e.heap_max] = e.heap[1];
    !(function (e, t) {
      var i,
        n,
        r,
        a,
        s,
        o,
        l = t.dyn_tree,
        c = t.max_code,
        h = t.stat_desc.static_tree,
        u = t.stat_desc.has_stree,
        d = t.stat_desc.extra_bits,
        f = t.stat_desc.extra_base,
        p = t.stat_desc.max_length,
        g = 0;
      for (a = 0; a <= 15; a++) e.bl_count[a] = 0;
      l[2 * e.heap[e.heap_max] + 1] = 0;
      for (i = e.heap_max + 1; i < 573; i++) {
        if ((a = l[2 * l[2 * (n = e.heap[i]) + 1] + 1] + 1) > p) {
          a = p;
          g++;
        }
        l[2 * n + 1] = a;
        if (!(n > c)) {
          e.bl_count[a]++;
          s = 0;
          if (n >= f) s = d[n - f];
          o = l[2 * n];
          e.opt_len += o * (a + s);
          if (u) e.static_len += o * (h[2 * n + 1] + s);
        }
      }
      if (0 !== g) {
        do {
          a = p - 1;
          for (; 0 === e.bl_count[a]; ) a--;
          e.bl_count[a]--;
          e.bl_count[a + 1] += 2;
          e.bl_count[p]--;
          g -= 2;
        } while (g > 0);
        for (a = p; 0 !== a; a--) {
          n = e.bl_count[a];
          for (; 0 !== n; )
            if (!((r = e.heap[--i]) > c)) {
              if (l[2 * r + 1] !== a) {
                e.opt_len += (a - l[2 * r + 1]) * l[2 * r];
                l[2 * r + 1] = a;
              }
              n--;
            }
        }
      }
    })(e, t);
    Hs(a, c, e.bl_count);
  }
  function Zs(e, t, i) {
    var n,
      r,
      a = -1,
      s = t[1],
      o = 0,
      l = 7,
      c = 4;
    if (0 === s) {
      l = 138;
      c = 3;
    }
    t[2 * (i + 1) + 1] = 65535;
    for (n = 0; n <= i; n++) {
      r = s;
      s = t[2 * (n + 1) + 1];
      if (!(++o < l && r === s)) {
        if (o < c) e.bl_tree[2 * r] += o;
        else if (0 !== r) {
          if (r !== a) e.bl_tree[2 * r]++;
          e.bl_tree[32]++;
        } else if (o <= 10) e.bl_tree[34]++;
        else e.bl_tree[36]++;
        o = 0;
        a = r;
        if (0 === s) {
          l = 138;
          c = 3;
        } else if (r === s) {
          l = 6;
          c = 3;
        } else {
          l = 7;
          c = 4;
        }
      }
    }
  }
  function Js(e, t, i) {
    var n,
      r,
      a = -1,
      s = t[1],
      o = 0,
      l = 7,
      c = 4;
    if (0 === s) {
      l = 138;
      c = 3;
    }
    for (n = 0; n <= i; n++) {
      r = s;
      s = t[2 * (n + 1) + 1];
      if (!(++o < l && r === s)) {
        if (o < c)
          do {
            js(e, r, e.bl_tree);
          } while (0 != --o);
        else if (0 !== r) {
          if (r !== a) {
            js(e, r, e.bl_tree);
            o--;
          }
          js(e, 16, e.bl_tree);
          zs(e, o - 3, 2);
        } else if (o <= 10) {
          js(e, 17, e.bl_tree);
          zs(e, o - 3, 3);
        } else {
          js(e, 18, e.bl_tree);
          zs(e, o - 11, 7);
        }
        o = 0;
        a = r;
        if (0 === s) {
          l = 138;
          c = 3;
        } else if (r === s) {
          l = 6;
          c = 3;
        } else {
          l = 7;
          c = 4;
        }
      }
    }
  }
  var $s = !1;
  function Qs(e, t, i, n) {
    zs(e, 0 + (n ? 1 : 0), 3);
    !(function (e, t, i, n) {
      Gs(e);
      if (1) {
        Us(e, i);
        Us(e, ~i);
      }
      xs.arraySet(e.pending_buf, e.window, t, i, e.pending);
      e.pending += i;
    })(e, t, i);
  }
  var eo,
    to = {
      _tr_init: function (e) {
        if (!$s) {
          !(function () {
            var e,
              t,
              i,
              n,
              r,
              a = new Array(16);
            i = 0;
            for (n = 0; n < 28; n++) {
              Is[n] = i;
              for (e = 0; e < 1 << Cs[n]; e++) Es[i++] = n;
            }
            Es[i - 1] = n;
            r = 0;
            for (n = 0; n < 16; n++) {
              Ns[n] = r;
              for (e = 0; e < 1 << Ss[n]; e++) Ps[r++] = n;
            }
            r >>= 7;
            for (; n < 30; n++) {
              Ns[n] = r << 7;
              for (e = 0; e < 1 << (Ss[n] - 7); e++) Ps[256 + r++] = n;
            }
            for (t = 0; t <= 15; t++) a[t] = 0;
            e = 0;
            for (; e <= 143; ) {
              Fs[2 * e + 1] = 8;
              e++;
              a[8]++;
            }
            for (; e <= 255; ) {
              Fs[2 * e + 1] = 9;
              e++;
              a[9]++;
            }
            for (; e <= 279; ) {
              Fs[2 * e + 1] = 7;
              e++;
              a[7]++;
            }
            for (; e <= 287; ) {
              Fs[2 * e + 1] = 8;
              e++;
              a[8]++;
            }
            Hs(Fs, 287, a);
            for (e = 0; e < 30; e++) {
              Ts[2 * e + 1] = 5;
              Ts[2 * e] = qs(e, 5);
            }
            Ds = new Ms(Fs, Cs, 257, 286, 15);
            Os = new Ms(Ts, Ss, 0, 30, 15);
            Rs = new Ms(new Array(0), _s, 0, 19, 7);
          })();
          $s = !0;
        }
        e.l_desc = new Bs(e.dyn_ltree, Ds);
        e.d_desc = new Bs(e.dyn_dtree, Os);
        e.bl_desc = new Bs(e.bl_tree, Rs);
        e.bi_buf = 0;
        e.bi_valid = 0;
        Ws(e);
      },
      _tr_stored_block: Qs,
      _tr_flush_block: function (e, t, i, n) {
        var r,
          a,
          s = 0;
        if (e.level > 0) {
          if (2 === e.strm.data_type)
            e.strm.data_type = (function (e) {
              var t,
                i = 4093624447;
              for (t = 0; t <= 31; t++, i >>>= 1)
                if (1 & i && 0 !== e.dyn_ltree[2 * t]) return 0;
              if (
                0 !== e.dyn_ltree[18] ||
                0 !== e.dyn_ltree[20] ||
                0 !== e.dyn_ltree[26]
              )
                return 1;
              for (t = 32; t < 256; t++) if (0 !== e.dyn_ltree[2 * t]) return 1;
              return 0;
            })(e);
          Ys(e, e.l_desc);
          Ys(e, e.d_desc);
          s = (function (e) {
            var t;
            Zs(e, e.dyn_ltree, e.l_desc.max_code);
            Zs(e, e.dyn_dtree, e.d_desc.max_code);
            Ys(e, e.bl_desc);
            for (t = 18; t >= 3 && 0 === e.bl_tree[2 * As[t] + 1]; t--);
            e.opt_len += 3 * (t + 1) + 5 + 5 + 4;
            return t;
          })(e);
          r = (e.opt_len + 3 + 7) >>> 3;
          if ((a = (e.static_len + 3 + 7) >>> 3) <= r) r = a;
        } else r = a = i + 5;
        if (i + 4 <= r && -1 !== t) Qs(e, t, i, n);
        else if (4 === e.strategy || a === r) {
          zs(e, 2 + (n ? 1 : 0), 3);
          Ks(e, Fs, Ts);
        } else {
          zs(e, 4 + (n ? 1 : 0), 3);
          !(function (e, t, i, n) {
            var r;
            zs(e, t - 257, 5);
            zs(e, i - 1, 5);
            zs(e, n - 4, 4);
            for (r = 0; r < n; r++) zs(e, e.bl_tree[2 * As[r] + 1], 3);
            Js(e, e.dyn_ltree, t - 1);
            Js(e, e.dyn_dtree, i - 1);
          })(e, e.l_desc.max_code + 1, e.d_desc.max_code + 1, s + 1);
          Ks(e, e.dyn_ltree, e.dyn_dtree);
        }
        Ws(e);
        if (n) Gs(e);
      },
      _tr_tally: function (e, t, i) {
        e.pending_buf[e.d_buf + 2 * e.last_lit] = (t >>> 8) & 255;
        e.pending_buf[e.d_buf + 2 * e.last_lit + 1] = 255 & t;
        e.pending_buf[e.l_buf + e.last_lit] = 255 & i;
        e.last_lit++;
        if (0 === t) e.dyn_ltree[2 * i]++;
        else {
          e.matches++;
          t--;
          e.dyn_ltree[2 * (Es[i] + 256 + 1)]++;
          e.dyn_dtree[2 * Ls(t)]++;
        }
        return e.last_lit === e.lit_bufsize - 1;
      },
      _tr_align: function (e) {
        zs(e, 2, 3);
        js(e, 256, Fs);
        !(function (e) {
          if (16 === e.bi_valid) {
            Us(e, e.bi_buf);
            e.bi_buf = 0;
            e.bi_valid = 0;
          } else if (e.bi_valid >= 8) {
            e.pending_buf[e.pending++] = 255 & e.bi_buf;
            e.bi_buf >>= 8;
            e.bi_valid -= 8;
          }
        })(e);
      },
    },
    io = function (e, t, i, n) {
      for (
        var r = (65535 & e) | 0, a = ((e >>> 16) & 65535) | 0, s = 0;
        0 !== i;

      ) {
        i -= s = i > 2e3 ? 2e3 : i;
        do {
          a = (a + (r = (r + t[n++]) | 0)) | 0;
        } while (--s);
        r %= 65521;
        a %= 65521;
      }
      return r | (a << 16) | 0;
    },
    no = (function () {
      for (var e, t = [], i = 0; i < 256; i++) {
        e = i;
        for (var n = 0; n < 8; n++)
          e = 1 & e ? 3988292384 ^ (e >>> 1) : e >>> 1;
        t[i] = e;
      }
      return t;
    })(),
    ro = function (e, t, i, n) {
      var r = no,
        a = n + i;
      e ^= -1;
      for (var s = n; s < a; s++) e = (e >>> 8) ^ r[255 & (e ^ t[s])];
      return -1 ^ e;
    },
    ao = {
      2: "need dictionary",
      1: "stream end",
      0: "",
      "-1": "file error",
      "-2": "stream error",
      "-3": "data error",
      "-4": "insufficient memory",
      "-5": "buffer error",
      "-6": "incompatible version",
    },
    so = -2,
    oo = 258,
    lo = 262,
    co = 103,
    ho = 113,
    uo = 666;
  function fo(e, t) {
    e.msg = ao[t];
    return t;
  }
  function po(e) {
    return (e << 1) - (e > 4 ? 9 : 0);
  }
  function go(e) {
    for (var t = e.length; --t >= 0; ) e[t] = 0;
  }
  function mo(e) {
    var t = e.state,
      i = t.pending;
    if (i > e.avail_out) i = e.avail_out;
    if (0 !== i) {
      xs.arraySet(e.output, t.pending_buf, t.pending_out, i, e.next_out);
      e.next_out += i;
      t.pending_out += i;
      e.total_out += i;
      e.avail_out -= i;
      t.pending -= i;
      if (0 === t.pending) t.pending_out = 0;
    }
  }
  function vo(e, t) {
    to._tr_flush_block(
      e,
      e.block_start >= 0 ? e.block_start : -1,
      e.strstart - e.block_start,
      t
    );
    e.block_start = e.strstart;
    mo(e.strm);
  }
  function bo(e, t) {
    e.pending_buf[e.pending++] = t;
  }
  function yo(e, t) {
    e.pending_buf[e.pending++] = (t >>> 8) & 255;
    e.pending_buf[e.pending++] = 255 & t;
  }
  function wo(e, t, i, n) {
    var r = e.avail_in;
    if (r > n) r = n;
    if (0 === r) return 0;
    e.avail_in -= r;
    xs.arraySet(t, e.input, e.next_in, r, i);
    if (1 === e.state.wrap) e.adler = io(e.adler, t, r, i);
    else if (2 === e.state.wrap) e.adler = ro(e.adler, t, r, i);
    e.next_in += r;
    e.total_in += r;
    return r;
  }
  function xo(e, t) {
    var i,
      n,
      r = e.max_chain_length,
      a = e.strstart,
      s = e.prev_length,
      o = e.nice_match,
      l = e.strstart > e.w_size - lo ? e.strstart - (e.w_size - lo) : 0,
      c = e.window,
      h = e.w_mask,
      u = e.prev,
      d = e.strstart + oo,
      f = c[a + s - 1],
      p = c[a + s];
    if (e.prev_length >= e.good_match) r >>= 2;
    if (o > e.lookahead) o = e.lookahead;
    do {
      if (
        c[(i = t) + s] === p &&
        c[i + s - 1] === f &&
        c[i] === c[a] &&
        c[++i] === c[a + 1]
      ) {
        a += 2;
        i++;
        do {} while (
          c[++a] === c[++i] &&
          c[++a] === c[++i] &&
          c[++a] === c[++i] &&
          c[++a] === c[++i] &&
          c[++a] === c[++i] &&
          c[++a] === c[++i] &&
          c[++a] === c[++i] &&
          c[++a] === c[++i] &&
          a < d
        );
        n = oo - (d - a);
        a = d - oo;
        if (n > s) {
          e.match_start = t;
          s = n;
          if (n >= o) break;
          f = c[a + s - 1];
          p = c[a + s];
        }
      }
    } while ((t = u[t & h]) > l && 0 != --r);
    if (s <= e.lookahead) return s;
    else return e.lookahead;
  }
  function ko(e) {
    var t,
      i,
      n,
      r,
      a,
      s = e.w_size;
    do {
      r = e.window_size - e.lookahead - e.strstart;
      if (e.strstart >= s + (s - lo)) {
        xs.arraySet(e.window, e.window, s, s, 0);
        e.match_start -= s;
        e.strstart -= s;
        e.block_start -= s;
        t = i = e.hash_size;
        do {
          n = e.head[--t];
          e.head[t] = n >= s ? n - s : 0;
        } while (--i);
        t = i = s;
        do {
          n = e.prev[--t];
          e.prev[t] = n >= s ? n - s : 0;
        } while (--i);
        r += s;
      }
      if (0 === e.strm.avail_in) break;
      i = wo(e.strm, e.window, e.strstart + e.lookahead, r);
      e.lookahead += i;
      if (e.lookahead + e.insert >= 3) {
        a = e.strstart - e.insert;
        e.ins_h = e.window[a];
        e.ins_h = ((e.ins_h << e.hash_shift) ^ e.window[a + 1]) & e.hash_mask;
        for (; e.insert; ) {
          e.ins_h =
            ((e.ins_h << e.hash_shift) ^ e.window[a + 3 - 1]) & e.hash_mask;
          e.prev[a & e.w_mask] = e.head[e.ins_h];
          e.head[e.ins_h] = a;
          a++;
          e.insert--;
          if (e.lookahead + e.insert < 3) break;
        }
      }
    } while (e.lookahead < lo && 0 !== e.strm.avail_in);
  }
  function Co(e, t) {
    for (var i, n; ; ) {
      if (e.lookahead < lo) {
        ko(e);
        if (e.lookahead < lo && 0 === t) return 1;
        if (0 === e.lookahead) break;
      }
      i = 0;
      if (e.lookahead >= 3) {
        e.ins_h =
          ((e.ins_h << e.hash_shift) ^ e.window[e.strstart + 3 - 1]) &
          e.hash_mask;
        i = e.prev[e.strstart & e.w_mask] = e.head[e.ins_h];
        e.head[e.ins_h] = e.strstart;
      }
      if (0 !== i && e.strstart - i <= e.w_size - lo) e.match_length = xo(e, i);
      if (e.match_length >= 3) {
        n = to._tr_tally(e, e.strstart - e.match_start, e.match_length - 3);
        e.lookahead -= e.match_length;
        if (e.match_length <= e.max_lazy_match && e.lookahead >= 3) {
          e.match_length--;
          do {
            e.strstart++;
            e.ins_h =
              ((e.ins_h << e.hash_shift) ^ e.window[e.strstart + 3 - 1]) &
              e.hash_mask;
            i = e.prev[e.strstart & e.w_mask] = e.head[e.ins_h];
            e.head[e.ins_h] = e.strstart;
          } while (0 != --e.match_length);
          e.strstart++;
        } else {
          e.strstart += e.match_length;
          e.match_length = 0;
          e.ins_h = e.window[e.strstart];
          e.ins_h =
            ((e.ins_h << e.hash_shift) ^ e.window[e.strstart + 1]) &
            e.hash_mask;
        }
      } else {
        n = to._tr_tally(e, 0, e.window[e.strstart]);
        e.lookahead--;
        e.strstart++;
      }
      if (n) {
        vo(e, !1);
        if (0 === e.strm.avail_out) return 1;
      }
    }
    e.insert = e.strstart < 2 ? e.strstart : 2;
    if (4 === t) {
      vo(e, !0);
      if (0 === e.strm.avail_out) return 3;
      else return 4;
    }
    if (e.last_lit) {
      vo(e, !1);
      if (0 === e.strm.avail_out) return 1;
    }
    return 2;
  }
  function So(e, t) {
    for (var i, n, r; ; ) {
      if (e.lookahead < lo) {
        ko(e);
        if (e.lookahead < lo && 0 === t) return 1;
        if (0 === e.lookahead) break;
      }
      i = 0;
      if (e.lookahead >= 3) {
        e.ins_h =
          ((e.ins_h << e.hash_shift) ^ e.window[e.strstart + 3 - 1]) &
          e.hash_mask;
        i = e.prev[e.strstart & e.w_mask] = e.head[e.ins_h];
        e.head[e.ins_h] = e.strstart;
      }
      e.prev_length = e.match_length;
      e.prev_match = e.match_start;
      e.match_length = 2;
      if (
        0 !== i &&
        e.prev_length < e.max_lazy_match &&
        e.strstart - i <= e.w_size - lo
      ) {
        e.match_length = xo(e, i);
        if (
          e.match_length <= 5 &&
          (1 === e.strategy ||
            (3 === e.match_length && e.strstart - e.match_start > 4096))
        )
          e.match_length = 2;
      }
      if (e.prev_length >= 3 && e.match_length <= e.prev_length) {
        r = e.strstart + e.lookahead - 3;
        n = to._tr_tally(e, e.strstart - 1 - e.prev_match, e.prev_length - 3);
        e.lookahead -= e.prev_length - 1;
        e.prev_length -= 2;
        do {
          if (++e.strstart <= r) {
            e.ins_h =
              ((e.ins_h << e.hash_shift) ^ e.window[e.strstart + 3 - 1]) &
              e.hash_mask;
            i = e.prev[e.strstart & e.w_mask] = e.head[e.ins_h];
            e.head[e.ins_h] = e.strstart;
          }
        } while (0 != --e.prev_length);
        e.match_available = 0;
        e.match_length = 2;
        e.strstart++;
        if (n) {
          vo(e, !1);
          if (0 === e.strm.avail_out) return 1;
        }
      } else if (e.match_available) {
        if ((n = to._tr_tally(e, 0, e.window[e.strstart - 1]))) vo(e, !1);
        e.strstart++;
        e.lookahead--;
        if (0 === e.strm.avail_out) return 1;
      } else {
        e.match_available = 1;
        e.strstart++;
        e.lookahead--;
      }
    }
    if (e.match_available) {
      n = to._tr_tally(e, 0, e.window[e.strstart - 1]);
      e.match_available = 0;
    }
    e.insert = e.strstart < 2 ? e.strstart : 2;
    if (4 === t) {
      vo(e, !0);
      if (0 === e.strm.avail_out) return 3;
      else return 4;
    }
    if (e.last_lit) {
      vo(e, !1);
      if (0 === e.strm.avail_out) return 1;
    }
    return 2;
  }
  function _o(e, t, i, n, r) {
    this.good_length = e;
    this.max_lazy = t;
    this.nice_length = i;
    this.max_chain = n;
    this.func = r;
  }
  eo = [
    new _o(0, 0, 0, 0, function (e, t) {
      var i = 65535;
      if (i > e.pending_buf_size - 5) i = e.pending_buf_size - 5;
      for (;;) {
        if (e.lookahead <= 1) {
          ko(e);
          if (0 === e.lookahead && 0 === t) return 1;
          if (0 === e.lookahead) break;
        }
        e.strstart += e.lookahead;
        e.lookahead = 0;
        var n = e.block_start + i;
        if (0 === e.strstart || e.strstart >= n) {
          e.lookahead = e.strstart - n;
          e.strstart = n;
          vo(e, !1);
          if (0 === e.strm.avail_out) return 1;
        }
        if (e.strstart - e.block_start >= e.w_size - lo) {
          vo(e, !1);
          if (0 === e.strm.avail_out) return 1;
        }
      }
      e.insert = 0;
      if (4 === t) {
        vo(e, !0);
        if (0 === e.strm.avail_out) return 3;
        else return 4;
      }
      if (e.strstart > e.block_start) {
        vo(e, !1);
        if (0 === e.strm.avail_out) return 1;
      }
      return 1;
    }),
    new _o(4, 4, 8, 4, Co),
    new _o(4, 5, 16, 8, Co),
    new _o(4, 6, 32, 32, Co),
    new _o(4, 4, 16, 16, So),
    new _o(8, 16, 32, 32, So),
    new _o(8, 16, 128, 128, So),
    new _o(8, 32, 128, 256, So),
    new _o(32, 128, 258, 1024, So),
    new _o(32, 258, 258, 4096, So),
  ];
  function Ao() {
    this.strm = null;
    this.status = 0;
    this.pending_buf = null;
    this.pending_buf_size = 0;
    this.pending_out = 0;
    this.pending = 0;
    this.wrap = 0;
    this.gzhead = null;
    this.gzindex = 0;
    this.method = 8;
    this.last_flush = -1;
    this.w_size = 0;
    this.w_bits = 0;
    this.w_mask = 0;
    this.window = null;
    this.window_size = 0;
    this.prev = null;
    this.head = null;
    this.ins_h = 0;
    this.hash_size = 0;
    this.hash_bits = 0;
    this.hash_mask = 0;
    this.hash_shift = 0;
    this.block_start = 0;
    this.match_length = 0;
    this.prev_match = 0;
    this.match_available = 0;
    this.strstart = 0;
    this.match_start = 0;
    this.lookahead = 0;
    this.prev_length = 0;
    this.max_chain_length = 0;
    this.max_lazy_match = 0;
    this.level = 0;
    this.strategy = 0;
    this.good_match = 0;
    this.nice_match = 0;
    this.dyn_ltree = new xs.Buf16(1146);
    this.dyn_dtree = new xs.Buf16(122);
    this.bl_tree = new xs.Buf16(78);
    go(this.dyn_ltree);
    go(this.dyn_dtree);
    go(this.bl_tree);
    this.l_desc = null;
    this.d_desc = null;
    this.bl_desc = null;
    this.bl_count = new xs.Buf16(16);
    this.heap = new xs.Buf16(573);
    go(this.heap);
    this.heap_len = 0;
    this.heap_max = 0;
    this.depth = new xs.Buf16(573);
    go(this.depth);
    this.l_buf = 0;
    this.lit_bufsize = 0;
    this.last_lit = 0;
    this.d_buf = 0;
    this.opt_len = 0;
    this.static_len = 0;
    this.matches = 0;
    this.insert = 0;
    this.bi_buf = 0;
    this.bi_valid = 0;
  }
  function Fo(e) {
    var t;
    if (!e || !e.state) return fo(e, so);
    e.total_in = e.total_out = 0;
    e.data_type = 2;
    (t = e.state).pending = 0;
    t.pending_out = 0;
    if (t.wrap < 0) t.wrap = -t.wrap;
    t.status = t.wrap ? 42 : ho;
    e.adler = 2 === t.wrap ? 0 : 1;
    t.last_flush = 0;
    to._tr_init(t);
    return 0;
  }
  function To(e) {
    var t = Fo(e);
    if (0 === t)
      !(function (e) {
        e.window_size = 2 * e.w_size;
        go(e.head);
        e.max_lazy_match = eo[e.level].max_lazy;
        e.good_match = eo[e.level].good_length;
        e.nice_match = eo[e.level].nice_length;
        e.max_chain_length = eo[e.level].max_chain;
        e.strstart = 0;
        e.block_start = 0;
        e.lookahead = 0;
        e.insert = 0;
        e.match_length = e.prev_length = 2;
        e.match_available = 0;
        e.ins_h = 0;
      })(e.state);
    return t;
  }
  function Po(e, t, i, n, r, a) {
    if (!e) return so;
    var s = 1;
    if (-1 === t) t = 6;
    if (n < 0) {
      s = 0;
      n = -n;
    } else if (n > 15) {
      s = 2;
      n -= 16;
    }
    if (
      r < 1 ||
      r > 9 ||
      8 !== i ||
      n < 8 ||
      n > 15 ||
      t < 0 ||
      t > 9 ||
      a < 0 ||
      a > 4
    )
      return fo(e, so);
    if (8 === n) n = 9;
    var o = new Ao();
    e.state = o;
    o.strm = e;
    o.wrap = s;
    o.gzhead = null;
    o.w_bits = n;
    o.w_size = 1 << o.w_bits;
    o.w_mask = o.w_size - 1;
    o.hash_bits = r + 7;
    o.hash_size = 1 << o.hash_bits;
    o.hash_mask = o.hash_size - 1;
    o.hash_shift = ~~((o.hash_bits + 3 - 1) / 3);
    o.window = new xs.Buf8(2 * o.w_size);
    o.head = new xs.Buf16(o.hash_size);
    o.prev = new xs.Buf16(o.w_size);
    o.lit_bufsize = 1 << (r + 6);
    o.pending_buf_size = 4 * o.lit_bufsize;
    o.pending_buf = new xs.Buf8(o.pending_buf_size);
    o.d_buf = 1 * o.lit_bufsize;
    o.l_buf = 3 * o.lit_bufsize;
    o.level = t;
    o.strategy = a;
    o.method = i;
    return To(e);
  }
  var Eo = {
      deflateInit: function (e, t) {
        return Po(e, t, 8, 15, 8, 0);
      },
      deflateInit2: Po,
      deflateReset: To,
      deflateResetKeep: Fo,
      deflateSetHeader: function (e, t) {
        if (!e || !e.state) return so;
        if (2 !== e.state.wrap) return so;
        e.state.gzhead = t;
        return 0;
      },
      deflate: function (e, t) {
        var i, n, r, a;
        if (!e || !e.state || t > 5 || t < 0) return e ? fo(e, so) : so;
        n = e.state;
        if (
          !e.output ||
          (!e.input && 0 !== e.avail_in) ||
          (n.status === uo && 4 !== t)
        )
          return fo(e, 0 === e.avail_out ? -5 : so);
        n.strm = e;
        i = n.last_flush;
        n.last_flush = t;
        if (42 === n.status)
          if (2 === n.wrap) {
            e.adler = 0;
            bo(n, 31);
            bo(n, 139);
            bo(n, 8);
            if (!n.gzhead) {
              bo(n, 0);
              bo(n, 0);
              bo(n, 0);
              bo(n, 0);
              bo(n, 0);
              bo(n, 9 === n.level ? 2 : n.strategy >= 2 || n.level < 2 ? 4 : 0);
              bo(n, 3);
              n.status = ho;
            } else {
              bo(
                n,
                (n.gzhead.text ? 1 : 0) +
                  (n.gzhead.hcrc ? 2 : 0) +
                  (!n.gzhead.extra ? 0 : 4) +
                  (!n.gzhead.name ? 0 : 8) +
                  (!n.gzhead.comment ? 0 : 16)
              );
              bo(n, 255 & n.gzhead.time);
              bo(n, (n.gzhead.time >> 8) & 255);
              bo(n, (n.gzhead.time >> 16) & 255);
              bo(n, (n.gzhead.time >> 24) & 255);
              bo(n, 9 === n.level ? 2 : n.strategy >= 2 || n.level < 2 ? 4 : 0);
              bo(n, 255 & n.gzhead.os);
              if (n.gzhead.extra && n.gzhead.extra.length) {
                bo(n, 255 & n.gzhead.extra.length);
                bo(n, (n.gzhead.extra.length >> 8) & 255);
              }
              if (n.gzhead.hcrc)
                e.adler = ro(e.adler, n.pending_buf, n.pending, 0);
              n.gzindex = 0;
              n.status = 69;
            }
          } else {
            var s = (8 + ((n.w_bits - 8) << 4)) << 8,
              o = -1;
            if (n.strategy >= 2 || n.level < 2) o = 0;
            else if (n.level < 6) o = 1;
            else if (6 === n.level) o = 2;
            else o = 3;
            s |= o << 6;
            if (0 !== n.strstart) s |= 32;
            s += 31 - (s % 31);
            n.status = ho;
            yo(n, s);
            if (0 !== n.strstart) {
              yo(n, e.adler >>> 16);
              yo(n, 65535 & e.adler);
            }
            e.adler = 1;
          }
        if (69 === n.status)
          if (n.gzhead.extra) {
            r = n.pending;
            for (; n.gzindex < (65535 & n.gzhead.extra.length); ) {
              if (n.pending === n.pending_buf_size) {
                if (n.gzhead.hcrc && n.pending > r)
                  e.adler = ro(e.adler, n.pending_buf, n.pending - r, r);
                mo(e);
                r = n.pending;
                if (n.pending === n.pending_buf_size) break;
              }
              bo(n, 255 & n.gzhead.extra[n.gzindex]);
              n.gzindex++;
            }
            if (n.gzhead.hcrc && n.pending > r)
              e.adler = ro(e.adler, n.pending_buf, n.pending - r, r);
            if (n.gzindex === n.gzhead.extra.length) {
              n.gzindex = 0;
              n.status = 73;
            }
          } else n.status = 73;
        if (73 === n.status)
          if (n.gzhead.name) {
            r = n.pending;
            do {
              if (n.pending === n.pending_buf_size) {
                if (n.gzhead.hcrc && n.pending > r)
                  e.adler = ro(e.adler, n.pending_buf, n.pending - r, r);
                mo(e);
                r = n.pending;
                if (n.pending === n.pending_buf_size) {
                  a = 1;
                  break;
                }
              }
              if (n.gzindex < n.gzhead.name.length)
                a = 255 & n.gzhead.name.charCodeAt(n.gzindex++);
              else a = 0;
              bo(n, a);
            } while (0 !== a);
            if (n.gzhead.hcrc && n.pending > r)
              e.adler = ro(e.adler, n.pending_buf, n.pending - r, r);
            if (0 === a) {
              n.gzindex = 0;
              n.status = 91;
            }
          } else n.status = 91;
        if (91 === n.status)
          if (n.gzhead.comment) {
            r = n.pending;
            do {
              if (n.pending === n.pending_buf_size) {
                if (n.gzhead.hcrc && n.pending > r)
                  e.adler = ro(e.adler, n.pending_buf, n.pending - r, r);
                mo(e);
                r = n.pending;
                if (n.pending === n.pending_buf_size) {
                  a = 1;
                  break;
                }
              }
              if (n.gzindex < n.gzhead.comment.length)
                a = 255 & n.gzhead.comment.charCodeAt(n.gzindex++);
              else a = 0;
              bo(n, a);
            } while (0 !== a);
            if (n.gzhead.hcrc && n.pending > r)
              e.adler = ro(e.adler, n.pending_buf, n.pending - r, r);
            if (0 === a) n.status = co;
          } else n.status = co;
        if (n.status === co)
          if (n.gzhead.hcrc) {
            if (n.pending + 2 > n.pending_buf_size) mo(e);
            if (n.pending + 2 <= n.pending_buf_size) {
              bo(n, 255 & e.adler);
              bo(n, (e.adler >> 8) & 255);
              e.adler = 0;
              n.status = ho;
            }
          } else n.status = ho;
        if (0 !== n.pending) {
          mo(e);
          if (0 === e.avail_out) {
            n.last_flush = -1;
            return 0;
          }
        } else if (0 === e.avail_in && po(t) <= po(i) && 4 !== t)
          return fo(e, -5);
        if (n.status === uo && 0 !== e.avail_in) return fo(e, -5);
        if (
          0 !== e.avail_in ||
          0 !== n.lookahead ||
          (0 !== t && n.status !== uo)
        ) {
          var l =
            2 === n.strategy
              ? (function (e, t) {
                  for (var i; ; ) {
                    if (0 === e.lookahead) {
                      ko(e);
                      if (0 === e.lookahead) {
                        if (0 === t) return 1;
                        break;
                      }
                    }
                    e.match_length = 0;
                    i = to._tr_tally(e, 0, e.window[e.strstart]);
                    e.lookahead--;
                    e.strstart++;
                    if (i) {
                      vo(e, !1);
                      if (0 === e.strm.avail_out) return 1;
                    }
                  }
                  e.insert = 0;
                  if (4 === t) {
                    vo(e, !0);
                    if (0 === e.strm.avail_out) return 3;
                    else return 4;
                  }
                  if (e.last_lit) {
                    vo(e, !1);
                    if (0 === e.strm.avail_out) return 1;
                  }
                  return 2;
                })(n, t)
              : 3 === n.strategy
              ? (function (e, t) {
                  for (var i, n, r, a, s = e.window; ; ) {
                    if (e.lookahead <= oo) {
                      ko(e);
                      if (e.lookahead <= oo && 0 === t) return 1;
                      if (0 === e.lookahead) break;
                    }
                    e.match_length = 0;
                    if (e.lookahead >= 3 && e.strstart > 0)
                      if (
                        (n = s[(r = e.strstart - 1)]) === s[++r] &&
                        n === s[++r] &&
                        n === s[++r]
                      ) {
                        a = e.strstart + oo;
                        do {} while (
                          n === s[++r] &&
                          n === s[++r] &&
                          n === s[++r] &&
                          n === s[++r] &&
                          n === s[++r] &&
                          n === s[++r] &&
                          n === s[++r] &&
                          n === s[++r] &&
                          r < a
                        );
                        e.match_length = oo - (a - r);
                        if (e.match_length > e.lookahead)
                          e.match_length = e.lookahead;
                      }
                    if (e.match_length >= 3) {
                      i = to._tr_tally(e, 1, e.match_length - 3);
                      e.lookahead -= e.match_length;
                      e.strstart += e.match_length;
                      e.match_length = 0;
                    } else {
                      i = to._tr_tally(e, 0, e.window[e.strstart]);
                      e.lookahead--;
                      e.strstart++;
                    }
                    if (i) {
                      vo(e, !1);
                      if (0 === e.strm.avail_out) return 1;
                    }
                  }
                  e.insert = 0;
                  if (4 === t) {
                    vo(e, !0);
                    if (0 === e.strm.avail_out) return 3;
                    else return 4;
                  }
                  if (e.last_lit) {
                    vo(e, !1);
                    if (0 === e.strm.avail_out) return 1;
                  }
                  return 2;
                })(n, t)
              : eo[n.level].func(n, t);
          if (3 === l || 4 === l) n.status = uo;
          if (1 === l || 3 === l) {
            if (0 === e.avail_out) n.last_flush = -1;
            return 0;
          }
          if (2 === l) {
            if (1 === t) to._tr_align(n);
            else if (5 !== t) {
              to._tr_stored_block(n, 0, 0, !1);
              if (3 === t) {
                go(n.head);
                if (0 === n.lookahead) {
                  n.strstart = 0;
                  n.block_start = 0;
                  n.insert = 0;
                }
              }
            }
            mo(e);
            if (0 === e.avail_out) {
              n.last_flush = -1;
              return 0;
            }
          }
        }
        if (4 !== t) return 0;
        if (n.wrap <= 0) return 1;
        if (2 === n.wrap) {
          bo(n, 255 & e.adler);
          bo(n, (e.adler >> 8) & 255);
          bo(n, (e.adler >> 16) & 255);
          bo(n, (e.adler >> 24) & 255);
          bo(n, 255 & e.total_in);
          bo(n, (e.total_in >> 8) & 255);
          bo(n, (e.total_in >> 16) & 255);
          bo(n, (e.total_in >> 24) & 255);
        } else {
          yo(n, e.adler >>> 16);
          yo(n, 65535 & e.adler);
        }
        mo(e);
        if (n.wrap > 0) n.wrap = -n.wrap;
        return 0 !== n.pending ? 0 : 1;
      },
      deflateEnd: function (e) {
        var t;
        if (!e || !e.state) return so;
        if (
          42 !== (t = e.state.status) &&
          69 !== t &&
          73 !== t &&
          91 !== t &&
          t !== co &&
          t !== ho &&
          t !== uo
        )
          return fo(e, so);
        e.state = null;
        return t === ho ? fo(e, -3) : 0;
      },
      deflateSetDictionary: function (e, t) {
        var i,
          n,
          r,
          a,
          s,
          o,
          l,
          c,
          h = t.length;
        if (!e || !e.state) return so;
        if (
          2 === (a = (i = e.state).wrap) ||
          (1 === a && 42 !== i.status) ||
          i.lookahead
        )
          return so;
        if (1 === a) e.adler = io(e.adler, t, h, 0);
        i.wrap = 0;
        if (h >= i.w_size) {
          if (0 === a) {
            go(i.head);
            i.strstart = 0;
            i.block_start = 0;
            i.insert = 0;
          }
          c = new xs.Buf8(i.w_size);
          xs.arraySet(c, t, h - i.w_size, i.w_size, 0);
          t = c;
          h = i.w_size;
        }
        s = e.avail_in;
        o = e.next_in;
        l = e.input;
        e.avail_in = h;
        e.next_in = 0;
        e.input = t;
        ko(i);
        for (; i.lookahead >= 3; ) {
          n = i.strstart;
          r = i.lookahead - 2;
          do {
            i.ins_h =
              ((i.ins_h << i.hash_shift) ^ i.window[n + 3 - 1]) & i.hash_mask;
            i.prev[n & i.w_mask] = i.head[i.ins_h];
            i.head[i.ins_h] = n;
            n++;
          } while (--r);
          i.strstart = n;
          i.lookahead = 2;
          ko(i);
        }
        i.strstart += i.lookahead;
        i.block_start = i.strstart;
        i.insert = i.lookahead;
        i.lookahead = 0;
        i.match_length = i.prev_length = 2;
        i.match_available = 0;
        e.next_in = o;
        e.input = l;
        e.avail_in = s;
        i.wrap = a;
        return 0;
      },
      deflateInfo: "pako deflate (from Nodeca project)",
    },
    Io = !0,
    Do = !0;
  try {
    String.fromCharCode.apply(null, [0]);
  } catch (e) {
    Io = !1;
  }
  try {
    String.fromCharCode.apply(null, new Uint8Array(1));
  } catch (e) {
    Do = !1;
  }
  for (var Oo = new xs.Buf8(256), Ro = 0; Ro < 256; Ro++)
    Oo[Ro] =
      Ro >= 252
        ? 6
        : Ro >= 248
        ? 5
        : Ro >= 240
        ? 4
        : Ro >= 224
        ? 3
        : Ro >= 192
        ? 2
        : 1;
  Oo[254] = Oo[254] = 1;
  function No(e, t) {
    if (t < 65534)
      if ((e.subarray && Do) || (!e.subarray && Io))
        return String.fromCharCode.apply(null, xs.shrinkBuf(e, t));
    for (var i = "", n = 0; n < t; n++) i += String.fromCharCode(e[n]);
    return i;
  }
  var Mo = function (e) {
      var t,
        i,
        n,
        r,
        a,
        s = e.length,
        o = 0;
      for (r = 0; r < s; r++) {
        if (55296 == (64512 & (i = e.charCodeAt(r))) && r + 1 < s)
          if (56320 == (64512 & (n = e.charCodeAt(r + 1)))) {
            i = 65536 + ((i - 55296) << 10) + (n - 56320);
            r++;
          }
        o += i < 128 ? 1 : i < 2048 ? 2 : i < 65536 ? 3 : 4;
      }
      t = new xs.Buf8(o);
      for (a = 0, r = 0; a < o; r++) {
        if (55296 == (64512 & (i = e.charCodeAt(r))) && r + 1 < s)
          if (56320 == (64512 & (n = e.charCodeAt(r + 1)))) {
            i = 65536 + ((i - 55296) << 10) + (n - 56320);
            r++;
          }
        if (i < 128) t[a++] = i;
        else if (i < 2048) {
          t[a++] = 192 | (i >>> 6);
          t[a++] = 128 | (63 & i);
        } else if (i < 65536) {
          t[a++] = 224 | (i >>> 12);
          t[a++] = 128 | ((i >>> 6) & 63);
          t[a++] = 128 | (63 & i);
        } else {
          t[a++] = 240 | (i >>> 18);
          t[a++] = 128 | ((i >>> 12) & 63);
          t[a++] = 128 | ((i >>> 6) & 63);
          t[a++] = 128 | (63 & i);
        }
      }
      return t;
    },
    Bo = function (e, t) {
      var i,
        n,
        r,
        a,
        s = t || e.length,
        o = new Array(2 * s);
      for (n = 0, i = 0; i < s; )
        if (!((r = e[i++]) < 128))
          if (!((a = Oo[r]) > 4)) {
            r &= 2 === a ? 31 : 3 === a ? 15 : 7;
            for (; a > 1 && i < s; ) {
              r = (r << 6) | (63 & e[i++]);
              a--;
            }
            if (!(a > 1))
              if (r < 65536) o[n++] = r;
              else {
                r -= 65536;
                o[n++] = 55296 | ((r >> 10) & 1023);
                o[n++] = 56320 | (1023 & r);
              }
            else o[n++] = 65533;
          } else {
            o[n++] = 65533;
            i += a - 1;
          }
        else o[n++] = r;
      return No(o, n);
    },
    Lo = function (e, t) {
      var i;
      if ((t = t || e.length) > e.length) t = e.length;
      i = t - 1;
      for (; i >= 0 && 128 == (192 & e[i]); ) i--;
      if (i < 0) return t;
      if (0 === i) return t;
      else return i + Oo[e[i]] > t ? i : t;
    },
    Uo = function () {
      this.input = null;
      this.next_in = 0;
      this.avail_in = 0;
      this.total_in = 0;
      this.output = null;
      this.next_out = 0;
      this.avail_out = 0;
      this.total_out = 0;
      this.msg = "";
      this.state = null;
      this.data_type = 2;
      this.adler = 0;
    },
    zo = Object.prototype.toString;
  function jo(e) {
    if (!(this instanceof jo)) return new jo(e);
    this.options = xs.assign(
      {
        level: -1,
        method: 8,
        chunkSize: 16384,
        windowBits: 15,
        memLevel: 8,
        strategy: 0,
        to: "",
      },
      e || {}
    );
    var t = this.options;
    if (t.raw && t.windowBits > 0) t.windowBits = -t.windowBits;
    else if (t.gzip && t.windowBits > 0 && t.windowBits < 16)
      t.windowBits += 16;
    this.err = 0;
    this.msg = "";
    this.ended = !1;
    this.chunks = [];
    this.strm = new Uo();
    this.strm.avail_out = 0;
    var i = Eo.deflateInit2(
      this.strm,
      t.level,
      t.method,
      t.windowBits,
      t.memLevel,
      t.strategy
    );
    if (0 !== i) throw new Error(ao[i]);
    if (t.header) Eo.deflateSetHeader(this.strm, t.header);
    if (t.dictionary) {
      var n;
      if ("string" == typeof t.dictionary) n = Mo(t.dictionary);
      else if ("[object ArrayBuffer]" === zo.call(t.dictionary))
        n = new Uint8Array(t.dictionary);
      else n = t.dictionary;
      if (0 !== (i = Eo.deflateSetDictionary(this.strm, n)))
        throw new Error(ao[i]);
      this._dict_set = !0;
    }
  }
  jo.prototype.push = function (e, t) {
    var i,
      n,
      r,
      a = this.strm,
      s = this.options.chunkSize;
    if (this.ended) return !1;
    n = t === ~~t ? t : !0 === t ? 4 : 0;
    if ("string" == typeof e) a.input = Mo(e);
    else if ("[object ArrayBuffer]" === zo.call(e)) a.input = new Uint8Array(e);
    else a.input = e;
    a.next_in = 0;
    a.avail_in = a.input.length;
    do {
      if (0 === a.avail_out) {
        a.output = new xs.Buf8(s);
        a.next_out = 0;
        a.avail_out = s;
      }
      if (1 !== (i = Eo.deflate(a, n)) && 0 !== i) {
        this.onEnd(i);
        this.ended = !0;
        return !1;
      }
      if (0 === a.avail_out || (0 === a.avail_in && (4 === n || 2 === n)))
        if ("string" === this.options.to)
          this.onData(No((r = xs.shrinkBuf(a.output, a.next_out)), r.length));
        else this.onData(xs.shrinkBuf(a.output, a.next_out));
    } while ((a.avail_in > 0 || 0 === a.avail_out) && 1 !== i);
    if (4 === n) {
      i = Eo.deflateEnd(this.strm);
      this.onEnd(i);
      this.ended = !0;
      return 0 === i;
    }
    if (2 === n) {
      this.onEnd(0);
      a.avail_out = 0;
      return !0;
    }
    return !0;
  };
  jo.prototype.onData = function (e) {
    this.chunks.push(e);
  };
  jo.prototype.onEnd = function (e) {
    if (0 === e)
      if ("string" === this.options.to) this.result = this.chunks.join("");
      else this.result = xs.flattenChunks(this.chunks);
    this.chunks = [];
    this.err = e;
    this.msg = this.strm.msg;
  };
  function qo(e, t) {
    var i = new jo(t);
    i.push(e, !0);
    if (i.err) throw i.msg || ao[i.err];
    return i.result;
  }
  var Ho = {
      Deflate: jo,
      deflate: qo,
      deflateRaw: function (e, t) {
        (t = t || {}).raw = !0;
        return qo(e, t);
      },
      gzip: function (e, t) {
        (t = t || {}).gzip = !0;
        return qo(e, t);
      },
    },
    Wo = function (e, t) {
      var i,
        n,
        r,
        a,
        s,
        o,
        l,
        c,
        h,
        u,
        d,
        f,
        p,
        g,
        m,
        v,
        b,
        y,
        w,
        x,
        k,
        C,
        S,
        _,
        A;
      i = e.state;
      n = e.next_in;
      _ = e.input;
      r = n + (e.avail_in - 5);
      a = e.next_out;
      A = e.output;
      s = a - (t - e.avail_out);
      o = a + (e.avail_out - 257);
      l = i.dmax;
      c = i.wsize;
      h = i.whave;
      u = i.wnext;
      d = i.window;
      f = i.hold;
      p = i.bits;
      g = i.lencode;
      m = i.distcode;
      v = (1 << i.lenbits) - 1;
      b = (1 << i.distbits) - 1;
      e: do {
        if (p < 15) {
          f += _[n++] << p;
          p += 8;
          f += _[n++] << p;
          p += 8;
        }
        y = g[f & v];
        t: for (;;) {
          f >>>= w = y >>> 24;
          p -= w;
          if (0 == (w = (y >>> 16) & 255)) A[a++] = 65535 & y;
          else if (16 & w) {
            x = 65535 & y;
            if ((w &= 15)) {
              if (p < w) {
                f += _[n++] << p;
                p += 8;
              }
              x += f & ((1 << w) - 1);
              f >>>= w;
              p -= w;
            }
            if (p < 15) {
              f += _[n++] << p;
              p += 8;
              f += _[n++] << p;
              p += 8;
            }
            y = m[f & b];
            i: for (;;) {
              f >>>= w = y >>> 24;
              p -= w;
              if (16 & (w = (y >>> 16) & 255)) {
                k = 65535 & y;
                if (p < (w &= 15)) {
                  f += _[n++] << p;
                  if ((p += 8) < w) {
                    f += _[n++] << p;
                    p += 8;
                  }
                }
                if ((k += f & ((1 << w) - 1)) > l) {
                  e.msg = "invalid distance too far back";
                  i.mode = 30;
                  break e;
                }
                f >>>= w;
                p -= w;
                if (k > (w = a - s)) {
                  if ((w = k - w) > h)
                    if (i.sane) {
                      e.msg = "invalid distance too far back";
                      i.mode = 30;
                      break e;
                    }
                  C = 0;
                  S = d;
                  if (0 === u) {
                    C += c - w;
                    if (w < x) {
                      x -= w;
                      do {
                        A[a++] = d[C++];
                      } while (--w);
                      C = a - k;
                      S = A;
                    }
                  } else if (u < w) {
                    C += c + u - w;
                    if ((w -= u) < x) {
                      x -= w;
                      do {
                        A[a++] = d[C++];
                      } while (--w);
                      C = 0;
                      if (u < x) {
                        x -= w = u;
                        do {
                          A[a++] = d[C++];
                        } while (--w);
                        C = a - k;
                        S = A;
                      }
                    }
                  } else {
                    C += u - w;
                    if (w < x) {
                      x -= w;
                      do {
                        A[a++] = d[C++];
                      } while (--w);
                      C = a - k;
                      S = A;
                    }
                  }
                  for (; x > 2; ) {
                    A[a++] = S[C++];
                    A[a++] = S[C++];
                    A[a++] = S[C++];
                    x -= 3;
                  }
                  if (x) {
                    A[a++] = S[C++];
                    if (x > 1) A[a++] = S[C++];
                  }
                } else {
                  C = a - k;
                  do {
                    A[a++] = A[C++];
                    A[a++] = A[C++];
                    A[a++] = A[C++];
                    x -= 3;
                  } while (x > 2);
                  if (x) {
                    A[a++] = A[C++];
                    if (x > 1) A[a++] = A[C++];
                  }
                }
              } else if (0 == (64 & w)) {
                y = m[(65535 & y) + (f & ((1 << w) - 1))];
                continue i;
              } else {
                e.msg = "invalid distance code";
                i.mode = 30;
                break e;
              }
              break;
            }
          } else if (0 == (64 & w)) {
            y = g[(65535 & y) + (f & ((1 << w) - 1))];
            continue t;
          } else if (32 & w) {
            i.mode = 12;
            break e;
          } else {
            e.msg = "invalid literal/length code";
            i.mode = 30;
            break e;
          }
          break;
        }
      } while (n < r && a < o);
      n -= x = p >> 3;
      f &= (1 << (p -= x << 3)) - 1;
      e.next_in = n;
      e.next_out = a;
      e.avail_in = n < r ? r - n + 5 : 5 - (n - r);
      e.avail_out = a < o ? o - a + 257 : 257 - (a - o);
      i.hold = f;
      i.bits = p;
    },
    Go = [
      3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59,
      67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0,
    ],
    Vo = [
      16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18, 19, 19,
      19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78,
    ],
    Xo = [
      1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513,
      769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577, 0, 0,
    ],
    Ko = [
      16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22, 23, 23,
      24, 24, 25, 25, 26, 26, 27, 27, 28, 28, 29, 29, 64, 64,
    ],
    Yo = function (e, t, i, n, r, a, s, o) {
      var l,
        c,
        h,
        u,
        d,
        f,
        p,
        g,
        m,
        v = o.bits,
        b = 0,
        y = 0,
        w = 0,
        x = 0,
        k = 0,
        C = 0,
        S = 0,
        _ = 0,
        A = 0,
        F = 0,
        T = null,
        P = 0,
        E = new xs.Buf16(16),
        I = new xs.Buf16(16),
        D = null,
        O = 0;
      for (b = 0; b <= 15; b++) E[b] = 0;
      for (y = 0; y < n; y++) E[t[i + y]]++;
      k = v;
      for (x = 15; x >= 1 && 0 === E[x]; x--);
      if (k > x) k = x;
      if (0 === x) {
        r[a++] = 20971520;
        r[a++] = 20971520;
        o.bits = 1;
        return 0;
      }
      for (w = 1; w < x && 0 === E[w]; w++);
      if (k < w) k = w;
      _ = 1;
      for (b = 1; b <= 15; b++) {
        _ <<= 1;
        if ((_ -= E[b]) < 0) return -1;
      }
      if (_ > 0 && (0 === e || 1 !== x)) return -1;
      I[1] = 0;
      for (b = 1; b < 15; b++) I[b + 1] = I[b] + E[b];
      for (y = 0; y < n; y++) if (0 !== t[i + y]) s[I[t[i + y]]++] = y;
      if (0 === e) {
        T = D = s;
        f = 19;
      } else if (1 === e) {
        T = Go;
        P -= 257;
        D = Vo;
        O -= 257;
        f = 256;
      } else {
        T = Xo;
        D = Ko;
        f = -1;
      }
      F = 0;
      y = 0;
      b = w;
      d = a;
      C = k;
      S = 0;
      h = -1;
      u = (A = 1 << k) - 1;
      if ((1 === e && A > 852) || (2 === e && A > 592)) return 1;
      for (;;) {
        p = b - S;
        if (s[y] < f) {
          g = 0;
          m = s[y];
        } else if (s[y] > f) {
          g = D[O + s[y]];
          m = T[P + s[y]];
        } else {
          g = 96;
          m = 0;
        }
        l = 1 << (b - S);
        w = c = 1 << C;
        do {
          r[d + (F >> S) + (c -= l)] = (p << 24) | (g << 16) | m | 0;
        } while (0 !== c);
        l = 1 << (b - 1);
        for (; F & l; ) l >>= 1;
        if (0 !== l) {
          F &= l - 1;
          F += l;
        } else F = 0;
        y++;
        if (0 == --E[b]) {
          if (b === x) break;
          b = t[i + s[y]];
        }
        if (b > k && (F & u) !== h) {
          if (0 === S) S = k;
          d += w;
          _ = 1 << (C = b - S);
          for (; C + S < x && !((_ -= E[C + S]) <= 0); ) {
            C++;
            _ <<= 1;
          }
          A += 1 << C;
          if ((1 === e && A > 852) || (2 === e && A > 592)) return 1;
          r[(h = F & u)] = (k << 24) | (C << 16) | (d - a) | 0;
        }
      }
      if (0 !== F) r[d + F] = ((b - S) << 24) | (64 << 16) | 0;
      o.bits = k;
      return 0;
    },
    Zo = -2,
    Jo = 12,
    $o = 30;
  function Qo(e) {
    return (
      ((e >>> 24) & 255) +
      ((e >>> 8) & 65280) +
      ((65280 & e) << 8) +
      ((255 & e) << 24)
    );
  }
  function el() {
    this.mode = 0;
    this.last = !1;
    this.wrap = 0;
    this.havedict = !1;
    this.flags = 0;
    this.dmax = 0;
    this.check = 0;
    this.total = 0;
    this.head = null;
    this.wbits = 0;
    this.wsize = 0;
    this.whave = 0;
    this.wnext = 0;
    this.window = null;
    this.hold = 0;
    this.bits = 0;
    this.length = 0;
    this.offset = 0;
    this.extra = 0;
    this.lencode = null;
    this.distcode = null;
    this.lenbits = 0;
    this.distbits = 0;
    this.ncode = 0;
    this.nlen = 0;
    this.ndist = 0;
    this.have = 0;
    this.next = null;
    this.lens = new xs.Buf16(320);
    this.work = new xs.Buf16(288);
    this.lendyn = null;
    this.distdyn = null;
    this.sane = 0;
    this.back = 0;
    this.was = 0;
  }
  function tl(e) {
    var t;
    if (!e || !e.state) return Zo;
    t = e.state;
    e.total_in = e.total_out = t.total = 0;
    e.msg = "";
    if (t.wrap) e.adler = 1 & t.wrap;
    t.mode = 1;
    t.last = 0;
    t.havedict = 0;
    t.dmax = 32768;
    t.head = null;
    t.hold = 0;
    t.bits = 0;
    t.lencode = t.lendyn = new xs.Buf32(852);
    t.distcode = t.distdyn = new xs.Buf32(592);
    t.sane = 1;
    t.back = -1;
    return 0;
  }
  function il(e) {
    var t;
    if (!e || !e.state) return Zo;
    (t = e.state).wsize = 0;
    t.whave = 0;
    t.wnext = 0;
    return tl(e);
  }
  function nl(e, t) {
    var i, n;
    if (!e || !e.state) return Zo;
    n = e.state;
    if (t < 0) {
      i = 0;
      t = -t;
    } else {
      i = 1 + (t >> 4);
      if (t < 48) t &= 15;
    }
    if (t && (t < 8 || t > 15)) return Zo;
    if (null !== n.window && n.wbits !== t) n.window = null;
    n.wrap = i;
    n.wbits = t;
    return il(e);
  }
  function rl(e, t) {
    var i, n;
    if (!e) return Zo;
    n = new el();
    e.state = n;
    n.window = null;
    if (0 !== (i = nl(e, t))) e.state = null;
    return i;
  }
  var al,
    sl,
    ol = !0;
  function ll(e) {
    if (ol) {
      var t;
      al = new xs.Buf32(512);
      sl = new xs.Buf32(32);
      t = 0;
      for (; t < 144; ) e.lens[t++] = 8;
      for (; t < 256; ) e.lens[t++] = 9;
      for (; t < 280; ) e.lens[t++] = 7;
      for (; t < 288; ) e.lens[t++] = 8;
      Yo(1, e.lens, 0, 288, al, 0, e.work, { bits: 9 });
      t = 0;
      for (; t < 32; ) e.lens[t++] = 5;
      Yo(2, e.lens, 0, 32, sl, 0, e.work, { bits: 5 });
      ol = !1;
    }
    e.lencode = al;
    e.lenbits = 9;
    e.distcode = sl;
    e.distbits = 5;
  }
  function cl(e, t, i, n) {
    var r,
      a = e.state;
    if (null === a.window) {
      a.wsize = 1 << a.wbits;
      a.wnext = 0;
      a.whave = 0;
      a.window = new xs.Buf8(a.wsize);
    }
    if (n >= a.wsize) {
      xs.arraySet(a.window, t, i - a.wsize, a.wsize, 0);
      a.wnext = 0;
      a.whave = a.wsize;
    } else {
      if ((r = a.wsize - a.wnext) > n) r = n;
      xs.arraySet(a.window, t, i - n, r, a.wnext);
      if ((n -= r)) {
        xs.arraySet(a.window, t, i - n, n, 0);
        a.wnext = n;
        a.whave = a.wsize;
      } else {
        a.wnext += r;
        if (a.wnext === a.wsize) a.wnext = 0;
        if (a.whave < a.wsize) a.whave += r;
      }
    }
    return 0;
  }
  var hl = {
      inflateReset: il,
      inflateReset2: nl,
      inflateResetKeep: tl,
      inflateInit: function (e) {
        return rl(e, 15);
      },
      inflateInit2: rl,
      inflate: function (e, t) {
        var i,
          n,
          r,
          a,
          s,
          o,
          l,
          c,
          h,
          u,
          d,
          f,
          p,
          g,
          m,
          v,
          b,
          y,
          w,
          x,
          k,
          C,
          S,
          _,
          A = 0,
          F = new xs.Buf8(4),
          T = [
            16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15,
          ];
        if (!e || !e.state || !e.output || (!e.input && 0 !== e.avail_in))
          return Zo;
        if ((i = e.state).mode === Jo) i.mode = 13;
        s = e.next_out;
        r = e.output;
        l = e.avail_out;
        a = e.next_in;
        n = e.input;
        o = e.avail_in;
        c = i.hold;
        h = i.bits;
        u = o;
        d = l;
        C = 0;
        e: for (;;)
          switch (i.mode) {
            case 1:
              if (0 === i.wrap) {
                i.mode = 13;
                break;
              }
              for (; h < 16; ) {
                if (0 === o) break e;
                o--;
                c += n[a++] << h;
                h += 8;
              }
              if (2 & i.wrap && 35615 === c) {
                i.check = 0;
                F[0] = 255 & c;
                F[1] = (c >>> 8) & 255;
                i.check = ro(i.check, F, 2, 0);
                c = 0;
                h = 0;
                i.mode = 2;
                break;
              }
              i.flags = 0;
              if (i.head) i.head.done = !1;
              if (!(1 & i.wrap) || (((255 & c) << 8) + (c >> 8)) % 31) {
                e.msg = "incorrect header check";
                i.mode = $o;
                break;
              }
              if (8 != (15 & c)) {
                e.msg = "unknown compression method";
                i.mode = $o;
                break;
              }
              h -= 4;
              k = 8 + (15 & (c >>>= 4));
              if (0 === i.wbits) i.wbits = k;
              else if (k > i.wbits) {
                e.msg = "invalid window size";
                i.mode = $o;
                break;
              }
              i.dmax = 1 << k;
              e.adler = i.check = 1;
              i.mode = 512 & c ? 10 : Jo;
              c = 0;
              h = 0;
              break;
            case 2:
              for (; h < 16; ) {
                if (0 === o) break e;
                o--;
                c += n[a++] << h;
                h += 8;
              }
              i.flags = c;
              if (8 != (255 & i.flags)) {
                e.msg = "unknown compression method";
                i.mode = $o;
                break;
              }
              if (57344 & i.flags) {
                e.msg = "unknown header flags set";
                i.mode = $o;
                break;
              }
              if (i.head) i.head.text = (c >> 8) & 1;
              if (512 & i.flags) {
                F[0] = 255 & c;
                F[1] = (c >>> 8) & 255;
                i.check = ro(i.check, F, 2, 0);
              }
              c = 0;
              h = 0;
              i.mode = 3;
            case 3:
              for (; h < 32; ) {
                if (0 === o) break e;
                o--;
                c += n[a++] << h;
                h += 8;
              }
              if (i.head) i.head.time = c;
              if (512 & i.flags) {
                F[0] = 255 & c;
                F[1] = (c >>> 8) & 255;
                F[2] = (c >>> 16) & 255;
                F[3] = (c >>> 24) & 255;
                i.check = ro(i.check, F, 4, 0);
              }
              c = 0;
              h = 0;
              i.mode = 4;
            case 4:
              for (; h < 16; ) {
                if (0 === o) break e;
                o--;
                c += n[a++] << h;
                h += 8;
              }
              if (i.head) {
                i.head.xflags = 255 & c;
                i.head.os = c >> 8;
              }
              if (512 & i.flags) {
                F[0] = 255 & c;
                F[1] = (c >>> 8) & 255;
                i.check = ro(i.check, F, 2, 0);
              }
              c = 0;
              h = 0;
              i.mode = 5;
            case 5:
              if (1024 & i.flags) {
                for (; h < 16; ) {
                  if (0 === o) break e;
                  o--;
                  c += n[a++] << h;
                  h += 8;
                }
                i.length = c;
                if (i.head) i.head.extra_len = c;
                if (512 & i.flags) {
                  F[0] = 255 & c;
                  F[1] = (c >>> 8) & 255;
                  i.check = ro(i.check, F, 2, 0);
                }
                c = 0;
                h = 0;
              } else if (i.head) i.head.extra = null;
              i.mode = 6;
            case 6:
              if (1024 & i.flags) {
                if ((f = i.length) > o) f = o;
                if (f) {
                  if (i.head) {
                    k = i.head.extra_len - i.length;
                    if (!i.head.extra)
                      i.head.extra = new Array(i.head.extra_len);
                    xs.arraySet(i.head.extra, n, a, f, k);
                  }
                  if (512 & i.flags) i.check = ro(i.check, n, f, a);
                  o -= f;
                  a += f;
                  i.length -= f;
                }
                if (i.length) break e;
              }
              i.length = 0;
              i.mode = 7;
            case 7:
              if (2048 & i.flags) {
                if (0 === o) break e;
                f = 0;
                do {
                  k = n[a + f++];
                  if (i.head && k && i.length < 65536)
                    i.head.name += String.fromCharCode(k);
                } while (k && f < o);
                if (512 & i.flags) i.check = ro(i.check, n, f, a);
                o -= f;
                a += f;
                if (k) break e;
              } else if (i.head) i.head.name = null;
              i.length = 0;
              i.mode = 8;
            case 8:
              if (4096 & i.flags) {
                if (0 === o) break e;
                f = 0;
                do {
                  k = n[a + f++];
                  if (i.head && k && i.length < 65536)
                    i.head.comment += String.fromCharCode(k);
                } while (k && f < o);
                if (512 & i.flags) i.check = ro(i.check, n, f, a);
                o -= f;
                a += f;
                if (k) break e;
              } else if (i.head) i.head.comment = null;
              i.mode = 9;
            case 9:
              if (512 & i.flags) {
                for (; h < 16; ) {
                  if (0 === o) break e;
                  o--;
                  c += n[a++] << h;
                  h += 8;
                }
                if (c !== (65535 & i.check)) {
                  e.msg = "header crc mismatch";
                  i.mode = $o;
                  break;
                }
                c = 0;
                h = 0;
              }
              if (i.head) {
                i.head.hcrc = (i.flags >> 9) & 1;
                i.head.done = !0;
              }
              e.adler = i.check = 0;
              i.mode = Jo;
              break;
            case 10:
              for (; h < 32; ) {
                if (0 === o) break e;
                o--;
                c += n[a++] << h;
                h += 8;
              }
              e.adler = i.check = Qo(c);
              c = 0;
              h = 0;
              i.mode = 11;
            case 11:
              if (0 === i.havedict) {
                e.next_out = s;
                e.avail_out = l;
                e.next_in = a;
                e.avail_in = o;
                i.hold = c;
                i.bits = h;
                return 2;
              }
              e.adler = i.check = 1;
              i.mode = Jo;
            case Jo:
              if (5 === t || 6 === t) break e;
            case 13:
              if (i.last) {
                c >>>= 7 & h;
                h -= 7 & h;
                i.mode = 27;
                break;
              }
              for (; h < 3; ) {
                if (0 === o) break e;
                o--;
                c += n[a++] << h;
                h += 8;
              }
              i.last = 1 & c;
              h -= 1;
              switch (3 & (c >>>= 1)) {
                case 0:
                  i.mode = 14;
                  break;
                case 1:
                  ll(i);
                  i.mode = 20;
                  if (6 === t) {
                    c >>>= 2;
                    h -= 2;
                    break e;
                  }
                  break;
                case 2:
                  i.mode = 17;
                  break;
                case 3:
                  e.msg = "invalid block type";
                  i.mode = $o;
              }
              c >>>= 2;
              h -= 2;
              break;
            case 14:
              c >>>= 7 & h;
              h -= 7 & h;
              for (; h < 32; ) {
                if (0 === o) break e;
                o--;
                c += n[a++] << h;
                h += 8;
              }
              if ((65535 & c) != ((c >>> 16) ^ 65535)) {
                e.msg = "invalid stored block lengths";
                i.mode = $o;
                break;
              }
              i.length = 65535 & c;
              c = 0;
              h = 0;
              i.mode = 15;
              if (6 === t) break e;
            case 15:
              i.mode = 16;
            case 16:
              if ((f = i.length)) {
                if (f > o) f = o;
                if (f > l) f = l;
                if (0 === f) break e;
                xs.arraySet(r, n, a, f, s);
                o -= f;
                a += f;
                l -= f;
                s += f;
                i.length -= f;
                break;
              }
              i.mode = Jo;
              break;
            case 17:
              for (; h < 14; ) {
                if (0 === o) break e;
                o--;
                c += n[a++] << h;
                h += 8;
              }
              i.nlen = 257 + (31 & c);
              c >>>= 5;
              h -= 5;
              i.ndist = 1 + (31 & c);
              c >>>= 5;
              h -= 5;
              i.ncode = 4 + (15 & c);
              c >>>= 4;
              h -= 4;
              if (i.nlen > 286 || i.ndist > 30) {
                e.msg = "too many length or distance symbols";
                i.mode = $o;
                break;
              }
              i.have = 0;
              i.mode = 18;
            case 18:
              for (; i.have < i.ncode; ) {
                for (; h < 3; ) {
                  if (0 === o) break e;
                  o--;
                  c += n[a++] << h;
                  h += 8;
                }
                i.lens[T[i.have++]] = 7 & c;
                c >>>= 3;
                h -= 3;
              }
              for (; i.have < 19; ) i.lens[T[i.have++]] = 0;
              i.lencode = i.lendyn;
              i.lenbits = 7;
              S = { bits: i.lenbits };
              C = Yo(0, i.lens, 0, 19, i.lencode, 0, i.work, S);
              i.lenbits = S.bits;
              if (C) {
                e.msg = "invalid code lengths set";
                i.mode = $o;
                break;
              }
              i.have = 0;
              i.mode = 19;
            case 19:
              for (; i.have < i.nlen + i.ndist; ) {
                for (;;) {
                  v =
                    ((A = i.lencode[c & ((1 << i.lenbits) - 1)]) >>> 16) & 255;
                  b = 65535 & A;
                  if ((m = A >>> 24) <= h) break;
                  if (0 === o) break e;
                  o--;
                  c += n[a++] << h;
                  h += 8;
                }
                if (b < 16) {
                  c >>>= m;
                  h -= m;
                  i.lens[i.have++] = b;
                } else {
                  if (16 === b) {
                    _ = m + 2;
                    for (; h < _; ) {
                      if (0 === o) break e;
                      o--;
                      c += n[a++] << h;
                      h += 8;
                    }
                    c >>>= m;
                    h -= m;
                    if (0 === i.have) {
                      e.msg = "invalid bit length repeat";
                      i.mode = $o;
                      break;
                    }
                    k = i.lens[i.have - 1];
                    f = 3 + (3 & c);
                    c >>>= 2;
                    h -= 2;
                  } else if (17 === b) {
                    _ = m + 3;
                    for (; h < _; ) {
                      if (0 === o) break e;
                      o--;
                      c += n[a++] << h;
                      h += 8;
                    }
                    h -= m;
                    k = 0;
                    f = 3 + (7 & (c >>>= m));
                    c >>>= 3;
                    h -= 3;
                  } else {
                    _ = m + 7;
                    for (; h < _; ) {
                      if (0 === o) break e;
                      o--;
                      c += n[a++] << h;
                      h += 8;
                    }
                    h -= m;
                    k = 0;
                    f = 11 + (127 & (c >>>= m));
                    c >>>= 7;
                    h -= 7;
                  }
                  if (i.have + f > i.nlen + i.ndist) {
                    e.msg = "invalid bit length repeat";
                    i.mode = $o;
                    break;
                  }
                  for (; f--; ) i.lens[i.have++] = k;
                }
              }
              if (i.mode === $o) break;
              if (0 === i.lens[256]) {
                e.msg = "invalid code -- missing end-of-block";
                i.mode = $o;
                break;
              }
              i.lenbits = 9;
              S = { bits: i.lenbits };
              C = Yo(1, i.lens, 0, i.nlen, i.lencode, 0, i.work, S);
              i.lenbits = S.bits;
              if (C) {
                e.msg = "invalid literal/lengths set";
                i.mode = $o;
                break;
              }
              i.distbits = 6;
              i.distcode = i.distdyn;
              S = { bits: i.distbits };
              C = Yo(2, i.lens, i.nlen, i.ndist, i.distcode, 0, i.work, S);
              i.distbits = S.bits;
              if (C) {
                e.msg = "invalid distances set";
                i.mode = $o;
                break;
              }
              i.mode = 20;
              if (6 === t) break e;
            case 20:
              i.mode = 21;
            case 21:
              if (o >= 6 && l >= 258) {
                e.next_out = s;
                e.avail_out = l;
                e.next_in = a;
                e.avail_in = o;
                i.hold = c;
                i.bits = h;
                Wo(e, d);
                s = e.next_out;
                r = e.output;
                l = e.avail_out;
                a = e.next_in;
                n = e.input;
                o = e.avail_in;
                c = i.hold;
                h = i.bits;
                if (i.mode === Jo) i.back = -1;
                break;
              }
              i.back = 0;
              for (;;) {
                v = ((A = i.lencode[c & ((1 << i.lenbits) - 1)]) >>> 16) & 255;
                b = 65535 & A;
                if ((m = A >>> 24) <= h) break;
                if (0 === o) break e;
                o--;
                c += n[a++] << h;
                h += 8;
              }
              if (v && 0 == (240 & v)) {
                y = m;
                w = v;
                x = b;
                for (;;) {
                  v =
                    ((A = i.lencode[x + ((c & ((1 << (y + w)) - 1)) >> y)]) >>>
                      16) &
                    255;
                  b = 65535 & A;
                  if (y + (m = A >>> 24) <= h) break;
                  if (0 === o) break e;
                  o--;
                  c += n[a++] << h;
                  h += 8;
                }
                c >>>= y;
                h -= y;
                i.back += y;
              }
              c >>>= m;
              h -= m;
              i.back += m;
              i.length = b;
              if (0 === v) {
                i.mode = 26;
                break;
              }
              if (32 & v) {
                i.back = -1;
                i.mode = Jo;
                break;
              }
              if (64 & v) {
                e.msg = "invalid literal/length code";
                i.mode = $o;
                break;
              }
              i.extra = 15 & v;
              i.mode = 22;
            case 22:
              if (i.extra) {
                _ = i.extra;
                for (; h < _; ) {
                  if (0 === o) break e;
                  o--;
                  c += n[a++] << h;
                  h += 8;
                }
                i.length += c & ((1 << i.extra) - 1);
                c >>>= i.extra;
                h -= i.extra;
                i.back += i.extra;
              }
              i.was = i.length;
              i.mode = 23;
            case 23:
              for (;;) {
                v =
                  ((A = i.distcode[c & ((1 << i.distbits) - 1)]) >>> 16) & 255;
                b = 65535 & A;
                if ((m = A >>> 24) <= h) break;
                if (0 === o) break e;
                o--;
                c += n[a++] << h;
                h += 8;
              }
              if (0 == (240 & v)) {
                y = m;
                w = v;
                x = b;
                for (;;) {
                  v =
                    ((A = i.distcode[x + ((c & ((1 << (y + w)) - 1)) >> y)]) >>>
                      16) &
                    255;
                  b = 65535 & A;
                  if (y + (m = A >>> 24) <= h) break;
                  if (0 === o) break e;
                  o--;
                  c += n[a++] << h;
                  h += 8;
                }
                c >>>= y;
                h -= y;
                i.back += y;
              }
              c >>>= m;
              h -= m;
              i.back += m;
              if (64 & v) {
                e.msg = "invalid distance code";
                i.mode = $o;
                break;
              }
              i.offset = b;
              i.extra = 15 & v;
              i.mode = 24;
            case 24:
              if (i.extra) {
                _ = i.extra;
                for (; h < _; ) {
                  if (0 === o) break e;
                  o--;
                  c += n[a++] << h;
                  h += 8;
                }
                i.offset += c & ((1 << i.extra) - 1);
                c >>>= i.extra;
                h -= i.extra;
                i.back += i.extra;
              }
              if (i.offset > i.dmax) {
                e.msg = "invalid distance too far back";
                i.mode = $o;
                break;
              }
              i.mode = 25;
            case 25:
              if (0 === l) break e;
              f = d - l;
              if (i.offset > f) {
                if ((f = i.offset - f) > i.whave)
                  if (i.sane) {
                    e.msg = "invalid distance too far back";
                    i.mode = $o;
                    break;
                  }
                if (f > i.wnext) {
                  f -= i.wnext;
                  p = i.wsize - f;
                } else p = i.wnext - f;
                if (f > i.length) f = i.length;
                g = i.window;
              } else {
                g = r;
                p = s - i.offset;
                f = i.length;
              }
              if (f > l) f = l;
              l -= f;
              i.length -= f;
              do {
                r[s++] = g[p++];
              } while (--f);
              if (0 === i.length) i.mode = 21;
              break;
            case 26:
              if (0 === l) break e;
              r[s++] = i.length;
              l--;
              i.mode = 21;
              break;
            case 27:
              if (i.wrap) {
                for (; h < 32; ) {
                  if (0 === o) break e;
                  o--;
                  c |= n[a++] << h;
                  h += 8;
                }
                d -= l;
                e.total_out += d;
                i.total += d;
                if (d)
                  e.adler = i.check = i.flags
                    ? ro(i.check, r, d, s - d)
                    : io(i.check, r, d, s - d);
                d = l;
                if ((i.flags ? c : Qo(c)) !== i.check) {
                  e.msg = "incorrect data check";
                  i.mode = $o;
                  break;
                }
                c = 0;
                h = 0;
              }
              i.mode = 28;
            case 28:
              if (i.wrap && i.flags) {
                for (; h < 32; ) {
                  if (0 === o) break e;
                  o--;
                  c += n[a++] << h;
                  h += 8;
                }
                if (c !== (4294967295 & i.total)) {
                  e.msg = "incorrect length check";
                  i.mode = $o;
                  break;
                }
                c = 0;
                h = 0;
              }
              i.mode = 29;
            case 29:
              C = 1;
              break e;
            case $o:
              C = -3;
              break e;
            case 31:
              return -4;
            case 32:
            default:
              return Zo;
          }
        e.next_out = s;
        e.avail_out = l;
        e.next_in = a;
        e.avail_in = o;
        i.hold = c;
        i.bits = h;
        if (
          i.wsize ||
          (d !== e.avail_out && i.mode < $o && (i.mode < 27 || 4 !== t))
        )
          if (cl(e, e.output, e.next_out, d - e.avail_out));
        u -= e.avail_in;
        d -= e.avail_out;
        e.total_in += u;
        e.total_out += d;
        i.total += d;
        if (i.wrap && d)
          e.adler = i.check = i.flags
            ? ro(i.check, r, d, e.next_out - d)
            : io(i.check, r, d, e.next_out - d);
        e.data_type =
          i.bits +
          (i.last ? 64 : 0) +
          (i.mode === Jo ? 128 : 0) +
          (20 === i.mode || 15 === i.mode ? 256 : 0);
        if (((0 === u && 0 === d) || 4 === t) && 0 === C) C = -5;
        return C;
      },
      inflateEnd: function (e) {
        if (!e || !e.state) return Zo;
        var t = e.state;
        if (t.window) t.window = null;
        e.state = null;
        return 0;
      },
      inflateGetHeader: function (e, t) {
        var i;
        if (!e || !e.state) return Zo;
        if (0 == (2 & (i = e.state).wrap)) return Zo;
        i.head = t;
        t.done = !1;
        return 0;
      },
      inflateSetDictionary: function (e, t) {
        var i,
          n = t.length;
        if (!e || !e.state) return Zo;
        if (0 !== (i = e.state).wrap && 11 !== i.mode) return Zo;
        if (11 === i.mode) if (io(1, t, n, 0) !== i.check) return -3;
        if (cl(e, t, n, n)) {
          i.mode = 31;
          return -4;
        }
        i.havedict = 1;
        return 0;
      },
      inflateInfo: "pako inflate (from Nodeca project)",
    },
    ul = {
      Z_NO_FLUSH: 0,
      Z_PARTIAL_FLUSH: 1,
      Z_SYNC_FLUSH: 2,
      Z_FULL_FLUSH: 3,
      Z_FINISH: 4,
      Z_BLOCK: 5,
      Z_TREES: 6,
      Z_OK: 0,
      Z_STREAM_END: 1,
      Z_NEED_DICT: 2,
      Z_ERRNO: -1,
      Z_STREAM_ERROR: -2,
      Z_DATA_ERROR: -3,
      Z_BUF_ERROR: -5,
      Z_NO_COMPRESSION: 0,
      Z_BEST_SPEED: 1,
      Z_BEST_COMPRESSION: 9,
      Z_DEFAULT_COMPRESSION: -1,
      Z_FILTERED: 1,
      Z_HUFFMAN_ONLY: 2,
      Z_RLE: 3,
      Z_FIXED: 4,
      Z_DEFAULT_STRATEGY: 0,
      Z_BINARY: 0,
      Z_TEXT: 1,
      Z_UNKNOWN: 2,
      Z_DEFLATED: 8,
    },
    dl = function () {
      this.text = 0;
      this.time = 0;
      this.xflags = 0;
      this.os = 0;
      this.extra = null;
      this.extra_len = 0;
      this.name = "";
      this.comment = "";
      this.hcrc = 0;
      this.done = !1;
    },
    fl = Object.prototype.toString;
  function pl(e) {
    if (!(this instanceof pl)) return new pl(e);
    this.options = xs.assign(
      { chunkSize: 16384, windowBits: 0, to: "" },
      e || {}
    );
    var t = this.options;
    if (t.raw && t.windowBits >= 0 && t.windowBits < 16) {
      t.windowBits = -t.windowBits;
      if (0 === t.windowBits) t.windowBits = -15;
    }
    if (t.windowBits >= 0 && t.windowBits < 16 && (!e || !e.windowBits))
      t.windowBits += 32;
    if (t.windowBits > 15 && t.windowBits < 48)
      if (0 == (15 & t.windowBits)) t.windowBits |= 15;
    this.err = 0;
    this.msg = "";
    this.ended = !1;
    this.chunks = [];
    this.strm = new Uo();
    this.strm.avail_out = 0;
    var i = hl.inflateInit2(this.strm, t.windowBits);
    if (i !== ul.Z_OK) throw new Error(ao[i]);
    this.header = new dl();
    hl.inflateGetHeader(this.strm, this.header);
    if (t.dictionary) {
      if ("string" == typeof t.dictionary) t.dictionary = Mo(t.dictionary);
      else if ("[object ArrayBuffer]" === fl.call(t.dictionary))
        t.dictionary = new Uint8Array(t.dictionary);
      if (t.raw)
        if ((i = hl.inflateSetDictionary(this.strm, t.dictionary)) !== ul.Z_OK)
          throw new Error(ao[i]);
    }
  }
  pl.prototype.push = function (e, t) {
    var i,
      n,
      r,
      a,
      s,
      o = this.strm,
      l = this.options.chunkSize,
      c = this.options.dictionary,
      h = !1;
    if (this.ended) return !1;
    n = t === ~~t ? t : !0 === t ? ul.Z_FINISH : ul.Z_NO_FLUSH;
    if ("string" == typeof e)
      o.input = (function (e) {
        for (var t = new xs.Buf8(e.length), i = 0, n = t.length; i < n; i++)
          t[i] = e.charCodeAt(i);
        return t;
      })(e);
    else if ("[object ArrayBuffer]" === fl.call(e)) o.input = new Uint8Array(e);
    else o.input = e;
    o.next_in = 0;
    o.avail_in = o.input.length;
    do {
      if (0 === o.avail_out) {
        o.output = new xs.Buf8(l);
        o.next_out = 0;
        o.avail_out = l;
      }
      if ((i = hl.inflate(o, ul.Z_NO_FLUSH)) === ul.Z_NEED_DICT && c)
        i = hl.inflateSetDictionary(this.strm, c);
      if (i === ul.Z_BUF_ERROR && !0 === h) {
        i = ul.Z_OK;
        h = !1;
      }
      if (i !== ul.Z_STREAM_END && i !== ul.Z_OK) {
        this.onEnd(i);
        this.ended = !0;
        return !1;
      }
      if (o.next_out)
        if (
          0 === o.avail_out ||
          i === ul.Z_STREAM_END ||
          (0 === o.avail_in && (n === ul.Z_FINISH || n === ul.Z_SYNC_FLUSH))
        )
          if ("string" === this.options.to) {
            r = Lo(o.output, o.next_out);
            a = o.next_out - r;
            s = Bo(o.output, r);
            o.next_out = a;
            o.avail_out = l - a;
            if (a) xs.arraySet(o.output, o.output, r, a, 0);
            this.onData(s);
          } else this.onData(xs.shrinkBuf(o.output, o.next_out));
      if (0 === o.avail_in && 0 === o.avail_out) h = !0;
    } while ((o.avail_in > 0 || 0 === o.avail_out) && i !== ul.Z_STREAM_END);
    if (i === ul.Z_STREAM_END) n = ul.Z_FINISH;
    if (n === ul.Z_FINISH) {
      i = hl.inflateEnd(this.strm);
      this.onEnd(i);
      this.ended = !0;
      return i === ul.Z_OK;
    }
    if (n === ul.Z_SYNC_FLUSH) {
      this.onEnd(ul.Z_OK);
      o.avail_out = 0;
      return !0;
    }
    return !0;
  };
  pl.prototype.onData = function (e) {
    this.chunks.push(e);
  };
  pl.prototype.onEnd = function (e) {
    if (e === ul.Z_OK)
      if ("string" === this.options.to) this.result = this.chunks.join("");
      else this.result = xs.flattenChunks(this.chunks);
    this.chunks = [];
    this.err = e;
    this.msg = this.strm.msg;
  };
  function gl(e, t) {
    var i = new pl(t);
    i.push(e, !0);
    if (i.err) throw i.msg || ao[i.err];
    return i.result;
  }
  var ml = {
      Inflate: pl,
      inflate: gl,
      inflateRaw: function (e, t) {
        (t = t || {}).raw = !0;
        return gl(e, t);
      },
      ungzip: gl,
    },
    vl = {};
  (0, xs.assign)(vl, Ho, ml, ul);
  var bl,
    yl = vl,
    wl = {
      toRGBA8: function (e) {
        var t = e.width,
          i = e.height;
        if (null == e.tabs.acTL)
          return [wl.toRGBA8.decodeImage(e.data, t, i, e).buffer];
        var n = [];
        if (null == e.frames[0].data) e.frames[0].data = e.data;
        for (
          var r = t * i * 4,
            a = new Uint8Array(r),
            s = new Uint8Array(r),
            o = new Uint8Array(r),
            l = 0;
          l < e.frames.length;
          l++
        ) {
          var c = e.frames[l],
            h = c.rect.x,
            u = c.rect.y,
            d = c.rect.width,
            f = c.rect.height,
            p = wl.toRGBA8.decodeImage(c.data, d, f, e);
          if (0 != l) for (var g = 0; g < r; g++) o[g] = a[g];
          if (0 == c.blend) wl._copyTile(p, d, f, a, t, i, h, u, 0);
          else if (1 == c.blend) wl._copyTile(p, d, f, a, t, i, h, u, 1);
          n.push(a.buffer.slice(0));
          if (0 == c.dispose);
          else if (1 == c.dispose) wl._copyTile(s, d, f, a, t, i, h, u, 0);
          else if (2 == c.dispose) for (g = 0; g < r; g++) a[g] = o[g];
        }
        return n;
      },
    };
  wl.toRGBA8.decodeImage = function (e, t, i, n) {
    var r = t * i,
      a = wl.decode._getBPP(n),
      s = Math.ceil((t * a) / 8),
      o = new Uint8Array(4 * r),
      l = new Uint32Array(o.buffer),
      c = n.ctype,
      h = n.depth,
      u = wl._bin.readUshort;
    if (6 == c) {
      var d = r << 2;
      if (8 == h)
        for (var f = 0; f < d; f += 4) {
          o[f] = e[f];
          o[f + 1] = e[f + 1];
          o[f + 2] = e[f + 2];
          o[f + 3] = e[f + 3];
        }
      if (16 == h) for (f = 0; f < d; f++) o[f] = e[f << 1];
    } else if (2 == c) {
      var p = n.tabs.tRNS;
      if (null == p) {
        if (8 == h)
          for (f = 0; f < r; f++) {
            var g = 3 * f;
            l[f] = (255 << 24) | (e[g + 2] << 16) | (e[g + 1] << 8) | e[g];
          }
        if (16 == h)
          for (f = 0; f < r; f++) {
            g = 6 * f;
            l[f] = (255 << 24) | (e[g + 4] << 16) | (e[g + 2] << 8) | e[g];
          }
      } else {
        var m = p[0],
          v = p[1],
          b = p[2];
        if (8 == h)
          for (f = 0; f < r; f++) {
            var y = f << 2;
            g = 3 * f;
            l[f] = (255 << 24) | (e[g + 2] << 16) | (e[g + 1] << 8) | e[g];
            if (e[g] == m && e[g + 1] == v && e[g + 2] == b) o[y + 3] = 0;
          }
        if (16 == h)
          for (f = 0; f < r; f++) {
            (y = f << 2), (g = 6 * f);
            l[f] = (255 << 24) | (e[g + 4] << 16) | (e[g + 2] << 8) | e[g];
            if (u(e, g) == m && u(e, g + 2) == v && u(e, g + 4) == b)
              o[y + 3] = 0;
          }
      }
    } else if (3 == c) {
      var w = n.tabs.PLTE,
        x = n.tabs.tRNS,
        k = x ? x.length : 0;
      if (1 == h)
        for (var C = 0; C < i; C++) {
          var S = C * s,
            _ = C * t;
          for (f = 0; f < t; f++) {
            y = (_ + f) << 2;
            var A = 3 * (F = (e[S + (f >> 3)] >> (7 - ((7 & f) << 0))) & 1);
            o[y] = w[A];
            o[y + 1] = w[A + 1];
            o[y + 2] = w[A + 2];
            o[y + 3] = F < k ? x[F] : 255;
          }
        }
      if (2 == h)
        for (C = 0; C < i; C++)
          for (S = C * s, _ = C * t, f = 0; f < t; f++) {
            (y = (_ + f) << 2),
              (A = 3 * (F = (e[S + (f >> 2)] >> (6 - ((3 & f) << 1))) & 3));
            o[y] = w[A];
            o[y + 1] = w[A + 1];
            o[y + 2] = w[A + 2];
            o[y + 3] = F < k ? x[F] : 255;
          }
      if (4 == h)
        for (C = 0; C < i; C++)
          for (S = C * s, _ = C * t, f = 0; f < t; f++) {
            (y = (_ + f) << 2),
              (A = 3 * (F = (e[S + (f >> 1)] >> (4 - ((1 & f) << 2))) & 15));
            o[y] = w[A];
            o[y + 1] = w[A + 1];
            o[y + 2] = w[A + 2];
            o[y + 3] = F < k ? x[F] : 255;
          }
      if (8 == h)
        for (f = 0; f < r; f++) {
          var F;
          (y = f << 2), (A = 3 * (F = e[f]));
          o[y] = w[A];
          o[y + 1] = w[A + 1];
          o[y + 2] = w[A + 2];
          o[y + 3] = F < k ? x[F] : 255;
        }
    } else if (4 == c) {
      if (8 == h)
        for (f = 0; f < r; f++) {
          y = f << 2;
          var T = e[(P = f << 1)];
          o[y] = T;
          o[y + 1] = T;
          o[y + 2] = T;
          o[y + 3] = e[P + 1];
        }
      if (16 == h)
        for (f = 0; f < r; f++) {
          var P;
          (y = f << 2), (T = e[(P = f << 2)]);
          o[y] = T;
          o[y + 1] = T;
          o[y + 2] = T;
          o[y + 3] = e[P + 2];
        }
    } else if (0 == c)
      for (m = n.tabs.tRNS ? n.tabs.tRNS : -1, C = 0; C < i; C++) {
        var E = C * s,
          I = C * t;
        if (1 == h)
          for (var D = 0; D < t; D++) {
            var O =
              (T = 255 * ((e[E + (D >>> 3)] >>> (7 - (7 & D))) & 1)) == 255 * m
                ? 0
                : 255;
            l[I + D] = (O << 24) | (T << 16) | (T << 8) | T;
          }
        else if (2 == h)
          for (D = 0; D < t; D++) {
            O =
              (T = 85 * ((e[E + (D >>> 2)] >>> (6 - ((3 & D) << 1))) & 3)) ==
              85 * m
                ? 0
                : 255;
            l[I + D] = (O << 24) | (T << 16) | (T << 8) | T;
          }
        else if (4 == h)
          for (D = 0; D < t; D++) {
            O =
              (T = 17 * ((e[E + (D >>> 1)] >>> (4 - ((1 & D) << 2))) & 15)) ==
              17 * m
                ? 0
                : 255;
            l[I + D] = (O << 24) | (T << 16) | (T << 8) | T;
          }
        else if (8 == h)
          for (D = 0; D < t; D++) {
            O = (T = e[E + D]) == m ? 0 : 255;
            l[I + D] = (O << 24) | (T << 16) | (T << 8) | T;
          }
        else if (16 == h)
          for (D = 0; D < t; D++) {
            (T = e[E + (D << 1)]), (O = u(e, E + (D << f)) == m ? 0 : 255);
            l[I + D] = (O << 24) | (T << 16) | (T << 8) | T;
          }
      }
    return o;
  };
  wl.decode = function (e) {
    for (
      var t,
        i = new Uint8Array(e),
        n = 8,
        r = wl._bin,
        a = r.readUshort,
        s = r.readUint,
        o = { tabs: {}, frames: [] },
        l = new Uint8Array(i.length),
        c = 0,
        h = 0,
        u = [137, 80, 78, 71, 13, 10, 26, 10],
        d = 0;
      d < 8;
      d++
    )
      if (i[d] != u[d]) throw "The input is not a PNG file!";
    for (; n < i.length; ) {
      var f = r.readUint(i, n);
      n += 4;
      var p = r.readASCII(i, n, 4);
      n += 4;
      if ("IHDR" == p) wl.decode._IHDR(i, n, o);
      else if ("IDAT" == p) {
        for (d = 0; d < f; d++) l[c + d] = i[n + d];
        c += f;
      } else if ("acTL" == p) {
        o.tabs[p] = { num_frames: s(i, n), num_plays: s(i, n + 4) };
        t = new Uint8Array(i.length);
      } else if ("fcTL" == p) {
        if (0 != h) {
          (C = o.frames[o.frames.length - 1]).data = wl.decode._decompress(
            o,
            t.slice(0, h),
            C.rect.width,
            C.rect.height
          );
          h = 0;
        }
        var g = {
            x: s(i, n + 12),
            y: s(i, n + 16),
            width: s(i, n + 4),
            height: s(i, n + 8),
          },
          m = a(i, n + 22);
        m = a(i, n + 20) / (0 == m ? 100 : m);
        var v = {
          rect: g,
          delay: Math.round(1e3 * m),
          dispose: i[n + 24],
          blend: i[n + 25],
        };
        o.frames.push(v);
      } else if ("fdAT" == p) {
        for (d = 0; d < f - 4; d++) t[h + d] = i[n + d + 4];
        h += f - 4;
      } else if ("pHYs" == p)
        o.tabs[p] = [r.readUint(i, n), r.readUint(i, n + 4), i[n + 8]];
      else if ("cHRM" == p) {
        o.tabs[p] = [];
        for (d = 0; d < 8; d++) o.tabs[p].push(r.readUint(i, n + 4 * d));
      } else if ("tEXt" == p) {
        if (null == o.tabs[p]) o.tabs[p] = {};
        var b = r.nextZero(i, n),
          y = r.readASCII(i, n, b - n),
          w = r.readASCII(i, b + 1, n + f - b - 1);
        o.tabs[p][y] = w;
      } else if ("iTXt" == p) {
        if (null == o.tabs[p]) o.tabs[p] = {};
        b = 0;
        var x = n;
        b = r.nextZero(i, x);
        y = r.readASCII(i, x, b - x);
        x = b + 1;
        x += 2;
        b = r.nextZero(i, x);
        r.readASCII(i, x, b - x);
        x = b + 1;
        b = r.nextZero(i, x);
        r.readUTF8(i, x, b - x);
        x = b + 1;
        w = r.readUTF8(i, x, f - (x - n));
        o.tabs[p][y] = w;
      } else if ("PLTE" == p) o.tabs[p] = r.readBytes(i, n, f);
      else if ("hIST" == p) {
        var k = o.tabs.PLTE.length / 3;
        o.tabs[p] = [];
        for (d = 0; d < k; d++) o.tabs[p].push(a(i, n + 2 * d));
      } else if ("tRNS" == p) {
        if (3 == o.ctype) o.tabs[p] = r.readBytes(i, n, f);
        else if (0 == o.ctype) o.tabs[p] = a(i, n);
        else if (2 == o.ctype) o.tabs[p] = [a(i, n), a(i, n + 2), a(i, n + 4)];
      } else if ("gAMA" == p) o.tabs[p] = r.readUint(i, n) / 1e5;
      else if ("sRGB" == p) o.tabs[p] = i[n];
      else if ("bKGD" == p) {
        if (0 == o.ctype || 4 == o.ctype) o.tabs[p] = [a(i, n)];
        else if (2 == o.ctype || 6 == o.ctype)
          o.tabs[p] = [a(i, n), a(i, n + 2), a(i, n + 4)];
        else if (3 == o.ctype) o.tabs[p] = i[n];
      } else if ("IEND" == p) break;
      n += f;
      r.readUint(i, n);
      n += 4;
    }
    if (0 != h) {
      var C;
      (C = o.frames[o.frames.length - 1]).data = wl.decode._decompress(
        o,
        t.slice(0, h),
        C.rect.width,
        C.rect.height
      );
      h = 0;
    }
    o.data = wl.decode._decompress(o, l, o.width, o.height);
    delete o.compress;
    delete o.interlace;
    delete o.filter;
    return o;
  };
  wl.decode._decompress = function (e, t, i, n) {
    var r = wl.decode._getBPP(e),
      a = Math.ceil((i * r) / 8),
      s = new Uint8Array((a + 1 + e.interlace) * n);
    t = wl.decode._inflate(t, s);
    if (0 == e.interlace) t = wl.decode._filterZero(t, e, 0, i, n);
    else if (1 == e.interlace) t = wl.decode._readInterlace(t, e);
    return t;
  };
  wl.decode._inflate = function (e, t) {
    return wl.inflateRaw(new Uint8Array(e.buffer, 2, e.length - 6), t);
  };
  wl.inflateRaw = (function () {
    var e,
      t,
      i = { H: {} };
    i.H.N = function (e, t) {
      var n,
        r,
        a = Uint8Array,
        s = 0,
        o = 0,
        l = 0,
        c = 0,
        h = 0,
        u = 0,
        d = 0,
        f = 0,
        p = 0;
      if (3 == e[0] && 0 == e[1]) return t ? t : new a(0);
      var g = i.H,
        m = g.b,
        v = g.e,
        b = g.R,
        y = g.n,
        w = g.A,
        x = g.Z,
        k = g.m,
        C = null == t;
      if (C) t = new a((e.length >>> 2) << 3);
      for (; 0 == s; ) {
        s = m(e, p, 1);
        o = m(e, p + 1, 2);
        p += 3;
        if (0 != o) {
          if (C) t = i.H.W(t, f + (1 << 17));
          if (1 == o) {
            n = k.J;
            r = k.h;
            u = 511;
            d = 31;
          }
          if (2 == o) {
            l = v(e, p, 5) + 257;
            c = v(e, p + 5, 5) + 1;
            h = v(e, p + 10, 4) + 4;
            p += 14;
            for (var S = 1, _ = 0; _ < 38; _ += 2) {
              k.Q[_] = 0;
              k.Q[_ + 1] = 0;
            }
            for (_ = 0; _ < h; _++) {
              var A = v(e, p + 3 * _, 3);
              k.Q[1 + (k.X[_] << 1)] = A;
              if (A > S) S = A;
            }
            p += 3 * h;
            y(k.Q, S);
            w(k.Q, S, k.u);
            n = k.w;
            r = k.d;
            p = b(k.u, (1 << S) - 1, l + c, e, p, k.v);
            var F = g.V(k.v, 0, l, k.C);
            u = (1 << F) - 1;
            var T = g.V(k.v, l, c, k.D);
            d = (1 << T) - 1;
            y(k.C, F);
            w(k.C, F, n);
            y(k.D, T);
            w(k.D, T, r);
          }
          for (;;) {
            var P = n[x(e, p) & u];
            p += 15 & P;
            var E = P >>> 4;
            if (E >>> 8 == 0) t[f++] = E;
            else if (256 == E) break;
            else {
              var I = f + E - 254;
              if (E > 264) {
                var D = k.q[E - 257];
                I = f + (D >>> 3) + v(e, p, 7 & D);
                p += 7 & D;
              }
              var O = r[x(e, p) & d];
              p += 15 & O;
              var R = O >>> 4,
                N = k.c[R],
                M = (N >>> 4) + m(e, p, 15 & N);
              p += 15 & N;
              for (; f < I; ) {
                t[f] = t[f++ - M];
                t[f] = t[f++ - M];
                t[f] = t[f++ - M];
                t[f] = t[f++ - M];
              }
              f = I;
            }
          }
        } else {
          if (0 != (7 & p)) p += 8 - (7 & p);
          var B = 4 + (p >>> 3),
            L = e[B - 4] | (e[B - 3] << 8);
          if (C) t = i.H.W(t, f + L);
          t.set(new a(e.buffer, e.byteOffset + B, L), f);
          p = (B + L) << 3;
          f += L;
        }
      }
      return t.length == f ? t : t.slice(0, f);
    };
    i.H.W = function (e, t) {
      var i = e.length;
      if (t <= i) return e;
      var n = new Uint8Array(i << 1);
      n.set(e, 0);
      return n;
    };
    i.H.R = function (e, t, n, r, a, s) {
      for (var o = i.H.e, l = i.H.Z, c = 0; c < n; ) {
        var h = e[l(r, a) & t];
        a += 15 & h;
        var u = h >>> 4;
        if (u <= 15) {
          s[c] = u;
          c++;
        } else {
          var d = 0,
            f = 0;
          if (16 == u) {
            f = 3 + o(r, a, 2);
            a += 2;
            d = s[c - 1];
          } else if (17 == u) {
            f = 3 + o(r, a, 3);
            a += 3;
          } else if (18 == u) {
            f = 11 + o(r, a, 7);
            a += 7;
          }
          for (var p = c + f; c < p; ) {
            s[c] = d;
            c++;
          }
        }
      }
      return a;
    };
    i.H.V = function (e, t, i, n) {
      for (var r = 0, a = 0, s = n.length >>> 1; a < i; ) {
        var o = e[a + t];
        n[a << 1] = 0;
        n[1 + (a << 1)] = o;
        if (o > r) r = o;
        a++;
      }
      for (; a < s; ) {
        n[a << 1] = 0;
        n[1 + (a << 1)] = 0;
        a++;
      }
      return r;
    };
    i.H.n = function (e, t) {
      for (var n, r, a, s, o = i.H.m, l = e.length, c = o.j, h = 0; h <= t; h++)
        c[h] = 0;
      for (h = 1; h < l; h += 2) c[e[h]]++;
      var u = o.K;
      n = 0;
      c[0] = 0;
      for (r = 1; r <= t; r++) {
        n = (n + c[r - 1]) << 1;
        u[r] = n;
      }
      for (a = 0; a < l; a += 2)
        if (0 != (s = e[a + 1])) {
          e[a] = u[s];
          u[s]++;
        }
    };
    i.H.A = function (e, t, n) {
      for (var r = e.length, a = i.H.m.r, s = 0; s < r; s += 2)
        if (0 != e[s + 1])
          for (
            var o = s >> 1,
              l = e[s + 1],
              c = (o << 4) | l,
              h = t - l,
              u = e[s] << h,
              d = u + (1 << h);
            u != d;

          ) {
            n[a[u] >>> (15 - t)] = c;
            u++;
          }
    };
    i.H.l = function (e, t) {
      for (var n = i.H.m.r, r = 15 - t, a = 0; a < e.length; a += 2) {
        var s = e[a] << (t - e[a + 1]);
        e[a] = n[s] >>> r;
      }
    };
    i.H.M = function (e, t, i) {
      i <<= 7 & t;
      var n = t >>> 3;
      e[n] |= i;
      e[n + 1] |= i >>> 8;
    };
    i.H.I = function (e, t, i) {
      i <<= 7 & t;
      var n = t >>> 3;
      e[n] |= i;
      e[n + 1] |= i >>> 8;
      e[n + 2] |= i >>> 16;
    };
    i.H.e = function (e, t, i) {
      return (
        ((e[t >>> 3] | (e[1 + (t >>> 3)] << 8)) >>> (7 & t)) & ((1 << i) - 1)
      );
    };
    i.H.b = function (e, t, i) {
      return (
        ((e[t >>> 3] | (e[1 + (t >>> 3)] << 8) | (e[2 + (t >>> 3)] << 16)) >>>
          (7 & t)) &
        ((1 << i) - 1)
      );
    };
    i.H.Z = function (e, t) {
      return (
        (e[t >>> 3] | (e[1 + (t >>> 3)] << 8) | (e[2 + (t >>> 3)] << 16)) >>>
        (7 & t)
      );
    };
    i.H.i = function (e, t) {
      return (
        (e[t >>> 3] |
          (e[1 + (t >>> 3)] << 8) |
          (e[2 + (t >>> 3)] << 16) |
          (e[3 + (t >>> 3)] << 24)) >>>
        (7 & t)
      );
    };
    i.H.m =
      ((e = Uint16Array),
      (t = Uint32Array),
      {
        K: new e(16),
        j: new e(16),
        X: [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15],
        S: [
          3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51,
          59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 999, 999, 999,
        ],
        T: [
          0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4,
          4, 5, 5, 5, 5, 0, 0, 0, 0,
        ],
        q: new e(32),
        p: [
          1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385,
          513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385,
          24577, 65535, 65535,
        ],
        z: [
          0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10,
          10, 11, 11, 12, 12, 13, 13, 0, 0,
        ],
        c: new t(32),
        J: new e(512),
        _: [],
        h: new e(32),
        $: [],
        w: new e(32768),
        C: [],
        v: [],
        d: new e(32768),
        D: [],
        u: new e(512),
        Q: [],
        r: new e(32768),
        s: new t(286),
        Y: new t(30),
        a: new t(19),
        t: new t(15e3),
        k: new e(65536),
        g: new e(32768),
      });
    !(function () {
      for (var e = i.H.m, t = 0; t < 32768; t++) {
        var n = t;
        n =
          ((4278255360 &
            (n =
              ((4042322160 &
                (n =
                  ((3435973836 &
                    (n =
                      ((2863311530 & n) >>> 1) | ((1431655765 & n) << 1))) >>>
                    2) |
                  ((858993459 & n) << 2))) >>>
                4) |
              ((252645135 & n) << 4))) >>>
            8) |
          ((16711935 & n) << 8);
        e.r[t] = ((n >>> 16) | (n << 16)) >>> 17;
      }
      function r(e, t, i) {
        for (; 0 != t--; ) e.push(0, i);
      }
      for (t = 0; t < 32; t++) {
        e.q[t] = (e.S[t] << 3) | e.T[t];
        e.c[t] = (e.p[t] << 4) | e.z[t];
      }
      r(e._, 144, 8);
      r(e._, 112, 9);
      r(e._, 24, 7);
      r(e._, 8, 8);
      i.H.n(e._, 9);
      i.H.A(e._, 9, e.J);
      i.H.l(e._, 9);
      r(e.$, 32, 5);
      i.H.n(e.$, 5);
      i.H.A(e.$, 5, e.h);
      i.H.l(e.$, 5);
      r(e.Q, 19, 0);
      r(e.C, 286, 0);
      r(e.D, 30, 0);
      r(e.v, 320, 0);
    })();
    return i.H.N;
  })();
  wl.decode._readInterlace = function (e, t) {
    for (
      var i = t.width,
        n = t.height,
        r = wl.decode._getBPP(t),
        a = r >> 3,
        s = Math.ceil((i * r) / 8),
        o = new Uint8Array(n * s),
        l = 0,
        c = [0, 0, 4, 0, 2, 0, 1],
        h = [0, 4, 0, 2, 0, 1, 0],
        u = [8, 8, 8, 4, 4, 2, 2],
        d = [8, 8, 4, 4, 2, 2, 1],
        f = 0;
      f < 7;

    ) {
      for (var p = u[f], g = d[f], m = 0, v = 0, b = c[f]; b < n; ) {
        b += p;
        v++;
      }
      for (var y = h[f]; y < i; ) {
        y += g;
        m++;
      }
      var w = Math.ceil((m * r) / 8);
      wl.decode._filterZero(e, t, l, m, v);
      for (var x = 0, k = c[f]; k < n; ) {
        for (var C = h[f], S = (l + x * w) << 3; C < i; ) {
          if (1 == r) {
            _ = ((_ = e[S >> 3]) >> (7 - (7 & S))) & 1;
            o[k * s + (C >> 3)] |= _ << (7 - ((7 & C) << 0));
          }
          if (2 == r) {
            _ = ((_ = e[S >> 3]) >> (6 - (7 & S))) & 3;
            o[k * s + (C >> 2)] |= _ << (6 - ((3 & C) << 1));
          }
          if (4 == r) {
            var _;
            _ = ((_ = e[S >> 3]) >> (4 - (7 & S))) & 15;
            o[k * s + (C >> 1)] |= _ << (4 - ((1 & C) << 2));
          }
          if (r >= 8)
            for (var A = k * s + C * a, F = 0; F < a; F++)
              o[A + F] = e[(S >> 3) + F];
          S += r;
          C += g;
        }
        x++;
        k += p;
      }
      if (m * v != 0) l += v * (1 + w);
      f += 1;
    }
    return o;
  };
  wl.decode._getBPP = function (e) {
    return [1, null, 3, 1, 2, null, 4][e.ctype] * e.depth;
  };
  wl.decode._filterZero = function (e, t, i, n, r) {
    var a = wl.decode._getBPP(t),
      s = Math.ceil((n * a) / 8),
      o = wl.decode._paeth;
    a = Math.ceil(a / 8);
    var l = 0,
      c = 1,
      h = e[i],
      u = 0;
    if (h > 1) e[i] = [0, 0, 1][h - 2];
    if (3 == h)
      for (u = a; u < s; u++)
        e[u + 1] = (e[u + 1] + (e[u + 1 - a] >>> 1)) & 255;
    for (var d = 0; d < r; d++) {
      u = 0;
      if (0 == (h = e[(c = (l = i + d * s) + d + 1) - 1]))
        for (; u < s; u++) e[l + u] = e[c + u];
      else if (1 == h) {
        for (; u < a; u++) e[l + u] = e[c + u];
        for (; u < s; u++) e[l + u] = e[c + u] + e[l + u - a];
      } else if (2 == h) for (; u < s; u++) e[l + u] = e[c + u] + e[l + u - s];
      else if (3 == h) {
        for (; u < a; u++) e[l + u] = e[c + u] + (e[l + u - s] >>> 1);
        for (; u < s; u++)
          e[l + u] = e[c + u] + ((e[l + u - s] + e[l + u - a]) >>> 1);
      } else {
        for (; u < a; u++) e[l + u] = e[c + u] + o(0, e[l + u - s], 0);
        for (; u < s; u++)
          e[l + u] = e[c + u] + o(e[l + u - a], e[l + u - s], e[l + u - a - s]);
      }
    }
    return e;
  };
  wl.decode._paeth = function (e, t, i) {
    var n = e + t - i,
      r = n - e,
      a = n - t,
      s = n - i;
    if (r * r <= a * a && r * r <= s * s) return e;
    else if (a * a <= s * s) return t;
    return i;
  };
  wl.decode._IHDR = function (e, t, i) {
    var n = wl._bin;
    i.width = n.readUint(e, t);
    t += 4;
    i.height = n.readUint(e, t);
    t += 4;
    i.depth = e[t];
    t++;
    i.ctype = e[t];
    t++;
    i.compress = e[t];
    t++;
    i.filter = e[t];
    t++;
    i.interlace = e[t];
    t++;
  };
  wl._bin = {
    nextZero: function (e, t) {
      for (; 0 != e[t]; ) t++;
      return t;
    },
    readUshort: function (e, t) {
      return (e[t] << 8) | e[t + 1];
    },
    writeUshort: function (e, t, i) {
      e[t] = (i >> 8) & 255;
      e[t + 1] = 255 & i;
    },
    readUint: function (e, t) {
      return 16777216 * e[t] + ((e[t + 1] << 16) | (e[t + 2] << 8) | e[t + 3]);
    },
    writeUint: function (e, t, i) {
      e[t] = (i >> 24) & 255;
      e[t + 1] = (i >> 16) & 255;
      e[t + 2] = (i >> 8) & 255;
      e[t + 3] = 255 & i;
    },
    readASCII: function (e, t, i) {
      for (var n = "", r = 0; r < i; r++) n += String.fromCharCode(e[t + r]);
      return n;
    },
    writeASCII: function (e, t, i) {
      for (var n = 0; n < i.length; n++) e[t + n] = i.charCodeAt(n);
    },
    readBytes: function (e, t, i) {
      for (var n = [], r = 0; r < i; r++) n.push(e[t + r]);
      return n;
    },
    pad: function (e) {
      return e.length < 2 ? "0" + e : e;
    },
    readUTF8: function (e, t, i) {
      for (var n, r = "", a = 0; a < i; a++)
        r += "%" + wl._bin.pad(e[t + a].toString(16));
      try {
        n = decodeURIComponent(r);
      } catch (n) {
        return wl._bin.readASCII(e, t, i);
      }
      return n;
    },
  };
  wl._copyTile = function (e, t, i, n, r, a, s, o, l) {
    for (
      var c = Math.min(t, r), h = Math.min(i, a), u = 0, d = 0, f = 0;
      f < h;
      f++
    )
      for (var p = 0; p < c; p++) {
        if (s >= 0 && o >= 0) {
          u = (f * t + p) << 2;
          d = ((o + f) * r + s + p) << 2;
        } else {
          u = ((-o + f) * t - s + p) << 2;
          d = (f * r + p) << 2;
        }
        if (0 == l) {
          n[d] = e[u];
          n[d + 1] = e[u + 1];
          n[d + 2] = e[u + 2];
          n[d + 3] = e[u + 3];
        } else if (1 == l) {
          var g = e[u + 3] * (1 / 255),
            m = e[u] * g,
            v = e[u + 1] * g,
            b = e[u + 2] * g,
            y = n[d + 3] * (1 / 255),
            w = n[d] * y,
            x = n[d + 1] * y,
            k = n[d + 2] * y,
            C = 1 - g,
            S = g + y * C,
            _ = 0 == S ? 0 : 1 / S;
          n[d + 3] = 255 * S;
          n[d + 0] = (m + w * C) * _;
          n[d + 1] = (v + x * C) * _;
          n[d + 2] = (b + k * C) * _;
        } else if (2 == l) {
          (g = e[u + 3]),
            (m = e[u]),
            (v = e[u + 1]),
            (b = e[u + 2]),
            (y = n[d + 3]),
            (w = n[d]),
            (x = n[d + 1]),
            (k = n[d + 2]);
          if (g == y && m == w && v == x && b == k) {
            n[d] = 0;
            n[d + 1] = 0;
            n[d + 2] = 0;
            n[d + 3] = 0;
          } else {
            n[d] = m;
            n[d + 1] = v;
            n[d + 2] = b;
            n[d + 3] = g;
          }
        } else if (3 == l) {
          (g = e[u + 3]),
            (m = e[u]),
            (v = e[u + 1]),
            (b = e[u + 2]),
            (y = n[d + 3]),
            (w = n[d]),
            (x = n[d + 1]),
            (k = n[d + 2]);
          if (g == y && m == w && v == x && b == k) continue;
          if (g < 220 && y > 20) return !1;
        }
      }
    return !0;
  };
  wl.encode = function (e, t, i, n, r, a, s) {
    if (null == n) n = 0;
    if (null == s) s = !1;
    var o = wl.encode.compress(e, t, i, n, [!1, !1, !1, 0, s]);
    wl.encode.compressPNG(o, -1);
    return wl.encode._main(o, t, i, r, a);
  };
  wl.encodeLL = function (e, t, i, n, r, a, s, o) {
    for (
      var l = {
          ctype: 0 + (1 == n ? 0 : 2) + (0 == r ? 0 : 4),
          depth: a,
          frames: [],
        },
        c = (n + r) * a,
        h = c * t,
        u = 0;
      u < e.length;
      u++
    )
      l.frames.push({
        rect: { x: 0, y: 0, width: t, height: i },
        img: new Uint8Array(e[u]),
        blend: 0,
        dispose: 1,
        bpp: Math.ceil(c / 8),
        bpl: Math.ceil(h / 8),
      });
    wl.encode.compressPNG(l, 0, !0);
    return wl.encode._main(l, t, i, s, o);
  };
  wl.encode._main = function (e, t, i, n, r) {
    if (null == r) r = {};
    var a = wl.crc.crc,
      s = wl._bin.writeUint,
      o = wl._bin.writeUshort,
      l = wl._bin.writeASCII,
      c = 8,
      h = e.frames.length > 1,
      u = !1,
      d = 33 + (h ? 20 : 0);
    if (null != r.sRGB) d += 13;
    if (null != r.pHYs) d += 21;
    if (3 == e.ctype) {
      for (var f = e.plte.length, p = 0; p < f; p++)
        if (e.plte[p] >>> 24 != 255) u = !0;
      d += 8 + 3 * f + 4 + (u ? 8 + 1 * f + 4 : 0);
    }
    for (var g = 0; g < e.frames.length; g++) {
      if (h) d += 38;
      d += (S = e.frames[g]).cimg.length + 12;
      if (0 != g) d += 4;
    }
    d += 12;
    var m = new Uint8Array(d),
      v = [137, 80, 78, 71, 13, 10, 26, 10];
    for (p = 0; p < 8; p++) m[p] = v[p];
    s(m, c, 13);
    l(m, (c += 4), "IHDR");
    s(m, (c += 4), t);
    s(m, (c += 4), i);
    m[(c += 4)] = e.depth;
    m[++c] = e.ctype;
    m[++c] = 0;
    m[++c] = 0;
    m[++c] = 0;
    s(m, ++c, a(m, c - 17, 17));
    c += 4;
    if (null != r.sRGB) {
      s(m, c, 1);
      l(m, (c += 4), "sRGB");
      m[(c += 4)] = r.sRGB;
      s(m, ++c, a(m, c - 5, 5));
      c += 4;
    }
    if (null != r.pHYs) {
      s(m, c, 9);
      l(m, (c += 4), "pHYs");
      s(m, (c += 4), r.pHYs[0]);
      s(m, (c += 4), r.pHYs[1]);
      m[(c += 4)] = r.pHYs[2];
      s(m, ++c, a(m, c - 13, 13));
      c += 4;
    }
    if (h) {
      s(m, c, 8);
      l(m, (c += 4), "acTL");
      s(m, (c += 4), e.frames.length);
      s(m, (c += 4), null != r.loop ? r.loop : 0);
      s(m, (c += 4), a(m, c - 12, 12));
      c += 4;
    }
    if (3 == e.ctype) {
      s(m, c, 3 * (f = e.plte.length));
      l(m, (c += 4), "PLTE");
      c += 4;
      for (p = 0; p < f; p++) {
        var b = 3 * p,
          y = e.plte[p],
          w = 255 & y,
          x = (y >>> 8) & 255,
          k = (y >>> 16) & 255;
        m[c + b + 0] = w;
        m[c + b + 1] = x;
        m[c + b + 2] = k;
      }
      s(m, (c += 3 * f), a(m, c - 3 * f - 4, 3 * f + 4));
      c += 4;
      if (u) {
        s(m, c, f);
        l(m, (c += 4), "tRNS");
        c += 4;
        for (p = 0; p < f; p++) m[c + p] = (e.plte[p] >>> 24) & 255;
        s(m, (c += f), a(m, c - f - 4, f + 4));
        c += 4;
      }
    }
    var C = 0;
    for (g = 0; g < e.frames.length; g++) {
      var S = e.frames[g];
      if (h) {
        s(m, c, 26);
        l(m, (c += 4), "fcTL");
        s(m, (c += 4), C++);
        s(m, (c += 4), S.rect.width);
        s(m, (c += 4), S.rect.height);
        s(m, (c += 4), S.rect.x);
        s(m, (c += 4), S.rect.y);
        o(m, (c += 4), n[g]);
        o(m, (c += 2), 1e3);
        m[(c += 2)] = S.dispose;
        m[++c] = S.blend;
        s(m, ++c, a(m, c - 30, 30));
        c += 4;
      }
      var _ = S.cimg;
      s(m, c, (f = _.length) + (0 == g ? 0 : 4));
      var A = (c += 4);
      l(m, c, 0 == g ? "IDAT" : "fdAT");
      c += 4;
      if (0 != g) {
        s(m, c, C++);
        c += 4;
      }
      m.set(_, c);
      s(m, (c += f), a(m, A, c - A));
      c += 4;
    }
    s(m, c, 0);
    l(m, (c += 4), "IEND");
    s(m, (c += 4), a(m, c - 4, 4));
    c += 4;
    return m.buffer;
  };
  wl.encode.compressPNG = function (e, t, i) {
    for (var n = 0; n < e.frames.length; n++) {
      var r = e.frames[n],
        a = (r.rect.width, r.rect.height),
        s = new Uint8Array(a * r.bpl + a);
      r.cimg = wl.encode._filterZero(r.img, a, r.bpp, r.bpl, s, t, i);
    }
  };
  wl.encode.compress = function (e, t, i, n, r) {
    for (
      var a = r[0],
        s = r[1],
        o = r[2],
        l = r[3],
        c = r[4],
        h = 6,
        u = 8,
        d = 255,
        f = 0;
      f < e.length;
      f++
    )
      for (var p = new Uint8Array(e[f]), g = p.length, m = 0; m < g; m += 4)
        d &= p[m + 3];
    var v = 255 != d,
      b = wl.encode.framize(e, t, i, a, s, o),
      y = {},
      w = [],
      x = [];
    if (0 != n) {
      var k = [];
      for (m = 0; m < b.length; m++) k.push(b[m].img.buffer);
      var C = wl.encode.concatRGBA(k),
        S = wl.quantize(C, n),
        _ = 0,
        A = new Uint8Array(S.abuf);
      for (m = 0; m < b.length; m++) {
        var F = (G = b[m].img).length;
        x.push(new Uint8Array(S.inds.buffer, _ >> 2, F >> 2));
        for (f = 0; f < F; f += 4) {
          G[f] = A[_ + f];
          G[f + 1] = A[_ + f + 1];
          G[f + 2] = A[_ + f + 2];
          G[f + 3] = A[_ + f + 3];
        }
        _ += F;
      }
      for (m = 0; m < S.plte.length; m++) w.push(S.plte[m].est.rgba);
    } else
      for (f = 0; f < b.length; f++) {
        var T = b[f],
          P = new Uint32Array(T.img.buffer),
          E = T.rect.width,
          I = ((g = P.length), new Uint8Array(g));
        x.push(I);
        for (m = 0; m < g; m++) {
          var D = P[m];
          if (0 != m && D == P[m - 1]) I[m] = I[m - 1];
          else if (m > E && D == P[m - E]) I[m] = I[m - E];
          else {
            var O = y[D];
            if (null == O) {
              y[D] = O = w.length;
              w.push(D);
              if (w.length >= 300) break;
            }
            I[m] = O;
          }
        }
      }
    var R = w.length;
    if (R <= 256 && 0 == c) {
      if (R <= 2) u = 1;
      else if (R <= 4) u = 2;
      else if (R <= 16) u = 4;
      else u = 8;
      u = Math.max(u, l);
    }
    for (f = 0; f < b.length; f++) {
      (T = b[f]).rect.x, T.rect.y, (E = T.rect.width);
      var N = T.rect.height,
        M = T.img,
        B = (new Uint32Array(M.buffer), 4 * E),
        L = 4;
      if (R <= 256 && 0 == c) {
        B = Math.ceil((u * E) / 8);
        for (var U = new Uint8Array(B * N), z = x[f], j = 0; j < N; j++) {
          m = j * B;
          var q = j * E;
          if (8 == u) for (var H = 0; H < E; H++) U[m + H] = z[q + H];
          else if (4 == u)
            for (H = 0; H < E; H++)
              U[m + (H >> 1)] |= z[q + H] << (4 - 4 * (1 & H));
          else if (2 == u)
            for (H = 0; H < E; H++)
              U[m + (H >> 2)] |= z[q + H] << (6 - 2 * (3 & H));
          else if (1 == u)
            for (H = 0; H < E; H++)
              U[m + (H >> 3)] |= z[q + H] << (7 - 1 * (7 & H));
        }
        M = U;
        h = 3;
        L = 1;
      } else if (0 == v && 1 == b.length) {
        U = new Uint8Array(E * N * 3);
        var W = E * N;
        for (m = 0; m < W; m++) {
          var G,
            V = 4 * m;
          U[(G = 3 * m)] = M[V];
          U[G + 1] = M[V + 1];
          U[G + 2] = M[V + 2];
        }
        M = U;
        h = 2;
        L = 3;
        B = 3 * E;
      }
      T.img = M;
      T.bpl = B;
      T.bpp = L;
    }
    return { ctype: h, depth: u, plte: w, frames: b };
  };
  wl.encode.framize = function (e, t, i, n, r, a) {
    for (var s = [], o = 0; o < e.length; o++) {
      var l,
        c = new Uint8Array(e[o]),
        h = new Uint32Array(c.buffer),
        u = 0,
        d = 0,
        f = t,
        p = i,
        g = n ? 1 : 0;
      if (0 != o) {
        for (
          var m = a || n || 1 == o || 0 != s[o - 2].dispose ? 1 : 2,
            v = 0,
            b = 1e9,
            y = 0;
          y < m;
          y++
        ) {
          for (
            var w = new Uint8Array(e[o - 1 - y]),
              x = new Uint32Array(e[o - 1 - y]),
              k = t,
              C = i,
              S = -1,
              _ = -1,
              A = 0;
            A < i;
            A++
          )
            for (var F = 0; F < t; F++)
              if (h[(R = A * t + F)] != x[R]) {
                if (F < k) k = F;
                if (F > S) S = F;
                if (A < C) C = A;
                if (A > _) _ = A;
              }
          if (-1 == S) k = C = S = _ = 0;
          if (r) {
            if (1 == (1 & k)) k--;
            if (1 == (1 & C)) C--;
          }
          var T = (S - k + 1) * (_ - C + 1);
          if (T < b) {
            b = T;
            v = y;
            u = k;
            d = C;
            f = S - k + 1;
            p = _ - C + 1;
          }
        }
        w = new Uint8Array(e[o - 1 - v]);
        if (1 == v) s[o - 1].dispose = 2;
        l = new Uint8Array(f * p * 4);
        wl._copyTile(w, t, i, l, f, p, -u, -d, 0);
        if (1 == (g = wl._copyTile(c, t, i, l, f, p, -u, -d, 3) ? 1 : 0))
          wl.encode._prepareDiff(c, t, i, l, {
            x: u,
            y: d,
            width: f,
            height: p,
          });
        else wl._copyTile(c, t, i, l, f, p, -u, -d, 0);
      } else l = c.slice(0);
      s.push({
        rect: { x: u, y: d, width: f, height: p },
        img: l,
        blend: g,
        dispose: 0,
      });
    }
    if (n)
      for (o = 0; o < s.length; o++)
        if (1 != (N = s[o]).blend) {
          var P = N.rect,
            E = s[o - 1].rect,
            I = Math.min(P.x, E.x),
            D = Math.min(P.y, E.y),
            O = {
              x: I,
              y: D,
              width: Math.max(P.x + P.width, E.x + E.width) - I,
              height: Math.max(P.y + P.height, E.y + E.height) - D,
            };
          s[o - 1].dispose = 1;
          if (o - 1 != 0) wl.encode._updateFrame(e, t, i, s, o - 1, O, r);
          wl.encode._updateFrame(e, t, i, s, o, O, r);
        }
    if (1 != e.length)
      for (var R = 0; R < s.length; R++) {
        var N;
        (N = s[R]).rect.width, N.rect.height;
      }
    return s;
  };
  wl.encode._updateFrame = function (e, t, i, n, r, a, s) {
    for (
      var o = Uint8Array,
        l = Uint32Array,
        c = new o(e[r - 1]),
        h = new l(e[r - 1]),
        u = r + 1 < e.length ? new o(e[r + 1]) : null,
        d = new o(e[r]),
        f = new l(d.buffer),
        p = t,
        g = i,
        m = -1,
        v = -1,
        b = 0;
      b < a.height;
      b++
    )
      for (var y = 0; y < a.width; y++) {
        var w = a.x + y,
          x = a.y + b,
          k = x * t + w,
          C = f[k];
        if (
          0 == C ||
          (0 == n[r - 1].dispose &&
            h[k] == C &&
            (null == u || 0 != u[4 * k + 3]))
        );
        else {
          if (w < p) p = w;
          if (w > m) m = w;
          if (x < g) g = x;
          if (x > v) v = x;
        }
      }
    if (-1 == m) p = g = m = v = 0;
    if (s) {
      if (1 == (1 & p)) p--;
      if (1 == (1 & g)) g--;
    }
    a = { x: p, y: g, width: m - p + 1, height: v - g + 1 };
    var S = n[r];
    S.rect = a;
    S.blend = 1;
    S.img = new Uint8Array(a.width * a.height * 4);
    if (0 == n[r - 1].dispose) {
      wl._copyTile(c, t, i, S.img, a.width, a.height, -a.x, -a.y, 0);
      wl.encode._prepareDiff(d, t, i, S.img, a);
    } else wl._copyTile(d, t, i, S.img, a.width, a.height, -a.x, -a.y, 0);
  };
  wl.encode._prepareDiff = function (e, t, i, n, r) {
    wl._copyTile(e, t, i, n, r.width, r.height, -r.x, -r.y, 2);
  };
  wl.encode._filterZero = function (e, t, i, n, r, a, s) {
    var o,
      l = [],
      c = [0, 1, 2, 3, 4];
    if (-1 != a) c = [a];
    else if (t * n > 5e5 || 1 == i) c = [0];
    if (s) o = { level: 0 };
    for (var h = s && null != UZIP ? UZIP : yl, u = 0; u < c.length; u++) {
      for (var d = 0; d < t; d++) wl.encode._filterLine(r, e, d, n, i, c[u]);
      l.push(h.deflate(r, o));
    }
    var f,
      p = 1e9;
    for (u = 0; u < l.length; u++)
      if (l[u].length < p) {
        f = u;
        p = l[u].length;
      }
    return l[f];
  };
  wl.encode._filterLine = function (e, t, i, n, r, a) {
    var s = i * n,
      o = s + i,
      l = wl.decode._paeth;
    e[o] = a;
    o++;
    if (0 == a)
      if (n < 500) for (var c = 0; c < n; c++) e[o + c] = t[s + c];
      else e.set(new Uint8Array(t.buffer, s, n), o);
    else if (1 == a) {
      for (c = 0; c < r; c++) e[o + c] = t[s + c];
      for (c = r; c < n; c++) e[o + c] = (t[s + c] - t[s + c - r] + 256) & 255;
    } else if (0 == i) {
      for (c = 0; c < r; c++) e[o + c] = t[s + c];
      if (2 == a) for (c = r; c < n; c++) e[o + c] = t[s + c];
      if (3 == a)
        for (c = r; c < n; c++)
          e[o + c] = (t[s + c] - (t[s + c - r] >> 1) + 256) & 255;
      if (4 == a)
        for (c = r; c < n; c++)
          e[o + c] = (t[s + c] - l(t[s + c - r], 0, 0) + 256) & 255;
    } else {
      if (2 == a)
        for (c = 0; c < n; c++)
          e[o + c] = (t[s + c] + 256 - t[s + c - n]) & 255;
      if (3 == a) {
        for (c = 0; c < r; c++)
          e[o + c] = (t[s + c] + 256 - (t[s + c - n] >> 1)) & 255;
        for (c = r; c < n; c++)
          e[o + c] =
            (t[s + c] + 256 - ((t[s + c - n] + t[s + c - r]) >> 1)) & 255;
      }
      if (4 == a) {
        for (c = 0; c < r; c++)
          e[o + c] = (t[s + c] + 256 - l(0, t[s + c - n], 0)) & 255;
        for (c = r; c < n; c++)
          e[o + c] =
            (t[s + c] + 256 - l(t[s + c - r], t[s + c - n], t[s + c - r - n])) &
            255;
      }
    }
  };
  wl.crc = {
    table: (function () {
      for (var e = new Uint32Array(256), t = 0; t < 256; t++) {
        for (var i = t, n = 0; n < 8; n++)
          if (1 & i) i = 3988292384 ^ (i >>> 1);
          else i >>>= 1;
        e[t] = i;
      }
      return e;
    })(),
    update: function (e, t, i, n) {
      for (var r = 0; r < n; r++)
        e = wl.crc.table[255 & (e ^ t[i + r])] ^ (e >>> 8);
      return e;
    },
    crc: function (e, t, i) {
      return 4294967295 ^ wl.crc.update(4294967295, e, t, i);
    },
  };
  wl.quantize = function (e, t) {
    for (
      var i = new Uint8Array(e),
        n = i.slice(0),
        r = new Uint32Array(n.buffer),
        a = wl.quantize.getKDtree(n, t),
        s = a[0],
        o = a[1],
        l = (wl.quantize.planeDst, i),
        c = r,
        h = l.length,
        u = new Uint8Array(i.length >> 2),
        d = 0;
      d < h;
      d += 4
    ) {
      var f = l[d] * (1 / 255),
        p = l[d + 1] * (1 / 255),
        g = l[d + 2] * (1 / 255),
        m = l[d + 3] * (1 / 255),
        v = wl.quantize.getNearest(s, f, p, g, m);
      u[d >> 2] = v.ind;
      c[d >> 2] = v.est.rgba;
    }
    return { abuf: n.buffer, inds: u, plte: o };
  };
  wl.quantize.getKDtree = function (e, t, i) {
    if (null == i) i = 1e-4;
    var n = new Uint32Array(e.buffer),
      r = {
        i0: 0,
        i1: e.length,
        bst: null,
        est: null,
        tdst: 0,
        left: null,
        right: null,
      };
    r.bst = wl.quantize.stats(e, r.i0, r.i1);
    r.est = wl.quantize.estats(r.bst);
    for (var a = [r]; a.length < t; ) {
      for (var s = 0, o = 0, l = 0; l < a.length; l++)
        if (a[l].est.L > s) {
          s = a[l].est.L;
          o = l;
        }
      if (s < i) break;
      var c = a[o],
        h = wl.quantize.splitPixels(e, n, c.i0, c.i1, c.est.e, c.est.eMq255);
      if (!(c.i0 >= h || c.i1 <= h)) {
        var u = {
          i0: c.i0,
          i1: h,
          bst: null,
          est: null,
          tdst: 0,
          left: null,
          right: null,
        };
        u.bst = wl.quantize.stats(e, u.i0, u.i1);
        u.est = wl.quantize.estats(u.bst);
        var d = {
          i0: h,
          i1: c.i1,
          bst: null,
          est: null,
          tdst: 0,
          left: null,
          right: null,
        };
        d.bst = { R: [], m: [], N: c.bst.N - u.bst.N };
        for (l = 0; l < 16; l++) d.bst.R[l] = c.bst.R[l] - u.bst.R[l];
        for (l = 0; l < 4; l++) d.bst.m[l] = c.bst.m[l] - u.bst.m[l];
        d.est = wl.quantize.estats(d.bst);
        c.left = u;
        c.right = d;
        a[o] = u;
        a.push(d);
      } else c.est.L = 0;
    }
    a.sort(function (e, t) {
      return t.bst.N - e.bst.N;
    });
    for (l = 0; l < a.length; l++) a[l].ind = l;
    return [r, a];
  };
  wl.quantize.getNearest = function (e, t, i, n, r) {
    if (null == e.left) {
      e.tdst = wl.quantize.dist(e.est.q, t, i, n, r);
      return e;
    }
    var a = wl.quantize.planeDst(e.est, t, i, n, r),
      s = e.left,
      o = e.right;
    if (a > 0) {
      s = e.right;
      o = e.left;
    }
    var l = wl.quantize.getNearest(s, t, i, n, r);
    if (l.tdst <= a * a) return l;
    var c = wl.quantize.getNearest(o, t, i, n, r);
    return c.tdst < l.tdst ? c : l;
  };
  wl.quantize.planeDst = function (e, t, i, n, r) {
    var a = e.e;
    return a[0] * t + a[1] * i + a[2] * n + a[3] * r - e.eMq;
  };
  wl.quantize.dist = function (e, t, i, n, r) {
    var a = t - e[0],
      s = i - e[1],
      o = n - e[2],
      l = r - e[3];
    return a * a + s * s + o * o + l * l;
  };
  wl.quantize.splitPixels = function (e, t, i, n, r, a) {
    var s = wl.quantize.vecDot;
    n -= 4;
    for (; i < n; ) {
      for (; s(e, i, r) <= a; ) i += 4;
      for (; s(e, n, r) > a; ) n -= 4;
      if (i >= n) break;
      var o = t[i >> 2];
      t[i >> 2] = t[n >> 2];
      t[n >> 2] = o;
      i += 4;
      n -= 4;
    }
    for (; s(e, i, r) > a; ) i -= 4;
    return i + 4;
  };
  wl.quantize.vecDot = function (e, t, i) {
    return e[t] * i[0] + e[t + 1] * i[1] + e[t + 2] * i[2] + e[t + 3] * i[3];
  };
  wl.quantize.stats = function (e, t, i) {
    for (
      var n = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        r = [0, 0, 0, 0],
        a = (i - t) >> 2,
        s = t;
      s < i;
      s += 4
    ) {
      var o = e[s] * (1 / 255),
        l = e[s + 1] * (1 / 255),
        c = e[s + 2] * (1 / 255),
        h = e[s + 3] * (1 / 255);
      r[0] += o;
      r[1] += l;
      r[2] += c;
      r[3] += h;
      n[0] += o * o;
      n[1] += o * l;
      n[2] += o * c;
      n[3] += o * h;
      n[5] += l * l;
      n[6] += l * c;
      n[7] += l * h;
      n[10] += c * c;
      n[11] += c * h;
      n[15] += h * h;
    }
    n[4] = n[1];
    n[8] = n[2];
    n[9] = n[6];
    n[12] = n[3];
    n[13] = n[7];
    n[14] = n[11];
    return { R: n, m: r, N: a };
  };
  wl.quantize.estats = function (e) {
    var t = e.R,
      i = e.m,
      n = e.N,
      r = i[0],
      a = i[1],
      s = i[2],
      o = i[3],
      l = 0 == n ? 0 : 1 / n,
      c = [
        t[0] - r * r * l,
        t[1] - r * a * l,
        t[2] - r * s * l,
        t[3] - r * o * l,
        t[4] - a * r * l,
        t[5] - a * a * l,
        t[6] - a * s * l,
        t[7] - a * o * l,
        t[8] - s * r * l,
        t[9] - s * a * l,
        t[10] - s * s * l,
        t[11] - s * o * l,
        t[12] - o * r * l,
        t[13] - o * a * l,
        t[14] - o * s * l,
        t[15] - o * o * l,
      ],
      h = c,
      u = wl.M4,
      d = [0.5, 0.5, 0.5, 0.5],
      f = 0,
      p = 0;
    if (0 != n)
      for (var g = 0; g < 10; g++) {
        d = u.multVec(h, d);
        p = Math.sqrt(u.dot(d, d));
        d = u.sml(1 / p, d);
        if (Math.abs(p - f) < 1e-9) break;
        f = p;
      }
    var m = [r * l, a * l, s * l, o * l];
    return {
      Cov: c,
      q: m,
      e: d,
      L: f,
      eMq255: u.dot(u.sml(255, m), d),
      eMq: u.dot(d, m),
      rgba:
        ((Math.round(255 * m[3]) << 24) |
          (Math.round(255 * m[2]) << 16) |
          (Math.round(255 * m[1]) << 8) |
          (Math.round(255 * m[0]) << 0)) >>>
        0,
    };
  };
  wl.M4 = {
    multVec: function (e, t) {
      return [
        e[0] * t[0] + e[1] * t[1] + e[2] * t[2] + e[3] * t[3],
        e[4] * t[0] + e[5] * t[1] + e[6] * t[2] + e[7] * t[3],
        e[8] * t[0] + e[9] * t[1] + e[10] * t[2] + e[11] * t[3],
        e[12] * t[0] + e[13] * t[1] + e[14] * t[2] + e[15] * t[3],
      ];
    },
    dot: function (e, t) {
      return e[0] * t[0] + e[1] * t[1] + e[2] * t[2] + e[3] * t[3];
    },
    sml: function (e, t) {
      return [e * t[0], e * t[1], e * t[2], e * t[3]];
    },
  };
  wl.encode.concatRGBA = function (e) {
    for (var t = 0, i = 0; i < e.length; i++) t += e[i].byteLength;
    var n = new Uint8Array(t),
      r = 0;
    for (i = 0; i < e.length; i++) {
      for (var a = new Uint8Array(e[i]), s = a.length, o = 0; o < s; o += 4) {
        var l = a[o],
          c = a[o + 1],
          h = a[o + 2],
          u = a[o + 3];
        if (0 == u) l = c = h = 0;
        n[r + o] = l;
        n[r + o + 1] = c;
        n[r + o + 2] = h;
        n[r + o + 3] = u;
      }
      r += s;
    }
    return n.buffer;
  };
  !(function (e) {
    e.Greyscale = "Greyscale";
    e.Truecolour = "Truecolour";
    e.IndexedColour = "IndexedColour";
    e.GreyscaleWithAlpha = "GreyscaleWithAlpha";
    e.TruecolourWithAlpha = "TruecolourWithAlpha";
  })(bl || (bl = {}));
  var xl = (function () {
      function e(e) {
        var t = wl.decode(e),
          i = wl.toRGBA8(t);
        if (i.length > 1) throw new Error("Animated PNGs are not supported");
        var n = (function (e) {
            for (
              var t = Math.floor(e.length / 4),
                i = new Uint8Array(3 * t),
                n = new Uint8Array(1 * t),
                r = 0,
                a = 0,
                s = 0;
              r < e.length;

            ) {
              i[a++] = e[r++];
              i[a++] = e[r++];
              i[a++] = e[r++];
              n[s++] = e[r++];
            }
            return { rgbChannel: i, alphaChannel: n };
          })(new Uint8Array(i[0])),
          r = n.rgbChannel,
          a = n.alphaChannel;
        this.rgbChannel = r;
        if (
          a.some(function (e) {
            return e < 255;
          })
        )
          this.alphaChannel = a;
        this.type = (function (e) {
          if (0 === e) return bl.Greyscale;
          if (2 === e) return bl.Truecolour;
          if (3 === e) return bl.IndexedColour;
          if (4 === e) return bl.GreyscaleWithAlpha;
          if (6 === e) return bl.TruecolourWithAlpha;
          throw new Error("Unknown color type: " + e);
        })(t.ctype);
        this.width = t.width;
        this.height = t.height;
        this.bitsPerComponent = 8;
      }
      e.load = function (t) {
        return new e(t);
      };
      return e;
    })(),
    kl = (function () {
      function e(e) {
        this.image = e;
        this.bitsPerComponent = e.bitsPerComponent;
        this.width = e.width;
        this.height = e.height;
        this.colorSpace = "DeviceRGB";
      }
      e.for = function (t) {
        return r(this, void 0, void 0, function () {
          return a(this, function (i) {
            return [2, new e(xl.load(t))];
          });
        });
      };
      e.prototype.embedIntoContext = function (e, t) {
        return r(this, void 0, void 0, function () {
          var i, n;
          return a(this, function (r) {
            i = this.embedAlphaChannel(e);
            n = e.flateStream(this.image.rgbChannel, {
              Type: "XObject",
              Subtype: "Image",
              BitsPerComponent: this.image.bitsPerComponent,
              Width: this.image.width,
              Height: this.image.height,
              ColorSpace: this.colorSpace,
              SMask: i,
            });
            if (t) {
              e.assign(t, n);
              return [2, t];
            } else return [2, e.register(n)];
          });
        });
      };
      e.prototype.embedAlphaChannel = function (e) {
        if (this.image.alphaChannel) {
          var t = e.flateStream(this.image.alphaChannel, {
            Type: "XObject",
            Subtype: "Image",
            Height: this.image.height,
            Width: this.image.width,
            BitsPerComponent: this.image.bitsPerComponent,
            ColorSpace: "DeviceGray",
            Decode: [0, 1],
          });
          return e.register(t);
        }
      };
      return e;
    })(),
    Cl = (function () {
      function e(e, t, i) {
        this.bytes = e;
        this.start = t || 0;
        this.pos = this.start;
        this.end = t && i ? t + i : this.bytes.length;
      }
      Object.defineProperty(e.prototype, "length", {
        get: function () {
          return this.end - this.start;
        },
        enumerable: !1,
        configurable: !0,
      });
      Object.defineProperty(e.prototype, "isEmpty", {
        get: function () {
          return 0 === this.length;
        },
        enumerable: !1,
        configurable: !0,
      });
      e.prototype.getByte = function () {
        if (this.pos >= this.end) return -1;
        else return this.bytes[this.pos++];
      };
      e.prototype.getUint16 = function () {
        var e = this.getByte(),
          t = this.getByte();
        if (-1 === e || -1 === t) return -1;
        else return (e << 8) + t;
      };
      e.prototype.getInt32 = function () {
        return (
          (this.getByte() << 24) +
          (this.getByte() << 16) +
          (this.getByte() << 8) +
          this.getByte()
        );
      };
      e.prototype.getBytes = function (e, t) {
        if (void 0 === t) t = !1;
        var i = this.bytes,
          n = this.pos,
          r = this.end;
        if (!e) {
          var a = i.subarray(n, r);
          return t ? new Uint8ClampedArray(a) : a;
        } else {
          var s = n + e;
          if (s > r) s = r;
          this.pos = s;
          a = i.subarray(n, s);
          return t ? new Uint8ClampedArray(a) : a;
        }
      };
      e.prototype.peekByte = function () {
        var e = this.getByte();
        this.pos--;
        return e;
      };
      e.prototype.peekBytes = function (e, t) {
        if (void 0 === t) t = !1;
        var i = this.getBytes(e, t);
        this.pos -= i.length;
        return i;
      };
      e.prototype.skip = function (e) {
        if (!e) e = 1;
        this.pos += e;
      };
      e.prototype.reset = function () {
        this.pos = this.start;
      };
      e.prototype.moveStart = function () {
        this.start = this.pos;
      };
      e.prototype.makeSubStream = function (t, i) {
        return new e(this.bytes, t, i);
      };
      e.prototype.decode = function () {
        return this.bytes;
      };
      return e;
    })(),
    Sl = new Uint8Array(0),
    _l = (function () {
      function e(e) {
        this.pos = 0;
        this.bufferLength = 0;
        this.eof = !1;
        this.buffer = Sl;
        this.minBufferLength = 512;
        if (e) for (; this.minBufferLength < e; ) this.minBufferLength *= 2;
      }
      Object.defineProperty(e.prototype, "isEmpty", {
        get: function () {
          for (; !this.eof && 0 === this.bufferLength; ) this.readBlock();
          return 0 === this.bufferLength;
        },
        enumerable: !1,
        configurable: !0,
      });
      e.prototype.getByte = function () {
        for (var e = this.pos; this.bufferLength <= e; ) {
          if (this.eof) return -1;
          this.readBlock();
        }
        return this.buffer[this.pos++];
      };
      e.prototype.getUint16 = function () {
        var e = this.getByte(),
          t = this.getByte();
        if (-1 === e || -1 === t) return -1;
        else return (e << 8) + t;
      };
      e.prototype.getInt32 = function () {
        return (
          (this.getByte() << 24) +
          (this.getByte() << 16) +
          (this.getByte() << 8) +
          this.getByte()
        );
      };
      e.prototype.getBytes = function (e, t) {
        if (void 0 === t) t = !1;
        var i,
          n = this.pos;
        if (e) {
          this.ensureBuffer(n + e);
          i = n + e;
          for (; !this.eof && this.bufferLength < i; ) this.readBlock();
          var r = this.bufferLength;
          if (i > r) i = r;
        } else {
          for (; !this.eof; ) this.readBlock();
          i = this.bufferLength;
        }
        this.pos = i;
        var a = this.buffer.subarray(n, i);
        return t && !(a instanceof Uint8ClampedArray)
          ? new Uint8ClampedArray(a)
          : a;
      };
      e.prototype.peekByte = function () {
        var e = this.getByte();
        this.pos--;
        return e;
      };
      e.prototype.peekBytes = function (e, t) {
        if (void 0 === t) t = !1;
        var i = this.getBytes(e, t);
        this.pos -= i.length;
        return i;
      };
      e.prototype.skip = function (e) {
        if (!e) e = 1;
        this.pos += e;
      };
      e.prototype.reset = function () {
        this.pos = 0;
      };
      e.prototype.makeSubStream = function (e, t) {
        for (var i = e + t; this.bufferLength <= i && !this.eof; )
          this.readBlock();
        return new Cl(this.buffer, e, t);
      };
      e.prototype.decode = function () {
        for (; !this.eof; ) this.readBlock();
        return this.buffer.subarray(0, this.bufferLength);
      };
      e.prototype.readBlock = function () {
        throw new Ji(this.constructor.name, "readBlock");
      };
      e.prototype.ensureBuffer = function (e) {
        var t = this.buffer;
        if (e <= t.byteLength) return t;
        for (var i = this.minBufferLength; i < e; ) i *= 2;
        var n = new Uint8Array(i);
        n.set(t);
        return (this.buffer = n);
      };
      return e;
    })(),
    Al = function (e) {
      return 32 === e || 9 === e || 13 === e || 10 === e;
    },
    Fl = (function (e) {
      i(t, e);
      function t(t, i) {
        var n = e.call(this, i) || this;
        n.stream = t;
        n.input = new Uint8Array(5);
        if (i) i *= 0.8;
        return n;
      }
      t.prototype.readBlock = function () {
        for (var e = this.stream, t = e.getByte(); Al(t); ) t = e.getByte();
        if (-1 !== t && 126 !== t) {
          var i,
            n,
            r = this.bufferLength;
          if (122 === t) {
            i = this.ensureBuffer(r + 4);
            for (n = 0; n < 4; ++n) i[r + n] = 0;
            this.bufferLength += 4;
          } else {
            var a = this.input;
            a[0] = t;
            for (n = 1; n < 5; ++n) {
              t = e.getByte();
              for (; Al(t); ) t = e.getByte();
              a[n] = t;
              if (-1 === t || 126 === t) break;
            }
            i = this.ensureBuffer(r + n - 1);
            this.bufferLength += n - 1;
            if (n < 5) {
              for (; n < 5; ++n) a[n] = 117;
              this.eof = !0;
            }
            var s = 0;
            for (n = 0; n < 5; ++n) s = 85 * s + (a[n] - 33);
            for (n = 3; n >= 0; --n) {
              i[r + n] = 255 & s;
              s >>= 8;
            }
          }
        } else this.eof = !0;
      };
      return t;
    })(_l),
    Tl = (function (e) {
      i(t, e);
      function t(t, i) {
        var n = e.call(this, i) || this;
        n.stream = t;
        n.firstDigit = -1;
        if (i) i *= 0.5;
        return n;
      }
      t.prototype.readBlock = function () {
        var e = this.stream.getBytes(8e3);
        if (e.length) {
          for (
            var t = (e.length + 1) >> 1,
              i = this.ensureBuffer(this.bufferLength + t),
              n = this.bufferLength,
              r = this.firstDigit,
              a = 0,
              s = e.length;
            a < s;
            a++
          ) {
            var o = e[a],
              l = void 0;
            if (o >= 48 && o <= 57) l = 15 & o;
            else if ((o >= 65 && o <= 70) || (o >= 97 && o <= 102))
              l = 9 + (15 & o);
            else if (62 === o) {
              this.eof = !0;
              break;
            } else continue;
            if (r < 0) r = l;
            else {
              i[n++] = (r << 4) | l;
              r = -1;
            }
          }
          if (r >= 0 && this.eof) {
            i[n++] = r << 4;
            r = -1;
          }
          this.firstDigit = r;
          this.bufferLength = n;
        } else this.eof = !0;
      };
      return t;
    })(_l),
    Pl = new Int32Array([
      16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15,
    ]),
    El = new Int32Array([
      3, 4, 5, 6, 7, 8, 9, 10, 65547, 65549, 65551, 65553, 131091, 131095,
      131099, 131103, 196643, 196651, 196659, 196667, 262211, 262227, 262243,
      262259, 327811, 327843, 327875, 327907, 258, 258, 258,
    ]),
    Il = new Int32Array([
      1, 2, 3, 4, 65541, 65543, 131081, 131085, 196625, 196633, 262177, 262193,
      327745, 327777, 393345, 393409, 459009, 459137, 524801, 525057, 590849,
      591361, 657409, 658433, 724993, 727041, 794625, 798721, 868353, 876545,
    ]),
    Dl = [
      new Int32Array([
        459008, 524368, 524304, 524568, 459024, 524400, 524336, 590016, 459016,
        524384, 524320, 589984, 524288, 524416, 524352, 590048, 459012, 524376,
        524312, 589968, 459028, 524408, 524344, 590032, 459020, 524392, 524328,
        59e4, 524296, 524424, 524360, 590064, 459010, 524372, 524308, 524572,
        459026, 524404, 524340, 590024, 459018, 524388, 524324, 589992, 524292,
        524420, 524356, 590056, 459014, 524380, 524316, 589976, 459030, 524412,
        524348, 590040, 459022, 524396, 524332, 590008, 524300, 524428, 524364,
        590072, 459009, 524370, 524306, 524570, 459025, 524402, 524338, 590020,
        459017, 524386, 524322, 589988, 524290, 524418, 524354, 590052, 459013,
        524378, 524314, 589972, 459029, 524410, 524346, 590036, 459021, 524394,
        524330, 590004, 524298, 524426, 524362, 590068, 459011, 524374, 524310,
        524574, 459027, 524406, 524342, 590028, 459019, 524390, 524326, 589996,
        524294, 524422, 524358, 590060, 459015, 524382, 524318, 589980, 459031,
        524414, 524350, 590044, 459023, 524398, 524334, 590012, 524302, 524430,
        524366, 590076, 459008, 524369, 524305, 524569, 459024, 524401, 524337,
        590018, 459016, 524385, 524321, 589986, 524289, 524417, 524353, 590050,
        459012, 524377, 524313, 589970, 459028, 524409, 524345, 590034, 459020,
        524393, 524329, 590002, 524297, 524425, 524361, 590066, 459010, 524373,
        524309, 524573, 459026, 524405, 524341, 590026, 459018, 524389, 524325,
        589994, 524293, 524421, 524357, 590058, 459014, 524381, 524317, 589978,
        459030, 524413, 524349, 590042, 459022, 524397, 524333, 590010, 524301,
        524429, 524365, 590074, 459009, 524371, 524307, 524571, 459025, 524403,
        524339, 590022, 459017, 524387, 524323, 589990, 524291, 524419, 524355,
        590054, 459013, 524379, 524315, 589974, 459029, 524411, 524347, 590038,
        459021, 524395, 524331, 590006, 524299, 524427, 524363, 590070, 459011,
        524375, 524311, 524575, 459027, 524407, 524343, 590030, 459019, 524391,
        524327, 589998, 524295, 524423, 524359, 590062, 459015, 524383, 524319,
        589982, 459031, 524415, 524351, 590046, 459023, 524399, 524335, 590014,
        524303, 524431, 524367, 590078, 459008, 524368, 524304, 524568, 459024,
        524400, 524336, 590017, 459016, 524384, 524320, 589985, 524288, 524416,
        524352, 590049, 459012, 524376, 524312, 589969, 459028, 524408, 524344,
        590033, 459020, 524392, 524328, 590001, 524296, 524424, 524360, 590065,
        459010, 524372, 524308, 524572, 459026, 524404, 524340, 590025, 459018,
        524388, 524324, 589993, 524292, 524420, 524356, 590057, 459014, 524380,
        524316, 589977, 459030, 524412, 524348, 590041, 459022, 524396, 524332,
        590009, 524300, 524428, 524364, 590073, 459009, 524370, 524306, 524570,
        459025, 524402, 524338, 590021, 459017, 524386, 524322, 589989, 524290,
        524418, 524354, 590053, 459013, 524378, 524314, 589973, 459029, 524410,
        524346, 590037, 459021, 524394, 524330, 590005, 524298, 524426, 524362,
        590069, 459011, 524374, 524310, 524574, 459027, 524406, 524342, 590029,
        459019, 524390, 524326, 589997, 524294, 524422, 524358, 590061, 459015,
        524382, 524318, 589981, 459031, 524414, 524350, 590045, 459023, 524398,
        524334, 590013, 524302, 524430, 524366, 590077, 459008, 524369, 524305,
        524569, 459024, 524401, 524337, 590019, 459016, 524385, 524321, 589987,
        524289, 524417, 524353, 590051, 459012, 524377, 524313, 589971, 459028,
        524409, 524345, 590035, 459020, 524393, 524329, 590003, 524297, 524425,
        524361, 590067, 459010, 524373, 524309, 524573, 459026, 524405, 524341,
        590027, 459018, 524389, 524325, 589995, 524293, 524421, 524357, 590059,
        459014, 524381, 524317, 589979, 459030, 524413, 524349, 590043, 459022,
        524397, 524333, 590011, 524301, 524429, 524365, 590075, 459009, 524371,
        524307, 524571, 459025, 524403, 524339, 590023, 459017, 524387, 524323,
        589991, 524291, 524419, 524355, 590055, 459013, 524379, 524315, 589975,
        459029, 524411, 524347, 590039, 459021, 524395, 524331, 590007, 524299,
        524427, 524363, 590071, 459011, 524375, 524311, 524575, 459027, 524407,
        524343, 590031, 459019, 524391, 524327, 589999, 524295, 524423, 524359,
        590063, 459015, 524383, 524319, 589983, 459031, 524415, 524351, 590047,
        459023, 524399, 524335, 590015, 524303, 524431, 524367, 590079,
      ]),
      9,
    ],
    Ol = [
      new Int32Array([
        327680, 327696, 327688, 327704, 327684, 327700, 327692, 327708, 327682,
        327698, 327690, 327706, 327686, 327702, 327694, 0, 327681, 327697,
        327689, 327705, 327685, 327701, 327693, 327709, 327683, 327699, 327691,
        327707, 327687, 327703, 327695, 0,
      ]),
      5,
    ],
    Rl = (function (e) {
      i(t, e);
      function t(t, i) {
        var n = e.call(this, i) || this;
        n.stream = t;
        var r = t.getByte(),
          a = t.getByte();
        if (-1 === r || -1 === a)
          throw new Error("Invalid header in flate stream: " + r + ", " + a);
        if (8 != (15 & r))
          throw new Error(
            "Unknown compression method in flate stream: " + r + ", " + a
          );
        if (((r << 8) + a) % 31 != 0)
          throw new Error("Bad FCHECK in flate stream: " + r + ", " + a);
        if (32 & a)
          throw new Error("FDICT bit set in flate stream: " + r + ", " + a);
        n.codeSize = 0;
        n.codeBuf = 0;
        return n;
      }
      t.prototype.readBlock = function () {
        var e,
          t,
          i = this.stream,
          n = this.getBits(3);
        if (1 & n) this.eof = !0;
        if (0 != (n >>= 1)) {
          var r, a;
          if (1 === n) {
            r = Dl;
            a = Ol;
          } else if (2 === n) {
            var s = this.getBits(5) + 257,
              o = this.getBits(5) + 1,
              l = this.getBits(4) + 4,
              c = new Uint8Array(Pl.length),
              h = void 0;
            for (h = 0; h < l; ++h) c[Pl[h]] = this.getBits(3);
            var u = this.generateHuffmanTable(c);
            t = 0;
            h = 0;
            for (
              var d = s + o,
                f = new Uint8Array(d),
                p = void 0,
                g = void 0,
                m = void 0;
              h < d;

            ) {
              var v = this.getCode(u);
              if (16 === v) {
                p = 2;
                g = 3;
                m = t;
              } else if (17 === v) {
                p = 3;
                g = 3;
                m = t = 0;
              } else if (18 === v) {
                p = 7;
                g = 11;
                m = t = 0;
              } else {
                f[h++] = t = v;
                continue;
              }
              for (var b = this.getBits(p) + g; b-- > 0; ) f[h++] = m;
            }
            r = this.generateHuffmanTable(f.subarray(0, s));
            a = this.generateHuffmanTable(f.subarray(s, d));
          } else throw new Error("Unknown block type in flate stream");
          for (
            var y = (e = this.buffer) ? e.length : 0, w = this.bufferLength;
            ;

          ) {
            var x = this.getCode(r);
            if (!(x < 256)) {
              if (256 === x) {
                this.bufferLength = w;
                return;
              }
              var k = (x = El[(x -= 257)]) >> 16;
              if (k > 0) k = this.getBits(k);
              t = (65535 & x) + k;
              x = this.getCode(a);
              if ((k = (x = Il[x]) >> 16) > 0) k = this.getBits(k);
              var C = (65535 & x) + k;
              if (w + t >= y) y = (e = this.ensureBuffer(w + t)).length;
              for (var S = 0; S < t; ++S, ++w) e[w] = e[w - C];
            } else {
              if (w + 1 >= y) y = (e = this.ensureBuffer(w + 1)).length;
              e[w++] = x;
            }
          }
        } else {
          var _ = void 0;
          if (-1 === (_ = i.getByte()))
            throw new Error("Bad block header in flate stream");
          var A = _;
          if (-1 === (_ = i.getByte()))
            throw new Error("Bad block header in flate stream");
          A |= _ << 8;
          if (-1 === (_ = i.getByte()))
            throw new Error("Bad block header in flate stream");
          var F = _;
          if (-1 === (_ = i.getByte()))
            throw new Error("Bad block header in flate stream");
          if ((F |= _ << 8) != (65535 & ~A) && (0 !== A || 0 !== F))
            throw new Error("Bad uncompressed block length in flate stream");
          this.codeBuf = 0;
          this.codeSize = 0;
          var T = this.bufferLength;
          e = this.ensureBuffer(T + A);
          var P = T + A;
          this.bufferLength = P;
          if (0 === A) {
            if (-1 === i.peekByte()) this.eof = !0;
          } else
            for (var E = T; E < P; ++E) {
              if (-1 === (_ = i.getByte())) {
                this.eof = !0;
                break;
              }
              e[E] = _;
            }
        }
      };
      t.prototype.getBits = function (e) {
        for (
          var t, i = this.stream, n = this.codeSize, r = this.codeBuf;
          n < e;

        ) {
          if (-1 === (t = i.getByte()))
            throw new Error("Bad encoding in flate stream");
          r |= t << n;
          n += 8;
        }
        t = r & ((1 << e) - 1);
        this.codeBuf = r >> e;
        this.codeSize = n -= e;
        return t;
      };
      t.prototype.getCode = function (e) {
        for (
          var t,
            i = this.stream,
            n = e[0],
            r = e[1],
            a = this.codeSize,
            s = this.codeBuf;
          a < r && -1 !== (t = i.getByte());

        ) {
          s |= t << a;
          a += 8;
        }
        var o = n[s & ((1 << r) - 1)];
        if ("number" == typeof n);
        var l = o >> 16,
          c = 65535 & o;
        if (l < 1 || a < l) throw new Error("Bad encoding in flate stream");
        this.codeBuf = s >> l;
        this.codeSize = a - l;
        return c;
      };
      t.prototype.generateHuffmanTable = function (e) {
        var t,
          i = e.length,
          n = 0;
        for (t = 0; t < i; ++t) if (e[t] > n) n = e[t];
        for (
          var r = 1 << n, a = new Int32Array(r), s = 1, o = 0, l = 2;
          s <= n;
          ++s, o <<= 1, l <<= 1
        )
          for (var c = 0; c < i; ++c)
            if (e[c] === s) {
              var h = 0,
                u = o;
              for (t = 0; t < s; ++t) {
                h = (h << 1) | (1 & u);
                u >>= 1;
              }
              for (t = h; t < r; t += l) a[t] = (s << 16) | c;
              ++o;
            }
        return [a, n];
      };
      return t;
    })(_l),
    Nl = (function (e) {
      i(t, e);
      function t(t, i, n) {
        var r = e.call(this, i) || this;
        r.stream = t;
        r.cachedData = 0;
        r.bitsCached = 0;
        for (
          var a = 4096,
            s = {
              earlyChange: n,
              codeLength: 9,
              nextCode: 258,
              dictionaryValues: new Uint8Array(a),
              dictionaryLengths: new Uint16Array(a),
              dictionaryPrevCodes: new Uint16Array(a),
              currentSequence: new Uint8Array(a),
              currentSequenceLength: 0,
            },
            o = 0;
          o < 256;
          ++o
        ) {
          s.dictionaryValues[o] = o;
          s.dictionaryLengths[o] = 1;
        }
        r.lzwState = s;
        return r;
      }
      t.prototype.readBlock = function () {
        var e,
          t,
          i,
          n = 1024,
          r = this.lzwState;
        if (r) {
          var a = r.earlyChange,
            s = r.nextCode,
            o = r.dictionaryValues,
            l = r.dictionaryLengths,
            c = r.dictionaryPrevCodes,
            h = r.codeLength,
            u = r.prevCode,
            d = r.currentSequence,
            f = r.currentSequenceLength,
            p = 0,
            g = this.bufferLength,
            m = this.ensureBuffer(this.bufferLength + n);
          for (e = 0; e < 512; e++) {
            var v = this.readBits(h),
              b = f > 0;
            if (!v || v < 256) {
              d[0] = v;
              f = 1;
            } else if (v >= 258)
              if (v < s)
                for (t = (f = l[v]) - 1, i = v; t >= 0; t--) {
                  d[t] = o[i];
                  i = c[i];
                }
              else d[f++] = d[0];
            else if (256 === v) {
              h = 9;
              s = 258;
              f = 0;
              continue;
            } else {
              this.eof = !0;
              delete this.lzwState;
              break;
            }
            if (b) {
              c[s] = u;
              l[s] = l[u] + 1;
              o[s] = d[0];
              h =
                (++s + a) & (s + a - 1)
                  ? h
                  : 0 | Math.min(Math.log(s + a) / 0.6931471805599453 + 1, 12);
            }
            u = v;
            if (n < (p += f)) {
              do {
                n += 512;
              } while (n < p);
              m = this.ensureBuffer(this.bufferLength + n);
            }
            for (t = 0; t < f; t++) m[g++] = d[t];
          }
          r.nextCode = s;
          r.codeLength = h;
          r.prevCode = u;
          r.currentSequenceLength = f;
          this.bufferLength = g;
        }
      };
      t.prototype.readBits = function (e) {
        for (var t = this.bitsCached, i = this.cachedData; t < e; ) {
          var n = this.stream.getByte();
          if (-1 === n) {
            this.eof = !0;
            return null;
          }
          i = (i << 8) | n;
          t += 8;
        }
        this.bitsCached = t -= e;
        this.cachedData = i;
        return (i >>> t) & ((1 << e) - 1);
      };
      return t;
    })(_l),
    Ml = (function (e) {
      i(t, e);
      function t(t, i) {
        var n = e.call(this, i) || this;
        n.stream = t;
        return n;
      }
      t.prototype.readBlock = function () {
        var e = this.stream.getBytes(2);
        if (e && !(e.length < 2) && 128 !== e[0]) {
          var t,
            i = this.bufferLength,
            n = e[0];
          if (n < 128) {
            (t = this.ensureBuffer(i + n + 1))[i++] = e[1];
            if (n > 0) {
              var r = this.stream.getBytes(n);
              t.set(r, i);
              i += n;
            }
          } else {
            n = 257 - n;
            var a = e[1];
            t = this.ensureBuffer(i + n + 1);
            for (var s = 0; s < n; s++) t[i++] = a;
          }
          this.bufferLength = i;
        } else this.eof = !0;
      };
      return t;
    })(_l),
    Bl = function (e, t, i) {
      if (t === Ua.of("FlateDecode")) return new Rl(e);
      if (t === Ua.of("LZWDecode")) {
        var n = 1;
        if (i instanceof Ia) {
          var r = i.lookup(Ua.of("EarlyChange"));
          if (r instanceof Aa) n = r.asNumber();
        }
        return new Nl(e, void 0, n);
      }
      if (t === Ua.of("ASCII85Decode")) return new Fl(e);
      if (t === Ua.of("ASCIIHexDecode")) return new Tl(e);
      if (t === Ua.of("RunLengthDecode")) return new Ml(e);
      throw new en(t.asString());
    },
    Ll = function (e) {
      var t = e.dict,
        i = e.contents,
        n = new Cl(i),
        r = t.lookup(Ua.of("Filter")),
        a = t.lookup(Ua.of("DecodeParms"));
      if (r instanceof Ua) n = Bl(n, r, a);
      else if (r instanceof Fa)
        for (var s = 0, o = r.size(); s < o; s++)
          n = Bl(n, r.lookup(s, Ua), a && a.lookupMaybe(s, Ia));
      else if (r) throw new Qi([Ua, Fa], r);
      return n;
    },
    Ul = (function () {
      function e(e, t, i) {
        this.page = e;
        var n =
          null != t
            ? t
            : (function (e) {
                var t = e.MediaBox();
                return {
                  left: 0,
                  bottom: 0,
                  right:
                    t.lookup(2, Aa).asNumber() - t.lookup(0, Aa).asNumber(),
                  top: t.lookup(3, Aa).asNumber() - t.lookup(1, Aa).asNumber(),
                };
              })(e);
        this.width = n.right - n.left;
        this.height = n.top - n.bottom;
        this.boundingBox = n;
        this.transformationMatrix =
          null != i
            ? i
            : (function (e) {
                return [1, 0, 0, 1, -e.left, -e.bottom];
              })(n);
      }
      e.for = function (t, i, n) {
        return r(this, void 0, void 0, function () {
          return a(this, function (r) {
            return [2, new e(t, i, n)];
          });
        });
      };
      e.prototype.embedIntoContext = function (e, t) {
        return r(this, void 0, void 0, function () {
          var i, n, r, s, o, l, c, h, u, d;
          return a(this, function (a) {
            (i = this.page.normalizedEntries()),
              (n = i.Contents),
              (r = i.Resources);
            if (!n) throw new rn();
            s = this.decodeContents(n);
            (o = this.boundingBox),
              (l = o.left),
              (c = o.bottom),
              (h = o.right),
              (u = o.top);
            d = e.stream(s, {
              Type: "XObject",
              Subtype: "Form",
              FormType: 1,
              BBox: [l, c, h, u],
              Matrix: this.transformationMatrix,
              Resources: r,
            });
            if (t) {
              e.assign(t, d);
              return [2, t];
            } else return [2, e.register(d)];
          });
        });
      };
      e.prototype.decodeContents = function (e) {
        for (
          var t = Uint8Array.of(An.Newline), i = [], n = 0, r = e.size();
          n < r;
          n++
        ) {
          var a = e.lookup(n, za),
            s = void 0;
          if (a instanceof ja) s = Ll(a).decode();
          else if (a instanceof Ya) s = a.getUnencodedContents();
          else throw new an(a);
          i.push(s, t);
        }
        return L.apply(void 0, i);
      };
      return e;
    })(),
    zl = function (e, t) {
      if (void 0 !== e) return t[e];
    };
  !(function (e) {
    e.UseNone = "UseNone";
    e.UseOutlines = "UseOutlines";
    e.UseThumbs = "UseThumbs";
    e.UseOC = "UseOC";
  })(e.NonFullScreenPageMode || (e.NonFullScreenPageMode = {}));
  !(function (e) {
    e.L2R = "L2R";
    e.R2L = "R2L";
  })(e.ReadingDirection || (e.ReadingDirection = {}));
  !(function (e) {
    e.None = "None";
    e.AppDefault = "AppDefault";
  })(e.PrintScaling || (e.PrintScaling = {}));
  !(function (e) {
    e.Simplex = "Simplex";
    e.DuplexFlipShortEdge = "DuplexFlipShortEdge";
    e.DuplexFlipLongEdge = "DuplexFlipLongEdge";
  })(e.Duplex || (e.Duplex = {}));
  var jl = (function () {
      function t(e) {
        this.dict = e;
      }
      t.prototype.lookupBool = function (e) {
        var t = this.dict.lookup(Ua.of(e));
        if (t instanceof Pa) return t;
      };
      t.prototype.lookupName = function (e) {
        var t = this.dict.lookup(Ua.of(e));
        if (t instanceof Ua) return t;
      };
      t.prototype.HideToolbar = function () {
        return this.lookupBool("HideToolbar");
      };
      t.prototype.HideMenubar = function () {
        return this.lookupBool("HideMenubar");
      };
      t.prototype.HideWindowUI = function () {
        return this.lookupBool("HideWindowUI");
      };
      t.prototype.FitWindow = function () {
        return this.lookupBool("FitWindow");
      };
      t.prototype.CenterWindow = function () {
        return this.lookupBool("CenterWindow");
      };
      t.prototype.DisplayDocTitle = function () {
        return this.lookupBool("DisplayDocTitle");
      };
      t.prototype.NonFullScreenPageMode = function () {
        return this.lookupName("NonFullScreenPageMode");
      };
      t.prototype.Direction = function () {
        return this.lookupName("Direction");
      };
      t.prototype.PrintScaling = function () {
        return this.lookupName("PrintScaling");
      };
      t.prototype.Duplex = function () {
        return this.lookupName("Duplex");
      };
      t.prototype.PickTrayByPDFSize = function () {
        return this.lookupBool("PickTrayByPDFSize");
      };
      t.prototype.PrintPageRange = function () {
        var e = this.dict.lookup(Ua.of("PrintPageRange"));
        if (e instanceof Fa) return e;
      };
      t.prototype.NumCopies = function () {
        var e = this.dict.lookup(Ua.of("NumCopies"));
        if (e instanceof Aa) return e;
      };
      t.prototype.getHideToolbar = function () {
        var e, t;
        return null !==
          (t =
            null === (e = this.HideToolbar()) || void 0 === e
              ? void 0
              : e.asBoolean()) && void 0 !== t
          ? t
          : !1;
      };
      t.prototype.getHideMenubar = function () {
        var e, t;
        return null !==
          (t =
            null === (e = this.HideMenubar()) || void 0 === e
              ? void 0
              : e.asBoolean()) && void 0 !== t
          ? t
          : !1;
      };
      t.prototype.getHideWindowUI = function () {
        var e, t;
        return null !==
          (t =
            null === (e = this.HideWindowUI()) || void 0 === e
              ? void 0
              : e.asBoolean()) && void 0 !== t
          ? t
          : !1;
      };
      t.prototype.getFitWindow = function () {
        var e, t;
        return null !==
          (t =
            null === (e = this.FitWindow()) || void 0 === e
              ? void 0
              : e.asBoolean()) && void 0 !== t
          ? t
          : !1;
      };
      t.prototype.getCenterWindow = function () {
        var e, t;
        return null !==
          (t =
            null === (e = this.CenterWindow()) || void 0 === e
              ? void 0
              : e.asBoolean()) && void 0 !== t
          ? t
          : !1;
      };
      t.prototype.getDisplayDocTitle = function () {
        var e, t;
        return null !==
          (t =
            null === (e = this.DisplayDocTitle()) || void 0 === e
              ? void 0
              : e.asBoolean()) && void 0 !== t
          ? t
          : !1;
      };
      t.prototype.getNonFullScreenPageMode = function () {
        var t,
          i,
          n =
            null === (t = this.NonFullScreenPageMode()) || void 0 === t
              ? void 0
              : t.decodeText();
        return null !== (i = zl(n, e.NonFullScreenPageMode)) && void 0 !== i
          ? i
          : e.NonFullScreenPageMode.UseNone;
      };
      t.prototype.getReadingDirection = function () {
        var t,
          i,
          n =
            null === (t = this.Direction()) || void 0 === t
              ? void 0
              : t.decodeText();
        return null !== (i = zl(n, e.ReadingDirection)) && void 0 !== i
          ? i
          : e.ReadingDirection.L2R;
      };
      t.prototype.getPrintScaling = function () {
        var t,
          i,
          n =
            null === (t = this.PrintScaling()) || void 0 === t
              ? void 0
              : t.decodeText();
        return null !== (i = zl(n, e.PrintScaling)) && void 0 !== i
          ? i
          : e.PrintScaling.AppDefault;
      };
      t.prototype.getDuplex = function () {
        var t,
          i =
            null === (t = this.Duplex()) || void 0 === t
              ? void 0
              : t.decodeText();
        return zl(i, e.Duplex);
      };
      t.prototype.getPickTrayByPDFSize = function () {
        var e;
        return null === (e = this.PickTrayByPDFSize()) || void 0 === e
          ? void 0
          : e.asBoolean();
      };
      t.prototype.getPrintPageRange = function () {
        var e = this.PrintPageRange();
        if (!e) return [];
        for (var t = [], i = 0; i < e.size(); i += 2) {
          var n = e.lookup(i, Aa).asNumber(),
            r = e.lookup(i + 1, Aa).asNumber();
          t.push({ start: n, end: r });
        }
        return t;
      };
      t.prototype.getNumCopies = function () {
        var e, t;
        return null !==
          (t =
            null === (e = this.NumCopies()) || void 0 === e
              ? void 0
              : e.asNumber()) && void 0 !== t
          ? t
          : 1;
      };
      t.prototype.setHideToolbar = function (e) {
        var t = this.dict.context.obj(e);
        this.dict.set(Ua.of("HideToolbar"), t);
      };
      t.prototype.setHideMenubar = function (e) {
        var t = this.dict.context.obj(e);
        this.dict.set(Ua.of("HideMenubar"), t);
      };
      t.prototype.setHideWindowUI = function (e) {
        var t = this.dict.context.obj(e);
        this.dict.set(Ua.of("HideWindowUI"), t);
      };
      t.prototype.setFitWindow = function (e) {
        var t = this.dict.context.obj(e);
        this.dict.set(Ua.of("FitWindow"), t);
      };
      t.prototype.setCenterWindow = function (e) {
        var t = this.dict.context.obj(e);
        this.dict.set(Ua.of("CenterWindow"), t);
      };
      t.prototype.setDisplayDocTitle = function (e) {
        var t = this.dict.context.obj(e);
        this.dict.set(Ua.of("DisplayDocTitle"), t);
      };
      t.prototype.setNonFullScreenPageMode = function (t) {
        Di(t, "nonFullScreenPageMode", e.NonFullScreenPageMode);
        var i = Ua.of(t);
        this.dict.set(Ua.of("NonFullScreenPageMode"), i);
      };
      t.prototype.setReadingDirection = function (t) {
        Di(t, "readingDirection", e.ReadingDirection);
        var i = Ua.of(t);
        this.dict.set(Ua.of("Direction"), i);
      };
      t.prototype.setPrintScaling = function (t) {
        Di(t, "printScaling", e.PrintScaling);
        var i = Ua.of(t);
        this.dict.set(Ua.of("PrintScaling"), i);
      };
      t.prototype.setDuplex = function (t) {
        Di(t, "duplex", e.Duplex);
        var i = Ua.of(t);
        this.dict.set(Ua.of("Duplex"), i);
      };
      t.prototype.setPickTrayByPDFSize = function (e) {
        var t = this.dict.context.obj(e);
        this.dict.set(Ua.of("PickTrayByPDFSize"), t);
      };
      t.prototype.setPrintPageRange = function (e) {
        if (!Array.isArray(e)) e = [e];
        for (var t = [], i = 0, n = e.length; i < n; i++) {
          t.push(e[i].start);
          t.push(e[i].end);
        }
        zi(t, "printPageRange", ["number"]);
        var r = this.dict.context.obj(t);
        this.dict.set(Ua.of("PrintPageRange"), r);
      };
      t.prototype.setNumCopies = function (e) {
        ji(e, "numCopies", 1, Number.MAX_VALUE);
        Wi(e, "numCopies");
        var t = this.dict.context.obj(e);
        this.dict.set(Ua.of("NumCopies"), t);
      };
      t.fromDict = function (e) {
        return new t(e);
      };
      t.create = function (e) {
        return new t(e.obj({}));
      };
      return t;
    })(),
    ql = /\/([^\0\t\n\f\r\ ]+)[\0\t\n\f\r\ ]*(\d*\.\d+|\d+)?[\0\t\n\f\r\ ]+Tf/,
    Hl = (function () {
      function e(e, t) {
        this.dict = e;
        this.ref = t;
      }
      e.prototype.T = function () {
        return this.dict.lookupMaybe(Ua.of("T"), fs, ls);
      };
      e.prototype.Ff = function () {
        var e = this.getInheritableAttribute(Ua.of("Ff"));
        return this.dict.context.lookupMaybe(e, Aa);
      };
      e.prototype.V = function () {
        var e = this.getInheritableAttribute(Ua.of("V"));
        return this.dict.context.lookup(e);
      };
      e.prototype.Kids = function () {
        return this.dict.lookupMaybe(Ua.of("Kids"), Fa);
      };
      e.prototype.DA = function () {
        var e = this.dict.lookup(Ua.of("DA"));
        if (e instanceof fs || e instanceof ls) return e;
      };
      e.prototype.setKids = function (e) {
        this.dict.set(Ua.of("Kids"), this.dict.context.obj(e));
      };
      e.prototype.getParent = function () {
        var t = this.dict.get(Ua.of("Parent"));
        if (t instanceof Wa)
          return new e(this.dict.lookup(Ua.of("Parent"), Ia), t);
      };
      e.prototype.setParent = function (e) {
        if (!e) this.dict.delete(Ua.of("Parent"));
        else this.dict.set(Ua.of("Parent"), e);
      };
      e.prototype.getFullyQualifiedName = function () {
        var e = this.getParent();
        if (!e) return this.getPartialName();
        else return e.getFullyQualifiedName() + "." + this.getPartialName();
      };
      e.prototype.getPartialName = function () {
        var e;
        return null === (e = this.T()) || void 0 === e
          ? void 0
          : e.decodeText();
      };
      e.prototype.setPartialName = function (e) {
        if (!e) this.dict.delete(Ua.of("T"));
        else this.dict.set(Ua.of("T"), ls.fromText(e));
      };
      e.prototype.setDefaultAppearance = function (e) {
        this.dict.set(Ua.of("DA"), fs.of(e));
      };
      e.prototype.getDefaultAppearance = function () {
        var e = this.DA();
        if (e instanceof ls) return e.decodeText();
        else return null == e ? void 0 : e.asString();
      };
      e.prototype.setFontSize = function (e) {
        var t,
          i =
            null !== (t = this.getFullyQualifiedName()) && void 0 !== t
              ? t
              : "",
          n = this.getDefaultAppearance();
        if (!n) throw new pn(i);
        var r = N(n, ql);
        if (!r.match) throw new gn(i);
        var a = n.slice(0, r.pos - r.match[0].length),
          s = r.pos <= n.length ? n.slice(r.pos) : "",
          o = a + " /" + r.match[1] + " " + e + " Tf " + s;
        this.setDefaultAppearance(o);
      };
      e.prototype.getFlags = function () {
        var e, t;
        return null !==
          (t =
            null === (e = this.Ff()) || void 0 === e ? void 0 : e.asNumber()) &&
          void 0 !== t
          ? t
          : 0;
      };
      e.prototype.setFlags = function (e) {
        this.dict.set(Ua.of("Ff"), Aa.of(e));
      };
      e.prototype.hasFlag = function (e) {
        return 0 != (this.getFlags() & e);
      };
      e.prototype.setFlag = function (e) {
        var t = this.getFlags();
        this.setFlags(t | e);
      };
      e.prototype.clearFlag = function (e) {
        var t = this.getFlags();
        this.setFlags(t & ~e);
      };
      e.prototype.setFlagTo = function (e, t) {
        if (t) this.setFlag(e);
        else this.clearFlag(e);
      };
      e.prototype.getInheritableAttribute = function (e) {
        var t;
        this.ascend(function (i) {
          if (!t) t = i.dict.get(e);
        });
        return t;
      };
      e.prototype.ascend = function (e) {
        e(this);
        var t = this.getParent();
        if (t) t.ascend(e);
      };
      return e;
    })(),
    Wl = (function () {
      function e(e) {
        this.dict = e;
      }
      e.prototype.W = function () {
        var e = this.dict.lookup(Ua.of("W"));
        if (e instanceof Aa) return e;
      };
      e.prototype.getWidth = function () {
        var e, t;
        return null !==
          (t =
            null === (e = this.W()) || void 0 === e ? void 0 : e.asNumber()) &&
          void 0 !== t
          ? t
          : 1;
      };
      e.prototype.setWidth = function (e) {
        var t = this.dict.context.obj(e);
        this.dict.set(Ua.of("W"), t);
      };
      e.fromDict = function (t) {
        return new e(t);
      };
      return e;
    })(),
    Gl = (function () {
      function e(e) {
        this.dict = e;
      }
      e.prototype.Rect = function () {
        return this.dict.lookup(Ua.of("Rect"), Fa);
      };
      e.prototype.AP = function () {
        return this.dict.lookupMaybe(Ua.of("AP"), Ia);
      };
      e.prototype.F = function () {
        var e = this.dict.lookup(Ua.of("F"));
        return this.dict.context.lookupMaybe(e, Aa);
      };
      e.prototype.getRectangle = function () {
        var e,
          t = this.Rect();
        return null !== (e = null == t ? void 0 : t.asRectangle()) &&
          void 0 !== e
          ? e
          : { x: 0, y: 0, width: 0, height: 0 };
      };
      e.prototype.setRectangle = function (e) {
        var t = e.x,
          i = e.y,
          n = e.width,
          r = e.height,
          a = this.dict.context.obj([t, i, t + n, i + r]);
        this.dict.set(Ua.of("Rect"), a);
      };
      e.prototype.getAppearanceState = function () {
        var e = this.dict.lookup(Ua.of("AS"));
        if (e instanceof Ua) return e;
      };
      e.prototype.setAppearanceState = function (e) {
        this.dict.set(Ua.of("AS"), e);
      };
      e.prototype.setAppearances = function (e) {
        this.dict.set(Ua.of("AP"), e);
      };
      e.prototype.ensureAP = function () {
        var e = this.AP();
        if (!e) {
          e = this.dict.context.obj({});
          this.dict.set(Ua.of("AP"), e);
        }
        return e;
      };
      e.prototype.getNormalAppearance = function () {
        var e = this.ensureAP().get(Ua.of("N"));
        if (e instanceof Wa || e instanceof Ia) return e;
        throw new Error(
          "Unexpected N type: " + (null == e ? void 0 : e.constructor.name)
        );
      };
      e.prototype.setNormalAppearance = function (e) {
        this.ensureAP().set(Ua.of("N"), e);
      };
      e.prototype.setRolloverAppearance = function (e) {
        this.ensureAP().set(Ua.of("R"), e);
      };
      e.prototype.setDownAppearance = function (e) {
        this.ensureAP().set(Ua.of("D"), e);
      };
      e.prototype.removeRolloverAppearance = function () {
        var e = this.AP();
        null == e || e.delete(Ua.of("R"));
      };
      e.prototype.removeDownAppearance = function () {
        var e = this.AP();
        null == e || e.delete(Ua.of("D"));
      };
      e.prototype.getAppearances = function () {
        var e = this.AP();
        if (e)
          return {
            normal: e.lookup(Ua.of("N"), Ia, za),
            rollover: e.lookupMaybe(Ua.of("R"), Ia, za),
            down: e.lookupMaybe(Ua.of("D"), Ia, za),
          };
      };
      e.prototype.getFlags = function () {
        var e, t;
        return null !==
          (t =
            null === (e = this.F()) || void 0 === e ? void 0 : e.asNumber()) &&
          void 0 !== t
          ? t
          : 0;
      };
      e.prototype.setFlags = function (e) {
        this.dict.set(Ua.of("F"), Aa.of(e));
      };
      e.prototype.hasFlag = function (e) {
        return 0 != (this.getFlags() & e);
      };
      e.prototype.setFlag = function (e) {
        var t = this.getFlags();
        this.setFlags(t | e);
      };
      e.prototype.clearFlag = function (e) {
        var t = this.getFlags();
        this.setFlags(t & ~e);
      };
      e.prototype.setFlagTo = function (e, t) {
        if (t) this.setFlag(e);
        else this.clearFlag(e);
      };
      e.fromDict = function (t) {
        return new e(t);
      };
      return e;
    })(),
    Vl = (function () {
      function e(e) {
        this.dict = e;
      }
      e.prototype.R = function () {
        var e = this.dict.lookup(Ua.of("R"));
        if (e instanceof Aa) return e;
      };
      e.prototype.BC = function () {
        var e = this.dict.lookup(Ua.of("BC"));
        if (e instanceof Fa) return e;
      };
      e.prototype.BG = function () {
        var e = this.dict.lookup(Ua.of("BG"));
        if (e instanceof Fa) return e;
      };
      e.prototype.CA = function () {
        var e = this.dict.lookup(Ua.of("CA"));
        if (e instanceof ls || e instanceof fs) return e;
      };
      e.prototype.RC = function () {
        var e = this.dict.lookup(Ua.of("RC"));
        if (e instanceof ls || e instanceof fs) return e;
      };
      e.prototype.AC = function () {
        var e = this.dict.lookup(Ua.of("AC"));
        if (e instanceof ls || e instanceof fs) return e;
      };
      e.prototype.getRotation = function () {
        var e;
        return null === (e = this.R()) || void 0 === e ? void 0 : e.asNumber();
      };
      e.prototype.getBorderColor = function () {
        var e = this.BC();
        if (e) {
          for (
            var t = [], i = 0, n = null == e ? void 0 : e.size();
            i < n;
            i++
          ) {
            var r = e.get(i);
            if (r instanceof Aa) t.push(r.asNumber());
          }
          return t;
        }
      };
      e.prototype.getBackgroundColor = function () {
        var e = this.BG();
        if (e) {
          for (
            var t = [], i = 0, n = null == e ? void 0 : e.size();
            i < n;
            i++
          ) {
            var r = e.get(i);
            if (r instanceof Aa) t.push(r.asNumber());
          }
          return t;
        }
      };
      e.prototype.getCaptions = function () {
        var e = this.CA(),
          t = this.RC(),
          i = this.AC();
        return {
          normal: null == e ? void 0 : e.decodeText(),
          rollover: null == t ? void 0 : t.decodeText(),
          down: null == i ? void 0 : i.decodeText(),
        };
      };
      e.prototype.setRotation = function (e) {
        var t = this.dict.context.obj(e);
        this.dict.set(Ua.of("R"), t);
      };
      e.prototype.setBorderColor = function (e) {
        var t = this.dict.context.obj(e);
        this.dict.set(Ua.of("BC"), t);
      };
      e.prototype.setBackgroundColor = function (e) {
        var t = this.dict.context.obj(e);
        this.dict.set(Ua.of("BG"), t);
      };
      e.prototype.setCaptions = function (e) {
        var t = ls.fromText(e.normal);
        this.dict.set(Ua.of("CA"), t);
        if (e.rollover) {
          var i = ls.fromText(e.rollover);
          this.dict.set(Ua.of("RC"), i);
        } else this.dict.delete(Ua.of("RC"));
        if (e.down) {
          var n = ls.fromText(e.down);
          this.dict.set(Ua.of("AC"), n);
        } else this.dict.delete(Ua.of("AC"));
      };
      e.fromDict = function (t) {
        return new e(t);
      };
      return e;
    })(),
    Xl = (function (e) {
      i(t, e);
      function t() {
        return (null !== e && e.apply(this, arguments)) || this;
      }
      t.prototype.MK = function () {
        var e = this.dict.lookup(Ua.of("MK"));
        if (e instanceof Ia) return e;
      };
      t.prototype.BS = function () {
        var e = this.dict.lookup(Ua.of("BS"));
        if (e instanceof Ia) return e;
      };
      t.prototype.DA = function () {
        var e = this.dict.lookup(Ua.of("DA"));
        if (e instanceof fs || e instanceof ls) return e;
      };
      t.prototype.P = function () {
        var e = this.dict.get(Ua.of("P"));
        if (e instanceof Wa) return e;
      };
      t.prototype.setDefaultAppearance = function (e) {
        this.dict.set(Ua.of("DA"), fs.of(e));
      };
      t.prototype.getDefaultAppearance = function () {
        var e = this.DA();
        if (e instanceof ls) return e.decodeText();
        else return null == e ? void 0 : e.asString();
      };
      t.prototype.getAppearanceCharacteristics = function () {
        var e = this.MK();
        if (e) return Vl.fromDict(e);
      };
      t.prototype.getOrCreateAppearanceCharacteristics = function () {
        var e = this.MK();
        if (e) return Vl.fromDict(e);
        var t = Vl.fromDict(this.dict.context.obj({}));
        this.dict.set(Ua.of("MK"), t.dict);
        return t;
      };
      t.prototype.getBorderStyle = function () {
        var e = this.BS();
        if (e) return Wl.fromDict(e);
      };
      t.prototype.getOrCreateBorderStyle = function () {
        var e = this.BS();
        if (e) return Wl.fromDict(e);
        var t = Wl.fromDict(this.dict.context.obj({}));
        this.dict.set(Ua.of("BS"), t.dict);
        return t;
      };
      t.prototype.getOnValue = function () {
        var e,
          t =
            null === (e = this.getAppearances()) || void 0 === e
              ? void 0
              : e.normal;
        if (t instanceof Ia)
          for (var i = t.keys(), n = 0, r = i.length; n < r; n++) {
            var a = i[n];
            if (a !== Ua.of("Off")) return a;
          }
      };
      t.fromDict = function (e) {
        return new t(e);
      };
      t.create = function (e, i) {
        return new t(
          e.obj({
            Type: "Annot",
            Subtype: "Widget",
            Rect: [0, 0, 0, 0],
            Parent: i,
          })
        );
      };
      return t;
    })(Gl),
    Kl = (function (e) {
      i(t, e);
      function t() {
        return (null !== e && e.apply(this, arguments)) || this;
      }
      t.prototype.FT = function () {
        var e = this.getInheritableAttribute(Ua.of("FT"));
        return this.dict.context.lookup(e, Ua);
      };
      t.prototype.getWidgets = function () {
        var e = this.Kids();
        if (!e) return [Xl.fromDict(this.dict)];
        for (var t = new Array(e.size()), i = 0, n = e.size(); i < n; i++) {
          var r = e.lookup(i, Ia);
          t[i] = Xl.fromDict(r);
        }
        return t;
      };
      t.prototype.addWidget = function (e) {
        this.normalizedEntries().Kids.push(e);
      };
      t.prototype.removeWidget = function (e) {
        var t = this.Kids();
        if (!t) {
          if (0 !== e) throw new un(e, 0, 0);
          this.setKids([]);
        } else {
          if (e < 0 || e > t.size()) throw new un(e, 0, t.size());
          t.remove(e);
        }
      };
      t.prototype.normalizedEntries = function () {
        var e = this.Kids();
        if (!e) {
          e = this.dict.context.obj([this.ref]);
          this.dict.set(Ua.of("Kids"), e);
        }
        return { Kids: e };
      };
      t.fromDict = function (e, i) {
        return new t(e, i);
      };
      return t;
    })(Hl),
    Yl = (function (e) {
      i(t, e);
      function t() {
        return (null !== e && e.apply(this, arguments)) || this;
      }
      t.prototype.Opt = function () {
        return this.dict.lookupMaybe(Ua.of("Opt"), fs, ls, Fa);
      };
      t.prototype.setOpt = function (e) {
        this.dict.set(Ua.of("Opt"), this.dict.context.obj(e));
      };
      t.prototype.getExportValues = function () {
        var e = this.Opt();
        if (e) {
          if (e instanceof fs || e instanceof ls) return [e];
          for (var t = [], i = 0, n = e.size(); i < n; i++) {
            var r = e.lookup(i);
            if (r instanceof fs || r instanceof ls) t.push(r);
          }
          return t;
        }
      };
      t.prototype.removeExportValue = function (e) {
        var t = this.Opt();
        if (t)
          if (t instanceof fs || t instanceof ls) {
            if (0 !== e) throw new un(e, 0, 0);
            this.setOpt([]);
          } else {
            if (e < 0 || e > t.size()) throw new un(e, 0, t.size());
            t.remove(e);
          }
      };
      t.prototype.normalizeExportValues = function () {
        for (
          var e,
            t,
            i,
            n,
            r = null !== (e = this.getExportValues()) && void 0 !== e ? e : [],
            a = [],
            s = this.getWidgets(),
            o = 0,
            l = s.length;
          o < l;
          o++
        ) {
          var c = s[o],
            h =
              null !== (t = r[o]) && void 0 !== t
                ? t
                : ls.fromText(
                    null !==
                      (n =
                        null === (i = c.getOnValue()) || void 0 === i
                          ? void 0
                          : i.decodeText()) && void 0 !== n
                      ? n
                      : ""
                  );
          a.push(h);
        }
        this.setOpt(a);
      };
      t.prototype.addOpt = function (e, t) {
        var i;
        this.normalizeExportValues();
        var n,
          r = e.decodeText();
        if (t)
          for (
            var a =
                null !== (i = this.getExportValues()) && void 0 !== i ? i : [],
              s = 0,
              o = a.length;
            s < o;
            s++
          )
            if (a[s].decodeText() === r) n = s;
        var l = this.Opt();
        l.push(e);
        return null != n ? n : l.size() - 1;
      };
      t.prototype.addWidgetWithOpt = function (e, t, i) {
        var n = this.addOpt(t, i),
          r = Ua.of(String(n));
        this.addWidget(e);
        return r;
      };
      return t;
    })(Kl),
    Zl = (function (e) {
      i(t, e);
      function t() {
        return (null !== e && e.apply(this, arguments)) || this;
      }
      t.prototype.setValue = function (e) {
        var t;
        if (
          e !==
            (null !== (t = this.getOnValue()) && void 0 !== t
              ? t
              : Ua.of("Yes")) &&
          e !== Ua.of("Off")
        )
          throw new dn();
        this.dict.set(Ua.of("V"), e);
        for (var i = this.getWidgets(), n = 0, r = i.length; n < r; n++) {
          var a = i[n],
            s = a.getOnValue() === e ? e : Ua.of("Off");
          a.setAppearanceState(s);
        }
      };
      t.prototype.getValue = function () {
        var e = this.V();
        if (e instanceof Ua) return e;
        else return Ua.of("Off");
      };
      t.prototype.getOnValue = function () {
        var e = this.getWidgets()[0];
        return null == e ? void 0 : e.getOnValue();
      };
      t.fromDict = function (e, i) {
        return new t(e, i);
      };
      t.create = function (e) {
        var i = e.obj({ FT: "Btn", Kids: [] });
        return new t(i, e.register(i));
      };
      return t;
    })(Yl),
    Jl = function (e) {
      return 1 << e;
    };
  !(function (e) {
    e[(e.ReadOnly = Jl(0))] = "ReadOnly";
    e[(e.Required = Jl(1))] = "Required";
    e[(e.NoExport = Jl(2))] = "NoExport";
  })(e.AcroFieldFlags || (e.AcroFieldFlags = {}));
  !(function (e) {
    e[(e.NoToggleToOff = Jl(14))] = "NoToggleToOff";
    e[(e.Radio = Jl(15))] = "Radio";
    e[(e.PushButton = Jl(16))] = "PushButton";
    e[(e.RadiosInUnison = Jl(25))] = "RadiosInUnison";
  })(e.AcroButtonFlags || (e.AcroButtonFlags = {}));
  !(function (e) {
    e[(e.Multiline = Jl(12))] = "Multiline";
    e[(e.Password = Jl(13))] = "Password";
    e[(e.FileSelect = Jl(20))] = "FileSelect";
    e[(e.DoNotSpellCheck = Jl(22))] = "DoNotSpellCheck";
    e[(e.DoNotScroll = Jl(23))] = "DoNotScroll";
    e[(e.Comb = Jl(24))] = "Comb";
    e[(e.RichText = Jl(25))] = "RichText";
  })(e.AcroTextFlags || (e.AcroTextFlags = {}));
  !(function (e) {
    e[(e.Combo = Jl(17))] = "Combo";
    e[(e.Edit = Jl(18))] = "Edit";
    e[(e.Sort = Jl(19))] = "Sort";
    e[(e.MultiSelect = Jl(21))] = "MultiSelect";
    e[(e.DoNotSpellCheck = Jl(22))] = "DoNotSpellCheck";
    e[(e.CommitOnSelChange = Jl(26))] = "CommitOnSelChange";
  })(e.AcroChoiceFlags || (e.AcroChoiceFlags = {}));
  var $l = (function (t) {
      i(n, t);
      function n() {
        return (null !== t && t.apply(this, arguments)) || this;
      }
      n.prototype.setValues = function (t) {
        if (
          this.hasFlag(e.AcroChoiceFlags.Combo) &&
          !this.hasFlag(e.AcroChoiceFlags.Edit) &&
          !this.valuesAreValid(t)
        )
          throw new dn();
        if (0 === t.length) this.dict.delete(Ua.of("V"));
        if (1 === t.length) this.dict.set(Ua.of("V"), t[0]);
        if (t.length > 1) {
          if (!this.hasFlag(e.AcroChoiceFlags.MultiSelect)) throw new fn();
          this.dict.set(Ua.of("V"), this.dict.context.obj(t));
        }
        this.updateSelectedIndices(t);
      };
      n.prototype.valuesAreValid = function (e) {
        for (
          var t = this.getOptions(),
            i = function (i, n) {
              var r = e[i].decodeText();
              if (
                !t.find(function (e) {
                  return r === (e.display || e.value).decodeText();
                })
              )
                return { value: !1 };
            },
            n = 0,
            r = e.length;
          n < r;
          n++
        ) {
          var a = i(n);
          if ("object" == typeof a) return a.value;
        }
        return !0;
      };
      n.prototype.updateSelectedIndices = function (e) {
        if (e.length > 1) {
          for (
            var t = new Array(e.length),
              i = this.getOptions(),
              n = function (n, r) {
                var a = e[n].decodeText();
                t[n] = i.findIndex(function (e) {
                  return a === (e.display || e.value).decodeText();
                });
              },
              r = 0,
              a = e.length;
            r < a;
            r++
          )
            n(r);
          this.dict.set(Ua.of("I"), this.dict.context.obj(t.sort()));
        } else this.dict.delete(Ua.of("I"));
      };
      n.prototype.getValues = function () {
        var e = this.V();
        if (e instanceof fs || e instanceof ls) return [e];
        if (e instanceof Fa) {
          for (var t = [], i = 0, n = e.size(); i < n; i++) {
            var r = e.lookup(i);
            if (r instanceof fs || r instanceof ls) t.push(r);
          }
          return t;
        }
        return [];
      };
      n.prototype.Opt = function () {
        return this.dict.lookupMaybe(Ua.of("Opt"), fs, ls, Fa);
      };
      n.prototype.setOptions = function (e) {
        for (var t = new Array(e.length), i = 0, n = e.length; i < n; i++) {
          var r = e[i],
            a = r.value,
            s = r.display;
          t[i] = this.dict.context.obj([a, s || a]);
        }
        this.dict.set(Ua.of("Opt"), this.dict.context.obj(t));
      };
      n.prototype.getOptions = function () {
        var e = this.Opt();
        if (e instanceof fs || e instanceof ls)
          return [{ value: e, display: e }];
        if (e instanceof Fa) {
          for (var t = [], i = 0, n = e.size(); i < n; i++) {
            var r = e.lookup(i);
            if (r instanceof fs || r instanceof ls)
              t.push({ value: r, display: r });
            if (r instanceof Fa)
              if (r.size() > 0) {
                var a = r.lookup(0, fs, ls),
                  s = r.lookupMaybe(1, fs, ls);
                t.push({ value: a, display: s || a });
              }
          }
          return t;
        }
        return [];
      };
      return n;
    })(Kl),
    Ql = (function (t) {
      i(n, t);
      function n() {
        return (null !== t && t.apply(this, arguments)) || this;
      }
      n.fromDict = function (e, t) {
        return new n(e, t);
      };
      n.create = function (t) {
        var i = t.obj({ FT: "Ch", Ff: e.AcroChoiceFlags.Combo, Kids: [] });
        return new n(i, t.register(i));
      };
      return n;
    })($l),
    ec = (function (e) {
      i(t, e);
      function t() {
        return (null !== e && e.apply(this, arguments)) || this;
      }
      t.prototype.addField = function (e) {
        var t = this.normalizedEntries().Kids;
        null == t || t.push(e);
      };
      t.prototype.normalizedEntries = function () {
        var e = this.Kids();
        if (!e) {
          e = this.dict.context.obj([]);
          this.dict.set(Ua.of("Kids"), e);
        }
        return { Kids: e };
      };
      t.fromDict = function (e, i) {
        return new t(e, i);
      };
      t.create = function (e) {
        var i = e.obj({});
        return new t(i, e.register(i));
      };
      return t;
    })(Hl),
    tc = (function (e) {
      i(t, e);
      function t() {
        return (null !== e && e.apply(this, arguments)) || this;
      }
      t.fromDict = function (e, i) {
        return new t(e, i);
      };
      return t;
    })(Kl),
    ic = (function (e) {
      i(t, e);
      function t() {
        return (null !== e && e.apply(this, arguments)) || this;
      }
      t.prototype.MaxLen = function () {
        var e = this.dict.lookup(Ua.of("MaxLen"));
        if (e instanceof Aa) return e;
      };
      t.prototype.Q = function () {
        var e = this.dict.lookup(Ua.of("Q"));
        if (e instanceof Aa) return e;
      };
      t.prototype.setMaxLength = function (e) {
        this.dict.set(Ua.of("MaxLen"), Aa.of(e));
      };
      t.prototype.removeMaxLength = function () {
        this.dict.delete(Ua.of("MaxLen"));
      };
      t.prototype.getMaxLength = function () {
        var e;
        return null === (e = this.MaxLen()) || void 0 === e
          ? void 0
          : e.asNumber();
      };
      t.prototype.setQuadding = function (e) {
        this.dict.set(Ua.of("Q"), Aa.of(e));
      };
      t.prototype.getQuadding = function () {
        var e;
        return null === (e = this.Q()) || void 0 === e ? void 0 : e.asNumber();
      };
      t.prototype.setValue = function (e) {
        this.dict.set(Ua.of("V"), e);
      };
      t.prototype.removeValue = function () {
        this.dict.delete(Ua.of("V"));
      };
      t.prototype.getValue = function () {
        var e = this.V();
        if (e instanceof fs || e instanceof ls) return e;
      };
      t.fromDict = function (e, i) {
        return new t(e, i);
      };
      t.create = function (e) {
        var i = e.obj({ FT: "Tx", Kids: [] });
        return new t(i, e.register(i));
      };
      return t;
    })(Kl),
    nc = (function (t) {
      i(n, t);
      function n() {
        return (null !== t && t.apply(this, arguments)) || this;
      }
      n.fromDict = function (e, t) {
        return new n(e, t);
      };
      n.create = function (t) {
        var i = t.obj({
          FT: "Btn",
          Ff: e.AcroButtonFlags.PushButton,
          Kids: [],
        });
        return new n(i, t.register(i));
      };
      return n;
    })(Yl),
    rc = (function (t) {
      i(n, t);
      function n() {
        return (null !== t && t.apply(this, arguments)) || this;
      }
      n.prototype.setValue = function (e) {
        if (!this.getOnValues().includes(e) && e !== Ua.of("Off"))
          throw new dn();
        this.dict.set(Ua.of("V"), e);
        for (var t = this.getWidgets(), i = 0, n = t.length; i < n; i++) {
          var r = t[i],
            a = r.getOnValue() === e ? e : Ua.of("Off");
          r.setAppearanceState(a);
        }
      };
      n.prototype.getValue = function () {
        var e = this.V();
        if (e instanceof Ua) return e;
        else return Ua.of("Off");
      };
      n.prototype.getOnValues = function () {
        for (
          var e = this.getWidgets(), t = [], i = 0, n = e.length;
          i < n;
          i++
        ) {
          var r = e[i].getOnValue();
          if (r) t.push(r);
        }
        return t;
      };
      n.fromDict = function (e, t) {
        return new n(e, t);
      };
      n.create = function (t) {
        var i = t.obj({ FT: "Btn", Ff: e.AcroButtonFlags.Radio, Kids: [] });
        return new n(i, t.register(i));
      };
      return n;
    })(Yl),
    ac = (function (e) {
      i(t, e);
      function t() {
        return (null !== e && e.apply(this, arguments)) || this;
      }
      t.fromDict = function (e, i) {
        return new t(e, i);
      };
      t.create = function (e) {
        var i = e.obj({ FT: "Ch", Kids: [] });
        return new t(i, e.register(i));
      };
      return t;
    })($l),
    sc = function (e) {
      if (!e) return [];
      for (var t = [], i = 0, n = e.size(); i < n; i++) {
        var r = e.get(i),
          a = e.lookup(i);
        if (r instanceof Wa && a instanceof Ia) t.push([oc(a, r), r]);
      }
      return t;
    },
    oc = function (e, t) {
      if (lc(e)) return ec.fromDict(e, t);
      else return cc(e, t);
    },
    lc = function (e) {
      var t = e.lookup(Ua.of("Kids"));
      if (t instanceof Fa)
        for (var i = 0, n = t.size(); i < n; i++) {
          var r = t.lookup(i);
          if (r instanceof Ia && r.has(Ua.of("T"))) return !0;
        }
      return !1;
    },
    cc = function (e, t) {
      var i = fc(e, Ua.of("FT")),
        n = e.context.lookup(i, Ua);
      if (n === Ua.of("Btn")) return hc(e, t);
      if (n === Ua.of("Ch")) return uc(e, t);
      if (n === Ua.of("Tx")) return ic.fromDict(e, t);
      if (n === Ua.of("Sig")) return tc.fromDict(e, t);
      else return Kl.fromDict(e, t);
    },
    hc = function (t, i) {
      var n,
        r = fc(t, Ua.of("Ff")),
        a = t.context.lookupMaybe(r, Aa),
        s =
          null !== (n = null == a ? void 0 : a.asNumber()) && void 0 !== n
            ? n
            : 0;
      if (dc(s, e.AcroButtonFlags.PushButton)) return nc.fromDict(t, i);
      else if (dc(s, e.AcroButtonFlags.Radio)) return rc.fromDict(t, i);
      else return Zl.fromDict(t, i);
    },
    uc = function (t, i) {
      var n,
        r = fc(t, Ua.of("Ff")),
        a = t.context.lookupMaybe(r, Aa),
        s =
          null !== (n = null == a ? void 0 : a.asNumber()) && void 0 !== n
            ? n
            : 0;
      if (dc(s, e.AcroChoiceFlags.Combo)) return Ql.fromDict(t, i);
      else return ac.fromDict(t, i);
    },
    dc = function (e, t) {
      return 0 != (e & t);
    },
    fc = function (e, t) {
      var i;
      pc(e, function (e) {
        if (!i) i = e.get(t);
      });
      return i;
    },
    pc = function (e, t) {
      t(e);
      var i = e.lookupMaybe(Ua.of("Parent"), Ia);
      if (i) pc(i, t);
    },
    gc = (function () {
      function e(e) {
        this.dict = e;
      }
      e.prototype.Fields = function () {
        var e = this.dict.lookup(Ua.of("Fields"));
        if (e instanceof Fa) return e;
      };
      e.prototype.getFields = function () {
        for (
          var e = this.normalizedEntries().Fields,
            t = new Array(e.size()),
            i = 0,
            n = e.size();
          i < n;
          i++
        ) {
          var r = e.get(i),
            a = e.lookup(i, Ia);
          t[i] = [oc(a, r), r];
        }
        return t;
      };
      e.prototype.getAllFields = function () {
        var e = [],
          t = function (i) {
            if (i)
              for (var n = 0, r = i.length; n < r; n++) {
                var a = i[n];
                e.push(a);
                var s = a[0];
                if (s instanceof ec) t(sc(s.Kids()));
              }
          };
        t(this.getFields());
        return e;
      };
      e.prototype.addField = function (e) {
        var t = this.normalizedEntries().Fields;
        null == t || t.push(e);
      };
      e.prototype.removeField = function (e) {
        var t = e.getParent(),
          i = void 0 === t ? this.normalizedEntries().Fields : t.Kids(),
          n = null == i ? void 0 : i.indexOf(e.ref);
        if (void 0 === i || void 0 === n)
          throw new Error(
            "Tried to remove inexistent field " + e.getFullyQualifiedName()
          );
        i.remove(n);
        if (void 0 !== t && 0 === i.size()) this.removeField(t);
      };
      e.prototype.normalizedEntries = function () {
        var e = this.Fields();
        if (!e) {
          e = this.dict.context.obj([]);
          this.dict.set(Ua.of("Fields"), e);
        }
        return { Fields: e };
      };
      e.fromDict = function (t) {
        return new e(t);
      };
      e.create = function (t) {
        return new e(t.obj({ Fields: [] }));
      };
      return e;
    })(),
    mc = (function (e) {
      i(t, e);
      function t() {
        return (null !== e && e.apply(this, arguments)) || this;
      }
      t.prototype.Pages = function () {
        return this.lookup(Ua.of("Pages"), Ia);
      };
      t.prototype.AcroForm = function () {
        return this.lookupMaybe(Ua.of("AcroForm"), Ia);
      };
      t.prototype.getAcroForm = function () {
        var e = this.AcroForm();
        if (e) return gc.fromDict(e);
      };
      t.prototype.getOrCreateAcroForm = function () {
        var e = this.getAcroForm();
        if (!e) {
          e = gc.create(this.context);
          var t = this.context.register(e.dict);
          this.set(Ua.of("AcroForm"), t);
        }
        return e;
      };
      t.prototype.ViewerPreferences = function () {
        return this.lookupMaybe(Ua.of("ViewerPreferences"), Ia);
      };
      t.prototype.getViewerPreferences = function () {
        var e = this.ViewerPreferences();
        if (e) return jl.fromDict(e);
      };
      t.prototype.getOrCreateViewerPreferences = function () {
        var e = this.getViewerPreferences();
        if (!e) {
          e = jl.create(this.context);
          var t = this.context.register(e.dict);
          this.set(Ua.of("ViewerPreferences"), t);
        }
        return e;
      };
      t.prototype.insertLeafNode = function (e, t) {
        var i = this.get(Ua.of("Pages"));
        return this.Pages().insertLeafNode(e, t) || i;
      };
      t.prototype.removeLeafNode = function (e) {
        this.Pages().removeLeafNode(e);
      };
      t.withContextAndPages = function (e, i) {
        var n = new Map();
        n.set(Ua.of("Type"), Ua.of("Catalog"));
        n.set(Ua.of("Pages"), i);
        return new t(n, e);
      };
      t.fromMapWithContext = function (e, i) {
        return new t(e, i);
      };
      return t;
    })(Ia),
    vc = (function (e) {
      i(t, e);
      function t() {
        return (null !== e && e.apply(this, arguments)) || this;
      }
      t.prototype.Parent = function () {
        return this.lookup(Ua.of("Parent"));
      };
      t.prototype.Kids = function () {
        return this.lookup(Ua.of("Kids"), Fa);
      };
      t.prototype.Count = function () {
        return this.lookup(Ua.of("Count"), Aa);
      };
      t.prototype.pushTreeNode = function (e) {
        this.Kids().push(e);
      };
      t.prototype.pushLeafNode = function (e) {
        var t = this.Kids();
        this.insertLeafKid(t.size(), e);
      };
      t.prototype.insertLeafNode = function (e, i) {
        var n = this.Kids(),
          r = this.Count().asNumber();
        if (i > r) throw new cn(i, r);
        for (var a = i, s = 0, o = n.size(); s < o; s++) {
          if (0 === a) {
            this.insertLeafKid(s, e);
            return;
          }
          var l = n.get(s),
            c = this.context.lookup(l);
          if (c instanceof t)
            if (c.Count().asNumber() > a) return c.insertLeafNode(e, a) || l;
            else a -= c.Count().asNumber();
          if (c instanceof $a) a -= 1;
        }
        if (0 !== a) throw new hn(i, "insertLeafNode");
        else this.insertLeafKid(n.size(), e);
      };
      t.prototype.removeLeafNode = function (e, i) {
        if (void 0 === i) i = !0;
        var n = this.Kids(),
          r = this.Count().asNumber();
        if (e >= r) throw new cn(e, r);
        for (var a = e, s = 0, o = n.size(); s < o; s++) {
          var l = n.get(s),
            c = this.context.lookup(l);
          if (c instanceof t)
            if (c.Count().asNumber() > a) {
              c.removeLeafNode(a, i);
              if (i && 0 === c.Kids().size()) n.remove(s);
              return;
            } else a -= c.Count().asNumber();
          if (c instanceof $a)
            if (0 === a) {
              this.removeKid(s);
              return;
            } else a -= 1;
        }
        throw new hn(e, "removeLeafNode");
      };
      t.prototype.ascend = function (e) {
        e(this);
        var t = this.Parent();
        if (t) t.ascend(e);
      };
      t.prototype.traverse = function (e) {
        for (var i = this.Kids(), n = 0, r = i.size(); n < r; n++) {
          var a = i.get(n),
            s = this.context.lookup(a);
          if (s instanceof t) s.traverse(e);
          e(s, a);
        }
      };
      t.prototype.insertLeafKid = function (e, t) {
        var i = this.Kids();
        this.ascend(function (e) {
          var t = e.Count().asNumber() + 1;
          e.set(Ua.of("Count"), Aa.of(t));
        });
        i.insert(e, t);
      };
      t.prototype.removeKid = function (e) {
        var t = this.Kids();
        if (t.lookup(e) instanceof $a)
          this.ascend(function (e) {
            var t = e.Count().asNumber() - 1;
            e.set(Ua.of("Count"), Aa.of(t));
          });
        t.remove(e);
      };
      t.withContext = function (e, i) {
        var n = new Map();
        n.set(Ua.of("Type"), Ua.of("Pages"));
        n.set(Ua.of("Kids"), e.obj([]));
        n.set(Ua.of("Count"), e.obj(0));
        if (i) n.set(Ua.of("Parent"), i);
        return new t(n, e);
      };
      t.fromMapWithContext = function (e, i) {
        return new t(e, i);
      };
      return t;
    })(Ia),
    bc = new Uint8Array(256);
  bc[An.Zero] = 1;
  bc[An.One] = 1;
  bc[An.Two] = 1;
  bc[An.Three] = 1;
  bc[An.Four] = 1;
  bc[An.Five] = 1;
  bc[An.Six] = 1;
  bc[An.Seven] = 1;
  bc[An.Eight] = 1;
  bc[An.Nine] = 1;
  var yc = new Uint8Array(256);
  yc[An.Period] = 1;
  yc[An.Plus] = 1;
  yc[An.Minus] = 1;
  for (var wc = new Uint8Array(256), xc = 0; xc < 256; xc++)
    wc[xc] = bc[xc] || yc[xc] ? 1 : 0;
  var kc = An.Newline,
    Cc = An.CarriageReturn,
    Sc = (function () {
      function e(e, t) {
        if (void 0 === t) t = !1;
        this.bytes = e;
        this.capNumbers = t;
      }
      e.prototype.parseRawInt = function () {
        for (var e = ""; !this.bytes.done(); ) {
          var t = this.bytes.peek();
          if (!bc[t]) break;
          e += y(this.bytes.next());
        }
        var i = Number(e);
        if (!e || !isFinite(i)) throw new mn(this.bytes.position(), e);
        return i;
      };
      e.prototype.parseRawNumber = function () {
        for (var e = ""; !this.bytes.done(); ) {
          var t = this.bytes.peek();
          if (!wc[t]) break;
          e += y(this.bytes.next());
          if (t === An.Period) break;
        }
        for (; !this.bytes.done(); ) {
          t = this.bytes.peek();
          if (!bc[t]) break;
          e += y(this.bytes.next());
        }
        var i = Number(e);
        if (!e || !isFinite(i)) throw new mn(this.bytes.position(), e);
        if (i > Number.MAX_SAFE_INTEGER)
          if (this.capNumbers) return Number.MAX_SAFE_INTEGER;
        return i;
      };
      e.prototype.skipWhitespace = function () {
        for (; !this.bytes.done() && Oa[this.bytes.peek()]; ) this.bytes.next();
      };
      e.prototype.skipLine = function () {
        for (; !this.bytes.done(); ) {
          var e = this.bytes.peek();
          if (e === kc || e === Cc) return;
          this.bytes.next();
        }
      };
      e.prototype.skipComment = function () {
        if (this.bytes.peek() !== An.Percent) return !1;
        for (; !this.bytes.done(); ) {
          var e = this.bytes.peek();
          if (e === kc || e === Cc) return !0;
          this.bytes.next();
        }
        return !0;
      };
      e.prototype.skipWhitespaceAndComments = function () {
        this.skipWhitespace();
        for (; this.skipComment(); ) this.skipWhitespace();
      };
      e.prototype.matchKeyword = function (e) {
        for (var t = this.bytes.offset(), i = 0, n = e.length; i < n; i++)
          if (this.bytes.done() || this.bytes.next() !== e[i]) {
            this.bytes.moveTo(t);
            return !1;
          }
        return !0;
      };
      return e;
    })(),
    _c = (function () {
      function e(e) {
        this.idx = 0;
        this.line = 0;
        this.column = 0;
        this.bytes = e;
        this.length = this.bytes.length;
      }
      e.prototype.moveTo = function (e) {
        this.idx = e;
      };
      e.prototype.next = function () {
        var e = this.bytes[this.idx++];
        if (e === An.Newline) {
          this.line += 1;
          this.column = 0;
        } else this.column += 1;
        return e;
      };
      e.prototype.assertNext = function (e) {
        if (this.peek() !== e) throw new bn(this.position(), e, this.peek());
        return this.next();
      };
      e.prototype.peek = function () {
        return this.bytes[this.idx];
      };
      e.prototype.peekAhead = function (e) {
        return this.bytes[this.idx + e];
      };
      e.prototype.peekAt = function (e) {
        return this.bytes[e];
      };
      e.prototype.done = function () {
        return this.idx >= this.length;
      };
      e.prototype.offset = function () {
        return this.idx;
      };
      e.prototype.slice = function (e, t) {
        return this.bytes.slice(e, t);
      };
      e.prototype.position = function () {
        return { line: this.line, column: this.column, offset: this.idx };
      };
      e.of = function (t) {
        return new e(t);
      };
      e.fromPDFRawStream = function (t) {
        return e.of(Ll(t).decode());
      };
      return e;
    })(),
    Ac = An.Space,
    Fc = An.CarriageReturn,
    Tc = An.Newline,
    Pc = [An.s, An.t, An.r, An.e, An.a, An.m],
    Ec = [An.e, An.n, An.d, An.s, An.t, An.r, An.e, An.a, An.m],
    Ic = {
      header: [An.Percent, An.P, An.D, An.F, An.Dash],
      eof: [An.Percent, An.Percent, An.E, An.O, An.F],
      obj: [An.o, An.b, An.j],
      endobj: [An.e, An.n, An.d, An.o, An.b, An.j],
      xref: [An.x, An.r, An.e, An.f],
      trailer: [An.t, An.r, An.a, An.i, An.l, An.e, An.r],
      startxref: [An.s, An.t, An.a, An.r, An.t, An.x, An.r, An.e, An.f],
      true: [An.t, An.r, An.u, An.e],
      false: [An.f, An.a, An.l, An.s, An.e],
      null: [An.n, An.u, An.l, An.l],
      stream: Pc,
      streamEOF1: s(Pc, [Ac, Fc, Tc]),
      streamEOF2: s(Pc, [Fc, Tc]),
      streamEOF3: s(Pc, [Fc]),
      streamEOF4: s(Pc, [Tc]),
      endstream: Ec,
      EOF1endstream: s([Fc, Tc], Ec),
      EOF2endstream: s([Fc], Ec),
      EOF3endstream: s([Tc], Ec),
    },
    Dc = (function (e) {
      i(t, e);
      function t(t, i, n) {
        if (void 0 === n) n = !1;
        var r = e.call(this, t, n) || this;
        r.context = i;
        return r;
      }
      t.prototype.parseObject = function () {
        this.skipWhitespaceAndComments();
        if (this.matchKeyword(Ic.true)) return Pa.True;
        if (this.matchKeyword(Ic.false)) return Pa.False;
        if (this.matchKeyword(Ic.null)) return Ea;
        var e = this.bytes.peek();
        if (e === An.LessThan && this.bytes.peekAhead(1) === An.LessThan)
          return this.parseDictOrStream();
        if (e === An.LessThan) return this.parseHexString();
        if (e === An.LeftParen) return this.parseString();
        if (e === An.ForwardSlash) return this.parseName();
        if (e === An.LeftSquareBracket) return this.parseArray();
        if (wc[e]) return this.parseNumberOrRef();
        throw new yn(this.bytes.position(), e);
      };
      t.prototype.parseNumberOrRef = function () {
        var e = this.parseRawNumber();
        this.skipWhitespaceAndComments();
        var t = this.bytes.offset();
        if (bc[this.bytes.peek()]) {
          var i = this.parseRawNumber();
          this.skipWhitespaceAndComments();
          if (this.bytes.peek() === An.R) {
            this.bytes.assertNext(An.R);
            return Wa.of(e, i);
          }
        }
        this.bytes.moveTo(t);
        return Aa.of(e);
      };
      t.prototype.parseHexString = function () {
        var e = "";
        this.bytes.assertNext(An.LessThan);
        for (; !this.bytes.done() && this.bytes.peek() !== An.GreaterThan; )
          e += y(this.bytes.next());
        this.bytes.assertNext(An.GreaterThan);
        return ls.of(e);
      };
      t.prototype.parseString = function () {
        for (var e = 0, t = !1, i = ""; !this.bytes.done(); ) {
          var n = this.bytes.next();
          i += y(n);
          if (!t) {
            if (n === An.LeftParen) e += 1;
            if (n === An.RightParen) e -= 1;
          }
          if (n === An.BackSlash) t = !t;
          else if (t) t = !1;
          if (0 === e) return fs.of(i.substring(1, i.length - 1));
        }
        throw new kn(this.bytes.position());
      };
      t.prototype.parseName = function () {
        this.bytes.assertNext(An.ForwardSlash);
        for (var e = ""; !this.bytes.done(); ) {
          var t = this.bytes.peek();
          if (Oa[t] || Da[t]) break;
          e += y(t);
          this.bytes.next();
        }
        return Ua.of(e);
      };
      t.prototype.parseArray = function () {
        this.bytes.assertNext(An.LeftSquareBracket);
        this.skipWhitespaceAndComments();
        for (
          var e = Fa.withContext(this.context);
          this.bytes.peek() !== An.RightSquareBracket;

        ) {
          var t = this.parseObject();
          e.push(t);
          this.skipWhitespaceAndComments();
        }
        this.bytes.assertNext(An.RightSquareBracket);
        return e;
      };
      t.prototype.parseDict = function () {
        this.bytes.assertNext(An.LessThan);
        this.bytes.assertNext(An.LessThan);
        this.skipWhitespaceAndComments();
        for (
          var e = new Map();
          !this.bytes.done() &&
          this.bytes.peek() !== An.GreaterThan &&
          this.bytes.peekAhead(1) !== An.GreaterThan;

        ) {
          var t = this.parseName(),
            i = this.parseObject();
          e.set(t, i);
          this.skipWhitespaceAndComments();
        }
        this.skipWhitespaceAndComments();
        this.bytes.assertNext(An.GreaterThan);
        this.bytes.assertNext(An.GreaterThan);
        var n = e.get(Ua.of("Type"));
        if (n === Ua.of("Catalog"))
          return mc.fromMapWithContext(e, this.context);
        else if (n === Ua.of("Pages"))
          return vc.fromMapWithContext(e, this.context);
        else if (n === Ua.of("Page"))
          return $a.fromMapWithContext(e, this.context);
        else return Ia.fromMapWithContext(e, this.context);
      };
      t.prototype.parseDictOrStream = function () {
        var e = this.bytes.position(),
          t = this.parseDict();
        this.skipWhitespaceAndComments();
        if (
          !(
            this.matchKeyword(Ic.streamEOF1) ||
            this.matchKeyword(Ic.streamEOF2) ||
            this.matchKeyword(Ic.streamEOF3) ||
            this.matchKeyword(Ic.streamEOF4) ||
            this.matchKeyword(Ic.stream)
          )
        )
          return t;
        var i,
          n = this.bytes.offset(),
          r = t.get(Ua.of("Length"));
        if (r instanceof Aa) {
          i = n + r.asNumber();
          this.bytes.moveTo(i);
          this.skipWhitespaceAndComments();
          if (!this.matchKeyword(Ic.endstream)) {
            this.bytes.moveTo(n);
            i = this.findEndOfStreamFallback(e);
          }
        } else i = this.findEndOfStreamFallback(e);
        var a = this.bytes.slice(n, i);
        return ja.of(t, a);
      };
      t.prototype.findEndOfStreamFallback = function (e) {
        for (var t = 1, i = this.bytes.offset(); !this.bytes.done(); ) {
          i = this.bytes.offset();
          if (this.matchKeyword(Ic.stream)) t += 1;
          else if (
            this.matchKeyword(Ic.EOF1endstream) ||
            this.matchKeyword(Ic.EOF2endstream) ||
            this.matchKeyword(Ic.EOF3endstream) ||
            this.matchKeyword(Ic.endstream)
          )
            t -= 1;
          else this.bytes.next();
          if (0 === t) break;
        }
        if (0 !== t) throw new xn(e);
        return i;
      };
      t.forBytes = function (e, i, n) {
        return new t(_c.of(e), i, n);
      };
      t.forByteStream = function (e, i, n) {
        if (void 0 === n) n = !1;
        return new t(e, i, n);
      };
      return t;
    })(Sc),
    Oc = (function (e) {
      i(t, e);
      function t(t, i) {
        var n = e.call(this, _c.fromPDFRawStream(t), t.dict.context) || this,
          r = t.dict;
        n.alreadyParsed = !1;
        n.shouldWaitForTick =
          i ||
          function () {
            return !1;
          };
        n.firstOffset = r.lookup(Ua.of("First"), Aa).asNumber();
        n.objectCount = r.lookup(Ua.of("N"), Aa).asNumber();
        return n;
      }
      t.prototype.parseIntoContext = function () {
        return r(this, void 0, void 0, function () {
          var e, t, i, n, r, s, o, l;
          return a(this, function (a) {
            switch (a.label) {
              case 0:
                if (this.alreadyParsed)
                  throw new tn("PDFObjectStreamParser", "parseIntoContext");
                this.alreadyParsed = !0;
                e = this.parseOffsetsAndObjectNumbers();
                (t = 0), (i = e.length);
                a.label = 1;
              case 1:
                if (!(t < i)) return [3, 4];
                (n = e[t]), (r = n.objectNumber), (s = n.offset);
                this.bytes.moveTo(this.firstOffset + s);
                o = this.parseObject();
                l = Wa.of(r, 0);
                this.context.assign(l, o);
                if (!this.shouldWaitForTick()) return [3, 3];
                else return [4, Y()];
              case 2:
                a.sent();
                a.label = 3;
              case 3:
                t++;
                return [3, 1];
              case 4:
                return [2];
            }
          });
        });
      };
      t.prototype.parseOffsetsAndObjectNumbers = function () {
        for (var e = [], t = 0, i = this.objectCount; t < i; t++) {
          this.skipWhitespaceAndComments();
          var n = this.parseRawInt();
          this.skipWhitespaceAndComments();
          var r = this.parseRawInt();
          e.push({ objectNumber: n, offset: r });
        }
        return e;
      };
      t.forStream = function (e, i) {
        return new t(e, i);
      };
      return t;
    })(Dc),
    Rc = (function () {
      function e(e) {
        this.alreadyParsed = !1;
        this.dict = e.dict;
        this.bytes = _c.fromPDFRawStream(e);
        this.context = this.dict.context;
        var t = this.dict.lookup(Ua.of("Size"), Aa),
          i = this.dict.lookup(Ua.of("Index"));
        if (i instanceof Fa) {
          this.subsections = [];
          for (var n = 0, r = i.size(); n < r; n += 2) {
            var a = i.lookup(n + 0, Aa).asNumber(),
              s = i.lookup(n + 1, Aa).asNumber();
            this.subsections.push({ firstObjectNumber: a, length: s });
          }
        } else
          this.subsections = [{ firstObjectNumber: 0, length: t.asNumber() }];
        var o = this.dict.lookup(Ua.of("W"), Fa);
        this.byteWidths = [-1, -1, -1];
        for (n = 0, r = o.size(); n < r; n++)
          this.byteWidths[n] = o.lookup(n, Aa).asNumber();
      }
      e.prototype.parseIntoContext = function () {
        if (this.alreadyParsed)
          throw new tn("PDFXRefStreamParser", "parseIntoContext");
        this.alreadyParsed = !0;
        this.context.trailerInfo = {
          Root: this.dict.get(Ua.of("Root")),
          Encrypt: this.dict.get(Ua.of("Encrypt")),
          Info: this.dict.get(Ua.of("Info")),
          ID: this.dict.get(Ua.of("ID")),
        };
        return this.parseEntries();
      };
      e.prototype.parseEntries = function () {
        for (
          var e = [],
            t = this.byteWidths,
            i = t[0],
            n = t[1],
            r = t[2],
            a = 0,
            s = this.subsections.length;
          a < s;
          a++
        )
          for (
            var o = this.subsections[a],
              l = o.firstObjectNumber,
              c = o.length,
              h = 0;
            h < c;
            h++
          ) {
            for (var u = 0, d = 0, f = i; d < f; d++)
              u = (u << 8) | this.bytes.next();
            var p = 0;
            for (d = 0, f = n; d < f; d++) p = (p << 8) | this.bytes.next();
            var g = 0;
            for (d = 0, f = r; d < f; d++) g = (g << 8) | this.bytes.next();
            if (0 === i) u = 1;
            var m = l + h,
              v = {
                ref: Wa.of(m, g),
                offset: p,
                deleted: 0 === u,
                inObjectStream: 2 === u,
              };
            e.push(v);
          }
        return e;
      };
      e.forStream = function (t) {
        return new e(t);
      };
      return e;
    })(),
    Nc = (function (e) {
      i(t, e);
      function t(t, i, n, r) {
        if (void 0 === i) i = 1 / 0;
        if (void 0 === n) n = !1;
        if (void 0 === r) r = !1;
        var a = e.call(this, _c.of(t), Ja.create(), r) || this;
        a.alreadyParsed = !1;
        a.parsedObjects = 0;
        a.shouldWaitForTick = function () {
          a.parsedObjects += 1;
          return a.parsedObjects % a.objectsPerTick == 0;
        };
        a.objectsPerTick = i;
        a.throwOnInvalidObject = n;
        return a;
      }
      t.prototype.parseDocument = function () {
        return r(this, void 0, void 0, function () {
          var e, t;
          return a(this, function (i) {
            switch (i.label) {
              case 0:
                if (this.alreadyParsed)
                  throw new tn("PDFParser", "parseDocument");
                this.alreadyParsed = !0;
                this.context.header = this.parseHeader();
                i.label = 1;
              case 1:
                if (this.bytes.done()) return [3, 3];
                else return [4, this.parseDocumentSection()];
              case 2:
                i.sent();
                if ((t = this.bytes.offset()) === e)
                  throw new Cn(this.bytes.position());
                e = t;
                return [3, 1];
              case 3:
                this.maybeRecoverRoot();
                if (this.context.lookup(Wa.of(0)))
                  this.context.delete(Wa.of(0));
                return [2, this.context];
            }
          });
        });
      };
      t.prototype.maybeRecoverRoot = function () {
        var e = function (e) {
          return (
            e instanceof Ia && e.lookup(Ua.of("Type")) === Ua.of("Catalog")
          );
        };
        if (!e(this.context.lookup(this.context.trailerInfo.Root)))
          for (
            var t = this.context.enumerateIndirectObjects(),
              i = 0,
              n = t.length;
            i < n;
            i++
          ) {
            var r = t[i],
              a = r[0];
            if (e(r[1])) this.context.trailerInfo.Root = a;
          }
      };
      t.prototype.parseHeader = function () {
        for (; !this.bytes.done(); ) {
          if (this.matchKeyword(Ic.header)) {
            var e = this.parseRawInt();
            this.bytes.assertNext(An.Period);
            var t = this.parseRawInt(),
              i = Sa.forVersion(e, t);
            this.skipBinaryHeaderComment();
            return i;
          }
          this.bytes.next();
        }
        throw new Sn(this.bytes.position());
      };
      t.prototype.parseIndirectObjectHeader = function () {
        this.skipWhitespaceAndComments();
        var e = this.parseRawInt();
        this.skipWhitespaceAndComments();
        var t = this.parseRawInt();
        this.skipWhitespaceAndComments();
        if (!this.matchKeyword(Ic.obj))
          throw new _n(this.bytes.position(), Ic.obj);
        return Wa.of(e, t);
      };
      t.prototype.matchIndirectObjectHeader = function () {
        var e = this.bytes.offset();
        try {
          this.parseIndirectObjectHeader();
          return !0;
        } catch (t) {
          this.bytes.moveTo(e);
          return !1;
        }
      };
      t.prototype.parseIndirectObject = function () {
        return r(this, void 0, void 0, function () {
          var e, t;
          return a(this, function (i) {
            switch (i.label) {
              case 0:
                e = this.parseIndirectObjectHeader();
                this.skipWhitespaceAndComments();
                t = this.parseObject();
                this.skipWhitespaceAndComments();
                this.matchKeyword(Ic.endobj);
                if (
                  !(
                    t instanceof ja &&
                    t.dict.lookup(Ua.of("Type")) === Ua.of("ObjStm")
                  )
                )
                  return [3, 2];
                else
                  return [
                    4,
                    Oc.forStream(t, this.shouldWaitForTick).parseIntoContext(),
                  ];
              case 1:
                i.sent();
                return [3, 3];
              case 2:
                if (
                  t instanceof ja &&
                  t.dict.lookup(Ua.of("Type")) === Ua.of("XRef")
                )
                  Rc.forStream(t).parseIntoContext();
                else this.context.assign(e, t);
                i.label = 3;
              case 3:
                return [2, e];
            }
          });
        });
      };
      t.prototype.tryToParseInvalidIndirectObject = function () {
        var e = this.bytes.position(),
          t = "Trying to parse invalid object: " + JSON.stringify(e) + ")";
        if (this.throwOnInvalidObject) throw new Error(t);
        var i = this.parseIndirectObjectHeader();
        this.skipWhitespaceAndComments();
        for (var n = this.bytes.offset(), r = !0; !this.bytes.done(); ) {
          if (this.matchKeyword(Ic.endobj)) r = !1;
          if (!r) break;
          this.bytes.next();
        }
        if (r) throw new wn(e);
        var a = this.bytes.offset() - Ic.endobj.length,
          s = as.of(this.bytes.slice(n, a));
        this.context.assign(i, s);
        return i;
      };
      t.prototype.parseIndirectObjects = function () {
        return r(this, void 0, void 0, function () {
          var e;
          return a(this, function (t) {
            switch (t.label) {
              case 0:
                this.skipWhitespaceAndComments();
                t.label = 1;
              case 1:
                if (this.bytes.done() || !bc[this.bytes.peek()]) return [3, 8];
                e = this.bytes.offset();
                t.label = 2;
              case 2:
                t.trys.push([2, 4, , 5]);
                return [4, this.parseIndirectObject()];
              case 3:
                t.sent();
                return [3, 5];
              case 4:
                t.sent();
                this.bytes.moveTo(e);
                this.tryToParseInvalidIndirectObject();
                return [3, 5];
              case 5:
                this.skipWhitespaceAndComments();
                this.skipJibberish();
                if (!this.shouldWaitForTick()) return [3, 7];
                else return [4, Y()];
              case 6:
                t.sent();
                t.label = 7;
              case 7:
                return [3, 1];
              case 8:
                return [2];
            }
          });
        });
      };
      t.prototype.maybeParseCrossRefSection = function () {
        this.skipWhitespaceAndComments();
        if (this.matchKeyword(Ic.xref)) {
          this.skipWhitespaceAndComments();
          for (
            var e = -1, t = es.createEmpty();
            !this.bytes.done() && bc[this.bytes.peek()];

          ) {
            var i = this.parseRawInt();
            this.skipWhitespaceAndComments();
            var n = this.parseRawInt();
            this.skipWhitespaceAndComments();
            var r = this.bytes.peek();
            if (r === An.n || r === An.f) {
              var a = Wa.of(e, n);
              if (this.bytes.next() === An.n) t.addEntry(a, i);
              else t.addDeletedEntry(a, i);
              e += 1;
            } else e = i;
            this.skipWhitespaceAndComments();
          }
          return t;
        }
      };
      t.prototype.maybeParseTrailerDict = function () {
        this.skipWhitespaceAndComments();
        if (this.matchKeyword(Ic.trailer)) {
          this.skipWhitespaceAndComments();
          var e = this.parseDict(),
            t = this.context;
          t.trailerInfo = {
            Root: e.get(Ua.of("Root")) || t.trailerInfo.Root,
            Encrypt: e.get(Ua.of("Encrypt")) || t.trailerInfo.Encrypt,
            Info: e.get(Ua.of("Info")) || t.trailerInfo.Info,
            ID: e.get(Ua.of("ID")) || t.trailerInfo.ID,
          };
        }
      };
      t.prototype.maybeParseTrailer = function () {
        this.skipWhitespaceAndComments();
        if (this.matchKeyword(Ic.startxref)) {
          this.skipWhitespaceAndComments();
          var e = this.parseRawInt();
          this.skipWhitespace();
          this.matchKeyword(Ic.eof);
          this.skipWhitespaceAndComments();
          this.matchKeyword(Ic.eof);
          this.skipWhitespaceAndComments();
          return ts.forLastCrossRefSectionOffset(e);
        }
      };
      t.prototype.parseDocumentSection = function () {
        return r(this, void 0, void 0, function () {
          return a(this, function (e) {
            switch (e.label) {
              case 0:
                return [4, this.parseIndirectObjects()];
              case 1:
                e.sent();
                this.maybeParseCrossRefSection();
                this.maybeParseTrailerDict();
                this.maybeParseTrailer();
                this.skipJibberish();
                return [2];
            }
          });
        });
      };
      t.prototype.skipJibberish = function () {
        this.skipWhitespaceAndComments();
        for (; !this.bytes.done(); ) {
          var e = this.bytes.offset(),
            t = this.bytes.peek();
          if (t >= An.Space && t <= An.Tilde)
            if (
              this.matchKeyword(Ic.xref) ||
              this.matchKeyword(Ic.trailer) ||
              this.matchKeyword(Ic.startxref) ||
              this.matchIndirectObjectHeader()
            ) {
              this.bytes.moveTo(e);
              break;
            }
          this.bytes.next();
        }
      };
      t.prototype.skipBinaryHeaderComment = function () {
        this.skipWhitespaceAndComments();
        try {
          var e = this.bytes.offset();
          this.parseIndirectObjectHeader();
          this.bytes.moveTo(e);
        } catch (e) {
          this.bytes.next();
          this.skipWhitespaceAndComments();
        }
      };
      t.forBytesWithOptions = function (e, i, n, r) {
        return new t(e, i, n, r);
      };
      return t;
    })(Dc),
    Mc = function (e) {
      return 1 << e;
    };
  !(function (e) {
    e[(e.Invisible = Mc(0))] = "Invisible";
    e[(e.Hidden = Mc(1))] = "Hidden";
    e[(e.Print = Mc(2))] = "Print";
    e[(e.NoZoom = Mc(3))] = "NoZoom";
    e[(e.NoRotate = Mc(4))] = "NoRotate";
    e[(e.NoView = Mc(5))] = "NoView";
    e[(e.ReadOnly = Mc(6))] = "ReadOnly";
    e[(e.Locked = Mc(7))] = "Locked";
    e[(e.ToggleNoView = Mc(8))] = "ToggleNoView";
    e[(e.LockedContents = Mc(9))] = "LockedContents";
  })(e.AnnotationFlags || (e.AnnotationFlags = {}));
  var Bc = function (e) {
      return e instanceof Ua ? e : Ua.of(e);
    },
    Lc = function (e) {
      return e instanceof Aa ? e : Aa.of(e);
    },
    Uc = function (e) {
      return e instanceof Aa ? e.asNumber() : e;
    };
  !(function (e) {
    e.Degrees = "degrees";
    e.Radians = "radians";
  })(e.RotationTypes || (e.RotationTypes = {}));
  var zc = function (t) {
      Li(t, "degreeAngle", ["number"]);
      return { type: e.RotationTypes.Degrees, angle: t };
    },
    jc = e.RotationTypes.Radians,
    qc = e.RotationTypes.Degrees,
    Hc = function (e) {
      return (e * Math.PI) / 180;
    },
    Wc = function (e) {
      return (180 * e) / Math.PI;
    },
    Gc = function (e) {
      return e.type === jc
        ? e.angle
        : e.type === qc
        ? Hc(e.angle)
        : fe("Invalid rotation: " + JSON.stringify(e));
    },
    Vc = function (e) {
      return e.type === jc
        ? Wc(e.angle)
        : e.type === qc
        ? e.angle
        : fe("Invalid rotation: " + JSON.stringify(e));
    },
    Xc = function (e) {
      if (void 0 === e) e = 0;
      var t = (e / 90) % 4;
      if (0 === t) return 0;
      if (1 === t) return 90;
      if (2 === t) return 180;
      if (3 === t) return 270;
      else return 0;
    },
    Kc = function (e, t) {
      if (void 0 === t) t = 0;
      var i = Xc(t);
      return 90 === i || 270 === i
        ? { width: e.height, height: e.width }
        : { width: e.width, height: e.height };
    },
    Yc = function (e, t, i) {
      if (void 0 === t) t = 0;
      if (void 0 === i) i = 0;
      var n = e.x,
        r = e.y,
        a = e.width,
        s = e.height,
        o = Xc(i),
        l = t / 2;
      if (0 === o) return { x: n - l, y: r - l, width: a, height: s };
      else if (90 === o) return { x: n - s + l, y: r - l, width: s, height: a };
      else if (180 === o)
        return { x: n - a + l, y: r - s + l, width: a, height: s };
      else if (270 === o)
        return { x: n - l, y: r - a + l, width: s, height: a };
      else return { x: n - l, y: r - l, width: a, height: s };
    },
    Zc = function () {
      return Ga.of(Xa.ClipNonZero);
    },
    Jc = Math.cos,
    $c = Math.sin,
    Qc = Math.tan,
    eh = function (e, t, i, n, r, a) {
      return Ga.of(Xa.ConcatTransformationMatrix, [
        Lc(e),
        Lc(t),
        Lc(i),
        Lc(n),
        Lc(r),
        Lc(a),
      ]);
    },
    th = function (e, t) {
      return eh(1, 0, 0, 1, e, t);
    },
    ih = function (e, t) {
      return eh(e, 0, 0, t, 0, 0);
    },
    nh = function (e) {
      return eh(Jc(Uc(e)), $c(Uc(e)), -$c(Uc(e)), Jc(Uc(e)), 0, 0);
    },
    rh = function (e) {
      return nh(Hc(Uc(e)));
    },
    ah = function (e, t) {
      return eh(1, Qc(Uc(e)), Qc(Uc(t)), 1, 0, 0);
    },
    sh = function (e, t) {
      return Ga.of(Xa.SetLineDashPattern, [
        "[" + e.map(Lc).join(" ") + "]",
        Lc(t),
      ]);
    };
  !(function (e) {
    e[(e.Butt = 0)] = "Butt";
    e[(e.Round = 1)] = "Round";
    e[(e.Projecting = 2)] = "Projecting";
  })(e.LineCapStyle || (e.LineCapStyle = {}));
  var oh = function (e) {
    return Ga.of(Xa.SetLineCapStyle, [Lc(e)]);
  };
  !(function (e) {
    e[(e.Miter = 0)] = "Miter";
    e[(e.Round = 1)] = "Round";
    e[(e.Bevel = 2)] = "Bevel";
  })(e.LineJoinStyle || (e.LineJoinStyle = {}));
  var lh = function (e) {
      return Ga.of(Xa.SetGraphicsStateParams, [Bc(e)]);
    },
    ch = function () {
      return Ga.of(Xa.PushGraphicsState);
    },
    hh = function () {
      return Ga.of(Xa.PopGraphicsState);
    },
    uh = function (e) {
      return Ga.of(Xa.SetLineWidth, [Lc(e)]);
    },
    dh = function (e, t, i, n, r, a) {
      return Ga.of(Xa.AppendBezierCurve, [
        Lc(e),
        Lc(t),
        Lc(i),
        Lc(n),
        Lc(r),
        Lc(a),
      ]);
    },
    fh = function (e, t, i, n) {
      return Ga.of(Xa.CurveToReplicateInitialPoint, [
        Lc(e),
        Lc(t),
        Lc(i),
        Lc(n),
      ]);
    },
    ph = function () {
      return Ga.of(Xa.ClosePath);
    },
    gh = function (e, t) {
      return Ga.of(Xa.MoveTo, [Lc(e), Lc(t)]);
    },
    mh = function (e, t) {
      return Ga.of(Xa.LineTo, [Lc(e), Lc(t)]);
    },
    vh = function (e, t, i, n) {
      return Ga.of(Xa.AppendRectangle, [Lc(e), Lc(t), Lc(i), Lc(n)]);
    },
    bh = function () {
      return Ga.of(Xa.StrokePath);
    },
    yh = function () {
      return Ga.of(Xa.FillNonZero);
    },
    wh = function () {
      return Ga.of(Xa.FillNonZeroAndStroke);
    },
    xh = function () {
      return Ga.of(Xa.EndPath);
    },
    kh = function () {
      return Ga.of(Xa.NextLine);
    },
    Ch = function (e) {
      return Ga.of(Xa.ShowText, [e]);
    },
    Sh = function () {
      return Ga.of(Xa.BeginText);
    },
    _h = function () {
      return Ga.of(Xa.EndText);
    },
    Ah = function (e, t) {
      return Ga.of(Xa.SetFontAndSize, [Bc(e), Lc(t)]);
    },
    Fh = function (e) {
      return Ga.of(Xa.SetTextLineHeight, [Lc(e)]);
    };
  !(function (e) {
    e[(e.Fill = 0)] = "Fill";
    e[(e.Outline = 1)] = "Outline";
    e[(e.FillAndOutline = 2)] = "FillAndOutline";
    e[(e.Invisible = 3)] = "Invisible";
    e[(e.FillAndClip = 4)] = "FillAndClip";
    e[(e.OutlineAndClip = 5)] = "OutlineAndClip";
    e[(e.FillAndOutlineAndClip = 6)] = "FillAndOutlineAndClip";
    e[(e.Clip = 7)] = "Clip";
  })(e.TextRenderingMode || (e.TextRenderingMode = {}));
  var Th = function (e, t, i, n, r, a) {
      return Ga.of(Xa.SetTextMatrix, [
        Lc(e),
        Lc(t),
        Lc(i),
        Lc(n),
        Lc(r),
        Lc(a),
      ]);
    },
    Ph = function (e, t, i, n, r) {
      return Th(
        Jc(Uc(e)),
        $c(Uc(e)) + Qc(Uc(t)),
        -$c(Uc(e)) + Qc(Uc(i)),
        Jc(Uc(e)),
        n,
        r
      );
    },
    Eh = function (e) {
      return Ga.of(Xa.DrawObject, [Bc(e)]);
    },
    Ih = function (e) {
      return Ga.of(Xa.NonStrokingColorGray, [Lc(e)]);
    },
    Dh = function (e) {
      return Ga.of(Xa.StrokingColorGray, [Lc(e)]);
    },
    Oh = function (e, t, i) {
      return Ga.of(Xa.NonStrokingColorRgb, [Lc(e), Lc(t), Lc(i)]);
    },
    Rh = function (e, t, i) {
      return Ga.of(Xa.StrokingColorRgb, [Lc(e), Lc(t), Lc(i)]);
    },
    Nh = function (e, t, i, n) {
      return Ga.of(Xa.NonStrokingColorCmyk, [Lc(e), Lc(t), Lc(i), Lc(n)]);
    },
    Mh = function (e, t, i, n) {
      return Ga.of(Xa.StrokingColorCmyk, [Lc(e), Lc(t), Lc(i), Lc(n)]);
    },
    Bh = function (e) {
      return Ga.of(Xa.BeginMarkedContent, [Bc(e)]);
    },
    Lh = function () {
      return Ga.of(Xa.EndMarkedContent);
    };
  !(function (e) {
    e.Grayscale = "Grayscale";
    e.RGB = "RGB";
    e.CMYK = "CMYK";
  })(e.ColorTypes || (e.ColorTypes = {}));
  var Uh = function (t) {
      ji(t, "gray", 0, 1);
      return { type: e.ColorTypes.Grayscale, gray: t };
    },
    zh = function (t, i, n) {
      ji(t, "red", 0, 1);
      ji(i, "green", 0, 1);
      ji(n, "blue", 0, 1);
      return { type: e.ColorTypes.RGB, red: t, green: i, blue: n };
    },
    jh = function (t, i, n, r) {
      ji(t, "cyan", 0, 1);
      ji(i, "magenta", 0, 1);
      ji(n, "yellow", 0, 1);
      ji(r, "key", 0, 1);
      return {
        type: e.ColorTypes.CMYK,
        cyan: t,
        magenta: i,
        yellow: n,
        key: r,
      };
    },
    qh = e.ColorTypes.Grayscale,
    Hh = e.ColorTypes.RGB,
    Wh = e.ColorTypes.CMYK,
    Gh = function (e) {
      return e.type === qh
        ? Ih(e.gray)
        : e.type === Hh
        ? Oh(e.red, e.green, e.blue)
        : e.type === Wh
        ? Nh(e.cyan, e.magenta, e.yellow, e.key)
        : fe("Invalid color: " + JSON.stringify(e));
    },
    Vh = function (e) {
      return e.type === qh
        ? Dh(e.gray)
        : e.type === Hh
        ? Rh(e.red, e.green, e.blue)
        : e.type === Wh
        ? Mh(e.cyan, e.magenta, e.yellow, e.key)
        : fe("Invalid color: " + JSON.stringify(e));
    },
    Xh = function (e, t) {
      if (void 0 === t) t = 1;
      return 1 === (null == e ? void 0 : e.length)
        ? Uh(e[0] * t)
        : 3 === (null == e ? void 0 : e.length)
        ? zh(e[0] * t, e[1] * t, e[2] * t)
        : 4 === (null == e ? void 0 : e.length)
        ? jh(e[0] * t, e[1] * t, e[2] * t, e[3] * t)
        : void 0;
    },
    Kh = function (e) {
      return e.type === qh
        ? [e.gray]
        : e.type === Hh
        ? [e.red, e.green, e.blue]
        : e.type === Wh
        ? [e.cyan, e.magenta, e.yellow, e.key]
        : fe("Invalid color: " + JSON.stringify(e));
    },
    Yh = 0,
    Zh = 0,
    Jh = 0,
    $h = 0,
    Qh = 0,
    eu = 0,
    tu = new Map([
      ["A", 7],
      ["a", 7],
      ["C", 6],
      ["c", 6],
      ["H", 1],
      ["h", 1],
      ["L", 2],
      ["l", 2],
      ["M", 2],
      ["m", 2],
      ["Q", 4],
      ["q", 4],
      ["S", 4],
      ["s", 4],
      ["T", 2],
      ["t", 2],
      ["V", 1],
      ["v", 1],
      ["Z", 0],
      ["z", 0],
    ]),
    iu = {
      M: function (e) {
        Yh = e[0];
        Zh = e[1];
        Jh = $h = null;
        Qh = Yh;
        eu = Zh;
        return gh(Yh, Zh);
      },
      m: function (e) {
        Yh += e[0];
        Zh += e[1];
        Jh = $h = null;
        Qh = Yh;
        eu = Zh;
        return gh(Yh, Zh);
      },
      C: function (e) {
        Yh = e[4];
        Zh = e[5];
        Jh = e[2];
        $h = e[3];
        return dh(e[0], e[1], e[2], e[3], e[4], e[5]);
      },
      c: function (e) {
        var t = dh(
          e[0] + Yh,
          e[1] + Zh,
          e[2] + Yh,
          e[3] + Zh,
          e[4] + Yh,
          e[5] + Zh
        );
        Jh = Yh + e[2];
        $h = Zh + e[3];
        Yh += e[4];
        Zh += e[5];
        return t;
      },
      S: function (e) {
        if (null === Jh || null === $h) {
          Jh = Yh;
          $h = Zh;
        }
        var t = dh(Yh - (Jh - Yh), Zh - ($h - Zh), e[0], e[1], e[2], e[3]);
        Jh = e[0];
        $h = e[1];
        Yh = e[2];
        Zh = e[3];
        return t;
      },
      s: function (e) {
        if (null === Jh || null === $h) {
          Jh = Yh;
          $h = Zh;
        }
        var t = dh(
          Yh - (Jh - Yh),
          Zh - ($h - Zh),
          Yh + e[0],
          Zh + e[1],
          Yh + e[2],
          Zh + e[3]
        );
        Jh = Yh + e[0];
        $h = Zh + e[1];
        Yh += e[2];
        Zh += e[3];
        return t;
      },
      Q: function (e) {
        Jh = e[0];
        $h = e[1];
        Yh = e[2];
        Zh = e[3];
        return fh(e[0], e[1], Yh, Zh);
      },
      q: function (e) {
        var t = fh(e[0] + Yh, e[1] + Zh, e[2] + Yh, e[3] + Zh);
        Jh = Yh + e[0];
        $h = Zh + e[1];
        Yh += e[2];
        Zh += e[3];
        return t;
      },
      T: function (e) {
        if (null === Jh || null === $h) {
          Jh = Yh;
          $h = Zh;
        } else {
          Jh = Yh - (Jh - Yh);
          $h = Zh - ($h - Zh);
        }
        var t = fh(Jh, $h, e[0], e[1]);
        Jh = Yh - (Jh - Yh);
        $h = Zh - ($h - Zh);
        Yh = e[0];
        Zh = e[1];
        return t;
      },
      t: function (e) {
        if (null === Jh || null === $h) {
          Jh = Yh;
          $h = Zh;
        } else {
          Jh = Yh - (Jh - Yh);
          $h = Zh - ($h - Zh);
        }
        var t = fh(Jh, $h, Yh + e[0], Zh + e[1]);
        Yh += e[0];
        Zh += e[1];
        return t;
      },
      A: function (e) {
        var t = nu(Yh, Zh, e);
        Yh = e[5];
        Zh = e[6];
        return t;
      },
      a: function (e) {
        e[5] += Yh;
        e[6] += Zh;
        var t = nu(Yh, Zh, e);
        Yh = e[5];
        Zh = e[6];
        return t;
      },
      L: function (e) {
        Yh = e[0];
        Zh = e[1];
        Jh = $h = null;
        return mh(Yh, Zh);
      },
      l: function (e) {
        Yh += e[0];
        Zh += e[1];
        Jh = $h = null;
        return mh(Yh, Zh);
      },
      H: function (e) {
        Yh = e[0];
        Jh = $h = null;
        return mh(Yh, Zh);
      },
      h: function (e) {
        Yh += e[0];
        Jh = $h = null;
        return mh(Yh, Zh);
      },
      V: function (e) {
        Zh = e[0];
        Jh = $h = null;
        return mh(Yh, Zh);
      },
      v: function (e) {
        Zh += e[0];
        Jh = $h = null;
        return mh(Yh, Zh);
      },
      Z: function () {
        var e = ph();
        Yh = Qh;
        Zh = eu;
        return e;
      },
      z: function () {
        var e = ph();
        Yh = Qh;
        Zh = eu;
        return e;
      },
    },
    nu = function (e, t, i) {
      for (
        var n = i[0],
          r = i[1],
          a = i[2],
          s = i[3],
          o = i[4],
          l = i[5],
          c = i[6],
          h = [],
          u = 0,
          d = ru(l, c, n, r, s, o, a, e, t);
        u < d.length;
        u++
      ) {
        var f = d[u],
          p = au.apply(void 0, f);
        h.push(dh.apply(void 0, p));
      }
      return h;
    },
    ru = function (e, t, i, n, r, a, s, o, l) {
      var c = s * (Math.PI / 180),
        h = Math.sin(c),
        u = Math.cos(c);
      i = Math.abs(i);
      n = Math.abs(n);
      var d =
        ((Jh = u * (o - e) * 0.5 + h * (l - t) * 0.5) * Jh) / (i * i) +
        (($h = u * (l - t) * 0.5 - h * (o - e) * 0.5) * $h) / (n * n);
      if (d > 1) {
        i *= d = Math.sqrt(d);
        n *= d;
      }
      var f = u / i,
        p = h / i,
        g = -h / n,
        m = u / n,
        v = f * o + p * l,
        b = g * o + m * l,
        y = f * e + p * t,
        w = g * e + m * t,
        x = 1 / ((y - v) * (y - v) + (w - b) * (w - b)) - 0.25;
      if (x < 0) x = 0;
      var k = Math.sqrt(x);
      if (a === r) k = -k;
      var C = 0.5 * (v + y) - k * (w - b),
        S = 0.5 * (b + w) + k * (y - v),
        _ = Math.atan2(b - S, v - C),
        A = Math.atan2(w - S, y - C) - _;
      if (A < 0 && 1 === a) A += 2 * Math.PI;
      else if (A > 0 && 0 === a) A -= 2 * Math.PI;
      for (
        var F = Math.ceil(Math.abs(A / (0.5 * Math.PI + 0.001))), T = [], P = 0;
        P < F;
        P++
      ) {
        var E = _ + (P * A) / F,
          I = _ + ((P + 1) * A) / F;
        T[P] = [C, S, E, I, i, n, h, u];
      }
      return T;
    },
    au = function (e, t, i, n, r, a, s, o) {
      var l = o * r,
        c = -s * a,
        h = s * r,
        u = o * a,
        d = 0.5 * (n - i),
        f = ((8 / 3) * Math.sin(0.5 * d) * Math.sin(0.5 * d)) / Math.sin(d),
        p = e + Math.cos(i) - f * Math.sin(i),
        g = t + Math.sin(i) + f * Math.cos(i),
        m = e + Math.cos(n),
        v = t + Math.sin(n),
        b = m + f * Math.sin(n),
        y = v - f * Math.cos(n);
      return [
        l * p + c * g,
        h * p + u * g,
        l * b + c * y,
        h * b + u * y,
        l * m + c * v,
        h * m + u * v,
      ];
    },
    su = function (e, t) {
      for (
        var i = [
            ch(),
            t.graphicsState && lh(t.graphicsState),
            Sh(),
            Gh(t.color),
            Ah(t.font, t.size),
            Fh(t.lineHeight),
            Ph(Gc(t.rotate), Gc(t.xSkew), Gc(t.ySkew), t.x, t.y),
          ].filter(Boolean),
          n = 0,
          r = e.length;
        n < r;
        n++
      )
        i.push(Ch(e[n]), kh());
      i.push(_h(), hh());
      return i;
    },
    ou = function (e, t) {
      return [
        ch(),
        t.graphicsState && lh(t.graphicsState),
        th(t.x, t.y),
        nh(Gc(t.rotate)),
        ih(t.width, t.height),
        ah(Gc(t.xSkew), Gc(t.ySkew)),
        Eh(e),
        hh(),
      ].filter(Boolean);
    },
    lu = function (e, t) {
      return [
        ch(),
        t.graphicsState && lh(t.graphicsState),
        th(t.x, t.y),
        nh(Gc(t.rotate)),
        ih(t.xScale, t.yScale),
        ah(Gc(t.xSkew), Gc(t.ySkew)),
        Eh(e),
        hh(),
      ].filter(Boolean);
    },
    cu = function (e) {
      var t, i;
      return [
        ch(),
        e.graphicsState && lh(e.graphicsState),
        e.color && Vh(e.color),
        uh(e.thickness),
        sh(
          null !== (t = e.dashArray) && void 0 !== t ? t : [],
          null !== (i = e.dashPhase) && void 0 !== i ? i : 0
        ),
        gh(e.start.x, e.start.y),
        e.lineCap && oh(e.lineCap),
        gh(e.start.x, e.start.y),
        mh(e.end.x, e.end.y),
        bh(),
        hh(),
      ].filter(Boolean);
    },
    hu = function (e) {
      var t, i;
      return [
        ch(),
        e.graphicsState && lh(e.graphicsState),
        e.color && Gh(e.color),
        e.borderColor && Vh(e.borderColor),
        uh(e.borderWidth),
        e.borderLineCap && oh(e.borderLineCap),
        sh(
          null !== (t = e.borderDashArray) && void 0 !== t ? t : [],
          null !== (i = e.borderDashPhase) && void 0 !== i ? i : 0
        ),
        th(e.x, e.y),
        nh(Gc(e.rotate)),
        ah(Gc(e.xSkew), Gc(e.ySkew)),
        gh(0, 0),
        mh(0, e.height),
        mh(e.width, e.height),
        mh(e.width, 0),
        ph(),
        e.color && e.borderWidth
          ? wh()
          : e.color
          ? yh()
          : e.borderColor
          ? bh()
          : ph(),
        hh(),
      ].filter(Boolean);
    },
    uu = ((Math.sqrt(2) - 1) / 3) * 4,
    du = function (e) {
      var t = Uc(e.x),
        i = Uc(e.y),
        n = Uc(e.xScale),
        r = Uc(e.yScale),
        a = n * uu,
        s = r * uu,
        o = (t -= n) + 2 * n,
        l = (i -= r) + 2 * r,
        c = t + n,
        h = i + r;
      return [
        ch(),
        gh(t, h),
        dh(t, h - s, c - a, i, c, i),
        dh(c + a, i, o, h - s, o, h),
        dh(o, h + s, c + a, l, c, l),
        dh(c - a, l, t, h + s, t, h),
        hh(),
      ];
    },
    fu = function (e) {
      var t, i, n, r, a, o, l, c, h, u, d, f, p, g, m, v;
      return s(
        [
          ch(),
          e.graphicsState && lh(e.graphicsState),
          e.color && Gh(e.color),
          e.borderColor && Vh(e.borderColor),
          uh(e.borderWidth),
          e.borderLineCap && oh(e.borderLineCap),
          sh(
            null !== (t = e.borderDashArray) && void 0 !== t ? t : [],
            null !== (i = e.borderDashPhase) && void 0 !== i ? i : 0
          ),
        ],
        void 0 === e.rotate
          ? du({ x: e.x, y: e.y, xScale: e.xScale, yScale: e.yScale })
          : ((r = {
              x: e.x,
              y: e.y,
              xScale: e.xScale,
              yScale: e.yScale,
              rotate: null !== (n = e.rotate) && void 0 !== n ? n : zc(0),
            }),
            (a = Uc(r.x)),
            (o = Uc(r.y)),
            (l = Uc(r.xScale)),
            (c = Uc(r.yScale)),
            (h = -l),
            (u = -c),
            (d = l * uu),
            (f = c * uu),
            (p = h + 2 * l),
            (g = u + 2 * c),
            (m = h + l),
            (v = u + c),
            [
              th(a, o),
              nh(Gc(r.rotate)),
              gh(h, v),
              dh(h, v - f, m - d, u, m, u),
              dh(m + d, u, p, v - f, p, v),
              dh(p, v + f, m + d, g, m, g),
              dh(m - d, g, h, v + f, h, v),
            ]),
        [
          e.color && e.borderWidth
            ? wh()
            : e.color
            ? yh()
            : e.borderColor
            ? bh()
            : ph(),
          hh(),
        ]
      ).filter(Boolean);
    },
    pu = function (e, t) {
      var i, n, r;
      return s(
        [
          ch(),
          t.graphicsState && lh(t.graphicsState),
          th(t.x, t.y),
          nh(Gc(null !== (i = t.rotate) && void 0 !== i ? i : zc(0))),
          t.scale ? ih(t.scale, -t.scale) : ih(1, -1),
          t.color && Gh(t.color),
          t.borderColor && Vh(t.borderColor),
          t.borderWidth && uh(t.borderWidth),
          t.borderLineCap && oh(t.borderLineCap),
          sh(
            null !== (n = t.borderDashArray) && void 0 !== n ? n : [],
            null !== (r = t.borderDashPhase) && void 0 !== r ? r : 0
          ),
        ],
        (function (e) {
          return (function (e) {
            Yh = Zh = Jh = $h = Qh = eu = 0;
            for (var t = [], i = 0; i < e.length; i++) {
              var n = e[i];
              if (n.cmd && "function" == typeof iu[n.cmd]) {
                var r = iu[n.cmd](n.args);
                if (Array.isArray(r)) t = t.concat(r);
                else t.push(r);
              }
            }
            return t;
          })(
            (function (e) {
              for (
                var t, i = [], n = [], r = "", a = !1, s = 0, o = 0, l = e;
                o < l.length;
                o++
              ) {
                var c = l[o];
                if (tu.has(c)) {
                  s = tu.get(c);
                  if (t) {
                    if (r.length > 0) n[n.length] = +r;
                    i[i.length] = { cmd: t, args: n };
                    n = [];
                    r = "";
                    a = !1;
                  }
                  t = c;
                } else if (
                  [" ", ","].includes(c) ||
                  ("-" === c && r.length > 0 && "e" !== r[r.length - 1]) ||
                  ("." === c && a)
                ) {
                  if (0 === r.length) continue;
                  if (n.length === s) {
                    i[i.length] = { cmd: t, args: n };
                    n = [+r];
                    if ("M" === t) t = "L";
                    if ("m" === t) t = "l";
                  } else n[n.length] = +r;
                  a = "." === c;
                  r = ["-", "."].includes(c) ? c : "";
                } else {
                  r += c;
                  if ("." === c) a = !0;
                }
              }
              if (r.length > 0)
                if (n.length === s) {
                  i[i.length] = { cmd: t, args: n };
                  n = [+r];
                  if ("M" === t) t = "L";
                  if ("m" === t) t = "l";
                } else n[n.length] = +r;
              i[i.length] = { cmd: t, args: n };
              return i;
            })(e)
          );
        })(e),
        [
          t.color && t.borderWidth
            ? wh()
            : t.color
            ? yh()
            : t.borderColor
            ? bh()
            : ph(),
          hh(),
        ]
      ).filter(Boolean);
    },
    gu = function (e) {
      var t = Uc(e.size);
      return [
        ch(),
        e.color && Vh(e.color),
        uh(e.thickness),
        th(e.x, e.y),
        gh(-0.675 * t, -0.07601036269430045 * t),
        mh(-0.25 * t, -0.49 * t),
        mh(0.69 * t, 0.475 * t),
        bh(),
        hh(),
      ].filter(Boolean);
    },
    mu = function (e) {
      return 0 === e.rotation
        ? [th(0, 0), rh(0)]
        : 90 === e.rotation
        ? [th(e.width, 0), rh(90)]
        : 180 === e.rotation
        ? [th(e.width, e.height), rh(180)]
        : 270 === e.rotation
        ? [th(0, e.height), rh(270)]
        : [];
    },
    vu = function (e) {
      var t = hu({
        x: e.x,
        y: e.y,
        width: e.width,
        height: e.height,
        borderWidth: e.borderWidth,
        color: e.color,
        borderColor: e.borderColor,
        rotate: zc(0),
        xSkew: zc(0),
        ySkew: zc(0),
      });
      if (!e.filled) return t;
      var i = Uc(e.width),
        n = Uc(e.height),
        r = Math.min(i, n) / 2,
        a = gu({
          x: i / 2,
          y: n / 2,
          size: r,
          thickness: e.thickness,
          color: e.markColor,
        });
      return s([ch()], t, a, [hh()]);
    },
    bu = function (e) {
      var t = Uc(e.width),
        i = Uc(e.height),
        n = Math.min(t, i) / 2,
        r = fu({
          x: e.x,
          y: e.y,
          xScale: n,
          yScale: n,
          color: e.color,
          borderColor: e.borderColor,
          borderWidth: e.borderWidth,
        });
      if (!e.filled) return r;
      var a = fu({
        x: e.x,
        y: e.y,
        xScale: 0.45 * n,
        yScale: 0.45 * n,
        color: e.dotColor,
        borderColor: void 0,
        borderWidth: 0,
      });
      return s([ch()], r, a, [hh()]);
    },
    yu = function (e) {
      var t = Uc(e.x),
        i = Uc(e.y),
        n = Uc(e.width),
        r = Uc(e.height),
        a = hu({
          x: t,
          y: i,
          width: n,
          height: r,
          borderWidth: e.borderWidth,
          color: e.color,
          borderColor: e.borderColor,
          rotate: zc(0),
          xSkew: zc(0),
          ySkew: zc(0),
        }),
        o = wu(e.textLines, {
          color: e.textColor,
          font: e.font,
          size: e.fontSize,
          rotate: zc(0),
          xSkew: zc(0),
          ySkew: zc(0),
        });
      return s([ch()], a, o, [hh()]);
    },
    wu = function (e, t) {
      for (
        var i = [Sh(), Gh(t.color), Ah(t.font, t.size)], n = 0, r = e.length;
        n < r;
        n++
      ) {
        var a = e[n],
          s = a.encoded,
          o = a.x,
          l = a.y;
        i.push(Ph(Gc(t.rotate), Gc(t.xSkew), Gc(t.ySkew), o, l), Ch(s));
      }
      i.push(_h());
      return i;
    },
    xu = function (e) {
      var t = Uc(e.x),
        i = Uc(e.y),
        n = Uc(e.width),
        r = Uc(e.height),
        a = Uc(e.borderWidth),
        o = Uc(e.padding),
        l = t + a / 2 + o,
        c = i + a / 2 + o,
        h = n - 2 * (a / 2 + o),
        u = r - 2 * (a / 2 + o),
        d = [
          gh(l, c),
          mh(l, c + u),
          mh(l + h, c + u),
          mh(l + h, c),
          ph(),
          Zc(),
          xh(),
        ],
        f = hu({
          x: t,
          y: i,
          width: n,
          height: r,
          borderWidth: e.borderWidth,
          color: e.color,
          borderColor: e.borderColor,
          rotate: zc(0),
          xSkew: zc(0),
          ySkew: zc(0),
        }),
        p = wu(e.textLines, {
          color: e.textColor,
          font: e.font,
          size: e.fontSize,
          rotate: zc(0),
          xSkew: zc(0),
          ySkew: zc(0),
        }),
        g = s([Bh("Tx"), ch()], p, [hh(), Lh()]);
      return s([ch()], f, d, g, [hh()]);
    },
    ku = function (e) {
      for (
        var t = Uc(e.x),
          i = Uc(e.y),
          n = Uc(e.width),
          r = Uc(e.height),
          a = Uc(e.lineHeight),
          o = Uc(e.borderWidth),
          l = Uc(e.padding),
          c = t + o / 2 + l,
          h = i + o / 2 + l,
          u = n - 2 * (o / 2 + l),
          d = r - 2 * (o / 2 + l),
          f = [
            gh(c, h),
            mh(c, h + d),
            mh(c + u, h + d),
            mh(c + u, h),
            ph(),
            Zc(),
            xh(),
          ],
          p = hu({
            x: t,
            y: i,
            width: n,
            height: r,
            borderWidth: e.borderWidth,
            color: e.color,
            borderColor: e.borderColor,
            rotate: zc(0),
            xSkew: zc(0),
            ySkew: zc(0),
          }),
          g = [],
          m = 0,
          v = e.selectedLines.length;
        m < v;
        m++
      ) {
        var b = e.textLines[e.selectedLines[m]];
        g.push.apply(
          g,
          hu({
            x: b.x - l,
            y: b.y - (a - b.height) / 2,
            width: n - o,
            height: b.height + (a - b.height) / 2,
            borderWidth: 0,
            color: e.selectedColor,
            borderColor: void 0,
            rotate: zc(0),
            xSkew: zc(0),
            ySkew: zc(0),
          })
        );
      }
      var y = wu(e.textLines, {
          color: e.textColor,
          font: e.font,
          size: e.fontSize,
          rotate: zc(0),
          xSkew: zc(0),
          ySkew: zc(0),
        }),
        w = s([Bh("Tx"), ch()], y, [hh(), Lh()]);
      return s([ch()], p, g, f, w, [hh()]);
    },
    Cu = (function (e) {
      i(t, e);
      function t() {
        return (
          e.call(
            this,
            "Input document to `PDFDocument.load` is encrypted. You can use `PDFDocument.load(..., { ignoreEncryption: true })` if you wish to load the document anyways."
          ) || this
        );
      }
      return t;
    })(Error),
    Su = (function (e) {
      i(t, e);
      function t() {
        return (
          e.call(
            this,
            "Input to `PDFDocument.embedFont` was a custom font, but no `fontkit` instance was found. You must register a `fontkit` instance with `PDFDocument.registerFontkit(...)` before embedding custom fonts."
          ) || this
        );
      }
      return t;
    })(Error),
    _u = (function (e) {
      i(t, e);
      function t() {
        return (
          e.call(
            this,
            "A `page` passed to `PDFDocument.addPage` or `PDFDocument.insertPage` was from a different (foreign) PDF document. If you want to copy pages from one PDFDocument to another, you must use `PDFDocument.copyPages(...)` to copy the pages before adding or inserting them."
          ) || this
        );
      }
      return t;
    })(Error),
    Au = (function (e) {
      i(t, e);
      function t() {
        return (
          e.call(
            this,
            "PDFDocument has no pages so `PDFDocument.removePage` cannot be called"
          ) || this
        );
      }
      return t;
    })(Error),
    Fu = (function (e) {
      i(t, e);
      function t(t) {
        var i = 'PDFDocument has no form field with the name "' + t + '"';
        return e.call(this, i) || this;
      }
      return t;
    })(Error),
    Tu = (function (e) {
      i(t, e);
      function t(t, i, n) {
        var r,
          a,
          s =
            'Expected field "' +
            t +
            '" to be of type ' +
            (null == i ? void 0 : i.name) +
            ", but it is actually of type " +
            (null !==
              (a =
                null === (r = null == n ? void 0 : n.constructor) ||
                void 0 === r
                  ? void 0
                  : r.name) && void 0 !== a
              ? a
              : n);
        return e.call(this, s) || this;
      }
      return t;
    })(Error),
    Pu = (function (e) {
      i(t, e);
      function t(t) {
        var i =
          'Failed to select check box due to missing onValue: "' + t + '"';
        return e.call(this, i) || this;
      }
      return t;
    })(Error),
    Eu = (function (e) {
      i(t, e);
      function t(t) {
        var i = 'A field already exists with the specified name: "' + t + '"';
        return e.call(this, i) || this;
      }
      return t;
    })(Error),
    Iu = (function (e) {
      i(t, e);
      function t(t) {
        var i = 'Field name contains invalid component: "' + t + '"';
        return e.call(this, i) || this;
      }
      return t;
    })(Error),
    Du = (function (e) {
      i(t, e);
      function t(t) {
        var i =
          'A non-terminal field already exists with the specified name: "' +
          t +
          '"';
        return e.call(this, i) || this;
      }
      return t;
    })(Error),
    Ou = (function (e) {
      i(t, e);
      function t(t) {
        var i =
          "Reading rich text fields is not supported: Attempted to read rich text field: " +
          t;
        return e.call(this, i) || this;
      }
      return t;
    })(Error),
    Ru = (function (e) {
      i(t, e);
      function t(t, i) {
        var n =
          "Failed to layout combed text as lineLength=" +
          t +
          " is greater than cellCount=" +
          i;
        return e.call(this, n) || this;
      }
      return t;
    })(Error),
    Nu = (function (e) {
      i(t, e);
      function t(t, i, n) {
        var r =
          "Attempted to set text with length=" +
          t +
          " for TextField with maxLength=" +
          i +
          " and name=" +
          n;
        return e.call(this, r) || this;
      }
      return t;
    })(Error),
    Mu = (function (e) {
      i(t, e);
      function t(t, i, n) {
        var r =
          "Attempted to set maxLength=" +
          i +
          ", which is less than " +
          t +
          ", the length of this field's current value (name=" +
          n +
          ")";
        return e.call(this, r) || this;
      }
      return t;
    })(Error);
  !(function (e) {
    e[(e.Left = 0)] = "Left";
    e[(e.Center = 1)] = "Center";
    e[(e.Right = 2)] = "Right";
  })(e.TextAlignment || (e.TextAlignment = {}));
  var Bu,
    Lu = function (e) {
      for (var t = e.length; t > 0; t--) if (/\s/.test(e[t])) return t;
    },
    Uu = function (e, t, i, n) {
      for (var r, a = e.length; a > 0; ) {
        var s = e.substring(0, a),
          o = i.encodeText(s),
          l = i.widthOfTextAtSize(s, n);
        if (l < t)
          return {
            line: s,
            encoded: o,
            width: l,
            remainder: e.substring(a) || void 0,
          };
        a = null !== (r = Lu(s)) && void 0 !== r ? r : 0;
      }
      return {
        line: e,
        encoded: i.encodeText(e),
        width: i.widthOfTextAtSize(e, n),
        remainder: void 0,
      };
    },
    zu = function (t, i) {
      var n = i.alignment,
        r = i.fontSize,
        a = i.font,
        s = i.bounds,
        o = T(_(t));
      if (void 0 === r || 0 === r) r = 12;
      for (
        var l = a.heightAtSize(r),
          c = l + 0.2 * l,
          h = [],
          u = s.x,
          d = s.y,
          f = s.x + s.width,
          p = s.y + s.height,
          g = s.y + s.height,
          m = 0,
          v = o.length;
        m < v;
        m++
      )
        for (var b = o[m]; void 0 !== b; ) {
          var y = Uu(b, s.width, a, r),
            w = y.line,
            x = y.encoded,
            k = y.width,
            C = y.remainder,
            S =
              n === e.TextAlignment.Left
                ? s.x
                : n === e.TextAlignment.Center
                ? s.x + s.width / 2 - k / 2
                : n === e.TextAlignment.Right
                ? s.x + s.width - k
                : s.x;
          if (S < u) u = S;
          if ((g -= c) < d) d = g;
          if (S + k > f) f = S + k;
          if (g + l > p) p = g + l;
          h.push({ text: w, encoded: x, width: k, height: l, x: S, y: g });
          b = null == C ? void 0 : C.trim();
        }
      return {
        fontSize: r,
        lineHeight: c,
        lines: h,
        bounds: { x: u, y: d, width: f - u, height: p - d },
      };
    },
    ju = function (e, t) {
      var i = t.fontSize,
        n = t.font,
        r = t.bounds,
        a = t.cellCount,
        s = P(_(e));
      if (s.length > a) throw new Ru(s.length, a);
      if (void 0 === i || 0 === i)
        i = (function (e, t, i, n) {
          for (var r = i.width / n, a = i.height, s = 4, o = I(e); s < 500; ) {
            for (var l = 0, c = o.length; l < c; l++) {
              var h = o[l];
              if (t.widthOfTextAtSize(h, s) > 0.75 * r) return s - 1;
            }
            if (t.heightAtSize(s, { descender: !1 }) > a) return s - 1;
            s += 1;
          }
          return s;
        })(s, n, r, a);
      for (
        var o = r.width / a,
          l = n.heightAtSize(i, { descender: !1 }),
          c = r.y + (r.height / 2 - l / 2),
          h = [],
          u = r.x,
          d = r.y,
          f = r.x + r.width,
          p = r.y + r.height,
          g = 0,
          m = 0;
        g < a;

      ) {
        var v = E(s, m),
          b = v[0],
          y = v[1],
          w = n.encodeText(b),
          x = n.widthOfTextAtSize(b, i),
          k = r.x + (o * g + o / 2) - x / 2;
        if (k < u) u = k;
        if (c < d) d = c;
        if (k + x > f) f = k + x;
        if (c + l > p) p = c + l;
        h.push({ text: s, encoded: w, width: x, height: l, x: k, y: c });
        g += 1;
        m += y;
      }
      return {
        fontSize: i,
        cells: h,
        bounds: { x: u, y: d, width: f - u, height: p - d },
      };
    },
    qu = function (t, i) {
      var n = i.alignment,
        r = i.fontSize,
        a = i.font,
        s = i.bounds,
        o = P(_(t));
      if (void 0 === r || 0 === r)
        r = (function (e, t, i) {
          for (var n = 4; n < 500; ) {
            for (var r = 0, a = e.length; r < a; r++) {
              var s = e[r];
              if (t.widthOfTextAtSize(s, n) > i.width) return n - 1;
            }
            var o = t.heightAtSize(n);
            if (e.length * (o + 0.2 * o) > Math.abs(i.height)) return n - 1;
            n += 1;
          }
          return n;
        })([o], a, s);
      var l = a.encodeText(o),
        c = a.widthOfTextAtSize(o, r),
        h = a.heightAtSize(r, { descender: !1 }),
        u =
          n === e.TextAlignment.Left
            ? s.x
            : n === e.TextAlignment.Center
            ? s.x + s.width / 2 - c / 2
            : n === e.TextAlignment.Right
            ? s.x + s.width - c
            : s.x,
        d = s.y + (s.height / 2 - h / 2);
      return {
        fontSize: r,
        line: { text: o, encoded: l, width: c, height: h, x: u, y: d },
        bounds: { x: u, y: d, width: c, height: h },
      };
    },
    Hu = function (e) {
      if ("normal" in e) return e;
      else return { normal: e };
    },
    Wu = /\/([^\0\t\n\f\r\ ]+)[\0\t\n\f\r\ ]+(\d*\.\d+|\d+)[\0\t\n\f\r\ ]+Tf/,
    Gu = function (e) {
      var t,
        i,
        n = null !== (t = e.getDefaultAppearance()) && void 0 !== t ? t : "",
        r = null !== (i = N(n, Wu).match) && void 0 !== i ? i : [],
        a = Number(r[2]);
      return isFinite(a) ? a : void 0;
    },
    Vu =
      /(\d*\.\d+|\d+)[\0\t\n\f\r\ ]*(\d*\.\d+|\d+)?[\0\t\n\f\r\ ]*(\d*\.\d+|\d+)?[\0\t\n\f\r\ ]*(\d*\.\d+|\d+)?[\0\t\n\f\r\ ]+(g|rg|k)/,
    Xu = function (e) {
      var t,
        i = null !== (t = e.getDefaultAppearance()) && void 0 !== t ? t : "",
        n = N(i, Vu).match,
        r = null != n ? n : [],
        a = r[1],
        s = r[2],
        o = r[3],
        l = r[4],
        c = r[5];
      if ("g" === c && a) return Uh(Number(a));
      if ("rg" === c && a && s && o) return zh(Number(a), Number(s), Number(o));
      if ("k" === c && a && s && o && l)
        return jh(Number(a), Number(s), Number(o), Number(l));
    },
    Ku = function (e, t, i, n) {
      var r;
      if (void 0 === n) n = 0;
      var a = [
        Gh(t).toString(),
        Ah(
          null !== (r = null == i ? void 0 : i.name) && void 0 !== r
            ? r
            : "dummy__noop",
          n
        ).toString(),
      ].join("\n");
      e.setDefaultAppearance(a);
    },
    Yu = function (e, t) {
      var i,
        r,
        a,
        o = Xu(t),
        l = Xu(e.acroField),
        c = t.getRectangle(),
        h = t.getAppearanceCharacteristics(),
        u = t.getBorderStyle(),
        d =
          null !== (i = null == u ? void 0 : u.getWidth()) && void 0 !== i
            ? i
            : 0,
        f = Xc(null == h ? void 0 : h.getRotation()),
        p = Kc(c, f),
        g = p.width,
        m = p.height,
        v = mu(n(n({}, c), { rotation: f })),
        b = zh(0, 0, 0),
        y =
          null !== (r = Xh(null == h ? void 0 : h.getBorderColor())) &&
          void 0 !== r
            ? r
            : b,
        w = Xh(null == h ? void 0 : h.getBackgroundColor()),
        x = Xh(null == h ? void 0 : h.getBackgroundColor(), 0.8),
        k = null !== (a = null != o ? o : l) && void 0 !== a ? a : b;
      if (o) Ku(t, k);
      else Ku(e.acroField, k);
      var C = {
        x: 0 + d / 2,
        y: 0 + d / 2,
        width: g - d,
        height: m - d,
        thickness: 1.5,
        borderWidth: d,
        borderColor: y,
        markColor: k,
      };
      return {
        normal: {
          on: s(v, vu(n(n({}, C), { color: w, filled: !0 }))),
          off: s(v, vu(n(n({}, C), { color: w, filled: !1 }))),
        },
        down: {
          on: s(v, vu(n(n({}, C), { color: x, filled: !0 }))),
          off: s(v, vu(n(n({}, C), { color: x, filled: !1 }))),
        },
      };
    },
    Zu = function (e, t) {
      var i,
        r,
        a,
        o = Xu(t),
        l = Xu(e.acroField),
        c = t.getRectangle(),
        h = t.getAppearanceCharacteristics(),
        u = t.getBorderStyle(),
        d =
          null !== (i = null == u ? void 0 : u.getWidth()) && void 0 !== i
            ? i
            : 0,
        f = Xc(null == h ? void 0 : h.getRotation()),
        p = Kc(c, f),
        g = p.width,
        m = p.height,
        v = mu(n(n({}, c), { rotation: f })),
        b = zh(0, 0, 0),
        y =
          null !== (r = Xh(null == h ? void 0 : h.getBorderColor())) &&
          void 0 !== r
            ? r
            : b,
        w = Xh(null == h ? void 0 : h.getBackgroundColor()),
        x = Xh(null == h ? void 0 : h.getBackgroundColor(), 0.8),
        k = null !== (a = null != o ? o : l) && void 0 !== a ? a : b;
      if (o) Ku(t, k);
      else Ku(e.acroField, k);
      var C = {
        x: g / 2,
        y: m / 2,
        width: g - d,
        height: m - d,
        borderWidth: d,
        borderColor: y,
        dotColor: k,
      };
      return {
        normal: {
          on: s(v, bu(n(n({}, C), { color: w, filled: !0 }))),
          off: s(v, bu(n(n({}, C), { color: w, filled: !1 }))),
        },
        down: {
          on: s(v, bu(n(n({}, C), { color: x, filled: !0 }))),
          off: s(v, bu(n(n({}, C), { color: x, filled: !1 }))),
        },
      };
    },
    Ju = function (t, i, r) {
      var a,
        o,
        l,
        c,
        h,
        u = Xu(i),
        d = Xu(t.acroField),
        f = Gu(i),
        p = Gu(t.acroField),
        g = i.getRectangle(),
        m = i.getAppearanceCharacteristics(),
        v = i.getBorderStyle(),
        b = null == m ? void 0 : m.getCaptions(),
        y =
          null !== (a = null == b ? void 0 : b.normal) && void 0 !== a ? a : "",
        w =
          null !==
            (l =
              null !== (o = null == b ? void 0 : b.down) && void 0 !== o
                ? o
                : y) && void 0 !== l
            ? l
            : "",
        x =
          null !== (c = null == v ? void 0 : v.getWidth()) && void 0 !== c
            ? c
            : 0,
        k = Xc(null == m ? void 0 : m.getRotation()),
        C = Kc(g, k),
        S = C.width,
        _ = C.height,
        A = mu(n(n({}, g), { rotation: k })),
        F = zh(0, 0, 0),
        T = Xh(null == m ? void 0 : m.getBorderColor()),
        P = Xh(null == m ? void 0 : m.getBackgroundColor()),
        E = Xh(null == m ? void 0 : m.getBackgroundColor(), 0.8),
        I = { x: x, y: x, width: S - 2 * x, height: _ - 2 * x },
        D = qu(y, {
          alignment: e.TextAlignment.Center,
          fontSize: null != f ? f : p,
          font: r,
          bounds: I,
        }),
        O = qu(w, {
          alignment: e.TextAlignment.Center,
          fontSize: null != f ? f : p,
          font: r,
          bounds: I,
        }),
        R = Math.min(D.fontSize, O.fontSize),
        N = null !== (h = null != u ? u : d) && void 0 !== h ? h : F;
      if (u || void 0 !== f) Ku(i, N, r, R);
      else Ku(t.acroField, N, r, R);
      var M = {
        x: 0 + x / 2,
        y: 0 + x / 2,
        width: S - x,
        height: _ - x,
        borderWidth: x,
        borderColor: T,
        textColor: N,
        font: r.name,
        fontSize: R,
      };
      return {
        normal: s(A, yu(n(n({}, M), { color: P, textLines: [D.line] }))),
        down: s(A, yu(n(n({}, M), { color: E, textLines: [O.line] }))),
      };
    },
    $u = function (e, t, i) {
      var r,
        a,
        o,
        l,
        c,
        h,
        u = Xu(t),
        d = Xu(e.acroField),
        f = Gu(t),
        p = Gu(e.acroField),
        g = t.getRectangle(),
        m = t.getAppearanceCharacteristics(),
        v = t.getBorderStyle(),
        b = null !== (r = e.getText()) && void 0 !== r ? r : "",
        y =
          null !== (a = null == v ? void 0 : v.getWidth()) && void 0 !== a
            ? a
            : 0,
        w = Xc(null == m ? void 0 : m.getRotation()),
        x = Kc(g, w),
        k = x.width,
        C = x.height,
        S = mu(n(n({}, g), { rotation: w })),
        _ = zh(0, 0, 0),
        A = Xh(null == m ? void 0 : m.getBorderColor()),
        F = Xh(null == m ? void 0 : m.getBackgroundColor()),
        T = e.isCombed() ? 0 : 1,
        P = {
          x: y + T,
          y: y + T,
          width: k - 2 * (y + T),
          height: C - 2 * (y + T),
        };
      if (e.isMultiline()) {
        c = (E = zu(b, {
          alignment: e.getAlignment(),
          fontSize: null != f ? f : p,
          font: i,
          bounds: P,
        })).lines;
        h = E.fontSize;
      } else if (e.isCombed()) {
        c = (E = ju(b, {
          fontSize: null != f ? f : p,
          font: i,
          bounds: P,
          cellCount: null !== (o = e.getMaxLength()) && void 0 !== o ? o : 0,
        })).cells;
        h = E.fontSize;
      } else {
        var E;
        c = [
          (E = qu(b, {
            alignment: e.getAlignment(),
            fontSize: null != f ? f : p,
            font: i,
            bounds: P,
          })).line,
        ];
        h = E.fontSize;
      }
      var I = null !== (l = null != u ? u : d) && void 0 !== l ? l : _;
      if (u || void 0 !== f) Ku(t, I, i, h);
      else Ku(e.acroField, I, i, h);
      var D = {
        x: 0 + y / 2,
        y: 0 + y / 2,
        width: k - y,
        height: C - y,
        borderWidth: null != y ? y : 0,
        borderColor: A,
        textColor: I,
        font: i.name,
        fontSize: h,
        color: F,
        textLines: c,
        padding: T,
      };
      return s(S, xu(D));
    },
    Qu = function (t, i, r) {
      var a,
        o,
        l,
        c = Xu(i),
        h = Xu(t.acroField),
        u = Gu(i),
        d = Gu(t.acroField),
        f = i.getRectangle(),
        p = i.getAppearanceCharacteristics(),
        g = i.getBorderStyle(),
        m = null !== (a = t.getSelected()[0]) && void 0 !== a ? a : "",
        v =
          null !== (o = null == g ? void 0 : g.getWidth()) && void 0 !== o
            ? o
            : 0,
        b = Xc(null == p ? void 0 : p.getRotation()),
        y = Kc(f, b),
        w = y.width,
        x = y.height,
        k = mu(n(n({}, f), { rotation: b })),
        C = zh(0, 0, 0),
        S = Xh(null == p ? void 0 : p.getBorderColor()),
        _ = Xh(null == p ? void 0 : p.getBackgroundColor()),
        A = {
          x: v + 1,
          y: v + 1,
          width: w - 2 * (v + 1),
          height: x - 2 * (v + 1),
        },
        F = qu(m, {
          alignment: e.TextAlignment.Left,
          fontSize: null != u ? u : d,
          font: r,
          bounds: A,
        }),
        T = F.line,
        P = F.fontSize,
        E = null !== (l = null != c ? c : h) && void 0 !== l ? l : C;
      if (c || void 0 !== u) Ku(i, E, r, P);
      else Ku(t.acroField, E, r, P);
      var I = {
        x: 0 + v / 2,
        y: 0 + v / 2,
        width: w - v,
        height: x - v,
        borderWidth: null != v ? v : 0,
        borderColor: S,
        textColor: E,
        font: r.name,
        fontSize: P,
        color: _,
        textLines: [T],
        padding: 1,
      };
      return s(k, xu(I));
    },
    ed = function (t, i, r) {
      var a,
        o,
        l = Xu(i),
        c = Xu(t.acroField),
        h = Gu(i),
        u = Gu(t.acroField),
        d = i.getRectangle(),
        f = i.getAppearanceCharacteristics(),
        p = i.getBorderStyle(),
        g =
          null !== (a = null == p ? void 0 : p.getWidth()) && void 0 !== a
            ? a
            : 0,
        m = Xc(null == f ? void 0 : f.getRotation()),
        v = Kc(d, m),
        b = v.width,
        y = v.height,
        w = mu(n(n({}, d), { rotation: m })),
        x = zh(0, 0, 0),
        k = Xh(null == f ? void 0 : f.getBorderColor()),
        C = Xh(null == f ? void 0 : f.getBackgroundColor()),
        S = t.getOptions(),
        _ = t.getSelected();
      if (t.isSorted()) S.sort();
      for (var A = "", F = 0, T = S.length; F < T; F++) {
        A += S[F];
        if (F < T - 1) A += "\n";
      }
      var P = {
          x: g + 1,
          y: g + 1,
          width: b - 2 * (g + 1),
          height: y - 2 * (g + 1),
        },
        E = zu(A, {
          alignment: e.TextAlignment.Left,
          fontSize: null != h ? h : u,
          font: r,
          bounds: P,
        }),
        I = E.lines,
        D = E.fontSize,
        O = E.lineHeight,
        R = [];
      for (F = 0, T = I.length; F < T; F++) {
        var N = I[F];
        if (_.includes(N.text)) R.push(F);
      }
      var M = zh(0.6, 193 / 255, 218 / 255),
        B = null !== (o = null != l ? l : c) && void 0 !== o ? o : x;
      if (l || void 0 !== h) Ku(i, B, r, D);
      else Ku(t.acroField, B, r, D);
      return s(
        w,
        ku({
          x: 0 + g / 2,
          y: 0 + g / 2,
          width: b - g,
          height: y - g,
          borderWidth: null != g ? g : 0,
          borderColor: k,
          textColor: B,
          font: r.name,
          fontSize: D,
          color: C,
          textLines: I,
          lineHeight: O,
          selectedColor: M,
          selectedLines: R,
          padding: 1,
        })
      );
    },
    td = (function () {
      function e(e, t, i) {
        this.alreadyEmbedded = !1;
        Li(e, "ref", [[Wa, "PDFRef"]]);
        Li(t, "doc", [[wd, "PDFDocument"]]);
        Li(i, "embedder", [[Ul, "PDFPageEmbedder"]]);
        this.ref = e;
        this.doc = t;
        this.width = i.width;
        this.height = i.height;
        this.embedder = i;
      }
      e.prototype.scale = function (e) {
        Li(e, "factor", ["number"]);
        return { width: this.width * e, height: this.height * e };
      };
      e.prototype.size = function () {
        return this.scale(1);
      };
      e.prototype.embed = function () {
        return r(this, void 0, void 0, function () {
          return a(this, function (e) {
            switch (e.label) {
              case 0:
                if (this.alreadyEmbedded) return [3, 2];
                else
                  return [
                    4,
                    this.embedder.embedIntoContext(this.doc.context, this.ref),
                  ];
              case 1:
                e.sent();
                this.alreadyEmbedded = !0;
                e.label = 2;
              case 2:
                return [2];
            }
          });
        });
      };
      e.of = function (t, i, n) {
        return new e(t, i, n);
      };
      return e;
    })(),
    id = (function () {
      function e(e, t, i) {
        this.modified = !0;
        Li(e, "ref", [[Wa, "PDFRef"]]);
        Li(t, "doc", [[wd, "PDFDocument"]]);
        Li(i, "embedder", [
          [ps, "CustomFontEmbedder"],
          [cs, "StandardFontEmbedder"],
        ]);
        this.ref = e;
        this.doc = t;
        this.name = i.fontName;
        this.embedder = i;
      }
      e.prototype.encodeText = function (e) {
        Li(e, "text", ["string"]);
        this.modified = !0;
        return this.embedder.encodeText(e);
      };
      e.prototype.widthOfTextAtSize = function (e, t) {
        Li(e, "text", ["string"]);
        Li(t, "size", ["number"]);
        return this.embedder.widthOfTextAtSize(e, t);
      };
      e.prototype.heightAtSize = function (e, t) {
        var i;
        Li(e, "size", ["number"]);
        Ui(null == t ? void 0 : t.descender, "options.descender", ["boolean"]);
        return this.embedder.heightOfFontAtSize(e, {
          descender:
            null !== (i = null == t ? void 0 : t.descender) && void 0 !== i
              ? i
              : !0,
        });
      };
      e.prototype.sizeAtHeight = function (e) {
        Li(e, "height", ["number"]);
        return this.embedder.sizeOfFontAtHeight(e);
      };
      e.prototype.getCharacterSet = function () {
        if (this.embedder instanceof cs)
          return this.embedder.encoding.supportedCodePoints;
        else return this.embedder.font.characterSet;
      };
      e.prototype.embed = function () {
        return r(this, void 0, void 0, function () {
          return a(this, function (e) {
            switch (e.label) {
              case 0:
                if (!this.modified) return [3, 2];
                else
                  return [
                    4,
                    this.embedder.embedIntoContext(this.doc.context, this.ref),
                  ];
              case 1:
                e.sent();
                this.modified = !1;
                e.label = 2;
              case 2:
                return [2];
            }
          });
        });
      };
      e.of = function (t, i, n) {
        return new e(t, i, n);
      };
      return e;
    })(),
    nd = (function () {
      function e(e, t, i) {
        this.alreadyEmbedded = !1;
        Li(e, "ref", [[Wa, "PDFRef"]]);
        Li(t, "doc", [[wd, "PDFDocument"]]);
        Li(i, "embedder", [
          [ws, "JpegEmbedder"],
          [kl, "PngEmbedder"],
        ]);
        this.ref = e;
        this.doc = t;
        this.width = i.width;
        this.height = i.height;
        this.embedder = i;
      }
      e.prototype.scale = function (e) {
        Li(e, "factor", ["number"]);
        return { width: this.width * e, height: this.height * e };
      };
      e.prototype.scaleToFit = function (e, t) {
        Li(e, "width", ["number"]);
        Li(t, "height", ["number"]);
        var i = e / this.width,
          n = t / this.height,
          r = Math.min(i, n);
        return this.scale(r);
      };
      e.prototype.size = function () {
        return this.scale(1);
      };
      e.prototype.embed = function () {
        return r(this, void 0, void 0, function () {
          return a(this, function (e) {
            switch (e.label) {
              case 0:
                if (this.alreadyEmbedded) return [3, 2];
                else
                  return [
                    4,
                    this.embedder.embedIntoContext(this.doc.context, this.ref),
                  ];
              case 1:
                e.sent();
                this.alreadyEmbedded = !0;
                e.label = 2;
              case 2:
                return [2];
            }
          });
        });
      };
      e.of = function (t, i, n) {
        return new e(t, i, n);
      };
      return e;
    })();
  !(function (e) {
    e[(e.Left = 0)] = "Left";
    e[(e.Center = 1)] = "Center";
    e[(e.Right = 2)] = "Right";
  })(Bu || (Bu = {}));
  var rd = function (e) {
      Ui(null == e ? void 0 : e.x, "options.x", ["number"]);
      Ui(null == e ? void 0 : e.y, "options.y", ["number"]);
      Ui(null == e ? void 0 : e.width, "options.width", ["number"]);
      Ui(null == e ? void 0 : e.height, "options.height", ["number"]);
      Ui(null == e ? void 0 : e.textColor, "options.textColor", [
        [Object, "Color"],
      ]);
      Ui(null == e ? void 0 : e.backgroundColor, "options.backgroundColor", [
        [Object, "Color"],
      ]);
      Ui(null == e ? void 0 : e.borderColor, "options.borderColor", [
        [Object, "Color"],
      ]);
      Ui(null == e ? void 0 : e.borderWidth, "options.borderWidth", ["number"]);
      Ui(null == e ? void 0 : e.rotate, "options.rotate", [
        [Object, "Rotation"],
      ]);
    },
    ad = (function () {
      function t(e, t, i) {
        Li(e, "acroField", [[Kl, "PDFAcroTerminal"]]);
        Li(t, "ref", [[Wa, "PDFRef"]]);
        Li(i, "doc", [[wd, "PDFDocument"]]);
        this.acroField = e;
        this.ref = t;
        this.doc = i;
      }
      t.prototype.getName = function () {
        var e;
        return null !== (e = this.acroField.getFullyQualifiedName()) &&
          void 0 !== e
          ? e
          : "";
      };
      t.prototype.isReadOnly = function () {
        return this.acroField.hasFlag(e.AcroFieldFlags.ReadOnly);
      };
      t.prototype.enableReadOnly = function () {
        this.acroField.setFlagTo(e.AcroFieldFlags.ReadOnly, !0);
      };
      t.prototype.disableReadOnly = function () {
        this.acroField.setFlagTo(e.AcroFieldFlags.ReadOnly, !1);
      };
      t.prototype.isRequired = function () {
        return this.acroField.hasFlag(e.AcroFieldFlags.Required);
      };
      t.prototype.enableRequired = function () {
        this.acroField.setFlagTo(e.AcroFieldFlags.Required, !0);
      };
      t.prototype.disableRequired = function () {
        this.acroField.setFlagTo(e.AcroFieldFlags.Required, !1);
      };
      t.prototype.isExported = function () {
        return !this.acroField.hasFlag(e.AcroFieldFlags.NoExport);
      };
      t.prototype.enableExporting = function () {
        this.acroField.setFlagTo(e.AcroFieldFlags.NoExport, !1);
      };
      t.prototype.disableExporting = function () {
        this.acroField.setFlagTo(e.AcroFieldFlags.NoExport, !0);
      };
      t.prototype.needsAppearancesUpdate = function () {
        throw new Ji(this.constructor.name, "needsAppearancesUpdate");
      };
      t.prototype.defaultUpdateAppearances = function (e) {
        throw new Ji(this.constructor.name, "defaultUpdateAppearances");
      };
      t.prototype.markAsDirty = function () {
        this.doc.getForm().markFieldAsDirty(this.ref);
      };
      t.prototype.markAsClean = function () {
        this.doc.getForm().markFieldAsClean(this.ref);
      };
      t.prototype.isDirty = function () {
        return this.doc.getForm().fieldIsDirty(this.ref);
      };
      t.prototype.createWidget = function (t) {
        var i,
          n = t.textColor,
          r = t.backgroundColor,
          a = t.borderColor,
          s = t.borderWidth,
          o = Vc(t.rotate),
          l = t.caption,
          c = t.x,
          h = t.y,
          u = t.width + s,
          d = t.height + s,
          f = Boolean(t.hidden);
        Hi(o, "degreesAngle", 90);
        var p = Xl.create(this.doc.context, this.ref),
          g = Yc({ x: c, y: h, width: u, height: d }, s, o);
        p.setRectangle(g);
        var m = p.getOrCreateAppearanceCharacteristics();
        if (r) m.setBackgroundColor(Kh(r));
        m.setRotation(o);
        if (l) m.setCaptions({ normal: l });
        if (a) m.setBorderColor(Kh(a));
        var v = p.getOrCreateBorderStyle();
        if (void 0 !== s) v.setWidth(s);
        p.setFlagTo(e.AnnotationFlags.Print, !0);
        p.setFlagTo(e.AnnotationFlags.Hidden, f);
        p.setFlagTo(e.AnnotationFlags.Invisible, !1);
        if (n) {
          var b =
            (null !== (i = this.acroField.getDefaultAppearance()) &&
            void 0 !== i
              ? i
              : "") +
            "\n" +
            Gh(n).toString();
          this.acroField.setDefaultAppearance(b);
        }
        return p;
      };
      t.prototype.updateWidgetAppearanceWithFont = function (e, t, i) {
        var n = i.normal,
          r = i.rollover,
          a = i.down;
        this.updateWidgetAppearances(e, {
          normal: this.createAppearanceStream(e, n, t),
          rollover: r && this.createAppearanceStream(e, r, t),
          down: a && this.createAppearanceStream(e, a, t),
        });
      };
      t.prototype.updateOnOffWidgetAppearance = function (e, t, i) {
        var n = i.normal,
          r = i.rollover,
          a = i.down;
        this.updateWidgetAppearances(e, {
          normal: this.createAppearanceDict(e, n, t),
          rollover: r && this.createAppearanceDict(e, r, t),
          down: a && this.createAppearanceDict(e, a, t),
        });
      };
      t.prototype.updateWidgetAppearances = function (e, t) {
        var i = t.normal,
          n = t.rollover,
          r = t.down;
        e.setNormalAppearance(i);
        if (n) e.setRolloverAppearance(n);
        else e.removeRolloverAppearance();
        if (r) e.setDownAppearance(r);
        else e.removeDownAppearance();
      };
      t.prototype.createAppearanceStream = function (e, t, i) {
        var n,
          r = this.acroField.dict.context,
          a = e.getRectangle(),
          s = a.width,
          o = a.height,
          l = i && { Font: ((n = {}), (n[i.name] = i.ref), n) },
          c = r.formXObject(t, {
            Resources: l,
            BBox: r.obj([0, 0, s, o]),
            Matrix: r.obj([1, 0, 0, 1, 0, 0]),
          });
        return r.register(c);
      };
      t.prototype.createImageAppearanceStream = function (e, t, i) {
        var r,
          a,
          o = this.acroField.dict.context,
          l = e.getRectangle(),
          c = e.getAppearanceCharacteristics(),
          h = e.getBorderStyle(),
          u =
            null !== (a = null == h ? void 0 : h.getWidth()) && void 0 !== a
              ? a
              : 0,
          d = Xc(null == c ? void 0 : c.getRotation()),
          f = mu(n(n({}, l), { rotation: d })),
          p = Kc(l, d),
          g = t.scaleToFit(p.width - 2 * u, p.height - 2 * u),
          m = {
            x: u,
            y: u,
            width: g.width,
            height: g.height,
            rotate: zc(0),
            xSkew: zc(0),
            ySkew: zc(0),
          };
        if (i === Bu.Center) {
          m.x += (p.width - 2 * u) / 2 - g.width / 2;
          m.y += (p.height - 2 * u) / 2 - g.height / 2;
        } else if (i === Bu.Right) {
          m.x = p.width - u - g.width;
          m.y = p.height - u - g.height;
        }
        var v = C("Image", 10),
          b = s(f, ou(v, m)),
          y = { XObject: ((r = {}), (r[v] = t.ref), r) },
          w = o.formXObject(b, {
            Resources: y,
            BBox: o.obj([0, 0, l.width, l.height]),
            Matrix: o.obj([1, 0, 0, 1, 0, 0]),
          });
        return o.register(w);
      };
      t.prototype.createAppearanceDict = function (e, t, i) {
        var n = this.acroField.dict.context,
          r = this.createAppearanceStream(e, t.on),
          a = this.createAppearanceStream(e, t.off),
          s = n.obj({});
        s.set(i, r);
        s.set(Ua.of("Off"), a);
        return s;
      };
      return t;
    })(),
    sd = (function (e) {
      i(t, e);
      function t(t, i, n) {
        var r = e.call(this, t, i, n) || this;
        Li(t, "acroCheckBox", [[Zl, "PDFAcroCheckBox"]]);
        r.acroField = t;
        return r;
      }
      t.prototype.check = function () {
        var e,
          t =
            null !== (e = this.acroField.getOnValue()) && void 0 !== e
              ? e
              : Ua.of("Yes");
        this.markAsDirty();
        this.acroField.setValue(t);
      };
      t.prototype.uncheck = function () {
        this.markAsDirty();
        this.acroField.setValue(Ua.of("Off"));
      };
      t.prototype.isChecked = function () {
        var e = this.acroField.getOnValue();
        return !!e && e === this.acroField.getValue();
      };
      t.prototype.addToPage = function (e, t) {
        var i, n, r, a, s, o;
        Li(e, "page", [[kd, "PDFPage"]]);
        rd(t);
        if (!t) t = {};
        if (!("textColor" in t)) t.textColor = zh(0, 0, 0);
        if (!("backgroundColor" in t)) t.backgroundColor = zh(1, 1, 1);
        if (!("borderColor" in t)) t.borderColor = zh(0, 0, 0);
        if (!("borderWidth" in t)) t.borderWidth = 1;
        var l = this.createWidget({
            x: null !== (i = t.x) && void 0 !== i ? i : 0,
            y: null !== (n = t.y) && void 0 !== n ? n : 0,
            width: null !== (r = t.width) && void 0 !== r ? r : 50,
            height: null !== (a = t.height) && void 0 !== a ? a : 50,
            textColor: t.textColor,
            backgroundColor: t.backgroundColor,
            borderColor: t.borderColor,
            borderWidth: null !== (s = t.borderWidth) && void 0 !== s ? s : 0,
            rotate: null !== (o = t.rotate) && void 0 !== o ? o : zc(0),
            hidden: t.hidden,
          }),
          c = this.doc.context.register(l.dict);
        this.acroField.addWidget(c);
        l.setAppearanceState(Ua.of("Off"));
        this.updateWidgetAppearance(l, Ua.of("Yes"));
        e.node.addAnnot(c);
      };
      t.prototype.needsAppearancesUpdate = function () {
        for (
          var e, t = this.acroField.getWidgets(), i = 0, n = t.length;
          i < n;
          i++
        ) {
          var r = t[i],
            a = r.getAppearanceState(),
            s =
              null === (e = r.getAppearances()) || void 0 === e
                ? void 0
                : e.normal;
          if (!(s instanceof Ia)) return !0;
          if (a && !s.has(a)) return !0;
        }
        return !1;
      };
      t.prototype.defaultUpdateAppearances = function () {
        this.updateAppearances();
      };
      t.prototype.updateAppearances = function (e) {
        var t;
        Ui(e, "provider", [Function]);
        for (
          var i = this.acroField.getWidgets(), n = 0, r = i.length;
          n < r;
          n++
        ) {
          var a = i[n],
            s =
              null !== (t = a.getOnValue()) && void 0 !== t ? t : Ua.of("Yes");
          if (s) this.updateWidgetAppearance(a, s, e);
        }
        this.markAsClean();
      };
      t.prototype.updateWidgetAppearance = function (e, t, i) {
        var n = Hu((null != i ? i : Yu)(this, e));
        this.updateOnOffWidgetAppearance(e, t, n);
      };
      t.of = function (e, i, n) {
        return new t(e, i, n);
      };
      return t;
    })(ad),
    od = (function (t) {
      i(n, t);
      function n(e, i, n) {
        var r = t.call(this, e, i, n) || this;
        Li(e, "acroComboBox", [[Ql, "PDFAcroComboBox"]]);
        r.acroField = e;
        return r;
      }
      n.prototype.getOptions = function () {
        for (
          var e = this.acroField.getOptions(),
            t = new Array(e.length),
            i = 0,
            n = t.length;
          i < n;
          i++
        ) {
          var r = e[i],
            a = r.display,
            s = r.value;
          t[i] = (null != a ? a : s).decodeText();
        }
        return t;
      };
      n.prototype.getSelected = function () {
        for (
          var e = this.acroField.getValues(),
            t = new Array(e.length),
            i = 0,
            n = e.length;
          i < n;
          i++
        )
          t[i] = e[i].decodeText();
        return t;
      };
      n.prototype.setOptions = function (e) {
        Li(e, "options", [Array]);
        for (var t = new Array(e.length), i = 0, n = e.length; i < n; i++)
          t[i] = { value: ls.fromText(e[i]) };
        this.acroField.setOptions(t);
      };
      n.prototype.addOptions = function (e) {
        Li(e, "options", ["string", Array]);
        for (
          var t = Array.isArray(e) ? e : [e],
            i = this.acroField.getOptions(),
            n = new Array(t.length),
            r = 0,
            a = t.length;
          r < a;
          r++
        )
          n[r] = { value: ls.fromText(t[r]) };
        this.acroField.setOptions(i.concat(n));
      };
      n.prototype.select = function (e, t) {
        if (void 0 === t) t = !1;
        Li(e, "options", ["string", Array]);
        Li(t, "merge", ["boolean"]);
        var i = Array.isArray(e) ? e : [e],
          n = this.getOptions();
        if (
          i.find(function (e) {
            return !n.includes(e);
          })
        )
          this.enableEditing();
        this.markAsDirty();
        if (i.length > 1 || (1 === i.length && t)) this.enableMultiselect();
        for (var r = new Array(i.length), a = 0, s = i.length; a < s; a++)
          r[a] = ls.fromText(i[a]);
        if (t) {
          var o = this.acroField.getValues();
          this.acroField.setValues(o.concat(r));
        } else this.acroField.setValues(r);
      };
      n.prototype.clear = function () {
        this.markAsDirty();
        this.acroField.setValues([]);
      };
      n.prototype.setFontSize = function (e) {
        Gi(e, "fontSize");
        this.acroField.setFontSize(e);
        this.markAsDirty();
      };
      n.prototype.isEditable = function () {
        return this.acroField.hasFlag(e.AcroChoiceFlags.Edit);
      };
      n.prototype.enableEditing = function () {
        this.acroField.setFlagTo(e.AcroChoiceFlags.Edit, !0);
      };
      n.prototype.disableEditing = function () {
        this.acroField.setFlagTo(e.AcroChoiceFlags.Edit, !1);
      };
      n.prototype.isSorted = function () {
        return this.acroField.hasFlag(e.AcroChoiceFlags.Sort);
      };
      n.prototype.enableSorting = function () {
        this.acroField.setFlagTo(e.AcroChoiceFlags.Sort, !0);
      };
      n.prototype.disableSorting = function () {
        this.acroField.setFlagTo(e.AcroChoiceFlags.Sort, !1);
      };
      n.prototype.isMultiselect = function () {
        return this.acroField.hasFlag(e.AcroChoiceFlags.MultiSelect);
      };
      n.prototype.enableMultiselect = function () {
        this.acroField.setFlagTo(e.AcroChoiceFlags.MultiSelect, !0);
      };
      n.prototype.disableMultiselect = function () {
        this.acroField.setFlagTo(e.AcroChoiceFlags.MultiSelect, !1);
      };
      n.prototype.isSpellChecked = function () {
        return !this.acroField.hasFlag(e.AcroChoiceFlags.DoNotSpellCheck);
      };
      n.prototype.enableSpellChecking = function () {
        this.acroField.setFlagTo(e.AcroChoiceFlags.DoNotSpellCheck, !1);
      };
      n.prototype.disableSpellChecking = function () {
        this.acroField.setFlagTo(e.AcroChoiceFlags.DoNotSpellCheck, !0);
      };
      n.prototype.isSelectOnClick = function () {
        return this.acroField.hasFlag(e.AcroChoiceFlags.CommitOnSelChange);
      };
      n.prototype.enableSelectOnClick = function () {
        this.acroField.setFlagTo(e.AcroChoiceFlags.CommitOnSelChange, !0);
      };
      n.prototype.disableSelectOnClick = function () {
        this.acroField.setFlagTo(e.AcroChoiceFlags.CommitOnSelChange, !1);
      };
      n.prototype.addToPage = function (e, t) {
        var i, n, r, a, s, o, l;
        Li(e, "page", [[kd, "PDFPage"]]);
        rd(t);
        if (!t) t = {};
        if (!("textColor" in t)) t.textColor = zh(0, 0, 0);
        if (!("backgroundColor" in t)) t.backgroundColor = zh(1, 1, 1);
        if (!("borderColor" in t)) t.borderColor = zh(0, 0, 0);
        if (!("borderWidth" in t)) t.borderWidth = 1;
        var c = this.createWidget({
            x: null !== (i = t.x) && void 0 !== i ? i : 0,
            y: null !== (n = t.y) && void 0 !== n ? n : 0,
            width: null !== (r = t.width) && void 0 !== r ? r : 200,
            height: null !== (a = t.height) && void 0 !== a ? a : 50,
            textColor: t.textColor,
            backgroundColor: t.backgroundColor,
            borderColor: t.borderColor,
            borderWidth: null !== (s = t.borderWidth) && void 0 !== s ? s : 0,
            rotate: null !== (o = t.rotate) && void 0 !== o ? o : zc(0),
            hidden: t.hidden,
          }),
          h = this.doc.context.register(c.dict);
        this.acroField.addWidget(h);
        var u =
          null !== (l = t.font) && void 0 !== l
            ? l
            : this.doc.getForm().getDefaultFont();
        this.updateWidgetAppearance(c, u);
        e.node.addAnnot(h);
      };
      n.prototype.needsAppearancesUpdate = function () {
        var e;
        if (this.isDirty()) return !0;
        for (
          var t = this.acroField.getWidgets(), i = 0, n = t.length;
          i < n;
          i++
        )
          if (
            !(
              (null === (e = t[i].getAppearances()) || void 0 === e
                ? void 0
                : e.normal) instanceof za
            )
          )
            return !0;
        return !1;
      };
      n.prototype.defaultUpdateAppearances = function (e) {
        Li(e, "font", [[id, "PDFFont"]]);
        this.updateAppearances(e);
      };
      n.prototype.updateAppearances = function (e, t) {
        Li(e, "font", [[id, "PDFFont"]]);
        Ui(t, "provider", [Function]);
        for (
          var i = this.acroField.getWidgets(), n = 0, r = i.length;
          n < r;
          n++
        ) {
          var a = i[n];
          this.updateWidgetAppearance(a, e, t);
        }
        this.markAsClean();
      };
      n.prototype.updateWidgetAppearance = function (e, t, i) {
        var n = Hu((null != i ? i : Qu)(this, e, t));
        this.updateWidgetAppearanceWithFont(e, t, n);
      };
      n.of = function (e, t, i) {
        return new n(e, t, i);
      };
      return n;
    })(ad),
    ld = (function (t) {
      i(n, t);
      function n(e, i, n) {
        var r = t.call(this, e, i, n) || this;
        Li(e, "acroListBox", [[ac, "PDFAcroListBox"]]);
        r.acroField = e;
        return r;
      }
      n.prototype.getOptions = function () {
        for (
          var e = this.acroField.getOptions(),
            t = new Array(e.length),
            i = 0,
            n = t.length;
          i < n;
          i++
        ) {
          var r = e[i],
            a = r.display,
            s = r.value;
          t[i] = (null != a ? a : s).decodeText();
        }
        return t;
      };
      n.prototype.getSelected = function () {
        for (
          var e = this.acroField.getValues(),
            t = new Array(e.length),
            i = 0,
            n = e.length;
          i < n;
          i++
        )
          t[i] = e[i].decodeText();
        return t;
      };
      n.prototype.setOptions = function (e) {
        Li(e, "options", [Array]);
        this.markAsDirty();
        for (var t = new Array(e.length), i = 0, n = e.length; i < n; i++)
          t[i] = { value: ls.fromText(e[i]) };
        this.acroField.setOptions(t);
      };
      n.prototype.addOptions = function (e) {
        Li(e, "options", ["string", Array]);
        this.markAsDirty();
        for (
          var t = Array.isArray(e) ? e : [e],
            i = this.acroField.getOptions(),
            n = new Array(t.length),
            r = 0,
            a = t.length;
          r < a;
          r++
        )
          n[r] = { value: ls.fromText(t[r]) };
        this.acroField.setOptions(i.concat(n));
      };
      n.prototype.select = function (e, t) {
        if (void 0 === t) t = !1;
        Li(e, "options", ["string", Array]);
        Li(t, "merge", ["boolean"]);
        var i = Array.isArray(e) ? e : [e],
          n = this.getOptions();
        Ri(i, "option", n);
        this.markAsDirty();
        if (i.length > 1 || (1 === i.length && t)) this.enableMultiselect();
        for (var r = new Array(i.length), a = 0, s = i.length; a < s; a++)
          r[a] = ls.fromText(i[a]);
        if (t) {
          var o = this.acroField.getValues();
          this.acroField.setValues(o.concat(r));
        } else this.acroField.setValues(r);
      };
      n.prototype.clear = function () {
        this.markAsDirty();
        this.acroField.setValues([]);
      };
      n.prototype.setFontSize = function (e) {
        Gi(e, "fontSize");
        this.acroField.setFontSize(e);
        this.markAsDirty();
      };
      n.prototype.isSorted = function () {
        return this.acroField.hasFlag(e.AcroChoiceFlags.Sort);
      };
      n.prototype.enableSorting = function () {
        this.acroField.setFlagTo(e.AcroChoiceFlags.Sort, !0);
      };
      n.prototype.disableSorting = function () {
        this.acroField.setFlagTo(e.AcroChoiceFlags.Sort, !1);
      };
      n.prototype.isMultiselect = function () {
        return this.acroField.hasFlag(e.AcroChoiceFlags.MultiSelect);
      };
      n.prototype.enableMultiselect = function () {
        this.acroField.setFlagTo(e.AcroChoiceFlags.MultiSelect, !0);
      };
      n.prototype.disableMultiselect = function () {
        this.acroField.setFlagTo(e.AcroChoiceFlags.MultiSelect, !1);
      };
      n.prototype.isSelectOnClick = function () {
        return this.acroField.hasFlag(e.AcroChoiceFlags.CommitOnSelChange);
      };
      n.prototype.enableSelectOnClick = function () {
        this.acroField.setFlagTo(e.AcroChoiceFlags.CommitOnSelChange, !0);
      };
      n.prototype.disableSelectOnClick = function () {
        this.acroField.setFlagTo(e.AcroChoiceFlags.CommitOnSelChange, !1);
      };
      n.prototype.addToPage = function (e, t) {
        var i, n, r, a, s, o, l;
        Li(e, "page", [[kd, "PDFPage"]]);
        rd(t);
        if (!t) t = {};
        if (!("textColor" in t)) t.textColor = zh(0, 0, 0);
        if (!("backgroundColor" in t)) t.backgroundColor = zh(1, 1, 1);
        if (!("borderColor" in t)) t.borderColor = zh(0, 0, 0);
        if (!("borderWidth" in t)) t.borderWidth = 1;
        var c = this.createWidget({
            x: null !== (i = t.x) && void 0 !== i ? i : 0,
            y: null !== (n = t.y) && void 0 !== n ? n : 0,
            width: null !== (r = t.width) && void 0 !== r ? r : 200,
            height: null !== (a = t.height) && void 0 !== a ? a : 100,
            textColor: t.textColor,
            backgroundColor: t.backgroundColor,
            borderColor: t.borderColor,
            borderWidth: null !== (s = t.borderWidth) && void 0 !== s ? s : 0,
            rotate: null !== (o = t.rotate) && void 0 !== o ? o : zc(0),
            hidden: t.hidden,
          }),
          h = this.doc.context.register(c.dict);
        this.acroField.addWidget(h);
        var u =
          null !== (l = t.font) && void 0 !== l
            ? l
            : this.doc.getForm().getDefaultFont();
        this.updateWidgetAppearance(c, u);
        e.node.addAnnot(h);
      };
      n.prototype.needsAppearancesUpdate = function () {
        var e;
        if (this.isDirty()) return !0;
        for (
          var t = this.acroField.getWidgets(), i = 0, n = t.length;
          i < n;
          i++
        )
          if (
            !(
              (null === (e = t[i].getAppearances()) || void 0 === e
                ? void 0
                : e.normal) instanceof za
            )
          )
            return !0;
        return !1;
      };
      n.prototype.defaultUpdateAppearances = function (e) {
        Li(e, "font", [[id, "PDFFont"]]);
        this.updateAppearances(e);
      };
      n.prototype.updateAppearances = function (e, t) {
        Li(e, "font", [[id, "PDFFont"]]);
        Ui(t, "provider", [Function]);
        for (
          var i = this.acroField.getWidgets(), n = 0, r = i.length;
          n < r;
          n++
        ) {
          var a = i[n];
          this.updateWidgetAppearance(a, e, t);
        }
        this.markAsClean();
      };
      n.prototype.updateWidgetAppearance = function (e, t, i) {
        var n = Hu((null != i ? i : ed)(this, e, t));
        this.updateWidgetAppearanceWithFont(e, t, n);
      };
      n.of = function (e, t, i) {
        return new n(e, t, i);
      };
      return n;
    })(ad),
    cd = (function (t) {
      i(n, t);
      function n(e, i, n) {
        var r = t.call(this, e, i, n) || this;
        Li(e, "acroRadioButton", [[rc, "PDFAcroRadioButton"]]);
        r.acroField = e;
        return r;
      }
      n.prototype.getOptions = function () {
        var e = this.acroField.getExportValues();
        if (e) {
          for (var t = new Array(e.length), i = 0, n = e.length; i < n; i++)
            t[i] = e[i].decodeText();
          return t;
        }
        var r = this.acroField.getOnValues(),
          a = new Array(r.length);
        for (i = 0, n = a.length; i < n; i++) a[i] = r[i].decodeText();
        return a;
      };
      n.prototype.getSelected = function () {
        var e = this.acroField.getValue();
        if (e !== Ua.of("Off")) {
          var t = this.acroField.getExportValues();
          if (t)
            for (
              var i = this.acroField.getOnValues(), n = 0, r = i.length;
              n < r;
              n++
            )
              if (i[n] === e) return t[n].decodeText();
          return e.decodeText();
        }
      };
      n.prototype.select = function (e) {
        Li(e, "option", ["string"]);
        var t = this.getOptions();
        Di(e, "option", t);
        this.markAsDirty();
        var i = this.acroField.getOnValues(),
          n = this.acroField.getExportValues();
        if (n) {
          for (var r = 0, a = n.length; r < a; r++)
            if (n[r].decodeText() === e) this.acroField.setValue(i[r]);
        } else
          for (r = 0, a = i.length; r < a; r++) {
            var s = i[r];
            if (s.decodeText() === e) this.acroField.setValue(s);
          }
      };
      n.prototype.clear = function () {
        this.markAsDirty();
        this.acroField.setValue(Ua.of("Off"));
      };
      n.prototype.isOffToggleable = function () {
        return !this.acroField.hasFlag(e.AcroButtonFlags.NoToggleToOff);
      };
      n.prototype.enableOffToggling = function () {
        this.acroField.setFlagTo(e.AcroButtonFlags.NoToggleToOff, !1);
      };
      n.prototype.disableOffToggling = function () {
        this.acroField.setFlagTo(e.AcroButtonFlags.NoToggleToOff, !0);
      };
      n.prototype.isMutuallyExclusive = function () {
        return !this.acroField.hasFlag(e.AcroButtonFlags.RadiosInUnison);
      };
      n.prototype.enableMutualExclusion = function () {
        this.acroField.setFlagTo(e.AcroButtonFlags.RadiosInUnison, !1);
      };
      n.prototype.disableMutualExclusion = function () {
        this.acroField.setFlagTo(e.AcroButtonFlags.RadiosInUnison, !0);
      };
      n.prototype.addOptionToPage = function (e, t, i) {
        var n, r, a, s, o, l, c, h, u;
        Li(e, "option", ["string"]);
        Li(t, "page", [[kd, "PDFPage"]]);
        rd(i);
        var d = this.createWidget({
            x: null !== (n = null == i ? void 0 : i.x) && void 0 !== n ? n : 0,
            y: null !== (r = null == i ? void 0 : i.y) && void 0 !== r ? r : 0,
            width:
              null !== (a = null == i ? void 0 : i.width) && void 0 !== a
                ? a
                : 50,
            height:
              null !== (s = null == i ? void 0 : i.height) && void 0 !== s
                ? s
                : 50,
            textColor:
              null !== (o = null == i ? void 0 : i.textColor) && void 0 !== o
                ? o
                : zh(0, 0, 0),
            backgroundColor:
              null !== (l = null == i ? void 0 : i.backgroundColor) &&
              void 0 !== l
                ? l
                : zh(1, 1, 1),
            borderColor:
              null !== (c = null == i ? void 0 : i.borderColor) && void 0 !== c
                ? c
                : zh(0, 0, 0),
            borderWidth:
              null !== (h = null == i ? void 0 : i.borderWidth) && void 0 !== h
                ? h
                : 1,
            rotate:
              null !== (u = null == i ? void 0 : i.rotate) && void 0 !== u
                ? u
                : zc(0),
            hidden: null == i ? void 0 : i.hidden,
          }),
          f = this.doc.context.register(d.dict),
          p = this.acroField.addWidgetWithOpt(
            f,
            ls.fromText(e),
            !this.isMutuallyExclusive()
          );
        d.setAppearanceState(Ua.of("Off"));
        this.updateWidgetAppearance(d, p);
        t.node.addAnnot(f);
      };
      n.prototype.needsAppearancesUpdate = function () {
        for (
          var e, t = this.acroField.getWidgets(), i = 0, n = t.length;
          i < n;
          i++
        ) {
          var r = t[i],
            a = r.getAppearanceState(),
            s =
              null === (e = r.getAppearances()) || void 0 === e
                ? void 0
                : e.normal;
          if (!(s instanceof Ia)) return !0;
          if (a && !s.has(a)) return !0;
        }
        return !1;
      };
      n.prototype.defaultUpdateAppearances = function () {
        this.updateAppearances();
      };
      n.prototype.updateAppearances = function (e) {
        Ui(e, "provider", [Function]);
        for (
          var t = this.acroField.getWidgets(), i = 0, n = t.length;
          i < n;
          i++
        ) {
          var r = t[i],
            a = r.getOnValue();
          if (a) this.updateWidgetAppearance(r, a, e);
        }
      };
      n.prototype.updateWidgetAppearance = function (e, t, i) {
        var n = Hu((null != i ? i : Zu)(this, e));
        this.updateOnOffWidgetAppearance(e, t, n);
      };
      n.of = function (e, t, i) {
        return new n(e, t, i);
      };
      return n;
    })(ad),
    hd = (function (e) {
      i(t, e);
      function t(t, i, n) {
        var r = e.call(this, t, i, n) || this;
        Li(t, "acroSignature", [[tc, "PDFAcroSignature"]]);
        r.acroField = t;
        return r;
      }
      t.prototype.needsAppearancesUpdate = function () {
        return !1;
      };
      t.of = function (e, i, n) {
        return new t(e, i, n);
      };
      return t;
    })(ad),
    ud = (function (t) {
      i(n, t);
      function n(e, i, n) {
        var r = t.call(this, e, i, n) || this;
        Li(e, "acroText", [[ic, "PDFAcroText"]]);
        r.acroField = e;
        return r;
      }
      n.prototype.getText = function () {
        var e = this.acroField.getValue();
        if (!e && this.isRichFormatted()) throw new Ou(this.getName());
        return null == e ? void 0 : e.decodeText();
      };
      n.prototype.setText = function (e) {
        Ui(e, "text", ["string"]);
        var t = this.getMaxLength();
        if (void 0 !== t && e && e.length > t)
          throw new Nu(e.length, t, this.getName());
        this.markAsDirty();
        this.disableRichFormatting();
        if (e) this.acroField.setValue(ls.fromText(e));
        else this.acroField.removeValue();
      };
      n.prototype.getAlignment = function () {
        var t = this.acroField.getQuadding();
        return 0 === t
          ? e.TextAlignment.Left
          : 1 === t
          ? e.TextAlignment.Center
          : 2 === t
          ? e.TextAlignment.Right
          : e.TextAlignment.Left;
      };
      n.prototype.setAlignment = function (t) {
        Di(t, "alignment", e.TextAlignment);
        this.markAsDirty();
        this.acroField.setQuadding(t);
      };
      n.prototype.getMaxLength = function () {
        return this.acroField.getMaxLength();
      };
      n.prototype.setMaxLength = function (e) {
        qi(e, "maxLength", 0, Number.MAX_SAFE_INTEGER);
        this.markAsDirty();
        if (void 0 === e) this.acroField.removeMaxLength();
        else {
          var t = this.getText();
          if (t && t.length > e) throw new Mu(t.length, e, this.getName());
          this.acroField.setMaxLength(e);
        }
      };
      n.prototype.removeMaxLength = function () {
        this.markAsDirty();
        this.acroField.removeMaxLength();
      };
      n.prototype.setImage = function (t) {
        for (
          var i = this.getAlignment(),
            n =
              i === e.TextAlignment.Center
                ? Bu.Center
                : i === e.TextAlignment.Right
                ? Bu.Right
                : Bu.Left,
            r = this.acroField.getWidgets(),
            a = 0,
            s = r.length;
          a < s;
          a++
        ) {
          var o = r[a],
            l = this.createImageAppearanceStream(o, t, n);
          this.updateWidgetAppearances(o, { normal: l });
        }
        this.markAsClean();
      };
      n.prototype.setFontSize = function (e) {
        Gi(e, "fontSize");
        this.acroField.setFontSize(e);
        this.markAsDirty();
      };
      n.prototype.isMultiline = function () {
        return this.acroField.hasFlag(e.AcroTextFlags.Multiline);
      };
      n.prototype.enableMultiline = function () {
        this.markAsDirty();
        this.acroField.setFlagTo(e.AcroTextFlags.Multiline, !0);
      };
      n.prototype.disableMultiline = function () {
        this.markAsDirty();
        this.acroField.setFlagTo(e.AcroTextFlags.Multiline, !1);
      };
      n.prototype.isPassword = function () {
        return this.acroField.hasFlag(e.AcroTextFlags.Password);
      };
      n.prototype.enablePassword = function () {
        this.acroField.setFlagTo(e.AcroTextFlags.Password, !0);
      };
      n.prototype.disablePassword = function () {
        this.acroField.setFlagTo(e.AcroTextFlags.Password, !1);
      };
      n.prototype.isFileSelector = function () {
        return this.acroField.hasFlag(e.AcroTextFlags.FileSelect);
      };
      n.prototype.enableFileSelection = function () {
        this.acroField.setFlagTo(e.AcroTextFlags.FileSelect, !0);
      };
      n.prototype.disableFileSelection = function () {
        this.acroField.setFlagTo(e.AcroTextFlags.FileSelect, !1);
      };
      n.prototype.isSpellChecked = function () {
        return !this.acroField.hasFlag(e.AcroTextFlags.DoNotSpellCheck);
      };
      n.prototype.enableSpellChecking = function () {
        this.acroField.setFlagTo(e.AcroTextFlags.DoNotSpellCheck, !1);
      };
      n.prototype.disableSpellChecking = function () {
        this.acroField.setFlagTo(e.AcroTextFlags.DoNotSpellCheck, !0);
      };
      n.prototype.isScrollable = function () {
        return !this.acroField.hasFlag(e.AcroTextFlags.DoNotScroll);
      };
      n.prototype.enableScrolling = function () {
        this.acroField.setFlagTo(e.AcroTextFlags.DoNotScroll, !1);
      };
      n.prototype.disableScrolling = function () {
        this.acroField.setFlagTo(e.AcroTextFlags.DoNotScroll, !0);
      };
      n.prototype.isCombed = function () {
        return (
          this.acroField.hasFlag(e.AcroTextFlags.Comb) &&
          !this.isMultiline() &&
          !this.isPassword() &&
          !this.isFileSelector() &&
          void 0 !== this.getMaxLength()
        );
      };
      n.prototype.enableCombing = function () {
        if (void 0 === this.getMaxLength());
        this.markAsDirty();
        this.disableMultiline();
        this.disablePassword();
        this.disableFileSelection();
        this.acroField.setFlagTo(e.AcroTextFlags.Comb, !0);
      };
      n.prototype.disableCombing = function () {
        this.markAsDirty();
        this.acroField.setFlagTo(e.AcroTextFlags.Comb, !1);
      };
      n.prototype.isRichFormatted = function () {
        return this.acroField.hasFlag(e.AcroTextFlags.RichText);
      };
      n.prototype.enableRichFormatting = function () {
        this.acroField.setFlagTo(e.AcroTextFlags.RichText, !0);
      };
      n.prototype.disableRichFormatting = function () {
        this.acroField.setFlagTo(e.AcroTextFlags.RichText, !1);
      };
      n.prototype.addToPage = function (e, t) {
        var i, n, r, a, s, o, l;
        Li(e, "page", [[kd, "PDFPage"]]);
        rd(t);
        if (!t) t = {};
        if (!("textColor" in t)) t.textColor = zh(0, 0, 0);
        if (!("backgroundColor" in t)) t.backgroundColor = zh(1, 1, 1);
        if (!("borderColor" in t)) t.borderColor = zh(0, 0, 0);
        if (!("borderWidth" in t)) t.borderWidth = 1;
        var c = this.createWidget({
            x: null !== (i = t.x) && void 0 !== i ? i : 0,
            y: null !== (n = t.y) && void 0 !== n ? n : 0,
            width: null !== (r = t.width) && void 0 !== r ? r : 200,
            height: null !== (a = t.height) && void 0 !== a ? a : 50,
            textColor: t.textColor,
            backgroundColor: t.backgroundColor,
            borderColor: t.borderColor,
            borderWidth: null !== (s = t.borderWidth) && void 0 !== s ? s : 0,
            rotate: null !== (o = t.rotate) && void 0 !== o ? o : zc(0),
            hidden: t.hidden,
          }),
          h = this.doc.context.register(c.dict);
        this.acroField.addWidget(h);
        var u =
          null !== (l = t.font) && void 0 !== l
            ? l
            : this.doc.getForm().getDefaultFont();
        this.updateWidgetAppearance(c, u);
        e.node.addAnnot(h);
      };
      n.prototype.needsAppearancesUpdate = function () {
        var e;
        if (this.isDirty()) return !0;
        for (
          var t = this.acroField.getWidgets(), i = 0, n = t.length;
          i < n;
          i++
        )
          if (
            !(
              (null === (e = t[i].getAppearances()) || void 0 === e
                ? void 0
                : e.normal) instanceof za
            )
          )
            return !0;
        return !1;
      };
      n.prototype.defaultUpdateAppearances = function (e) {
        Li(e, "font", [[id, "PDFFont"]]);
        this.updateAppearances(e);
      };
      n.prototype.updateAppearances = function (e, t) {
        Li(e, "font", [[id, "PDFFont"]]);
        Ui(t, "provider", [Function]);
        for (
          var i = this.acroField.getWidgets(), n = 0, r = i.length;
          n < r;
          n++
        ) {
          var a = i[n];
          this.updateWidgetAppearance(a, e, t);
        }
        this.markAsClean();
      };
      n.prototype.updateWidgetAppearance = function (e, t, i) {
        var n = Hu((null != i ? i : $u)(this, e, t));
        this.updateWidgetAppearanceWithFont(e, t, n);
      };
      n.of = function (e, t, i) {
        return new n(e, t, i);
      };
      return n;
    })(ad);
  !(function (e) {
    e.Courier = "Courier";
    e.CourierBold = "Courier-Bold";
    e.CourierOblique = "Courier-Oblique";
    e.CourierBoldOblique = "Courier-BoldOblique";
    e.Helvetica = "Helvetica";
    e.HelveticaBold = "Helvetica-Bold";
    e.HelveticaOblique = "Helvetica-Oblique";
    e.HelveticaBoldOblique = "Helvetica-BoldOblique";
    e.TimesRoman = "Times-Roman";
    e.TimesRomanBold = "Times-Bold";
    e.TimesRomanItalic = "Times-Italic";
    e.TimesRomanBoldItalic = "Times-BoldItalic";
    e.Symbol = "Symbol";
    e.ZapfDingbats = "ZapfDingbats";
  })(e.StandardFonts || (e.StandardFonts = {}));
  var dd = (function () {
      function t(t, i) {
        var n = this;
        this.embedDefaultFont = function () {
          return n.doc.embedStandardFont(e.StandardFonts.Helvetica);
        };
        Li(t, "acroForm", [[gc, "PDFAcroForm"]]);
        Li(i, "doc", [[wd, "PDFDocument"]]);
        this.acroForm = t;
        this.doc = i;
        this.dirtyFields = new Set();
        this.defaultFontCache = Zi.populatedBy(this.embedDefaultFont);
      }
      t.prototype.hasXFA = function () {
        return this.acroForm.dict.has(Ua.of("XFA"));
      };
      t.prototype.deleteXFA = function () {
        this.acroForm.dict.delete(Ua.of("XFA"));
      };
      t.prototype.getFields = function () {
        for (
          var e = this.acroForm.getAllFields(), t = [], i = 0, n = e.length;
          i < n;
          i++
        ) {
          var r = e[i],
            a = r[0],
            s = r[1],
            o = fd(a, s, this.doc);
          if (o) t.push(o);
        }
        return t;
      };
      t.prototype.getFieldMaybe = function (e) {
        Li(e, "name", ["string"]);
        for (var t = this.getFields(), i = 0, n = t.length; i < n; i++) {
          var r = t[i];
          if (r.getName() === e) return r;
        }
      };
      t.prototype.getField = function (e) {
        Li(e, "name", ["string"]);
        var t = this.getFieldMaybe(e);
        if (t) return t;
        throw new Fu(e);
      };
      t.prototype.getButton = function (e) {
        Li(e, "name", ["string"]);
        var t = this.getField(e);
        if (t instanceof Cd) return t;
        throw new Tu(e, Cd, t);
      };
      t.prototype.getCheckBox = function (e) {
        Li(e, "name", ["string"]);
        var t = this.getField(e);
        if (t instanceof sd) return t;
        throw new Tu(e, sd, t);
      };
      t.prototype.getDropdown = function (e) {
        Li(e, "name", ["string"]);
        var t = this.getField(e);
        if (t instanceof od) return t;
        throw new Tu(e, od, t);
      };
      t.prototype.getOptionList = function (e) {
        Li(e, "name", ["string"]);
        var t = this.getField(e);
        if (t instanceof ld) return t;
        throw new Tu(e, ld, t);
      };
      t.prototype.getRadioGroup = function (e) {
        Li(e, "name", ["string"]);
        var t = this.getField(e);
        if (t instanceof cd) return t;
        throw new Tu(e, cd, t);
      };
      t.prototype.getSignature = function (e) {
        Li(e, "name", ["string"]);
        var t = this.getField(e);
        if (t instanceof hd) return t;
        throw new Tu(e, hd, t);
      };
      t.prototype.getTextField = function (e) {
        Li(e, "name", ["string"]);
        var t = this.getField(e);
        if (t instanceof ud) return t;
        throw new Tu(e, ud, t);
      };
      t.prototype.createButton = function (e) {
        Li(e, "name", ["string"]);
        var t = pd(e),
          i = this.findOrCreateNonTerminals(t.nonTerminal),
          n = nc.create(this.doc.context);
        n.setPartialName(t.terminal);
        gd(i, [n, n.ref], t.terminal);
        return Cd.of(n, n.ref, this.doc);
      };
      t.prototype.createCheckBox = function (e) {
        Li(e, "name", ["string"]);
        var t = pd(e),
          i = this.findOrCreateNonTerminals(t.nonTerminal),
          n = Zl.create(this.doc.context);
        n.setPartialName(t.terminal);
        gd(i, [n, n.ref], t.terminal);
        return sd.of(n, n.ref, this.doc);
      };
      t.prototype.createDropdown = function (e) {
        Li(e, "name", ["string"]);
        var t = pd(e),
          i = this.findOrCreateNonTerminals(t.nonTerminal),
          n = Ql.create(this.doc.context);
        n.setPartialName(t.terminal);
        gd(i, [n, n.ref], t.terminal);
        return od.of(n, n.ref, this.doc);
      };
      t.prototype.createOptionList = function (e) {
        Li(e, "name", ["string"]);
        var t = pd(e),
          i = this.findOrCreateNonTerminals(t.nonTerminal),
          n = ac.create(this.doc.context);
        n.setPartialName(t.terminal);
        gd(i, [n, n.ref], t.terminal);
        return ld.of(n, n.ref, this.doc);
      };
      t.prototype.createRadioGroup = function (e) {
        Li(e, "name", ["string"]);
        var t = pd(e),
          i = this.findOrCreateNonTerminals(t.nonTerminal),
          n = rc.create(this.doc.context);
        n.setPartialName(t.terminal);
        gd(i, [n, n.ref], t.terminal);
        return cd.of(n, n.ref, this.doc);
      };
      t.prototype.createTextField = function (e) {
        Li(e, "name", ["string"]);
        var t = pd(e),
          i = this.findOrCreateNonTerminals(t.nonTerminal),
          n = ic.create(this.doc.context);
        n.setPartialName(t.terminal);
        gd(i, [n, n.ref], t.terminal);
        return ud.of(n, n.ref, this.doc);
      };
      t.prototype.flatten = function (e) {
        if (void 0 === e) e = { updateFieldAppearances: !0 };
        if (e.updateFieldAppearances) this.updateFieldAppearances();
        for (var t = this.getFields(), i = 0, r = t.length; i < r; i++) {
          for (
            var a = t[i], o = a.acroField.getWidgets(), l = 0, c = o.length;
            l < c;
            l++
          ) {
            var h = o[l],
              u = this.findWidgetPage(h),
              d = this.findWidgetAppearanceRef(a, h),
              f = C("FlatWidget", 10);
            u.node.setXObject(Ua.of(f), d);
            var p = h.getRectangle(),
              g = s([ch(), th(p.x, p.y)], mu(n(n({}, p), { rotation: 0 })), [
                Eh(f),
                hh(),
              ]).filter(Boolean);
            u.pushOperators.apply(u, g);
          }
          this.removeField(a);
        }
      };
      t.prototype.removeField = function (e) {
        for (
          var t = e.acroField.getWidgets(), i = new Set(), n = 0, r = t.length;
          n < r;
          n++
        ) {
          var a = t[n],
            s = this.findWidgetAppearanceRef(e, a),
            o = this.findWidgetPage(a);
          i.add(o);
          o.node.removeAnnot(s);
        }
        i.forEach(function (t) {
          return t.node.removeAnnot(e.ref);
        });
        this.acroForm.removeField(e.acroField);
        this.doc.context.delete(e.ref);
      };
      t.prototype.updateFieldAppearances = function (e) {
        Ui(e, "font", [[id, "PDFFont"]]);
        e = null != e ? e : this.getDefaultFont();
        for (var t = this.getFields(), i = 0, n = t.length; i < n; i++) {
          var r = t[i];
          if (r.needsAppearancesUpdate()) r.defaultUpdateAppearances(e);
        }
      };
      t.prototype.markFieldAsDirty = function (e) {
        Ui(e, "fieldRef", [[Wa, "PDFRef"]]);
        this.dirtyFields.add(e);
      };
      t.prototype.markFieldAsClean = function (e) {
        Ui(e, "fieldRef", [[Wa, "PDFRef"]]);
        this.dirtyFields.delete(e);
      };
      t.prototype.fieldIsDirty = function (e) {
        Ui(e, "fieldRef", [[Wa, "PDFRef"]]);
        return this.dirtyFields.has(e);
      };
      t.prototype.getDefaultFont = function () {
        return this.defaultFontCache.access();
      };
      t.prototype.findWidgetPage = function (e) {
        var t = e.P(),
          i = this.doc.getPages().find(function (e) {
            return e.ref === t;
          });
        if (void 0 === i) {
          var n = this.doc.context.getObjectRef(e.dict);
          if (void 0 === n)
            throw new Error("Could not find PDFRef for PDFObject");
          if (void 0 === (i = this.doc.findPageForAnnotationRef(n)))
            throw new Error("Could not find page for PDFRef " + n);
        }
        return i;
      };
      t.prototype.findWidgetAppearanceRef = function (e, t) {
        var i,
          n = t.getNormalAppearance();
        if (n instanceof Ia && (e instanceof sd || e instanceof cd)) {
          var r = e.acroField.getValue(),
            a =
              null !== (i = n.get(r)) && void 0 !== i ? i : n.get(Ua.of("Off"));
          if (a instanceof Wa) n = a;
        }
        if (!(n instanceof Wa)) {
          var s = e.getName();
          throw new Error("Failed to extract appearance ref for: " + s);
        }
        return n;
      };
      t.prototype.findOrCreateNonTerminals = function (e) {
        for (var t = [this.acroForm], i = 0, n = e.length; i < n; i++) {
          var r = e[i];
          if (!r) throw new Iu(r);
          var a = t[0],
            s = t[1],
            o = this.findNonTerminal(r, a);
          if (o) t = o;
          else {
            var l = ec.create(this.doc.context);
            l.setPartialName(r);
            l.setParent(s);
            var c = this.doc.context.register(l.dict);
            a.addField(c);
            t = [l, c];
          }
        }
        return t;
      };
      t.prototype.findNonTerminal = function (e, t) {
        for (
          var i = t instanceof gc ? this.acroForm.getFields() : sc(t.Kids()),
            n = 0,
            r = i.length;
          n < r;
          n++
        ) {
          var a = i[n],
            s = a[0],
            o = a[1];
          if (s.getPartialName() === e) {
            if (s instanceof ec) return [s, o];
            throw new Eu(e);
          }
        }
      };
      t.of = function (e, i) {
        return new t(e, i);
      };
      return t;
    })(),
    fd = function (e, t, i) {
      if (e instanceof nc) return Cd.of(e, t, i);
      if (e instanceof Zl) return sd.of(e, t, i);
      if (e instanceof Ql) return od.of(e, t, i);
      if (e instanceof ac) return ld.of(e, t, i);
      if (e instanceof ic) return ud.of(e, t, i);
      if (e instanceof rc) return cd.of(e, t, i);
      if (e instanceof tc) return hd.of(e, t, i);
    },
    pd = function (e) {
      if (0 === e.length)
        throw new Error("PDF field names must not be empty strings");
      for (var t = e.split("."), i = 0, n = t.length; i < n; i++)
        if ("" === t[i])
          throw new Error(
            'Periods in PDF field names must be separated by at least one character: "' +
              e +
              '"'
          );
      if (1 === t.length) return { nonTerminal: [], terminal: t[0] };
      else
        return {
          nonTerminal: t.slice(0, t.length - 1),
          terminal: t[t.length - 1],
        };
    },
    gd = function (e, t, i) {
      for (
        var n = e[0],
          r = e[1],
          a = t[0],
          s = t[1],
          o = n.normalizedEntries(),
          l = sc(("Kids" in o) ? o.Kids : o.Fields),
          c = 0,
          h = l.length;
        c < h;
        c++
      )
        if (l[c][0].getPartialName() === i) throw new Eu(i);
      n.addField(s);
      a.setParent(r);
    },
    md = {
      "4A0": [4767.87, 6740.79],
      "2A0": [3370.39, 4767.87],
      A0: [2383.94, 3370.39],
      A1: [1683.78, 2383.94],
      A2: [1190.55, 1683.78],
      A3: [841.89, 1190.55],
      A4: [595.28, 841.89],
      A5: [419.53, 595.28],
      A6: [297.64, 419.53],
      A7: [209.76, 297.64],
      A8: [147.4, 209.76],
      A9: [104.88, 147.4],
      A10: [73.7, 104.88],
      B0: [2834.65, 4008.19],
      B1: [2004.09, 2834.65],
      B2: [1417.32, 2004.09],
      B3: [1000.63, 1417.32],
      B4: [708.66, 1000.63],
      B5: [498.9, 708.66],
      B6: [354.33, 498.9],
      B7: [249.45, 354.33],
      B8: [175.75, 249.45],
      B9: [124.72, 175.75],
      B10: [87.87, 124.72],
      C0: [2599.37, 3676.54],
      C1: [1836.85, 2599.37],
      C2: [1298.27, 1836.85],
      C3: [918.43, 1298.27],
      C4: [649.13, 918.43],
      C5: [459.21, 649.13],
      C6: [323.15, 459.21],
      C7: [229.61, 323.15],
      C8: [161.57, 229.61],
      C9: [113.39, 161.57],
      C10: [79.37, 113.39],
      RA0: [2437.8, 3458.27],
      RA1: [1729.13, 2437.8],
      RA2: [1218.9, 1729.13],
      RA3: [864.57, 1218.9],
      RA4: [609.45, 864.57],
      SRA0: [2551.18, 3628.35],
      SRA1: [1814.17, 2551.18],
      SRA2: [1275.59, 1814.17],
      SRA3: [907.09, 1275.59],
      SRA4: [637.8, 907.09],
      Executive: [521.86, 756],
      Folio: [612, 936],
      Legal: [612, 1008],
      Letter: [612, 792],
      Tabloid: [792, 1224],
    };
  !(function (e) {
    e[(e.Fastest = 1 / 0)] = "Fastest";
    e[(e.Fast = 1500)] = "Fast";
    e[(e.Medium = 500)] = "Medium";
    e[(e.Slow = 100)] = "Slow";
  })(e.ParseSpeeds || (e.ParseSpeeds = {}));
  var vd = (function () {
      function e(e, t, i) {
        this.alreadyEmbedded = !1;
        this.ref = e;
        this.doc = t;
        this.embedder = i;
      }
      e.prototype.embed = function () {
        return r(this, void 0, void 0, function () {
          var e, t, i, n;
          return a(this, function (r) {
            switch (r.label) {
              case 0:
                if (this.alreadyEmbedded) return [3, 2];
                else
                  return [
                    4,
                    this.embedder.embedIntoContext(this.doc.context, this.ref),
                  ];
              case 1:
                e = r.sent();
                if (!this.doc.catalog.has(Ua.of("Names")))
                  this.doc.catalog.set(
                    Ua.of("Names"),
                    this.doc.context.obj({})
                  );
                if (
                  !(t = this.doc.catalog.lookup(Ua.of("Names"), Ia)).has(
                    Ua.of("EmbeddedFiles")
                  )
                )
                  t.set(Ua.of("EmbeddedFiles"), this.doc.context.obj({}));
                if (
                  !(i = t.lookup(Ua.of("EmbeddedFiles"), Ia)).has(
                    Ua.of("Names")
                  )
                )
                  i.set(Ua.of("Names"), this.doc.context.obj([]));
                (n = i.lookup(Ua.of("Names"), Fa)).push(
                  ls.fromText(this.embedder.fileName)
                );
                n.push(e);
                if (!this.doc.catalog.has(Ua.of("AF")))
                  this.doc.catalog.set(Ua.of("AF"), this.doc.context.obj([]));
                this.doc.catalog.lookup(Ua.of("AF"), Fa).push(e);
                this.alreadyEmbedded = !0;
                r.label = 2;
              case 2:
                return [2];
            }
          });
        });
      };
      e.of = function (t, i, n) {
        return new e(t, i, n);
      };
      return e;
    })(),
    bd = (function () {
      function e(e, t, i) {
        this.alreadyEmbedded = !1;
        this.ref = e;
        this.doc = t;
        this.embedder = i;
      }
      e.prototype.embed = function () {
        return r(this, void 0, void 0, function () {
          var e, t, i, n, r, s, o;
          return a(this, function (a) {
            switch (a.label) {
              case 0:
                if (this.alreadyEmbedded) return [3, 2];
                (e = this.doc), (t = e.catalog), (i = e.context);
                return [
                  4,
                  this.embedder.embedIntoContext(this.doc.context, this.ref),
                ];
              case 1:
                n = a.sent();
                if (!t.has(Ua.of("Names"))) t.set(Ua.of("Names"), i.obj({}));
                if (
                  !(r = t.lookup(Ua.of("Names"), Ia)).has(Ua.of("JavaScript"))
                )
                  r.set(Ua.of("JavaScript"), i.obj({}));
                if (
                  !(s = r.lookup(Ua.of("JavaScript"), Ia)).has(Ua.of("Names"))
                )
                  s.set(Ua.of("Names"), i.obj([]));
                (o = s.lookup(Ua.of("Names"), Fa)).push(
                  ls.fromText(this.embedder.scriptName)
                );
                o.push(n);
                this.alreadyEmbedded = !0;
                a.label = 2;
              case 2:
                return [2];
            }
          });
        });
      };
      e.of = function (t, i, n) {
        return new e(t, i, n);
      };
      return e;
    })(),
    yd = (function () {
      function e(e, t) {
        this.script = e;
        this.scriptName = t;
      }
      e.for = function (t, i) {
        return new e(t, i);
      };
      e.prototype.embedIntoContext = function (e, t) {
        return r(this, void 0, void 0, function () {
          var i;
          return a(this, function (n) {
            i = e.obj({
              Type: "Action",
              S: "JavaScript",
              JS: ls.fromText(this.script),
            });
            if (t) {
              e.assign(t, i);
              return [2, t];
            } else return [2, e.register(i)];
          });
        });
      };
      return e;
    })(),
    wd = (function () {
      function t(e, t, i) {
        var n = this;
        this.defaultWordBreaks = [" "];
        this.computePages = function () {
          var e = [];
          n.catalog.Pages().traverse(function (t, i) {
            if (t instanceof $a) {
              var r = n.pageMap.get(t);
              if (!r) {
                r = kd.of(t, i, n);
                n.pageMap.set(t, r);
              }
              e.push(r);
            }
          });
          return e;
        };
        this.getOrCreateForm = function () {
          var e = n.catalog.getOrCreateAcroForm();
          return dd.of(e, n);
        };
        Li(e, "context", [[Ja, "PDFContext"]]);
        Li(t, "ignoreEncryption", ["boolean"]);
        this.context = e;
        this.catalog = e.lookup(e.trailerInfo.Root);
        this.isEncrypted = !!e.lookup(e.trailerInfo.Encrypt);
        this.pageCache = Zi.populatedBy(this.computePages);
        this.pageMap = new Map();
        this.formCache = Zi.populatedBy(this.getOrCreateForm);
        this.fonts = [];
        this.images = [];
        this.embeddedPages = [];
        this.embeddedFiles = [];
        this.javaScripts = [];
        if (!t && this.isEncrypted) throw new Cu();
        if (i) this.updateInfoDict();
      }
      t.load = function (i, n) {
        if (void 0 === n) n = {};
        return r(this, void 0, void 0, function () {
          var r, s, o, l, c, h, u, d, f, p, g;
          return a(this, function (a) {
            switch (a.label) {
              case 0:
                (r = n.ignoreEncryption),
                  (s = void 0 === r ? !1 : r),
                  (o = n.parseSpeed),
                  (l = void 0 === o ? e.ParseSpeeds.Slow : o),
                  (c = n.throwOnInvalidObject),
                  (h = void 0 === c ? !1 : c),
                  (u = n.updateMetadata),
                  (d = void 0 === u ? !0 : u),
                  (f = n.capNumbers),
                  (p = void 0 === f ? !1 : f);
                Li(i, "pdf", ["string", Uint8Array, ArrayBuffer]);
                Li(s, "ignoreEncryption", ["boolean"]);
                Li(l, "parseSpeed", ["number"]);
                Li(h, "throwOnInvalidObject", ["boolean"]);
                g = K(i);
                return [4, Nc.forBytesWithOptions(g, l, h, p).parseDocument()];
              case 1:
                return [2, new t(a.sent(), s, d)];
            }
          });
        });
      };
      t.create = function (e) {
        if (void 0 === e) e = {};
        return r(this, void 0, void 0, function () {
          var i, n, r, s, o, l;
          return a(this, function (a) {
            (i = e.updateMetadata), (n = void 0 === i ? !0 : i);
            r = Ja.create();
            s = vc.withContext(r);
            o = r.register(s);
            l = mc.withContextAndPages(r, o);
            r.trailerInfo.Root = r.register(l);
            return [2, new t(r, !1, n)];
          });
        });
      };
      t.prototype.registerFontkit = function (e) {
        this.fontkit = e;
      };
      t.prototype.getForm = function () {
        var e = this.formCache.access();
        if (e.hasXFA()) e.deleteXFA();
        return e;
      };
      t.prototype.getTitle = function () {
        var e = this.getInfoDict().lookup(Ua.Title);
        if (e) {
          xd(e);
          return e.decodeText();
        }
      };
      t.prototype.getAuthor = function () {
        var e = this.getInfoDict().lookup(Ua.Author);
        if (e) {
          xd(e);
          return e.decodeText();
        }
      };
      t.prototype.getSubject = function () {
        var e = this.getInfoDict().lookup(Ua.Subject);
        if (e) {
          xd(e);
          return e.decodeText();
        }
      };
      t.prototype.getKeywords = function () {
        var e = this.getInfoDict().lookup(Ua.Keywords);
        if (e) {
          xd(e);
          return e.decodeText();
        }
      };
      t.prototype.getCreator = function () {
        var e = this.getInfoDict().lookup(Ua.Creator);
        if (e) {
          xd(e);
          return e.decodeText();
        }
      };
      t.prototype.getProducer = function () {
        var e = this.getInfoDict().lookup(Ua.Producer);
        if (e) {
          xd(e);
          return e.decodeText();
        }
      };
      t.prototype.getCreationDate = function () {
        var e = this.getInfoDict().lookup(Ua.CreationDate);
        if (e) {
          xd(e);
          return e.decodeDate();
        }
      };
      t.prototype.getModificationDate = function () {
        var e = this.getInfoDict().lookup(Ua.ModDate);
        if (e) {
          xd(e);
          return e.decodeDate();
        }
      };
      t.prototype.setTitle = function (e, t) {
        Li(e, "title", ["string"]);
        var i = Ua.of("Title");
        this.getInfoDict().set(i, ls.fromText(e));
        if (null == t ? void 0 : t.showInWindowTitleBar)
          this.catalog.getOrCreateViewerPreferences().setDisplayDocTitle(!0);
      };
      t.prototype.setAuthor = function (e) {
        Li(e, "author", ["string"]);
        var t = Ua.of("Author");
        this.getInfoDict().set(t, ls.fromText(e));
      };
      t.prototype.setSubject = function (e) {
        Li(e, "author", ["string"]);
        var t = Ua.of("Subject");
        this.getInfoDict().set(t, ls.fromText(e));
      };
      t.prototype.setKeywords = function (e) {
        Li(e, "keywords", [Array]);
        var t = Ua.of("Keywords");
        this.getInfoDict().set(t, ls.fromText(e.join(" ")));
      };
      t.prototype.setCreator = function (e) {
        Li(e, "creator", ["string"]);
        var t = Ua.of("Creator");
        this.getInfoDict().set(t, ls.fromText(e));
      };
      t.prototype.setProducer = function (e) {
        Li(e, "creator", ["string"]);
        var t = Ua.of("Producer");
        this.getInfoDict().set(t, ls.fromText(e));
      };
      t.prototype.setLanguage = function (e) {
        Li(e, "language", ["string"]);
        var t = Ua.of("Lang");
        this.catalog.set(t, fs.of(e));
      };
      t.prototype.setCreationDate = function (e) {
        Li(e, "creationDate", [[Date, "Date"]]);
        var t = Ua.of("CreationDate");
        this.getInfoDict().set(t, fs.fromDate(e));
      };
      t.prototype.setModificationDate = function (e) {
        Li(e, "modificationDate", [[Date, "Date"]]);
        var t = Ua.of("ModDate");
        this.getInfoDict().set(t, fs.fromDate(e));
      };
      t.prototype.getPageCount = function () {
        if (void 0 === this.pageCount) this.pageCount = this.getPages().length;
        return this.pageCount;
      };
      t.prototype.getPages = function () {
        return this.pageCache.access();
      };
      t.prototype.getPage = function (e) {
        var t = this.getPages();
        ji(e, "index", 0, t.length - 1);
        return t[e];
      };
      t.prototype.getPageIndices = function () {
        return G(0, this.getPageCount());
      };
      t.prototype.removePage = function (e) {
        var t = this.getPageCount();
        if (0 === this.pageCount) throw new Au();
        ji(e, "index", 0, t - 1);
        this.catalog.removeLeafNode(e);
        this.pageCount = t - 1;
      };
      t.prototype.addPage = function (e) {
        Li(e, "page", ["undefined", [kd, "PDFPage"], Array]);
        return this.insertPage(this.getPageCount(), e);
      };
      t.prototype.insertPage = function (e, t) {
        var i = this.getPageCount();
        ji(e, "index", 0, i);
        Li(t, "page", ["undefined", [kd, "PDFPage"], Array]);
        if (!t || Array.isArray(t)) {
          var n = Array.isArray(t) ? t : md.A4;
          (t = kd.create(this)).setSize.apply(t, n);
        } else if (t.doc !== this) throw new _u();
        var r = this.catalog.insertLeafNode(t.ref, e);
        t.node.setParent(r);
        this.pageMap.set(t.node, t);
        this.pageCache.invalidate();
        this.pageCount = i + 1;
        return t;
      };
      t.prototype.copyPages = function (e, i) {
        return r(this, void 0, void 0, function () {
          var n, r, s, o, l, c, h, u;
          return a(this, function (a) {
            switch (a.label) {
              case 0:
                Li(e, "srcDoc", [[t, "PDFDocument"]]);
                Li(i, "indices", [Array]);
                return [4, e.flush()];
              case 1:
                a.sent();
                n = Qa.for(e.context, this.context);
                r = e.getPages();
                s = new Array(i.length);
                for (o = 0, l = i.length; o < l; o++) {
                  c = r[i[o]];
                  h = n.copy(c.node);
                  u = this.context.register(h);
                  s[o] = kd.of(h, u, this);
                }
                return [2, s];
            }
          });
        });
      };
      t.prototype.addJavaScript = function (e, t) {
        Li(e, "name", ["string"]);
        Li(t, "script", ["string"]);
        var i = yd.for(t, e),
          n = this.context.nextRef(),
          r = bd.of(n, this, i);
        this.javaScripts.push(r);
      };
      t.prototype.attach = function (t, i, n) {
        if (void 0 === n) n = {};
        return r(this, void 0, void 0, function () {
          var r, s, o, l;
          return a(this, function (a) {
            Li(t, "attachment", ["string", Uint8Array, ArrayBuffer]);
            Li(i, "name", ["string"]);
            Ui(n.mimeType, "mimeType", ["string"]);
            Ui(n.description, "description", ["string"]);
            Ui(n.creationDate, "options.creationDate", [Date]);
            Ui(n.modificationDate, "options.modificationDate", [Date]);
            Oi(n.afRelationship, "options.afRelationship", e.AFRelationship);
            r = K(t);
            s = vs.for(r, i, n);
            o = this.context.nextRef();
            l = vd.of(o, this, s);
            this.embeddedFiles.push(l);
            return [2];
          });
        });
      };
      t.prototype.embedFont = function (e, t) {
        if (void 0 === t) t = {};
        return r(this, void 0, void 0, function () {
          var i, n, r, s, o, l, c, h, u, d;
          return a(this, function (a) {
            switch (a.label) {
              case 0:
                (i = t.subset),
                  (n = void 0 === i ? !1 : i),
                  (r = t.customName),
                  (s = t.features);
                Li(e, "font", ["string", Uint8Array, ArrayBuffer]);
                Li(n, "subset", ["boolean"]);
                if (!Ai(e)) return [3, 1];
                o = cs.for(e, r);
                return [3, 7];
              case 1:
                if (!X(e)) return [3, 6];
                l = K(e);
                c = this.assertFontkit();
                if (!n) return [3, 3];
                else return [4, gs.for(c, l, r, s)];
              case 2:
                h = a.sent();
                return [3, 5];
              case 3:
                return [4, ps.for(c, l, r, s)];
              case 4:
                h = a.sent();
                a.label = 5;
              case 5:
                o = h;
                return [3, 7];
              case 6:
                throw new TypeError(
                  "`font` must be one of `StandardFonts | string | Uint8Array | ArrayBuffer`"
                );
              case 7:
                u = this.context.nextRef();
                d = id.of(u, this, o);
                this.fonts.push(d);
                return [2, d];
            }
          });
        });
      };
      t.prototype.embedStandardFont = function (e, t) {
        Li(e, "font", ["string"]);
        if (!Ai(e))
          throw new TypeError("`font` must be one of type `StandardFonts`");
        var i = cs.for(e, t),
          n = this.context.nextRef(),
          r = id.of(n, this, i);
        this.fonts.push(r);
        return r;
      };
      t.prototype.embedJpg = function (e) {
        return r(this, void 0, void 0, function () {
          var t, i, n, r;
          return a(this, function (a) {
            switch (a.label) {
              case 0:
                Li(e, "jpg", ["string", Uint8Array, ArrayBuffer]);
                t = K(e);
                return [4, ws.for(t)];
              case 1:
                i = a.sent();
                n = this.context.nextRef();
                r = nd.of(n, this, i);
                this.images.push(r);
                return [2, r];
            }
          });
        });
      };
      t.prototype.embedPng = function (e) {
        return r(this, void 0, void 0, function () {
          var t, i, n, r;
          return a(this, function (a) {
            switch (a.label) {
              case 0:
                Li(e, "png", ["string", Uint8Array, ArrayBuffer]);
                t = K(e);
                return [4, kl.for(t)];
              case 1:
                i = a.sent();
                n = this.context.nextRef();
                r = nd.of(n, this, i);
                this.images.push(r);
                return [2, r];
            }
          });
        });
      };
      t.prototype.embedPdf = function (e, i) {
        if (void 0 === i) i = [0];
        return r(this, void 0, void 0, function () {
          var n, r;
          return a(this, function (a) {
            switch (a.label) {
              case 0:
                Li(e, "pdf", [
                  "string",
                  Uint8Array,
                  ArrayBuffer,
                  [t, "PDFDocument"],
                ]);
                Li(i, "indices", [Array]);
                if (!(e instanceof t)) return [3, 1];
                n = e;
                return [3, 3];
              case 1:
                return [4, t.load(e)];
              case 2:
                n = a.sent();
                a.label = 3;
              case 3:
                r = V(n.getPages(), i);
                return [2, this.embedPages(r)];
            }
          });
        });
      };
      t.prototype.embedPage = function (e, t, i) {
        return r(this, void 0, void 0, function () {
          return a(this, function (n) {
            switch (n.label) {
              case 0:
                Li(e, "page", [[kd, "PDFPage"]]);
                return [4, this.embedPages([e], [t], [i])];
              case 1:
                return [2, n.sent()[0]];
            }
          });
        });
      };
      t.prototype.embedPages = function (e, t, i) {
        if (void 0 === t) t = [];
        if (void 0 === i) i = [];
        return r(this, void 0, void 0, function () {
          var n, r, s, o, l, c, h, u, d, f, p, g, m;
          return a(this, function (a) {
            switch (a.label) {
              case 0:
                if (0 === e.length) return [2, []];
                for (c = 0, h = e.length - 1; c < h; c++) {
                  n = e[c];
                  r = e[c + 1];
                  if (n.node.context !== r.node.context) throw new sn();
                }
                s = e[0].node.context;
                o =
                  s === this.context
                    ? function (e) {
                        return e;
                      }
                    : Qa.for(s, this.context).copy;
                l = new Array(e.length);
                (c = 0), (h = e.length);
                a.label = 1;
              case 1:
                if (!(c < h)) return [3, 4];
                u = o(e[c].node);
                d = t[c];
                f = i[c];
                return [4, Ul.for(u, d, f)];
              case 2:
                p = a.sent();
                g = this.context.nextRef();
                l[c] = td.of(g, this, p);
                a.label = 3;
              case 3:
                c++;
                return [3, 1];
              case 4:
                (m = this.embeddedPages).push.apply(m, l);
                return [2, l];
            }
          });
        });
      };
      t.prototype.flush = function () {
        return r(this, void 0, void 0, function () {
          return a(this, function (e) {
            switch (e.label) {
              case 0:
                return [4, this.embedAll(this.fonts)];
              case 1:
                e.sent();
                return [4, this.embedAll(this.images)];
              case 2:
                e.sent();
                return [4, this.embedAll(this.embeddedPages)];
              case 3:
                e.sent();
                return [4, this.embedAll(this.embeddedFiles)];
              case 4:
                e.sent();
                return [4, this.embedAll(this.javaScripts)];
              case 5:
                e.sent();
                return [2];
            }
          });
        });
      };
      t.prototype.save = function (e) {
        if (void 0 === e) e = {};
        return r(this, void 0, void 0, function () {
          var t, i, n, r, s, o, l, c, h;
          return a(this, function (a) {
            switch (a.label) {
              case 0:
                (t = e.useObjectStreams),
                  (i = void 0 === t ? !0 : t),
                  (n = e.addDefaultPage),
                  (r = void 0 === n ? !0 : n),
                  (s = e.objectsPerTick),
                  (o = void 0 === s ? 50 : s),
                  (l = e.updateFieldAppearances),
                  (c = void 0 === l ? !0 : l);
                Li(i, "useObjectStreams", ["boolean"]);
                Li(r, "addDefaultPage", ["boolean"]);
                Li(o, "objectsPerTick", ["number"]);
                Li(c, "updateFieldAppearances", ["boolean"]);
                if (r && 0 === this.getPageCount()) this.addPage();
                if (c)
                  if ((h = this.formCache.getValue()))
                    h.updateFieldAppearances();
                return [4, this.flush()];
              case 1:
                a.sent();
                return [
                  2,
                  (i ? os : rs).forContext(this.context, o).serializeToBuffer(),
                ];
            }
          });
        });
      };
      t.prototype.saveAsBase64 = function (e) {
        if (void 0 === e) e = {};
        return r(this, void 0, void 0, function () {
          var t, i, n, r, s;
          return a(this, function (a) {
            switch (a.label) {
              case 0:
                (t = e.dataUri),
                  (i = void 0 === t ? !1 : t),
                  (n = (function (e, t) {
                    var i = {};
                    for (var n in e)
                      if (
                        Object.prototype.hasOwnProperty.call(e, n) &&
                        t.indexOf(n) < 0
                      )
                        i[n] = e[n];
                    if (
                      null != e &&
                      "function" == typeof Object.getOwnPropertySymbols
                    ) {
                      var r = 0;
                      for (
                        n = Object.getOwnPropertySymbols(e);
                        r < n.length;
                        r++
                      )
                        if (
                          t.indexOf(n[r]) < 0 &&
                          Object.prototype.propertyIsEnumerable.call(e, n[r])
                        )
                          i[n[r]] = e[n[r]];
                    }
                    return i;
                  })(e, ["dataUri"]));
                Li(i, "dataUri", ["boolean"]);
                return [4, this.save(n)];
              case 1:
                r = a.sent();
                s = u(r);
                return [2, i ? "data:application/pdf;base64," + s : s];
            }
          });
        });
      };
      t.prototype.findPageForAnnotationRef = function (e) {
        for (var t = this.getPages(), i = 0, n = t.length; i < n; i++) {
          var r = t[i],
            a = r.node.Annots();
          if (void 0 !== (null == a ? void 0 : a.indexOf(e))) return r;
        }
      };
      t.prototype.embedAll = function (e) {
        return r(this, void 0, void 0, function () {
          var t, i;
          return a(this, function (n) {
            switch (n.label) {
              case 0:
                (t = 0), (i = e.length);
                n.label = 1;
              case 1:
                if (!(t < i)) return [3, 4];
                else return [4, e[t].embed()];
              case 2:
                n.sent();
                n.label = 3;
              case 3:
                t++;
                return [3, 1];
              case 4:
                return [2];
            }
          });
        });
      };
      t.prototype.updateInfoDict = function () {
        var e = "pdf-lib (https://github.com/Hopding/pdf-lib)",
          t = new Date(),
          i = this.getInfoDict();
        this.setProducer(e);
        this.setModificationDate(t);
        if (!i.get(Ua.of("Creator"))) this.setCreator(e);
        if (!i.get(Ua.of("CreationDate"))) this.setCreationDate(t);
      };
      t.prototype.getInfoDict = function () {
        var e = this.context.lookup(this.context.trailerInfo.Info);
        if (e instanceof Ia) return e;
        var t = this.context.obj({});
        this.context.trailerInfo.Info = this.context.register(t);
        return t;
      };
      t.prototype.assertFontkit = function () {
        if (!this.fontkit) throw new Su();
        return this.fontkit;
      };
      return t;
    })();
  function xd(e) {
    if (!(e instanceof ls || e instanceof fs)) throw new Qi([ls, fs], e);
  }
  !(function (e) {
    e.Normal = "Normal";
    e.Multiply = "Multiply";
    e.Screen = "Screen";
    e.Overlay = "Overlay";
    e.Darken = "Darken";
    e.Lighten = "Lighten";
    e.ColorDodge = "ColorDodge";
    e.ColorBurn = "ColorBurn";
    e.HardLight = "HardLight";
    e.SoftLight = "SoftLight";
    e.Difference = "Difference";
    e.Exclusion = "Exclusion";
  })(e.BlendMode || (e.BlendMode = {}));
  var kd = (function () {
      function t(e, t, i) {
        this.fontSize = 24;
        this.fontColor = zh(0, 0, 0);
        this.lineHeight = 24;
        this.x = 0;
        this.y = 0;
        Li(e, "leafNode", [[$a, "PDFPageLeaf"]]);
        Li(t, "ref", [[Wa, "PDFRef"]]);
        Li(i, "doc", [[wd, "PDFDocument"]]);
        this.node = e;
        this.ref = t;
        this.doc = i;
      }
      t.prototype.setRotation = function (e) {
        var t = Vc(e);
        Hi(t, "degreesAngle", 90);
        this.node.set(Ua.of("Rotate"), this.doc.context.obj(t));
      };
      t.prototype.getRotation = function () {
        var e = this.node.Rotate();
        return zc(e ? e.asNumber() : 0);
      };
      t.prototype.setSize = function (e, t) {
        Li(e, "width", ["number"]);
        Li(t, "height", ["number"]);
        var i = this.getMediaBox();
        this.setMediaBox(i.x, i.y, e, t);
        var n = this.getCropBox(),
          r = this.getBleedBox(),
          a = this.getTrimBox(),
          s = this.getArtBox(),
          o = this.node.CropBox(),
          l = this.node.BleedBox(),
          c = this.node.TrimBox(),
          h = this.node.ArtBox();
        if (o && Fi(n, i)) this.setCropBox(i.x, i.y, e, t);
        if (l && Fi(r, i)) this.setBleedBox(i.x, i.y, e, t);
        if (c && Fi(a, i)) this.setTrimBox(i.x, i.y, e, t);
        if (h && Fi(s, i)) this.setArtBox(i.x, i.y, e, t);
      };
      t.prototype.setWidth = function (e) {
        Li(e, "width", ["number"]);
        this.setSize(e, this.getSize().height);
      };
      t.prototype.setHeight = function (e) {
        Li(e, "height", ["number"]);
        this.setSize(this.getSize().width, e);
      };
      t.prototype.setMediaBox = function (e, t, i, n) {
        Li(e, "x", ["number"]);
        Li(t, "y", ["number"]);
        Li(i, "width", ["number"]);
        Li(n, "height", ["number"]);
        var r = this.doc.context.obj([e, t, e + i, t + n]);
        this.node.set(Ua.MediaBox, r);
      };
      t.prototype.setCropBox = function (e, t, i, n) {
        Li(e, "x", ["number"]);
        Li(t, "y", ["number"]);
        Li(i, "width", ["number"]);
        Li(n, "height", ["number"]);
        var r = this.doc.context.obj([e, t, e + i, t + n]);
        this.node.set(Ua.CropBox, r);
      };
      t.prototype.setBleedBox = function (e, t, i, n) {
        Li(e, "x", ["number"]);
        Li(t, "y", ["number"]);
        Li(i, "width", ["number"]);
        Li(n, "height", ["number"]);
        var r = this.doc.context.obj([e, t, e + i, t + n]);
        this.node.set(Ua.BleedBox, r);
      };
      t.prototype.setTrimBox = function (e, t, i, n) {
        Li(e, "x", ["number"]);
        Li(t, "y", ["number"]);
        Li(i, "width", ["number"]);
        Li(n, "height", ["number"]);
        var r = this.doc.context.obj([e, t, e + i, t + n]);
        this.node.set(Ua.TrimBox, r);
      };
      t.prototype.setArtBox = function (e, t, i, n) {
        Li(e, "x", ["number"]);
        Li(t, "y", ["number"]);
        Li(i, "width", ["number"]);
        Li(n, "height", ["number"]);
        var r = this.doc.context.obj([e, t, e + i, t + n]);
        this.node.set(Ua.ArtBox, r);
      };
      t.prototype.getSize = function () {
        var e = this.getMediaBox();
        return { width: e.width, height: e.height };
      };
      t.prototype.getWidth = function () {
        return this.getSize().width;
      };
      t.prototype.getHeight = function () {
        return this.getSize().height;
      };
      t.prototype.getMediaBox = function () {
        return this.node.MediaBox().asRectangle();
      };
      t.prototype.getCropBox = function () {
        var e,
          t = this.node.CropBox();
        return null !== (e = null == t ? void 0 : t.asRectangle()) &&
          void 0 !== e
          ? e
          : this.getMediaBox();
      };
      t.prototype.getBleedBox = function () {
        var e,
          t = this.node.BleedBox();
        return null !== (e = null == t ? void 0 : t.asRectangle()) &&
          void 0 !== e
          ? e
          : this.getCropBox();
      };
      t.prototype.getTrimBox = function () {
        var e,
          t = this.node.TrimBox();
        return null !== (e = null == t ? void 0 : t.asRectangle()) &&
          void 0 !== e
          ? e
          : this.getCropBox();
      };
      t.prototype.getArtBox = function () {
        var e,
          t = this.node.ArtBox();
        return null !== (e = null == t ? void 0 : t.asRectangle()) &&
          void 0 !== e
          ? e
          : this.getCropBox();
      };
      t.prototype.translateContent = function (e, t) {
        Li(e, "x", ["number"]);
        Li(t, "y", ["number"]);
        this.node.normalize();
        this.getContentStream();
        var i = this.createContentStream(ch(), th(e, t)),
          n = this.doc.context.register(i),
          r = this.createContentStream(hh()),
          a = this.doc.context.register(r);
        this.node.wrapContentStreams(n, a);
      };
      t.prototype.resetPosition = function () {
        this.getContentStream(!1);
        this.x = 0;
        this.y = 0;
      };
      t.prototype.setFont = function (e) {
        Li(e, "font", [[id, "PDFFont"]]);
        this.font = e;
        this.fontKey = C(this.font.name);
        this.node.setFontDictionary(Ua.of(this.fontKey), this.font.ref);
      };
      t.prototype.setFontSize = function (e) {
        Li(e, "fontSize", ["number"]);
        this.fontSize = e;
      };
      t.prototype.setFontColor = function (e) {
        Li(e, "fontColor", [[Object, "Color"]]);
        this.fontColor = e;
      };
      t.prototype.setLineHeight = function (e) {
        Li(e, "lineHeight", ["number"]);
        this.lineHeight = e;
      };
      t.prototype.getPosition = function () {
        return { x: this.x, y: this.y };
      };
      t.prototype.getX = function () {
        return this.x;
      };
      t.prototype.getY = function () {
        return this.y;
      };
      t.prototype.moveTo = function (e, t) {
        Li(e, "x", ["number"]);
        Li(t, "y", ["number"]);
        this.x = e;
        this.y = t;
      };
      t.prototype.moveDown = function (e) {
        Li(e, "yDecrease", ["number"]);
        this.y -= e;
      };
      t.prototype.moveUp = function (e) {
        Li(e, "yIncrease", ["number"]);
        this.y += e;
      };
      t.prototype.moveLeft = function (e) {
        Li(e, "xDecrease", ["number"]);
        this.x -= e;
      };
      t.prototype.moveRight = function (e) {
        Li(e, "xIncrease", ["number"]);
        this.x += e;
      };
      t.prototype.pushOperators = function () {
        for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
        zi(e, "operator", [[Ga, "PDFOperator"]]);
        var i = this.getContentStream();
        i.push.apply(i, e);
      };
      t.prototype.drawText = function (t, i) {
        var n, r, a, s, o, l, c;
        if (void 0 === i) i = {};
        Li(t, "text", ["string"]);
        Ui(i.color, "options.color", [[Object, "Color"]]);
        qi(i.opacity, "opacity.opacity", 0, 1);
        Ui(i.font, "options.font", [[id, "PDFFont"]]);
        Ui(i.size, "options.size", ["number"]);
        Ui(i.rotate, "options.rotate", [[Object, "Rotation"]]);
        Ui(i.xSkew, "options.xSkew", [[Object, "Rotation"]]);
        Ui(i.ySkew, "options.ySkew", [[Object, "Rotation"]]);
        Ui(i.x, "options.x", ["number"]);
        Ui(i.y, "options.y", ["number"]);
        Ui(i.lineHeight, "options.lineHeight", ["number"]);
        Ui(i.maxWidth, "options.maxWidth", ["number"]);
        Ui(i.wordBreaks, "options.wordBreaks", [Array]);
        Oi(i.blendMode, "options.blendMode", e.BlendMode);
        var h = this.getFont()[0];
        if (i.font) this.setFont(i.font);
        for (
          var u = this.getFont(),
            d = u[0],
            f = u[1],
            p = i.size || this.fontSize,
            g = i.wordBreaks || this.doc.defaultWordBreaks,
            m =
              void 0 === i.maxWidth
                ? T(_(t))
                : D(t, g, i.maxWidth, function (e) {
                    return d.widthOfTextAtSize(e, p);
                  }),
            v = new Array(m.length),
            b = 0,
            y = m.length;
          b < y;
          b++
        )
          v[b] = d.encodeText(m[b]);
        var w = this.maybeEmbedGraphicsState({
            opacity: i.opacity,
            blendMode: i.blendMode,
          }),
          x = this.getContentStream();
        x.push.apply(
          x,
          su(v, {
            color: null !== (n = i.color) && void 0 !== n ? n : this.fontColor,
            font: f,
            size: p,
            rotate: null !== (r = i.rotate) && void 0 !== r ? r : zc(0),
            xSkew: null !== (a = i.xSkew) && void 0 !== a ? a : zc(0),
            ySkew: null !== (s = i.ySkew) && void 0 !== s ? s : zc(0),
            x: null !== (o = i.x) && void 0 !== o ? o : this.x,
            y: null !== (l = i.y) && void 0 !== l ? l : this.y,
            lineHeight:
              null !== (c = i.lineHeight) && void 0 !== c ? c : this.lineHeight,
            graphicsState: w,
          })
        );
        if (i.font) this.setFont(h);
      };
      t.prototype.drawImage = function (t, i) {
        var n, r, a, s, o, l, c;
        if (void 0 === i) i = {};
        Li(t, "image", [[nd, "PDFImage"]]);
        Ui(i.x, "options.x", ["number"]);
        Ui(i.y, "options.y", ["number"]);
        Ui(i.width, "options.width", ["number"]);
        Ui(i.height, "options.height", ["number"]);
        Ui(i.rotate, "options.rotate", [[Object, "Rotation"]]);
        Ui(i.xSkew, "options.xSkew", [[Object, "Rotation"]]);
        Ui(i.ySkew, "options.ySkew", [[Object, "Rotation"]]);
        qi(i.opacity, "opacity.opacity", 0, 1);
        Oi(i.blendMode, "options.blendMode", e.BlendMode);
        var h = C("Image", 10);
        this.node.setXObject(Ua.of(h), t.ref);
        var u = this.maybeEmbedGraphicsState({
            opacity: i.opacity,
            blendMode: i.blendMode,
          }),
          d = this.getContentStream();
        d.push.apply(
          d,
          ou(h, {
            x: null !== (n = i.x) && void 0 !== n ? n : this.x,
            y: null !== (r = i.y) && void 0 !== r ? r : this.y,
            width: null !== (a = i.width) && void 0 !== a ? a : t.size().width,
            height:
              null !== (s = i.height) && void 0 !== s ? s : t.size().height,
            rotate: null !== (o = i.rotate) && void 0 !== o ? o : zc(0),
            xSkew: null !== (l = i.xSkew) && void 0 !== l ? l : zc(0),
            ySkew: null !== (c = i.ySkew) && void 0 !== c ? c : zc(0),
            graphicsState: u,
          })
        );
      };
      t.prototype.drawPage = function (t, i) {
        var n, r, a, s, o;
        if (void 0 === i) i = {};
        Li(t, "embeddedPage", [[td, "PDFEmbeddedPage"]]);
        Ui(i.x, "options.x", ["number"]);
        Ui(i.y, "options.y", ["number"]);
        Ui(i.xScale, "options.xScale", ["number"]);
        Ui(i.yScale, "options.yScale", ["number"]);
        Ui(i.width, "options.width", ["number"]);
        Ui(i.height, "options.height", ["number"]);
        Ui(i.rotate, "options.rotate", [[Object, "Rotation"]]);
        Ui(i.xSkew, "options.xSkew", [[Object, "Rotation"]]);
        Ui(i.ySkew, "options.ySkew", [[Object, "Rotation"]]);
        qi(i.opacity, "opacity.opacity", 0, 1);
        Oi(i.blendMode, "options.blendMode", e.BlendMode);
        var l = C("EmbeddedPdfPage", 10);
        this.node.setXObject(Ua.of(l), t.ref);
        var c = this.maybeEmbedGraphicsState({
            opacity: i.opacity,
            blendMode: i.blendMode,
          }),
          h =
            void 0 !== i.width
              ? i.width / t.width
              : void 0 !== i.xScale
              ? i.xScale
              : 1,
          u =
            void 0 !== i.height
              ? i.height / t.height
              : void 0 !== i.yScale
              ? i.yScale
              : 1,
          d = this.getContentStream();
        d.push.apply(
          d,
          lu(l, {
            x: null !== (n = i.x) && void 0 !== n ? n : this.x,
            y: null !== (r = i.y) && void 0 !== r ? r : this.y,
            xScale: h,
            yScale: u,
            rotate: null !== (a = i.rotate) && void 0 !== a ? a : zc(0),
            xSkew: null !== (s = i.xSkew) && void 0 !== s ? s : zc(0),
            ySkew: null !== (o = i.ySkew) && void 0 !== o ? o : zc(0),
            graphicsState: c,
          })
        );
      };
      t.prototype.drawSvgPath = function (t, i) {
        var n, r, a, s, o, l, c, h, u;
        if (void 0 === i) i = {};
        Li(t, "path", ["string"]);
        Ui(i.x, "options.x", ["number"]);
        Ui(i.y, "options.y", ["number"]);
        Ui(i.scale, "options.scale", ["number"]);
        Ui(i.rotate, "options.rotate", [[Object, "Rotation"]]);
        Ui(i.borderWidth, "options.borderWidth", ["number"]);
        Ui(i.color, "options.color", [[Object, "Color"]]);
        qi(i.opacity, "opacity.opacity", 0, 1);
        Ui(i.borderColor, "options.borderColor", [[Object, "Color"]]);
        Ui(i.borderDashArray, "options.borderDashArray", [Array]);
        Ui(i.borderDashPhase, "options.borderDashPhase", ["number"]);
        Oi(i.borderLineCap, "options.borderLineCap", e.LineCapStyle);
        qi(i.borderOpacity, "options.borderOpacity", 0, 1);
        Oi(i.blendMode, "options.blendMode", e.BlendMode);
        var d = this.maybeEmbedGraphicsState({
          opacity: i.opacity,
          borderOpacity: i.borderOpacity,
          blendMode: i.blendMode,
        });
        if (!("color" in i) && !("borderColor" in i))
          i.borderColor = zh(0, 0, 0);
        var f = this.getContentStream();
        f.push.apply(
          f,
          pu(t, {
            x: null !== (n = i.x) && void 0 !== n ? n : this.x,
            y: null !== (r = i.y) && void 0 !== r ? r : this.y,
            scale: i.scale,
            rotate: null !== (a = i.rotate) && void 0 !== a ? a : zc(0),
            color: null !== (s = i.color) && void 0 !== s ? s : void 0,
            borderColor:
              null !== (o = i.borderColor) && void 0 !== o ? o : void 0,
            borderWidth: null !== (l = i.borderWidth) && void 0 !== l ? l : 0,
            borderDashArray:
              null !== (c = i.borderDashArray) && void 0 !== c ? c : void 0,
            borderDashPhase:
              null !== (h = i.borderDashPhase) && void 0 !== h ? h : void 0,
            borderLineCap:
              null !== (u = i.borderLineCap) && void 0 !== u ? u : void 0,
            graphicsState: d,
          })
        );
      };
      t.prototype.drawLine = function (t) {
        var i, n, r, a, s;
        Li(t.start, "options.start", [[Object, "{ x: number, y: number }"]]);
        Li(t.end, "options.end", [[Object, "{ x: number, y: number }"]]);
        Li(t.start.x, "options.start.x", ["number"]);
        Li(t.start.y, "options.start.y", ["number"]);
        Li(t.end.x, "options.end.x", ["number"]);
        Li(t.end.y, "options.end.y", ["number"]);
        Ui(t.thickness, "options.thickness", ["number"]);
        Ui(t.color, "options.color", [[Object, "Color"]]);
        Ui(t.dashArray, "options.dashArray", [Array]);
        Ui(t.dashPhase, "options.dashPhase", ["number"]);
        Oi(t.lineCap, "options.lineCap", e.LineCapStyle);
        qi(t.opacity, "opacity.opacity", 0, 1);
        Oi(t.blendMode, "options.blendMode", e.BlendMode);
        var o = this.maybeEmbedGraphicsState({
          borderOpacity: t.opacity,
          blendMode: t.blendMode,
        });
        if (!("color" in t)) t.color = zh(0, 0, 0);
        var l = this.getContentStream();
        l.push.apply(
          l,
          cu({
            start: t.start,
            end: t.end,
            thickness: null !== (i = t.thickness) && void 0 !== i ? i : 1,
            color: null !== (n = t.color) && void 0 !== n ? n : void 0,
            dashArray: null !== (r = t.dashArray) && void 0 !== r ? r : void 0,
            dashPhase: null !== (a = t.dashPhase) && void 0 !== a ? a : void 0,
            lineCap: null !== (s = t.lineCap) && void 0 !== s ? s : void 0,
            graphicsState: o,
          })
        );
      };
      t.prototype.drawRectangle = function (t) {
        var i, n, r, a, s, o, l, c, h, u, d, f, p;
        if (void 0 === t) t = {};
        Ui(t.x, "options.x", ["number"]);
        Ui(t.y, "options.y", ["number"]);
        Ui(t.width, "options.width", ["number"]);
        Ui(t.height, "options.height", ["number"]);
        Ui(t.rotate, "options.rotate", [[Object, "Rotation"]]);
        Ui(t.xSkew, "options.xSkew", [[Object, "Rotation"]]);
        Ui(t.ySkew, "options.ySkew", [[Object, "Rotation"]]);
        Ui(t.borderWidth, "options.borderWidth", ["number"]);
        Ui(t.color, "options.color", [[Object, "Color"]]);
        qi(t.opacity, "opacity.opacity", 0, 1);
        Ui(t.borderColor, "options.borderColor", [[Object, "Color"]]);
        Ui(t.borderDashArray, "options.borderDashArray", [Array]);
        Ui(t.borderDashPhase, "options.borderDashPhase", ["number"]);
        Oi(t.borderLineCap, "options.borderLineCap", e.LineCapStyle);
        qi(t.borderOpacity, "options.borderOpacity", 0, 1);
        Oi(t.blendMode, "options.blendMode", e.BlendMode);
        var g = this.maybeEmbedGraphicsState({
          opacity: t.opacity,
          borderOpacity: t.borderOpacity,
          blendMode: t.blendMode,
        });
        if (!("color" in t) && !("borderColor" in t)) t.color = zh(0, 0, 0);
        var m = this.getContentStream();
        m.push.apply(
          m,
          hu({
            x: null !== (i = t.x) && void 0 !== i ? i : this.x,
            y: null !== (n = t.y) && void 0 !== n ? n : this.y,
            width: null !== (r = t.width) && void 0 !== r ? r : 150,
            height: null !== (a = t.height) && void 0 !== a ? a : 100,
            rotate: null !== (s = t.rotate) && void 0 !== s ? s : zc(0),
            xSkew: null !== (o = t.xSkew) && void 0 !== o ? o : zc(0),
            ySkew: null !== (l = t.ySkew) && void 0 !== l ? l : zc(0),
            borderWidth: null !== (c = t.borderWidth) && void 0 !== c ? c : 0,
            color: null !== (h = t.color) && void 0 !== h ? h : void 0,
            borderColor:
              null !== (u = t.borderColor) && void 0 !== u ? u : void 0,
            borderDashArray:
              null !== (d = t.borderDashArray) && void 0 !== d ? d : void 0,
            borderDashPhase:
              null !== (f = t.borderDashPhase) && void 0 !== f ? f : void 0,
            graphicsState: g,
            borderLineCap:
              null !== (p = t.borderLineCap) && void 0 !== p ? p : void 0,
          })
        );
      };
      t.prototype.drawSquare = function (e) {
        if (void 0 === e) e = {};
        var t = e.size;
        Ui(t, "size", ["number"]);
        this.drawRectangle(n(n({}, e), { width: t, height: t }));
      };
      t.prototype.drawEllipse = function (t) {
        var i, n, r, a, s, o, l, c, h, u, d;
        if (void 0 === t) t = {};
        Ui(t.x, "options.x", ["number"]);
        Ui(t.y, "options.y", ["number"]);
        Ui(t.xScale, "options.xScale", ["number"]);
        Ui(t.yScale, "options.yScale", ["number"]);
        Ui(t.rotate, "options.rotate", [[Object, "Rotation"]]);
        Ui(t.color, "options.color", [[Object, "Color"]]);
        qi(t.opacity, "opacity.opacity", 0, 1);
        Ui(t.borderColor, "options.borderColor", [[Object, "Color"]]);
        qi(t.borderOpacity, "options.borderOpacity", 0, 1);
        Ui(t.borderWidth, "options.borderWidth", ["number"]);
        Ui(t.borderDashArray, "options.borderDashArray", [Array]);
        Ui(t.borderDashPhase, "options.borderDashPhase", ["number"]);
        Oi(t.borderLineCap, "options.borderLineCap", e.LineCapStyle);
        Oi(t.blendMode, "options.blendMode", e.BlendMode);
        var f = this.maybeEmbedGraphicsState({
          opacity: t.opacity,
          borderOpacity: t.borderOpacity,
          blendMode: t.blendMode,
        });
        if (!("color" in t) && !("borderColor" in t)) t.color = zh(0, 0, 0);
        var p = this.getContentStream();
        p.push.apply(
          p,
          fu({
            x: null !== (i = t.x) && void 0 !== i ? i : this.x,
            y: null !== (n = t.y) && void 0 !== n ? n : this.y,
            xScale: null !== (r = t.xScale) && void 0 !== r ? r : 100,
            yScale: null !== (a = t.yScale) && void 0 !== a ? a : 100,
            rotate: null !== (s = t.rotate) && void 0 !== s ? s : void 0,
            color: null !== (o = t.color) && void 0 !== o ? o : void 0,
            borderColor:
              null !== (l = t.borderColor) && void 0 !== l ? l : void 0,
            borderWidth: null !== (c = t.borderWidth) && void 0 !== c ? c : 0,
            borderDashArray:
              null !== (h = t.borderDashArray) && void 0 !== h ? h : void 0,
            borderDashPhase:
              null !== (u = t.borderDashPhase) && void 0 !== u ? u : void 0,
            borderLineCap:
              null !== (d = t.borderLineCap) && void 0 !== d ? d : void 0,
            graphicsState: f,
          })
        );
      };
      t.prototype.drawCircle = function (e) {
        if (void 0 === e) e = {};
        var t = e.size,
          i = void 0 === t ? 100 : t;
        Ui(i, "size", ["number"]);
        this.drawEllipse(n(n({}, e), { xScale: i, yScale: i }));
      };
      t.prototype.getFont = function () {
        if (!this.font || !this.fontKey) {
          var t = this.doc.embedStandardFont(e.StandardFonts.Helvetica);
          this.setFont(t);
        }
        return [this.font, this.fontKey];
      };
      t.prototype.getContentStream = function (e) {
        if (void 0 === e) e = !0;
        if (e && this.contentStream) return this.contentStream;
        this.contentStream = this.createContentStream();
        this.contentStreamRef = this.doc.context.register(this.contentStream);
        this.node.addContentStream(this.contentStreamRef);
        return this.contentStream;
      };
      t.prototype.createContentStream = function () {
        for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
        var i = this.doc.context.obj({}),
          n = Ya.of(i, e);
        return n;
      };
      t.prototype.maybeEmbedGraphicsState = function (e) {
        var t = e.opacity,
          i = e.borderOpacity,
          n = e.blendMode;
        if (void 0 !== t || void 0 !== i || void 0 !== n) {
          var r = C("GS", 10),
            a = this.doc.context.obj({
              Type: "ExtGState",
              ca: t,
              CA: i,
              BM: n,
            });
          this.node.setExtGState(Ua.of(r), a);
          return r;
        }
      };
      t.of = function (e, i, n) {
        return new t(e, i, n);
      };
      t.create = function (e) {
        Li(e, "doc", [[wd, "PDFDocument"]]);
        var i = Wa.of(-1),
          n = $a.withContextAndParent(e.context, i);
        return new t(n, e.context.register(n), e);
      };
      return t;
    })(),
    Cd = (function (e) {
      i(t, e);
      function t(t, i, n) {
        var r = e.call(this, t, i, n) || this;
        Li(t, "acroButton", [[nc, "PDFAcroPushButton"]]);
        r.acroField = t;
        return r;
      }
      t.prototype.setImage = function (e, t) {
        if (void 0 === t) t = Bu.Center;
        for (
          var i = this.acroField.getWidgets(), n = 0, r = i.length;
          n < r;
          n++
        ) {
          var a = i[n],
            s = this.createImageAppearanceStream(a, e, t);
          this.updateWidgetAppearances(a, { normal: s });
        }
        this.markAsClean();
      };
      t.prototype.setFontSize = function (e) {
        Gi(e, "fontSize");
        this.acroField.setFontSize(e);
        this.markAsDirty();
      };
      t.prototype.addToPage = function (e, t, i) {
        var n, r, a, s, o, l, c, h, u, d, f;
        Ui(e, "text", ["string"]);
        Ui(t, "page", [[kd, "PDFPage"]]);
        rd(i);
        var p = this.createWidget({
            x:
              (null !== (n = null == i ? void 0 : i.x) && void 0 !== n
                ? n
                : 0) -
              (null !== (r = null == i ? void 0 : i.borderWidth) && void 0 !== r
                ? r
                : 0) /
                2,
            y:
              (null !== (a = null == i ? void 0 : i.y) && void 0 !== a
                ? a
                : 0) -
              (null !== (s = null == i ? void 0 : i.borderWidth) && void 0 !== s
                ? s
                : 0) /
                2,
            width:
              null !== (o = null == i ? void 0 : i.width) && void 0 !== o
                ? o
                : 100,
            height:
              null !== (l = null == i ? void 0 : i.height) && void 0 !== l
                ? l
                : 50,
            textColor:
              null !== (c = null == i ? void 0 : i.textColor) && void 0 !== c
                ? c
                : zh(0, 0, 0),
            backgroundColor:
              null !== (h = null == i ? void 0 : i.backgroundColor) &&
              void 0 !== h
                ? h
                : zh(0.75, 0.75, 0.75),
            borderColor: null == i ? void 0 : i.borderColor,
            borderWidth:
              null !== (u = null == i ? void 0 : i.borderWidth) && void 0 !== u
                ? u
                : 0,
            rotate:
              null !== (d = null == i ? void 0 : i.rotate) && void 0 !== d
                ? d
                : zc(0),
            caption: e,
            hidden: null == i ? void 0 : i.hidden,
          }),
          g = this.doc.context.register(p.dict);
        this.acroField.addWidget(g);
        var m =
          null !== (f = null == i ? void 0 : i.font) && void 0 !== f
            ? f
            : this.doc.getForm().getDefaultFont();
        this.updateWidgetAppearance(p, m);
        t.node.addAnnot(g);
      };
      t.prototype.needsAppearancesUpdate = function () {
        var e;
        if (this.isDirty()) return !0;
        for (
          var t = this.acroField.getWidgets(), i = 0, n = t.length;
          i < n;
          i++
        )
          if (
            !(
              (null === (e = t[i].getAppearances()) || void 0 === e
                ? void 0
                : e.normal) instanceof za
            )
          )
            return !0;
        return !1;
      };
      t.prototype.defaultUpdateAppearances = function (e) {
        Li(e, "font", [[id, "PDFFont"]]);
        this.updateAppearances(e);
      };
      t.prototype.updateAppearances = function (e, t) {
        Li(e, "font", [[id, "PDFFont"]]);
        Ui(t, "provider", [Function]);
        for (
          var i = this.acroField.getWidgets(), n = 0, r = i.length;
          n < r;
          n++
        ) {
          var a = i[n];
          this.updateWidgetAppearance(a, e, t);
        }
      };
      t.prototype.updateWidgetAppearance = function (e, t, i) {
        var n = Hu((null != i ? i : Ju)(this, e, t));
        this.updateWidgetAppearanceWithFont(e, t, n);
      };
      t.of = function (e, i, n) {
        return new t(e, i, n);
      };
      return t;
    })(ad);
  e.AppearanceCharacteristics = Vl;
  e.Cache = Zi;
  e.CharCodes = An;
  e.CombedTextLayoutError = Ru;
  e.CorruptPageTreeError = hn;
  e.CustomFontEmbedder = ps;
  e.CustomFontSubsetEmbedder = gs;
  e.EncryptedPDFError = Cu;
  e.ExceededMaxLengthError = Nu;
  e.FieldAlreadyExistsError = Eu;
  e.FieldExistsAsNonTerminalError = Du;
  e.FileEmbedder = vs;
  e.FontkitNotRegisteredError = Su;
  e.ForeignPageError = _u;
  e.IndexOutOfBoundsError = un;
  e.InvalidAcroFieldValueError = dn;
  e.InvalidFieldNamePartError = Iu;
  e.InvalidMaxLengthError = Mu;
  e.InvalidPDFDateStringError = ln;
  e.InvalidTargetIndexError = cn;
  e.JpegEmbedder = ws;
  e.MethodNotImplementedError = Ji;
  e.MissingCatalogError = nn;
  e.MissingDAEntryError = pn;
  e.MissingKeywordError = _n;
  e.MissingOnValueCheckError = Pu;
  e.MissingPDFHeaderError = Sn;
  e.MissingPageContentsEmbeddingError = rn;
  e.MissingTfOperatorError = gn;
  e.MultiSelectValueError = fn;
  e.NextByteAssertionError = bn;
  e.NoSuchFieldError = Fu;
  e.NumberParsingError = mn;
  e.PDFAcroButton = Yl;
  e.PDFAcroCheckBox = Zl;
  e.PDFAcroChoice = $l;
  e.PDFAcroComboBox = Ql;
  e.PDFAcroField = Hl;
  e.PDFAcroForm = gc;
  e.PDFAcroListBox = ac;
  e.PDFAcroNonTerminal = ec;
  e.PDFAcroPushButton = nc;
  e.PDFAcroRadioButton = rc;
  e.PDFAcroSignature = tc;
  e.PDFAcroTerminal = Kl;
  e.PDFAcroText = ic;
  e.PDFAnnotation = Gl;
  e.PDFArray = Fa;
  e.PDFArrayIsNotRectangleError = on;
  e.PDFBool = Pa;
  e.PDFButton = Cd;
  e.PDFCatalog = mc;
  e.PDFCheckBox = sd;
  e.PDFContentStream = Ya;
  e.PDFContext = Ja;
  e.PDFCrossRefSection = es;
  e.PDFCrossRefStream = ss;
  e.PDFDict = Ia;
  e.PDFDocument = wd;
  e.PDFDropdown = od;
  e.PDFEmbeddedPage = td;
  e.PDFField = ad;
  e.PDFFlateStream = Ka;
  e.PDFFont = id;
  e.PDFForm = dd;
  e.PDFHeader = Sa;
  e.PDFHexString = ls;
  e.PDFImage = nd;
  e.PDFInvalidObject = as;
  e.PDFInvalidObjectParsingError = wn;
  e.PDFJavaScript = bd;
  e.PDFName = Ua;
  e.PDFNull = Ea;
  e.PDFNumber = Aa;
  e.PDFObject = _a;
  e.PDFObjectCopier = Qa;
  e.PDFObjectParser = Dc;
  e.PDFObjectParsingError = yn;
  e.PDFObjectStream = ns;
  e.PDFObjectStreamParser = Oc;
  e.PDFOperator = Ga;
  e.PDFOperatorNames = Xa;
  e.PDFOptionList = ld;
  e.PDFPage = kd;
  e.PDFPageEmbedder = Ul;
  e.PDFPageLeaf = $a;
  e.PDFPageTree = vc;
  e.PDFParser = Nc;
  e.PDFParsingError = vn;
  e.PDFRadioGroup = cd;
  e.PDFRawStream = ja;
  e.PDFRef = Wa;
  e.PDFSignature = hd;
  e.PDFStream = za;
  e.PDFStreamParsingError = xn;
  e.PDFStreamWriter = os;
  e.PDFString = fs;
  e.PDFTextField = ud;
  e.PDFTrailer = ts;
  e.PDFTrailerDict = is;
  e.PDFWidgetAnnotation = Xl;
  e.PDFWriter = rs;
  e.PDFXRefStreamParser = Rc;
  e.PageEmbeddingMismatchedContextError = sn;
  e.PageSizes = md;
  e.PngEmbedder = kl;
  e.PrivateConstructorError = $i;
  e.RemovePageFromEmptyDocumentError = Au;
  e.ReparseError = tn;
  e.RichTextFieldReadError = Ou;
  e.StalledParserError = Cn;
  e.StandardFontEmbedder = cs;
  e.StandardFontValues = _i;
  e.UnbalancedParenthesisError = kn;
  e.UnexpectedFieldTypeError = Tu;
  e.UnexpectedObjectTypeError = Qi;
  e.UnrecognizedStreamTypeError = an;
  e.UnsupportedEncodingError = en;
  e.ViewerPreferences = jl;
  e.addRandomSuffix = C;
  e.adjustDimsForRotation = Kc;
  e.appendBezierCurve = dh;
  e.appendQuadraticCurve = fh;
  e.arrayAsString = z;
  e.asNumber = Uc;
  e.asPDFName = Bc;
  e.asPDFNumber = Lc;
  e.assertEachIs = zi;
  e.assertInteger = Wi;
  e.assertIs = Li;
  e.assertIsOneOf = Di;
  e.assertIsOneOfOrUndefined = Oi;
  e.assertIsSubset = Ri;
  e.assertMultiple = Hi;
  e.assertOrUndefined = Ui;
  e.assertPositive = Gi;
  e.assertRange = ji;
  e.assertRangeOrUndefined = qi;
  e.backtick = Ti;
  e.beginMarkedContent = Bh;
  e.beginText = Sh;
  e.breakTextIntoLines = D;
  e.byAscendingId = j;
  e.bytesFor = de;
  e.canBeConvertedToUint8Array = X;
  e.charAtIndex = E;
  e.charFromCode = y;
  e.charFromHexCode = w;
  e.charSplit = I;
  e.cleanText = _;
  e.clip = Zc;
  e.clipEvenOdd = function () {
    return Ga.of(Xa.ClipEvenOdd);
  };
  e.closePath = ph;
  e.cmyk = jh;
  e.colorToComponents = Kh;
  e.componentsToColor = Xh;
  e.concatTransformationMatrix = eh;
  e.copyStringIntoBuffer = k;
  e.createPDFAcroField = oc;
  e.createPDFAcroFields = sc;
  e.createTypeErrorMsg = Bi;
  e.createValueErrorMsg = Ii;
  e.decodeFromBase64 = d;
  e.decodeFromBase64DataUri = p;
  e.decodePDFRawStream = Ll;
  e.defaultButtonAppearanceProvider = Ju;
  e.defaultCheckBoxAppearanceProvider = Yu;
  e.defaultDropdownAppearanceProvider = Qu;
  e.defaultOptionListAppearanceProvider = ed;
  e.defaultRadioGroupAppearanceProvider = Zu;
  e.defaultTextFieldAppearanceProvider = $u;
  e.degrees = zc;
  e.degreesToRadians = Hc;
  e.drawButton = yu;
  e.drawCheckBox = vu;
  e.drawCheckMark = gu;
  e.drawEllipse = fu;
  e.drawEllipsePath = du;
  e.drawImage = ou;
  e.drawLine = cu;
  e.drawLinesOfText = su;
  e.drawObject = Eh;
  e.drawOptionList = ku;
  e.drawPage = lu;
  e.drawRadioButton = bu;
  e.drawRectangle = hu;
  e.drawSvgPath = pu;
  e.drawText = function (e, t) {
    return [
      ch(),
      t.graphicsState && lh(t.graphicsState),
      Sh(),
      Gh(t.color),
      Ah(t.font, t.size),
      Ph(Gc(t.rotate), Gc(t.xSkew), Gc(t.ySkew), t.x, t.y),
      Ch(e),
      _h(),
      hh(),
    ].filter(Boolean);
  };
  e.drawTextField = xu;
  e.drawTextLines = wu;
  e.encodeToBase64 = u;
  e.endMarkedContent = Lh;
  e.endPath = xh;
  e.endText = _h;
  e.error = fe;
  e.escapeRegExp = S;
  e.escapedNewlineChars = A;
  e.fill = yh;
  e.fillAndStroke = wh;
  e.findLastMatch = N;
  e.getType = Ni;
  e.grayscale = Uh;
  e.hasSurrogates = $;
  e.hasUtf16BOM = ce;
  e.highSurrogate = Q;
  e.isNewlineChar = F;
  e.isStandardFont = Ai;
  e.isType = Mi;
  e.isWithinBMP = J;
  e.last = M;
  e.layoutCombedText = ju;
  e.layoutMultilineText = zu;
  e.layoutSinglelineText = qu;
  e.lineSplit = T;
  e.lineTo = mh;
  e.lowSurrogate = ee;
  e.mergeIntoTypedArray = L;
  e.mergeLines = P;
  e.mergeUint8Arrays = U;
  e.moveText = function (e, t) {
    return Ga.of(Xa.MoveText, [Lc(e), Lc(t)]);
  };
  e.moveTo = gh;
  e.newlineChars = ["\n", "\f", "\r", "\v"];
  e.nextLine = kh;
  e.normalizeAppearance = Hu;
  e.numberToString = he;
  e.padStart = x;
  e.parseDate = R;
  e.pdfDocEncodingDecode = Yi;
  e.pluckIndices = V;
  e.popGraphicsState = hh;
  e.pushGraphicsState = ch;
  e.radians = function (t) {
    Li(t, "radianAngle", ["number"]);
    return { type: e.RotationTypes.Radians, angle: t };
  };
  e.radiansToDegrees = Wc;
  e.range = G;
  e.rectangle = vh;
  e.rectanglesAreEqual = Fi;
  e.reduceRotation = Xc;
  e.restoreDashPattern = function () {
    return sh([], 0);
  };
  e.reverseArray = H;
  e.rgb = zh;
  e.rotateAndSkewTextDegreesAndTranslate = function (e, t, i, n, r) {
    return Ph(Hc(Uc(e)), Hc(Uc(t)), Hc(Uc(i)), n, r);
  };
  e.rotateAndSkewTextRadiansAndTranslate = Ph;
  e.rotateDegrees = rh;
  e.rotateInPlace = mu;
  e.rotateRadians = nh;
  e.rotateRectangle = Yc;
  e.scale = ih;
  e.setCharacterSpacing = function (e) {
    return Ga.of(Xa.SetCharacterSpacing, [Lc(e)]);
  };
  e.setCharacterSqueeze = function (e) {
    return Ga.of(Xa.SetTextHorizontalScaling, [Lc(e)]);
  };
  e.setDashPattern = sh;
  e.setFillingCmykColor = Nh;
  e.setFillingColor = Gh;
  e.setFillingGrayscaleColor = Ih;
  e.setFillingRgbColor = Oh;
  e.setFontAndSize = Ah;
  e.setGraphicsState = lh;
  e.setLineCap = oh;
  e.setLineHeight = Fh;
  e.setLineJoin = function (e) {
    return Ga.of(Xa.SetLineJoinStyle, [Lc(e)]);
  };
  e.setLineWidth = uh;
  e.setStrokingCmykColor = Mh;
  e.setStrokingColor = Vh;
  e.setStrokingGrayscaleColor = Dh;
  e.setStrokingRgbColor = Rh;
  e.setTextMatrix = Th;
  e.setTextRenderingMode = function (e) {
    return Ga.of(Xa.SetTextRenderingMode, [Lc(e)]);
  };
  e.setTextRise = function (e) {
    return Ga.of(Xa.SetTextRise, [Lc(e)]);
  };
  e.setWordSpacing = function (e) {
    return Ga.of(Xa.SetWordSpacing, [Lc(e)]);
  };
  e.showText = Ch;
  e.singleQuote = Pi;
  e.sizeInBytes = ue;
  e.skewDegrees = function (e, t) {
    return ah(Hc(Uc(e)), Hc(Uc(t)));
  };
  e.skewRadians = ah;
  e.sortedUniq = q;
  e.square = function (e, t, i) {
    return vh(e, t, i, i);
  };
  e.stroke = bh;
  e.sum = W;
  e.toCharCode = g;
  e.toCodePoint = m;
  e.toDegrees = Vc;
  e.toHexString = b;
  e.toHexStringOfMinLength = v;
  e.toRadians = Gc;
  e.toUint8Array = K;
  e.translate = th;
  e.typedArrayFor = B;
  e.utf16Decode = ie;
  e.utf16Encode = Z;
  e.utf8Encode = function (e, t) {
    if (void 0 === t) t = !0;
    var i = [];
    if (t) i.push(239, 187, 191);
    for (var n = 0, r = e.length; n < r; ) {
      var a = e.codePointAt(n);
      if (a < 128) {
        var s = 127 & a;
        i.push(s);
        n += 1;
      } else if (a < 2048) {
        s = ((a >> 6) & 31) | 192;
        var o = (63 & a) | 128;
        i.push(s, o);
        n += 1;
      } else if (a < 65536) {
        (s = ((a >> 12) & 15) | 224), (o = ((a >> 6) & 63) | 128);
        var l = (63 & a) | 128;
        i.push(s, o, l);
        n += 1;
      } else if (a < 1114112) {
        (s = ((a >> 18) & 7) | 240),
          (o = ((a >> 12) & 63) | 128),
          (l = ((a >> 6) & 63) | 128);
        var c = ((a >> 0) & 63) | 128;
        i.push(s, o, l, c);
        n += 2;
      } else throw new Error("Invalid code point: 0x" + b(a));
    }
    return new Uint8Array(i);
  };
  e.values = Si;
  e.waitForTick = Y;
  Object.defineProperty(e, "__esModule", { value: !0 });
});
const {
  degrees: degrees,
  rgb: rgb,
  PDFDocument: PDFDocument,
  StandardFonts: StandardFonts,
} = PDFLib;
function hexToRgb(e) {
  const t = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e);
  return rgb(
    parseInt(t[1], 16) / 256,
    parseInt(t[2], 16) / 256,
    parseInt(t[3], 16) / 256
  );
}
async function addImage(e, t) {
  const i = t.getPages(),
    { height: n, width: r, x: a, y: s, pages: o } = e,
    l = e.image.split(";base64,"),
    c = l[0],
    h = l[1],
    u = i[o],
    d = u.getSize().height,
    f = u.getSize().width;
  let p;
  if (c.endsWith("/png")) p = await t.embedPng(h);
  else if (c.endsWith("/jpeg")) p = await t.embedJpg(h);
  else throw new Error("Unknown image type " + c);
  const g = u.getRotation().angle % 360;
  u.drawImage(p, {
    ...getRotatedXY({
      initialRotation: g,
      x: a,
      y: s,
      width: r,
      height: n,
      pageWidth: f,
      pageHeight: d,
    }),
    width: r,
    height: n,
    rotate: degrees(g),
  });
}
async function addText(e, t) {
  const i = t.getPages(),
    {
      height: n,
      width: r,
      x: a,
      y: s,
      pages: o,
      fontName: l,
      color: c,
      size: h,
    } = e,
    u = i[o],
    d = u.getSize().height,
    f = u.getSize().width;
  let p;
  if ("COURIER NEW" == l.toUpperCase())
    p = await t.embedFont(StandardFonts.Courier);
  else if ("HELVETICA" == l.toUpperCase())
    p = await t.embedFont(StandardFonts.Helvetica);
  else if ("TIMES NEW ROMAN" == l.toUpperCase())
    p = await t.embedFont(StandardFonts.TimesRoman);
  else p = await t.embedFont(defaultFontBase64);
  const g = u.getRotation().angle % 360,
    m = n / e.text.split("\n").length;
  if ("false" === e.transparent)
    u.drawRectangle({
      ...getRotatedXY({
        initialRotation: g,
        x: a,
        y: s,
        width: r,
        height: n,
        pageWidth: f,
        pageHeight: d,
      }),
      width: r,
      height: n,
      borderWidth: 0,
      color: rgb(1, 1, 1),
      opacity: 1,
      borderOpacity: 0,
      rotate: degrees(g),
    });
  u.drawText(e.text, {
    ...getRotatedXY({
      initialRotation: g,
      x: a,
      y: s,
      width: r,
      height: p.heightAtSize(h),
      pageWidth: f,
      pageHeight: d,
    }),
    size: h,
    font: p,
    color: hexToRgb(c),
    lineHeight: m,
    rotate: degrees(g),
  });
}
function getRotatedXY({
  initialRotation: e,
  x: t,
  y: i,
  width: n,
  height: r,
  pageWidth: a,
  pageHeight: s,
}) {
  if (0 === e) i = s - (i + r);
  else if (180 === e) {
    t = a - t;
    i += r;
  } else if (90 === e) {
    const e = i;
    i = t;
    t = e + r;
  } else {
    const e = i;
    i = s - t;
    t = a - (e + r);
  }
  return { x: t, y: i };
}
async function modifyPdf(e, t) {
  if (t.images) for (const i of t.images) await addImage(i, e);
  if (t.annotations) for (const i of t.annotations) await addText(i, e);
  e.setProducer("PDFLite.co");
  e.setCreator("PDFLite.co");
  return await e.save();
}
async function modifyPdfBytes(e, t) {
  const i = await PDFDocument.load(e);
  return await modifyPdf(i, t);
}
async function convertImageToPdfBytes(e, t, i, n) {
  const r = e.split(";base64,"),
    a = r[0],
    s = r[1],
    o = await PDFDocument.create();
  let l;
  if (a.endsWith("/png")) l = await o.embedPng(s);
  else if (a.endsWith("/jpeg")) l = await o.embedJpg(s);
  else throw new Error("Unknown image type " + a);
  l.scaleToFit(t, i);
  const c = o.addPage();
  c.setSize(t, i);
  c.drawImage(l, { x: 0, y: 0, width: t, height: i });
  return await modifyPdf(o, n);
}
var quotes = JSON.parse(
  '[{"author":"Alan Kay (Computer Scientist, pioneering work on object-oriented programming)","text":"Most software today is very much like an Egyptian pyramid with millions of bricks piled on top of each other, with no structural integrity, but just done by brute force and thousands of slaves."},{"author":"Alan Kay (Computer Scientist, pioneering work on object-oriented programming)","text":"Technology is anything that wasn’t around when you were born."},{"author":"Alan Turing (Computer Scientist, widely considered to be the father of theoretical computer science and artificial intelligence)","text":"A computer would deserve to be called intelligent if it could deceive a human into believing that it was human."},{"author":"Alan Turing (Computer Scientist, widely considered to be the father of theoretical computer science and artificial intelligence)","text":"Machines take me by surprise with great frequency."},{"author":"Alan Turing (Computer Scientist, widely considered to be the father of theoretical computer science and artificial intelligence)","text":"We can only see a short distance ahead, but we can see plenty there that needs to be done."},{"author":"Albert Einstein (Scientist theoretical physicist)","text":"It has become appallingly obvious that our technology has exceeded our humanity"},{"author":"Bill Gates (American business magnate, investor, author, philanthropist and founder of Microsoft)","text":"Measuring programming progress by lines of code is like measuring aircraft building progress by weight."},{"author":"Bill Gates (American business magnate, investor, author, philanthropist and founder of Microsoft)","text":"The advance of technology is based on making it fit in so that you do not really even notice it, so it is part of everyday life."},{"author":"Bill Gates (American business magnate, investor, author, philanthropist and founder of Microsoft)","text":"Success today requires the agility and drive to constantly rethink, reinvigorate, react, and reinvent."},{"author":"Bjarne Stroustrup (Danish computer scientist, most notable for the creation and development of the widely used C++ programming language)","text":"I have always wished for my computer to be as easy to use as my telephone; my wish has come true because I can no longer figure out how to use my telephone."},{"author":"Bjarne Stroustrup (Danish computer scientist, most notable for the creation and development of the widely used C++ programming language)","text":"C makes it easy to shoot yourself in the foot; C++ makes it harder, but when you do it blows your whole leg off."},{"author":"Bjarne Stroustrup (Danish computer scientist, most notable for the creation and development of the widely used C++ programming language)","text":"Clearly, I reject the view that there is one way that is right for everyone and for every problem."},{"author":"Bjarne Stroustrup (Danish computer scientist, most notable for the creation and development of the widely used C++ programming language)","text":"A program that has not been tested does not work."},{"author":"Bruce Schneier (Cryptographer, computer security professional, and writer)","text":"Privacy is an inherent human right, and a requirement for maintaining the human condition with dignity and respect."},{"author":"Bruce Schneier (Cryptographer, computer security professional, and writer)","text":"It is poor civic hygiene to install technologies that could someday facilitate a police state."},{"author":"Bruce Schneier (Cryptographer, computer security professional, and writer)","text":"Anyone, from the most clueless amateur to the best cryptographer, can create an algorithm that he himself can not break."},{"author":"Douglas Adams (Author, scriptwriter, essayist, humorist, satirist and dramatist)","text":"First we thought the PC was a calculator. Then we found out how to turn numbers into letters with ASCII — and we thought it was a typewriter. Then we discovered graphics, and we thought it was a television. With the World Wide Web, we’ve realized it’s a brochure."},{"author":"Steve Jobs (Former co-founder, chairman, and chief executive officer (CEO) of Apple Inc)","text":"Great things in business are never done by one person. They are done by a team of people."},{"author":"Steve Jobs (Former co-founder, chairman, and chief executive officer (CEO) of Apple Inc)","text":"Innovation distinguishes between a leader and a follower."},{"author":"Steve Jobs (Former co-founder, chairman, and chief executive officer (CEO) of Apple Inc)","text":"Technology is nothing. What is important is that you have a faith in people, that they are basically good and smart, and if you give them tools, they will do wonderful things with them."}]'
);
function changeQuote() {
  var e = quotes[Math.floor(Math.random() * quotes.length)];
  $("#quote-text").text(e.text);
  $("#quote-author").text(e.author);
}

